analysis.algorithm.CEGAR = true
analysis.checkCounterexamples = false
analysis.name = svcomp21-lockator
analysis.programNames = race_02_verifier_error.i
analysis.reachedSet.useThreadModularWrapper = true
analysis.summaryEdges = true
analysis.threadOperationsTransform = true
analysis.traversal.order = bfs
analysis.traversal.useThreadModularOrdering = true
ARGCPA.cpa = cpa.composite.CompositeCPA
atomic_lock.lock = __VERIFIER_atomic_begin
atomic_lock.maxDepth = 2
atomic_lock.unlock = __VERIFIER_atomic_end
cegar.refiner = cpa.predicate.PredicateRefiner
cfa.threads.threadCreate = pthread_create
cfa.threads.threadJoin = pthread_join
CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.thread.ThreadCPA, cpa.lock.LockCPA, cpa.predicate.PredicateCPA
counterexample.export.allowImpreciseCounterexamples = true
counterexample.export.compressWitness = false
counterexample.export.exportWitness = true
counterexample.export.graphml = witness.graphml
cpa = cpa.threadmodular.ThreadModularCPA
cpa.arg.compressWitness = false
cpa.arg.proofWitness = witness.graphml
cpa.arg.witness.exportAssumptions = false
cpa.arg.witness.exportThreadId = true
cpa.callstack.skipRecursion = true
cpa.callstack.unsupportedFunctions = pthread_cond_wait,pthread_cond_broadcast,pthread_setspecific,__VERIFIER_atomic_CAS,__VERIFIER_atomic_TAS,pthread_getspecific,__VERIFIER_atomic_acquire,__VERIFIER_atomic_w,__VERIFIER_atomic_r,__VERIFIER_atomic_take_write_lock,__VERIFIER_atomic_take_read_lock,__VERIFIER_atomic_dec_a,__VERIFIER_atomic_dec_b,__VERIFIER_atomic_begin
cpa.composite.aggregateBasicBlocks = false
cpa.location.enableStatesWithEdges = true
cpa.lock.lockinfo = mutex_lock, atomic_lock
cpa.predicate.allowedUnsupportedFunctions = memset,memmove,memcpy,__atomic_store_n,__builtin_umull_overflow
cpa.predicate.defaultArrayLength = 1
cpa.predicate.encodeBitvectorAs = INTEGER
cpa.predicate.encodeFloatAs = RATIONAL
cpa.predicate.maxArrayLength = 1
cpa.predicate.useArraysForHeap = false
cpa.predicate.useMemoryRegions = true
cpa.thread.supportSelfCreation = true
log.level = INFO
mutex_lock.lock = pthread_mutex_lock, mutex_lock
mutex_lock.maxDepth = 2
mutex_lock.pthread_mutex_lock.parameters = 1
mutex_lock.pthread_mutex_unlock.parameters = 1
mutex_lock.unlock = pthread_mutex_unlock, mutex_unlock
report.export = true
solver.solver = SMTINTERPOL
specification = specification/default.spc
ThreadModularCPA.cpa = cpa.arg.ARGCPA
