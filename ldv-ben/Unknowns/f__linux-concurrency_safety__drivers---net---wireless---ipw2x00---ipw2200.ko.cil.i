/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __le16;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __le32;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned char u_char;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 33 
struct inode;

#line 34 
struct dentry;

#line 35 
struct user_namespace;

#line 250  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_46 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_46 seqlock_t;

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue wait_queue_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue {
   unsigned int flags ;
   void *private ;
   int (*func)(wait_queue_t *, unsigned int , int , void *) ;
   struct list_head task_list ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 1170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugobjects.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_47 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_47 nodemask_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39 
struct rw_semaphore;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct vm_area_struct;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 510  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 239 
enum hrtimer_restart;

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_49 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_48 {
   struct __anonstruct_49 __anonCompField___anonunion_48_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_48 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_12153 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_55 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_56 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_54 {
   struct __anonstruct_55 __anonCompField___anonunion_54_23 ;
   struct __anonstruct_56 __anonCompField___anonunion_54_24 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_54 __anonCompField_uprobe_task_25 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_57 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_57 mm_context_t;

#line 27 
struct address_space;

#line 28 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_58 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_60 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_64 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_63 {
   atomic_t _mapcount ;
   struct __anonstruct_64 __anonCompField___anonunion_63_28 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_62 {
   union __anonunion_63 __anonCompField___anonstruct_62_29 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_61 {
   unsigned long counters ;
   struct __anonstruct_62 __anonCompField___anonunion_61_30 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_59 {
   union __anonunion_60 __anonCompField___anonstruct_59_27 ;
   union __anonunion_61 __anonCompField___anonstruct_59_31 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_66 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_67 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_65 {
   struct list_head lru ;
   struct __anonstruct_66 __anonCompField___anonunion_65_33 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_67 __anonCompField___anonunion_65_34 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_68 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_58 __anonCompField_page_26 ;
   struct __anonstruct_59 __anonCompField_page_32 ;
   union __anonunion_65 __anonCompField_page_35 ;
   union __anonunion_68 __anonCompField_page_36 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_69 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_69 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 14 
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_161 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_161 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_162 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_162 kgid_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_163 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_163 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_165 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_166 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_167 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_168 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_170 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_169 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_170 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_171 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_172 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_164 {
   int _pad[28U] ;
   struct __anonstruct__kill_165 _kill ;
   struct __anonstruct__timer_166 _timer ;
   struct __anonstruct__rt_167 _rt ;
   struct __anonstruct__sigchld_168 _sigchld ;
   struct __anonstruct__sigfault_169 _sigfault ;
   struct __anonstruct__sigpoll_171 _sigpoll ;
   struct __anonstruct__sigsys_172 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_164 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct cred;

#line 38 
struct key_type;

#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_179 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_180 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_182 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_181 {
   struct keyring_index_key index_key ;
   struct __anonstruct_182 __anonCompField___anonunion_181_49 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_183 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_185 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_184 {
   union __anonunion_payload_185 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_179 __anonCompField_key_47 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_180 __anonCompField_key_48 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_181 __anonCompField_key_50 ;
   union __anonunion_type_data_183 type_data ;
   union __anonunion_184 __anonCompField_key_51 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
union __anonunion_186 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_186 __anonCompField_idr_layer_52 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 31 
struct kernfs_node;

#line 32 
struct kernfs_ops;

#line 33 
struct kernfs_open_file;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270 
struct kernfs_root;

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct pipe_inode_info;

#line 1173 
struct uts_namespace;

#line 1174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/prefetch.h"
struct iattr;

#line 57 
struct super_block;

#line 58 
struct file_system_type;

#line 59 
struct kernfs_open_node;

#line 60 
struct kernfs_iattrs;

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/prefetch.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_205 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_205 __anonCompField_kernfs_node_56 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct sock;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/stat.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct bin_attribute;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203 
struct of_device_id;

#line 203 
struct acpi_device_id;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 292  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct driver_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device_driver *, char *) ;
   ssize_t (*store)(struct device_driver *, char const *, size_t ) ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 1272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_206 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_206 __anonCompField_iov_iter_57 ;
   unsigned long nr_segs ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_208 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_208 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_209 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_209 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_210 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_210 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_211 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_211 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_212 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_212 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_213 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_213 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_214 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_214 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_215 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_215 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_216 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_217 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_216 ifr_ifrn ;
   union __anonunion_ifr_ifru_217 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_222 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_221 {
   struct __anonstruct_222 __anonCompField___anonunion_221_58 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_221 __anonCompField_lockref_59 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_224 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_223 {
   struct __anonstruct_224 __anonCompField___anonunion_223_60 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_223 __anonCompField_qstr_61 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_225 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_225 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_229 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_228 {
   struct __anonstruct_229 __anonCompField___anonunion_228_62 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_228 __anonCompField_radix_tree_node_63 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct poll_table_struct;

#line 63 
struct kstatfs;

#line 64 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_233 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_233 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_234 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_234 __anonCompField_kqid_65 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_237 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_238 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_239 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_237 __anonCompField_inode_66 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_238 __anonCompField_inode_67 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_239 __anonCompField_inode_68 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_240 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_240 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 947 
struct net;

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19 
struct fasync_struct;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_242 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_241 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_242 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_241 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
enum ldv_24397 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_24397 socket_state;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_257 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_257 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_25709 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_262 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_263 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_25709 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_262 __anonCompField_nf_bridge_info_72 ;
   union __anonunion_263 __anonCompField_nf_bridge_info_73 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_266 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_265 {
   u64 v64 ;
   struct __anonstruct_266 __anonCompField___anonunion_265_74 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_265 __anonCompField_skb_mstamp_75 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_269 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_268 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_269 __anonCompField___anonstruct_268_76 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_267 {
   struct __anonstruct_268 __anonCompField___anonunion_267_77 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_271 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_270 {
   __wsum csum ;
   struct __anonstruct_271 __anonCompField___anonunion_270_79 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_272 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_273 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_274 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_267 __anonCompField_sk_buff_78 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_270 __anonCompField_sk_buff_80 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_272 __anonCompField_sk_buff_81 ;
   __u32 secmark ;
   union __anonunion_273 __anonCompField_sk_buff_82 ;
   union __anonunion_274 __anonCompField_sk_buff_83 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118 
struct proc_dir_entry;

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_291 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_291 possible_net_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_28661 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_28661 phy_interface_t;

#line 126 
enum ldv_28714 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_28714 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 1628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_30426 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_30427 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_304 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_305 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_306 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_304 adj_list ;
   struct __anonstruct_all_adj_list_305 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_30426 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_30427 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_306 __anonCompField_net_device_93 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct iw_param {
   __s32 value ;
   __u8 fixed ;
   __u8 disabled ;
   __u16 flags ;
};

#line 680  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_point {
   void *pointer ;
   __u16 length ;
   __u16 flags ;
};

#line 691  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_freq {
   __s32 m ;
   __s16 e ;
   __u8 i ;
   __u8 flags ;
};

#line 708  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_quality {
   __u8 qual ;
   __u8 level ;
   __u8 noise ;
   __u8 updated ;
};

#line 720  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_discarded {
   __u32 nwid ;
   __u32 code ;
   __u32 fragment ;
   __u32 retries ;
   __u32 misc ;
};

#line 736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_missed {
   __u32 beacon ;
};

#line 756  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_scan_req {
   __u8 scan_type ;
   __u8 essid_len ;
   __u8 num_channels ;
   __u8 flags ;
   struct sockaddr bssid ;
   __u8 essid[32U] ;
   __u32 min_channel_time ;
   __u32 max_channel_time ;
   struct iw_freq channel_list[32U] ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_encode_ext {
   __u32 ext_flags ;
   __u8 tx_seq[8U] ;
   __u8 rx_seq[8U] ;
   struct sockaddr addr ;
   __u16 alg ;
   __u16 key_len ;
   __u8 key[0U] ;
};

#line 842  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_mlme {
   __u16 cmd ;
   __u16 reason_code ;
   struct sockaddr addr ;
};

#line 882  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_statistics {
   __u16 status ;
   struct iw_quality qual ;
   struct iw_discarded discard ;
   struct iw_missed miss ;
};

#line 897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
union iwreq_data {
   char name[16U] ;
   struct iw_point essid ;
   struct iw_param nwid ;
   struct iw_freq freq ;
   struct iw_param sens ;
   struct iw_param bitrate ;
   struct iw_param txpower ;
   struct iw_param rts ;
   struct iw_param frag ;
   __u32 mode ;
   struct iw_param retry ;
   struct iw_point encoding ;
   struct iw_param power ;
   struct iw_quality qual ;
   struct sockaddr ap_addr ;
   struct sockaddr addr ;
   struct iw_param param ;
   struct iw_point data ;
};

#line 957  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_range {
   __u32 throughput ;
   __u32 min_nwid ;
   __u32 max_nwid ;
   __u16 old_num_channels ;
   __u8 old_num_frequency ;
   __u8 scan_capa ;
   __u32 event_capa[6U] ;
   __s32 sensitivity ;
   struct iw_quality max_qual ;
   struct iw_quality avg_qual ;
   __u8 num_bitrates ;
   __s32 bitrate[32U] ;
   __s32 min_rts ;
   __s32 max_rts ;
   __s32 min_frag ;
   __s32 max_frag ;
   __s32 min_pmp ;
   __s32 max_pmp ;
   __s32 min_pmt ;
   __s32 max_pmt ;
   __u16 pmp_flags ;
   __u16 pmt_flags ;
   __u16 pm_capa ;
   __u16 encoding_size[8U] ;
   __u8 num_encoding_sizes ;
   __u8 max_encoding_tokens ;
   __u8 encoding_login_index ;
   __u16 txpower_capa ;
   __u8 num_txpower ;
   __s32 txpower[8U] ;
   __u8 we_version_compiled ;
   __u8 we_version_source ;
   __u16 retry_capa ;
   __u16 retry_flags ;
   __u16 r_time_flags ;
   __s32 min_retry ;
   __s32 max_retry ;
   __s32 min_r_time ;
   __s32 max_r_time ;
   __u16 num_channels ;
   __u8 num_frequency ;
   struct iw_freq freq[32U] ;
   __u32 enc_capa ;
};

#line 1068  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_priv_args {
   __u32 cmd ;
   __u16 set_args ;
   __u16 get_args ;
   char name[16U] ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wireless.h"
struct iw_request_info {
   __u16 cmd ;
   __u16 flags ;
};

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
typedef int (*iw_handler)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *);

#line 315  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
struct iw_handler_def {
   iw_handler (* const *standard)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *) ;
   __u16 num_standard ;
   __u16 num_private ;
   __u16 num_private_args ;
   iw_handler (* const *private)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *) ;
   struct iw_priv_args const *private_args ;
   struct iw_statistics *(*get_wireless_stats)(struct net_device *) ;
};

#line 381  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
struct iw_spy_data {
   int spy_number ;
   u_char spy_address[8U][6U] ;
   struct iw_quality spy_stat[8U] ;
   struct iw_quality spy_thr_low ;
   struct iw_quality spy_thr_high ;
   u_char spy_thr_under[8U] ;
};

#line 405 
struct libipw_device;

#line 406  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
struct iw_public_data {
   struct iw_spy_data *spy_data ;
   struct libipw_device *libipw ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct kernel_param;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_316 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_316 __anonCompField_kernel_param_94 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_323 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_323 __anonCompField_pci_dev_95 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmapool.h"
struct dma_pool;

#line 449  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
struct firmware {
   size_t size ;
   u8 const *data ;
   struct page **pages ;
   void *priv ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_hdr {
   __le16 frame_control ;
   __le16 duration_id ;
   u8 addr1[6U] ;
   u8 addr2[6U] ;
   u8 addr3[6U] ;
   __le16 seq_ctrl ;
   u8 addr4[6U] ;
};

#line 1204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_mcs_info {
   u8 rx_mask[10U] ;
   __le16 rx_highest ;
   u8 tx_params ;
   u8 reserved[3U] ;
};

#line 1229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_ht_cap {
   __le16 cap_info ;
   u8 ampdu_params_info ;
   struct ieee80211_mcs_info mcs ;
   __le16 extended_ht_cap_info ;
   __le32 tx_BF_cap_info ;
   u8 antenna_selection_info ;
};

#line 1354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_vht_mcs_info {
   __le16 rx_mcs_map ;
   __le16 rx_highest ;
   __le16 tx_mcs_map ;
   __le16 tx_highest ;
};

#line 1435  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_vht_cap {
   __le32 vht_cap_info ;
   struct ieee80211_vht_mcs_info supp_mcs ;
};

#line 2551  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct lib80211_crypto_ops {
   char const *name ;
   struct list_head list ;
   void *(*init)(int ) ;
   void (*deinit)(void *) ;
   int (*encrypt_mpdu)(struct sk_buff *, int , void *) ;
   int (*decrypt_mpdu)(struct sk_buff *, int , void *) ;
   int (*encrypt_msdu)(struct sk_buff *, int , void *) ;
   int (*decrypt_msdu)(struct sk_buff *, int , int , void *) ;
   int (*set_key)(void *, int , u8 *, void *) ;
   int (*get_key)(void *, int , u8 *, void *) ;
   void (*print_stats)(struct seq_file *, void *) ;
   unsigned long (*get_flags)(void *) ;
   unsigned long (*set_flags)(unsigned long , void *) ;
   int extra_mpdu_prefix_len ;
   int extra_mpdu_postfix_len ;
   int extra_msdu_prefix_len ;
   int extra_msdu_postfix_len ;
   struct module *owner ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/lib80211.h"
struct lib80211_crypt_data {
   struct list_head list ;
   struct lib80211_crypto_ops *ops ;
   void *priv ;
   atomic_t refcnt ;
};

#line 98  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/lib80211.h"
struct lib80211_crypt_info {
   char *name ;
   spinlock_t *lock ;
   struct lib80211_crypt_data *crypt[4U] ;
   int tx_keyidx ;
   struct list_head crypt_deinit_list ;
   struct timer_list crypt_deinit_timer ;
   int crypt_quiesced ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/lib80211.h"
struct ieee80211_radiotap_header {
   u8 it_version ;
   u8 it_pad ;
   __le16 it_len ;
   __le32 it_present ;
};

#line 470  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugfs.h"
enum nl80211_iftype {
    NL80211_IFTYPE_UNSPECIFIED = 0,
    NL80211_IFTYPE_ADHOC = 1,
    NL80211_IFTYPE_STATION = 2,
    NL80211_IFTYPE_AP = 3,
    NL80211_IFTYPE_AP_VLAN = 4,
    NL80211_IFTYPE_WDS = 5,
    NL80211_IFTYPE_MONITOR = 6,
    NL80211_IFTYPE_MESH_POINT = 7,
    NL80211_IFTYPE_P2P_CLIENT = 8,
    NL80211_IFTYPE_P2P_GO = 9,
    NL80211_IFTYPE_P2P_DEVICE = 10,
    NL80211_IFTYPE_OCB = 11,
    NUM_NL80211_IFTYPES = 12,
    NL80211_IFTYPE_MAX = 11
};

#line 2431  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
enum nl80211_reg_initiator {
    NL80211_REGDOM_SET_BY_CORE = 0,
    NL80211_REGDOM_SET_BY_USER = 1,
    NL80211_REGDOM_SET_BY_DRIVER = 2,
    NL80211_REGDOM_SET_BY_COUNTRY_IE = 3
};

#line 2484 
enum nl80211_dfs_regions {
    NL80211_DFS_UNSET = 0,
    NL80211_DFS_FCC = 1,
    NL80211_DFS_ETSI = 2,
    NL80211_DFS_JP = 3
};

#line 2491 
enum nl80211_user_reg_hint_type {
    NL80211_USER_REG_HINT_USER = 0,
    NL80211_USER_REG_HINT_CELL_BASE = 1,
    NL80211_USER_REG_HINT_INDOOR = 2
};

#line 2607 
enum nl80211_chan_width {
    NL80211_CHAN_WIDTH_20_NOHT = 0,
    NL80211_CHAN_WIDTH_20 = 1,
    NL80211_CHAN_WIDTH_40 = 2,
    NL80211_CHAN_WIDTH_80 = 3,
    NL80211_CHAN_WIDTH_80P80 = 4,
    NL80211_CHAN_WIDTH_160 = 5,
    NL80211_CHAN_WIDTH_5 = 6,
    NL80211_CHAN_WIDTH_10 = 7
};

#line 2618 
enum nl80211_bss_scan_width {
    NL80211_BSS_CHAN_WIDTH_20 = 0,
    NL80211_BSS_CHAN_WIDTH_10 = 1,
    NL80211_BSS_CHAN_WIDTH_5 = 2
};

#line 2650 
enum nl80211_auth_type {
    NL80211_AUTHTYPE_OPEN_SYSTEM = 0,
    NL80211_AUTHTYPE_SHARED_KEY = 1,
    NL80211_AUTHTYPE_FT = 2,
    NL80211_AUTHTYPE_NETWORK_EAP = 3,
    NL80211_AUTHTYPE_SAE = 4,
    __NL80211_AUTHTYPE_NUM = 5,
    NL80211_AUTHTYPE_MAX = 4,
    NL80211_AUTHTYPE_AUTOMATIC = 5
};

#line 2668 
enum nl80211_mfp {
    NL80211_MFP_NO = 0,
    NL80211_MFP_REQUIRED = 1
};

#line 3734  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_seq {
   __u32 start ;
   __u32 offset ;
   __u32 len ;
};

#line 3871  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token {
   __u32 offset ;
   __u32 len ;
   __u8 token_stream[] ;
};

#line 3883  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token_feature {
   __u32 min_len ;
   __u32 max_len ;
   __u32 bufsize ;
};

#line 4131 
enum nl80211_dfs_state {
    NL80211_DFS_USABLE = 0,
    NL80211_DFS_UNAVAILABLE = 1,
    NL80211_DFS_AVAILABLE = 2
};

#line 4153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_vendor_cmd_info {
   __u32 vendor_id ;
   __u32 subcmd ;
};

#line 4581 
enum environment_cap {
    ENVIRON_ANY = 0,
    ENVIRON_INDOOR = 1,
    ENVIRON_OUTDOOR = 2
};

#line 4587  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct regulatory_request {
   struct callback_head callback_head ;
   int wiphy_idx ;
   enum nl80211_reg_initiator initiator ;
   enum nl80211_user_reg_hint_type user_reg_hint_type ;
   char alpha2[2U] ;
   enum nl80211_dfs_regions dfs_region ;
   bool intersect ;
   bool processed ;
   enum environment_cap country_ie_env ;
   struct list_head list ;
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_freq_range {
   u32 start_freq_khz ;
   u32 end_freq_khz ;
   u32 max_bandwidth_khz ;
};

#line 185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_power_rule {
   u32 max_antenna_gain ;
   u32 max_eirp ;
};

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_reg_rule {
   struct ieee80211_freq_range freq_range ;
   struct ieee80211_power_rule power_rule ;
   u32 flags ;
   u32 dfs_cac_ms ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_regdomain {
   struct callback_head callback_head ;
   u32 n_reg_rules ;
   char alpha2[3U] ;
   enum nl80211_dfs_regions dfs_region ;
   struct ieee80211_reg_rule reg_rules[] ;
};

#line 205 
struct wiphy;

#line 206 
enum ieee80211_band {
    IEEE80211_BAND_2GHZ = 0,
    IEEE80211_BAND_5GHZ = 1,
    IEEE80211_BAND_60GHZ = 2,
    IEEE80211_NUM_BANDS = 3
};

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_channel {
   enum ieee80211_band band ;
   u16 center_freq ;
   u16 hw_value ;
   u32 flags ;
   int max_antenna_gain ;
   int max_power ;
   int max_reg_power ;
   bool beacon_found ;
   u32 orig_flags ;
   int orig_mag ;
   int orig_mpwr ;
   enum nl80211_dfs_state dfs_state ;
   unsigned long dfs_state_entered ;
   unsigned int dfs_cac_ms ;
};

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_rate {
   u32 flags ;
   u16 bitrate ;
   u16 hw_value ;
   u16 hw_value_short ;
};

#line 269  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_sta_ht_cap {
   u16 cap ;
   bool ht_supported ;
   u8 ampdu_factor ;
   u8 ampdu_density ;
   struct ieee80211_mcs_info mcs ;
};

#line 289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_sta_vht_cap {
   bool vht_supported ;
   u32 cap ;
   struct ieee80211_vht_mcs_info vht_mcs ;
};

#line 305  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_supported_band {
   struct ieee80211_channel *channels ;
   struct ieee80211_rate *bitrates ;
   enum ieee80211_band band ;
   int n_channels ;
   int n_bitrates ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
};

#line 387  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_chan_def {
   struct ieee80211_channel *chan ;
   enum nl80211_chan_width width ;
   u32 center_freq1 ;
   u32 center_freq2 ;
};

#line 608  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_crypto_settings {
   u32 wpa_versions ;
   u32 cipher_group ;
   int n_ciphers_pairwise ;
   u32 ciphers_pairwise[5U] ;
   int n_akm_suites ;
   u32 akm_suites[2U] ;
   bool control_port ;
   __be16 control_port_ethertype ;
   bool control_port_no_encrypt ;
};

#line 671  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct mac_address {
   u8 addr[6U] ;
};

#line 1395  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_ssid {
   u8 ssid[32U] ;
   u8 ssid_len ;
};

#line 1491  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_match_set {
   struct cfg80211_ssid ssid ;
   s32 rssi_thold ;
};

#line 1499  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_sched_scan_request {
   struct cfg80211_ssid *ssids ;
   int n_ssids ;
   u32 n_channels ;
   enum nl80211_bss_scan_width scan_width ;
   u32 interval ;
   u8 const *ie ;
   size_t ie_len ;
   u32 flags ;
   struct cfg80211_match_set *match_sets ;
   int n_match_sets ;
   s32 min_rssi_thold ;
   u32 delay ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   struct wiphy *wiphy ;
   struct net_device *dev ;
   unsigned long scan_start ;
   struct callback_head callback_head ;
   u32 owner_nlportid ;
   struct ieee80211_channel *channels[0U] ;
};

#line 1561 
enum cfg80211_signal_type {
    CFG80211_SIGNAL_TYPE_NONE = 0,
    CFG80211_SIGNAL_TYPE_MBM = 1,
    CFG80211_SIGNAL_TYPE_UNSPEC = 2
};

#line 1766  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_ibss_params {
   u8 const *ssid ;
   u8 const *bssid ;
   struct cfg80211_chan_def chandef ;
   u8 const *ie ;
   u8 ssid_len ;
   u8 ie_len ;
   u16 beacon_interval ;
   u32 basic_rates ;
   bool channel_fixed ;
   bool privacy ;
   bool control_port ;
   bool userspace_handles_dfs ;
   int mcast_rate[3U] ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
};

#line 1814  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_connect_params {
   struct ieee80211_channel *channel ;
   struct ieee80211_channel *channel_hint ;
   u8 const *bssid ;
   u8 const *bssid_hint ;
   u8 const *ssid ;
   size_t ssid_len ;
   enum nl80211_auth_type auth_type ;
   u8 const *ie ;
   size_t ie_len ;
   bool privacy ;
   enum nl80211_mfp mfp ;
   struct cfg80211_crypto_settings crypto ;
   u8 const *key ;
   u8 key_len ;
   u8 key_idx ;
   u32 flags ;
   int bg_scan_period ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
   struct ieee80211_vht_cap vht_capa ;
   struct ieee80211_vht_cap vht_capa_mask ;
};

#line 1916  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_pkt_pattern {
   u8 const *mask ;
   u8 const *pattern ;
   int pattern_len ;
   int pkt_offset ;
};

#line 1933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_wowlan_tcp {
   struct socket *sock ;
   __be32 src ;
   __be32 dst ;
   u16 src_port ;
   u16 dst_port ;
   u8 dst_mac[6U] ;
   int payload_len ;
   u8 const *payload ;
   struct nl80211_wowlan_tcp_data_seq payload_seq ;
   u32 data_interval ;
   u32 wake_len ;
   u8 const *wake_data ;
   u8 const *wake_mask ;
   u32 tokens_size ;
   struct nl80211_wowlan_tcp_data_token payload_tok ;
};

#line 1968  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_wowlan {
   bool any ;
   bool disconnect ;
   bool magic_pkt ;
   bool gtk_rekey_failure ;
   bool eap_identity_req ;
   bool four_way_handshake ;
   bool rfkill_release ;
   struct cfg80211_pkt_pattern *patterns ;
   struct cfg80211_wowlan_tcp *tcp ;
   int n_patterns ;
   struct cfg80211_sched_scan_request *nd_config ;
};

#line 2736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_iface_limit {
   u16 max ;
   u16 types ;
};

#line 2797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_iface_combination {
   struct ieee80211_iface_limit const *limits ;
   u32 num_different_channels ;
   u16 max_interfaces ;
   u8 n_limits ;
   bool beacon_int_infra_match ;
   u8 radar_detect_widths ;
   u8 radar_detect_regions ;
};

#line 2869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_txrx_stypes {
   u16 tx ;
   u16 rx ;
};

#line 2885  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_wowlan_tcp_support {
   struct nl80211_wowlan_tcp_data_token_feature const *tok ;
   u32 data_payload_max ;
   u32 data_interval_max ;
   u32 wake_payload_max ;
   bool seq ;
};

#line 2910  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_wowlan_support {
   u32 flags ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
   int max_nd_match_sets ;
   struct wiphy_wowlan_tcp_support const *tcp ;
};

#line 2935  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_coalesce_support {
   int n_rules ;
   int max_delay ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
};

#line 2960  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_vendor_command {
   struct nl80211_vendor_cmd_info info ;
   u32 flags ;
   int (*doit)(struct wiphy *, struct wireless_dev *, void const *, int ) ;
};

#line 2981  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy {
   u8 perm_addr[6U] ;
   u8 addr_mask[6U] ;
   struct mac_address *addresses ;
   struct ieee80211_txrx_stypes const *mgmt_stypes ;
   struct ieee80211_iface_combination const *iface_combinations ;
   int n_iface_combinations ;
   u16 software_iftypes ;
   u16 n_addresses ;
   u16 interface_modes ;
   u16 max_acl_mac_addrs ;
   u32 flags ;
   u32 regulatory_flags ;
   u32 features ;
   u8 ext_features[1U] ;
   u32 ap_sme_capa ;
   enum cfg80211_signal_type signal_type ;
   int bss_priv_size ;
   u8 max_scan_ssids ;
   u8 max_sched_scan_ssids ;
   u8 max_match_sets ;
   u16 max_scan_ie_len ;
   u16 max_sched_scan_ie_len ;
   int n_cipher_suites ;
   u32 const *cipher_suites ;
   u8 retry_short ;
   u8 retry_long ;
   u32 frag_threshold ;
   u32 rts_threshold ;
   u8 coverage_class ;
   char fw_version[32U] ;
   u32 hw_version ;
   struct wiphy_wowlan_support const *wowlan ;
   struct cfg80211_wowlan *wowlan_config ;
   u16 max_remain_on_channel_duration ;
   u8 max_num_pmkids ;
   u32 available_antennas_tx ;
   u32 available_antennas_rx ;
   u32 probe_resp_offload ;
   u8 const *extended_capabilities ;
   u8 const *extended_capabilities_mask ;
   u8 extended_capabilities_len ;
   void const *privid ;
   struct ieee80211_supported_band *bands[3U] ;
   void (*reg_notifier)(struct wiphy *, struct regulatory_request *) ;
   struct ieee80211_regdomain const *regd ;
   struct device dev ;
   bool registered ;
   struct dentry *debugfsdir ;
   struct ieee80211_ht_cap const *ht_capa_mod_mask ;
   struct ieee80211_vht_cap const *vht_capa_mod_mask ;
   possible_net_t _net ;
   struct iw_handler_def const *wext ;
   struct wiphy_coalesce_support const *coalesce ;
   struct wiphy_vendor_command const *vendor_commands ;
   struct nl80211_vendor_cmd_info const *vendor_events ;
   int n_vendor_commands ;
   int n_vendor_events ;
   u16 max_ap_assoc_sta ;
   u8 max_num_csa_counters ;
   u8 max_adj_channel_rssi_comp ;
   char priv[0U] ;
};

#line 3369 
struct cfg80211_conn;

#line 3370 
struct cfg80211_internal_bss;

#line 3371 
struct cfg80211_cached_keys;

#line 3372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct __anonstruct_wext_368 {
   struct cfg80211_ibss_params ibss ;
   struct cfg80211_connect_params connect ;
   struct cfg80211_cached_keys *keys ;
   u8 const *ie ;
   size_t ie_len ;
   u8 bssid[6U] ;
   u8 prev_bssid[6U] ;
   u8 ssid[32U] ;
   s8 default_key ;
   s8 default_mgmt_key ;
   bool prev_bssid_valid ;
};

#line 3372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wireless_dev {
   struct wiphy *wiphy ;
   enum nl80211_iftype iftype ;
   struct list_head list ;
   struct net_device *netdev ;
   u32 identifier ;
   struct list_head mgmt_registrations ;
   spinlock_t mgmt_registrations_lock ;
   struct mutex mtx ;
   bool use_4addr ;
   bool p2p_started ;
   u8 address[6U] ;
   u8 ssid[32U] ;
   u8 ssid_len ;
   u8 mesh_id_len ;
   u8 mesh_id_up_len ;
   struct cfg80211_conn *conn ;
   struct cfg80211_cached_keys *connect_keys ;
   struct list_head event_list ;
   spinlock_t event_lock ;
   struct cfg80211_internal_bss *current_bss ;
   struct cfg80211_chan_def preset_chandef ;
   struct cfg80211_chan_def chandef ;
   bool ibss_fixed ;
   bool ibss_dfs_possible ;
   bool ps ;
   int ps_timeout ;
   int beacon_interval ;
   u32 ap_unexpected_nlportid ;
   bool cac_started ;
   unsigned long cac_start_time ;
   unsigned int cac_time_ms ;
   u32 owner_nlportid ;
   struct __anonstruct_wext_368 wext ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_rx_stats {
   u32 mac_time ;
   s8 rssi ;
   u8 signal ;
   u8 noise ;
   u16 rate ;
   u8 received_channel ;
   u8 control ;
   u8 mask ;
   u8 freq ;
   u16 len ;
   u64 tsf ;
   u32 beacon_time ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_frag_entry {
   unsigned long first_frag_time ;
   unsigned int seq ;
   unsigned int last_frag ;
   struct sk_buff *skb ;
   u8 src_addr[6U] ;
   u8 dst_addr[6U] ;
};

#line 256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_stats {
   unsigned int tx_unicast_frames ;
   unsigned int tx_multicast_frames ;
   unsigned int tx_fragments ;
   unsigned int tx_unicast_octets ;
   unsigned int tx_multicast_octets ;
   unsigned int tx_deferred_transmissions ;
   unsigned int tx_single_retry_frames ;
   unsigned int tx_multiple_retry_frames ;
   unsigned int tx_retry_limit_exceeded ;
   unsigned int tx_discards ;
   unsigned int rx_unicast_frames ;
   unsigned int rx_multicast_frames ;
   unsigned int rx_fragments ;
   unsigned int rx_unicast_octets ;
   unsigned int rx_multicast_octets ;
   unsigned int rx_fcs_errors ;
   unsigned int rx_discards_no_buffer ;
   unsigned int tx_discards_wrong_sa ;
   unsigned int rx_discards_undecryptable ;
   unsigned int rx_message_in_msg_fragments ;
   unsigned int rx_message_in_bad_msg_fragments ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_security {
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) active_key : 2 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) enabled : 1 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) unicast_uses_group : 1 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encrypt : 1 ;
   u8 auth_mode ;
   u8 encode_alg[4U] ;
   u8 key_sizes[4U] ;
   u8 keys[4U][32U] ;
   u8 level ;
   u16 flags ;
};

#line 351  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_hdr_3addr {
   __le16 frame_ctl ;
   __le16 duration_id ;
   u8 addr1[6U] ;
   u8 addr2[6U] ;
   u8 addr3[6U] ;
   __le16 seq_ctl ;
   u8 payload[0U] ;
};

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_hdr_4addr {
   __le16 frame_ctl ;
   __le16 duration_id ;
   u8 addr1[6U] ;
   u8 addr2[6U] ;
   u8 addr3[6U] ;
   __le16 seq_ctl ;
   u8 addr4[6U] ;
   u8 payload[0U] ;
};

#line 372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_hdr_3addrqos {
   __le16 frame_ctl ;
   __le16 duration_id ;
   u8 addr1[6U] ;
   u8 addr2[6U] ;
   u8 addr3[6U] ;
   __le16 seq_ctl ;
   u8 payload[0U] ;
   __le16 qos_ctl ;
};

#line 383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_info_element {
   u8 id ;
   u8 len ;
   u8 data[0U] ;
};

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_auth {
   struct libipw_hdr_3addr header ;
   __le16 algorithm ;
   __le16 transaction ;
   __le16 status ;
   struct libipw_info_element info_element[0U] ;
};

#line 415  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_channel_switch {
   u8 id ;
   u8 len ;
   u8 mode ;
   u8 channel ;
   u8 count ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_action_exchange {
   u8 token ;
   struct libipw_info_element info_element[0U] ;
};

#line 433  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
union __anonunion_format_369 {
   struct libipw_action_exchange exchange ;
   struct libipw_channel_switch channel_switch ;
};

#line 433  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_action {
   struct libipw_hdr_3addr header ;
   u8 category ;
   u8 action ;
   union __anonunion_format_369 format ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_disassoc {
   struct libipw_hdr_3addr header ;
   __le16 reason ;
};

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_probe_request {
   struct libipw_hdr_3addr header ;
   struct libipw_info_element info_element[0U] ;
};

#line 451  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_probe_response {
   struct libipw_hdr_3addr header ;
   __le32 time_stamp[2U] ;
   __le16 beacon_interval ;
   __le16 capability ;
   struct libipw_info_element info_element[0U] ;
};

#line 472  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_reassoc_request {
   struct libipw_hdr_3addr header ;
   __le16 capability ;
   __le16 listen_interval ;
   u8 current_ap[6U] ;
   struct libipw_info_element info_element[0U] ;
};

#line 480  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_assoc_response {
   struct libipw_hdr_3addr header ;
   __le16 capability ;
   __le16 status ;
   __le16 aid ;
   struct libipw_info_element info_element[0U] ;
};

#line 489  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_txb {
   u8 nr_frags ;
   u8 encrypted ;
   u8 rts_included ;
   u8 reserved ;
   u16 frag_size ;
   u16 payload_size ;
   struct sk_buff *fragments[0U] ;
};

#line 499  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_qos_information_element {
   u8 elementID ;
   u8 length ;
   u8 qui[3U] ;
   u8 qui_type ;
   u8 qui_subtype ;
   u8 version ;
   u8 ac_info ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_qos_parameters {
   __le16 cw_min[4U] ;
   __le16 cw_max[4U] ;
   u8 aifs[4U] ;
   u8 flag[4U] ;
   __le16 tx_op_limit[4U] ;
};

#line 571  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_qos_data {
   struct libipw_qos_parameters parameters ;
   int active ;
   int supported ;
   u8 param_count ;
   u8 old_param_count ;
};

#line 579  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_tim_parameters {
   u8 tim_count ;
   u8 tim_period ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_tpc_report {
   u8 transmit_power ;
   u8 link_margin ;
};

#line 603  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_csa {
   u8 mode ;
   u8 channel ;
   u8 count ;
};

#line 609  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_quiet {
   u8 count ;
   u8 period ;
   u8 duration ;
   u8 offset ;
};

#line 616  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_network {
   u8 bssid[6U] ;
   u8 channel ;
   u8 ssid[33U] ;
   u8 ssid_len ;
   struct libipw_qos_data qos_data ;
   struct libipw_rx_stats stats ;
   u16 capability ;
   u8 rates[12U] ;
   u8 rates_len ;
   u8 rates_ex[16U] ;
   u8 rates_ex_len ;
   unsigned long last_scanned ;
   u8 mode ;
   u32 flags ;
   u32 last_associate ;
   u32 time_stamp[2U] ;
   u16 beacon_interval ;
   u16 listen_interval ;
   u16 atim_window ;
   u8 erp_value ;
   u8 wpa_ie[64U] ;
   size_t wpa_ie_len ;
   u8 rsn_ie[64U] ;
   size_t rsn_ie_len ;
   struct libipw_tim_parameters tim ;
   u8 power_constraint ;
   struct libipw_tpc_report tpc_report ;
   struct libipw_csa csa ;
   struct libipw_quiet quiet ;
   struct list_head list ;
};

#line 665 
enum libipw_state {
    LIBIPW_UNINITIALIZED = 0,
    LIBIPW_INITIALIZED = 1,
    LIBIPW_ASSOCIATING = 2,
    LIBIPW_ASSOCIATED = 3,
    LIBIPW_AUTHENTICATING = 4,
    LIBIPW_AUTHENTICATED = 5,
    LIBIPW_SHUTDOWN = 6
};

#line 685  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_channel {
   u32 freq ;
   u8 channel ;
   u8 flags ;
   u8 max_power ;
};

#line 709  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_geo {
   u8 name[4U] ;
   u8 bg_channels ;
   u8 a_channels ;
   struct libipw_channel bg[14U] ;
   struct libipw_channel a[132U] ;
};

#line 717  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_device {
   struct net_device *dev ;
   struct wireless_dev wdev ;
   struct libipw_security sec ;
   struct libipw_stats ieee_stats ;
   struct libipw_geo geo ;
   struct ieee80211_supported_band bg_band ;
   struct ieee80211_supported_band a_band ;
   struct list_head network_free_list ;
   struct list_head network_list ;
   struct libipw_network *networks[128U] ;
   int scans ;
   int scan_age ;
   int iw_mode ;
   struct iw_spy_data spy_data ;
   spinlock_t lock ;
   int tx_headroom ;
   u32 config ;
   int open_wep ;
   int host_encrypt ;
   int host_encrypt_msdu ;
   int host_decrypt ;
   int host_mc_decrypt ;
   int host_strip_iv_icv ;
   int host_open_frag ;
   int ieee802_1x ;
   int wpa_enabled ;
   int drop_unencrypted ;
   int privacy_invoked ;
   size_t wpa_ie_len ;
   u8 *wpa_ie ;
   struct lib80211_crypt_info crypt_info ;
   int bcrx_sta_key ;
   struct libipw_frag_entry frag_cache[4U] ;
   unsigned int frag_next_idx ;
   u16 fts ;
   u16 rts ;
   u8 bssid[6U] ;
   enum libipw_state state ;
   int mode ;
   int modulation ;
   int freq_band ;
   int abg_true ;
   int perfect_rssi ;
   int worst_rssi ;
   u16 prev_seq_ctl ;
   void (*set_security)(struct net_device *, struct libipw_security *) ;
   netdev_tx_t (*hard_start_xmit)(struct libipw_txb *, struct net_device *, int ) ;
   int (*is_queue_full)(struct net_device *, int ) ;
   int (*handle_management)(struct net_device *, struct libipw_network *, u16 ) ;
   int (*is_qos_active)(struct net_device *, struct sk_buff *) ;
   int (*handle_auth)(struct net_device *, struct libipw_auth *) ;
   int (*handle_deauth)(struct net_device *, struct libipw_disassoc *) ;
   int (*handle_action)(struct net_device *, struct libipw_action *, struct libipw_rx_stats *) ;
   int (*handle_disassoc)(struct net_device *, struct libipw_disassoc *) ;
   int (*handle_beacon)(struct net_device *, struct libipw_probe_response *, struct libipw_network *) ;
   int (*handle_probe_response)(struct net_device *, struct libipw_probe_response *, struct libipw_network *) ;
   int (*handle_probe_request)(struct net_device *, struct libipw_probe_request *, struct libipw_rx_stats *) ;
   int (*handle_assoc_response)(struct net_device *, struct libipw_assoc_response *, struct libipw_network *) ;
   int (*handle_assoc_request)(struct net_device *) ;
   int (*handle_reassoc_request)(struct net_device *, struct libipw_reassoc_request *) ;
   u8 priv[0U] ;
};

#line 1024  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct ipw_qos_info {
   int qos_enable ;
   struct libipw_qos_parameters *def_qos_parm_OFDM ;
   struct libipw_qos_parameters *def_qos_parm_CCK ;
   u32 burst_duration_CCK ;
   u32 burst_duration_OFDM ;
   u16 qos_no_ack_mask ;
   int burst_enable ;
};

#line 373  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct clx2_queue {
   int n_bd ;
   int first_empty ;
   int last_used ;
   u32 reg_w ;
   u32 reg_r ;
   dma_addr_t dma_addr ;
   int low_mark ;
   int high_mark ;
};

#line 390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct machdr32 {
   __le16 frame_ctl ;
   __le16 duration ;
   u8 addr1[6U] ;
   u8 addr2[6U] ;
   u8 addr3[6U] ;
   __le16 seq_ctrl ;
   u8 addr4[6U] ;
   __le16 qos_ctrl ;
};

#line 401  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct machdr30 {
   __le16 frame_ctl ;
   __le16 duration ;
   u8 addr1[6U] ;
   u8 addr2[6U] ;
   u8 addr3[6U] ;
   __le16 seq_ctrl ;
   u8 addr4[6U] ;
};

#line 411  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct machdr26 {
   __le16 frame_ctl ;
   __le16 duration ;
   u8 addr1[6U] ;
   u8 addr2[6U] ;
   u8 addr3[6U] ;
   __le16 seq_ctrl ;
   __le16 qos_ctrl ;
};

#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct machdr24 {
   __le16 frame_ctl ;
   __le16 duration ;
   u8 addr1[6U] ;
   u8 addr2[6U] ;
   u8 addr3[6U] ;
   __le16 seq_ctrl ;
};

#line 430  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct tx_tfd_32 {
   struct machdr32 mchdr ;
   __le32 uivplaceholder[2U] ;
};

#line 436  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct tx_tfd_30 {
   struct machdr30 mchdr ;
   u8 reserved[2U] ;
   __le32 uivplaceholder[2U] ;
};

#line 443  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct tx_tfd_26 {
   struct machdr26 mchdr ;
   u8 reserved1[2U] ;
   __le32 uivplaceholder[2U] ;
   u8 reserved2[4U] ;
};

#line 451  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct tx_tfd_24 {
   struct machdr24 mchdr ;
   __le32 uivplaceholder[2U] ;
   u8 reserved[8U] ;
};

#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct tfd_command {
   u8 index ;
   u8 length ;
   __le16 reserved ;
   u8 payload[0U] ;
};

#line 467  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
union __anonunion_tfd_370 {
   struct tx_tfd_24 tfd_24 ;
   struct tx_tfd_26 tfd_26 ;
   struct tx_tfd_30 tfd_30 ;
   struct tx_tfd_32 tfd_32 ;
};

#line 467  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct tfd_data {
   __le32 work_area_ptr ;
   u8 station_number ;
   u8 reserved1 ;
   __le16 reserved2 ;
   u8 cmd_id ;
   u8 seq_num ;
   __le16 len ;
   u8 priority ;
   u8 tx_flags ;
   u8 tx_flags_ext ;
   u8 key_index ;
   u8 wepkey[16U] ;
   u8 rate ;
   u8 antenna ;
   __le16 next_packet_duration ;
   __le16 next_frag_len ;
   __le16 back_off_counter ;
   u8 retrylimit ;
   __le16 cwcurrent ;
   u8 reserved3 ;
   union __anonunion_tfd_370 tfd ;
   __le32 num_chunks ;
   __le32 chunk_ptr[6U] ;
   __le16 chunk_len[6U] ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct txrx_control_flags {
   u8 message_type ;
   u8 rx_seq_num ;
   u8 control_bits ;
   u8 reserved ;
};

#line 513  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
union __anonunion_u_371 {
   struct tfd_data data ;
   struct tfd_command cmd ;
   u8 raw[124U] ;
};

#line 513  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct tfd_frame {
   struct txrx_control_flags control_flags ;
   union __anonunion_u_371 u ;
};

#line 527  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct clx2_tx_queue {
   struct clx2_queue q ;
   struct tfd_frame *bd ;
   struct libipw_txb **txb ;
};

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
union __anonunion_success_372 {
   __le32 a[8U] ;
   __le32 b[4U] ;
   __le32 g[12U] ;
};

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
union __anonunion_failed_373 {
   __le32 a[8U] ;
   __le32 b[4U] ;
   __le32 g[12U] ;
};

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct rate_histogram {
   union __anonunion_success_372 success ;
   union __anonunion_failed_373 failed ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_cmd_stats {
   u8 cmd_id ;
   u8 seq_num ;
   __le16 good_sfd ;
   __le16 bad_plcp ;
   __le16 wrong_bssid ;
   __le16 valid_mpdu ;
   __le16 bad_mac_header ;
   __le16 reserved_frame_types ;
   __le16 rx_ina ;
   __le16 bad_crc32 ;
   __le16 invalid_cts ;
   __le16 invalid_acks ;
   __le16 long_distance_ina_fina ;
   __le16 dsp_silence_unreachable ;
   __le16 accumulated_rssi ;
   __le16 rx_ovfl_frame_tossed ;
   __le16 rssi_silence_threshold ;
   __le16 rx_ovfl_frame_supplied ;
   __le16 last_rx_frame_signal ;
   __le16 last_rx_frame_noise ;
   __le16 rx_autodetec_no_ofdm ;
   __le16 rx_autodetec_no_barker ;
   __le16 reserved ;
};

#line 588  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct notif_channel_result {
   u8 channel_num ;
   struct ipw_cmd_stats stats ;
   u8 uReserved ;
};

#line 594  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct notif_scan_complete {
   u8 scan_type ;
   u8 num_channels ;
   u8 status ;
   u8 reserved ;
};

#line 604  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct notif_frag_length {
   __le16 frag_length ;
   __le16 reserved ;
};

#line 609  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct notif_beacon_state {
   __le32 state ;
   __le32 number ;
};

#line 614  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct notif_tgi_tx_key {
   u8 key_state ;
   u8 security_type ;
   u8 station_index ;
   u8 reserved ;
};

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct notif_link_deterioration {
   struct ipw_cmd_stats stats ;
   u8 rate ;
   u8 modulation ;
   struct rate_histogram histogram ;
   u8 silence_notification_type ;
   __le16 silence_count ;
};

#line 633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct notif_association {
   u8 state ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct notif_authenticate {
   u8 state ;
   struct machdr24 addr ;
   __le16 status ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct notif_calibration {
   u8 data[104U] ;
};

#line 647  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct notif_noise {
   __le32 value ;
};

#line 651  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
union __anonunion_u_374 {
   struct notif_association assoc ;
   struct notif_authenticate auth ;
   struct notif_channel_result channel_result ;
   struct notif_scan_complete scan_complete ;
   struct notif_frag_length frag_len ;
   struct notif_beacon_state beacon_state ;
   struct notif_tgi_tx_key tgi_tx_key ;
   struct notif_link_deterioration link_deterioration ;
   struct notif_calibration calibration ;
   struct notif_noise noise ;
   u8 raw[0U] ;
};

#line 651  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_rx_notification {
   u8 reserved[8U] ;
   u8 subtype ;
   u8 flags ;
   __le16 size ;
   union __anonunion_u_374 u ;
};

#line 671  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_rx_frame {
   __le32 reserved1 ;
   u8 parent_tsf[4U] ;
   u8 received_channel ;
   u8 frameStatus ;
   u8 rate ;
   u8 rssi ;
   u8 agc ;
   u8 rssi_dbm ;
   __le16 signal ;
   __le16 noise ;
   u8 antennaAndPhy ;
   u8 control ;
   u8 rtscts_rate ;
   u8 rtscts_seen ;
   __le16 length ;
   u8 data[0U] ;
};

#line 694  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_rx_header {
   u8 message_type ;
   u8 rx_seq_num ;
   u8 control_bits ;
   u8 reserved ;
};

#line 701  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
union __anonunion_u_375 {
   struct ipw_rx_frame frame ;
   struct ipw_rx_notification notification ;
};

#line 701  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_rx_packet {
   struct ipw_rx_header header ;
   union __anonunion_u_375 u ;
};

#line 709  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_rx_mem_buffer {
   dma_addr_t dma_addr ;
   struct sk_buff *skb ;
   struct list_head list ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_rx_queue {
   struct ipw_rx_mem_buffer pool[64U] ;
   struct ipw_rx_mem_buffer *queue[32U] ;
   u32 processed ;
   u32 read ;
   u32 write ;
   u32 free_count ;
   struct list_head rx_free ;
   struct list_head rx_used ;
   spinlock_t lock ;
};

#line 732  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct alive_command_responce {
   u8 alive_command ;
   u8 sequence_number ;
   __le16 software_revision ;
   u8 device_identifier ;
   u8 reserved1[5U] ;
   __le16 reserved2 ;
   __le16 reserved3 ;
   __le16 clock_settle_time ;
   __le16 powerup_settle_time ;
   __le16 reserved4 ;
   u8 time_stamp[5U] ;
   u8 ucode_valid ;
};

#line 747  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_rates {
   u8 num_rates ;
   u8 rates[12U] ;
};

#line 754  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct command_block {
   unsigned int control ;
   u32 source_addr ;
   u32 dest_addr ;
   unsigned int status ;
};

#line 761  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct fw_image_desc {
   unsigned long last_cb_index ;
   unsigned long current_cb_index ;
   struct command_block cb_list[64U] ;
   void *v_addr ;
   unsigned long p_addr ;
   unsigned long len ;
};

#line 771  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_sys_config {
   u8 bt_coexistence ;
   u8 reserved1 ;
   u8 answer_broadcast_ssid_probe ;
   u8 accept_all_data_frames ;
   u8 accept_non_directed_frames ;
   u8 exclude_unicast_unencrypted ;
   u8 disable_unicast_decryption ;
   u8 exclude_multicast_unencrypted ;
   u8 disable_multicast_decryption ;
   u8 antenna_diversity ;
   u8 pass_crc_to_host ;
   u8 dot11g_auto_detection ;
   u8 enable_cts_to_self ;
   u8 enable_multicast_filtering ;
   u8 bt_coexist_collision_thr ;
   u8 silence_threshold ;
   u8 accept_all_mgmt_bcpr ;
   u8 accept_all_mgmt_frames ;
   u8 pass_noise_stats_to_host ;
   u8 reserved3 ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_wep_key {
   u8 cmd_id ;
   u8 seq_num ;
   u8 key_index ;
   u8 key_size ;
   u8 key[16U] ;
};

#line 824  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_tgi_tx_key {
   u8 key_id ;
   u8 security_type ;
   u8 station_index ;
   u8 flags ;
   u8 key[16U] ;
   __le32 tx_counter[2U] ;
};

#line 851  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_scan_request_ext {
   __le32 full_scan_index ;
   u8 channels_list[54U] ;
   u8 scan_type[27U] ;
   u8 reserved ;
   __le16 dwell_time[5U] ;
};

#line 879  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_associate {
   u8 channel ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) auth_type : 4 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) auth_key : 4 ;
   u8 assoc_type ;
   u8 reserved ;
   __le16 policy_support ;
   u8 preamble_length ;
   u8 ieee_mode ;
   u8 bssid[6U] ;
   __le32 assoc_tsf_msw ;
   __le32 assoc_tsf_lsw ;
   __le16 capability ;
   __le16 listen_interval ;
   __le16 beacon_interval ;
   u8 dest[6U] ;
   __le16 atim_window ;
   u8 smr ;
   u8 reserved1 ;
   __le16 reserved2 ;
};

#line 904  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_supported_rates {
   u8 ieee_mode ;
   u8 num_rates ;
   u8 purpose ;
   u8 reserved ;
   u8 supported_rates[12U] ;
};

#line 912  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_rts_threshold {
   __le16 rts_threshold ;
   __le16 reserved ;
};

#line 917  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_frag_threshold {
   __le16 frag_threshold ;
   __le16 reserved ;
};

#line 922  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_retry_limit {
   u8 short_retry_limit ;
   u8 long_retry_limit ;
   __le16 reserved ;
};

#line 965  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_channel_tx_power {
   u8 channel_number ;
   s8 tx_power ;
};

#line 970  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_tx_power {
   u8 num_channels ;
   u8 ieee_mode ;
   struct ipw_channel_tx_power channels_tx_power[37U] ;
};

#line 987  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_sensitivity_calib {
   __le16 beacon_rssi_raw ;
   __le16 reserved ;
};

#line 992  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_cmd {
   u32 cmd ;
   u32 status ;
   u32 status_len ;
   u32 len ;
   u32 param[0U] ;
};

#line 1021  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_station_entry {
   u8 mac_addr[6U] ;
   u8 reserved ;
   u8 support_mode ;
};

#line 1081  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct average {
   s16 entries[8U] ;
   u8 pos ;
   u8 init ;
   s32 sum ;
};

#line 1089  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_ibss_seq {
   u8 mac[6U] ;
   u16 seq_num ;
   u16 frag_num ;
   unsigned long packet_time ;
   struct list_head list ;
};

#line 1100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_error_elem {
   u32 desc ;
   u32 time ;
   u32 blink1 ;
   u32 blink2 ;
   u32 link1 ;
   u32 link2 ;
   u32 data ;
};

#line 1110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_event {
   u32 event ;
   u32 time ;
   u32 data ;
};

#line 1116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_fw_error {
   unsigned long jiffies ;
   u32 status ;
   u32 config ;
   u32 elem_len ;
   u32 log_len ;
   struct ipw_error_elem *elem ;
   struct ipw_event *log ;
   u8 payload[0U] ;
};

#line 1127 
enum ipw_prom_filter {
    IPW_PROM_CTL_HEADER_ONLY = 1,
    IPW_PROM_MGMT_HEADER_ONLY = 2,
    IPW_PROM_DATA_HEADER_ONLY = 4,
    IPW_PROM_ALL_HEADER_ONLY = 15,
    IPW_PROM_NO_TX = 16,
    IPW_PROM_NO_RX = 32,
    IPW_PROM_NO_CTL = 64,
    IPW_PROM_NO_MGMT = 128,
    IPW_PROM_NO_DATA = 256
};

#line 1139 
struct ipw_priv;

#line 1140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_prom_priv {
   struct ipw_priv *priv ;
   struct libipw_device *ieee ;
   enum ipw_prom_filter filter ;
   int tx_packets ;
   int rx_packets ;
};

#line 1150  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_rt_hdr {
   struct ieee80211_radiotap_header rt_hdr ;
   u64 rt_tsf ;
   u8 rt_flags ;
   u8 rt_rate ;
   __le16 rt_channel ;
   __le16 rt_chbitmask ;
   s8 rt_dbmsignal ;
   s8 rt_dbmnoise ;
   u8 rt_antenna ;
   u8 payload[0U] ;
};

#line 1172 
struct ipw_cmd_log;

#line 1172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_priv {
   struct libipw_device *ieee ;
   spinlock_t lock ;
   spinlock_t irq_lock ;
   struct mutex mutex ;
   struct pci_dev *pci_dev ;
   struct net_device *net_dev ;
   struct ipw_prom_priv *prom_priv ;
   struct net_device *prom_net_dev ;
   void *hw_base ;
   unsigned long hw_len ;
   struct fw_image_desc sram_desc ;
   struct alive_command_responce dino_alive ;
   wait_queue_head_t wait_command_queue ;
   wait_queue_head_t wait_state ;
   struct ipw_rx_queue *rxq ;
   struct clx2_tx_queue txq_cmd ;
   struct clx2_tx_queue txq[4U] ;
   u32 status ;
   u32 config ;
   u32 capability ;
   struct average average_missed_beacons ;
   s16 exp_avg_rssi ;
   s16 exp_avg_noise ;
   u32 port_type ;
   int rx_bufs_min ;
   int rx_pend_max ;
   u32 hcmd_seq ;
   u32 disassociate_threshold ;
   u32 roaming_threshold ;
   struct ipw_associate assoc_request ;
   struct libipw_network *assoc_network ;
   unsigned long ts_scan_abort ;
   struct ipw_supported_rates rates ;
   struct ipw_rates phy[3U] ;
   struct ipw_rates supp ;
   struct ipw_rates extended ;
   struct notif_link_deterioration last_link_deterioration ;
   struct ipw_cmd *hcmd ;
   wait_queue_head_t hcmd_wq ;
   u32 tsf_bcn[2U] ;
   struct notif_calibration calib ;
   u32 table0_addr ;
   u32 table0_len ;
   u32 table1_addr ;
   u32 table1_len ;
   u32 table2_addr ;
   u32 table2_len ;
   u8 essid[32U] ;
   u8 essid_len ;
   u8 nick[32U] ;
   u16 rates_mask ;
   u8 channel ;
   struct ipw_sys_config sys_config ;
   u32 power_mode ;
   u8 bssid[6U] ;
   u16 rts_threshold ;
   u8 mac_addr[6U] ;
   u8 num_stations ;
   u8 stations[32U][6U] ;
   u8 short_retry_limit ;
   u8 long_retry_limit ;
   u32 notif_missed_beacons ;
   u32 last_missed_beacons ;
   u32 last_tx_packets ;
   u32 last_rx_packets ;
   u32 last_tx_failures ;
   u32 last_rx_err ;
   u32 last_rate ;
   u32 missed_adhoc_beacons ;
   u32 missed_beacons ;
   u32 rx_packets ;
   u32 tx_packets ;
   u32 quality ;
   u8 speed_scan[100U] ;
   u8 speed_scan_pos ;
   u16 last_seq_num ;
   u16 last_frag_num ;
   unsigned long last_packet_time ;
   struct list_head ibss_mac_hash[31U] ;
   u8 eeprom[256U] ;
   u8 country[4U] ;
   int eeprom_delay ;
   struct iw_statistics wstats ;
   struct iw_public_data wireless_data ;
   int user_requested_scan ;
   u8 direct_scan_ssid[32U] ;
   u8 direct_scan_ssid_len ;
   struct delayed_work adhoc_check ;
   struct work_struct associate ;
   struct work_struct disassociate ;
   struct work_struct system_config ;
   struct work_struct rx_replenish ;
   struct delayed_work request_scan ;
   struct delayed_work request_direct_scan ;
   struct delayed_work request_passive_scan ;
   struct delayed_work scan_event ;
   struct work_struct adapter_restart ;
   struct delayed_work rf_kill ;
   struct work_struct up ;
   struct work_struct down ;
   struct delayed_work gather_stats ;
   struct work_struct abort_scan ;
   struct work_struct roam ;
   struct delayed_work scan_check ;
   struct work_struct link_up ;
   struct work_struct link_down ;
   struct tasklet_struct irq_tasklet ;
   u8 nic_type ;
   u32 led_activity_on ;
   u32 led_activity_off ;
   u32 led_association_on ;
   u32 led_association_off ;
   u32 led_ofdm_on ;
   u32 led_ofdm_off ;
   struct delayed_work led_link_on ;
   struct delayed_work led_link_off ;
   struct delayed_work led_act_off ;
   struct work_struct merge_networks ;
   struct ipw_cmd_log *cmdlog ;
   int cmdlog_len ;
   int cmdlog_pos ;
   u8 adapter ;
   s8 tx_power ;
   unsigned long suspend_at ;
   unsigned long suspend_time ;
   u32 pm_state[16U] ;
   struct ipw_fw_error *error ;
   u32 isr_inta ;
   struct ipw_qos_info qos_data ;
   struct work_struct qos_activate ;
   u32 indirect_dword ;
   u32 direct_dword ;
   u32 indirect_byte ;
};

#line 200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ctype.h"
struct ipw_fixed_rate {
   __le16 tx_rates ;
   __le16 reserved ;
};

#line 1957  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct host_cmd {
   u8 cmd ;
   u8 len ;
   u16 reserved ;
   u32 *param ;
};

#line 1966  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct cmdlog_host_cmd {
   u8 cmd ;
   u8 len ;
   __le16 reserved ;
   char param[124U] ;
};

#line 1973  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
struct ipw_cmd_log {
   unsigned long jiffies ;
   int retcode ;
   struct cmdlog_host_cmd cmd ;
};

#line 3098  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
struct fw_chunk {
   __le32 address ;
   __le32 length ;
};

#line 3403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
struct ipw_fw {
   __le32 ver ;
   __le32 boot_size ;
   __le32 ucode_size ;
   __le32 fw_size ;
   u8 data[0U] ;
};

#line 4034  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
struct ipw_status_code {
   u16 status ;
   char const *reason ;
};

#line 5495  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
struct ipw_network_match {
   struct libipw_network *network ;
   struct ipw_supported_rates rates ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_free_irq_10 {
   int arg0 ;
   int signal_pending ;
};

#line 18  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_14 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_12 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 31  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_13 {
   struct net_device *arg0 ;
   int signal_pending ;
};
void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/fvtp/.tmp_ipw2200.c"
void ldv_inline_asm(void);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/byteorder/generic.h"
__inline static void le32_add_cpu(__le32 *var, u32 val)
{
  
#line 150 
  *var += val;
  
#line 151 
  return;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
void __might_sleep(char const *, int, int);


#line 393 
unsigned long simple_strtoul(char const *, char **, unsigned int);


#line 394 
long simple_strtol(char const *, char **, unsigned int);


#line 402 
int sprintf(char *, char const * , ...);


#line 405 
int snprintf(char *, size_t, char const * , ...);


#line 418 
int sscanf(char const *, char const * , ...);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 48 
void __list_add(struct list_head *, struct list_head *, struct list_head *);


#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_add(struct list_head *new, struct list_head *head)
{
  
#line 63 
  __list_add(new,head,head->next);
  
#line 64 
  return;
}


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_add_tail(struct list_head *new, struct list_head *head)
{
  
#line 77 
  __list_add(new,head->prev,head);
  
#line 78 
  return;
}


#line 113 
void list_del(struct list_head *);


#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static int list_empty(struct list_head const *head)
{
  int __retres;
  
#line 189 
  __retres = (struct list_head const *)head->next == head;
  
#line 189 
  return __retres;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 60 
void *memmove(void *, void const *, size_t);


#line 63 
int memcmp(void const *, void const *, size_t);


#line 64 
size_t strlen(char const *);


#line 65 
char *strcpy(char *, char const *);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
char *strncpy(char *, char const *, __kernel_size_t);


#line 26 
size_t strlcpy(char *, char const *, size_t);


#line 50 
char *strchr(char const *, int);


#line 80 
__kernel_size_t strnlen(char const *, __kernel_size_t);


#line 121 
void *kmemdup(void const *, size_t, gfp_t);


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static int preempt_count(void)
{
  int __retres;
  int tmp;
  {
    int pfo_ret__;
    
#line 22 
    switch (4UL) {
      case (unsigned long)1: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)2: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)4: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)8: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      default: 
#line 22 
      ;
      
#line 22 
      __bad_percpu_size();
    }
    ldv_6320: 
#line 22 
    ;
    
#line 22 
    tmp = pfo_ret__;
  }
  
#line 22 
  __retres = tmp & 2147483647;
  
#line 22 
  return __retres;
}


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 45 
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_292(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 407 
static void ldv_spin_unlock_294(spinlock_t *lock);


#line 411 
static void ldv_spin_unlock_295(spinlock_t *lock);


#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 452 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 453 
  return;
}


#line 482 
static void ldv_spin_unlock_irqrestore_73(spinlock_t *lock, unsigned long flags);


#line 486 
static void ldv_spin_unlock_irqrestore_75(spinlock_t *lock, unsigned long flags);


#line 490 
static void ldv_spin_unlock_irqrestore_78(spinlock_t *lock, unsigned long flags);


#line 494 
static void ldv_spin_unlock_irqrestore_83(spinlock_t *lock, unsigned long flags);


#line 498 
static void ldv_spin_unlock_irqrestore_89(spinlock_t *lock, unsigned long flags);


#line 502 
static void ldv_spin_unlock_irqrestore_93(spinlock_t *lock, unsigned long flags);


#line 506 
static void ldv_spin_unlock_irqrestore_95(spinlock_t *lock, unsigned long flags);


#line 510 
static void ldv_spin_unlock_irqrestore_100(spinlock_t *lock, unsigned long flags);


#line 514 
static void ldv_spin_unlock_irqrestore_105(spinlock_t *lock, unsigned long flags);


#line 518 
static void ldv_spin_unlock_irqrestore_107(spinlock_t *lock, unsigned long flags);


#line 522 
static void ldv_spin_unlock_irqrestore_108(spinlock_t *lock, unsigned long flags);


#line 526 
static void ldv_spin_unlock_irqrestore_109(spinlock_t *lock, unsigned long flags);


#line 530 
static void ldv_spin_unlock_irqrestore_111(spinlock_t *lock, unsigned long flags);


#line 534 
static void ldv_spin_unlock_irqrestore_112(spinlock_t *lock, unsigned long flags);


#line 538 
static void ldv_spin_unlock_irqrestore_120(spinlock_t *lock, unsigned long flags);


#line 542 
static void ldv_spin_unlock_irqrestore_122(spinlock_t *lock, unsigned long flags);


#line 546 
static void ldv_spin_unlock_irqrestore_124(spinlock_t *lock, unsigned long flags);


#line 550 
static void ldv_spin_unlock_irqrestore_149(spinlock_t *lock, unsigned long flags);


#line 554 
static void ldv_spin_unlock_irqrestore_152(spinlock_t *lock, unsigned long flags);


#line 558 
static void ldv_spin_unlock_irqrestore_156(spinlock_t *lock, unsigned long flags);


#line 562 
static void ldv_spin_unlock_irqrestore_168(spinlock_t *lock, unsigned long flags);


#line 566 
static void ldv_spin_unlock_irqrestore_173(spinlock_t *lock, unsigned long flags);


#line 570 
static void ldv_spin_unlock_irqrestore_175(spinlock_t *lock, unsigned long flags);


#line 574 
static void ldv_spin_unlock_irqrestore_180(spinlock_t *lock, unsigned long flags);


#line 578 
static void ldv_spin_unlock_irqrestore_185(spinlock_t *lock, unsigned long flags);


#line 582 
static void ldv_spin_unlock_irqrestore_284(spinlock_t *lock, unsigned long flags);


#line 586 
static void ldv_spin_unlock_irqrestore_299(spinlock_t *lock, unsigned long flags);


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_79(struct mutex *ldv_func_arg1);


#line 41 
static void ldv_mutex_lock_84(struct mutex *ldv_func_arg1);


#line 45 
static void ldv_mutex_lock_90(struct mutex *ldv_func_arg1);


#line 49 
static void ldv_mutex_lock_113(struct mutex *ldv_func_arg1);


#line 53 
static void ldv_mutex_lock_117(struct mutex *ldv_func_arg1);


#line 57 
static void ldv_mutex_lock_126(struct mutex *ldv_func_arg1);


#line 61 
static void ldv_mutex_lock_129(struct mutex *ldv_func_arg1);


#line 65 
static void ldv_mutex_lock_153(struct mutex *ldv_func_arg1);


#line 69 
static void ldv_mutex_lock_157(struct mutex *ldv_func_arg1);


#line 73 
static void ldv_mutex_lock_160(struct mutex *ldv_func_arg1);


#line 77 
static void ldv_mutex_lock_162(struct mutex *ldv_func_arg1);


#line 81 
static void ldv_mutex_lock_165(struct mutex *ldv_func_arg1);


#line 85 
static void ldv_mutex_lock_177(struct mutex *ldv_func_arg1);


#line 89 
static void ldv_mutex_lock_181(struct mutex *ldv_func_arg1);


#line 93 
static void ldv_mutex_lock_188(struct mutex *ldv_func_arg1);


#line 97 
static void ldv_mutex_lock_190(struct mutex *ldv_func_arg1);


#line 101 
static void ldv_mutex_lock_192(struct mutex *ldv_func_arg1);


#line 105 
static void ldv_mutex_lock_194(struct mutex *ldv_func_arg1);


#line 109 
static void ldv_mutex_lock_196(struct mutex *ldv_func_arg1);


#line 113 
static void ldv_mutex_lock_199(struct mutex *ldv_func_arg1);


#line 117 
static void ldv_mutex_lock_201(struct mutex *ldv_func_arg1);


#line 121 
static void ldv_mutex_lock_203(struct mutex *ldv_func_arg1);


#line 125 
static void ldv_mutex_lock_207(struct mutex *ldv_func_arg1);


#line 129 
static void ldv_mutex_lock_209(struct mutex *ldv_func_arg1);


#line 133 
static void ldv_mutex_lock_213(struct mutex *ldv_func_arg1);


#line 137 
static void ldv_mutex_lock_215(struct mutex *ldv_func_arg1);


#line 141 
static void ldv_mutex_lock_217(struct mutex *ldv_func_arg1);


#line 145 
static void ldv_mutex_lock_219(struct mutex *ldv_func_arg1);


#line 149 
static void ldv_mutex_lock_221(struct mutex *ldv_func_arg1);


#line 153 
static void ldv_mutex_lock_223(struct mutex *ldv_func_arg1);


#line 157 
static void ldv_mutex_lock_226(struct mutex *ldv_func_arg1);


#line 161 
static void ldv_mutex_lock_228(struct mutex *ldv_func_arg1);


#line 165 
static void ldv_mutex_lock_231(struct mutex *ldv_func_arg1);


#line 169 
static void ldv_mutex_lock_233(struct mutex *ldv_func_arg1);


#line 173 
static void ldv_mutex_lock_235(struct mutex *ldv_func_arg1);


#line 177 
static void ldv_mutex_lock_237(struct mutex *ldv_func_arg1);


#line 181 
static void ldv_mutex_lock_240(struct mutex *ldv_func_arg1);


#line 185 
static void ldv_mutex_lock_242(struct mutex *ldv_func_arg1);


#line 189 
static void ldv_mutex_lock_244(struct mutex *ldv_func_arg1);


#line 193 
static void ldv_mutex_lock_247(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_lock_250(struct mutex *ldv_func_arg1);


#line 201 
static void ldv_mutex_lock_252(struct mutex *ldv_func_arg1);


#line 205 
static void ldv_mutex_lock_258(struct mutex *ldv_func_arg1);


#line 209 
static void ldv_mutex_lock_260(struct mutex *ldv_func_arg1);


#line 213 
static void ldv_mutex_lock_263(struct mutex *ldv_func_arg1);


#line 217 
static void ldv_mutex_lock_266(struct mutex *ldv_func_arg1);


#line 221 
static void ldv_mutex_lock_268(struct mutex *ldv_func_arg1);


#line 225 
static void ldv_mutex_lock_271(struct mutex *ldv_func_arg1);


#line 229 
static void ldv_mutex_lock_273(struct mutex *ldv_func_arg1);


#line 233 
static void ldv_mutex_lock_279(struct mutex *ldv_func_arg1);


#line 237 
static void ldv_mutex_lock_281(struct mutex *ldv_func_arg1);


#line 241 
static void ldv_mutex_lock_285(struct mutex *ldv_func_arg1);


#line 245 
static void ldv_mutex_lock_288(struct mutex *ldv_func_arg1);


#line 249 
static void ldv_mutex_lock_290(struct mutex *ldv_func_arg1);


#line 253 
static void ldv_mutex_lock_300(struct mutex *ldv_func_arg1);


#line 257 
static void ldv_mutex_lock_303(struct mutex *ldv_func_arg1);


#line 261 
static void ldv_mutex_lock_306(struct mutex *ldv_func_arg1);


#line 265 
static void ldv_mutex_lock_311(struct mutex *ldv_func_arg1);


#line 269 
static void ldv_mutex_lock_313(struct mutex *ldv_func_arg1);


#line 273 
static void ldv_mutex_lock_318(struct mutex *ldv_func_arg1);


#line 277 
static void ldv_mutex_lock_325(struct mutex *ldv_func_arg1);


#line 283 
void ldv_mutex_model_lock(struct mutex *, char *);


#line 285 
void ldv_mutex_model_unlock(struct mutex *, char *);


#line 287 
void __ldv_spin_lock(spinlock_t *);


#line 314 
static void ldv___ldv_spin_lock_72(spinlock_t *ldv_func_arg1);


#line 318 
static void ldv___ldv_spin_lock_74(spinlock_t *ldv_func_arg1);


#line 322 
static void ldv___ldv_spin_lock_76(spinlock_t *ldv_func_arg1);


#line 326 
static void ldv___ldv_spin_lock_81(spinlock_t *ldv_func_arg1);


#line 330 
static void ldv___ldv_spin_lock_88(spinlock_t *ldv_func_arg1);


#line 334 
static void ldv___ldv_spin_lock_92(spinlock_t *ldv_func_arg1);


#line 338 
static void ldv___ldv_spin_lock_94(spinlock_t *ldv_func_arg1);


#line 342 
static void ldv___ldv_spin_lock_99(spinlock_t *ldv_func_arg1);


#line 346 
static void ldv___ldv_spin_lock_101(spinlock_t *ldv_func_arg1);


#line 350 
static void ldv___ldv_spin_lock_106(spinlock_t *ldv_func_arg1);


#line 354 
static void ldv___ldv_spin_lock_110(spinlock_t *ldv_func_arg1);


#line 358 
static void ldv___ldv_spin_lock_119(spinlock_t *ldv_func_arg1);


#line 362 
static void ldv___ldv_spin_lock_121(spinlock_t *ldv_func_arg1);


#line 366 
static void ldv___ldv_spin_lock_123(spinlock_t *ldv_func_arg1);


#line 370 
static void ldv___ldv_spin_lock_148(spinlock_t *ldv_func_arg1);


#line 374 
static void ldv___ldv_spin_lock_151(spinlock_t *ldv_func_arg1);


#line 378 
static void ldv___ldv_spin_lock_155(spinlock_t *ldv_func_arg1);


#line 382 
static void ldv___ldv_spin_lock_167(spinlock_t *ldv_func_arg1);


#line 386 
static void ldv___ldv_spin_lock_172(spinlock_t *ldv_func_arg1);


#line 390 
static void ldv___ldv_spin_lock_174(spinlock_t *ldv_func_arg1);


#line 394 
static void ldv___ldv_spin_lock_179(spinlock_t *ldv_func_arg1);


#line 398 
static void ldv___ldv_spin_lock_184(spinlock_t *ldv_func_arg1);


#line 402 
static void ldv___ldv_spin_lock_283(spinlock_t *ldv_func_arg1);


#line 406 
static void ldv___ldv_spin_lock_296(spinlock_t *ldv_func_arg1);


#line 414 
void ldv_spin_model_lock(char *);


#line 415 
void ldv_spin_model_unlock(char *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 24 
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 284 
unsigned int jiffies_to_msecs(unsigned long const);


#line 292 
unsigned long __msecs_to_jiffies(unsigned int const);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long _msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 301 
  __retres = (unsigned long)(((long)m + 3L) / 4L);
  
#line 301 
  return __retres;
}


#line 354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 356 
  if (0 != 0) {
    unsigned long tmp;
    
#line 357 
    if ((int)m < 0) {
      
#line 358 
      __retres = 4611686018427387902UL;
      
#line 358 
      goto return_label;
    }
    else ;
    
#line 359 
    tmp = _msecs_to_jiffies(m);
    
#line 359 
    __retres = tmp;
    
#line 359 
    goto return_label;
  }
  else {
    unsigned long tmp_0;
    
#line 361 
    tmp_0 = __msecs_to_jiffies(m);
    
#line 361 
    __retres = tmp_0;
    
#line 361 
    goto return_label;
  }
  return_label: 
#line 356 
                return __retres;
}


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
void __init_waitqueue_head(wait_queue_head_t *, char const *, struct lock_class_key *);


#line 149 
void __wake_up(wait_queue_head_t *, unsigned int, int, void *);


#line 926 
long prepare_to_wait_event(wait_queue_head_t *, wait_queue_t *, int);


#line 927 
void finish_wait(wait_queue_head_t *, wait_queue_t *);


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timekeeping.h"
unsigned long get_seconds(void);


#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
void __mutex_init(struct mutex *, char const *, struct lock_class_key *);


#line 193 
static void ldv_mutex_unlock_80(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_unlock_85(struct mutex *ldv_func_arg1);


#line 201 
static void ldv_mutex_unlock_91(struct mutex *ldv_func_arg1);


#line 205 
static void ldv_mutex_unlock_114(struct mutex *ldv_func_arg1);


#line 209 
static void ldv_mutex_unlock_118(struct mutex *ldv_func_arg1);


#line 213 
static void ldv_mutex_unlock_127(struct mutex *ldv_func_arg1);


#line 217 
static void ldv_mutex_unlock_130(struct mutex *ldv_func_arg1);


#line 221 
static void ldv_mutex_unlock_154(struct mutex *ldv_func_arg1);


#line 225 
static void ldv_mutex_unlock_158(struct mutex *ldv_func_arg1);


#line 229 
static void ldv_mutex_unlock_161(struct mutex *ldv_func_arg1);


#line 233 
static void ldv_mutex_unlock_164(struct mutex *ldv_func_arg1);


#line 237 
static void ldv_mutex_unlock_166(struct mutex *ldv_func_arg1);


#line 241 
static void ldv_mutex_unlock_178(struct mutex *ldv_func_arg1);


#line 245 
static void ldv_mutex_unlock_182(struct mutex *ldv_func_arg1);


#line 249 
static void ldv_mutex_unlock_189(struct mutex *ldv_func_arg1);


#line 253 
static void ldv_mutex_unlock_191(struct mutex *ldv_func_arg1);


#line 257 
static void ldv_mutex_unlock_193(struct mutex *ldv_func_arg1);


#line 261 
static void ldv_mutex_unlock_195(struct mutex *ldv_func_arg1);


#line 265 
static void ldv_mutex_unlock_198(struct mutex *ldv_func_arg1);


#line 269 
static void ldv_mutex_unlock_200(struct mutex *ldv_func_arg1);


#line 273 
static void ldv_mutex_unlock_202(struct mutex *ldv_func_arg1);


#line 277 
static void ldv_mutex_unlock_204(struct mutex *ldv_func_arg1);


#line 281 
static void ldv_mutex_unlock_205(struct mutex *ldv_func_arg1);


#line 285 
static void ldv_mutex_unlock_206(struct mutex *ldv_func_arg1);


#line 289 
static void ldv_mutex_unlock_208(struct mutex *ldv_func_arg1);


#line 293 
static void ldv_mutex_unlock_210(struct mutex *ldv_func_arg1);


#line 297 
static void ldv_mutex_unlock_211(struct mutex *ldv_func_arg1);


#line 301 
static void ldv_mutex_unlock_212(struct mutex *ldv_func_arg1);


#line 305 
static void ldv_mutex_unlock_214(struct mutex *ldv_func_arg1);


#line 309 
static void ldv_mutex_unlock_216(struct mutex *ldv_func_arg1);


#line 313 
static void ldv_mutex_unlock_218(struct mutex *ldv_func_arg1);


#line 317 
static void ldv_mutex_unlock_220(struct mutex *ldv_func_arg1);


#line 321 
static void ldv_mutex_unlock_222(struct mutex *ldv_func_arg1);


#line 325 
static void ldv_mutex_unlock_224(struct mutex *ldv_func_arg1);


#line 329 
static void ldv_mutex_unlock_225(struct mutex *ldv_func_arg1);


#line 333 
static void ldv_mutex_unlock_227(struct mutex *ldv_func_arg1);


#line 337 
static void ldv_mutex_unlock_229(struct mutex *ldv_func_arg1);


#line 341 
static void ldv_mutex_unlock_230(struct mutex *ldv_func_arg1);


#line 345 
static void ldv_mutex_unlock_232(struct mutex *ldv_func_arg1);


#line 349 
static void ldv_mutex_unlock_234(struct mutex *ldv_func_arg1);


#line 353 
static void ldv_mutex_unlock_236(struct mutex *ldv_func_arg1);


#line 357 
static void ldv_mutex_unlock_238(struct mutex *ldv_func_arg1);


#line 361 
static void ldv_mutex_unlock_239(struct mutex *ldv_func_arg1);


#line 365 
static void ldv_mutex_unlock_241(struct mutex *ldv_func_arg1);


#line 369 
static void ldv_mutex_unlock_243(struct mutex *ldv_func_arg1);


#line 373 
static void ldv_mutex_unlock_245(struct mutex *ldv_func_arg1);


#line 377 
static void ldv_mutex_unlock_246(struct mutex *ldv_func_arg1);


#line 381 
static void ldv_mutex_unlock_248(struct mutex *ldv_func_arg1);


#line 385 
static void ldv_mutex_unlock_251(struct mutex *ldv_func_arg1);


#line 389 
static void ldv_mutex_unlock_253(struct mutex *ldv_func_arg1);


#line 393 
static void ldv_mutex_unlock_254(struct mutex *ldv_func_arg1);


#line 397 
static void ldv_mutex_unlock_255(struct mutex *ldv_func_arg1);


#line 401 
static void ldv_mutex_unlock_256(struct mutex *ldv_func_arg1);


#line 405 
static void ldv_mutex_unlock_257(struct mutex *ldv_func_arg1);


#line 409 
static void ldv_mutex_unlock_259(struct mutex *ldv_func_arg1);


#line 413 
static void ldv_mutex_unlock_261(struct mutex *ldv_func_arg1);


#line 417 
static void ldv_mutex_unlock_262(struct mutex *ldv_func_arg1);


#line 421 
static void ldv_mutex_unlock_264(struct mutex *ldv_func_arg1);


#line 425 
static void ldv_mutex_unlock_265(struct mutex *ldv_func_arg1);


#line 429 
static void ldv_mutex_unlock_267(struct mutex *ldv_func_arg1);


#line 433 
static void ldv_mutex_unlock_269(struct mutex *ldv_func_arg1);


#line 437 
static void ldv_mutex_unlock_270(struct mutex *ldv_func_arg1);


#line 441 
static void ldv_mutex_unlock_272(struct mutex *ldv_func_arg1);


#line 445 
static void ldv_mutex_unlock_275(struct mutex *ldv_func_arg1);


#line 449 
static void ldv_mutex_unlock_277(struct mutex *ldv_func_arg1);


#line 453 
static void ldv_mutex_unlock_280(struct mutex *ldv_func_arg1);


#line 457 
static void ldv_mutex_unlock_282(struct mutex *ldv_func_arg1);


#line 461 
static void ldv_mutex_unlock_287(struct mutex *ldv_func_arg1);


#line 465 
static void ldv_mutex_unlock_289(struct mutex *ldv_func_arg1);


#line 469 
static void ldv_mutex_unlock_291(struct mutex *ldv_func_arg1);


#line 473 
static void ldv_mutex_unlock_301(struct mutex *ldv_func_arg1);


#line 477 
static void ldv_mutex_unlock_304(struct mutex *ldv_func_arg1);


#line 481 
static void ldv_mutex_unlock_307(struct mutex *ldv_func_arg1);


#line 485 
static void ldv_mutex_unlock_312(struct mutex *ldv_func_arg1);


#line 489 
static void ldv_mutex_unlock_314(struct mutex *ldv_func_arg1);


#line 493 
static void ldv_mutex_unlock_319(struct mutex *ldv_func_arg1);


#line 497 
static void ldv_mutex_unlock_320(struct mutex *ldv_func_arg1);


#line 501 
static void ldv_mutex_unlock_321(struct mutex *ldv_func_arg1);


#line 505 
static void ldv_mutex_unlock_326(struct mutex *ldv_func_arg1);


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 253 
unsigned long round_jiffies_relative(unsigned long);


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void delayed_work_timer_fn(unsigned long);


#line 181 
void __init_work(struct work_struct *, int);


#line 352 
extern struct workqueue_struct *system_wq;


#line 433 
bool mod_delayed_work_on(int, struct workqueue_struct *, struct delayed_work *, unsigned long);


#line 444 
bool cancel_work_sync(struct work_struct *);


#line 447 
bool cancel_delayed_work(struct delayed_work *);


#line 448 
bool cancel_delayed_work_sync(struct delayed_work *);


#line 498  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
__inline static bool mod_delayed_work(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay)
{
  bool tmp;
  
#line 502 
  tmp = mod_delayed_work_on(8192,wq,dwork,delay);
  
#line 502 
  return tmp;
}


#line 560 
static bool ldv_schedule_work_96(struct work_struct *work);


#line 564 
static bool ldv_schedule_work_98(struct work_struct *work);


#line 568 
static bool ldv_schedule_work_102(struct work_struct *work);


#line 572 
static bool ldv_schedule_work_104(struct work_struct *work);


#line 576 
static bool ldv_schedule_work_115(struct work_struct *work);


#line 580 
static bool ldv_schedule_work_125(struct work_struct *work);


#line 584 
static bool ldv_schedule_work_131(struct work_struct *work);


#line 588 
static bool ldv_schedule_work_132(struct work_struct *work);


#line 592 
static bool ldv_schedule_work_134(struct work_struct *work);


#line 596 
static bool ldv_schedule_work_137(struct work_struct *work);


#line 600 
static bool ldv_schedule_work_138(struct work_struct *work);


#line 604 
static bool ldv_schedule_work_139(struct work_struct *work);


#line 608 
static bool ldv_schedule_work_140(struct work_struct *work);


#line 612 
static bool ldv_schedule_work_141(struct work_struct *work);


#line 616 
static bool ldv_schedule_work_144(struct work_struct *work);


#line 620 
static bool ldv_schedule_work_145(struct work_struct *work);


#line 624 
static bool ldv_schedule_work_150(struct work_struct *work);


#line 628 
static bool ldv_schedule_work_169(struct work_struct *work);


#line 632 
static bool ldv_schedule_work_170(struct work_struct *work);


#line 636 
static bool ldv_schedule_work_171(struct work_struct *work);


#line 640 
static bool ldv_schedule_work_176(struct work_struct *work);


#line 644 
static bool ldv_schedule_work_183(struct work_struct *work);


#line 648 
static bool ldv_schedule_work_197(struct work_struct *work);


#line 652 
static bool ldv_schedule_work_274(struct work_struct *work);


#line 656 
static bool ldv_schedule_work_276(struct work_struct *work);


#line 660 
static bool ldv_schedule_work_278(struct work_struct *work);


#line 664 
static bool ldv_schedule_work_286(struct work_struct *work);


#line 668 
static bool ldv_schedule_work_298(struct work_struct *work);


#line 672 
static bool ldv_schedule_work_329(struct work_struct *work);


#line 597 
static bool ldv_schedule_delayed_work_77(struct delayed_work *dwork, unsigned long delay);


#line 601 
static bool ldv_schedule_delayed_work_82(struct delayed_work *dwork, unsigned long delay);


#line 605 
static bool ldv_schedule_delayed_work_86(struct delayed_work *dwork, unsigned long delay);


#line 609 
static bool ldv_schedule_delayed_work_87(struct delayed_work *dwork, unsigned long delay);


#line 613 
static bool ldv_schedule_delayed_work_97(struct delayed_work *dwork, unsigned long delay);


#line 617 
static bool ldv_schedule_delayed_work_103(struct delayed_work *dwork, unsigned long delay);


#line 621 
static bool ldv_schedule_delayed_work_116(struct delayed_work *dwork, unsigned long delay);


#line 625 
static bool ldv_schedule_delayed_work_128(struct delayed_work *dwork, unsigned long delay);


#line 629 
static bool ldv_schedule_delayed_work_133(struct delayed_work *dwork, unsigned long delay);


#line 633 
static bool ldv_schedule_delayed_work_135(struct delayed_work *dwork, unsigned long delay);


#line 637 
static bool ldv_schedule_delayed_work_136(struct delayed_work *dwork, unsigned long delay);


#line 641 
static bool ldv_schedule_delayed_work_142(struct delayed_work *dwork, unsigned long delay);


#line 645 
static bool ldv_schedule_delayed_work_143(struct delayed_work *dwork, unsigned long delay);


#line 649 
static bool ldv_schedule_delayed_work_146(struct delayed_work *dwork, unsigned long delay);


#line 653 
static bool ldv_schedule_delayed_work_147(struct delayed_work *dwork, unsigned long delay);


#line 657 
static bool ldv_schedule_delayed_work_159(struct delayed_work *dwork, unsigned long delay);


#line 661 
static bool ldv_schedule_delayed_work_163(struct delayed_work *dwork, unsigned long delay);


#line 665 
static bool ldv_schedule_delayed_work_186(struct delayed_work *dwork, unsigned long delay);


#line 669 
static bool ldv_schedule_delayed_work_187(struct delayed_work *dwork, unsigned long delay);


#line 673 
static bool ldv_schedule_delayed_work_249(struct delayed_work *dwork, unsigned long delay);


#line 677 
static bool ldv_schedule_delayed_work_297(struct delayed_work *dwork, unsigned long delay);


#line 681 
static bool ldv_schedule_delayed_work_302(struct delayed_work *dwork, unsigned long delay);


#line 685 
static bool ldv_schedule_delayed_work_305(struct delayed_work *dwork, unsigned long delay);


#line 689 
static bool ldv_schedule_delayed_work_309(struct delayed_work *dwork, unsigned long delay);


#line 693 
static bool ldv_schedule_delayed_work_310(struct delayed_work *dwork, unsigned long delay);


#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned char readb(void const volatile *addr)
{
  unsigned char ret;
  
#line 57 
  ldv_inline_asm();
  
#line 56 
  return ret;
}


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile *addr)
{
  unsigned int ret;
  
#line 59 
  ldv_inline_asm();
  
#line 58 
  return ret;
}


#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writeb(unsigned char val, void volatile *addr)
{
  
#line 66 
  ldv_inline_asm();
  
#line 67 
  return;
}


#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writew(unsigned short val, void volatile *addr)
{
  
#line 67 
  ldv_inline_asm();
  
#line 68 
  return;
}


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void volatile *addr)
{
  
#line 68 
  ldv_inline_asm();
  
#line 69 
  return;
}


#line 195 
void iounmap(void volatile *);


#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void memcpy_toio(void volatile *dst, void const *src, size_t count)
{
  
#line 223 
  memcpy((void *)dst,src,count);
  
#line 224 
  return;
}


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
long schedule_timeout(long);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 418 
static void *kmalloc(size_t size, gfp_t flags);


#line 542 
static void *kcalloc(size_t n, size_t size, gfp_t flags);


#line 581 
static void *kzalloc(size_t size, gfp_t flags);


#line 5  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __bad_udelay(void);


#line 8 
void __udelay(unsigned long);


#line 10 
void __const_udelay(unsigned long);


#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
int sysfs_create_group(struct kobject *, struct attribute_group const *);


#line 255 
void sysfs_remove_group(struct kobject *, struct attribute_group const *);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 312  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
int driver_create_file(struct device_driver *, struct driver_attribute const *);


#line 314 
void driver_remove_file(struct device_driver *, struct driver_attribute const *);


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
void get_random_bytes(void *, int);


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 59 
void debug_dma_sync_single_for_cpu(struct device *, dma_addr_t, size_t, int);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_for_cpu(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 106 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 108 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 108 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 110 
    ldv_inline_asm();
    
#line 108 
    ;
  }
  else ;
  
#line 109 
  if (ops->sync_single_for_cpu != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 110 
    (*(ops->sync_single_for_cpu))(dev,addr,size,dir); else ;
  
#line 111 
  debug_dma_sync_single_for_cpu(dev,addr,size,(int)dir);
  
#line 112 
  return;
}


#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
int dma_supported(struct device *, u64);


#line 61 
int dma_set_mask(struct device *, u64);


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_coherent_mask(struct device *dev, u64 mask)
{
  int __retres;
  int tmp;
  
#line 103 
  tmp = dma_supported(dev,mask);
  
#line 103 
  if (tmp == 0) {
    
#line 104 
    __retres = -5;
    
#line 104 
    goto return_label;
  }
  else ;
  
#line 105 
  dev->coherent_dma_mask = mask;
  
#line 106 
  __retres = 0;
  return_label: 
#line 106 
                return __retres;
}


#line 775  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
void consume_skb(struct sk_buff *);


#line 783 
struct sk_buff *__alloc_skb(unsigned int, gfp_t, int, int);


#line 787  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *alloc_skb(unsigned int size, gfp_t priority)
{
  struct sk_buff *tmp;
  
#line 790 
  tmp = __alloc_skb(size,priority,0,-1);
  
#line 790 
  return tmp;
}


#line 843 
struct sk_buff *skb_copy(struct sk_buff const *, gfp_t);


#line 1567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_nonlinear(struct sk_buff const *skb)
{
  bool __retres;
  
#line 1569 
  __retres = (_Bool)(skb->data_len != 0U);
  
#line 1569 
  return __retres;
}


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1698 
unsigned char *skb_push(struct sk_buff *, unsigned int);


#line 1706 
unsigned char *skb_pull(struct sk_buff *, unsigned int);


#line 1761  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_tailroom(struct sk_buff const *skb)
{
  int __retres;
  unsigned int tmp_0;
  bool tmp;
  
#line 1763 
  tmp = skb_is_nonlinear(skb);
  
#line 1763 
  if ((int)tmp == 0) 
#line 1763 
                     tmp_0 = skb->end - skb->tail; else 
#line 1763 
                                                        tmp_0 = 0U;
  
#line 1763 
  __retres = (int)tmp_0;
  
#line 1763 
  return __retres;
}


#line 1789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reserve(struct sk_buff *skb, int len)
{
  
#line 1791 
  skb->data += len;
  
#line 1792 
  skb->tail += (unsigned int)len;
  
#line 1793 
  return;
}


#line 1923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reset_mac_header(struct sk_buff *skb)
{
  
#line 1925 
  skb->mac_header = (unsigned short)((long)skb->data - (long)skb->head);
  
#line 1926 
  return;
}


#line 2057 
void skb_trim(struct sk_buff *, unsigned int);


#line 2789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_copy_from_linear_data(struct sk_buff const *skb, void *to, unsigned int const len)
{
  
#line 2793 
  memcpy(to,(void const *)skb->data,(unsigned long)len);
  
#line 2794 
  return;
}


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_317(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 153 
static void ldv_free_irq_324(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 157 
static void ldv_free_irq_328(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 540 
static void ldv_tasklet_schedule_293(struct tasklet_struct *t);


#line 589 
static void ldv_tasklet_init_308(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3);


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 2515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  
#line 2517 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2518 
  return;
}


#line 2526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_start_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2528 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2528 
  netif_tx_start_queue(tmp);
  
#line 2529 
  return;
}


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_wake_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2552 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2552 
  netif_tx_wake_queue(tmp);
  
#line 2553 
  return;
}


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2941 
int netif_rx(struct sk_buff *);


#line 3047 
void netif_carrier_on(struct net_device *);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3117 
void netif_device_detach(struct net_device *);


#line 3119 
void netif_device_attach(struct net_device *);


#line 3355 
static int ldv_register_netdev_315(struct net_device *ldv_func_arg1);


#line 3359 
static int ldv_register_netdev_322(struct net_device *ldv_func_arg1);


#line 3364 
static void ldv_unregister_netdev_316(struct net_device *ldv_func_arg1);


#line 3368 
static void ldv_unregister_netdev_323(struct net_device *ldv_func_arg1);


#line 3372 
static void ldv_unregister_netdev_327(struct net_device *ldv_func_arg1);


#line 440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
void wireless_send_event(struct net_device *, unsigned int, union iwreq_data *, char const *);


#line 447 
int iw_handler_set_spy(struct net_device *, struct iw_request_info *, union iwreq_data *, char *);


#line 450 
int iw_handler_get_spy(struct net_device *, struct iw_request_info *, union iwreq_data *, char *);


#line 453 
int iw_handler_set_thrspy(struct net_device *, struct iw_request_info *, union iwreq_data *, char *);


#line 456 
int iw_handler_get_thrspy(struct net_device *, struct iw_request_info *, union iwreq_data *, char *);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211-wext.h"
int cfg80211_wext_giwname(struct net_device *, struct iw_request_info *, char *, char *);


#line 863  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
int pci_bus_read_config_dword(struct pci_bus *, unsigned int, int, u32 *);


#line 869 
int pci_bus_write_config_dword(struct pci_bus *, unsigned int, int, u32);


#line 891  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_dword(struct pci_dev const *dev, int where, u32 *val)
{
  int tmp;
  
#line 894 
  tmp = pci_bus_read_config_dword(dev->bus,dev->devfn,where,val);
  
#line 894 
  return tmp;
}


#line 904  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_write_config_dword(struct pci_dev const *dev, int where, u32 val)
{
  int tmp;
  
#line 907 
  tmp = pci_bus_write_config_dword(dev->bus,dev->devfn,where,val);
  
#line 907 
  return tmp;
}


#line 951 
int pci_enable_device(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 1026 
int pci_save_state(struct pci_dev *);


#line 1027 
void pci_restore_state(struct pci_dev *);


#line 1040 
int pci_set_power_state(struct pci_dev *, pci_power_t);


#line 1041 
pci_power_t pci_choose_state(struct pci_dev *, pm_message_t);


#line 1094 
int pci_request_regions(struct pci_dev *, char const *);


#line 1096 
void pci_release_regions(struct pci_dev *);


#line 1146 
static int ldv___pci_register_driver_330(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_331(struct pci_driver *ldv_func_arg1);


#line 1162 
static void ldv_pci_unregister_driver_332(struct pci_driver *ldv_func_arg1);


#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmapool.h"
struct dma_pool *dma_pool_create(char const *, struct device *, size_t, size_t, size_t);


#line 22 
void dma_pool_destroy(struct dma_pool *);


#line 24 
void *dma_pool_alloc(struct dma_pool *, gfp_t, dma_addr_t *);


#line 27 
void dma_pool_free(struct dma_pool *, void *, dma_addr_t);


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void *pci_alloc_consistent(struct pci_dev *hwdev, size_t size, dma_addr_t *dma_handle)
{
  void *tmp_0;
  struct device *tmp;
  
#line 19 
  ;
  
#line 19 
  ;
  
#line 19 
  if (hwdev != (struct pci_dev *)0) 
#line 19 
                                    tmp = & hwdev->dev; else 
#line 19 
                                                             tmp = (struct device *)0;
  
#line 19 
  tmp_0 = dma_alloc_attrs(tmp,size,dma_handle,32U,(struct dma_attrs *)0);
  
#line 19 
  return tmp_0;
}


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_free_consistent(struct pci_dev *hwdev, size_t size, void *vaddr, dma_addr_t dma_handle)
{
  struct device *tmp;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  if (hwdev != (struct pci_dev *)0) 
#line 34 
                                    tmp = & hwdev->dev; else 
#line 34 
                                                             tmp = (struct device *)0;
  
#line 34 
  dma_free_attrs(tmp,size,vaddr,dma_handle,(struct dma_attrs *)0);
  
#line 35 
  return;
}


#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static dma_addr_t pci_map_single(struct pci_dev *hwdev, void *ptr, size_t size, int direction)
{
  dma_addr_t tmp_0;
  struct device *tmp;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  if (hwdev != (struct pci_dev *)0) 
#line 40 
                                    tmp = & hwdev->dev; else 
#line 40 
                                                             tmp = (struct device *)0;
  
#line 40 
  tmp_0 = dma_map_single_attrs(tmp,ptr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 40 
  return tmp_0;
}


#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_unmap_single(struct pci_dev *hwdev, dma_addr_t dma_addr, size_t size, int direction)
{
  struct device *tmp;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  if (hwdev != (struct pci_dev *)0) 
#line 47 
                                    tmp = & hwdev->dev; else 
#line 47 
                                                             tmp = (struct device *)0;
  
#line 47 
  dma_unmap_single_attrs(tmp,dma_addr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 48 
  return;
}


#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_dma_sync_single_for_cpu(struct pci_dev *hwdev, dma_addr_t dma_handle, size_t size, int direction)
{
  struct device *tmp;
  
#line 82 
  ;
  
#line 82 
  ;
  
#line 82 
  ;
  
#line 82 
  if (hwdev != (struct pci_dev *)0) 
#line 82 
                                    tmp = & hwdev->dev; else 
#line 82 
                                                             tmp = (struct device *)0;
  
#line 82 
  dma_sync_single_for_cpu(tmp,dma_handle,size,(enum dma_data_direction)direction);
  
#line 83 
  return;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 115 
  tmp = dma_set_mask(& dev->dev,mask);
  
#line 115 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_consistent_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 120 
  tmp = dma_set_coherent_mask(& dev->dev,mask);
  
#line 120 
  return tmp;
}


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  
#line 1478 
  dev_set_drvdata(& pdev->dev,data);
  
#line 1479 
  return;
}


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static char const *pci_name(struct pci_dev const *pdev)
{
  char const *tmp;
  
#line 1486 
  tmp = dev_name(& pdev->dev);
  
#line 1486 
  return tmp;
}


#line 1666 
void *pci_ioremap_bar(struct pci_dev *, int);


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
int eth_mac_addr(struct net_device *, void *);


#line 47 
int eth_validate_addr(struct net_device *);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_broadcast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 161 
  __retres = (_Bool)((unsigned int)(((int)*((u16 const *)addr) & (int)*((u16 const *)(addr + 2U))) & (int)*((u16 const *)(addr + 4U))) == 65535U);
  
#line 161 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 const *addr)
{
  bool __retres;
  int tmp_3;
  int tmp_0;
  bool tmp;
  
#line 190 
  tmp = is_multicast_ether_addr(addr);
  
#line 190 
  if (tmp) 
#line 190 
           tmp_0 = 0; else 
#line 190 
                           tmp_0 = 1;
  
#line 190 
  if (tmp_0) {
    int tmp_2;
    bool tmp_1;
    
#line 190 
    tmp_1 = is_zero_ether_addr(addr);
    
#line 190 
    if (tmp_1) 
#line 190 
               tmp_2 = 0; else 
#line 190 
                               tmp_2 = 1;
    
#line 190 
    if (tmp_2) 
#line 190 
               tmp_3 = 1; else 
#line 190 
                               tmp_3 = 0;
  }
  else 
#line 190 
       tmp_3 = 0;
  
#line 190 
  __retres = (_Bool)(tmp_3 != 0);
  
#line 190 
  return __retres;
}


#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_broadcast_addr(u8 *addr)
{
  
#line 235 
  memset((void *)addr,255,6UL);
  
#line 236 
  return;
}


#line 244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_zero_addr(u8 *addr)
{
  
#line 246 
  memset((void *)addr,0,6UL);
  
#line 247 
  return;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool ether_addr_equal(u8 const *addr1, u8 const *addr2)
{
  bool __retres;
  
#line 313 
  u32 fold = (*((u32 const *)addr1) ^ *((u32 const *)addr2)) | (unsigned int)((int)*((u16 const *)(addr1 + 4U)) ^ (int)*((u16 const *)(addr2 + 4U)));
  
#line 316 
  __retres = (_Bool)(fold == 0U);
  
#line 316 
  return __retres;
}


#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/firmware.h"
int request_firmware(struct firmware const **, char const *, struct device *);


#line 51 
void release_firmware(struct firmware const *);


#line 3281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
__inline static void set_wiphy_dev(struct wiphy *wiphy, struct device *dev)
{
  
#line 3283 
  wiphy->dev.parent = dev;
  
#line 3284 
  return;
}


#line 3350 
int wiphy_register(struct wiphy *);


#line 3361 
void wiphy_unregister(struct wiphy *);


#line 4257 
void wiphy_rfkill_set_hw_state(struct wiphy *, bool);


#line 845  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
__inline static void *libipw_priv(struct net_device *dev)
{
  void *__retres;
  void *tmp;
  
#line 847 
  tmp = netdev_priv((struct net_device const *)dev);
  
#line 847 
  __retres = (void *)(& ((struct libipw_device *)tmp)->priv);
  
#line 847 
  return __retres;
}


#line 850  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
__inline static int libipw_is_valid_mode(struct libipw_device *ieee, int mode)
{
  int __retres;
  
#line 859 
  if (((mode & 1) != 0 && (ieee->modulation & 2) != 0) && (ieee->freq_band & 2) != 0) {
    
#line 862 
    __retres = 1;
    
#line 862 
    goto return_label;
  }
  else ;
  
#line 864 
  if (((mode & 4) != 0 && (ieee->modulation & 2) != 0) && (ieee->freq_band & 1) != 0) {
    
#line 867 
    __retres = 1;
    
#line 867 
    goto return_label;
  }
  else ;
  
#line 869 
  if (((mode & 2) != 0 && (ieee->modulation & 1) != 0) && (ieee->freq_band & 1) != 0) {
    
#line 872 
    __retres = 1;
    
#line 872 
    goto return_label;
  }
  else ;
  
#line 874 
  __retres = 0;
  return_label: 
#line 874 
                return __retres;
}


#line 877  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
__inline static int libipw_get_hdrlen(u16 fc)
{
  
#line 879 
  int hdrlen = 24;
  
#line 880 
  u16 stype = (unsigned short)((unsigned int)fc & 240U);
  
#line 882 
  switch ((int)fc & 12) {
    case 8: 
#line 883 
    ;
    
#line 884 
    if (((int)fc & 512) != 0 && ((int)fc & 256) != 0) 
#line 885 
                                                      hdrlen = 30; else ;
    
#line 886 
    if (((int)stype & 128) != 0) 
#line 887 
                                 hdrlen += 2; else ;
    
#line 888 
    goto ldv_52246;
    case 4: 
#line 889 
    ;
    
#line 890 
    switch ((int)fc & 240) {
      case 192: 
#line 891 
      ;
      case 208: 
#line 892 
      ;
      
#line 893 
      hdrlen = 10;
      
#line 894 
      goto ldv_52250;
      default: 
#line 895 
      ;
      
#line 896 
      hdrlen = 16;
      
#line 897 
      goto ldv_52250;
    }
    ldv_52250: 
#line 899 
    ;
    
#line 899 
    goto ldv_52246;
  }
  ldv_52246: 
#line 902 
  ;
  
#line 902 
  return hdrlen;
}


#line 949 
void free_libipw(struct net_device *, int);


#line 950 
struct net_device *alloc_libipw(int, int);


#line 951 
int libipw_change_mtu(struct net_device *, int);


#line 953 
void libipw_networks_age(struct libipw_device *, unsigned long);


#line 958 
netdev_tx_t libipw_xmit(struct sk_buff *, struct net_device *);


#line 959 
void libipw_txb_free(struct libipw_txb *);


#line 964 
int libipw_rx(struct libipw_device *, struct sk_buff *, struct libipw_rx_stats *);


#line 967 
void libipw_rx_mgt(struct libipw_device *, struct libipw_hdr_4addr *, struct libipw_rx_stats *);


#line 971 
struct libipw_geo const *libipw_get_geo(struct libipw_device *);


#line 972 
void libipw_set_geo(struct libipw_device *, struct libipw_geo const *);


#line 974 
int libipw_is_valid_channel(struct libipw_device *, u8);


#line 975 
int libipw_channel_to_index(struct libipw_device *, u8);


#line 976 
u8 libipw_freq_to_channel(struct libipw_device *, u32);


#line 983 
int libipw_wx_get_scan(struct libipw_device *, struct iw_request_info *, union iwreq_data *, char *);


#line 985 
int libipw_wx_set_encode(struct libipw_device *, struct iw_request_info *, union iwreq_data *, char *);


#line 988 
int libipw_wx_get_encode(struct libipw_device *, struct iw_request_info *, union iwreq_data *, char *);


#line 991 
int libipw_wx_set_encodeext(struct libipw_device *, struct iw_request_info *, union iwreq_data *, char *);


#line 994 
int libipw_wx_get_encodeext(struct libipw_device *, struct iw_request_info *, union iwreq_data *, char *);


#line 1003  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
__inline static int libipw_get_scans(struct libipw_device *ieee)
{
  int __retres;
  
#line 1005 
  __retres = ieee->scans;
  
#line 1005 
  return __retres;
}


#line 868  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.h"
__inline static void ipw_set_scan_type(struct ipw_scan_request_ext *scan, u8 index, u8 scan_type)
{
  
#line 871 
  if (((unsigned int)index & 1U) != 0U) 
#line 872 
                                        scan->scan_type[(int)((unsigned int)index / 2U)] = (unsigned char)(((int)scan->scan_type[(int)((unsigned int)index / 2U)] & -16) | ((int)scan_type & 15)); else 
                                                                    
#line 875 
                                                                    scan->scan_type[(int)((unsigned int)index / 2U)] = (unsigned char)(((int)scan->scan_type[(int)((unsigned int)index / 2U)] & 15) | ((int)scan_type << 4));
  
#line 878 
  return;
}


#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ctype.h"
extern unsigned char const _ctype[];


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw.h"
static u32 const ipw_cipher_suites[4U] = {1027073U, 1027077U, 1027074U, 1027076U};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int cmdlog = 0;

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int debug = 0;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int default_channel = 0;

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int network_mode = 0;

#line 98  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static u32 ipw_debug_level;

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int associate;

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int auto_create = 1;

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int led_support = 1;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int disable = 0;

#line 103  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int bt_coexist = 0;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int hwcrypto = 0;

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int roaming = 1;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static char const ipw_modes[4U] = {(char)97, (char)98, (char)103, (char)63};

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int antenna = 0;

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int rtap_iface = 0;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct ieee80211_rate ipw2200_rates[12U] = {{.flags = 0U, .bitrate = (unsigned short)10U, .hw_value = (unsigned short)0, .hw_value_short = (unsigned short)0}, {.flags = 1U, .bitrate = (unsigned short)20U, .hw_value = (unsigned short)0, .hw_value_short = (unsigned short)0}, {.flags = 1U, .bitrate = (unsigned short)55U, .hw_value = (unsigned short)0, .hw_value_short = (unsigned short)0}, {.flags = 1U, .bitrate = (unsigned short)110U, .hw_value = (unsigned short)0, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)60U, .hw_value = (unsigned short)0, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)90U, .hw_value = (unsigned short)0, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)120U, .hw_value = (unsigned short)0, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)180U, .hw_value = (unsigned short)0, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)240U, .hw_value = (unsigned short)0, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)360U, .hw_value = (unsigned short)0, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)480U, .hw_value = (unsigned short)0, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)540U, .hw_value = (unsigned short)0, .hw_value_short = (unsigned short)0}};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int qos_enable = 0;

#line 145  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int qos_burst_enable = 0;

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int burst_duration_CCK = 0;

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int burst_duration_OFDM = 0;

#line 150  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct libipw_qos_parameters def_qos_parameters_OFDM = {.cw_min = {(unsigned short)15U, (unsigned short)15U, (unsigned short)7U, (unsigned short)3U}, .cw_max = {(unsigned short)1023U, (unsigned short)1023U, (unsigned short)15U, (unsigned short)7U}, .aifs = {(unsigned char)1U, (unsigned char)5U, (unsigned char)0U, (unsigned char)0U}, .flag = {(unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U}, .tx_op_limit = {(unsigned short)0U, (unsigned short)0U, (unsigned short)3008U, (unsigned short)1504U}};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct libipw_qos_parameters def_qos_parameters_CCK = {.cw_min = {(unsigned short)31U, (unsigned short)31U, (unsigned short)15U, (unsigned short)7U}, .cw_max = {(unsigned short)1023U, (unsigned short)1023U, (unsigned short)31U, (unsigned short)15U}, .aifs = {(unsigned char)1U, (unsigned char)5U, (unsigned char)0U, (unsigned char)0U}, .flag = {(unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U}, .tx_op_limit = {(unsigned short)0U, (unsigned short)0U, (unsigned short)6016U, (unsigned short)3264U}};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct libipw_qos_parameters def_parameters_OFDM = {.cw_min = {(unsigned short)15U, (unsigned short)15U, (unsigned short)15U, (unsigned short)15U}, .cw_max = {(unsigned short)1023U, (unsigned short)1023U, (unsigned short)1023U, (unsigned short)1023U}, .aifs = {(unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U}, .flag = {(unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U}, .tx_op_limit = {(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U}};

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct libipw_qos_parameters def_parameters_CCK = {.cw_min = {(unsigned short)31U, (unsigned short)31U, (unsigned short)31U, (unsigned short)31U}, .cw_max = {(unsigned short)1023U, (unsigned short)1023U, (unsigned short)1023U, (unsigned short)1023U}, .aifs = {(unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U}, .flag = {(unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U}, .tx_op_limit = {(unsigned short)0U, (unsigned short)0U, (unsigned short)0U, (unsigned short)0U}};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static u8 qos_oui[3U] = {(unsigned char)0U, (unsigned char)80U, (unsigned char)242U};

#line 196  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int from_priority_to_tx_queue[8U] = {1, 2, 2, 1, 3, 3, 4, 4};

#line 201 
static u32 ipw_qos_get_burst_duration(struct ipw_priv *priv);


#line 203 
static int ipw_send_qos_params_command(struct ipw_priv *priv, struct libipw_qos_parameters *qos_param);


#line 205 
static int ipw_send_qos_info_command(struct ipw_priv *priv, struct libipw_qos_information_element *qos_param);


#line 209 
static struct iw_statistics *ipw_get_wireless_stats(struct net_device *dev);


#line 210 
static void ipw_remove_current_network(struct ipw_priv *priv);


#line 211 
static void ipw_rx(struct ipw_priv *priv);


#line 212 
static int ipw_queue_tx_reclaim(struct ipw_priv *priv, struct clx2_tx_queue *txq, int qindex);


#line 214 
static int ipw_queue_reset(struct ipw_priv *priv);


#line 216 
static int ipw_queue_tx_hcmd(struct ipw_priv *priv, int hcmd, void *buf, int len, int sync);


#line 219 
static void ipw_tx_queue_free(struct ipw_priv *priv);


#line 221 
static struct ipw_rx_queue *ipw_rx_queue_alloc(struct ipw_priv *priv);


#line 222 
static void ipw_rx_queue_free(struct ipw_priv *priv, struct ipw_rx_queue *rxq);


#line 223 
static void ipw_rx_queue_replenish(void *data);


#line 224 
static int ipw_up(struct ipw_priv *priv);


#line 225 
static void ipw_bg_up(struct work_struct *work);


#line 226 
static void ipw_down(struct ipw_priv *priv);


#line 227 
static void ipw_bg_down(struct work_struct *work);


#line 228 
static int ipw_config(struct ipw_priv *priv);


#line 229 
static int init_supported_rates(struct ipw_priv *priv, struct ipw_supported_rates *rates);


#line 231 
static void ipw_set_hwcrypto_keys(struct ipw_priv *priv);


#line 232 
static void ipw_send_wep_keys(struct ipw_priv *priv, int type);


#line 234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int snprint_line(char *buf, size_t count, u8 const *data, u32 len, u32 ofs)
{
  int out;
  int i;
  int j;
  int l;
  char c;
  int tmp;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  int tmp_5;
  
#line 240 
  out = snprintf(buf,count,"%08X",ofs);
  
#line 242 
  l = 0;
  
#line 242 
  i = 0;
  
#line 242 
  goto ldv_53254;
  ldv_53253: 
#line 243 
  ;
  
#line 243 
  tmp = snprintf(buf + out,count - (unsigned long)out," ");
  
#line 243 
  out = tmp + out;
  
#line 244 
  j = 0;
  
#line 244 
  goto ldv_53248;
  ldv_53247: 
#line 245 
  ;
  
#line 245 
  tmp_0 = snprintf(buf + out,count - (unsigned long)out,"%02X ",(int)*(data + (i * 8 + j)));
  
#line 246 
  out = tmp_0 + out;
  
#line 244 
  j += 1;
  
#line 244 
  l += 1;
  ldv_53248: 
#line 245 
  ;
  
#line 244 
  if (j <= 7 && (unsigned int)l < len) 
#line 246 
                                       goto ldv_53247; else 
#line 249 
                                                            goto ldv_53249;
  ldv_53249: 
#line 250 
  ;
  
#line 247 
  goto ldv_53251;
  ldv_53250: 
#line 248 
  ;
  
#line 248 
  tmp_1 = snprintf(buf + out,count - (unsigned long)out,"   ");
  
#line 248 
  out = tmp_1 + out;
  
#line 247 
  j += 1;
  ldv_53251: 
#line 248 
  ;
  
#line 247 
  if (j <= 7) 
#line 249 
              goto ldv_53250; else 
#line 252 
                                   goto ldv_53252;
  ldv_53252: 
#line 253 
  ;
  
#line 242 
  i += 1;
  ldv_53254: 
#line 243 
  ;
  
#line 242 
  if (i <= 1) 
#line 244 
              goto ldv_53253; else 
#line 247 
                                   goto ldv_53255;
  ldv_53255: 
#line 248 
  ;
  
#line 251 
  tmp_2 = snprintf(buf + out,count - (unsigned long)out," ");
  
#line 251 
  out = tmp_2 + out;
  
#line 252 
  l = 0;
  
#line 252 
  i = 0;
  
#line 252 
  goto ldv_53263;
  ldv_53262: 
#line 253 
  ;
  
#line 253 
  tmp_3 = snprintf(buf + out,count - (unsigned long)out," ");
  
#line 253 
  out = tmp_3 + out;
  
#line 254 
  j = 0;
  
#line 254 
  goto ldv_53257;
  ldv_53256: 
#line 255 
  ;
  
#line 255 
  c = (char)*(data + (i * 8 + j));
  
#line 256 
  if ((int)c < 0 || ((int)_ctype[(int)((unsigned char)c)] & 151) == 0) 
    
#line 257 
    c = (char)46; else ;
  
#line 259 
  tmp_4 = snprintf(buf + out,count - (unsigned long)out,"%c",(int)c);
  
#line 259 
  out = tmp_4 + out;
  
#line 254 
  j += 1;
  
#line 254 
  l += 1;
  ldv_53257: 
#line 255 
  ;
  
#line 254 
  if (j <= 7 && (unsigned int)l < len) 
#line 256 
                                       goto ldv_53256; else 
#line 259 
                                                            goto ldv_53258;
  ldv_53258: 
#line 260 
  ;
  
#line 262 
  goto ldv_53260;
  ldv_53259: 
#line 263 
  ;
  
#line 263 
  tmp_5 = snprintf(buf + out,count - (unsigned long)out," ");
  
#line 263 
  out = tmp_5 + out;
  
#line 262 
  j += 1;
  ldv_53260: 
#line 263 
  ;
  
#line 262 
  if (j <= 7) 
#line 264 
              goto ldv_53259; else 
#line 267 
                                   goto ldv_53261;
  ldv_53261: 
#line 268 
  ;
  
#line 252 
  i += 1;
  ldv_53263: 
#line 253 
  ;
  
#line 252 
  if (i <= 1) 
#line 254 
              goto ldv_53262; else 
#line 257 
                                   goto ldv_53264;
  ldv_53264: 
#line 258 
  ;
  
#line 266 
  return out;
}


#line 269  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void printk_buf(int level, u8 const *data, u32 len)
{
  char line[81U];
  unsigned int tmp_0;
  unsigned int tmp_2;
  
#line 272 
  u32 ofs = 0U;
  
#line 273 
  if ((ipw_debug_level & (unsigned int)level) == 0U) 
#line 274 
                                                     goto return_label; else ;
  
#line 276 
  goto ldv_53279;
  ldv_53278: 
#line 277 
  ;
  
#line 277 
  ;
  {
    u32 tmp;
    
#line 278 
    u32 _min1 = len;
    
#line 278 
    unsigned int _min2 = 16U;
    
#line 278 
    if (_min1 < _min2) 
#line 278 
                       tmp = _min1; else 
#line 278 
                                         tmp = _min2;
    
#line 278 
    tmp_0 = tmp;
  }
  
#line 277 
  ;
  
#line 277 
  snprint_line((char *)(& line),81UL,data + ofs,tmp_0,ofs);
  
#line 279 
  printk("\001",(char *)(& line));
  
#line 280 
  ofs += 16U;
  {
    u32 tmp_1;
    
#line 281 
    u32 _min1_0 = len;
    
#line 281 
    unsigned int _min2_0 = 16U;
    
#line 281 
    if (_min1_0 < _min2_0) 
#line 281 
                           tmp_1 = _min1_0; else 
#line 281 
                                                 tmp_1 = _min2_0;
    
#line 281 
    tmp_2 = tmp_1;
  }
  
#line 281 
  len -= tmp_2;
  ldv_53279: 
#line 283 
  ;
  
#line 276 
  if (len != 0U) 
#line 278 
                 goto ldv_53278; else 
#line 281 
                                      goto ldv_53280;
  ldv_53280: 
#line 282 
  ;
  return_label: 
#line 283 
                return;
}


#line 285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int snprintk_buf(u8 *output, size_t size, u8 const *data, size_t len)
{
  int tmp_1;
  size_t tmp_0;
  size_t tmp_3;
  
#line 287 
  size_t out = size;
  
#line 288 
  u32 ofs = 0U;
  
#line 289 
  int total = 0;
  
#line 291 
  goto ldv_53297;
  ldv_53296: 
#line 292 
  ;
  
#line 292 
  ;
  {
    size_t tmp;
    
#line 293 
    size_t __min1 = len;
    
#line 293 
    size_t __min2 = 16UL;
    
#line 293 
    if (__min1 < __min2) 
#line 293 
                         tmp = __min1; else 
#line 293 
                                            tmp = __min2;
    
#line 293 
    tmp_0 = tmp;
  }
  
#line 292 
  ;
  
#line 292 
  ;
  
#line 292 
  ;
  
#line 292 
  tmp_1 = snprint_line((char *)output,size,data + ofs,(unsigned int)tmp_0,ofs);
  
#line 292 
  out = (unsigned long)tmp_1;
  
#line 295 
  ofs += 16U;
  
#line 296 
  output += out;
  
#line 297 
  size -= out;
  {
    size_t tmp_2;
    
#line 298 
    size_t __min1_0 = len;
    
#line 298 
    size_t __min2_0 = 16UL;
    
#line 298 
    if (__min1_0 < __min2_0) 
#line 298 
                             tmp_2 = __min1_0; else 
#line 298 
                                                    tmp_2 = __min2_0;
    
#line 298 
    tmp_3 = tmp_2;
  }
  
#line 298 
  len -= tmp_3;
  
#line 299 
  total = (int)(out + (size_t)total);
  ldv_53297: 
#line 300 
  ;
  
#line 291 
  if (size != 0UL && len != 0UL) 
#line 293 
                                 goto ldv_53296; else 
#line 296 
                                                      goto ldv_53298;
  ldv_53298: 
#line 297 
  ;
  
#line 301 
  return total;
}


#line 305 
static u32 _ipw_read_reg32(struct ipw_priv *priv, u32 reg);


#line 309 
static u8 _ipw_read_reg8(struct ipw_priv *priv, u32 reg);


#line 313 
static void _ipw_write_reg8(struct ipw_priv *priv, u32 reg, u8 value);


#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
__inline static void ipw_write_reg8(struct ipw_priv *a, u32 b, u8 c)
{
  
#line 316 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 316 
    ;
    
#line 316 
    ;
    
#line 316 
    tmp = preempt_count();
    
#line 316 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 316 
                                                 tmp_0 = 73; else 
#line 316 
                                                                  tmp_0 = 85;
    
#line 316 
    printk("\001",tmp_0,"ipw_write_reg8",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",317,b,(unsigned int)c);
  }
  else ;
  
#line 318 
  _ipw_write_reg8(a,b,(unsigned char)((int)c));
  
#line 319 
  return;
}


#line 322 
static void _ipw_write_reg16(struct ipw_priv *priv, u32 reg, u16 value);


#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
__inline static void ipw_write_reg16(struct ipw_priv *a, u32 b, u16 c)
{
  
#line 325 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 325 
    ;
    
#line 325 
    ;
    
#line 325 
    tmp = preempt_count();
    
#line 325 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 325 
                                                 tmp_0 = 73; else 
#line 325 
                                                                  tmp_0 = 85;
    
#line 325 
    printk("\001",tmp_0,"ipw_write_reg16",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",326,b,(unsigned int)c);
  }
  else ;
  
#line 327 
  _ipw_write_reg16(a,b,(unsigned short)((int)c));
  
#line 328 
  return;
}


#line 331 
static void _ipw_write_reg32(struct ipw_priv *priv, u32 reg, u32 value);


#line 332  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
__inline static void ipw_write_reg32(struct ipw_priv *a, u32 b, u32 c)
{
  
#line 334 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 334 
    ;
    
#line 334 
    ;
    
#line 334 
    tmp = preempt_count();
    
#line 334 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 334 
                                                 tmp_0 = 73; else 
#line 334 
                                                                  tmp_0 = 85;
    
#line 334 
    printk("\001",tmp_0,"ipw_write_reg32",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",335,b,c);
  }
  else ;
  
#line 336 
  _ipw_write_reg32(a,b,c);
  
#line 337 
  return;
}


#line 340  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
__inline static void _ipw_write8(struct ipw_priv *ipw, unsigned long ofs, u8 val)
{
  
#line 343 
  writeb((unsigned char)((int)val),(void volatile *)(ipw->hw_base + ofs));
  
#line 344 
  return;
}


#line 354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
__inline static void _ipw_write16(struct ipw_priv *ipw, unsigned long ofs, u16 val)
{
  
#line 357 
  writew((unsigned short)((int)val),(void volatile *)(ipw->hw_base + ofs));
  
#line 358 
  return;
}


#line 368  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
__inline static void _ipw_write32(struct ipw_priv *ipw, unsigned long ofs, u32 val)
{
  
#line 371 
  writel(val,(void volatile *)(ipw->hw_base + ofs));
  
#line 372 
  return;
}


#line 382  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
__inline static u8 _ipw_read8(struct ipw_priv *ipw, unsigned long ofs)
{
  u8 tmp;
  
#line 384 
  tmp = readb((void const volatile *)(ipw->hw_base + ofs));
  
#line 384 
  return tmp;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
__inline static u32 _ipw_read32(struct ipw_priv *ipw, unsigned long ofs)
{
  u32 tmp;
  
#line 410 
  tmp = readl((void const volatile *)(ipw->hw_base + ofs));
  
#line 410 
  return tmp;
}


#line 420 
static void _ipw_read_indirect(struct ipw_priv *priv, u32 addr, u8 *buf, int num);


#line 429 
static void _ipw_write_indirect(struct ipw_priv *priv, u32 addr, u8 *buf, int num);


#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void _ipw_write_reg32(struct ipw_priv *priv, u32 reg, u32 value)
{
  
#line 440 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 440 
    ;
    
#line 440 
    ;
    
#line 440 
    ;
    
#line 440 
    tmp = preempt_count();
    
#line 440 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 440 
                                                 tmp_0 = 73; else 
#line 440 
                                                                  tmp_0 = 85;
    
#line 440 
    printk("\001",tmp_0,"_ipw_write_reg32",priv,reg,value);
  }
  else ;
  
#line 441 
  _ipw_write32(priv,16UL,reg);
  
#line 442 
  _ipw_write32(priv,20UL,value);
  
#line 443 
  return;
}


#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void _ipw_write_reg8(struct ipw_priv *priv, u32 reg, u8 value)
{
  
#line 448 
  u32 aligned_addr = reg & 4294967292U;
  
#line 449 
  u32 dif_len = reg - aligned_addr;
  
#line 451 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 451 
    ;
    
#line 451 
    ;
    
#line 451 
    tmp = preempt_count();
    
#line 451 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 451 
                                                 tmp_0 = 73; else 
#line 451 
                                                                  tmp_0 = 85;
    
#line 451 
    printk("\001",tmp_0,"_ipw_write_reg8",reg,(int)value);
  }
  else ;
  
#line 452 
  _ipw_write32(priv,16UL,aligned_addr);
  
#line 453 
  _ipw_write8(priv,(unsigned long)(dif_len + 20U),(unsigned char)((int)value));
  
#line 454 
  return;
}


#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void _ipw_write_reg16(struct ipw_priv *priv, u32 reg, u16 value)
{
  
#line 459 
  u32 aligned_addr = reg & 4294967292U;
  
#line 460 
  u32 dif_len = (reg - aligned_addr) & 4294967294U;
  
#line 462 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 462 
    ;
    
#line 462 
    ;
    
#line 462 
    tmp = preempt_count();
    
#line 462 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 462 
                                                 tmp_0 = 73; else 
#line 462 
                                                                  tmp_0 = 85;
    
#line 462 
    printk("\001",tmp_0,"_ipw_write_reg16",reg,(int)value);
  }
  else ;
  
#line 463 
  _ipw_write32(priv,16UL,aligned_addr);
  
#line 464 
  _ipw_write16(priv,(unsigned long)(dif_len + 20U),(unsigned short)((int)value));
  
#line 465 
  return;
}


#line 468  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static u8 _ipw_read_reg8(struct ipw_priv *priv, u32 reg)
{
  u8 __retres;
  u32 word;
  
#line 471 
  _ipw_write32(priv,16UL,reg & 4294967292U);
  
#line 472 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 472 
    ;
    
#line 472 
    tmp = preempt_count();
    
#line 472 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 472 
                                                 tmp_0 = 73; else 
#line 472 
                                                                  tmp_0 = 85;
    
#line 472 
    printk("\001",tmp_0,"_ipw_read_reg8",reg);
  }
  else ;
  
#line 473 
  word = _ipw_read32(priv,20UL);
  
#line 474 
  __retres = (unsigned char)(word >> (reg & 3U) * 8U);
  
#line 474 
  return __retres;
}


#line 478  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static u32 _ipw_read_reg32(struct ipw_priv *priv, u32 reg)
{
  u32 value;
  
#line 482 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 482 
    ;
    
#line 482 
    ;
    
#line 482 
    tmp = preempt_count();
    
#line 482 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 482 
                                                 tmp_0 = 73; else 
#line 482 
                                                                  tmp_0 = 85;
    
#line 482 
    printk("\001",tmp_0,"_ipw_read_reg32",priv,reg);
  }
  else ;
  
#line 484 
  _ipw_write32(priv,16UL,reg);
  
#line 485 
  value = _ipw_read32(priv,20UL);
  
#line 486 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 486 
    ;
    
#line 486 
    ;
    
#line 486 
    tmp_1 = preempt_count();
    
#line 486 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 486 
                                                   tmp_2 = 73; else 
#line 486 
                                                                    tmp_2 = 85;
    
#line 486 
    printk("\001",tmp_2,"_ipw_read_reg32",reg,value);
  }
  else ;
  
#line 487 
  return value;
}


#line 492  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void _ipw_read_indirect(struct ipw_priv *priv, u32 addr, u8 *buf, int num)
{
  u32 i;
  
#line 495 
  u32 aligned_addr = addr & 4294967292U;
  
#line 496 
  u32 dif_len = addr - aligned_addr;
  
#line 499 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 499 
    ;
    
#line 499 
    ;
    
#line 499 
    ;
    
#line 499 
    tmp = preempt_count();
    
#line 499 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 499 
                                                 tmp_0 = 73; else 
#line 499 
                                                                  tmp_0 = 85;
    
#line 499 
    printk("\001",tmp_0,"_ipw_read_indirect",addr,buf,num);
  }
  else ;
  
#line 501 
  if (num <= 0) 
#line 502 
                goto return_label; else ;
  
#line 506 
  if ((long)(dif_len != 0U) != 0L) {
    u8 *tmp_1;
    
#line 507 
    _ipw_write32(priv,16UL,aligned_addr);
    
#line 509 
    i = dif_len;
    
#line 509 
    goto ldv_53417;
    ldv_53416: 
#line 510 
    ;
    
#line 510 
    tmp_1 = buf;
    
#line 510 
    buf += 1;
    
#line 510 
    *tmp_1 = _ipw_read8(priv,(unsigned long)(i + 20U));
    
#line 509 
    i += 1U;
    
#line 509 
    num -= 1;
    ldv_53417: 
#line 510 
    ;
    
#line 509 
    if (i <= 3U && num > 0) 
#line 511 
                            goto ldv_53416; else 
#line 514 
                                                 goto ldv_53418;
    ldv_53418: 
#line 515 
    ;
    
#line 511 
    aligned_addr += 4U;
  }
  else ;
  
#line 515 
  _ipw_write32(priv,24UL,aligned_addr);
  
#line 516 
  goto ldv_53420;
  ldv_53419: 
#line 517 
  ;
  
#line 517 
  *((u32 *)buf) = _ipw_read32(priv,28UL);
  
#line 516 
  buf += 4U;
  
#line 516 
  aligned_addr += 4U;
  
#line 516 
  num += -4;
  ldv_53420: 
#line 517 
  ;
  
#line 516 
  if (num > 3) 
#line 518 
               goto ldv_53419; else 
#line 521 
                                    goto ldv_53421;
  ldv_53421: 
#line 522 
  ;
  
#line 520 
  if ((long)(num != 0) != 0L) {
    u8 *tmp_2;
    u8 tmp_6;
    
#line 521 
    _ipw_write32(priv,16UL,aligned_addr);
    
#line 522 
    i = 0U;
    
#line 522 
    goto ldv_53424;
    ldv_53423: 
#line 523 
    ;
    
#line 523 
    tmp_2 = buf;
    
#line 523 
    buf += 1;
    
#line 523 
    if ((ipw_debug_level & 134217728U) != 0U) {
      int tmp_4;
      int tmp_3;
      
#line 523 
      ;
      
#line 523 
      tmp_3 = preempt_count();
      
#line 523 
      if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 523 
                                                     tmp_4 = 73; else 
                                                                   
#line 523 
                                                                   tmp_4 = 85;
      
#line 523 
      printk("\001",tmp_4,"_ipw_read_indirect",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",523,i + 20U);
    }
    else ;
    
#line 523 
    tmp_6 = _ipw_read8(priv,(unsigned long)(i + 20U));
    
#line 523 
    *tmp_2 = tmp_6;
    
#line 522 
    i += 1U;
    
#line 522 
    num -= 1;
    ldv_53424: 
#line 523 
    ;
    
#line 522 
    if (num > 0) 
#line 524 
                 goto ldv_53423; else 
#line 527 
                                      goto ldv_53425;
    ldv_53425: 
#line 528 
    ;
  }
  else ;
  return_label: 
#line 530 
                return;
}


#line 529  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void _ipw_write_indirect(struct ipw_priv *priv, u32 addr, u8 *buf, int num)
{
  u32 i;
  
#line 532 
  u32 aligned_addr = addr & 4294967292U;
  
#line 533 
  u32 dif_len = addr - aligned_addr;
  
#line 536 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 536 
    ;
    
#line 536 
    ;
    
#line 536 
    ;
    
#line 536 
    tmp = preempt_count();
    
#line 536 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 536 
                                                 tmp_0 = 73; else 
#line 536 
                                                                  tmp_0 = 85;
    
#line 536 
    printk("\001",tmp_0,"_ipw_write_indirect",addr,buf,num);
  }
  else ;
  
#line 538 
  if (num <= 0) 
#line 539 
                goto return_label; else ;
  
#line 543 
  if ((long)(dif_len != 0U) != 0L) {
    
#line 544 
    _ipw_write32(priv,16UL,aligned_addr);
    
#line 546 
    i = dif_len;
    
#line 546 
    goto ldv_53437;
    ldv_53436: 
#line 547 
    ;
    
#line 547 
    _ipw_write8(priv,(unsigned long)(i + 20U),(unsigned char)((int)*buf));
    
#line 546 
    i += 1U;
    
#line 546 
    num -= 1;
    
#line 546 
    buf += 1;
    ldv_53437: 
#line 547 
    ;
    
#line 546 
    if (i <= 3U && num > 0) 
#line 548 
                            goto ldv_53436; else 
#line 551 
                                                 goto ldv_53438;
    ldv_53438: 
#line 552 
    ;
    
#line 548 
    aligned_addr += 4U;
  }
  else ;
  
#line 552 
  _ipw_write32(priv,24UL,aligned_addr);
  
#line 553 
  goto ldv_53440;
  ldv_53439: 
#line 554 
  ;
  
#line 554 
  _ipw_write32(priv,28UL,*((u32 *)buf));
  
#line 553 
  buf += 4U;
  
#line 553 
  aligned_addr += 4U;
  
#line 553 
  num += -4;
  ldv_53440: 
#line 554 
  ;
  
#line 553 
  if (num > 3) 
#line 555 
               goto ldv_53439; else 
#line 558 
                                    goto ldv_53441;
  ldv_53441: 
#line 559 
  ;
  
#line 557 
  if ((long)(num != 0) != 0L) {
    
#line 558 
    _ipw_write32(priv,16UL,aligned_addr);
    
#line 559 
    i = 0U;
    
#line 559 
    goto ldv_53443;
    ldv_53442: 
#line 560 
    ;
    
#line 560 
    _ipw_write8(priv,(unsigned long)(i + 20U),(unsigned char)((int)*buf));
    
#line 559 
    i += 1U;
    
#line 559 
    num -= 1;
    
#line 559 
    buf += 1;
    ldv_53443: 
#line 560 
    ;
    
#line 559 
    if (num > 0) 
#line 561 
                 goto ldv_53442; else 
#line 564 
                                      goto ldv_53444;
    ldv_53444: 
#line 565 
    ;
  }
  else ;
  return_label: 
#line 567 
                return;
}


#line 566  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_write_direct(struct ipw_priv *priv, u32 addr, void *buf, int num)
{
  
#line 569 
  memcpy_toio((void volatile *)(priv->hw_base + addr),(void const *)buf,(unsigned long)num);
  
#line 570 
  return;
}


#line 573  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
__inline static void ipw_set_bit(struct ipw_priv *priv, u32 reg, u32 mask)
{
  u32 tmp_8;
  
#line 575 
  if ((ipw_debug_level & 134217728U) != 0U) {
    u32 tmp_2;
    int tmp_4;
    int tmp_3;
    
#line 575 
    if ((ipw_debug_level & 134217728U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 575 
      ;
      
#line 575 
      tmp = preempt_count();
      
#line 575 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 575 
                                                   tmp_0 = 73; else 
#line 575 
                                                                    tmp_0 = 85;
      
#line 575 
      printk("\001",tmp_0,"ipw_set_bit",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",575,reg);
    }
    else ;
    
#line 575 
    tmp_2 = _ipw_read32(priv,(unsigned long)reg);
    
#line 575 
    ;
    
#line 575 
    ;
    
#line 575 
    tmp_3 = preempt_count();
    
#line 575 
    if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 575 
                                                   tmp_4 = 73; else 
#line 575 
                                                                    tmp_4 = 85;
    
#line 575 
    printk("\001",tmp_4,"ipw_set_bit",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",575,reg,tmp_2 | mask);
  }
  else ;
  
#line 575 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_6;
    int tmp_5;
    
#line 575 
    ;
    
#line 575 
    tmp_5 = preempt_count();
    
#line 575 
    if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 575 
                                                   tmp_6 = 73; else 
#line 575 
                                                                    tmp_6 = 85;
    
#line 575 
    printk("\001",tmp_6,"ipw_set_bit",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",575,reg);
  }
  else ;
  
#line 575 
  tmp_8 = _ipw_read32(priv,(unsigned long)reg);
  
#line 575 
  ;
  
#line 575 
  ;
  
#line 575 
  ;
  
#line 575 
  _ipw_write32(priv,(unsigned long)reg,tmp_8 | mask);
  
#line 576 
  return;
}


#line 579  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
__inline static void ipw_clear_bit(struct ipw_priv *priv, u32 reg, u32 mask)
{
  u32 tmp_8;
  
#line 581 
  if ((ipw_debug_level & 134217728U) != 0U) {
    u32 tmp_2;
    int tmp_4;
    int tmp_3;
    
#line 581 
    if ((ipw_debug_level & 134217728U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 581 
      ;
      
#line 581 
      tmp = preempt_count();
      
#line 581 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 581 
                                                   tmp_0 = 73; else 
#line 581 
                                                                    tmp_0 = 85;
      
#line 581 
      printk("\001",tmp_0,"ipw_clear_bit",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",581,reg);
    }
    else ;
    
#line 581 
    tmp_2 = _ipw_read32(priv,(unsigned long)reg);
    
#line 581 
    ;
    
#line 581 
    ;
    
#line 581 
    tmp_3 = preempt_count();
    
#line 581 
    if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 581 
                                                   tmp_4 = 73; else 
#line 581 
                                                                    tmp_4 = 85;
    
#line 581 
    printk("\001",tmp_4,"ipw_clear_bit",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",581,reg,tmp_2 & ~ mask);
  }
  else ;
  
#line 581 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_6;
    int tmp_5;
    
#line 581 
    ;
    
#line 581 
    tmp_5 = preempt_count();
    
#line 581 
    if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 581 
                                                   tmp_6 = 73; else 
#line 581 
                                                                    tmp_6 = 85;
    
#line 581 
    printk("\001",tmp_6,"ipw_clear_bit",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",581,reg);
  }
  else ;
  
#line 581 
  tmp_8 = _ipw_read32(priv,(unsigned long)reg);
  
#line 581 
  ;
  
#line 581 
  ;
  
#line 581 
  ;
  
#line 581 
  _ipw_write32(priv,(unsigned long)reg,tmp_8 & ~ mask);
  
#line 582 
  return;
}


#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
__inline static void __ipw_enable_interrupts(struct ipw_priv *priv)
{
  
#line 586 
  if ((priv->status & 2U) != 0U) 
#line 587 
                                 goto return_label; else ;
  
#line 588 
  priv->status |= 2U;
  
#line 589 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 589 
    tmp = preempt_count();
    
#line 589 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 589 
                                                 tmp_0 = 73; else 
#line 589 
                                                                  tmp_0 = 85;
    
#line 589 
    printk("\001",tmp_0,"__ipw_enable_interrupts",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",589,12U,3308386354U);
  }
  else ;
  
#line 589 
  _ipw_write32(priv,12UL,3308386354U);
  return_label: 
#line 590 
                return;
}


#line 592  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
__inline static void __ipw_disable_interrupts(struct ipw_priv *priv)
{
  
#line 594 
  if ((priv->status & 2U) == 0U) 
#line 595 
                                 goto return_label; else ;
  
#line 596 
  priv->status &= 4294967293U;
  
#line 597 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 597 
    tmp = preempt_count();
    
#line 597 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 597 
                                                 tmp_0 = 73; else 
#line 597 
                                                                  tmp_0 = 85;
    
#line 597 
    printk("\001",tmp_0,"__ipw_disable_interrupts",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",597,12U,986580941U);
  }
  else ;
  
#line 597 
  _ipw_write32(priv,12UL,986580941U);
  return_label: 
#line 598 
                return;
}


#line 600  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
__inline static void ipw_enable_interrupts(struct ipw_priv *priv)
{
  unsigned long flags;
  
#line 604 
  ldv___ldv_spin_lock_72(& priv->irq_lock);
  
#line 605 
  __ipw_enable_interrupts(priv);
  
#line 606 
  ldv_spin_unlock_irqrestore_73(& priv->irq_lock,flags);
  
#line 607 
  return;
}


#line 609  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
__inline static void ipw_disable_interrupts(struct ipw_priv *priv)
{
  unsigned long flags;
  
#line 613 
  ldv___ldv_spin_lock_74(& priv->irq_lock);
  
#line 614 
  __ipw_disable_interrupts(priv);
  
#line 615 
  ldv_spin_unlock_irqrestore_75(& priv->irq_lock,flags);
  
#line 616 
  return;
}


#line 618  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static char *ipw_error_desc(u32 val)
{
  char *__retres;
  
#line 620 
  switch (val) {
    case (u32)0: 
#line 621 
    ;
    
#line 622 
    __retres = (char *)"ERROR_OK";
    
#line 622 
    goto return_label;
    case (u32)1: 
#line 623 
    ;
    
#line 624 
    __retres = (char *)"ERROR_FAIL";
    
#line 624 
    goto return_label;
    case (u32)2: 
#line 625 
    ;
    
#line 626 
    __retres = (char *)"MEMORY_UNDERFLOW";
    
#line 626 
    goto return_label;
    case (u32)3: 
#line 627 
    ;
    
#line 628 
    __retres = (char *)"MEMORY_OVERFLOW";
    
#line 628 
    goto return_label;
    case (u32)4: 
#line 629 
    ;
    
#line 630 
    __retres = (char *)"BAD_PARAM";
    
#line 630 
    goto return_label;
    case (u32)5: 
#line 631 
    ;
    
#line 632 
    __retres = (char *)"BAD_CHECKSUM";
    
#line 632 
    goto return_label;
    case (u32)6: 
#line 633 
    ;
    
#line 634 
    __retres = (char *)"NMI_INTERRUPT";
    
#line 634 
    goto return_label;
    case (u32)7: 
#line 635 
    ;
    
#line 636 
    __retres = (char *)"BAD_DATABASE";
    
#line 636 
    goto return_label;
    case (u32)8: 
#line 637 
    ;
    
#line 638 
    __retres = (char *)"ALLOC_FAIL";
    
#line 638 
    goto return_label;
    case (u32)9: 
#line 639 
    ;
    
#line 640 
    __retres = (char *)"DMA_UNDERRUN";
    
#line 640 
    goto return_label;
    case (u32)10: 
#line 641 
    ;
    
#line 642 
    __retres = (char *)"DMA_STATUS";
    
#line 642 
    goto return_label;
    case (u32)11: 
#line 643 
    ;
    
#line 644 
    __retres = (char *)"DINO_ERROR";
    
#line 644 
    goto return_label;
    case (u32)12: 
#line 645 
    ;
    
#line 646 
    __retres = (char *)"EEPROM_ERROR";
    
#line 646 
    goto return_label;
    case (u32)13: 
#line 647 
    ;
    
#line 648 
    __retres = (char *)"SYSASSERT";
    
#line 648 
    goto return_label;
    case (u32)14: 
#line 649 
    ;
    
#line 650 
    __retres = (char *)"FATAL_ERROR";
    
#line 650 
    goto return_label;
    default: 
#line 651 
    ;
    
#line 652 
    __retres = (char *)"UNKNOWN_ERROR";
    
#line 652 
    goto return_label;
  }
  return_label: 
#line 620 
                return __retres;
}


#line 656  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_dump_error_log(struct ipw_priv *priv, struct ipw_fw_error *error)
{
  u32 i;
  char *tmp;
  
#line 661 
  if (error == (struct ipw_fw_error *)0) {
    
#line 662 
    printk("\001");
    
#line 664 
    goto return_label;
  }
  else ;
  
#line 667 
  printk("\001");
  
#line 668 
  printk("\001",error->status,error->config);
  
#line 671 
  i = 0U;
  
#line 671 
  goto ldv_53508;
  ldv_53507: 
#line 672 
  ;
  
#line 672 
  ;
  
#line 672 
  ;
  
#line 672 
  ;
  
#line 672 
  ;
  
#line 672 
  ;
  
#line 672 
  ;
  
#line 672 
  tmp = ipw_error_desc((error->elem + i)->desc);
  
#line 672 
  printk("\001",tmp,(error->elem + i)->time,(error->elem + i)->blink1,(error->elem + i)->blink2,(error->elem + i)->link1,(error->elem + i)->link2,(error->elem + i)->data);
  
#line 671 
  i += 1U;
  ldv_53508: 
#line 672 
  ;
  
#line 671 
  if (error->elem_len > i) 
#line 673 
                           goto ldv_53507; else 
#line 676 
                                                goto ldv_53509;
  ldv_53509: 
#line 677 
  ;
  
#line 679 
  i = 0U;
  
#line 679 
  goto ldv_53511;
  ldv_53510: 
#line 680 
  ;
  
#line 680 
  printk("\001",(error->log + i)->time,(error->log + i)->data,(error->log + i)->event);
  
#line 679 
  i += 1U;
  ldv_53511: 
#line 680 
  ;
  
#line 679 
  if (error->log_len > i) 
#line 681 
                          goto ldv_53510; else 
#line 684 
                                               goto ldv_53512;
  ldv_53512: 
#line 685 
  ;
  return_label: 
#line 686 
                return;
}


#line 685  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
__inline static int ipw_is_init(struct ipw_priv *priv)
{
  int __retres;
  
#line 687 
  __retres = (int)(priv->status >> 5) & 1;
  
#line 687 
  return __retres;
}


#line 690  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_get_ordinal(struct ipw_priv *priv, u32 ord, void *val, u32 *len)
{
  int __retres;
  u32 addr;
  u32 field_info;
  u32 field_len;
  u32 field_count;
  u32 total_len;
  
#line 694 
  if ((ipw_debug_level & 1048576U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 694 
    ;
    
#line 694 
    tmp = preempt_count();
    
#line 694 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 694 
                                                 tmp_0 = 73; else 
#line 694 
                                                                  tmp_0 = 85;
    
#line 694 
    printk("\001",tmp_0,"ipw_get_ordinal",ord);
  }
  else ;
  
#line 696 
  if ((priv == (struct ipw_priv *)0 || val == (void *)0) || len == (u32 *)0U) {
    
#line 697 
    if ((ipw_debug_level & 1048576U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 697 
      tmp_1 = preempt_count();
      
#line 697 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 697 
                                                     tmp_2 = 73; else 
                                                                   
#line 697 
                                                                   tmp_2 = 85;
      
#line 697 
      printk("\001",tmp_2,"ipw_get_ordinal");
    }
    else ;
    
#line 698 
    __retres = -22;
    
#line 698 
    goto return_label;
  }
  else ;
  
#line 702 
  if ((priv->table0_addr == 0U || priv->table1_addr == 0U) || priv->table2_addr == 0U) {
    
#line 703 
    if ((ipw_debug_level & 1048576U) != 0U) {
      int tmp_4;
      int tmp_3;
      
#line 703 
      tmp_3 = preempt_count();
      
#line 703 
      if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 703 
                                                     tmp_4 = 73; else 
                                                                   
#line 703 
                                                                   tmp_4 = 85;
      
#line 703 
      printk("\001",tmp_4,"ipw_get_ordinal");
    }
    else ;
    
#line 704 
    __retres = -22;
    
#line 704 
    goto return_label;
  }
  else ;
  
#line 707 
  switch (ord & 65280U) {
    u32 tmp_14;
    case (unsigned int)61440: 
#line 708 
    ;
    
#line 717 
    ord &= 255U;
    
#line 720 
    if (priv->table0_len < ord) {
      
#line 721 
      if ((ipw_debug_level & 1048576U) != 0U) {
        int tmp_6;
        int tmp_5;
        
#line 721 
        ;
        
#line 721 
        ;
        
#line 721 
        tmp_5 = preempt_count();
        
#line 721 
        if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 721 
                                                       tmp_6 = 73; else 
                                                                    
#line 721 
                                                                    tmp_6 = 85;
        
#line 721 
        printk("\001",tmp_6,"ipw_get_ordinal",ord,priv->table0_len);
      }
      else ;
      
#line 723 
      __retres = -22;
      
#line 723 
      goto return_label;
    }
    else ;
    
#line 727 
    if (*len <= 3U) {
      
#line 728 
      if ((ipw_debug_level & 1048576U) != 0U) {
        int tmp_8;
        int tmp_7;
        
#line 728 
        tmp_7 = preempt_count();
        
#line 728 
        if (((unsigned long)tmp_7 & 2096896UL) != 0UL) 
#line 728 
                                                       tmp_8 = 73; else 
                                                                    
#line 728 
                                                                    tmp_8 = 85;
        
#line 728 
        printk("\001",tmp_8,"ipw_get_ordinal",4UL);
      }
      else ;
      
#line 730 
      __retres = -22;
      
#line 730 
      goto return_label;
    }
    else ;
    
#line 733 
    if ((ipw_debug_level & 1048576U) != 0U) {
      int tmp_10;
      int tmp_9;
      
#line 733 
      ;
      
#line 733 
      ;
      
#line 733 
      tmp_9 = preempt_count();
      
#line 733 
      if (((unsigned long)tmp_9 & 2096896UL) != 0UL) 
#line 733 
                                                     tmp_10 = 73; else 
                                                                    
#line 733 
                                                                    tmp_10 = 85;
      
#line 733 
      printk("\001",tmp_10,"ipw_get_ordinal",ord,priv->table0_addr + (ord << 2));
    }
    else ;
    
#line 736 
    *len = 4U;
    
#line 737 
    ord <<= 2;
    
#line 738 
    if ((ipw_debug_level & 134217728U) != 0U) {
      int tmp_12;
      int tmp_11;
      
#line 738 
      ;
      
#line 738 
      tmp_11 = preempt_count();
      
#line 738 
      if (((unsigned long)tmp_11 & 2096896UL) != 0UL) 
#line 738 
                                                      tmp_12 = 73; else 
                                                                    
#line 738 
                                                                    tmp_12 = 85;
      
#line 738 
      printk("\001",tmp_12,"ipw_get_ordinal",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",738,priv->table0_addr + ord);
    }
    else ;
    
#line 738 
    tmp_14 = _ipw_read32(priv,(unsigned long)(priv->table0_addr + ord));
    
#line 738 
    *((u32 *)val) = tmp_14;
    
#line 739 
    goto ldv_53530;
    case (unsigned int)61696: 
#line 741 
    ;
    
#line 751 
    ord &= 255U;
    
#line 754 
    if (priv->table1_len < ord) {
      
#line 755 
      if ((ipw_debug_level & 1048576U) != 0U) {
        int tmp_16;
        int tmp_15;
        
#line 755 
        tmp_15 = preempt_count();
        
#line 755 
        if (((unsigned long)tmp_15 & 2096896UL) != 0UL) 
#line 755 
                                                        tmp_16 = 73; else 
                                                                    
#line 755 
                                                                    tmp_16 = 85;
        
#line 755 
        printk("\001",tmp_16,"ipw_get_ordinal");
      }
      else ;
      
#line 756 
      __retres = -22;
      
#line 756 
      goto return_label;
    }
    else ;
    
#line 760 
    if (*len <= 3U) {
      
#line 761 
      if ((ipw_debug_level & 1048576U) != 0U) {
        int tmp_18;
        int tmp_17;
        
#line 761 
        tmp_17 = preempt_count();
        
#line 761 
        if (((unsigned long)tmp_17 & 2096896UL) != 0UL) 
#line 761 
                                                        tmp_18 = 73; else 
                                                                    
#line 761 
                                                                    tmp_18 = 85;
        
#line 761 
        printk("\001",tmp_18,"ipw_get_ordinal",4UL);
      }
      else ;
      
#line 763 
      __retres = -22;
      
#line 763 
      goto return_label;
    }
    else ;
    
#line 766 
    *((u32 *)val) = _ipw_read_reg32(priv,priv->table1_addr + (ord << 2));
    
#line 768 
    *len = 4U;
    
#line 769 
    goto ldv_53530;
    case (unsigned int)61952: 
#line 771 
    ;
    
#line 782 
    ord &= 255U;
    
#line 785 
    if (priv->table2_len < ord) {
      
#line 786 
      if ((ipw_debug_level & 1048576U) != 0U) {
        int tmp_20;
        int tmp_19;
        
#line 786 
        tmp_19 = preempt_count();
        
#line 786 
        if (((unsigned long)tmp_19 & 2096896UL) != 0UL) 
#line 786 
                                                        tmp_20 = 73; else 
                                                                    
#line 786 
                                                                    tmp_20 = 85;
        
#line 786 
        printk("\001",tmp_20,"ipw_get_ordinal");
      }
      else ;
      
#line 787 
      __retres = -22;
      
#line 787 
      goto return_label;
    }
    else ;
    
#line 791 
    addr = _ipw_read_reg32(priv,priv->table2_addr + (ord << 3));
    
#line 795 
    field_info = _ipw_read_reg32(priv,(priv->table2_addr + (ord << 3)) + 4U);
    
#line 801 
    field_len = (unsigned int)*((u16 *)(& field_info));
    
#line 804 
    field_count = (unsigned int)*((u16 *)(& field_info) + 1U);
    
#line 807 
    total_len = field_len * field_count;
    
#line 808 
    if (*len < total_len) {
      
#line 809 
      *len = total_len;
      
#line 810 
      __retres = -22;
      
#line 810 
      goto return_label;
    }
    else ;
    
#line 813 
    *len = total_len;
    
#line 814 
    if (total_len == 0U) {
      
#line 815 
      __retres = 0;
      
#line 815 
      goto return_label;
    }
    else ;
    
#line 817 
    if ((ipw_debug_level & 1048576U) != 0U) {
      int tmp_22;
      int tmp_21;
      
#line 817 
      ;
      
#line 817 
      ;
      
#line 817 
      ;
      
#line 817 
      tmp_21 = preempt_count();
      
#line 817 
      if (((unsigned long)tmp_21 & 2096896UL) != 0UL) 
#line 817 
                                                      tmp_22 = 73; else 
                                                                    
#line 817 
                                                                    tmp_22 = 85;
      
#line 817 
      printk("\001",tmp_22,"ipw_get_ordinal",addr,total_len,field_info);
    }
    else ;
    
#line 820 
    if ((ipw_debug_level & 134217728U) != 0U) {
      int tmp_24;
      int tmp_23;
      
#line 820 
      ;
      
#line 820 
      ;
      
#line 820 
      tmp_23 = preempt_count();
      
#line 820 
      if (((unsigned long)tmp_23 & 2096896UL) != 0UL) 
#line 820 
                                                      tmp_24 = 73; else 
                                                                    
#line 820 
                                                                    tmp_24 = 85;
      
#line 820 
      printk("\001",tmp_24,"ipw_get_ordinal",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",820,addr,total_len);
    }
    else ;
    
#line 820 
    _ipw_read_indirect(priv,addr,(u8 *)val,(int)total_len);
    
#line 821 
    goto ldv_53530;
    default: 
#line 823 
    ;
    
#line 824 
    if ((ipw_debug_level & 1048576U) != 0U) {
      int tmp_26;
      int tmp_25;
      
#line 824 
      tmp_25 = preempt_count();
      
#line 824 
      if (((unsigned long)tmp_25 & 2096896UL) != 0UL) 
#line 824 
                                                      tmp_26 = 73; else 
                                                                    
#line 824 
                                                                    tmp_26 = 85;
      
#line 824 
      printk("\001",tmp_26,"ipw_get_ordinal");
    }
    else ;
    
#line 825 
    __retres = -22;
    
#line 825 
    goto return_label;
  }
  ldv_53530: 
#line 829 
  ;
  
#line 829 
  __retres = 0;
  return_label: 
#line 829 
                return __retres;
}


#line 832  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_init_ordinals(struct ipw_priv *priv)
{
  u32 tmp_2;
  u32 tmp_8;
  u32 tmp_14;
  
#line 834 
  priv->table0_addr = 1792U;
  
#line 835 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 835 
    ;
    
#line 835 
    tmp = preempt_count();
    
#line 835 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 835 
                                                 tmp_0 = 73; else 
#line 835 
                                                                  tmp_0 = 85;
    
#line 835 
    printk("\001",tmp_0,"ipw_init_ordinals",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",835,priv->table0_addr);
  }
  else ;
  
#line 835 
  tmp_2 = _ipw_read32(priv,(unsigned long)priv->table0_addr);
  
#line 835 
  priv->table0_len = tmp_2;
  
#line 837 
  if ((ipw_debug_level & 1048576U) != 0U) {
    int tmp_4;
    int tmp_3;
    
#line 837 
    ;
    
#line 837 
    ;
    
#line 837 
    tmp_3 = preempt_count();
    
#line 837 
    if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 837 
                                                   tmp_4 = 73; else 
#line 837 
                                                                    tmp_4 = 85;
    
#line 837 
    printk("\001",tmp_4,"ipw_init_ordinals",priv->table0_addr,priv->table0_len);
  }
  else ;
  
#line 840 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_6;
    int tmp_5;
    
#line 840 
    tmp_5 = preempt_count();
    
#line 840 
    if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 840 
                                                   tmp_6 = 73; else 
#line 840 
                                                                    tmp_6 = 85;
    
#line 840 
    printk("\001",tmp_6,"ipw_init_ordinals",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",840,900U);
  }
  else ;
  
#line 840 
  tmp_8 = _ipw_read32(priv,900UL);
  
#line 840 
  priv->table1_addr = tmp_8;
  
#line 841 
  priv->table1_len = _ipw_read_reg32(priv,priv->table1_addr);
  
#line 843 
  if ((ipw_debug_level & 1048576U) != 0U) {
    int tmp_10;
    int tmp_9;
    
#line 843 
    ;
    
#line 843 
    ;
    
#line 843 
    tmp_9 = preempt_count();
    
#line 843 
    if (((unsigned long)tmp_9 & 2096896UL) != 0UL) 
#line 843 
                                                   tmp_10 = 73; else 
                                                                  
#line 843 
                                                                  tmp_10 = 85;
    
#line 843 
    printk("\001",tmp_10,"ipw_init_ordinals",priv->table1_addr,priv->table1_len);
  }
  else ;
  
#line 846 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_12;
    int tmp_11;
    
#line 846 
    tmp_11 = preempt_count();
    
#line 846 
    if (((unsigned long)tmp_11 & 2096896UL) != 0UL) 
#line 846 
                                                    tmp_12 = 73; else 
                                                                   
#line 846 
                                                                   tmp_12 = 85;
    
#line 846 
    printk("\001",tmp_12,"ipw_init_ordinals",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",846,904U);
  }
  else ;
  
#line 846 
  tmp_14 = _ipw_read32(priv,904UL);
  
#line 846 
  priv->table2_addr = tmp_14;
  
#line 847 
  priv->table2_len = _ipw_read_reg32(priv,priv->table2_addr);
  
#line 848 
  priv->table2_len &= 65535U;
  
#line 850 
  if ((ipw_debug_level & 1048576U) != 0U) {
    int tmp_16;
    int tmp_15;
    
#line 850 
    ;
    
#line 850 
    ;
    
#line 850 
    tmp_15 = preempt_count();
    
#line 850 
    if (((unsigned long)tmp_15 & 2096896UL) != 0UL) 
#line 850 
                                                    tmp_16 = 73; else 
                                                                   
#line 850 
                                                                   tmp_16 = 85;
    
#line 850 
    printk("\001",tmp_16,"ipw_init_ordinals",priv->table2_addr,priv->table2_len);
  }
  else ;
  
#line 851 
  return;
}


#line 855  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static u32 ipw_register_toggle(u32 reg)
{
  
#line 857 
  reg &= 4294967291U;
  
#line 858 
  if ((reg & 33554432U) != 0U) 
#line 859 
                               reg &= 4261412863U; else ;
  
#line 860 
  if ((reg & 67108864U) != 0U) 
#line 861 
                               reg &= 4227858431U; else ;
  
#line 862 
  if ((reg & 536870912U) != 0U) 
#line 863 
                                reg &= 3758096383U; else ;
  
#line 864 
  return reg;
}


#line 880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_led_link_on(struct ipw_priv *priv)
{
  unsigned long flags;
  u32 led;
  
#line 887 
  if ((priv->config & 512U) != 0U || (unsigned int)priv->nic_type == 1U) 
    
#line 888 
    goto return_label; else ;
  
#line 890 
  ldv___ldv_spin_lock_76(& priv->lock);
  
#line 892 
  if ((priv->status & 12U) == 0U && (priv->status & 16777216U) == 0U) {
    
#line 894 
    if ((ipw_debug_level & 524288U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 894 
      tmp = preempt_count();
      
#line 894 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 894 
                                                   tmp_0 = 73; else 
#line 894 
                                                                    tmp_0 = 85;
      
#line 894 
      printk("\001",tmp_0,"ipw_led_link_on");
    }
    else ;
    
#line 895 
    led = _ipw_read_reg32(priv,3145732U);
    
#line 896 
    led = priv->led_association_on | led;
    
#line 898 
    led = ipw_register_toggle(led);
    
#line 900 
    if ((ipw_debug_level & 524288U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 900 
      ;
      
#line 900 
      tmp_1 = preempt_count();
      
#line 900 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 900 
                                                     tmp_2 = 73; else 
                                                                   
#line 900 
                                                                   tmp_2 = 85;
      
#line 900 
      printk("\001",tmp_2,"ipw_led_link_on",led);
    }
    else ;
    
#line 901 
    ipw_write_reg32(priv,3145732U,led);
    
#line 903 
    priv->status |= 16777216U;
    
#line 906 
    if ((priv->status & 128U) == 0U) {
      unsigned long tmp_3;
      
#line 907 
      tmp_3 = msecs_to_jiffies(300U);
      
#line 907 
      ;
      
#line 907 
      ldv_schedule_delayed_work_77(& priv->led_link_off,tmp_3);
    }
    else ;
  }
  else ;
  
#line 911 
  ldv_spin_unlock_irqrestore_78(& priv->lock,flags);
  return_label: 
#line 912 
                return;
}


#line 914  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_bg_led_link_on(struct work_struct *work)
{
  struct ipw_priv *tmp;
  {
    
#line 917 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 917 
    tmp = (struct ipw_priv *)__mptr + 18446744073709545048U;
  }
  
#line 916 
  struct ipw_priv *priv = tmp;
  
#line 918 
  ldv_mutex_lock_79(& priv->mutex);
  
#line 919 
  ipw_led_link_on(priv);
  
#line 920 
  ldv_mutex_unlock_80(& priv->mutex);
  
#line 921 
  return;
}


#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_led_link_off(struct ipw_priv *priv)
{
  unsigned long flags;
  u32 led;
  
#line 930 
  if ((priv->config & 512U) != 0U || (unsigned int)priv->nic_type == 1U) 
    
#line 931 
    goto return_label; else ;
  
#line 933 
  ldv___ldv_spin_lock_81(& priv->lock);
  
#line 935 
  if ((priv->status & 16777216U) != 0U) {
    
#line 936 
    led = _ipw_read_reg32(priv,3145732U);
    
#line 937 
    led = priv->led_association_off & led;
    
#line 938 
    led = ipw_register_toggle(led);
    
#line 940 
    if ((ipw_debug_level & 524288U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 940 
      ;
      
#line 940 
      tmp = preempt_count();
      
#line 940 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 940 
                                                   tmp_0 = 73; else 
#line 940 
                                                                    tmp_0 = 85;
      
#line 940 
      printk("\001",tmp_0,"ipw_led_link_off",led);
    }
    else ;
    
#line 941 
    ipw_write_reg32(priv,3145732U,led);
    
#line 943 
    if ((ipw_debug_level & 524288U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 943 
      tmp_1 = preempt_count();
      
#line 943 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 943 
                                                     tmp_2 = 73; else 
                                                                   
#line 943 
                                                                   tmp_2 = 85;
      
#line 943 
      printk("\001",tmp_2,"ipw_led_link_off");
    }
    else ;
    
#line 945 
    priv->status &= 4278190079U;
    
#line 949 
    if ((priv->status & 12U) == 0U && (priv->status & 128U) == 0U) {
      unsigned long tmp_3;
      
#line 951 
      tmp_3 = msecs_to_jiffies(2700U);
      
#line 951 
      ;
      
#line 951 
      ldv_schedule_delayed_work_82(& priv->led_link_on,tmp_3);
    }
    else ;
  }
  else ;
  
#line 956 
  ldv_spin_unlock_irqrestore_83(& priv->lock,flags);
  return_label: 
#line 957 
                return;
}


#line 959  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_bg_led_link_off(struct work_struct *work)
{
  struct ipw_priv *tmp;
  {
    
#line 962 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 962 
    tmp = (struct ipw_priv *)__mptr + 18446744073709544824U;
  }
  
#line 961 
  struct ipw_priv *priv = tmp;
  
#line 963 
  ldv_mutex_lock_84(& priv->mutex);
  
#line 964 
  ipw_led_link_off(priv);
  
#line 965 
  ldv_mutex_unlock_85(& priv->mutex);
  
#line 966 
  return;
}


#line 968  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void __ipw_led_activity_on(struct ipw_priv *priv)
{
  u32 led;
  
#line 972 
  if ((priv->config & 512U) != 0U) 
#line 973 
                                   goto return_label; else ;
  
#line 975 
  if ((priv->status & 12U) != 0U) 
#line 976 
                                  goto return_label; else ;
  
#line 978 
  if ((priv->status & 33554432U) == 0U) {
    unsigned long tmp_3;
    
#line 979 
    led = _ipw_read_reg32(priv,3145732U);
    
#line 980 
    led = priv->led_activity_on | led;
    
#line 982 
    led = ipw_register_toggle(led);
    
#line 984 
    if ((ipw_debug_level & 524288U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 984 
      ;
      
#line 984 
      tmp = preempt_count();
      
#line 984 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 984 
                                                   tmp_0 = 73; else 
#line 984 
                                                                    tmp_0 = 85;
      
#line 984 
      printk("\001",tmp_0,"__ipw_led_activity_on",led);
    }
    else ;
    
#line 985 
    ipw_write_reg32(priv,3145732U,led);
    
#line 987 
    if ((ipw_debug_level & 524288U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 987 
      tmp_1 = preempt_count();
      
#line 987 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 987 
                                                     tmp_2 = 73; else 
                                                                   
#line 987 
                                                                   tmp_2 = 85;
      
#line 987 
      printk("\001",tmp_2,"__ipw_led_activity_on");
    }
    else ;
    
#line 989 
    priv->status |= 33554432U;
    
#line 991 
    cancel_delayed_work(& priv->led_act_off);
    
#line 992 
    tmp_3 = msecs_to_jiffies(250U);
    
#line 992 
    ;
    
#line 992 
    ldv_schedule_delayed_work_86(& priv->led_act_off,tmp_3);
  }
  else {
    unsigned long tmp_4;
    
#line 995 
    cancel_delayed_work(& priv->led_act_off);
    
#line 996 
    tmp_4 = msecs_to_jiffies(250U);
    
#line 996 
    ;
    
#line 996 
    ldv_schedule_delayed_work_87(& priv->led_act_off,tmp_4);
  }
  return_label: 
#line 998 
                return;
}


#line 1010  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_led_activity_off(struct ipw_priv *priv)
{
  unsigned long flags;
  u32 led;
  
#line 1015 
  if ((priv->config & 512U) != 0U) 
#line 1016 
                                   goto return_label; else ;
  
#line 1018 
  ldv___ldv_spin_lock_88(& priv->lock);
  
#line 1020 
  if ((priv->status & 33554432U) != 0U) {
    
#line 1021 
    led = _ipw_read_reg32(priv,3145732U);
    
#line 1022 
    led = priv->led_activity_off & led;
    
#line 1024 
    led = ipw_register_toggle(led);
    
#line 1026 
    if ((ipw_debug_level & 524288U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 1026 
      ;
      
#line 1026 
      tmp = preempt_count();
      
#line 1026 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 1026 
                                                   tmp_0 = 73; else 
#line 1026 
                                                                    tmp_0 = 85;
      
#line 1026 
      printk("\001",tmp_0,"ipw_led_activity_off",led);
    }
    else ;
    
#line 1027 
    ipw_write_reg32(priv,3145732U,led);
    
#line 1029 
    if ((ipw_debug_level & 524288U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 1029 
      tmp_1 = preempt_count();
      
#line 1029 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 1029 
                                                     tmp_2 = 73; else 
                                                                   
#line 1029 
                                                                   tmp_2 = 85;
      
#line 1029 
      printk("\001",tmp_2,"ipw_led_activity_off");
    }
    else ;
    
#line 1031 
    priv->status &= 4261412863U;
  }
  else ;
  
#line 1034 
  ldv_spin_unlock_irqrestore_89(& priv->lock,flags);
  return_label: 
#line 1035 
                return;
}


#line 1037  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_bg_led_activity_off(struct work_struct *work)
{
  struct ipw_priv *tmp;
  {
    
#line 1040 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 1040 
    tmp = (struct ipw_priv *)__mptr + 18446744073709544600U;
  }
  
#line 1039 
  struct ipw_priv *priv = tmp;
  
#line 1041 
  ldv_mutex_lock_90(& priv->mutex);
  
#line 1042 
  ipw_led_activity_off(priv);
  
#line 1043 
  ldv_mutex_unlock_91(& priv->mutex);
  
#line 1044 
  return;
}


#line 1046  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_led_band_on(struct ipw_priv *priv)
{
  unsigned long flags;
  u32 led;
  
#line 1052 
  if (((priv->config & 512U) != 0U || (unsigned int)priv->nic_type != 1U) || priv->assoc_network == (struct libipw_network *)0) 
    
#line 1054 
    goto return_label; else ;
  
#line 1056 
  ldv___ldv_spin_lock_92(& priv->lock);
  
#line 1058 
  led = _ipw_read_reg32(priv,3145732U);
  
#line 1059 
  if ((unsigned int)(priv->assoc_network)->mode == 1U) {
    
#line 1060 
    led = priv->led_ofdm_on | led;
    
#line 1061 
    led = priv->led_association_off & led;
    
#line 1062 
    if ((ipw_debug_level & 524288U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 1062 
      tmp = preempt_count();
      
#line 1062 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 1062 
                                                   tmp_0 = 73; else 
#line 1062 
                                                                    tmp_0 = 85;
      
#line 1062 
      printk("\001",tmp_0,"ipw_led_band_on");
    }
    else ;
  }
  else 
    
#line 1063 
    if ((unsigned int)(priv->assoc_network)->mode == 4U) {
      
#line 1064 
      led = priv->led_ofdm_on | led;
      
#line 1065 
      led = priv->led_association_on | led;
      
#line 1066 
      if ((ipw_debug_level & 524288U) != 0U) {
        int tmp_2;
        int tmp_1;
        
#line 1066 
        tmp_1 = preempt_count();
        
#line 1066 
        if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 1066 
                                                       tmp_2 = 73; else 
                                                                    
#line 1066 
                                                                    tmp_2 = 85;
        
#line 1066 
        printk("\001",tmp_2,"ipw_led_band_on");
      }
      else ;
    }
    else {
      
#line 1068 
      led = priv->led_ofdm_off & led;
      
#line 1069 
      led = priv->led_association_on | led;
      
#line 1070 
      if ((ipw_debug_level & 524288U) != 0U) {
        int tmp_4;
        int tmp_3;
        
#line 1070 
        tmp_3 = preempt_count();
        
#line 1070 
        if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 1070 
                                                       tmp_4 = 73; else 
                                                                    
#line 1070 
                                                                    tmp_4 = 85;
        
#line 1070 
        printk("\001",tmp_4,"ipw_led_band_on");
      }
      else ;
    }
  
#line 1073 
  led = ipw_register_toggle(led);
  
#line 1075 
  if ((ipw_debug_level & 524288U) != 0U) {
    int tmp_6;
    int tmp_5;
    
#line 1075 
    ;
    
#line 1075 
    tmp_5 = preempt_count();
    
#line 1075 
    if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 1075 
                                                   tmp_6 = 73; else 
#line 1075 
                                                                    tmp_6 = 85;
    
#line 1075 
    printk("\001",tmp_6,"ipw_led_band_on",led);
  }
  else ;
  
#line 1076 
  ipw_write_reg32(priv,3145732U,led);
  
#line 1078 
  ldv_spin_unlock_irqrestore_93(& priv->lock,flags);
  return_label: 
#line 1079 
                return;
}


#line 1081  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_led_band_off(struct ipw_priv *priv)
{
  unsigned long flags;
  u32 led;
  
#line 1087 
  if ((priv->config & 512U) != 0U || (unsigned int)priv->nic_type != 1U) 
    
#line 1088 
    goto return_label; else ;
  
#line 1090 
  ldv___ldv_spin_lock_94(& priv->lock);
  
#line 1092 
  led = _ipw_read_reg32(priv,3145732U);
  
#line 1093 
  led = priv->led_ofdm_off & led;
  
#line 1094 
  led = priv->led_association_off & led;
  
#line 1096 
  led = ipw_register_toggle(led);
  
#line 1098 
  if ((ipw_debug_level & 524288U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 1098 
    ;
    
#line 1098 
    tmp = preempt_count();
    
#line 1098 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 1098 
                                                 tmp_0 = 73; else 
#line 1098 
                                                                  tmp_0 = 85;
    
#line 1098 
    printk("\001",tmp_0,"ipw_led_band_off",led);
  }
  else ;
  
#line 1099 
  ipw_write_reg32(priv,3145732U,led);
  
#line 1101 
  ldv_spin_unlock_irqrestore_95(& priv->lock,flags);
  return_label: 
#line 1102 
                return;
}


#line 1104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_led_radio_on(struct ipw_priv *priv)
{
  
#line 1106 
  ipw_led_link_on(priv);
  
#line 1107 
  return;
}


#line 1109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_led_radio_off(struct ipw_priv *priv)
{
  
#line 1111 
  ipw_led_activity_off(priv);
  
#line 1112 
  ipw_led_link_off(priv);
  
#line 1113 
  return;
}


#line 1115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_led_link_up(struct ipw_priv *priv)
{
  
#line 1118 
  ipw_led_link_on(priv);
  
#line 1119 
  return;
}


#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_led_link_down(struct ipw_priv *priv)
{
  
#line 1123 
  ipw_led_activity_off(priv);
  
#line 1124 
  ipw_led_link_off(priv);
  
#line 1126 
  if ((priv->status & 12U) != 0U) 
#line 1127 
                                  ipw_led_radio_off(priv); else ;
  
#line 1128 
  return;
}


#line 1130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_led_init(struct ipw_priv *priv)
{
  
#line 1132 
  priv->nic_type = priv->eeprom[74UL];
  
#line 1135 
  priv->led_activity_on = 16U;
  
#line 1136 
  priv->led_activity_off = 4294967279U;
  
#line 1138 
  priv->led_association_on = 32U;
  
#line 1139 
  priv->led_association_off = 4294967263U;
  
#line 1142 
  priv->led_ofdm_on = 64U;
  
#line 1143 
  priv->led_ofdm_off = 4294967231U;
  
#line 1145 
  switch ((int)priv->nic_type) {
    case 1: 
#line 1146 
    ;
    
#line 1148 
    priv->led_activity_on = 32U;
    
#line 1149 
    priv->led_activity_off = 4294967263U;
    
#line 1150 
    priv->led_association_on = 16U;
    
#line 1151 
    priv->led_association_off = 4294967279U;
    
#line 1153 
    if ((priv->config & 512U) == 0U) 
#line 1154 
                                     ipw_led_band_on(priv); else ;
    
#line 1158 
    goto return_label;
    case 3: 
#line 1160 
    ;
    case 2: 
#line 1161 
    ;
    case 4: 
#line 1162 
    ;
    case 0: 
#line 1163 
    ;
    
#line 1164 
    goto ldv_53617;
    default: 
#line 1166 
    ;
    
#line 1167 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 1167 
      ;
      
#line 1167 
      tmp = preempt_count();
      
#line 1167 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 1167 
                                                   tmp_0 = 73; else 
#line 1167 
                                                                    tmp_0 = 85;
      
#line 1167 
      printk("\001",tmp_0,"ipw_led_init",(int)priv->nic_type);
    }
    else ;
    
#line 1169 
    priv->nic_type = (unsigned char)0U;
    
#line 1170 
    goto ldv_53617;
  }
  ldv_53617: 
#line 1173 
  ;
  
#line 1173 
  if ((priv->config & 512U) == 0U) 
    
#line 1174 
    if ((priv->status & 128U) != 0U) 
#line 1175 
                                     ipw_led_link_on(priv); else 
#line 1177 
                                                                 ipw_led_link_off(priv);
  else ;
  return_label: 
#line 1178 
                return;
}


#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_led_shutdown(struct ipw_priv *priv)
{
  
#line 1183 
  ipw_led_activity_off(priv);
  
#line 1184 
  ipw_led_link_off(priv);
  
#line 1185 
  ipw_led_band_off(priv);
  
#line 1186 
  cancel_delayed_work(& priv->led_link_on);
  
#line 1187 
  cancel_delayed_work(& priv->led_link_off);
  
#line 1188 
  cancel_delayed_work(& priv->led_act_off);
  
#line 1189 
  return;
}


#line 1198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t show_debug_level(struct device_driver *d, char *buf)
{
  ssize_t __retres;
  int tmp;
  
#line 1200 
  tmp = sprintf(buf,"0x%08X\n",ipw_debug_level);
  
#line 1200 
  __retres = (long)tmp;
  
#line 1200 
  return __retres;
}


#line 1203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t store_debug_level(struct device_driver *d, char const *buf, size_t count)
{
  ssize_t __retres;
  u32 val;
  __kernel_size_t tmp_1;
  
#line 1206 
  char *p = (char *)buf;
  
#line 1209 
  if ((((int)*(p + 1U) == 120 || (int)*(p + 1U) == 88) || (int)*p == 120) || (int)*p == 88) {
    unsigned long tmp;
    
#line 1210 
    p += 1;
    
#line 1211 
    if ((int)*p == 120 || (int)*p == 88) 
#line 1212 
                                         p += 1; else ;
    
#line 1213 
    tmp = simple_strtoul((char const *)p,& p,16U);
    
#line 1213 
    val = (unsigned int)tmp;
  }
  else {
    unsigned long tmp_0;
    
#line 1215 
    tmp_0 = simple_strtoul((char const *)p,& p,10U);
    
#line 1215 
    val = (unsigned int)tmp_0;
  }
  
#line 1216 
  if ((char const *)p == buf) 
#line 1217 
                              printk("\001",buf); else 
#line 1220 
                                                       ipw_debug_level = val;
  
#line 1222 
  tmp_1 = strnlen(buf,count);
  
#line 1222 
  __retres = (long)tmp_1;
  
#line 1222 
  return __retres;
}


#line 1225  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct driver_attribute driver_attr_debug_level = {.attr = {.name = "debug_level", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_debug_level, .store = & store_debug_level};

#line 1228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
__inline static u32 ipw_get_event_log_len(struct ipw_priv *priv)
{
  u32 tmp_3;
  u32 tmp_2;
  
#line 1231 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 1231 
    tmp = preempt_count();
    
#line 1231 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 1231 
                                                 tmp_0 = 73; else 
#line 1231 
                                                                  tmp_0 = 85;
    
#line 1231 
    printk("\001",tmp_0,"ipw_get_event_log_len",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",1231,1556U);
  }
  else ;
  
#line 1231 
  tmp_2 = _ipw_read32(priv,1556UL);
  
#line 1231 
  ;
  
#line 1231 
  tmp_3 = _ipw_read_reg32(priv,tmp_2);
  
#line 1231 
  return tmp_3;
}


#line 1234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_capture_event_log(struct ipw_priv *priv, u32 log_len, struct ipw_event *log)
{
  u32 base;
  
#line 1239 
  if (log_len != 0U) {
    u32 tmp_2;
    
#line 1240 
    if ((ipw_debug_level & 134217728U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 1240 
      tmp = preempt_count();
      
#line 1240 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 1240 
                                                   tmp_0 = 73; else 
#line 1240 
                                                                    tmp_0 = 85;
      
#line 1240 
      printk("\001",tmp_0,"ipw_capture_event_log",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",1240,1556U);
    }
    else ;
    
#line 1240 
    tmp_2 = _ipw_read32(priv,1556UL);
    
#line 1240 
    base = tmp_2;
    
#line 1241 
    if ((ipw_debug_level & 134217728U) != 0U) {
      int tmp_4;
      int tmp_3;
      
#line 1241 
      ;
      
#line 1241 
      ;
      
#line 1241 
      tmp_3 = preempt_count();
      
#line 1241 
      if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 1241 
                                                     tmp_4 = 73; else 
                                                                   
#line 1241 
                                                                   tmp_4 = 85;
      
#line 1241 
      printk("\001",tmp_4,"ipw_capture_event_log",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",1242,base + 8U,log_len * 12U);
    }
    else ;
    
#line 1241 
    _ipw_read_indirect(priv,base + 8U,(u8 *)log,(int)(log_len * 12U));
  }
  else ;
  
#line 1244 
  return;
}


#line 1246  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct ipw_fw_error *ipw_alloc_error_log(struct ipw_priv *priv)
{
  struct ipw_fw_error *__retres;
  struct ipw_fw_error *error;
  u32 tmp_3;
  
#line 1249 
  u32 log_len = ipw_get_event_log_len(priv);
  
#line 1250 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 1250 
    tmp_0 = preempt_count();
    
#line 1250 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 1250 
                                                   tmp_1 = 73; else 
#line 1250 
                                                                    tmp_1 = 85;
    
#line 1250 
    printk("\001",tmp_1,"ipw_alloc_error_log",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",1250,1552U);
  }
  else ;
  
#line 1250 
  tmp_3 = _ipw_read32(priv,1552UL);
  
#line 1250 
  u32 base = tmp_3;
  
#line 1251 
  u32 elem_len = _ipw_read_reg32(priv,base);
  
#line 1253 
  error = (struct ipw_fw_error *)kmalloc(((unsigned long)elem_len * 28UL + (unsigned long)log_len * 12UL) + 40UL,32U);
  
#line 1256 
  if (error == (struct ipw_fw_error *)0) {
    
#line 1257 
    printk("\001");
    
#line 1259 
    __retres = (struct ipw_fw_error *)0;
    
#line 1259 
    goto return_label;
  }
  else ;
  
#line 1261 
  error->jiffies = jiffies;
  
#line 1262 
  error->status = priv->status;
  
#line 1263 
  error->config = priv->config;
  
#line 1264 
  error->elem_len = elem_len;
  
#line 1265 
  error->log_len = log_len;
  
#line 1266 
  error->elem = (struct ipw_error_elem *)(& error->payload);
  
#line 1267 
  error->log = (struct ipw_event *)(error->elem + elem_len);
  
#line 1269 
  ipw_capture_event_log(priv,log_len,error->log);
  
#line 1271 
  if (elem_len != 0U) {
    
#line 1272 
    if ((ipw_debug_level & 134217728U) != 0U) {
      int tmp_7;
      int tmp_6;
      
#line 1272 
      ;
      
#line 1272 
      ;
      
#line 1272 
      tmp_6 = preempt_count();
      
#line 1272 
      if (((unsigned long)tmp_6 & 2096896UL) != 0UL) 
#line 1272 
                                                     tmp_7 = 73; else 
                                                                   
#line 1272 
                                                                   tmp_7 = 85;
      
#line 1272 
      printk("\001",tmp_7,"ipw_alloc_error_log",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",1273,base + 4U,elem_len * 28U);
    }
    else ;
    
#line 1272 
    _ipw_read_indirect(priv,base + 4U,(u8 *)error->elem,(int)(elem_len * 28U));
  }
  else ;
  
#line 1275 
  __retres = error;
  return_label: 
#line 1275 
                return __retres;
}


#line 1278  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t show_event_log(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  u32 log_size;
  struct ipw_event *log;
  u32 i;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  
#line 1281 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1282 
  u32 log_len = ipw_get_event_log_len(priv);
  
#line 1285 
  u32 len = 0U;
  
#line 1288 
  if (log_len <= 340U) 
#line 1288 
                       log_size = log_len * 12U; else 
#line 1288 
                                                      log_size = 4096U;
  
#line 1290 
  log = (struct ipw_event *)kzalloc((unsigned long)log_size,208U);
  
#line 1291 
  if (log == (struct ipw_event *)0) {
    
#line 1292 
    printk("\001");
    
#line 1293 
    __retres = 0L;
    
#line 1293 
    goto return_label;
  }
  else ;
  
#line 1295 
  log_len = log_size / 12U;
  
#line 1296 
  ipw_capture_event_log(priv,log_len,log);
  
#line 1298 
  tmp_2 = snprintf(buf + len,4096UL - (unsigned long)len,"%08X",log_len);
  
#line 1298 
  len = (unsigned int)tmp_2 + len;
  
#line 1299 
  i = 0U;
  
#line 1299 
  goto ldv_53687;
  ldv_53686: 
#line 1300 
  ;
  
#line 1300 
  tmp_3 = snprintf(buf + len,4096UL - (unsigned long)len,"\n%08X%08X%08X",(log + i)->time,(log + i)->event,(log + i)->data);
  
#line 1302 
  len = (unsigned int)tmp_3 + len;
  
#line 1299 
  i += 1U;
  ldv_53687: 
#line 1300 
  ;
  
#line 1299 
  if (i < log_len) 
#line 1301 
                   goto ldv_53686; else 
#line 1304 
                                        goto ldv_53688;
  ldv_53688: 
#line 1305 
  ;
  
#line 1303 
  tmp_4 = snprintf(buf + len,4096UL - (unsigned long)len,"\n");
  
#line 1303 
  len = (unsigned int)tmp_4 + len;
  
#line 1304 
  kfree((void const *)log);
  
#line 1305 
  __retres = (long)len;
  return_label: 
#line 1305 
                return __retres;
}


#line 1308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct device_attribute dev_attr_event_log = {.attr = {.name = "event_log", .mode = (unsigned short)292U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_event_log, .store = (ssize_t (*)(struct device *, struct device_attribute *, char const *, size_t ))0};

#line 1310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t show_error(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  u32 i;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  
#line 1313 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1314 
  u32 len = 0U;
  
#line 1315 
  if (priv->error == (struct ipw_fw_error *)0) {
    
#line 1316 
    __retres = 0L;
    
#line 1316 
    goto return_label;
  }
  else ;
  
#line 1317 
  tmp_0 = snprintf(buf + len,4096UL - (unsigned long)len,"%08lX%08X%08X%08X",(priv->error)->jiffies,(priv->error)->status,(priv->error)->config,(priv->error)->elem_len);
  
#line 1321 
  len = (unsigned int)tmp_0 + len;
  
#line 1322 
  i = 0U;
  
#line 1322 
  goto ldv_53717;
  ldv_53716: 
#line 1323 
  ;
  
#line 1323 
  tmp_1 = snprintf(buf + len,4096UL - (unsigned long)len,"\n%08X%08X%08X%08X%08X%08X%08X",((priv->error)->elem + i)->time,((priv->error)->elem + i)->desc,((priv->error)->elem + i)->blink1,((priv->error)->elem + i)->blink2,((priv->error)->elem + i)->link1,((priv->error)->elem + i)->link2,((priv->error)->elem + i)->data);
  
#line 1331 
  len = (unsigned int)tmp_1 + len;
  
#line 1322 
  i += 1U;
  ldv_53717: 
#line 1323 
  ;
  
#line 1322 
  if ((priv->error)->elem_len > i) 
#line 1324 
                                   goto ldv_53716; else 
#line 1327 
                                                        goto ldv_53718;
  ldv_53718: 
#line 1328 
  ;
  
#line 1333 
  tmp_2 = snprintf(buf + len,4096UL - (unsigned long)len,"\n%08X",(priv->error)->log_len);
  
#line 1334 
  len = (unsigned int)tmp_2 + len;
  
#line 1335 
  i = 0U;
  
#line 1335 
  goto ldv_53720;
  ldv_53719: 
#line 1336 
  ;
  
#line 1336 
  tmp_3 = snprintf(buf + len,4096UL - (unsigned long)len,"\n%08X%08X%08X",((priv->error)->log + i)->time,((priv->error)->log + i)->event,((priv->error)->log + i)->data);
  
#line 1340 
  len = (unsigned int)tmp_3 + len;
  
#line 1335 
  i += 1U;
  ldv_53720: 
#line 1336 
  ;
  
#line 1335 
  if ((priv->error)->log_len > i) 
#line 1337 
                                  goto ldv_53719; else 
#line 1340 
                                                       goto ldv_53721;
  ldv_53721: 
#line 1341 
  ;
  
#line 1341 
  tmp_4 = snprintf(buf + len,4096UL - (unsigned long)len,"\n");
  
#line 1341 
  len = (unsigned int)tmp_4 + len;
  
#line 1342 
  __retres = (long)len;
  return_label: 
#line 1342 
                return __retres;
}


#line 1345  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t clear_error(struct device *d, struct device_attribute *attr, char const *buf, size_t count)
{
  ssize_t __retres;
  
#line 1349 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1351 
  kfree((void const *)priv->error);
  
#line 1352 
  priv->error = (struct ipw_fw_error *)0;
  
#line 1353 
  __retres = (long)count;
  
#line 1353 
  return __retres;
}


#line 1356  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct device_attribute dev_attr_error = {.attr = {.name = "error", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_error, .store = & clear_error};

#line 1358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t show_cmd_log(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  u32 i;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  
#line 1361 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1362 
  u32 len = 0U;
  
#line 1363 
  if (priv->cmdlog == (struct ipw_cmd_log *)0) {
    
#line 1364 
    __retres = 0L;
    
#line 1364 
    goto return_label;
  }
  else ;
  
#line 1365 
  i = (unsigned int)((priv->cmdlog_pos + 1) % priv->cmdlog_len);
  
#line 1365 
  goto ldv_53757;
  ldv_53756: 
#line 1366 
  ;
  
#line 1369 
  tmp_0 = snprintf(buf + len,4096UL - (unsigned long)len,"\n%08lX%08X%08X%08X\n",(priv->cmdlog + i)->jiffies,(priv->cmdlog + i)->retcode,(int)(priv->cmdlog + i)->cmd.cmd,(int)(priv->cmdlog + i)->cmd.len);
  
#line 1372 
  len = (unsigned int)tmp_0 + len;
  
#line 1374 
  tmp_1 = snprintk_buf((u8 *)(buf + len),4096UL - (unsigned long)len,(u8 const *)(& (priv->cmdlog + i)->cmd.param),(unsigned long)(priv->cmdlog + i)->cmd.len);
  
#line 1376 
  len = (unsigned int)tmp_1 + len;
  
#line 1377 
  tmp_2 = snprintf(buf + len,4096UL - (unsigned long)len,"\n");
  
#line 1377 
  len = (unsigned int)tmp_2 + len;
  
#line 1367 
  i = (i + 1U) % (unsigned int)priv->cmdlog_len;
  ldv_53757: 
#line 1368 
  ;
  
#line 1366 
  if ((unsigned int)priv->cmdlog_pos != i && len <= 4095U) 
#line 1368 
                                                           goto ldv_53756; else 
                                                                    
#line 1371 
                                                                    goto ldv_53758;
  ldv_53758: 
#line 1372 
  ;
  
#line 1379 
  tmp_3 = snprintf(buf + len,4096UL - (unsigned long)len,"\n");
  
#line 1379 
  len = (unsigned int)tmp_3 + len;
  
#line 1380 
  __retres = (long)len;
  return_label: 
#line 1380 
                return __retres;
}


#line 1383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct device_attribute dev_attr_cmd_log = {.attr = {.name = "cmd_log", .mode = (unsigned short)292U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_cmd_log, .store = (ssize_t (*)(struct device *, struct device_attribute *, char const *, size_t ))0};

#line 1386 
static void ipw_prom_free(struct ipw_priv *priv);


#line 1387 
static int ipw_prom_alloc(struct ipw_priv *priv);


#line 1388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t store_rtap_iface(struct device *d, struct device_attribute *attr, char const *buf, size_t count)
{
  ssize_t __retres;
  
#line 1392 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1393 
  int rc = 0;
  
#line 1395 
  if (count == 0UL) {
    
#line 1396 
    __retres = -22L;
    
#line 1396 
    goto return_label;
  }
  else ;
  
#line 1398 
  switch ((int)*buf) {
    bool tmp_0;
    case 48: 
#line 1399 
    ;
    
#line 1400 
    if (rtap_iface == 0) {
      
#line 1401 
      __retres = (long)count;
      
#line 1401 
      goto return_label;
    }
    else ;
    
#line 1403 
    tmp_0 = netif_running((struct net_device const *)priv->prom_net_dev);
    
#line 1403 
    if ((int)tmp_0 != 0) {
      
#line 1404 
      printk("\001");
      
#line 1405 
      __retres = (long)count;
      
#line 1405 
      goto return_label;
    }
    else ;
    
#line 1408 
    ipw_prom_free(priv);
    
#line 1409 
    rtap_iface = 0;
    
#line 1410 
    goto ldv_53791;
    case 49: 
#line 1412 
    ;
    
#line 1413 
    if (rtap_iface != 0) {
      
#line 1414 
      __retres = (long)count;
      
#line 1414 
      goto return_label;
    }
    else ;
    
#line 1416 
    rc = ipw_prom_alloc(priv);
    
#line 1417 
    if (rc == 0) 
#line 1418 
                 rtap_iface = 1; else ;
    
#line 1419 
    goto ldv_53791;
    default: 
#line 1421 
    ;
    
#line 1422 
    __retres = -22L;
    
#line 1422 
    goto return_label;
  }
  ldv_53791: 
#line 1425 
  ;
  
#line 1425 
  if (rc != 0) 
#line 1426 
               printk("\001",rc); else ;
  
#line 1430 
  __retres = (long)count;
  return_label: 
#line 1430 
                return __retres;
}


#line 1433  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t show_rtap_iface(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  
#line 1437 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1438 
  if (rtap_iface != 0) {
    int tmp_0;
    
#line 1439 
    tmp_0 = sprintf(buf,"%s",(char *)(& (priv->prom_net_dev)->name));
    
#line 1439 
    __retres = (long)tmp_0;
    
#line 1439 
    goto return_label;
  }
  else {
    
#line 1441 
    *buf = (char)45;
    
#line 1442 
    *(buf + 1U) = (char)49;
    
#line 1443 
    *(buf + 2U) = (char)0;
    
#line 1444 
    __retres = 3L;
    
#line 1444 
    goto return_label;
  }
  return_label: 
#line 1438 
                return __retres;
}


#line 1448  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct device_attribute dev_attr_rtap_iface = {.attr = {.name = "rtap_iface", .mode = (unsigned short)384U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_rtap_iface, .store = & store_rtap_iface};

#line 1451  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t store_rtap_filter(struct device *d, struct device_attribute *attr, char const *buf, size_t count)
{
  ssize_t __retres;
  long tmp_0;
  
#line 1455 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1457 
  if (priv->prom_priv == (struct ipw_prom_priv *)0) {
    
#line 1458 
    printk("\001");
    
#line 1460 
    __retres = -1L;
    
#line 1460 
    goto return_label;
  }
  else ;
  
#line 1463 
  tmp_0 = simple_strtol(buf,(char **)0,0U);
  
#line 1463 
  (priv->prom_priv)->filter = (enum ipw_prom_filter)tmp_0;
  
#line 1465 
  if ((ipw_debug_level & 4U) != 0U) {
    int tmp_1;
    int tmp_2;
    int tmp_3;
    int tmp_4;
    int tmp_5;
    int tmp_6;
    int tmp_7;
    int tmp_8;
    int tmp_9;
    int tmp_10;
    int tmp_11;
    int tmp_12;
    int tmp_13;
    int tmp_14;
    int tmp_15;
    int tmp_16;
    int tmp_18;
    int tmp_17;
    
#line 1465 
    if (((unsigned int)(priv->prom_priv)->filter & 1U) != 0U) 
#line 1465 
                                                              tmp_1 = 49; else 
                                                                    
#line 1465 
                                                                    tmp_1 = 48;
    
#line 1465 
    if (((unsigned int)(priv->prom_priv)->filter & 2U) != 0U) 
#line 1465 
                                                              tmp_2 = 49; else 
                                                                    
#line 1465 
                                                                    tmp_2 = 48;
    
#line 1465 
    if (((unsigned int)(priv->prom_priv)->filter & 4U) != 0U) 
#line 1465 
                                                              tmp_3 = 49; else 
                                                                    
#line 1465 
                                                                    tmp_3 = 48;
    
#line 1465 
    if (((unsigned int)(priv->prom_priv)->filter & 8U) != 0U) 
#line 1465 
                                                              tmp_4 = 49; else 
                                                                    
#line 1465 
                                                                    tmp_4 = 48;
    
#line 1465 
    if (((unsigned int)(priv->prom_priv)->filter & 16U) != 0U) 
#line 1465 
                                                               tmp_5 = 49; else 
                                                                    
#line 1465 
                                                                    tmp_5 = 48;
    
#line 1465 
    if (((unsigned int)(priv->prom_priv)->filter & 32U) != 0U) 
#line 1465 
                                                               tmp_6 = 49; else 
                                                                    
#line 1465 
                                                                    tmp_6 = 48;
    
#line 1465 
    if (((unsigned int)(priv->prom_priv)->filter & 64U) != 0U) 
#line 1465 
                                                               tmp_7 = 49; else 
                                                                    
#line 1465 
                                                                    tmp_7 = 48;
    
#line 1465 
    if (((unsigned int)(priv->prom_priv)->filter & 128U) != 0U) 
#line 1465 
                                                                tmp_8 = 49; else 
                                                                    
#line 1465 
                                                                    tmp_8 = 48;
    
#line 1465 
    if (((unsigned int)(priv->prom_priv)->filter & 256U) != 0U) 
#line 1465 
                                                                tmp_9 = 49; else 
                                                                    
#line 1465 
                                                                    tmp_9 = 48;
    
#line 1465 
    if (((unsigned int)(priv->prom_priv)->filter & 512U) != 0U) 
#line 1465 
                                                                tmp_10 = 49; else 
                                                                    
#line 1465 
                                                                    tmp_10 = 48;
    
#line 1465 
    if (((unsigned int)(priv->prom_priv)->filter & 1024U) != 0U) 
#line 1465 
                                                                 tmp_11 = 49; else 
                                                                    
#line 1465 
                                                                    tmp_11 = 48;
    
#line 1465 
    if (((unsigned int)(priv->prom_priv)->filter & 2048U) != 0U) 
#line 1465 
                                                                 tmp_12 = 49; else 
                                                                    
#line 1465 
                                                                    tmp_12 = 48;
    
#line 1465 
    if (((unsigned int)(priv->prom_priv)->filter & 4096U) != 0U) 
#line 1465 
                                                                 tmp_13 = 49; else 
                                                                    
#line 1465 
                                                                    tmp_13 = 48;
    
#line 1465 
    if (((unsigned int)(priv->prom_priv)->filter & 8192U) != 0U) 
#line 1465 
                                                                 tmp_14 = 49; else 
                                                                    
#line 1465 
                                                                    tmp_14 = 48;
    
#line 1465 
    if (((unsigned int)(priv->prom_priv)->filter & 16384U) != 0U) 
#line 1465 
                                                                  tmp_15 = 49; else 
                                                                    
#line 1465 
                                                                    tmp_15 = 48;
    
#line 1465 
    if (((unsigned int)(priv->prom_priv)->filter & 32768U) != 0U) 
#line 1465 
                                                                  tmp_16 = 49; else 
                                                                    
#line 1465 
                                                                    tmp_16 = 48;
    
#line 1465 
    tmp_17 = preempt_count();
    
#line 1465 
    if (((unsigned long)tmp_17 & 2096896UL) != 0UL) 
#line 1465 
                                                    tmp_18 = 73; else 
                                                                   
#line 1465 
                                                                   tmp_18 = 85;
    
#line 1465 
    printk("\001",tmp_18,"store_rtap_filter",tmp_16,tmp_15,tmp_14,tmp_13,tmp_12,tmp_11,tmp_10,tmp_9,tmp_8,tmp_7,tmp_6,tmp_5,tmp_4,tmp_3,tmp_2,tmp_1);
  }
  else ;
  
#line 1468 
  __retres = (long)count;
  return_label: 
#line 1468 
                return __retres;
}


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t show_rtap_filter(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_1;
  unsigned int tmp_0;
  
#line 1475 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1476 
  if (priv->prom_priv != (struct ipw_prom_priv *)0) 
#line 1476 
                                                    tmp_0 = (unsigned int)(priv->prom_priv)->filter; else 
                                                                    
#line 1476 
                                                                    tmp_0 = 0U;
  
#line 1476 
  ;
  
#line 1476 
  tmp_1 = sprintf(buf,"0x%04X",tmp_0);
  
#line 1476 
  __retres = (long)tmp_1;
  
#line 1476 
  return __retres;
}


#line 1480  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct device_attribute dev_attr_rtap_filter = {.attr = {.name = "rtap_filter", .mode = (unsigned short)384U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_rtap_filter, .store = & store_rtap_filter};

#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t show_scan_age(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_0;
  
#line 1487 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1488 
  tmp_0 = sprintf(buf,"%d\n",(priv->ieee)->scan_age);
  
#line 1488 
  __retres = (long)tmp_0;
  
#line 1488 
  return __retres;
}


#line 1491  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t store_scan_age(struct device *d, struct device_attribute *attr, char const *buf, size_t count)
{
  ssize_t __retres;
  unsigned long tmp_0;
  unsigned long val;
  
#line 1494 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1495 
  struct net_device *dev = priv->net_dev;
  
#line 1496 
  char buffer[9U] = {(char)'0', (char)'0', (char)'0', (char)'0', (char)'0', (char)'0', (char)'0', (char)'0', (char)'\000'};
  
#line 1498 
  if (8UL < count) 
#line 1498 
                   tmp_0 = 8UL; else 
#line 1498 
                                     tmp_0 = count;
  
#line 1497 
  unsigned long len = tmp_0;
  
#line 1500 
  char *p = (char *)(& buffer);
  
#line 1502 
  if ((ipw_debug_level & 4U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 1502 
    tmp_1 = preempt_count();
    
#line 1502 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 1502 
                                                   tmp_2 = 73; else 
#line 1502 
                                                                    tmp_2 = 85;
    
#line 1502 
    printk("\001",tmp_2,"store_scan_age");
  }
  else ;
  
#line 1504 
  strncpy((char *)(& buffer),buf,len);
  
#line 1505 
  buffer[len] = (char)0;
  
#line 1507 
  if ((((int)*(p + 1U) == 120 || (int)*(p + 1U) == 88) || (int)*p == 120) || (int)*p == 88) {
    
#line 1508 
    p += 1;
    
#line 1509 
    if ((int)*p == 120 || (int)*p == 88) 
#line 1510 
                                         p += 1; else ;
    
#line 1511 
    val = simple_strtoul((char const *)p,& p,16U);
  }
  else 
#line 1513 
       val = simple_strtoul((char const *)p,& p,10U);
  
#line 1514 
  if ((char *)(& buffer) == p) {
    
#line 1515 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_4;
      int tmp_3;
      
#line 1515 
      ;
      
#line 1515 
      tmp_3 = preempt_count();
      
#line 1515 
      if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 1515 
                                                     tmp_4 = 73; else 
                                                                   
#line 1515 
                                                                   tmp_4 = 85;
      
#line 1515 
      printk("\001",tmp_4,"store_scan_age",(char *)(& dev->name));
    }
    else ;
  }
  else {
    
#line 1517 
    (priv->ieee)->scan_age = (int)val;
    
#line 1518 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_6;
      int tmp_5;
      
#line 1518 
      ;
      
#line 1518 
      tmp_5 = preempt_count();
      
#line 1518 
      if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 1518 
                                                     tmp_6 = 73; else 
                                                                   
#line 1518 
                                                                   tmp_6 = 85;
      
#line 1518 
      printk("\001",tmp_6,"store_scan_age",(priv->ieee)->scan_age);
    }
    else ;
  }
  
#line 1521 
  if ((ipw_debug_level & 4U) != 0U) {
    int tmp_8;
    int tmp_7;
    
#line 1521 
    tmp_7 = preempt_count();
    
#line 1521 
    if (((unsigned long)tmp_7 & 2096896UL) != 0UL) 
#line 1521 
                                                   tmp_8 = 73; else 
#line 1521 
                                                                    tmp_8 = 85;
    
#line 1521 
    printk("\001",tmp_8,"store_scan_age");
  }
  else ;
  
#line 1522 
  __retres = (long)len;
  
#line 1522 
  return __retres;
}


#line 1525  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct device_attribute dev_attr_scan_age = {.attr = {.name = "scan_age", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_scan_age, .store = & store_scan_age};

#line 1527  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t show_led(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_0;
  
#line 1530 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1531 
  tmp_0 = sprintf(buf,"%d\n",(priv->config & 512U) == 0U);
  
#line 1531 
  __retres = (long)tmp_0;
  
#line 1531 
  return __retres;
}


#line 1534  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t store_led(struct device *d, struct device_attribute *attr, char const *buf, size_t count)
{
  ssize_t __retres;
  
#line 1537 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1539 
  if ((ipw_debug_level & 4U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 1539 
    tmp_0 = preempt_count();
    
#line 1539 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 1539 
                                                   tmp_1 = 73; else 
#line 1539 
                                                                    tmp_1 = 85;
    
#line 1539 
    printk("\001",tmp_1,"store_led");
  }
  else ;
  
#line 1541 
  if (count == 0UL) {
    
#line 1542 
    __retres = 0L;
    
#line 1542 
    goto return_label;
  }
  else ;
  
#line 1544 
  if ((int)*buf == 0) {
    
#line 1545 
    if ((ipw_debug_level & 524288U) != 0U) {
      int tmp_3;
      int tmp_2;
      
#line 1545 
      tmp_2 = preempt_count();
      
#line 1545 
      if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 1545 
                                                     tmp_3 = 73; else 
                                                                   
#line 1545 
                                                                   tmp_3 = 85;
      
#line 1545 
      printk("\001",tmp_3,"store_led");
    }
    else ;
    
#line 1546 
    priv->config |= 512U;
    
#line 1547 
    ipw_led_shutdown(priv);
  }
  else {
    
#line 1549 
    if ((ipw_debug_level & 524288U) != 0U) {
      int tmp_5;
      int tmp_4;
      
#line 1549 
      tmp_4 = preempt_count();
      
#line 1549 
      if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
#line 1549 
                                                     tmp_5 = 73; else 
                                                                   
#line 1549 
                                                                   tmp_5 = 85;
      
#line 1549 
      printk("\001",tmp_5,"store_led");
    }
    else ;
    
#line 1550 
    priv->config &= 4294966783U;
    
#line 1551 
    ipw_led_init(priv);
  }
  
#line 1554 
  if ((ipw_debug_level & 4U) != 0U) {
    int tmp_7;
    int tmp_6;
    
#line 1554 
    tmp_6 = preempt_count();
    
#line 1554 
    if (((unsigned long)tmp_6 & 2096896UL) != 0UL) 
#line 1554 
                                                   tmp_7 = 73; else 
#line 1554 
                                                                    tmp_7 = 85;
    
#line 1554 
    printk("\001",tmp_7,"store_led");
  }
  else ;
  
#line 1555 
  __retres = (long)count;
  return_label: 
#line 1555 
                return __retres;
}


#line 1558  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct device_attribute dev_attr_led = {.attr = {.name = "led", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_led, .store = & store_led};

#line 1560  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t show_status(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_0;
  
#line 1563 
  struct ipw_priv *p = dev_get_drvdata((struct device const *)d);
  
#line 1564 
  tmp_0 = sprintf(buf,"0x%08x\n",(int)p->status);
  
#line 1564 
  __retres = (long)tmp_0;
  
#line 1564 
  return __retres;
}


#line 1567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct device_attribute dev_attr_status = {.attr = {.name = "status", .mode = (unsigned short)292U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_status, .store = (ssize_t (*)(struct device *, struct device_attribute *, char const *, size_t ))0};

#line 1569  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t show_cfg(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_0;
  
#line 1572 
  struct ipw_priv *p = dev_get_drvdata((struct device const *)d);
  
#line 1573 
  tmp_0 = sprintf(buf,"0x%08x\n",(int)p->config);
  
#line 1573 
  __retres = (long)tmp_0;
  
#line 1573 
  return __retres;
}


#line 1576  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct device_attribute dev_attr_cfg = {.attr = {.name = "cfg", .mode = (unsigned short)292U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_cfg, .store = (ssize_t (*)(struct device *, struct device_attribute *, char const *, size_t ))0};

#line 1578  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t show_nic_type(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_0;
  
#line 1581 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1582 
  tmp_0 = sprintf(buf,"TYPE: %d\n",(int)priv->nic_type);
  
#line 1582 
  __retres = (long)tmp_0;
  
#line 1582 
  return __retres;
}


#line 1585  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct device_attribute dev_attr_nic_type = {.attr = {.name = "nic_type", .mode = (unsigned short)292U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_nic_type, .store = (ssize_t (*)(struct device *, struct device_attribute *, char const *, size_t ))0};

#line 1587  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t show_ucode_version(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_1;
  int tmp_2;
  
#line 1590 
  u32 len = 4U;
  
#line 1590 
  u32 tmp = 0U;
  
#line 1591 
  struct ipw_priv *p = dev_get_drvdata((struct device const *)d);
  
#line 1593 
  tmp_1 = ipw_get_ordinal(p,61955U,(void *)(& tmp),& len);
  
#line 1593 
  if (tmp_1 != 0) {
    
#line 1594 
    __retres = 0L;
    
#line 1594 
    goto return_label;
  }
  else ;
  
#line 1596 
  tmp_2 = sprintf(buf,"0x%08x\n",tmp);
  
#line 1596 
  __retres = (long)tmp_2;
  return_label: 
#line 1596 
                return __retres;
}


#line 1599  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct device_attribute dev_attr_ucode_version = {.attr = {.name = "ucode_version", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_ucode_version, .store = (ssize_t (*)(struct device *, struct device_attribute *, char const *, size_t ))0};

#line 1601  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t show_rtc(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_1;
  int tmp_2;
  
#line 1604 
  u32 len = 4U;
  
#line 1604 
  u32 tmp = 0U;
  
#line 1605 
  struct ipw_priv *p = dev_get_drvdata((struct device const *)d);
  
#line 1607 
  tmp_1 = ipw_get_ordinal(p,61958U,(void *)(& tmp),& len);
  
#line 1607 
  if (tmp_1 != 0) {
    
#line 1608 
    __retres = 0L;
    
#line 1608 
    goto return_label;
  }
  else ;
  
#line 1610 
  tmp_2 = sprintf(buf,"0x%08x\n",tmp);
  
#line 1610 
  __retres = (long)tmp_2;
  return_label: 
#line 1610 
                return __retres;
}


#line 1613  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct device_attribute dev_attr_rtc = {.attr = {.name = "rtc", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_rtc, .store = (ssize_t (*)(struct device *, struct device_attribute *, char const *, size_t ))0};

#line 1619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t show_eeprom_delay(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_0;
  
#line 1622 
  struct ipw_priv *p = dev_get_drvdata((struct device const *)d);
  
#line 1623 
  int n = p->eeprom_delay;
  
#line 1624 
  tmp_0 = sprintf(buf,"%i\n",n);
  
#line 1624 
  __retres = (long)tmp_0;
  
#line 1624 
  return __retres;
}


#line 1626  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t store_eeprom_delay(struct device *d, struct device_attribute *attr, char const *buf, size_t count)
{
  ssize_t __retres;
  __kernel_size_t tmp_0;
  
#line 1630 
  struct ipw_priv *p = dev_get_drvdata((struct device const *)d);
  
#line 1631 
  sscanf(buf,"%i",& p->eeprom_delay);
  
#line 1632 
  tmp_0 = strnlen(buf,count);
  
#line 1632 
  __retres = (long)tmp_0;
  
#line 1632 
  return __retres;
}


#line 1635  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct device_attribute dev_attr_eeprom_delay = {.attr = {.name = "eeprom_delay", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_eeprom_delay, .store = & store_eeprom_delay};

#line 1638  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t show_command_event_reg(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_0;
  
#line 1641 
  u32 reg = 0U;
  
#line 1642 
  struct ipw_priv *p = dev_get_drvdata((struct device const *)d);
  
#line 1644 
  reg = _ipw_read_reg32(p,3145732U);
  
#line 1645 
  tmp_0 = sprintf(buf,"0x%08x\n",reg);
  
#line 1645 
  __retres = (long)tmp_0;
  
#line 1645 
  return __retres;
}


#line 1647  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t store_command_event_reg(struct device *d, struct device_attribute *attr, char const *buf, size_t count)
{
  ssize_t __retres;
  u32 reg;
  __kernel_size_t tmp_0;
  
#line 1652 
  struct ipw_priv *p = dev_get_drvdata((struct device const *)d);
  
#line 1654 
  sscanf(buf,"%x",& reg);
  
#line 1655 
  ipw_write_reg32(p,3145732U,reg);
  
#line 1656 
  tmp_0 = strnlen(buf,count);
  
#line 1656 
  __retres = (long)tmp_0;
  
#line 1656 
  return __retres;
}


#line 1659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct device_attribute dev_attr_command_event_reg = {.attr = {.name = "command_event_reg", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_command_event_reg, .store = & store_command_event_reg};

#line 1662  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t show_mem_gpio_reg(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_0;
  
#line 1665 
  u32 reg = 0U;
  
#line 1666 
  struct ipw_priv *p = dev_get_drvdata((struct device const *)d);
  
#line 1668 
  reg = _ipw_read_reg32(p,3150080U);
  
#line 1669 
  tmp_0 = sprintf(buf,"0x%08x\n",reg);
  
#line 1669 
  __retres = (long)tmp_0;
  
#line 1669 
  return __retres;
}


#line 1671  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t store_mem_gpio_reg(struct device *d, struct device_attribute *attr, char const *buf, size_t count)
{
  ssize_t __retres;
  u32 reg;
  __kernel_size_t tmp_0;
  
#line 1676 
  struct ipw_priv *p = dev_get_drvdata((struct device const *)d);
  
#line 1678 
  sscanf(buf,"%x",& reg);
  
#line 1679 
  ipw_write_reg32(p,3150080U,reg);
  
#line 1680 
  tmp_0 = strnlen(buf,count);
  
#line 1680 
  __retres = (long)tmp_0;
  
#line 1680 
  return __retres;
}


#line 1683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct device_attribute dev_attr_mem_gpio_reg = {.attr = {.name = "mem_gpio_reg", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_mem_gpio_reg, .store = & store_mem_gpio_reg};

#line 1686  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t show_indirect_dword(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_0;
  
#line 1689 
  u32 reg = 0U;
  
#line 1690 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1692 
  if ((priv->status & 536870912U) != 0U) 
#line 1693 
                                         reg = _ipw_read_reg32(priv,priv->indirect_dword); else 
                                                                    
#line 1695 
                                                                    reg = 0U;
  
#line 1697 
  tmp_0 = sprintf(buf,"0x%08x\n",reg);
  
#line 1697 
  __retres = (long)tmp_0;
  
#line 1697 
  return __retres;
}


#line 1699  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t store_indirect_dword(struct device *d, struct device_attribute *attr, char const *buf, size_t count)
{
  ssize_t __retres;
  __kernel_size_t tmp_0;
  
#line 1703 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1705 
  sscanf(buf,"%x",& priv->indirect_dword);
  
#line 1706 
  priv->status |= 536870912U;
  
#line 1707 
  tmp_0 = strnlen(buf,count);
  
#line 1707 
  __retres = (long)tmp_0;
  
#line 1707 
  return __retres;
}


#line 1710  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct device_attribute dev_attr_indirect_dword = {.attr = {.name = "indirect_dword", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_indirect_dword, .store = & store_indirect_dword};

#line 1713  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t show_indirect_byte(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_0;
  
#line 1716 
  u8 reg = (unsigned char)0U;
  
#line 1717 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1719 
  if ((priv->status & 268435456U) != 0U) 
#line 1720 
                                         reg = _ipw_read_reg8(priv,priv->indirect_byte); else 
                                                                    
#line 1722 
                                                                    reg = (unsigned char)0U;
  
#line 1724 
  tmp_0 = sprintf(buf,"0x%02x\n",(int)reg);
  
#line 1724 
  __retres = (long)tmp_0;
  
#line 1724 
  return __retres;
}


#line 1726  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t store_indirect_byte(struct device *d, struct device_attribute *attr, char const *buf, size_t count)
{
  ssize_t __retres;
  __kernel_size_t tmp_0;
  
#line 1730 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1732 
  sscanf(buf,"%x",& priv->indirect_byte);
  
#line 1733 
  priv->status |= 268435456U;
  
#line 1734 
  tmp_0 = strnlen(buf,count);
  
#line 1734 
  __retres = (long)tmp_0;
  
#line 1734 
  return __retres;
}


#line 1737  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct device_attribute dev_attr_indirect_byte = {.attr = {.name = "indirect_byte", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_indirect_byte, .store = & store_indirect_byte};

#line 1740  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t show_direct_dword(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_4;
  
#line 1743 
  u32 reg = 0U;
  
#line 1744 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1746 
  if ((priv->status & 1073741824U) != 0U) {
    u32 tmp_3;
    
#line 1747 
    if ((ipw_debug_level & 134217728U) != 0U) {
      int tmp_1;
      int tmp_0;
      
#line 1747 
      ;
      
#line 1747 
      tmp_0 = preempt_count();
      
#line 1747 
      if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 1747 
                                                     tmp_1 = 73; else 
                                                                   
#line 1747 
                                                                   tmp_1 = 85;
      
#line 1747 
      printk("\001",tmp_1,"show_direct_dword",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",1747,priv->direct_dword);
    }
    else ;
    
#line 1747 
    tmp_3 = _ipw_read32(priv,(unsigned long)priv->direct_dword);
    
#line 1747 
    reg = tmp_3;
  }
  else 
#line 1749 
       reg = 0U;
  
#line 1751 
  tmp_4 = sprintf(buf,"0x%08x\n",reg);
  
#line 1751 
  __retres = (long)tmp_4;
  
#line 1751 
  return __retres;
}


#line 1753  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t store_direct_dword(struct device *d, struct device_attribute *attr, char const *buf, size_t count)
{
  ssize_t __retres;
  __kernel_size_t tmp_0;
  
#line 1757 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1759 
  sscanf(buf,"%x",& priv->direct_dword);
  
#line 1760 
  priv->status |= 1073741824U;
  
#line 1761 
  tmp_0 = strnlen(buf,count);
  
#line 1761 
  __retres = (long)tmp_0;
  
#line 1761 
  return __retres;
}


#line 1764  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct device_attribute dev_attr_direct_dword = {.attr = {.name = "direct_dword", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_direct_dword, .store = & store_direct_dword};

#line 1767  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int rf_kill_active(struct ipw_priv *priv)
{
  int __retres;
  u32 tmp_2;
  
#line 1769 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 1769 
    tmp = preempt_count();
    
#line 1769 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 1769 
                                                 tmp_0 = 73; else 
#line 1769 
                                                                  tmp_0 = 85;
    
#line 1769 
    printk("\001",tmp_0,"rf_kill_active",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",1769,48U);
  }
  else ;
  
#line 1769 
  tmp_2 = _ipw_read32(priv,48UL);
  
#line 1769 
  if ((tmp_2 & 65536U) == 0U) {
    
#line 1770 
    priv->status |= 4U;
    
#line 1771 
    wiphy_rfkill_set_hw_state((priv->ieee)->wdev.wiphy,(_Bool)1);
  }
  else {
    
#line 1773 
    priv->status &= 4294967291U;
    
#line 1774 
    wiphy_rfkill_set_hw_state((priv->ieee)->wdev.wiphy,(_Bool)0);
  }
  
#line 1777 
  __retres = (int)(priv->status >> 2) & 1;
  
#line 1777 
  return __retres;
}


#line 1780  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t show_rf_kill(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_1;
  int tmp_0;
  int tmp_2;
  
#line 1787 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1788 
  tmp_0 = rf_kill_active(priv);
  
#line 1788 
  if (tmp_0 != 0) 
#line 1788 
                  tmp_1 = 2; else 
#line 1788 
                                  tmp_1 = 0;
  
#line 1788 
  int val = ((int)(priv->status >> 3) & 1) | tmp_1;
  
#line 1790 
  tmp_2 = sprintf(buf,"%i\n",val);
  
#line 1790 
  __retres = (long)tmp_2;
  
#line 1790 
  return __retres;
}


#line 1793  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_radio_kill_sw(struct ipw_priv *priv, int disable_radio)
{
  int __retres;
  
#line 1795 
  if ((disable_radio == 0) ^ (int)((_Bool)(priv->status >> 3 != 0))) {
    
#line 1797 
    __retres = 0;
    
#line 1797 
    goto return_label;
  }
  else ;
  
#line 1799 
  if ((ipw_debug_level & 131072U) != 0U) {
    char *tmp;
    int tmp_1;
    int tmp_0;
    
#line 1799 
    if (disable_radio != 0) 
#line 1799 
                            tmp = (char *)"OFF"; else 
#line 1799 
                                                      tmp = (char *)"ON";
    
#line 1799 
    tmp_0 = preempt_count();
    
#line 1799 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 1799 
                                                   tmp_1 = 73; else 
#line 1799 
                                                                    tmp_1 = 85;
    
#line 1799 
    printk("\001",tmp_1,"ipw_radio_kill_sw",tmp);
  }
  else ;
  
#line 1802 
  if (disable_radio != 0) {
    
#line 1803 
    priv->status |= 8U;
    
#line 1805 
    cancel_delayed_work(& priv->request_scan);
    
#line 1806 
    cancel_delayed_work(& priv->request_direct_scan);
    
#line 1807 
    cancel_delayed_work(& priv->request_passive_scan);
    
#line 1808 
    cancel_delayed_work(& priv->scan_event);
    
#line 1809 
    ldv_schedule_work_96(& priv->down);
  }
  else {
    int tmp_5;
    
#line 1811 
    priv->status &= 4294967287U;
    
#line 1812 
    tmp_5 = rf_kill_active(priv);
    
#line 1812 
    if (tmp_5 != 0) {
      unsigned long tmp_4;
      
#line 1813 
      if ((ipw_debug_level & 131072U) != 0U) {
        int tmp_3;
        int tmp_2;
        
#line 1813 
        tmp_2 = preempt_count();
        
#line 1813 
        if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 1813 
                                                       tmp_3 = 73; else 
                                                                    
#line 1813 
                                                                    tmp_3 = 85;
        
#line 1813 
        printk("\001",tmp_3,"ipw_radio_kill_sw");
      }
      else ;
      
#line 1816 
      cancel_delayed_work(& priv->rf_kill);
      
#line 1817 
      tmp_4 = round_jiffies_relative(500UL);
      
#line 1817 
      ;
      
#line 1817 
      ldv_schedule_delayed_work_97(& priv->rf_kill,tmp_4);
    }
    else 
#line 1820 
         ldv_schedule_work_98(& priv->up);
  }
  
#line 1823 
  __retres = 1;
  return_label: 
#line 1823 
                return __retres;
}


#line 1826  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t store_rf_kill(struct device *d, struct device_attribute *attr, char const *buf, size_t count)
{
  ssize_t __retres;
  
#line 1829 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1831 
  ipw_radio_kill_sw(priv,(int)*buf == 49);
  
#line 1833 
  __retres = (long)count;
  
#line 1833 
  return __retres;
}


#line 1836  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct device_attribute dev_attr_rf_kill = {.attr = {.name = "rf_kill", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_rf_kill, .store = & store_rf_kill};

#line 1838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t show_speed_scan(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_3;
  
#line 1841 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1842 
  int pos = 0;
  
#line 1842 
  int len = 0;
  
#line 1843 
  if ((priv->config & 2048U) != 0U) {
    int tmp_1;
    int tmp_0;
    int tmp_2;
    
#line 1844 
    goto ldv_54306;
    ldv_54305: 
#line 1845 
    ;
    
#line 1846 
    tmp_0 = pos;
    
#line 1846 
    pos += 1;
    
#line 1845 
    ;
    
#line 1845 
    ;
    
#line 1845 
    tmp_1 = sprintf(buf + len,"%d ",(int)priv->speed_scan[tmp_0]);
    
#line 1846 
    len = tmp_1 + len;
    ldv_54306: 
#line 1846 
    ;
    
#line 1844 
    if ((unsigned int)priv->speed_scan[pos] != 0U) 
#line 1846 
                                                   goto ldv_54305; else 
                                                                    
#line 1849 
                                                                    goto ldv_54307;
    ldv_54307: 
#line 1850 
    ;
    
#line 1847 
    tmp_2 = sprintf(buf + len,"\n");
    
#line 1847 
    ;
    
#line 1847 
    __retres = (long)(tmp_2 + len);
    
#line 1847 
    goto return_label;
  }
  else ;
  
#line 1850 
  tmp_3 = sprintf(buf,"0\n");
  
#line 1850 
  __retres = (long)tmp_3;
  return_label: 
#line 1850 
                return __retres;
}


#line 1853  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t store_speed_scan(struct device *d, struct device_attribute *attr, char const *buf, size_t count)
{
  ssize_t __retres;
  int channel;
  int tmp_1;
  long tmp_3;
  
#line 1856 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1857 
  int pos = 0;
  
#line 1858 
  char const *p = buf;
  
#line 1861 
  goto ldv_54323;
  ldv_54322: 
#line 1862 
  ;
  
#line 1862 
  if (pos == 99) {
    
#line 1863 
    priv->speed_scan[pos] = (unsigned char)0U;
    
#line 1864 
    goto ldv_54318;
  }
  else ;
  
#line 1867 
  tmp_1 = libipw_is_valid_channel(priv->ieee,(unsigned char)((int)((unsigned char)channel)));
  
#line 1867 
  if (tmp_1 != 0) {
    int tmp_0;
    
#line 1868 
    tmp_0 = pos;
    
#line 1868 
    pos += 1;
    
#line 1868 
    priv->speed_scan[tmp_0] = (unsigned char)channel;
  }
  else 
#line 1870 
       printk("\001",channel);
  
#line 1872 
  p = (char const *)strchr(p,32);
  
#line 1873 
  if (p == (char const *)0) 
#line 1874 
                            goto ldv_54318; else ;
  
#line 1875 
  goto ldv_54320;
  ldv_54319: 
#line 1876 
  ;
  
#line 1876 
  p += 1;
  ldv_54320: 
#line 1877 
  ;
  
#line 1875 
  if ((int)*p == 32 || (int)*p == 9) 
#line 1877 
                                     goto ldv_54319; else 
#line 1880 
                                                          goto ldv_54321;
  ldv_54321: 
#line 1881 
  ;
  ldv_54323: 
#line 1882 
  ;
  
#line 1861 
  tmp_3 = simple_strtol(p,(char **)0,0U);
  
#line 1861 
  channel = (int)tmp_3;
  
#line 1861 
  if (channel != 0) 
#line 1863 
                    goto ldv_54322; else 
#line 1866 
                                         goto ldv_54318;
  ldv_54318: 
#line 1867 
  ;
  
#line 1879 
  if (pos == 0) 
#line 1880 
                priv->config &= 4294965247U;
  else {
    
#line 1882 
    priv->speed_scan_pos = (unsigned char)0U;
    
#line 1883 
    priv->config |= 2048U;
  }
  
#line 1886 
  __retres = (long)count;
  
#line 1886 
  return __retres;
}


#line 1889  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct device_attribute dev_attr_speed_scan = {.attr = {.name = "speed_scan", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_speed_scan, .store = & store_speed_scan};

#line 1892  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t show_net_stats(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_1;
  int tmp_0;
  
#line 1895 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1896 
  if ((priv->config & 4096U) != 0U) 
#line 1896 
                                    tmp_0 = 49; else 
#line 1896 
                                                     tmp_0 = 48;
  
#line 1896 
  ;
  
#line 1896 
  tmp_1 = sprintf(buf,"%c\n",tmp_0);
  
#line 1896 
  __retres = (long)tmp_1;
  
#line 1896 
  return __retres;
}


#line 1899  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t store_net_stats(struct device *d, struct device_attribute *attr, char const *buf, size_t count)
{
  ssize_t __retres;
  
#line 1902 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1903 
  if ((int)*buf == 49) 
#line 1904 
                       priv->config |= 4096U; else 
#line 1906 
                                                   priv->config &= 4294963199U;
  
#line 1908 
  __retres = (long)count;
  
#line 1908 
  return __retres;
}


#line 1911  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct device_attribute dev_attr_net_stats = {.attr = {.name = "net_stats", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_net_stats, .store = & store_net_stats};

#line 1914  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static ssize_t show_channels(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int i;
  int tmp_5;
  char *tmp_1;
  char *tmp_2;
  char *tmp_3;
  char *tmp_4;
  int tmp_6;
  int tmp_10;
  char *tmp_7;
  char *tmp_8;
  char *tmp_9;
  
#line 1918 
  struct ipw_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 1919 
  struct libipw_geo const *geo = libipw_get_geo(priv->ieee);
  
#line 1920 
  int len = 0;
  
#line 1922 
  len = sprintf(buf + len,"Displaying %d channels in 2.4Ghz band ",(int)geo->bg_channels);
  
#line 1926 
  i = 0;
  
#line 1926 
  goto ldv_54385;
  ldv_54384: 
#line 1927 
  ;
  
#line 1935 
  if (((int)geo->bg[i].flags & 4) != 0) 
#line 1935 
                                        tmp_1 = (char *)"B"; else 
#line 1935 
                                                                  tmp_1 = (char *)"B/G";
  
#line 1933 
  if (((int)geo->bg[i].flags & 1) != 0) 
#line 1933 
                                        tmp_2 = (char *)"passive only"; else 
                                                                    
#line 1933 
                                                                    tmp_2 = (char *)"active/passive";
  
#line 1930 
  if (((int)geo->bg[i].flags & 8) != 0 || ((int)geo->bg[i].flags & 32) != 0) 
    
#line 1930 
    tmp_3 = (char *)""; else 
#line 1930 
                             tmp_3 = (char *)", IBSS";
  
#line 1928 
  if (((int)geo->bg[i].flags & 32) != 0) 
#line 1928 
                                         tmp_4 = (char *)" (radar spectrum)"; else 
                                                                    
#line 1928 
                                                                    tmp_4 = (char *)"";
  
#line 1927 
  ;
  
#line 1927 
  ;
  
#line 1927 
  tmp_5 = sprintf(buf + len,"%d: BSS%s%s, %s, Band %s.\n",(int)geo->bg[i].channel,tmp_4,tmp_3,tmp_2,tmp_1);
  
#line 1937 
  len = tmp_5 + len;
  
#line 1926 
  i += 1;
  ldv_54385: 
#line 1927 
  ;
  
#line 1926 
  if ((int)geo->bg_channels > i) 
#line 1928 
                                 goto ldv_54384; else 
#line 1931 
                                                      goto ldv_54386;
  ldv_54386: 
#line 1932 
  ;
  
#line 1940 
  tmp_6 = sprintf(buf + len,"Displaying %d channels in 5.2Ghz band ",(int)geo->a_channels);
  
#line 1942 
  len = tmp_6 + len;
  
#line 1943 
  i = 0;
  
#line 1943 
  goto ldv_54388;
  ldv_54387: 
#line 1944 
  ;
  
#line 1950 
  if (((int)geo->a[i].flags & 1) != 0) 
#line 1950 
                                       tmp_7 = (char *)"passive only"; else 
                                                                    
#line 1950 
                                                                    tmp_7 = (char *)"active/passive";
  
#line 1947 
  if (((int)geo->a[i].flags & 8) != 0 || ((int)geo->a[i].flags & 32) != 0) 
    
#line 1947 
    tmp_8 = (char *)""; else 
#line 1947 
                             tmp_8 = (char *)", IBSS";
  
#line 1945 
  if (((int)geo->a[i].flags & 32) != 0) 
#line 1945 
                                        tmp_9 = (char *)" (radar spectrum)"; else 
                                                                    
#line 1945 
                                                                    tmp_9 = (char *)"";
  
#line 1944 
  ;
  
#line 1944 
  ;
  
#line 1944 
  tmp_10 = sprintf(buf + len,"%d: BSS%s%s, %s.\n",(int)geo->a[i].channel,tmp_9,tmp_8,tmp_7);
  
#line 1952 
  len = tmp_10 + len;
  
#line 1943 
  i += 1;
  ldv_54388: 
#line 1944 
  ;
  
#line 1943 
  if ((int)geo->a_channels > i) 
#line 1945 
                                goto ldv_54387; else 
#line 1948 
                                                     goto ldv_54389;
  ldv_54389: 
#line 1949 
  ;
  
#line 1955 
  __retres = (long)len;
  
#line 1955 
  return __retres;
}


#line 1958  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct device_attribute dev_attr_channels = {.attr = {.name = "channels", .mode = (unsigned short)256U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_channels, .store = (ssize_t (*)(struct device *, struct device_attribute *, char const *, size_t ))0};

#line 1960  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void notify_wx_assoc_event(struct ipw_priv *priv)
{
  union iwreq_data wrqu;
  
#line 1963 
  wrqu.ap_addr.sa_family = (unsigned short)1U;
  
#line 1964 
  if ((priv->status & 128U) != 0U) 
#line 1965 
                                   memcpy((void *)(& wrqu.ap_addr.sa_data),(void const *)(& priv->bssid),6UL); else 
                                                                    
#line 1967 
                                                                    eth_zero_addr((u8 *)(& wrqu.ap_addr.sa_data));
  
#line 1968 
  wireless_send_event(priv->net_dev,35605U,& wrqu,(char const *)0);
  
#line 1969 
  return;
}


#line 1971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_irq_tasklet(struct ipw_priv *priv)
{
  u32 inta;
  u32 inta_mask;
  unsigned long flags;
  u32 tmp_2;
  u32 tmp_6;
  
#line 1973 
  u32 handled = 0U;
  
#line 1975 
  int rc = 0;
  
#line 1977 
  ldv___ldv_spin_lock_99(& priv->irq_lock);
  
#line 1979 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 1979 
    tmp = preempt_count();
    
#line 1979 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 1979 
                                                 tmp_0 = 73; else 
#line 1979 
                                                                  tmp_0 = 85;
    
#line 1979 
    printk("\001",tmp_0,"ipw_irq_tasklet",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",1979,8U);
  }
  else ;
  
#line 1979 
  tmp_2 = _ipw_read32(priv,8UL);
  
#line 1979 
  inta = tmp_2;
  
#line 1980 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_4;
    int tmp_3;
    
#line 1980 
    tmp_3 = preempt_count();
    
#line 1980 
    if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 1980 
                                                   tmp_4 = 73; else 
#line 1980 
                                                                    tmp_4 = 85;
    
#line 1980 
    printk("\001",tmp_4,"ipw_irq_tasklet",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",1980,12U);
  }
  else ;
  
#line 1980 
  tmp_6 = _ipw_read32(priv,12UL);
  
#line 1980 
  inta_mask = tmp_6;
  
#line 1982 
  if (inta == 4294967295U) {
    
#line 1984 
    printk("\001");
    
#line 1986 
    inta = 0U;
  }
  else ;
  
#line 1988 
  inta = (inta_mask & inta) & 3308386354U;
  
#line 1991 
  inta = priv->isr_inta | inta;
  
#line 1993 
  ldv_spin_unlock_irqrestore_100(& priv->irq_lock,flags);
  
#line 1995 
  ldv___ldv_spin_lock_101(& priv->lock);
  
#line 1998 
  if ((inta & 2U) != 0U) {
    
#line 1999 
    ipw_rx(priv);
    
#line 2000 
    handled |= 2U;
  }
  else ;
  
#line 2003 
  if ((inta & 2048U) != 0U) {
    
#line 2004 
    if ((ipw_debug_level & 32U) != 0U) {
      int tmp_8;
      int tmp_7;
      
#line 2004 
      tmp_7 = preempt_count();
      
#line 2004 
      if (((unsigned long)tmp_7 & 2096896UL) != 0UL) 
#line 2004 
                                                     tmp_8 = 73; else 
                                                                   
#line 2004 
                                                                   tmp_8 = 85;
      
#line 2004 
      printk("\001",tmp_8,"ipw_irq_tasklet");
    }
    else ;
    
#line 2005 
    rc = ipw_queue_tx_reclaim(priv,& priv->txq_cmd,-1);
    
#line 2006 
    priv->status &= 4294967294U;
    
#line 2007 
    __wake_up(& priv->wait_command_queue,1U,1,(void *)0);
    
#line 2008 
    handled |= 2048U;
  }
  else ;
  
#line 2011 
  if ((inta & 4096U) != 0U) {
    
#line 2012 
    if ((ipw_debug_level & 8388608U) != 0U) {
      int tmp_10;
      int tmp_9;
      
#line 2012 
      tmp_9 = preempt_count();
      
#line 2012 
      if (((unsigned long)tmp_9 & 2096896UL) != 0UL) 
#line 2012 
                                                     tmp_10 = 73; else 
                                                                    
#line 2012 
                                                                    tmp_10 = 85;
      
#line 2012 
      printk("\001",tmp_10,"ipw_irq_tasklet");
    }
    else ;
    
#line 2013 
    rc = ipw_queue_tx_reclaim(priv,& priv->txq[0],0);
    
#line 2014 
    handled |= 4096U;
  }
  else ;
  
#line 2017 
  if ((inta & 8192U) != 0U) {
    
#line 2018 
    if ((ipw_debug_level & 8388608U) != 0U) {
      int tmp_12;
      int tmp_11;
      
#line 2018 
      tmp_11 = preempt_count();
      
#line 2018 
      if (((unsigned long)tmp_11 & 2096896UL) != 0UL) 
#line 2018 
                                                      tmp_12 = 73; else 
                                                                    
#line 2018 
                                                                    tmp_12 = 85;
      
#line 2018 
      printk("\001",tmp_12,"ipw_irq_tasklet");
    }
    else ;
    
#line 2019 
    rc = ipw_queue_tx_reclaim(priv,& priv->txq[1],1);
    
#line 2020 
    handled |= 8192U;
  }
  else ;
  
#line 2023 
  if ((inta & 16384U) != 0U) {
    
#line 2024 
    if ((ipw_debug_level & 8388608U) != 0U) {
      int tmp_14;
      int tmp_13;
      
#line 2024 
      tmp_13 = preempt_count();
      
#line 2024 
      if (((unsigned long)tmp_13 & 2096896UL) != 0UL) 
#line 2024 
                                                      tmp_14 = 73; else 
                                                                    
#line 2024 
                                                                    tmp_14 = 85;
      
#line 2024 
      printk("\001",tmp_14,"ipw_irq_tasklet");
    }
    else ;
    
#line 2025 
    rc = ipw_queue_tx_reclaim(priv,& priv->txq[2],2);
    
#line 2026 
    handled |= 16384U;
  }
  else ;
  
#line 2029 
  if ((inta & 32768U) != 0U) {
    
#line 2030 
    if ((ipw_debug_level & 8388608U) != 0U) {
      int tmp_16;
      int tmp_15;
      
#line 2030 
      tmp_15 = preempt_count();
      
#line 2030 
      if (((unsigned long)tmp_15 & 2096896UL) != 0UL) 
#line 2030 
                                                      tmp_16 = 73; else 
                                                                    
#line 2030 
                                                                    tmp_16 = 85;
      
#line 2030 
      printk("\001",tmp_16,"ipw_irq_tasklet");
    }
    else ;
    
#line 2031 
    rc = ipw_queue_tx_reclaim(priv,& priv->txq[3],3);
    
#line 2032 
    handled |= 32768U;
  }
  else ;
  
#line 2035 
  if ((inta & 16U) != 0U) {
    
#line 2036 
    printk("\001");
    
#line 2037 
    handled |= 16U;
  }
  else ;
  
#line 2040 
  if ((inta & 32U) != 0U) {
    
#line 2041 
    printk("\001");
    
#line 2042 
    handled |= 32U;
  }
  else ;
  
#line 2045 
  if ((inta & 65536U) != 0U) {
    
#line 2046 
    printk("\001");
    
#line 2047 
    handled |= 65536U;
  }
  else ;
  
#line 2050 
  if ((inta & 16777216U) != 0U) {
    
#line 2051 
    printk("\001");
    
#line 2052 
    handled |= 16777216U;
  }
  else ;
  
#line 2055 
  if ((inta & 33554432U) != 0U) {
    
#line 2056 
    printk("\001");
    
#line 2057 
    handled |= 33554432U;
  }
  else ;
  
#line 2060 
  if ((inta & 67108864U) != 0U) {
    
#line 2061 
    if ((ipw_debug_level & 131072U) != 0U) {
      int tmp_18;
      int tmp_17;
      
#line 2061 
      tmp_17 = preempt_count();
      
#line 2061 
      if (((unsigned long)tmp_17 & 2096896UL) != 0UL) 
#line 2061 
                                                      tmp_18 = 73; else 
                                                                    
#line 2061 
                                                                    tmp_18 = 85;
      
#line 2061 
      printk("\001",tmp_18,"ipw_irq_tasklet");
    }
    else ;
    
#line 2062 
    priv->status |= 4U;
    
#line 2063 
    wiphy_rfkill_set_hw_state((priv->ieee)->wdev.wiphy,(_Bool)1);
    
#line 2064 
    __wake_up(& priv->wait_command_queue,1U,1,(void *)0);
    
#line 2065 
    priv->status &= 4294966911U;
    
#line 2066 
    cancel_delayed_work(& priv->request_scan);
    
#line 2067 
    cancel_delayed_work(& priv->request_direct_scan);
    
#line 2068 
    cancel_delayed_work(& priv->request_passive_scan);
    
#line 2069 
    cancel_delayed_work(& priv->scan_event);
    
#line 2070 
    ldv_schedule_work_102(& priv->link_down);
    
#line 2071 
    ldv_schedule_delayed_work_103(& priv->rf_kill,500UL);
    
#line 2072 
    handled |= 67108864U;
  }
  else ;
  
#line 2075 
  if ((inta & 1073741824U) != 0U) {
    
#line 2076 
    printk("\001");
    
#line 2077 
    if (priv->error != (struct ipw_fw_error *)0) {
      
#line 2078 
      if ((ipw_debug_level & 65536U) != 0U) {
        int tmp_20;
        int tmp_19;
        
#line 2078 
        tmp_19 = preempt_count();
        
#line 2078 
        if (((unsigned long)tmp_19 & 2096896UL) != 0UL) 
#line 2078 
                                                        tmp_20 = 73; else 
                                                                    
#line 2078 
                                                                    tmp_20 = 85;
        
#line 2078 
        printk("\001",tmp_20,"ipw_irq_tasklet");
      }
      else ;
      
#line 2079 
      if ((ipw_debug_level & 262144U) != 0U) {
        
#line 2080 
        struct ipw_fw_error *error = ipw_alloc_error_log(priv);
        
#line 2082 
        ipw_dump_error_log(priv,error);
        
#line 2083 
        kfree((void const *)error);
      }
      else ;
    }
    else {
      
#line 2086 
      priv->error = ipw_alloc_error_log(priv);
      
#line 2087 
      if (priv->error != (struct ipw_fw_error *)0) {
        
#line 2088 
        if ((ipw_debug_level & 65536U) != 0U) {
          int tmp_23;
          int tmp_22;
          
#line 2088 
          tmp_22 = preempt_count();
          
#line 2088 
          if (((unsigned long)tmp_22 & 2096896UL) != 0UL) 
#line 2088 
                                                          tmp_23 = 73; else 
                                                                    
#line 2088 
                                                                    tmp_23 = 85;
          
#line 2088 
          printk("\001",tmp_23,"ipw_irq_tasklet");
        }
        else ;
      }
      else 
        
#line 2090 
        if ((ipw_debug_level & 65536U) != 0U) {
          int tmp_25;
          int tmp_24;
          
#line 2090 
          tmp_24 = preempt_count();
          
#line 2090 
          if (((unsigned long)tmp_24 & 2096896UL) != 0UL) 
#line 2090 
                                                          tmp_25 = 73; else 
                                                                    
#line 2090 
                                                                    tmp_25 = 85;
          
#line 2090 
          printk("\001",tmp_25,"ipw_irq_tasklet");
        }
        else ;
      
#line 2092 
      if ((ipw_debug_level & 262144U) != 0U) 
#line 2093 
                                             ipw_dump_error_log(priv,priv->error); else ;
    }
    
#line 2098 
    if ((unsigned int)*((unsigned char *)(& (priv->ieee)->sec) + 0UL) != 0U) {
      
#line 2099 
      priv->status &= 4294967167U;
      
#line 2100 
      notify_wx_assoc_event(priv);
    }
    else ;
    
#line 2105 
    priv->status &= 4294967263U;
    
#line 2108 
    priv->status &= 4294967294U;
    
#line 2109 
    __wake_up(& priv->wait_command_queue,1U,1,(void *)0);
    
#line 2111 
    ldv_schedule_work_104(& priv->adapter_restart);
    
#line 2112 
    handled |= 1073741824U;
  }
  else ;
  
#line 2115 
  if (inta < (u32)0) {
    
#line 2116 
    printk("\001");
    
#line 2117 
    handled |= 2147483648U;
  }
  else ;
  
#line 2120 
  if (handled != inta) 
#line 2121 
                       printk("\001",~ handled & inta); else ;
  
#line 2124 
  ldv_spin_unlock_irqrestore_105(& priv->lock,flags);
  
#line 2127 
  ipw_enable_interrupts(priv);
  
#line 2128 
  return;
}


#line 2131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static char *get_cmd_string(u8 cmd)
{
  char *__retres;
  
#line 2133 
  switch ((int)cmd) {
    case 2: 
#line 2134 
    ;
    
#line 2134 
    __retres = (char *)"HOST_COMPLETE";
    
#line 2134 
    goto return_label;
    case 4: 
#line 2135 
    ;
    
#line 2135 
    __retres = (char *)"POWER_DOWN";
    
#line 2135 
    goto return_label;
    case 6: 
#line 2136 
    ;
    
#line 2136 
    __retres = (char *)"SYSTEM_CONFIG";
    
#line 2136 
    goto return_label;
    case 7: 
#line 2137 
    ;
    
#line 2137 
    __retres = (char *)"MULTICAST_ADDRESS";
    
#line 2137 
    goto return_label;
    case 8: 
#line 2138 
    ;
    
#line 2138 
    __retres = (char *)"SSID";
    
#line 2138 
    goto return_label;
    case 11: 
#line 2139 
    ;
    
#line 2139 
    __retres = (char *)"ADAPTER_ADDRESS";
    
#line 2139 
    goto return_label;
    case 12: 
#line 2140 
    ;
    
#line 2140 
    __retres = (char *)"PORT_TYPE";
    
#line 2140 
    goto return_label;
    case 15: 
#line 2141 
    ;
    
#line 2141 
    __retres = (char *)"RTS_THRESHOLD";
    
#line 2141 
    goto return_label;
    case 16: 
#line 2142 
    ;
    
#line 2142 
    __retres = (char *)"FRAG_THRESHOLD";
    
#line 2142 
    goto return_label;
    case 17: 
#line 2143 
    ;
    
#line 2143 
    __retres = (char *)"POWER_MODE";
    
#line 2143 
    goto return_label;
    case 18: 
#line 2144 
    ;
    
#line 2144 
    __retres = (char *)"WEP_KEY";
    
#line 2144 
    goto return_label;
    case 19: 
#line 2145 
    ;
    
#line 2145 
    __retres = (char *)"TGI_TX_KEY";
    
#line 2145 
    goto return_label;
    case 20: 
#line 2146 
    ;
    
#line 2146 
    __retres = (char *)"SCAN_REQUEST";
    
#line 2146 
    goto return_label;
    case 26: 
#line 2147 
    ;
    
#line 2147 
    __retres = (char *)"SCAN_REQUEST_EXT";
    
#line 2147 
    goto return_label;
    case 21: 
#line 2148 
    ;
    
#line 2148 
    __retres = (char *)"ASSOCIATE";
    
#line 2148 
    goto return_label;
    case 22: 
#line 2149 
    ;
    
#line 2149 
    __retres = (char *)"SUPPORTED_RATES";
    
#line 2149 
    goto return_label;
    case 23: 
#line 2150 
    ;
    
#line 2150 
    __retres = (char *)"SCAN_ABORT";
    
#line 2150 
    goto return_label;
    case 24: 
#line 2151 
    ;
    
#line 2151 
    __retres = (char *)"TX_FLUSH";
    
#line 2151 
    goto return_label;
    case 25: 
#line 2152 
    ;
    
#line 2152 
    __retres = (char *)"QOS_PARAMETERS";
    
#line 2152 
    goto return_label;
    case 30: 
#line 2153 
    ;
    
#line 2153 
    __retres = (char *)"DINO_CONFIG";
    
#line 2153 
    goto return_label;
    case 31: 
#line 2154 
    ;
    
#line 2154 
    __retres = (char *)"RSN_CAPABILITIES";
    
#line 2154 
    goto return_label;
    case 32: 
#line 2155 
    ;
    
#line 2155 
    __retres = (char *)"RX_KEY";
    
#line 2155 
    goto return_label;
    case 33: 
#line 2156 
    ;
    
#line 2156 
    __retres = (char *)"CARD_DISABLE";
    
#line 2156 
    goto return_label;
    case 34: 
#line 2157 
    ;
    
#line 2157 
    __retres = (char *)"SEED_NUMBER";
    
#line 2157 
    goto return_label;
    case 35: 
#line 2158 
    ;
    
#line 2158 
    __retres = (char *)"TX_POWER";
    
#line 2158 
    goto return_label;
    case 36: 
#line 2159 
    ;
    
#line 2159 
    __retres = (char *)"COUNTRY_INFO";
    
#line 2159 
    goto return_label;
    case 37: 
#line 2160 
    ;
    
#line 2160 
    __retres = (char *)"AIRONET_INFO";
    
#line 2160 
    goto return_label;
    case 38: 
#line 2161 
    ;
    
#line 2161 
    __retres = (char *)"AP_TX_POWER";
    
#line 2161 
    goto return_label;
    case 39: 
#line 2162 
    ;
    
#line 2162 
    __retres = (char *)"CCKM_INFO";
    
#line 2162 
    goto return_label;
    case 40: 
#line 2163 
    ;
    
#line 2163 
    __retres = (char *)"CCX_VER_INFO";
    
#line 2163 
    goto return_label;
    case 41: 
#line 2164 
    ;
    
#line 2164 
    __retres = (char *)"SET_CALIBRATION";
    
#line 2164 
    goto return_label;
    case 42: 
#line 2165 
    ;
    
#line 2165 
    __retres = (char *)"SENSITIVITY_CALIB";
    
#line 2165 
    goto return_label;
    case 51: 
#line 2166 
    ;
    
#line 2166 
    __retres = (char *)"RETRY_LIMIT";
    
#line 2166 
    goto return_label;
    case 58: 
#line 2167 
    ;
    
#line 2167 
    __retres = (char *)"IPW_PRE_POWER_DOWN";
    
#line 2167 
    goto return_label;
    case 60: 
#line 2168 
    ;
    
#line 2168 
    __retres = (char *)"VAP_BEACON_TEMPLATE";
    
#line 2168 
    goto return_label;
    case 61: 
#line 2169 
    ;
    
#line 2169 
    __retres = (char *)"VAP_DTIM_PERIOD";
    
#line 2169 
    goto return_label;
    case 62: 
#line 2170 
    ;
    
#line 2170 
    __retres = (char *)"EXT_SUPPORTED_RATES";
    
#line 2170 
    goto return_label;
    case 63: 
#line 2171 
    ;
    
#line 2171 
    __retres = (char *)"VAP_LOCAL_TX_PWR_CONSTRAINT";
    
#line 2171 
    goto return_label;
    case 64: 
#line 2172 
    ;
    
#line 2172 
    __retres = (char *)"VAP_QUIET_INTERVALS";
    
#line 2172 
    goto return_label;
    case 65: 
#line 2173 
    ;
    
#line 2173 
    __retres = (char *)"VAP_CHANNEL_SWITCH";
    
#line 2173 
    goto return_label;
    case 66: 
#line 2174 
    ;
    
#line 2174 
    __retres = (char *)"VAP_MANDATORY_CHANNELS";
    
#line 2174 
    goto return_label;
    case 67: 
#line 2175 
    ;
    
#line 2175 
    __retres = (char *)"VAP_CELL_PWR_LIMIT";
    
#line 2175 
    goto return_label;
    case 68: 
#line 2176 
    ;
    
#line 2176 
    __retres = (char *)"VAP_CF_PARAM_SET";
    
#line 2176 
    goto return_label;
    case 69: 
#line 2177 
    ;
    
#line 2177 
    __retres = (char *)"VAP_SET_BEACONING_STATE";
    
#line 2177 
    goto return_label;
    case 80: 
#line 2178 
    ;
    
#line 2178 
    __retres = (char *)"MEASUREMENT";
    
#line 2178 
    goto return_label;
    case 81: 
#line 2179 
    ;
    
#line 2179 
    __retres = (char *)"POWER_CAPABILITY";
    
#line 2179 
    goto return_label;
    case 82: 
#line 2180 
    ;
    
#line 2180 
    __retres = (char *)"SUPPORTED_CHANNELS";
    
#line 2180 
    goto return_label;
    case 83: 
#line 2181 
    ;
    
#line 2181 
    __retres = (char *)"TPC_REPORT";
    
#line 2181 
    goto return_label;
    case 84: 
#line 2182 
    ;
    
#line 2182 
    __retres = (char *)"WME_INFO";
    
#line 2182 
    goto return_label;
    case 85: 
#line 2183 
    ;
    
#line 2183 
    __retres = (char *)"PRODUCTION_COMMAND";
    
#line 2183 
    goto return_label;
    default: 
#line 2184 
    ;
    
#line 2185 
    __retres = (char *)"UNKNOWN";
    
#line 2185 
    goto return_label;
  }
  return_label: 
#line 2133 
                return __retres;
}


#line 2191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int __ipw_send_cmd(struct ipw_priv *priv, struct host_cmd *cmd)
{
  int __retres;
  unsigned long flags;
  unsigned long now;
  unsigned long end;
  long tmp_10;
  
#line 2193 
  int rc = 0;
  
#line 2197 
  ldv___ldv_spin_lock_106(& priv->lock);
  
#line 2198 
  if ((priv->status & 1U) != 0U) {
    char *tmp;
    
#line 2199 
    tmp = get_cmd_string((unsigned char)((int)cmd->cmd));
    
#line 2199 
    printk("\001",tmp);
    
#line 2201 
    ldv_spin_unlock_irqrestore_107(& priv->lock,flags);
    
#line 2202 
    __retres = -11;
    
#line 2202 
    goto return_label;
  }
  else ;
  
#line 2205 
  priv->status |= 1U;
  
#line 2207 
  if (priv->cmdlog != (struct ipw_cmd_log *)0) {
    
#line 2208 
    (priv->cmdlog + priv->cmdlog_pos)->jiffies = jiffies;
    
#line 2209 
    (priv->cmdlog + priv->cmdlog_pos)->cmd.cmd = cmd->cmd;
    
#line 2210 
    (priv->cmdlog + priv->cmdlog_pos)->cmd.len = cmd->len;
    
#line 2211 
    memcpy((void *)(& (priv->cmdlog + priv->cmdlog_pos)->cmd.param),(void const *)cmd->param,(unsigned long)cmd->len);
    
#line 2213 
    (priv->cmdlog + priv->cmdlog_pos)->retcode = -1;
  }
  else ;
  
#line 2216 
  if ((ipw_debug_level & 32U) != 0U) {
    char *tmp_0;
    int tmp_2;
    int tmp_1;
    
#line 2216 
    ;
    
#line 2216 
    ;
    
#line 2216 
    ;
    
#line 2216 
    tmp_0 = get_cmd_string((unsigned char)((int)cmd->cmd));
    
#line 2216 
    tmp_1 = preempt_count();
    
#line 2216 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 2216 
                                                   tmp_2 = 73; else 
#line 2216 
                                                                    tmp_2 = 85;
    
#line 2216 
    printk("\001",tmp_2,"__ipw_send_cmd",tmp_0,(int)cmd->cmd,(int)cmd->len,priv->status);
  }
  else ;
  
#line 2221 
  if ((unsigned int)cmd->cmd == 18U) {
    
#line 2222 
    if ((ipw_debug_level & 32U) != 0U) {
      int tmp_4;
      int tmp_3;
      
#line 2222 
      tmp_3 = preempt_count();
      
#line 2222 
      if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 2222 
                                                     tmp_4 = 73; else 
                                                                   
#line 2222 
                                                                   tmp_4 = 85;
      
#line 2222 
      printk("\001",tmp_4,"__ipw_send_cmd");
    }
    else ;
  }
  else 
#line 2225 
       printk_buf(32,(u8 const *)cmd->param,(unsigned int)cmd->len);
  
#line 2227 
  rc = ipw_queue_tx_hcmd(priv,(int)cmd->cmd,(void *)cmd->param,(int)cmd->len,0);
  
#line 2228 
  if (rc != 0) {
    char *tmp_5;
    
#line 2229 
    priv->status &= 4294967294U;
    
#line 2230 
    ;
    
#line 2230 
    tmp_5 = get_cmd_string((unsigned char)((int)cmd->cmd));
    
#line 2230 
    printk("\001",tmp_5,rc);
    
#line 2232 
    ldv_spin_unlock_irqrestore_108(& priv->lock,flags);
    
#line 2233 
    goto exit;
  }
  else ;
  
#line 2235 
  ldv_spin_unlock_irqrestore_109(& priv->lock,flags);
  
#line 2237 
  now = jiffies;
  
#line 2238 
  end = now + 250UL;
  again: 
#line 2239 
  ;
  {
    
#line 2240 
    long __ret = (long)(end - now);
    
#line 2240 
    __might_sleep("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",2243,0);
    {
      int tmp_9;
      {
        
#line 2240 
        bool __cond_0 = (_Bool)((priv->status & 1U) == 0U);
        
#line 2240 
        if ((int)__cond_0 != 0 && __ret == 0L) 
#line 2240 
                                               __ret = 1L; else ;
        
#line 2240 
        tmp_9 = ((int)__cond_0 != 0 || __ret == 0L) != 0;
      }
      
#line 2240 
      if (tmp_9 == 0) {
        long tmp_8;
        {
          wait_queue_t __wait;
          
#line 2240 
          long __ret_0 = (long)(end - now);
          
#line 2240 
          INIT_LIST_HEAD(& __wait.task_list);
          
#line 2240 
          __wait.flags = 0U;
          ldv_54500: 
#line 2243 
          ;
          {
            int tmp_7;
            
#line 2240 
            long __int = prepare_to_wait_event(& priv->wait_command_queue,& __wait,1);
            {
              
#line 2240 
              bool __cond = (_Bool)((priv->status & 1U) == 0U);
              
#line 2240 
              if ((int)__cond != 0 && __ret_0 == 0L) 
#line 2240 
                                                     __ret_0 = 1L; else ;
              
#line 2240 
              tmp_7 = ((int)__cond != 0 || __ret_0 == 0L) != 0;
            }
            
#line 2240 
            if (tmp_7 != 0) 
#line 2240 
                            goto ldv_54499; else ;
            
#line 2240 
            if (__int != 0L) {
              
#line 2240 
              __ret_0 = __int;
              
#line 2240 
              goto ldv_54499;
            }
            else ;
            
#line 2240 
            __ret_0 = schedule_timeout(__ret_0);
          }
          
#line 2240 
          goto ldv_54500;
          ldv_54499: 
#line 2241 
          ;
          
#line 2240 
          finish_wait(& priv->wait_command_queue,& __wait);
          __out_0: 
#line 2240 
          ;
          
#line 2240 
          tmp_8 = __ret_0;
        }
        
#line 2240 
        __ret = tmp_8;
      }
      else ;
    }
    
#line 2240 
    tmp_10 = __ret;
  }
  
#line 2240 
  rc = (int)tmp_10;
  
#line 2244 
  if (rc < 0) {
    int tmp_11;
    
#line 2245 
    now = jiffies;
    {
      unsigned long __dummy;
      unsigned long __dummy2;
      
#line 2246 
      tmp_11 = 1;
    }
    
#line 2246 
    if (tmp_11 != 0) {
      int tmp_12;
      {
        unsigned long __dummy_0;
        unsigned long __dummy2_0;
        
#line 2246 
        tmp_12 = 1;
      }
      
#line 2246 
      if (tmp_12 != 0) {
        
#line 2246 
        if ((long)(now - end) < 0L) 
#line 2247 
                                    goto again; else ;
      }
      else ;
    }
    else ;
    
#line 2248 
    rc = 0;
  }
  else ;
  
#line 2251 
  if (rc == 0) {
    
#line 2252 
    ldv___ldv_spin_lock_110(& priv->lock);
    
#line 2253 
    if ((priv->status & 1U) != 0U) {
      char *tmp_13;
      
#line 2254 
      tmp_13 = get_cmd_string((unsigned char)((int)cmd->cmd));
      
#line 2254 
      printk("\001",tmp_13);
      
#line 2256 
      priv->status &= 4294967294U;
      
#line 2257 
      ldv_spin_unlock_irqrestore_111(& priv->lock,flags);
      
#line 2258 
      rc = -5;
      
#line 2259 
      goto exit;
    }
    else ;
    
#line 2261 
    ldv_spin_unlock_irqrestore_112(& priv->lock,flags);
  }
  else 
#line 2263 
       rc = 0;
  
#line 2265 
  if ((priv->status & 4U) != 0U) {
    char *tmp_14;
    
#line 2266 
    tmp_14 = get_cmd_string((unsigned char)((int)cmd->cmd));
    
#line 2266 
    printk("\001",tmp_14);
    
#line 2268 
    rc = -5;
    
#line 2269 
    goto exit;
  }
  else ;
  exit: 
#line 2272 
  ;
  
#line 2273 
  if (priv->cmdlog != (struct ipw_cmd_log *)0) {
    int tmp_15;
    
#line 2274 
    tmp_15 = priv->cmdlog_pos;
    
#line 2274 
    priv->cmdlog_pos += 1;
    
#line 2274 
    (priv->cmdlog + tmp_15)->retcode = rc;
    
#line 2275 
    priv->cmdlog_pos %= priv->cmdlog_len;
  }
  else ;
  
#line 2277 
  __retres = rc;
  return_label: 
#line 2277 
                return __retres;
}


#line 2280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_send_cmd_simple(struct ipw_priv *priv, u8 command)
{
  int tmp;
  
#line 2282 
  struct host_cmd cmd = {.cmd = command, .len = (unsigned char)0, .reserved = (unsigned short)0, .param = (u32 *)0};
  
#line 2286 
  tmp = __ipw_send_cmd(priv,& cmd);
  
#line 2286 
  return tmp;
}


#line 2289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_send_cmd_pdu(struct ipw_priv *priv, u8 command, u8 len, void *data)
{
  int tmp;
  
#line 2292 
  struct host_cmd cmd = {.cmd = command, .len = len, .reserved = (unsigned short)0, .param = (u32 *)data};
  
#line 2298 
  tmp = __ipw_send_cmd(priv,& cmd);
  
#line 2298 
  return tmp;
}


#line 2301  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_send_host_complete(struct ipw_priv *priv)
{
  int __retres;
  int tmp;
  
#line 2303 
  if (priv == (struct ipw_priv *)0) {
    
#line 2304 
    printk("\001");
    
#line 2305 
    __retres = -1;
    
#line 2305 
    goto return_label;
  }
  else ;
  
#line 2308 
  tmp = ipw_send_cmd_simple(priv,(unsigned char)2);
  
#line 2308 
  __retres = tmp;
  return_label: 
#line 2308 
                return __retres;
}


#line 2311  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_send_system_config(struct ipw_priv *priv)
{
  int tmp;
  
#line 2313 
  tmp = ipw_send_cmd_pdu(priv,(unsigned char)6,(unsigned char)20,(void *)(& priv->sys_config));
  
#line 2313 
  return tmp;
}


#line 2318  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_send_ssid(struct ipw_priv *priv, u8 *ssid, int len)
{
  int __retres;
  int tmp_1;
  int tmp_0;
  
#line 2320 
  if (priv == (struct ipw_priv *)0 || ssid == (u8 *)0U) {
    
#line 2321 
    printk("\001");
    
#line 2322 
    __retres = -1;
    
#line 2322 
    goto return_label;
  }
  else ;
  
#line 2325 
  ;
  {
    int tmp;
    
#line 2325 
    int _min1 = len;
    
#line 2325 
    int _min2 = 32;
    
#line 2325 
    if (_min1 < _min2) 
#line 2325 
                       tmp = _min1; else 
#line 2325 
                                         tmp = _min2;
    
#line 2325 
    tmp_0 = tmp;
  }
  
#line 2325 
  ;
  
#line 2325 
  tmp_1 = ipw_send_cmd_pdu(priv,(unsigned char)8,(unsigned char)((int)((unsigned char)tmp_0)),(void *)ssid);
  
#line 2325 
  __retres = tmp_1;
  return_label: 
#line 2325 
                return __retres;
}


#line 2329  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_send_adapter_address(struct ipw_priv *priv, u8 *mac)
{
  int __retres;
  int tmp_1;
  
#line 2331 
  if (priv == (struct ipw_priv *)0 || mac == (u8 *)0U) {
    
#line 2332 
    printk("\001");
    
#line 2333 
    __retres = -1;
    
#line 2333 
    goto return_label;
  }
  else ;
  
#line 2336 
  if ((ipw_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 2336 
    ;
    
#line 2336 
    ;
    
#line 2336 
    tmp = preempt_count();
    
#line 2336 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 2336 
                                                 tmp_0 = 73; else 
#line 2336 
                                                                  tmp_0 = 85;
    
#line 2336 
    printk("\001",tmp_0,"ipw_send_adapter_address",(char *)(& (priv->net_dev)->name),mac);
  }
  else ;
  
#line 2339 
  tmp_1 = ipw_send_cmd_pdu(priv,(unsigned char)11,(unsigned char)6,(void *)mac);
  
#line 2339 
  __retres = tmp_1;
  return_label: 
#line 2339 
                return __retres;
}


#line 2342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_adapter_restart(void *adapter)
{
  int tmp;
  
#line 2344 
  struct ipw_priv *priv = (struct ipw_priv *)adapter;
  
#line 2346 
  if ((priv->status & 12U) != 0U) 
#line 2347 
                                  goto return_label; else ;
  
#line 2349 
  ipw_down(priv);
  
#line 2351 
  if (priv->assoc_network != (struct libipw_network *)0 && ((int)(priv->assoc_network)->capability & 2) != 0) 
    
#line 2353 
    ipw_remove_current_network(priv); else ;
  
#line 2355 
  tmp = ipw_up(priv);
  
#line 2355 
  if (tmp != 0) {
    
#line 2356 
    printk("\001");
    
#line 2357 
    goto return_label;
  }
  else ;
  return_label: 
#line 2359 
                return;
}


#line 2361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_bg_adapter_restart(struct work_struct *work)
{
  struct ipw_priv *tmp;
  {
    
#line 2364 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 2364 
    tmp = (struct ipw_priv *)__mptr + 18446744073709546352U;
  }
  
#line 2363 
  struct ipw_priv *priv = tmp;
  
#line 2365 
  ldv_mutex_lock_113(& priv->mutex);
  
#line 2366 
  ipw_adapter_restart((void *)priv);
  
#line 2367 
  ldv_mutex_unlock_114(& priv->mutex);
  
#line 2368 
  return;
}


#line 2370 
static void ipw_abort_scan(struct ipw_priv *priv);


#line 2374  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_scan_check(void *data)
{
  
#line 2376 
  struct ipw_priv *priv = (struct ipw_priv *)data;
  
#line 2378 
  if ((priv->status & 4194304U) != 0U) {
    
#line 2379 
    if ((ipw_debug_level & 2048U) != 0U) {
      unsigned int tmp;
      int tmp_1;
      int tmp_0;
      
#line 2379 
      tmp = jiffies_to_msecs(1250UL);
      
#line 2379 
      tmp_0 = preempt_count();
      
#line 2379 
      if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 2379 
                                                     tmp_1 = 73; else 
                                                                   
#line 2379 
                                                                   tmp_1 = 85;
      
#line 2379 
      printk("\001",tmp_1,"ipw_scan_check",tmp);
    }
    else ;
    
#line 2382 
    ldv_schedule_work_115(& priv->adapter_restart);
  }
  else 
    
#line 2383 
    if ((priv->status & 2097152U) != 0U) {
      
#line 2384 
      if ((ipw_debug_level & 2048U) != 0U) {
        unsigned int tmp_2;
        int tmp_4;
        int tmp_3;
        
#line 2384 
        tmp_2 = jiffies_to_msecs(1250UL);
        
#line 2384 
        tmp_3 = preempt_count();
        
#line 2384 
        if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 2384 
                                                       tmp_4 = 73; else 
                                                                    
#line 2384 
                                                                    tmp_4 = 85;
        
#line 2384 
        printk("\001",tmp_4,"ipw_scan_check",tmp_2);
      }
      else ;
      
#line 2387 
      ipw_abort_scan(priv);
      
#line 2388 
      ldv_schedule_delayed_work_116(& priv->scan_check,250UL);
    }
    else ;
  
#line 2390 
  return;
}


#line 2392  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_bg_scan_check(struct work_struct *work)
{
  struct ipw_priv *tmp;
  {
    
#line 2395 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 2395 
    tmp = (struct ipw_priv *)__mptr + 18446744073709545504U;
  }
  
#line 2394 
  struct ipw_priv *priv = tmp;
  
#line 2396 
  ldv_mutex_lock_117(& priv->mutex);
  
#line 2397 
  ipw_scan_check((void *)priv);
  
#line 2398 
  ldv_mutex_unlock_118(& priv->mutex);
  
#line 2399 
  return;
}


#line 2401  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_send_scan_request_ext(struct ipw_priv *priv, struct ipw_scan_request_ext *request)
{
  int tmp;
  
#line 2404 
  tmp = ipw_send_cmd_pdu(priv,(unsigned char)26,(unsigned char)96,(void *)request);
  
#line 2404 
  return tmp;
}


#line 2408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_send_scan_abort(struct ipw_priv *priv)
{
  int __retres;
  int tmp;
  
#line 2410 
  if (priv == (struct ipw_priv *)0) {
    
#line 2411 
    printk("\001");
    
#line 2412 
    __retres = -1;
    
#line 2412 
    goto return_label;
  }
  else ;
  
#line 2415 
  tmp = ipw_send_cmd_simple(priv,(unsigned char)23);
  
#line 2415 
  __retres = tmp;
  return_label: 
#line 2415 
                return __retres;
}


#line 2418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_set_sensitivity(struct ipw_priv *priv, u16 sens)
{
  int tmp;
  
#line 2420 
  struct ipw_sensitivity_calib calib = {.beacon_rssi_raw = sens, .reserved = (unsigned short)0};
  
#line 2424 
  tmp = ipw_send_cmd_pdu(priv,(unsigned char)42,(unsigned char)4,(void *)(& calib));
  
#line 2424 
  return tmp;
}


#line 2428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_send_associate(struct ipw_priv *priv, struct ipw_associate *associate_0)
{
  int __retres;
  int tmp;
  
#line 2431 
  if (priv == (struct ipw_priv *)0 || associate_0 == (struct ipw_associate *)0) {
    
#line 2432 
    printk("\001");
    
#line 2433 
    __retres = -1;
    
#line 2433 
    goto return_label;
  }
  else ;
  
#line 2436 
  tmp = ipw_send_cmd_pdu(priv,(unsigned char)21,(unsigned char)40,(void *)associate_0);
  
#line 2436 
  __retres = tmp;
  return_label: 
#line 2436 
                return __retres;
}


#line 2440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_send_supported_rates(struct ipw_priv *priv, struct ipw_supported_rates *rates)
{
  int __retres;
  int tmp;
  
#line 2443 
  if (priv == (struct ipw_priv *)0 || rates == (struct ipw_supported_rates *)0) {
    
#line 2444 
    printk("\001");
    
#line 2445 
    __retres = -1;
    
#line 2445 
    goto return_label;
  }
  else ;
  
#line 2448 
  tmp = ipw_send_cmd_pdu(priv,(unsigned char)22,(unsigned char)16,(void *)rates);
  
#line 2448 
  __retres = tmp;
  return_label: 
#line 2448 
                return __retres;
}


#line 2452  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_set_random_seed(struct ipw_priv *priv)
{
  int __retres;
  u32 val;
  int tmp;
  
#line 2456 
  if (priv == (struct ipw_priv *)0) {
    
#line 2457 
    printk("\001");
    
#line 2458 
    __retres = -1;
    
#line 2458 
    goto return_label;
  }
  else ;
  
#line 2461 
  get_random_bytes((void *)(& val),4);
  
#line 2463 
  tmp = ipw_send_cmd_pdu(priv,(unsigned char)34,(unsigned char)4,(void *)(& val));
  
#line 2463 
  __retres = tmp;
  return_label: 
#line 2463 
                return __retres;
}


#line 2466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_send_card_disable(struct ipw_priv *priv, u32 phy_off)
{
  int __retres;
  int tmp;
  
#line 2468 
  __le32 v = phy_off;
  
#line 2469 
  if (priv == (struct ipw_priv *)0) {
    
#line 2470 
    printk("\001");
    
#line 2471 
    __retres = -1;
    
#line 2471 
    goto return_label;
  }
  else ;
  
#line 2474 
  tmp = ipw_send_cmd_pdu(priv,(unsigned char)33,(unsigned char)4,(void *)(& v));
  
#line 2474 
  __retres = tmp;
  return_label: 
#line 2474 
                return __retres;
}


#line 2477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_send_tx_power(struct ipw_priv *priv, struct ipw_tx_power *power)
{
  int __retres;
  int tmp;
  
#line 2479 
  if (priv == (struct ipw_priv *)0 || power == (struct ipw_tx_power *)0) {
    
#line 2480 
    printk("\001");
    
#line 2481 
    __retres = -1;
    
#line 2481 
    goto return_label;
  }
  else ;
  
#line 2484 
  tmp = ipw_send_cmd_pdu(priv,(unsigned char)35,(unsigned char)76,(void *)power);
  
#line 2484 
  __retres = tmp;
  return_label: 
#line 2484 
                return __retres;
}


#line 2487  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_set_tx_power(struct ipw_priv *priv)
{
  int __retres;
  struct ipw_tx_power tx_power;
  s8 max_power;
  int i;
  int tmp_2;
  int tmp_3;
  
#line 2489 
  struct libipw_geo const *geo = libipw_get_geo(priv->ieee);
  
#line 2494 
  memset((void *)(& tx_power),0,76UL);
  
#line 2497 
  tx_power.ieee_mode = (unsigned char)2U;
  
#line 2498 
  tx_power.num_channels = geo->bg_channels;
  
#line 2499 
  i = 0;
  
#line 2499 
  goto ldv_54607;
  ldv_54606: 
#line 2500 
  ;
  
#line 2500 
  max_power = (signed char)geo->bg[i].max_power;
  
#line 2501 
  tx_power.channels_tx_power[i].channel_number = geo->bg[i].channel;
  
#line 2503 
  if ((int)max_power != 0) {
    int tmp_1;
    {
      int tmp_0;
      
#line 2504 
      s8 _min1 = max_power;
      
#line 2504 
      s8 _min2 = priv->tx_power;
      
#line 2504 
      if ((int)_min1 < (int)_min2) 
#line 2504 
                                   tmp_0 = (int)_min1; else 
#line 2504 
                                                            tmp_0 = (int)_min2;
      
#line 2504 
      tmp_1 = tmp_0;
    }
    
#line 2503 
    tx_power.channels_tx_power[i].tx_power = (signed char)tmp_1;
  }
  else 
#line 2503 
       tx_power.channels_tx_power[i].tx_power = priv->tx_power;
  
#line 2499 
  i += 1;
  ldv_54607: 
#line 2500 
  ;
  
#line 2499 
  if ((int)geo->bg_channels > i) 
#line 2501 
                                 goto ldv_54606; else 
#line 2504 
                                                      goto ldv_54608;
  ldv_54608: 
#line 2505 
  ;
  
#line 2506 
  tmp_2 = ipw_send_tx_power(priv,& tx_power);
  
#line 2506 
  if (tmp_2 != 0) {
    
#line 2507 
    __retres = -5;
    
#line 2507 
    goto return_label;
  }
  else ;
  
#line 2510 
  tx_power.ieee_mode = (unsigned char)1U;
  
#line 2511 
  tmp_3 = ipw_send_tx_power(priv,& tx_power);
  
#line 2511 
  if (tmp_3 != 0) {
    
#line 2512 
    __retres = -5;
    
#line 2512 
    goto return_label;
  }
  else ;
  
#line 2515 
  if ((priv->ieee)->abg_true != 0) {
    int tmp_6;
    
#line 2516 
    tx_power.ieee_mode = (unsigned char)0U;
    
#line 2517 
    tx_power.num_channels = geo->a_channels;
    
#line 2518 
    i = 0;
    
#line 2518 
    goto ldv_54613;
    ldv_54612: 
#line 2519 
    ;
    
#line 2519 
    max_power = (signed char)geo->a[i].max_power;
    
#line 2520 
    tx_power.channels_tx_power[i].channel_number = geo->a[i].channel;
    
#line 2522 
    if ((int)max_power != 0) {
      int tmp_5;
      {
        int tmp_4;
        
#line 2523 
        s8 _min1_0 = max_power;
        
#line 2523 
        s8 _min2_0 = priv->tx_power;
        
#line 2523 
        if ((int)_min1_0 < (int)_min2_0) 
#line 2523 
                                         tmp_4 = (int)_min1_0; else 
#line 2523 
                                                                    tmp_4 = (int)_min2_0;
        
#line 2523 
        tmp_5 = tmp_4;
      }
      
#line 2522 
      tx_power.channels_tx_power[i].tx_power = (signed char)tmp_5;
    }
    else 
#line 2522 
         tx_power.channels_tx_power[i].tx_power = priv->tx_power;
    
#line 2518 
    i += 1;
    ldv_54613: 
#line 2519 
    ;
    
#line 2518 
    if ((int)tx_power.num_channels > i) 
#line 2520 
                                        goto ldv_54612; else 
#line 2523 
                                                             goto ldv_54614;
    ldv_54614: 
#line 2524 
    ;
    
#line 2525 
    tmp_6 = ipw_send_tx_power(priv,& tx_power);
    
#line 2525 
    if (tmp_6 != 0) {
      
#line 2526 
      __retres = -5;
      
#line 2526 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2528 
  __retres = 0;
  return_label: 
#line 2528 
                return __retres;
}


#line 2531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_send_rts_threshold(struct ipw_priv *priv, u16 rts)
{
  int __retres;
  int tmp;
  
#line 2533 
  struct ipw_rts_threshold rts_threshold = {.rts_threshold = rts, .reserved = (unsigned short)0};
  
#line 2537 
  if (priv == (struct ipw_priv *)0) {
    
#line 2538 
    printk("\001");
    
#line 2539 
    __retres = -1;
    
#line 2539 
    goto return_label;
  }
  else ;
  
#line 2542 
  tmp = ipw_send_cmd_pdu(priv,(unsigned char)15,(unsigned char)4,(void *)(& rts_threshold));
  
#line 2542 
  __retres = tmp;
  return_label: 
#line 2542 
                return __retres;
}


#line 2546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_send_frag_threshold(struct ipw_priv *priv, u16 frag)
{
  int __retres;
  int tmp;
  
#line 2548 
  struct ipw_frag_threshold frag_threshold = {.frag_threshold = frag, .reserved = (unsigned short)0};
  
#line 2552 
  if (priv == (struct ipw_priv *)0) {
    
#line 2553 
    printk("\001");
    
#line 2554 
    __retres = -1;
    
#line 2554 
    goto return_label;
  }
  else ;
  
#line 2557 
  tmp = ipw_send_cmd_pdu(priv,(unsigned char)16,(unsigned char)4,(void *)(& frag_threshold));
  
#line 2557 
  __retres = tmp;
  return_label: 
#line 2557 
                return __retres;
}


#line 2561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_send_power_mode(struct ipw_priv *priv, u32 mode)
{
  int __retres;
  __le32 param;
  int tmp;
  
#line 2565 
  if (priv == (struct ipw_priv *)0) {
    
#line 2566 
    printk("\001");
    
#line 2567 
    __retres = -1;
    
#line 2567 
    goto return_label;
  }
  else ;
  
#line 2572 
  switch (mode) {
    case (u32)7: 
#line 2573 
    ;
    
#line 2574 
    param = 3U;
    
#line 2575 
    goto ldv_54631;
    case (u32)6: 
#line 2576 
    ;
    
#line 2577 
    param = 0U;
    
#line 2578 
    goto ldv_54631;
    default: 
#line 2579 
    ;
    
#line 2580 
    param = mode;
    
#line 2581 
    goto ldv_54631;
  }
  ldv_54631: 
#line 2584 
  ;
  
#line 2584 
  tmp = ipw_send_cmd_pdu(priv,(unsigned char)17,(unsigned char)4,(void *)(& param));
  
#line 2584 
  __retres = tmp;
  return_label: 
#line 2584 
                return __retres;
}


#line 2588  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_send_retry_limit(struct ipw_priv *priv, u8 slimit, u8 llimit)
{
  int __retres;
  int tmp;
  
#line 2590 
  struct ipw_retry_limit retry_limit = {.short_retry_limit = slimit, .long_retry_limit = llimit, .reserved = (unsigned short)0};
  
#line 2595 
  if (priv == (struct ipw_priv *)0) {
    
#line 2596 
    printk("\001");
    
#line 2597 
    __retres = -1;
    
#line 2597 
    goto return_label;
  }
  else ;
  
#line 2600 
  tmp = ipw_send_cmd_pdu(priv,(unsigned char)51,(unsigned char)4,(void *)(& retry_limit));
  
#line 2600 
  __retres = tmp;
  return_label: 
#line 2600 
                return __retres;
}


#line 2622  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
__inline static void eeprom_write_reg(struct ipw_priv *p, u32 data)
{
  
#line 2624 
  ipw_write_reg32(p,3145792U,data);
  
#line 2627 
  if (0 != 0) 
    
#line 2627 
    if (p->eeprom_delay > 19999) 
#line 2627 
                                 __bad_udelay(); else 
#line 2627 
                                                      __const_udelay((unsigned long)p->eeprom_delay * 4295UL);
  else 
#line 2627 
       __udelay((unsigned long)p->eeprom_delay);
  
#line 2629 
  return;
}


#line 2631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void eeprom_cs(struct ipw_priv *priv)
{
  
#line 2633 
  eeprom_write_reg(priv,0U);
  
#line 2634 
  eeprom_write_reg(priv,2U);
  
#line 2635 
  eeprom_write_reg(priv,3U);
  
#line 2636 
  eeprom_write_reg(priv,2U);
  
#line 2637 
  return;
}


#line 2640  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void eeprom_disable_cs(struct ipw_priv *priv)
{
  
#line 2642 
  eeprom_write_reg(priv,2U);
  
#line 2643 
  eeprom_write_reg(priv,0U);
  
#line 2644 
  eeprom_write_reg(priv,1U);
  
#line 2645 
  return;
}


#line 2648  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
__inline static void eeprom_write_bit(struct ipw_priv *p, u8 bit)
{
  int tmp;
  
#line 2650 
  if ((unsigned int)bit != 0U) 
#line 2650 
                               tmp = 4; else 
#line 2650 
                                             tmp = 0;
  
#line 2650 
  int d = tmp;
  
#line 2651 
  eeprom_write_reg(p,(unsigned int)(d | 2));
  
#line 2652 
  eeprom_write_reg(p,(unsigned int)(d | 3));
  
#line 2653 
  return;
}


#line 2656  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void eeprom_op(struct ipw_priv *priv, u8 op, u8 addr)
{
  int i;
  
#line 2660 
  eeprom_cs(priv);
  
#line 2661 
  eeprom_write_bit(priv,(unsigned char)1);
  
#line 2662 
  eeprom_write_bit(priv,(unsigned char)((int)op & 2));
  
#line 2663 
  eeprom_write_bit(priv,(unsigned char)((int)op & 1));
  
#line 2664 
  i = 7;
  
#line 2664 
  goto ldv_54662;
  ldv_54661: 
#line 2665 
  ;
  
#line 2665 
  eeprom_write_bit(priv,(unsigned char)((int)((unsigned char)((1 << i) & (int)addr))));
  
#line 2664 
  i -= 1;
  ldv_54662: 
#line 2665 
  ;
  
#line 2664 
  if (i >= 0) 
#line 2666 
              goto ldv_54661; else 
#line 2669 
                                   goto ldv_54663;
  ldv_54663: 
#line 2670 
  ;
  
#line 2671 
  return;
}


#line 2670  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static u16 eeprom_read_u16(struct ipw_priv *priv, u8 addr)
{
  int i;
  
#line 2673 
  u16 r = (unsigned short)0U;
  
#line 2676 
  eeprom_op(priv,(unsigned char)2,(unsigned char)((int)addr));
  
#line 2679 
  eeprom_write_reg(priv,2U);
  
#line 2682 
  i = 0;
  
#line 2682 
  goto ldv_54672;
  ldv_54671: 
#line 2683 
  ;
  {
    
#line 2683 
    u32 data = 0U;
    
#line 2684 
    eeprom_write_reg(priv,3U);
    
#line 2685 
    eeprom_write_reg(priv,2U);
    
#line 2686 
    data = _ipw_read_reg32(priv,3145792U);
    
#line 2687 
    r = (unsigned short)((unsigned int)((int)r << 1) | ((data >> 4) & (unsigned int)1));
  }
  
#line 2682 
  i += 1;
  ldv_54672: 
#line 2683 
  ;
  
#line 2682 
  if (i <= 15) 
#line 2684 
               goto ldv_54671; else 
#line 2687 
                                    goto ldv_54673;
  ldv_54673: 
#line 2688 
  ;
  
#line 2691 
  eeprom_write_reg(priv,0U);
  
#line 2692 
  eeprom_disable_cs(priv);
  
#line 2694 
  return r;
}


#line 2699  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void eeprom_parse_mac(struct ipw_priv *priv, u8 *mac)
{
  
#line 2701 
  memcpy((void *)mac,(void const *)(& priv->eeprom[66UL]),6UL);
  
#line 2702 
  return;
}


#line 2704  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_read_eeprom(struct ipw_priv *priv)
{
  int i;
  
#line 2707 
  __le16 *eeprom = (__le16 *)(& priv->eeprom);
  
#line 2709 
  if ((ipw_debug_level & 268435456U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 2709 
    tmp = preempt_count();
    
#line 2709 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 2709 
                                                 tmp_0 = 73; else 
#line 2709 
                                                                  tmp_0 = 85;
    
#line 2709 
    printk("\001",tmp_0,"ipw_read_eeprom");
  }
  else ;
  
#line 2712 
  i = 0;
  
#line 2712 
  goto ldv_54685;
  ldv_54684: 
#line 2713 
  ;
  
#line 2713 
  *(eeprom + i) = eeprom_read_u16(priv,(unsigned char)((int)((unsigned char)i)));
  
#line 2712 
  i += 1;
  ldv_54685: 
#line 2713 
  ;
  
#line 2712 
  if (i <= 127) 
#line 2714 
                goto ldv_54684; else 
#line 2717 
                                     goto ldv_54686;
  ldv_54686: 
#line 2718 
  ;
  
#line 2715 
  if ((ipw_debug_level & 268435456U) != 0U) {
    int tmp_3;
    int tmp_2;
    
#line 2715 
    tmp_2 = preempt_count();
    
#line 2715 
    if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 2715 
                                                   tmp_3 = 73; else 
#line 2715 
                                                                    tmp_3 = 85;
    
#line 2715 
    printk("\001",tmp_3,"ipw_read_eeprom");
  }
  else ;
  
#line 2716 
  return;
}


#line 2726  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_eeprom_init_sram(struct ipw_priv *priv)
{
  int i;
  
#line 2730 
  if ((ipw_debug_level & 268435456U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 2730 
    tmp = preempt_count();
    
#line 2730 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 2730 
                                                 tmp_0 = 73; else 
#line 2730 
                                                                  tmp_0 = 85;
    
#line 2730 
    printk("\001",tmp_0,"ipw_eeprom_init_sram");
  }
  else ;
  
#line 2737 
  if ((unsigned int)priv->eeprom[73UL] != 0U) {
    
#line 2738 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 2738 
      tmp_1 = preempt_count();
      
#line 2738 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 2738 
                                                     tmp_2 = 73; else 
                                                                   
#line 2738 
                                                                   tmp_2 = 85;
      
#line 2738 
      printk("\001",tmp_2,"ipw_eeprom_init_sram");
    }
    else ;
    
#line 2741 
    i = 0;
    
#line 2741 
    goto ldv_54693;
    ldv_54692: 
#line 2742 
    ;
    
#line 2742 
    if ((ipw_debug_level & 134217728U) != 0U) {
      int tmp_4;
      int tmp_3;
      
#line 2742 
      ;
      
#line 2742 
      ;
      
#line 2742 
      tmp_3 = preempt_count();
      
#line 2742 
      if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 2742 
                                                     tmp_4 = 73; else 
                                                                   
#line 2742 
                                                                   tmp_4 = 85;
      
#line 2742 
      printk("\001",tmp_4,"ipw_eeprom_init_sram",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",2742,(unsigned int)(i + 2592),(unsigned int)priv->eeprom[i]);
    }
    else ;
    
#line 2742 
    _ipw_write8(priv,(unsigned long)(i + 2592),(unsigned char)((int)priv->eeprom[i]));
    
#line 2741 
    i += 1;
    ldv_54693: 
#line 2742 
    ;
    
#line 2741 
    if (i <= 255) 
#line 2743 
                  goto ldv_54692; else 
#line 2746 
                                       goto ldv_54694;
    ldv_54694: 
#line 2747 
    ;
    
#line 2745 
    if ((ipw_debug_level & 134217728U) != 0U) {
      int tmp_6;
      int tmp_5;
      
#line 2745 
      tmp_5 = preempt_count();
      
#line 2745 
      if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 2745 
                                                     tmp_6 = 73; else 
                                                                   
#line 2745 
                                                                   tmp_6 = 85;
      
#line 2745 
      printk("\001",tmp_6,"ipw_eeprom_init_sram",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",2745,2588U,0U);
    }
    else ;
    
#line 2745 
    _ipw_write32(priv,2588UL,0U);
  }
  else {
    
#line 2747 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_8;
      int tmp_7;
      
#line 2747 
      tmp_7 = preempt_count();
      
#line 2747 
      if (((unsigned long)tmp_7 & 2096896UL) != 0UL) 
#line 2747 
                                                     tmp_8 = 73; else 
                                                                   
#line 2747 
                                                                   tmp_8 = 85;
      
#line 2747 
      printk("\001",tmp_8,"ipw_eeprom_init_sram");
    }
    else ;
    
#line 2750 
    if ((ipw_debug_level & 134217728U) != 0U) {
      int tmp_10;
      int tmp_9;
      
#line 2750 
      tmp_9 = preempt_count();
      
#line 2750 
      if (((unsigned long)tmp_9 & 2096896UL) != 0UL) 
#line 2750 
                                                     tmp_10 = 73; else 
                                                                    
#line 2750 
                                                                    tmp_10 = 85;
      
#line 2750 
      printk("\001",tmp_10,"ipw_eeprom_init_sram",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",2750,2588U,1U);
    }
    else ;
    
#line 2750 
    _ipw_write32(priv,2588UL,1U);
  }
  
#line 2753 
  if ((ipw_debug_level & 268435456U) != 0U) {
    int tmp_12;
    int tmp_11;
    
#line 2753 
    tmp_11 = preempt_count();
    
#line 2753 
    if (((unsigned long)tmp_11 & 2096896UL) != 0UL) 
#line 2753 
                                                    tmp_12 = 73; else 
                                                                   
#line 2753 
                                                                   tmp_12 = 85;
    
#line 2753 
    printk("\001",tmp_12,"ipw_eeprom_init_sram");
  }
  else ;
  
#line 2754 
  return;
}


#line 2756  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_zero_memory(struct ipw_priv *priv, u32 start, u32 count)
{
  u32 tmp;
  
#line 2758 
  count >>= 2;
  
#line 2759 
  if (count == 0U) 
#line 2760 
                   goto return_label; else ;
  
#line 2761 
  _ipw_write32(priv,24UL,start);
  
#line 2762 
  goto ldv_54701;
  ldv_54700: 
#line 2763 
  ;
  
#line 2763 
  _ipw_write32(priv,28UL,0U);
  ldv_54701: 
#line 2764 
  ;
  
#line 2762 
  tmp = count;
  
#line 2762 
  count -= 1U;
  
#line 2762 
  ;
  
#line 2762 
  if (tmp != 0U) 
#line 2764 
                 goto ldv_54700; else 
#line 2767 
                                      goto ldv_54702;
  ldv_54702: 
#line 2768 
  ;
  return_label: 
#line 2769 
                return;
}


#line 2766  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
__inline static void ipw_fw_dma_reset_command_blocks(struct ipw_priv *priv)
{
  
#line 2768 
  ipw_zero_memory(priv,159744U,1024U);
  
#line 2769 
  return;
}


#line 2773  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_fw_dma_enable(struct ipw_priv *priv)
{
  int __retres;
  
#line 2776 
  if ((ipw_debug_level & 65536U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 2776 
    tmp = preempt_count();
    
#line 2776 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 2776 
                                                 tmp_0 = 73; else 
#line 2776 
                                                                  tmp_0 = 85;
    
#line 2776 
    printk("\001",tmp_0,"ipw_fw_dma_enable");
  }
  else ;
  
#line 2779 
  ipw_fw_dma_reset_command_blocks(priv);
  
#line 2782 
  ipw_write_reg32(priv,3145888U,159744U);
  
#line 2784 
  if ((ipw_debug_level & 65536U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 2784 
    tmp_1 = preempt_count();
    
#line 2784 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 2784 
                                                   tmp_2 = 73; else 
#line 2784 
                                                                    tmp_2 = 85;
    
#line 2784 
    printk("\001",tmp_2,"ipw_fw_dma_enable");
  }
  else ;
  
#line 2785 
  __retres = 0;
  
#line 2785 
  return __retres;
}


#line 2788  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_fw_dma_abort(struct ipw_priv *priv)
{
  
#line 2790 
  u32 control = 0U;
  
#line 2792 
  if ((ipw_debug_level & 65536U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 2792 
    tmp = preempt_count();
    
#line 2792 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 2792 
                                                 tmp_0 = 73; else 
#line 2792 
                                                                  tmp_0 = 85;
    
#line 2792 
    printk("\001",tmp_0,"ipw_fw_dma_abort");
  }
  else ;
  
#line 2795 
  control = 5508096U;
  
#line 2796 
  ipw_write_reg32(priv,3145892U,control);
  
#line 2797 
  priv->sram_desc.last_cb_index = 0UL;
  
#line 2799 
  if ((ipw_debug_level & 65536U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 2799 
    tmp_1 = preempt_count();
    
#line 2799 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 2799 
                                                   tmp_2 = 73; else 
#line 2799 
                                                                    tmp_2 = 85;
    
#line 2799 
    printk("\001",tmp_2,"ipw_fw_dma_abort");
  }
  else ;
  
#line 2800 
  return;
}


#line 2802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_fw_dma_write_command_block(struct ipw_priv *priv, int index, struct command_block *cb)
{
  int __retres;
  
#line 2805 
  u32 address = (unsigned int)((unsigned long)index + 9984UL) * 16U;
  
#line 2808 
  if ((ipw_debug_level & 65536U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 2808 
    tmp = preempt_count();
    
#line 2808 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 2808 
                                                 tmp_0 = 73; else 
#line 2808 
                                                                  tmp_0 = 85;
    
#line 2808 
    printk("\001",tmp_0,"ipw_fw_dma_write_command_block");
  }
  else ;
  
#line 2810 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 2810 
    ;
    
#line 2810 
    tmp_1 = preempt_count();
    
#line 2810 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 2810 
                                                   tmp_2 = 73; else 
#line 2810 
                                                                    tmp_2 = 85;
    
#line 2810 
    printk("\001",tmp_2,"ipw_fw_dma_write_command_block",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",2811,address,16U);
  }
  else ;
  
#line 2810 
  _ipw_write_indirect(priv,address,(u8 *)cb,16);
  
#line 2813 
  if ((ipw_debug_level & 65536U) != 0U) {
    int tmp_4;
    int tmp_3;
    
#line 2813 
    tmp_3 = preempt_count();
    
#line 2813 
    if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 2813 
                                                   tmp_4 = 73; else 
#line 2813 
                                                                    tmp_4 = 85;
    
#line 2813 
    printk("\001",tmp_4,"ipw_fw_dma_write_command_block");
  }
  else ;
  
#line 2814 
  __retres = 0;
  
#line 2814 
  return __retres;
}


#line 2818  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_fw_dma_kick(struct ipw_priv *priv)
{
  int __retres;
  
#line 2820 
  u32 control = 0U;
  
#line 2821 
  u32 index = 0U;
  
#line 2823 
  if ((ipw_debug_level & 65536U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 2823 
    tmp = preempt_count();
    
#line 2823 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 2823 
                                                 tmp_0 = 73; else 
#line 2823 
                                                                  tmp_0 = 85;
    
#line 2823 
    printk("\001",tmp_0,"ipw_fw_dma_kick");
  }
  else ;
  
#line 2825 
  index = 0U;
  
#line 2825 
  goto ldv_54729;
  ldv_54728: 
#line 2826 
  ;
  
#line 2826 
  ipw_fw_dma_write_command_block(priv,(int)index,& priv->sram_desc.cb_list[index]);
  
#line 2825 
  index += 1U;
  ldv_54729: 
#line 2826 
  ;
  
#line 2825 
  if ((unsigned long)index < priv->sram_desc.last_cb_index) 
#line 2827 
                                                            goto ldv_54728; else 
                                                                    
#line 2830 
                                                                    goto ldv_54730;
  ldv_54730: 
#line 2831 
  ;
  
#line 2830 
  ipw_clear_bit(priv,32U,768U);
  
#line 2835 
  control = 5505280U;
  
#line 2836 
  ipw_write_reg32(priv,3145892U,control);
  
#line 2838 
  if ((ipw_debug_level & 65536U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 2838 
    tmp_1 = preempt_count();
    
#line 2838 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 2838 
                                                   tmp_2 = 73; else 
#line 2838 
                                                                    tmp_2 = 85;
    
#line 2838 
    printk("\001",tmp_2,"ipw_fw_dma_kick");
  }
  else ;
  
#line 2839 
  __retres = 0;
  
#line 2839 
  return __retres;
}


#line 2842  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_fw_dma_dump_command_block(struct ipw_priv *priv)
{
  u32 address;
  
#line 2845 
  u32 register_value = 0U;
  
#line 2846 
  u32 cb_fields_address = 0U;
  
#line 2848 
  if ((ipw_debug_level & 65536U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 2848 
    tmp = preempt_count();
    
#line 2848 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 2848 
                                                 tmp_0 = 73; else 
#line 2848 
                                                                  tmp_0 = 85;
    
#line 2848 
    printk("\001",tmp_0,"ipw_fw_dma_dump_command_block");
  }
  else ;
  
#line 2849 
  address = _ipw_read_reg32(priv,3145936U);
  
#line 2850 
  if ((ipw_debug_level & 67108864U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 2850 
    ;
    
#line 2850 
    tmp_1 = preempt_count();
    
#line 2850 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 2850 
                                                   tmp_2 = 73; else 
#line 2850 
                                                                    tmp_2 = 85;
    
#line 2850 
    printk("\001",tmp_2,"ipw_fw_dma_dump_command_block",address);
  }
  else ;
  
#line 2853 
  register_value = _ipw_read_reg32(priv,3145892U);
  
#line 2854 
  if ((ipw_debug_level & 67108864U) != 0U) {
    int tmp_4;
    int tmp_3;
    
#line 2854 
    ;
    
#line 2854 
    tmp_3 = preempt_count();
    
#line 2854 
    if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 2854 
                                                   tmp_4 = 73; else 
#line 2854 
                                                                    tmp_4 = 85;
    
#line 2854 
    printk("\001",tmp_4,"ipw_fw_dma_dump_command_block",register_value);
  }
  else ;
  
#line 2857 
  cb_fields_address = address;
  
#line 2858 
  register_value = _ipw_read_reg32(priv,cb_fields_address);
  
#line 2859 
  if ((ipw_debug_level & 67108864U) != 0U) {
    int tmp_6;
    int tmp_5;
    
#line 2859 
    ;
    
#line 2859 
    tmp_5 = preempt_count();
    
#line 2859 
    if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 2859 
                                                   tmp_6 = 73; else 
#line 2859 
                                                                    tmp_6 = 85;
    
#line 2859 
    printk("\001",tmp_6,"ipw_fw_dma_dump_command_block",register_value);
  }
  else ;
  
#line 2861 
  cb_fields_address += 4U;
  
#line 2862 
  register_value = _ipw_read_reg32(priv,cb_fields_address);
  
#line 2863 
  if ((ipw_debug_level & 67108864U) != 0U) {
    int tmp_8;
    int tmp_7;
    
#line 2863 
    ;
    
#line 2863 
    tmp_7 = preempt_count();
    
#line 2863 
    if (((unsigned long)tmp_7 & 2096896UL) != 0UL) 
#line 2863 
                                                   tmp_8 = 73; else 
#line 2863 
                                                                    tmp_8 = 85;
    
#line 2863 
    printk("\001",tmp_8,"ipw_fw_dma_dump_command_block",register_value);
  }
  else ;
  
#line 2865 
  cb_fields_address += 4U;
  
#line 2866 
  register_value = _ipw_read_reg32(priv,cb_fields_address);
  
#line 2867 
  if ((ipw_debug_level & 67108864U) != 0U) {
    int tmp_10;
    int tmp_9;
    
#line 2867 
    ;
    
#line 2867 
    tmp_9 = preempt_count();
    
#line 2867 
    if (((unsigned long)tmp_9 & 2096896UL) != 0UL) 
#line 2867 
                                                   tmp_10 = 73; else 
                                                                  
#line 2867 
                                                                  tmp_10 = 85;
    
#line 2867 
    printk("\001",tmp_10,"ipw_fw_dma_dump_command_block",register_value);
  }
  else ;
  
#line 2870 
  cb_fields_address += 4U;
  
#line 2871 
  register_value = _ipw_read_reg32(priv,cb_fields_address);
  
#line 2872 
  if ((ipw_debug_level & 67108864U) != 0U) {
    int tmp_12;
    int tmp_11;
    
#line 2872 
    ;
    
#line 2872 
    tmp_11 = preempt_count();
    
#line 2872 
    if (((unsigned long)tmp_11 & 2096896UL) != 0UL) 
#line 2872 
                                                    tmp_12 = 73; else 
                                                                   
#line 2872 
                                                                   tmp_12 = 85;
    
#line 2872 
    printk("\001",tmp_12,"ipw_fw_dma_dump_command_block",register_value);
  }
  else ;
  
#line 2874 
  if ((ipw_debug_level & 65536U) != 0U) {
    int tmp_14;
    int tmp_13;
    
#line 2874 
    tmp_13 = preempt_count();
    
#line 2874 
    if (((unsigned long)tmp_13 & 2096896UL) != 0UL) 
#line 2874 
                                                    tmp_14 = 73; else 
                                                                   
#line 2874 
                                                                   tmp_14 = 85;
    
#line 2874 
    printk("\001",tmp_14,"ipw_fw_dma_dump_command_block");
  }
  else ;
  
#line 2875 
  return;
}


#line 2877  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_fw_dma_command_block_index(struct ipw_priv *priv)
{
  int __retres;
  
#line 2879 
  u32 current_cb_address = 0U;
  
#line 2880 
  u32 current_cb_index = 0U;
  
#line 2882 
  if ((ipw_debug_level & 65536U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 2882 
    tmp = preempt_count();
    
#line 2882 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 2882 
                                                 tmp_0 = 73; else 
#line 2882 
                                                                  tmp_0 = 85;
    
#line 2882 
    printk("\001",tmp_0,"ipw_fw_dma_command_block_index");
  }
  else ;
  
#line 2883 
  current_cb_address = _ipw_read_reg32(priv,3145936U);
  
#line 2885 
  current_cb_index = (current_cb_address + 4294807552U) / 16U;
  
#line 2888 
  if ((ipw_debug_level & 67108864U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 2888 
    ;
    
#line 2888 
    ;
    
#line 2888 
    tmp_1 = preempt_count();
    
#line 2888 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 2888 
                                                   tmp_2 = 73; else 
#line 2888 
                                                                    tmp_2 = 85;
    
#line 2888 
    printk("\001",tmp_2,"ipw_fw_dma_command_block_index",current_cb_index,current_cb_address);
  }
  else ;
  
#line 2891 
  if ((ipw_debug_level & 65536U) != 0U) {
    int tmp_4;
    int tmp_3;
    
#line 2891 
    tmp_3 = preempt_count();
    
#line 2891 
    if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 2891 
                                                   tmp_4 = 73; else 
#line 2891 
                                                                    tmp_4 = 85;
    
#line 2891 
    printk("\001",tmp_4,"ipw_fw_dma_command_block_index");
  }
  else ;
  
#line 2892 
  __retres = (int)current_cb_index;
  
#line 2892 
  return __retres;
}


#line 2896  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_fw_dma_add_command_block(struct ipw_priv *priv, u32 src_address, u32 dest_address, u32 length, int interrupt_enabled, int is_last)
{
  int __retres;
  struct command_block *cb;
  
#line 2903 
  u32 control = 2364145664U;
  
#line 2907 
  u32 last_cb_element = 0U;
  
#line 2909 
  if ((ipw_debug_level & 67108864U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 2909 
    ;
    
#line 2909 
    ;
    
#line 2909 
    ;
    
#line 2909 
    tmp = preempt_count();
    
#line 2909 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 2909 
                                                 tmp_0 = 73; else 
#line 2909 
                                                                  tmp_0 = 85;
    
#line 2909 
    printk("\001",tmp_0,"ipw_fw_dma_add_command_block",src_address,dest_address,length);
  }
  else ;
  
#line 2912 
  if (priv->sram_desc.last_cb_index > 63UL) {
    
#line 2913 
    __retres = -1;
    
#line 2913 
    goto return_label;
  }
  else ;
  
#line 2915 
  last_cb_element = (unsigned int)priv->sram_desc.last_cb_index;
  
#line 2916 
  cb = & priv->sram_desc.cb_list[last_cb_element];
  
#line 2917 
  priv->sram_desc.last_cb_index += 1UL;
  
#line 2920 
  if (interrupt_enabled != 0) 
#line 2921 
                              control |= 1073741824U; else ;
  
#line 2923 
  if (is_last != 0) 
#line 2924 
                    control |= 536870912U; else ;
  
#line 2926 
  control |= length;
  
#line 2929 
  cb->status = (control ^ src_address) ^ dest_address;
  
#line 2932 
  cb->dest_addr = dest_address;
  
#line 2933 
  cb->source_addr = src_address;
  
#line 2936 
  cb->control = control;
  
#line 2938 
  __retres = 0;
  return_label: 
#line 2938 
                return __retres;
}


#line 2941  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_fw_dma_add_buffer(struct ipw_priv *priv, dma_addr_t *src_address, int nr, u32 dest_address, u32 len)
{
  int __retres;
  int ret;
  int i;
  u32 size;
  u32 tmp_4;
  
#line 2947 
  if ((ipw_debug_level & 65536U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 2947 
    tmp = preempt_count();
    
#line 2947 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 2947 
                                                 tmp_0 = 73; else 
#line 2947 
                                                                  tmp_0 = 85;
    
#line 2947 
    printk("\001",tmp_0,"ipw_fw_dma_add_buffer");
  }
  else ;
  
#line 2948 
  if ((ipw_debug_level & 67108864U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 2948 
    ;
    
#line 2948 
    ;
    
#line 2948 
    ;
    
#line 2948 
    tmp_1 = preempt_count();
    
#line 2948 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 2948 
                                                   tmp_2 = 73; else 
#line 2948 
                                                                    tmp_2 = 85;
    
#line 2948 
    printk("\001",tmp_2,"ipw_fw_dma_add_buffer",nr,dest_address,len);
  }
  else ;
  
#line 2951 
  i = 0;
  
#line 2951 
  goto ldv_54771;
  ldv_54770: 
#line 2952 
  ;
  {
    u32 tmp_3;
    
#line 2952 
    u32 __min1 = len - (unsigned int)(i * 8191);
    
#line 2952 
    u32 __min2 = 8191U;
    
#line 2952 
    if (__min1 < __min2) 
#line 2952 
                         tmp_3 = __min1; else 
#line 2952 
                                              tmp_3 = __min2;
    
#line 2952 
    tmp_4 = tmp_3;
  }
  
#line 2952 
  size = tmp_4;
  
#line 2953 
  ret = ipw_fw_dma_add_command_block(priv,(unsigned int)*(src_address + i),(unsigned int)(i * 8191) + dest_address,size,0,0);
  
#line 2957 
  if (ret != 0) {
    
#line 2958 
    if ((ipw_debug_level & 67108864U) != 0U) {
      int tmp_6;
      int tmp_5;
      
#line 2958 
      tmp_5 = preempt_count();
      
#line 2958 
      if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 2958 
                                                     tmp_6 = 73; else 
                                                                   
#line 2958 
                                                                   tmp_6 = 85;
      
#line 2958 
      printk("\001",tmp_6,"ipw_fw_dma_add_buffer");
    }
    else ;
    
#line 2959 
    __retres = -1;
    
#line 2959 
    goto return_label;
  }
  else 
    
#line 2961 
    if ((ipw_debug_level & 67108864U) != 0U) {
      int tmp_8;
      int tmp_7;
      
#line 2961 
      tmp_7 = preempt_count();
      
#line 2961 
      if (((unsigned long)tmp_7 & 2096896UL) != 0UL) 
#line 2961 
                                                     tmp_8 = 73; else 
                                                                   
#line 2961 
                                                                   tmp_8 = 85;
      
#line 2961 
      printk("\001",tmp_8,"ipw_fw_dma_add_buffer");
    }
    else ;
  
#line 2951 
  i += 1;
  ldv_54771: 
#line 2952 
  ;
  
#line 2951 
  if (i < nr) 
#line 2953 
              goto ldv_54770; else 
#line 2956 
                                   goto ldv_54772;
  ldv_54772: 
#line 2957 
  ;
  
#line 2964 
  if ((ipw_debug_level & 65536U) != 0U) {
    int tmp_10;
    int tmp_9;
    
#line 2964 
    tmp_9 = preempt_count();
    
#line 2964 
    if (((unsigned long)tmp_9 & 2096896UL) != 0UL) 
#line 2964 
                                                   tmp_10 = 73; else 
                                                                  
#line 2964 
                                                                  tmp_10 = 85;
    
#line 2964 
    printk("\001",tmp_10,"ipw_fw_dma_add_buffer");
  }
  else ;
  
#line 2965 
  __retres = 0;
  return_label: 
#line 2965 
                return __retres;
}


#line 2968  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_fw_dma_wait(struct ipw_priv *priv)
{
  int __retres;
  u32 previous_index;
  int tmp_1;
  int tmp_4;
  
#line 2970 
  u32 current_index = 0U;
  
#line 2971 
  u32 watchdog = 0U;
  
#line 2973 
  if ((ipw_debug_level & 65536U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 2973 
    tmp = preempt_count();
    
#line 2973 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 2973 
                                                 tmp_0 = 73; else 
#line 2973 
                                                                  tmp_0 = 85;
    
#line 2973 
    printk("\001",tmp_0,"ipw_fw_dma_wait");
  }
  else ;
  
#line 2975 
  tmp_1 = ipw_fw_dma_command_block_index(priv);
  
#line 2975 
  current_index = (unsigned int)tmp_1;
  
#line 2976 
  if ((ipw_debug_level & 67108864U) != 0U) {
    int tmp_3;
    int tmp_2;
    
#line 2976 
    ;
    
#line 2976 
    tmp_2 = preempt_count();
    
#line 2976 
    if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 2976 
                                                   tmp_3 = 73; else 
#line 2976 
                                                                    tmp_3 = 85;
    
#line 2976 
    printk("\001",tmp_3,"ipw_fw_dma_wait",(int)priv->sram_desc.last_cb_index);
  }
  else ;
  
#line 2979 
  goto ldv_54780;
  ldv_54781: 
#line 2980 
  ;
  
#line 2980 
  __const_udelay(214750UL);
  
#line 2981 
  previous_index = current_index;
  
#line 2982 
  tmp_4 = ipw_fw_dma_command_block_index(priv);
  
#line 2982 
  current_index = (unsigned int)tmp_4;
  
#line 2984 
  if (previous_index < current_index) {
    
#line 2985 
    watchdog = 0U;
    
#line 2986 
    goto ldv_54780;
  }
  else ;
  
#line 2988 
  watchdog += 1U;
  
#line 2988 
  if (watchdog > 400U) {
    
#line 2989 
    if ((ipw_debug_level & 67108864U) != 0U) {
      int tmp_6;
      int tmp_5;
      
#line 2989 
      tmp_5 = preempt_count();
      
#line 2989 
      if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 2989 
                                                     tmp_6 = 73; else 
                                                                   
#line 2989 
                                                                   tmp_6 = 85;
      
#line 2989 
      printk("\001",tmp_6,"ipw_fw_dma_wait");
    }
    else ;
    
#line 2990 
    ipw_fw_dma_dump_command_block(priv);
    
#line 2991 
    ipw_fw_dma_abort(priv);
    
#line 2992 
    __retres = -1;
    
#line 2992 
    goto return_label;
  }
  else ;
  ldv_54780: 
#line 2994 
  ;
  
#line 2979 
  if ((unsigned long)current_index < priv->sram_desc.last_cb_index) 
#line 2981 
                                                                    goto ldv_54781; else 
                                                                    
#line 2984 
                                                                    goto ldv_54782;
  ldv_54782: 
#line 2985 
  ;
  
#line 2996 
  ipw_fw_dma_abort(priv);
  
#line 2999 
  ipw_set_bit(priv,32U,768U);
  
#line 3002 
  if ((ipw_debug_level & 65536U) != 0U) {
    int tmp_8;
    int tmp_7;
    
#line 3002 
    tmp_7 = preempt_count();
    
#line 3002 
    if (((unsigned long)tmp_7 & 2096896UL) != 0UL) 
#line 3002 
                                                   tmp_8 = 73; else 
#line 3002 
                                                                    tmp_8 = 85;
    
#line 3002 
    printk("\001",tmp_8,"ipw_fw_dma_wait");
  }
  else ;
  
#line 3003 
  __retres = 0;
  return_label: 
#line 3003 
                return __retres;
}


#line 3006  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_remove_current_network(struct ipw_priv *priv)
{
  struct list_head *element;
  struct list_head *safe;
  unsigned long flags;
  struct libipw_network *tmp;
  bool tmp_0;
  
#line 3009 
  struct libipw_network *network = (struct libipw_network *)0;
  
#line 3012 
  ldv___ldv_spin_lock_119(& (priv->ieee)->lock);
  
#line 3013 
  element = (priv->ieee)->network_list.next;
  
#line 3013 
  safe = element->next;
  
#line 3013 
  goto ldv_54793;
  ldv_54792: 
#line 3014 
  ;
  {
    
#line 3014 
    struct list_head const *__mptr = (struct list_head const *)element;
    
#line 3014 
    tmp = (struct libipw_network *)__mptr + 18446744073709551264U;
  }
  
#line 3014 
  network = tmp;
  
#line 3015 
  tmp_0 = ether_addr_equal((u8 const *)(& network->bssid),(u8 const *)(& priv->bssid));
  
#line 3015 
  if ((int)tmp_0 != 0) {
    
#line 3016 
    list_del(element);
    
#line 3017 
    list_add_tail(& network->list,& (priv->ieee)->network_free_list);
  }
  else ;
  
#line 3013 
  element = safe;
  
#line 3013 
  safe = element->next;
  ldv_54793: 
#line 3014 
  ;
  
#line 3013 
  if (& (priv->ieee)->network_list != element) 
#line 3015 
                                               goto ldv_54792; else 
#line 3018 
                                                                    goto ldv_54794;
  ldv_54794: 
#line 3019 
  ;
  
#line 3021 
  ldv_spin_unlock_irqrestore_120(& (priv->ieee)->lock,flags);
  
#line 3022 
  return;
}


#line 3039  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_poll_bit(struct ipw_priv *priv, u32 addr, u32 mask, int timeout)
{
  int __retres;
  u32 tmp_2;
  
#line 3042 
  int i = 0;
  ldv_54813: 
#line 3043 
  ;
  
#line 3045 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 3045 
    ;
    
#line 3045 
    tmp = preempt_count();
    
#line 3045 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 3045 
                                                 tmp_0 = 73; else 
#line 3045 
                                                                  tmp_0 = 85;
    
#line 3045 
    printk("\001",tmp_0,"ipw_poll_bit",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",3045,addr);
  }
  else ;
  
#line 3045 
  tmp_2 = _ipw_read32(priv,(unsigned long)addr);
  
#line 3045 
  ;
  
#line 3045 
  if ((tmp_2 & mask) == mask) {
    
#line 3046 
    __retres = i;
    
#line 3046 
    goto return_label;
  }
  else ;
  {
    
#line 3047 
    unsigned long __ms = 10UL;
    {
      unsigned long tmp_3;
      
#line 3047 
      goto ldv_54811;
      ldv_54810: 
#line 3048 
      ;
      
#line 3047 
      __const_udelay(4295000UL);
      ldv_54811: 
#line 3049 
      ;
      
#line 3047 
      tmp_3 = __ms;
      
#line 3047 
      __ms -= 1UL;
      
#line 3047 
      ;
      
#line 3047 
      if (tmp_3 != 0UL) 
#line 3049 
                        goto ldv_54810; else 
#line 3052 
                                             goto ldv_54812;
      ldv_54812: 
#line 3053 
      ;
    }
  }
  
#line 3048 
  i += 10;
  
#line 3049 
  if (i < timeout) 
#line 3051 
                   goto ldv_54813; else 
#line 3054 
                                        goto ldv_54814;
  ldv_54814: 
#line 3055 
  ;
  
#line 3051 
  __retres = -62;
  return_label: 
#line 3051 
                return __retres;
}


#line 3059  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_stop_master(struct ipw_priv *priv)
{
  int __retres;
  int rc;
  
#line 3063 
  if ((ipw_debug_level & 268435456U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 3063 
    tmp = preempt_count();
    
#line 3063 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 3063 
                                                 tmp_0 = 73; else 
#line 3063 
                                                                  tmp_0 = 85;
    
#line 3063 
    printk("\001",tmp_0,"ipw_stop_master");
  }
  else ;
  
#line 3065 
  ipw_set_bit(priv,32U,512U);
  
#line 3068 
  rc = ipw_poll_bit(priv,32U,256U,100);
  
#line 3070 
  if (rc < 0) {
    
#line 3071 
    printk("\001");
    
#line 3072 
    __retres = -1;
    
#line 3072 
    goto return_label;
  }
  else ;
  
#line 3075 
  if ((ipw_debug_level & 4U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 3075 
    ;
    
#line 3075 
    tmp_1 = preempt_count();
    
#line 3075 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 3075 
                                                   tmp_2 = 73; else 
#line 3075 
                                                                    tmp_2 = 85;
    
#line 3075 
    printk("\001",tmp_2,"ipw_stop_master",rc);
  }
  else ;
  
#line 3077 
  __retres = rc;
  return_label: 
#line 3077 
                return __retres;
}


#line 3080  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_arc_release(struct ipw_priv *priv)
{
  
#line 3082 
  if ((ipw_debug_level & 268435456U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 3082 
    tmp = preempt_count();
    
#line 3082 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 3082 
                                                 tmp_0 = 73; else 
#line 3082 
                                                                  tmp_0 = 85;
    
#line 3082 
    printk("\001",tmp_0,"ipw_arc_release");
  }
  else ;
  
#line 3083 
  if (1) 
#line 3083 
         __const_udelay(21475000UL);
  else {
    
#line 3083 
    unsigned long __ms = 5UL;
    {
      unsigned long tmp_1;
      
#line 3083 
      goto ldv_54826;
      ldv_54825: 
#line 3084 
      ;
      
#line 3083 
      __const_udelay(4295000UL);
      ldv_54826: 
#line 3085 
      ;
      
#line 3083 
      tmp_1 = __ms;
      
#line 3083 
      __ms -= 1UL;
      
#line 3083 
      ;
      
#line 3083 
      if (tmp_1 != 0UL) 
#line 3085 
                        goto ldv_54825; else 
#line 3088 
                                             goto ldv_54827;
      ldv_54827: 
#line 3089 
      ;
    }
  }
  
#line 3085 
  ipw_clear_bit(priv,32U,1U);
  
#line 3088 
  if (1) 
#line 3088 
         __const_udelay(21475000UL);
  else {
    
#line 3088 
    unsigned long __ms_0 = 5UL;
    {
      unsigned long tmp_2;
      
#line 3088 
      goto ldv_54830;
      ldv_54829: 
#line 3089 
      ;
      
#line 3088 
      __const_udelay(4295000UL);
      ldv_54830: 
#line 3090 
      ;
      
#line 3088 
      tmp_2 = __ms_0;
      
#line 3088 
      __ms_0 -= 1UL;
      
#line 3088 
      ;
      
#line 3088 
      if (tmp_2 != 0UL) 
#line 3090 
                        goto ldv_54829; else 
#line 3093 
                                             goto ldv_54831;
      ldv_54831: 
#line 3094 
      ;
    }
  }
  
#line 3097 
  return;
}


#line 3096  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_load_ucode(struct ipw_priv *priv, u8 *data, size_t len)
{
  int __retres;
  int i;
  int addr;
  __le16 *image;
  
#line 3098 
  int rc = 0;
  
#line 3099 
  u8 cr = (unsigned char)0U;
  
#line 3102 
  image = (__le16 *)data;
  
#line 3104 
  if ((ipw_debug_level & 268435456U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 3104 
    tmp = preempt_count();
    
#line 3104 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 3104 
                                                 tmp_0 = 73; else 
#line 3104 
                                                                  tmp_0 = 85;
    
#line 3104 
    printk("\001",tmp_0,"ipw_load_ucode");
  }
  else ;
  
#line 3106 
  rc = ipw_stop_master(priv);
  
#line 3108 
  if (rc < 0) {
    
#line 3109 
    __retres = rc;
    
#line 3109 
    goto return_label;
  }
  else ;
  
#line 3111 
  addr = 512;
  
#line 3111 
  goto ldv_54847;
  ldv_54846: 
#line 3112 
  ;
  
#line 3113 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 3113 
    ;
    
#line 3113 
    tmp_1 = preempt_count();
    
#line 3113 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 3113 
                                                   tmp_2 = 73; else 
#line 3113 
                                                                    tmp_2 = 85;
    
#line 3113 
    printk("\001",tmp_2,"ipw_load_ucode",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",3113,(unsigned int)addr,0U);
  }
  else ;
  
#line 3113 
  _ipw_write32(priv,(unsigned long)addr,0U);
  
#line 3112 
  addr += 4;
  ldv_54847: 
#line 3113 
  ;
  
#line 3111 
  if (addr <= 4095) 
#line 3114 
                    goto ldv_54846; else 
#line 3117 
                                         goto ldv_54848;
  ldv_54848: 
#line 3118 
  ;
  
#line 3117 
  memset((void *)(& priv->dino_alive),0,26UL);
  
#line 3121 
  ipw_write_reg32(priv,3145952U,2147483648U);
  
#line 3122 
  ipw_arc_release(priv);
  
#line 3123 
  ipw_write_reg32(priv,3145952U,0U);
  
#line 3124 
  if (1) 
#line 3124 
         __const_udelay(4295000UL);
  else {
    
#line 3124 
    unsigned long __ms = 1UL;
    {
      unsigned long tmp_3;
      
#line 3124 
      goto ldv_54851;
      ldv_54850: 
#line 3125 
      ;
      
#line 3124 
      __const_udelay(4295000UL);
      ldv_54851: 
#line 3126 
      ;
      
#line 3124 
      tmp_3 = __ms;
      
#line 3124 
      __ms -= 1UL;
      
#line 3124 
      ;
      
#line 3124 
      if (tmp_3 != 0UL) 
#line 3126 
                        goto ldv_54850; else 
#line 3129 
                                             goto ldv_54852;
      ldv_54852: 
#line 3130 
      ;
    }
  }
  
#line 3127 
  ipw_write_reg32(priv,3145732U,1U);
  
#line 3128 
  if (1) 
#line 3128 
         __const_udelay(4295000UL);
  else {
    
#line 3128 
    unsigned long __ms_0 = 1UL;
    {
      unsigned long tmp_4;
      
#line 3128 
      goto ldv_54855;
      ldv_54854: 
#line 3129 
      ;
      
#line 3128 
      __const_udelay(4295000UL);
      ldv_54855: 
#line 3130 
      ;
      
#line 3128 
      tmp_4 = __ms_0;
      
#line 3128 
      __ms_0 -= 1UL;
      
#line 3128 
      ;
      
#line 3128 
      if (tmp_4 != 0UL) 
#line 3130 
                        goto ldv_54854; else 
#line 3133 
                                             goto ldv_54856;
      ldv_54856: 
#line 3134 
      ;
    }
  }
  
#line 3130 
  ipw_write_reg32(priv,3145732U,0U);
  
#line 3131 
  if (1) 
#line 3131 
         __const_udelay(4295000UL);
  else {
    
#line 3131 
    unsigned long __ms_1 = 1UL;
    {
      unsigned long tmp_5;
      
#line 3131 
      goto ldv_54859;
      ldv_54858: 
#line 3132 
      ;
      
#line 3131 
      __const_udelay(4295000UL);
      ldv_54859: 
#line 3133 
      ;
      
#line 3131 
      tmp_5 = __ms_1;
      
#line 3131 
      __ms_1 -= 1UL;
      
#line 3131 
      ;
      
#line 3131 
      if (tmp_5 != 0UL) 
#line 3133 
                        goto ldv_54858; else 
#line 3136 
                                             goto ldv_54860;
      ldv_54860: 
#line 3137 
      ;
    }
  }
  
#line 3134 
  ipw_write_reg8(priv,2097152U,(unsigned char)0);
  
#line 3135 
  ipw_write_reg8(priv,2097152U,(unsigned char)64);
  
#line 3136 
  if (1) 
#line 3136 
         __const_udelay(4295000UL);
  else {
    
#line 3136 
    unsigned long __ms_2 = 1UL;
    {
      unsigned long tmp_6;
      
#line 3136 
      goto ldv_54863;
      ldv_54862: 
#line 3137 
      ;
      
#line 3136 
      __const_udelay(4295000UL);
      ldv_54863: 
#line 3138 
      ;
      
#line 3136 
      tmp_6 = __ms_2;
      
#line 3136 
      __ms_2 -= 1UL;
      
#line 3136 
      ;
      
#line 3136 
      if (tmp_6 != 0UL) 
#line 3138 
                        goto ldv_54862; else 
#line 3141 
                                             goto ldv_54864;
      ldv_54864: 
#line 3142 
      ;
    }
  }
  
#line 3147 
  i = 0;
  
#line 3147 
  goto ldv_54866;
  ldv_54865: 
#line 3148 
  ;
  
#line 3148 
  ipw_write_reg16(priv,2097168U,(unsigned short)((int)*(image + i)));
  
#line 3147 
  i += 1;
  ldv_54866: 
#line 3148 
  ;
  
#line 3147 
  if ((unsigned long)i < len / 2UL) 
#line 3149 
                                    goto ldv_54865; else 
#line 3152 
                                                         goto ldv_54867;
  ldv_54867: 
#line 3153 
  ;
  
#line 3152 
  ipw_write_reg8(priv,2097152U,(unsigned char)0);
  
#line 3153 
  ipw_write_reg8(priv,2097152U,(unsigned char)128);
  
#line 3158 
  i = 0;
  
#line 3158 
  goto ldv_54874;
  ldv_54873: 
#line 3159 
  ;
  
#line 3160 
  cr = _ipw_read_reg8(priv,2097152U);
  
#line 3161 
  if (((int)cr & 1) != 0) 
#line 3162 
                          goto ldv_54868; else ;
  
#line 3163 
  if (1) 
#line 3163 
         __const_udelay(4295000UL);
  else {
    
#line 3163 
    unsigned long __ms_3 = 1UL;
    {
      unsigned long tmp_7;
      
#line 3163 
      goto ldv_54871;
      ldv_54870: 
#line 3164 
      ;
      
#line 3163 
      __const_udelay(4295000UL);
      ldv_54871: 
#line 3165 
      ;
      
#line 3163 
      tmp_7 = __ms_3;
      
#line 3163 
      __ms_3 -= 1UL;
      
#line 3163 
      ;
      
#line 3163 
      if (tmp_7 != 0UL) 
#line 3165 
                        goto ldv_54870; else 
#line 3168 
                                             goto ldv_54872;
      ldv_54872: 
#line 3169 
      ;
    }
  }
  
#line 3158 
  i += 1;
  ldv_54874: 
#line 3159 
  ;
  
#line 3158 
  if (i <= 99) 
#line 3160 
               goto ldv_54873; else 
#line 3163 
                                    goto ldv_54868;
  ldv_54868: 
#line 3164 
  ;
  
#line 3166 
  if (((int)cr & 1) != 0) {
    __le32 response_buffer[7U];
    
#line 3170 
    i = 0;
    
#line 3170 
    goto ldv_54880;
    ldv_54879: 
#line 3171 
    ;
    
#line 3172 
    response_buffer[i] = _ipw_read_reg32(priv,2097156U);
    
#line 3170 
    i += 1;
    ldv_54880: 
#line 3171 
    ;
    
#line 3170 
    if ((unsigned int)i <= 6U) 
#line 3172 
                               goto ldv_54879; else 
#line 3175 
                                                    goto ldv_54881;
    ldv_54881: 
#line 3176 
    ;
    
#line 3174 
    memcpy((void *)(& priv->dino_alive),(void const *)(& response_buffer),26UL);
    
#line 3176 
    if ((unsigned int)priv->dino_alive.alive_command == 1U && (unsigned int)priv->dino_alive.ucode_valid == 1U) {
      
#line 3178 
      rc = 0;
      
#line 3179 
      if ((ipw_debug_level & 4U) != 0U) {
        int tmp_10;
        int tmp_9;
        
#line 3179 
        ;
        
#line 3179 
        ;
        
#line 3179 
        ;
        
#line 3179 
        ;
        
#line 3179 
        ;
        
#line 3179 
        ;
        
#line 3179 
        ;
        
#line 3179 
        ;
        
#line 3179 
        ;
        
#line 3179 
        tmp_9 = preempt_count();
        
#line 3179 
        if (((unsigned long)tmp_9 & 2096896UL) != 0UL) 
#line 3179 
                                                       tmp_10 = 73; else 
                                                                    
#line 3179 
                                                                    tmp_10 = 85;
        
#line 3179 
        printk("\001",tmp_10,"ipw_load_ucode",(int)priv->dino_alive.software_revision,(int)priv->dino_alive.software_revision,(int)priv->dino_alive.device_identifier,(int)priv->dino_alive.device_identifier,(int)priv->dino_alive.time_stamp[0],(int)priv->dino_alive.time_stamp[1],(int)priv->dino_alive.time_stamp[2],(int)priv->dino_alive.time_stamp[3],(int)priv->dino_alive.time_stamp[4]);
      }
      else ;
    }
    else {
      
#line 3192 
      if ((ipw_debug_level & 4U) != 0U) {
        int tmp_12;
        int tmp_11;
        
#line 3192 
        tmp_11 = preempt_count();
        
#line 3192 
        if (((unsigned long)tmp_11 & 2096896UL) != 0UL) 
#line 3192 
                                                        tmp_12 = 73; else 
                                                                    
#line 3192 
                                                                    tmp_12 = 85;
        
#line 3192 
        printk("\001",tmp_12,"ipw_load_ucode");
      }
      else ;
      
#line 3193 
      rc = -22;
    }
  }
  else {
    
#line 3196 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_14;
      int tmp_13;
      
#line 3196 
      tmp_13 = preempt_count();
      
#line 3196 
      if (((unsigned long)tmp_13 & 2096896UL) != 0UL) 
#line 3196 
                                                      tmp_14 = 73; else 
                                                                    
#line 3196 
                                                                    tmp_14 = 85;
      
#line 3196 
      printk("\001",tmp_14,"ipw_load_ucode");
    }
    else ;
    
#line 3197 
    rc = -62;
  }
  
#line 3202 
  ipw_write_reg8(priv,2097152U,(unsigned char)0);
  
#line 3204 
  __retres = rc;
  return_label: 
#line 3204 
                return __retres;
}


#line 3207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_load_firmware(struct ipw_priv *priv, u8 *data, size_t len)
{
  int __retres;
  struct fw_chunk *chunk;
  int i;
  struct dma_pool *pool;
  void **virts;
  dma_addr_t *phys;
  
#line 3209 
  int ret = -1;
  
#line 3210 
  int offset = 0;
  
#line 3212 
  int total_nr = 0;
  
#line 3218 
  if ((ipw_debug_level & 268435456U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 3218 
    tmp = preempt_count();
    
#line 3218 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 3218 
                                                 tmp_0 = 73; else 
#line 3218 
                                                                  tmp_0 = 85;
    
#line 3218 
    printk("\001",tmp_0,"ipw_load_firmware");
  }
  else ;
  
#line 3220 
  virts = (void **)kmalloc(512UL,208U);
  
#line 3222 
  if (virts == (void **)0) {
    
#line 3223 
    __retres = -12;
    
#line 3223 
    goto return_label;
  }
  else ;
  
#line 3225 
  phys = (dma_addr_t *)kmalloc(512UL,208U);
  
#line 3227 
  if (phys == (dma_addr_t *)0ULL) {
    
#line 3228 
    kfree((void const *)virts);
    
#line 3229 
    __retres = -12;
    
#line 3229 
    goto return_label;
  }
  else ;
  
#line 3231 
  pool = dma_pool_create("ipw2200",& (priv->pci_dev)->dev,8191UL,0UL,0UL);
  
#line 3232 
  if (pool == (struct dma_pool *)0) {
    
#line 3233 
    printk("\001");
    
#line 3234 
    kfree((void const *)phys);
    
#line 3235 
    kfree((void const *)virts);
    
#line 3236 
    __retres = -12;
    
#line 3236 
    goto return_label;
  }
  else ;
  
#line 3240 
  ret = ipw_fw_dma_enable(priv);
  
#line 3243 
  if ((long)(priv->sram_desc.last_cb_index != 0UL) != 0L) {
    
#line 3245 
    ldv_inline_asm();
    
#line 3243 
    ;
  }
  else ;
  ldv_54907: 
#line 3245 
  ;
  {
    u32 chunk_len;
    u8 *start;
    int size;
    u32 tmp_4;
    
#line 3249 
    int nr = 0;
    
#line 3251 
    chunk = (struct fw_chunk *)(data + offset);
    
#line 3252 
    offset = (int)((unsigned int)offset + 8U);
    
#line 3253 
    chunk_len = chunk->length;
    
#line 3254 
    start = data + offset;
    
#line 3256 
    nr = (int)((chunk_len + 8190U) / 8191U);
    
#line 3257 
    i = 0;
    
#line 3257 
    goto ldv_54905;
    ldv_54904: 
#line 3258 
    ;
    
#line 3258 
    *(virts + total_nr) = dma_pool_alloc(pool,208U,phys + total_nr);
    
#line 3260 
    if (*(virts + total_nr) == (void *)0) {
      
#line 3261 
      ret = -12;
      
#line 3262 
      goto out;
    }
    else ;
    {
      u32 tmp_3;
      
#line 3264 
      u32 __min1 = chunk_len - (unsigned int)(i * 8191);
      
#line 3264 
      u32 __min2 = 8191U;
      
#line 3264 
      if (__min1 < __min2) 
#line 3264 
                           tmp_3 = __min1; else 
#line 3264 
                                                tmp_3 = __min2;
      
#line 3264 
      tmp_4 = tmp_3;
    }
    
#line 3264 
    size = (int)tmp_4;
    
#line 3266 
    memcpy(*(virts + total_nr),(void const *)start,(unsigned long)size);
    
#line 3267 
    start += size;
    
#line 3268 
    total_nr += 1;
    
#line 3270 
    if ((long)(total_nr > 64) != 0L) {
      
#line 3272 
      ldv_inline_asm();
      
#line 3270 
      ;
    }
    else ;
    
#line 3257 
    i += 1;
    ldv_54905: 
#line 3258 
    ;
    
#line 3257 
    if (i < nr) 
#line 3259 
                goto ldv_54904; else 
#line 3262 
                                     goto ldv_54906;
    ldv_54906: 
#line 3263 
    ;
    
#line 3277 
    ret = ipw_fw_dma_add_buffer(priv,phys + (total_nr - nr),nr,chunk->address,chunk_len);
    
#line 3280 
    if (ret != 0) {
      
#line 3281 
      if ((ipw_debug_level & 4U) != 0U) {
        int tmp_6;
        int tmp_5;
        
#line 3281 
        tmp_5 = preempt_count();
        
#line 3281 
        if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 3281 
                                                       tmp_6 = 73; else 
                                                                    
#line 3281 
                                                                    tmp_6 = 85;
        
#line 3281 
        printk("\001",tmp_6,"ipw_load_firmware");
      }
      else ;
      
#line 3282 
      goto out;
    }
    else ;
    
#line 3285 
    offset = (int)((unsigned int)offset + chunk_len);
  }
  
#line 3286 
  if ((unsigned long)offset < len) 
#line 3288 
                                   goto ldv_54907; else 
#line 3291 
                                                        goto ldv_54908;
  ldv_54908: 
#line 3292 
  ;
  
#line 3289 
  ret = ipw_fw_dma_kick(priv);
  
#line 3290 
  if (ret != 0) {
    
#line 3291 
    printk("\001");
    
#line 3292 
    goto out;
  }
  else ;
  
#line 3295 
  ret = ipw_fw_dma_wait(priv);
  
#line 3296 
  if (ret != 0) {
    
#line 3297 
    printk("\001");
    
#line 3298 
    goto out;
  }
  else ;
  out: 
#line 3300 
  ;
  
#line 3301 
  i = 0;
  
#line 3301 
  goto ldv_54910;
  ldv_54909: 
#line 3302 
  ;
  
#line 3302 
  dma_pool_free(pool,*(virts + i),*(phys + i));
  
#line 3301 
  i += 1;
  ldv_54910: 
#line 3302 
  ;
  
#line 3301 
  if (i < total_nr) 
#line 3303 
                    goto ldv_54909; else 
#line 3306 
                                         goto ldv_54911;
  ldv_54911: 
#line 3307 
  ;
  
#line 3304 
  dma_pool_destroy(pool);
  
#line 3305 
  kfree((void const *)phys);
  
#line 3306 
  kfree((void const *)virts);
  
#line 3308 
  __retres = ret;
  return_label: 
#line 3308 
                return __retres;
}


#line 3312  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_stop_nic(struct ipw_priv *priv)
{
  int __retres;
  
#line 3314 
  int rc = 0;
  
#line 3317 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 3317 
    tmp = preempt_count();
    
#line 3317 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 3317 
                                                 tmp_0 = 73; else 
#line 3317 
                                                                  tmp_0 = 85;
    
#line 3317 
    printk("\001",tmp_0,"ipw_stop_nic",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",3317,32U,512U);
  }
  else ;
  
#line 3317 
  _ipw_write32(priv,32UL,512U);
  
#line 3319 
  rc = ipw_poll_bit(priv,32U,256U,500);
  
#line 3321 
  if (rc < 0) {
    
#line 3322 
    printk("\001");
    
#line 3323 
    __retres = rc;
    
#line 3323 
    goto return_label;
  }
  else ;
  
#line 3326 
  ipw_set_bit(priv,32U,1U);
  
#line 3328 
  __retres = rc;
  return_label: 
#line 3328 
                return __retres;
}


#line 3331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_start_nic(struct ipw_priv *priv)
{
  
#line 3333 
  if ((ipw_debug_level & 268435456U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 3333 
    tmp = preempt_count();
    
#line 3333 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 3333 
                                                 tmp_0 = 73; else 
#line 3333 
                                                                  tmp_0 = 85;
    
#line 3333 
    printk("\001",tmp_0,"ipw_start_nic");
  }
  else ;
  
#line 3336 
  ipw_clear_bit(priv,32U,769U);
  
#line 3342 
  ipw_set_bit(priv,36U,2U);
  
#line 3345 
  if ((ipw_debug_level & 268435456U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 3345 
    tmp_1 = preempt_count();
    
#line 3345 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 3345 
                                                   tmp_2 = 73; else 
#line 3345 
                                                                    tmp_2 = 85;
    
#line 3345 
    printk("\001",tmp_2,"ipw_start_nic");
  }
  else ;
  
#line 3346 
  return;
}


#line 3348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_init_nic(struct ipw_priv *priv)
{
  int __retres;
  int rc;
  
#line 3352 
  if ((ipw_debug_level & 268435456U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 3352 
    tmp = preempt_count();
    
#line 3352 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 3352 
                                                 tmp_0 = 73; else 
#line 3352 
                                                                  tmp_0 = 85;
    
#line 3352 
    printk("\001",tmp_0,"ipw_init_nic");
  }
  else ;
  
#line 3356 
  ipw_set_bit(priv,36U,4U);
  
#line 3359 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 3359 
    tmp_1 = preempt_count();
    
#line 3359 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 3359 
                                                   tmp_2 = 73; else 
#line 3359 
                                                                    tmp_2 = 85;
    
#line 3359 
    printk("\001",tmp_2,"ipw_init_nic",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",3360,4084U,536870912U);
  }
  else ;
  
#line 3359 
  _ipw_write32(priv,4084UL,536870912U);
  
#line 3363 
  rc = ipw_poll_bit(priv,36U,1U,250);
  
#line 3365 
  if (rc < 0) {
    
#line 3366 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_4;
      int tmp_3;
      
#line 3366 
      tmp_3 = preempt_count();
      
#line 3366 
      if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 3366 
                                                     tmp_4 = 73; else 
                                                                   
#line 3366 
                                                                   tmp_4 = 85;
      
#line 3366 
      printk("\001",tmp_4,"ipw_init_nic");
    }
    else ;
  }
  else ;
  
#line 3369 
  ipw_set_bit(priv,32U,128U);
  
#line 3371 
  __const_udelay(42950UL);
  
#line 3374 
  ipw_set_bit(priv,36U,4U);
  
#line 3376 
  if ((ipw_debug_level & 268435456U) != 0U) {
    int tmp_6;
    int tmp_5;
    
#line 3376 
    tmp_5 = preempt_count();
    
#line 3376 
    if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 3376 
                                                   tmp_6 = 73; else 
#line 3376 
                                                                    tmp_6 = 85;
    
#line 3376 
    printk("\001",tmp_6,"ipw_init_nic");
  }
  else ;
  
#line 3377 
  __retres = 0;
  
#line 3377 
  return __retres;
}


#line 3383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_reset_nic(struct ipw_priv *priv)
{
  unsigned long flags;
  
#line 3385 
  int rc = 0;
  
#line 3388 
  if ((ipw_debug_level & 268435456U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 3388 
    tmp = preempt_count();
    
#line 3388 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 3388 
                                                 tmp_0 = 73; else 
#line 3388 
                                                                  tmp_0 = 85;
    
#line 3388 
    printk("\001",tmp_0,"ipw_reset_nic");
  }
  else ;
  
#line 3390 
  rc = ipw_init_nic(priv);
  
#line 3392 
  ldv___ldv_spin_lock_121(& priv->lock);
  
#line 3394 
  priv->status &= 4294967294U;
  
#line 3395 
  __wake_up(& priv->wait_command_queue,1U,1,(void *)0);
  
#line 3396 
  priv->status &= 4288675839U;
  
#line 3397 
  __wake_up(& priv->wait_state,1U,1,(void *)0);
  
#line 3398 
  ldv_spin_unlock_irqrestore_122(& priv->lock,flags);
  
#line 3400 
  if ((ipw_debug_level & 268435456U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 3400 
    tmp_1 = preempt_count();
    
#line 3400 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 3400 
                                                   tmp_2 = 73; else 
#line 3400 
                                                                    tmp_2 = 85;
    
#line 3400 
    printk("\001",tmp_2,"ipw_reset_nic");
  }
  else ;
  
#line 3401 
  return rc;
}


#line 3413  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_get_fw(struct ipw_priv *priv, struct firmware const **raw_0, char const *name)
{
  int __retres;
  struct ipw_fw *fw;
  int rc;
  
#line 3420 
  rc = request_firmware(raw_0,name,& (priv->pci_dev)->dev);
  
#line 3421 
  if (rc < 0) {
    
#line 3422 
    printk("\001",name,rc);
    
#line 3423 
    __retres = rc;
    
#line 3423 
    goto return_label;
  }
  else ;
  
#line 3426 
  if ((*raw_0)->size <= 15UL) {
    
#line 3427 
    printk("\001",name,(*raw_0)->size);
    
#line 3428 
    __retres = -22;
    
#line 3428 
    goto return_label;
  }
  else ;
  
#line 3431 
  fw = (struct ipw_fw *)(*raw_0)->data;
  
#line 3433 
  if ((*raw_0)->size < (((unsigned long)fw->boot_size + (unsigned long)fw->ucode_size) + (unsigned long)fw->fw_size) + 16UL) {
    
#line 3435 
    printk("\001",name,(*raw_0)->size);
    
#line 3437 
    __retres = -22;
    
#line 3437 
    goto return_label;
  }
  else ;
  
#line 3440 
  if ((ipw_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 3440 
    ;
    
#line 3440 
    ;
    
#line 3440 
    ;
    
#line 3440 
    ;
    
#line 3440 
    tmp = preempt_count();
    
#line 3440 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 3440 
                                                 tmp_0 = 73; else 
#line 3440 
                                                                  tmp_0 = 85;
    
#line 3440 
    printk("\001",tmp_0,"ipw_get_fw",name,fw->ver >> 16,fw->ver & 255U,(*raw_0)->size + 18446744073709551600UL);
  }
  else ;
  
#line 3445 
  __retres = 0;
  return_label: 
#line 3445 
                return __retres;
}


#line 3450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_rx_queue_reset(struct ipw_priv *priv, struct ipw_rx_queue *rxq)
{
  unsigned long flags;
  int i;
  u32 tmp;
  
#line 3456 
  ldv___ldv_spin_lock_123(& rxq->lock);
  
#line 3458 
  INIT_LIST_HEAD(& rxq->rx_free);
  
#line 3459 
  INIT_LIST_HEAD(& rxq->rx_used);
  
#line 3462 
  i = 0;
  
#line 3462 
  goto ldv_54953;
  ldv_54952: 
#line 3463 
  ;
  
#line 3465 
  if (rxq->pool[i].skb != (struct sk_buff *)0) {
    
#line 3466 
    pci_unmap_single(priv->pci_dev,rxq->pool[i].dma_addr,3000UL,2);
    
#line 3468 
    consume_skb(rxq->pool[i].skb);
    
#line 3469 
    rxq->pool[i].skb = (struct sk_buff *)0;
  }
  else ;
  
#line 3471 
  list_add_tail(& rxq->pool[i].list,& rxq->rx_used);
  
#line 3462 
  i += 1;
  ldv_54953: 
#line 3463 
  ;
  
#line 3462 
  if (i <= 63) 
#line 3464 
               goto ldv_54952; else 
#line 3467 
                                    goto ldv_54954;
  ldv_54954: 
#line 3468 
  ;
  
#line 3476 
  tmp = 0U;
  
#line 3476 
  rxq->write = tmp;
  
#line 3476 
  rxq->read = tmp;
  
#line 3477 
  rxq->free_count = 0U;
  
#line 3478 
  ldv_spin_unlock_irqrestore_124(& rxq->lock,flags);
  
#line 3479 
  return;
}


#line 3482  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int fw_loaded = 0;

#line 3483  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct firmware const *raw = (struct firmware const *)0;

#line 3485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void free_firmware(void)
{
  
#line 3487 
  if (fw_loaded != 0) {
    
#line 3488 
    release_firmware(raw);
    
#line 3489 
    raw = (struct firmware const *)0;
    
#line 3490 
    fw_loaded = 0;
  }
  else ;
  
#line 3492 
  return;
}


#line 3497  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_load(struct ipw_priv *priv)
{
  int __retres;
  struct ipw_fw *fw;
  u8 *boot_img;
  u8 *ucode_img;
  u8 *fw_img;
  u32 tmp_16;
  
#line 3504 
  u8 *name = (u8 *)0U;
  
#line 3505 
  int rc = 0;
  
#line 3505 
  int retries = 3;
  
#line 3507 
  switch ((priv->ieee)->iw_mode) {
    case 1: 
#line 3508 
    ;
    
#line 3509 
    name = (u8 *)"ipw2200-ibss.fw";
    
#line 3510 
    goto ldv_54971;
    case 6: 
#line 3512 
    ;
    
#line 3513 
    name = (u8 *)"ipw2200-sniffer.fw";
    
#line 3514 
    goto ldv_54971;
    case 2: 
#line 3516 
    ;
    
#line 3517 
    name = (u8 *)"ipw2200-bss.fw";
    
#line 3518 
    goto ldv_54971;
  }
  ldv_54971: 
#line 3521 
  ;
  
#line 3521 
  if (name == (u8 *)0U) {
    
#line 3522 
    rc = -22;
    
#line 3523 
    goto error;
  }
  else ;
  
#line 3527 
  if (fw_loaded == 0) {
    
#line 3529 
    rc = ipw_get_fw(priv,& raw,(char const *)name);
    
#line 3530 
    if (rc < 0) 
#line 3531 
                goto error; else ;
  }
  else ;
  
#line 3536 
  fw = (struct ipw_fw *)raw->data;
  
#line 3537 
  boot_img = & fw->data[0];
  
#line 3538 
  ucode_img = & fw->data[fw->boot_size];
  
#line 3539 
  fw_img = & fw->data[fw->boot_size + fw->ucode_size];
  
#line 3542 
  if (rc < 0) 
#line 3543 
              goto error; else ;
  
#line 3545 
  if (priv->rxq == (struct ipw_rx_queue *)0) 
#line 3546 
                                             priv->rxq = ipw_rx_queue_alloc(priv); else 
                                                                    
#line 3548 
                                                                    ipw_rx_queue_reset(priv,priv->rxq);
  
#line 3549 
  if (priv->rxq == (struct ipw_rx_queue *)0) {
    
#line 3550 
    printk("\001");
    
#line 3551 
    rc = -12;
    
#line 3552 
    goto error;
  }
  else ;
  retry: 
#line 3555 
  ;
  
#line 3557 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 3557 
    tmp = preempt_count();
    
#line 3557 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 3557 
                                                 tmp_0 = 73; else 
#line 3557 
                                                                  tmp_0 = 85;
    
#line 3557 
    printk("\001",tmp_0,"ipw_load",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",3557,12U,986580941U);
  }
  else ;
  
#line 3557 
  _ipw_write32(priv,12UL,986580941U);
  
#line 3558 
  priv->status &= 4294967293U;
  
#line 3561 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 3561 
    tmp_1 = preempt_count();
    
#line 3561 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 3561 
                                                   tmp_2 = 73; else 
#line 3561 
                                                                    tmp_2 = 85;
    
#line 3561 
    printk("\001",tmp_2,"ipw_load",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",3561,8U,3308386354U);
  }
  else ;
  
#line 3561 
  _ipw_write32(priv,8UL,3308386354U);
  
#line 3563 
  ipw_stop_nic(priv);
  
#line 3565 
  rc = ipw_reset_nic(priv);
  
#line 3566 
  if (rc < 0) {
    
#line 3567 
    printk("\001");
    
#line 3568 
    goto error;
  }
  else ;
  
#line 3571 
  ipw_zero_memory(priv,0U,196608U);
  
#line 3575 
  rc = ipw_load_firmware(priv,boot_img,(unsigned long)fw->boot_size);
  
#line 3576 
  if (rc < 0) {
    
#line 3577 
    printk("\001",rc);
    
#line 3578 
    goto error;
  }
  else ;
  
#line 3582 
  ipw_start_nic(priv);
  
#line 3585 
  rc = ipw_poll_bit(priv,8U,16777216U,500);
  
#line 3587 
  if (rc < 0) {
    
#line 3588 
    printk("\001");
    
#line 3589 
    goto error;
  }
  else ;
  
#line 3591 
  if ((ipw_debug_level & 4U) != 0U) {
    int tmp_4;
    int tmp_3;
    
#line 3591 
    ;
    
#line 3591 
    tmp_3 = preempt_count();
    
#line 3591 
    if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 3591 
                                                   tmp_4 = 73; else 
#line 3591 
                                                                    tmp_4 = 85;
    
#line 3591 
    printk("\001",tmp_4,"ipw_load",rc);
  }
  else ;
  
#line 3594 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_6;
    int tmp_5;
    
#line 3594 
    tmp_5 = preempt_count();
    
#line 3594 
    if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 3594 
                                                   tmp_6 = 73; else 
#line 3594 
                                                                    tmp_6 = 85;
    
#line 3594 
    printk("\001",tmp_6,"ipw_load",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",3594,8U,16777216U);
  }
  else ;
  
#line 3594 
  _ipw_write32(priv,8UL,16777216U);
  
#line 3597 
  rc = ipw_load_ucode(priv,ucode_img,(unsigned long)fw->ucode_size);
  
#line 3598 
  if (rc < 0) {
    
#line 3599 
    printk("\001",rc);
    
#line 3600 
    goto error;
  }
  else ;
  
#line 3604 
  ipw_stop_nic(priv);
  
#line 3607 
  rc = ipw_load_firmware(priv,fw_img,(unsigned long)fw->fw_size);
  
#line 3608 
  if (rc < 0) {
    
#line 3609 
    printk("\001",rc);
    
#line 3610 
    goto error;
  }
  else ;
  
#line 3613 
  fw_loaded = 1;
  
#line 3616 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_8;
    int tmp_7;
    
#line 3616 
    tmp_7 = preempt_count();
    
#line 3616 
    if (((unsigned long)tmp_7 & 2096896UL) != 0UL) 
#line 3616 
                                                   tmp_8 = 73; else 
#line 3616 
                                                                    tmp_8 = 85;
    
#line 3616 
    printk("\001",tmp_8,"ipw_load",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",3616,2588U,0U);
  }
  else ;
  
#line 3616 
  _ipw_write32(priv,2588UL,0U);
  
#line 3618 
  rc = ipw_queue_reset(priv);
  
#line 3619 
  if (rc < 0) {
    
#line 3620 
    printk("\001");
    
#line 3621 
    goto error;
  }
  else ;
  
#line 3625 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_10;
    int tmp_9;
    
#line 3625 
    tmp_9 = preempt_count();
    
#line 3625 
    if (((unsigned long)tmp_9 & 2096896UL) != 0UL) 
#line 3625 
                                                   tmp_10 = 73; else 
                                                                  
#line 3625 
                                                                  tmp_10 = 85;
    
#line 3625 
    printk("\001",tmp_10,"ipw_load",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",3625,12U,986580941U);
  }
  else ;
  
#line 3625 
  _ipw_write32(priv,12UL,986580941U);
  
#line 3627 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_12;
    int tmp_11;
    
#line 3627 
    tmp_11 = preempt_count();
    
#line 3627 
    if (((unsigned long)tmp_11 & 2096896UL) != 0UL) 
#line 3627 
                                                    tmp_12 = 73; else 
                                                                   
#line 3627 
                                                                   tmp_12 = 85;
    
#line 3627 
    printk("\001",tmp_12,"ipw_load",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",3627,8U,3308386354U);
  }
  else ;
  
#line 3627 
  _ipw_write32(priv,8UL,3308386354U);
  
#line 3630 
  ipw_start_nic(priv);
  
#line 3632 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_14;
    int tmp_13;
    
#line 3632 
    tmp_13 = preempt_count();
    
#line 3632 
    if (((unsigned long)tmp_13 & 2096896UL) != 0UL) 
#line 3632 
                                                    tmp_14 = 73; else 
                                                                   
#line 3632 
                                                                   tmp_14 = 85;
    
#line 3632 
    printk("\001",tmp_14,"ipw_load",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",3632,8U);
  }
  else ;
  
#line 3632 
  tmp_16 = _ipw_read32(priv,8UL);
  
#line 3632 
  if (tmp_16 < (u32)0) {
    
#line 3633 
    if (retries > 0) {
      
#line 3634 
      printk("\001");
      
#line 3635 
      retries -= 1;
      
#line 3636 
      goto retry;
    }
    else ;
    
#line 3639 
    printk("\001");
    
#line 3640 
    rc = -5;
    
#line 3641 
    goto error;
  }
  else ;
  
#line 3645 
  rc = ipw_poll_bit(priv,8U,16777216U,500);
  
#line 3647 
  if (rc < 0) {
    
#line 3648 
    printk("\001");
    
#line 3649 
    goto error;
  }
  else ;
  
#line 3651 
  if ((ipw_debug_level & 4U) != 0U) {
    int tmp_18;
    int tmp_17;
    
#line 3651 
    ;
    
#line 3651 
    tmp_17 = preempt_count();
    
#line 3651 
    if (((unsigned long)tmp_17 & 2096896UL) != 0UL) 
#line 3651 
                                                    tmp_18 = 73; else 
                                                                   
#line 3651 
                                                                   tmp_18 = 85;
    
#line 3651 
    printk("\001",tmp_18,"ipw_load",rc);
  }
  else ;
  
#line 3654 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_20;
    int tmp_19;
    
#line 3654 
    tmp_19 = preempt_count();
    
#line 3654 
    if (((unsigned long)tmp_19 & 2096896UL) != 0UL) 
#line 3654 
                                                    tmp_20 = 73; else 
                                                                   
#line 3654 
                                                                   tmp_20 = 85;
    
#line 3654 
    printk("\001",tmp_20,"ipw_load",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",3654,8U,16777216U);
  }
  else ;
  
#line 3654 
  _ipw_write32(priv,8UL,16777216U);
  
#line 3657 
  priv->eeprom_delay = 1;
  
#line 3658 
  ipw_read_eeprom(priv);
  
#line 3660 
  ipw_eeprom_init_sram(priv);
  
#line 3663 
  ipw_enable_interrupts(priv);
  
#line 3666 
  ipw_rx_queue_replenish((void *)priv);
  
#line 3668 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_22;
    int tmp_21;
    
#line 3668 
    ;
    
#line 3668 
    tmp_21 = preempt_count();
    
#line 3668 
    if (((unsigned long)tmp_21 & 2096896UL) != 0UL) 
#line 3668 
                                                    tmp_22 = 73; else 
                                                                   
#line 3668 
                                                                   tmp_22 = 85;
    
#line 3668 
    printk("\001",tmp_22,"ipw_load",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",3668,672U,(priv->rxq)->read);
  }
  else ;
  
#line 3668 
  _ipw_write32(priv,672UL,(priv->rxq)->read);
  
#line 3671 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_24;
    int tmp_23;
    
#line 3671 
    tmp_23 = preempt_count();
    
#line 3671 
    if (((unsigned long)tmp_23 & 2096896UL) != 0UL) 
#line 3671 
                                                    tmp_24 = 73; else 
                                                                   
#line 3671 
                                                                   tmp_24 = 85;
    
#line 3671 
    printk("\001",tmp_24,"ipw_load",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",3671,8U,3308386354U);
  }
  else ;
  
#line 3671 
  _ipw_write32(priv,8UL,3308386354U);
  
#line 3676 
  __retres = 0;
  
#line 3676 
  goto return_label;
  error: 
#line 3678 
  ;
  
#line 3679 
  if (priv->rxq != (struct ipw_rx_queue *)0) {
    
#line 3680 
    ipw_rx_queue_free(priv,priv->rxq);
    
#line 3681 
    priv->rxq = (struct ipw_rx_queue *)0;
  }
  else ;
  
#line 3683 
  ipw_tx_queue_free(priv);
  
#line 3684 
  release_firmware(raw);
  
#line 3686 
  fw_loaded = 0;
  
#line 3687 
  raw = (struct firmware const *)0;
  
#line 3690 
  __retres = rc;
  return_label: 
#line 3690 
                return __retres;
}


#line 3723  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_rx_queue_space(struct ipw_rx_queue const *q)
{
  
#line 3725 
  int s = (int)(q->read - q->write);
  
#line 3726 
  if (s <= 0) 
#line 3727 
              s += 32; else ;
  
#line 3729 
  s += -2;
  
#line 3730 
  if (s < 0) 
#line 3731 
             s = 0; else ;
  
#line 3732 
  return s;
}


#line 3735  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
__inline static int ipw_tx_queue_space(struct clx2_queue const *q)
{
  
#line 3737 
  int s = q->last_used - q->first_empty;
  
#line 3738 
  if (s <= 0) 
#line 3739 
              s = q->n_bd + s; else ;
  
#line 3740 
  s += -2;
  
#line 3741 
  if (s < 0) 
#line 3742 
             s = 0; else ;
  
#line 3743 
  return s;
}


#line 3746  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
__inline static int ipw_queue_inc_wrap(int index, int n_bd)
{
  int tmp;
  
#line 3748 
  index += 1;
  
#line 3748 
  ;
  
#line 3748 
  if (index != n_bd) 
#line 3748 
                     tmp = index; else 
#line 3748 
                                       tmp = 0;
  
#line 3748 
  return tmp;
}


#line 3765  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_queue_init(struct ipw_priv *priv, struct clx2_queue *q, int count, u32 read, u32 write, u32 base, u32 size)
{
  int tmp;
  
#line 3768 
  q->n_bd = count;
  
#line 3770 
  q->low_mark = q->n_bd / 4;
  
#line 3771 
  if (q->low_mark <= 3) 
#line 3772 
                        q->low_mark = 4; else ;
  
#line 3774 
  q->high_mark = q->n_bd / 8;
  
#line 3775 
  if (q->high_mark <= 1) 
#line 3776 
                         q->high_mark = 2; else ;
  
#line 3778 
  tmp = 0;
  
#line 3778 
  q->last_used = tmp;
  
#line 3778 
  q->first_empty = tmp;
  
#line 3779 
  q->reg_r = read;
  
#line 3780 
  q->reg_w = write;
  
#line 3782 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 3782 
    ;
    
#line 3782 
    ;
    
#line 3782 
    tmp_0 = preempt_count();
    
#line 3782 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 3782 
                                                   tmp_1 = 73; else 
#line 3782 
                                                                    tmp_1 = 85;
    
#line 3782 
    printk("\001",tmp_1,"ipw_queue_init",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",3782,base,(unsigned int)q->dma_addr);
  }
  else ;
  
#line 3782 
  _ipw_write32(priv,(unsigned long)base,(unsigned int)q->dma_addr);
  
#line 3783 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_3;
    int tmp_2;
    
#line 3783 
    ;
    
#line 3783 
    ;
    
#line 3783 
    tmp_2 = preempt_count();
    
#line 3783 
    if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 3783 
                                                   tmp_3 = 73; else 
#line 3783 
                                                                    tmp_3 = 85;
    
#line 3783 
    printk("\001",tmp_3,"ipw_queue_init",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",3783,size,(unsigned int)count);
  }
  else ;
  
#line 3783 
  _ipw_write32(priv,(unsigned long)size,(unsigned int)count);
  
#line 3784 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_5;
    int tmp_4;
    
#line 3784 
    ;
    
#line 3784 
    tmp_4 = preempt_count();
    
#line 3784 
    if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
#line 3784 
                                                   tmp_5 = 73; else 
#line 3784 
                                                                    tmp_5 = 85;
    
#line 3784 
    printk("\001",tmp_5,"ipw_queue_init",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",3784,read,0U);
  }
  else ;
  
#line 3784 
  _ipw_write32(priv,(unsigned long)read,0U);
  
#line 3785 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_7;
    int tmp_6;
    
#line 3785 
    ;
    
#line 3785 
    tmp_6 = preempt_count();
    
#line 3785 
    if (((unsigned long)tmp_6 & 2096896UL) != 0UL) 
#line 3785 
                                                   tmp_7 = 73; else 
#line 3785 
                                                                    tmp_7 = 85;
    
#line 3785 
    printk("\001",tmp_7,"ipw_queue_init",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",3785,write,0U);
  }
  else ;
  
#line 3785 
  _ipw_write32(priv,(unsigned long)write,0U);
  
#line 3787 
  _ipw_read32(priv,144UL);
  
#line 3788 
  return;
}


#line 3790  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_queue_tx_init(struct ipw_priv *priv, struct clx2_tx_queue *q, int count, u32 read, u32 write, u32 base, u32 size)
{
  int __retres;
  
#line 3794 
  struct pci_dev *dev = priv->pci_dev;
  
#line 3796 
  q->txb = (struct libipw_txb **)kmalloc((unsigned long)count * 8UL,208U);
  
#line 3797 
  if (q->txb == (struct libipw_txb **)0) {
    
#line 3798 
    printk("\001");
    
#line 3799 
    __retres = -12;
    
#line 3799 
    goto return_label;
  }
  else ;
  
#line 3803 
  q->bd = (struct tfd_frame *)pci_alloc_consistent(dev,(unsigned long)count * 128UL,& q->q.dma_addr);
  
#line 3804 
  if (q->bd == (struct tfd_frame *)0) {
    
#line 3805 
    printk("\001",(unsigned long)count * 128UL);
    
#line 3807 
    kfree((void const *)q->txb);
    
#line 3808 
    q->txb = (struct libipw_txb **)0;
    
#line 3809 
    __retres = -12;
    
#line 3809 
    goto return_label;
  }
  else ;
  
#line 3812 
  ipw_queue_init(priv,& q->q,count,read,write,base,size);
  
#line 3813 
  __retres = 0;
  return_label: 
#line 3813 
                return __retres;
}


#line 3823  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_queue_tx_free_tfd(struct ipw_priv *priv, struct clx2_tx_queue *txq)
{
  int i;
  
#line 3826 
  struct tfd_frame *bd = txq->bd + txq->q.last_used;
  
#line 3827 
  struct pci_dev *dev = priv->pci_dev;
  
#line 3831 
  if ((unsigned int)bd->control_flags.message_type == 1U) 
#line 3833 
                                                          goto return_label; else ;
  
#line 3836 
  if (bd->u.data.num_chunks > 6U) {
    
#line 3837 
    printk("\001",bd->u.data.num_chunks);
    
#line 3840 
    goto return_label;
  }
  else ;
  
#line 3844 
  i = 0;
  
#line 3844 
  goto ldv_55018;
  ldv_55017: 
#line 3845 
  ;
  
#line 3845 
  pci_unmap_single(dev,(unsigned long long)bd->u.data.chunk_ptr[i],(unsigned long)bd->u.data.chunk_len[i],1);
  
#line 3848 
  if (*(txq->txb + txq->q.last_used) != (struct libipw_txb *)0) {
    
#line 3849 
    libipw_txb_free(*(txq->txb + txq->q.last_used));
    
#line 3850 
    *(txq->txb + txq->q.last_used) = (struct libipw_txb *)0;
  }
  else ;
  
#line 3844 
  i += 1;
  ldv_55018: 
#line 3845 
  ;
  
#line 3844 
  if (bd->u.data.num_chunks > (unsigned int)i) 
#line 3846 
                                               goto ldv_55017; else 
#line 3849 
                                                                    goto ldv_55019;
  ldv_55019: 
#line 3850 
  ;
  return_label: 
#line 3851 
                return;
}


#line 3864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_queue_tx_free(struct ipw_priv *priv, struct clx2_tx_queue *txq)
{
  
#line 3866 
  struct clx2_queue *q = & txq->q;
  
#line 3867 
  struct pci_dev *dev = priv->pci_dev;
  
#line 3869 
  if (q->n_bd == 0) 
#line 3870 
                    goto return_label; else ;
  
#line 3873 
  goto ldv_55027;
  ldv_55026: 
#line 3874 
  ;
  
#line 3875 
  ipw_queue_tx_free_tfd(priv,txq);
  
#line 3874 
  q->last_used = ipw_queue_inc_wrap(q->last_used,q->n_bd);
  ldv_55027: 
#line 3875 
  ;
  
#line 3873 
  if (q->first_empty != q->last_used) 
#line 3875 
                                      goto ldv_55026; else 
#line 3878 
                                                           goto ldv_55028;
  ldv_55028: 
#line 3879 
  ;
  
#line 3879 
  pci_free_consistent(dev,(unsigned long)q->n_bd * 128UL,(void *)txq->bd,q->dma_addr);
  
#line 3881 
  kfree((void const *)txq->txb);
  
#line 3884 
  memset((void *)txq,0,56UL);
  return_label: 
#line 3885 
                return;
}


#line 3892  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_tx_queue_free(struct ipw_priv *priv)
{
  
#line 3895 
  ipw_queue_tx_free(priv,& priv->txq_cmd);
  
#line 3898 
  ipw_queue_tx_free(priv,& priv->txq[0]);
  
#line 3899 
  ipw_queue_tx_free(priv,& priv->txq[1]);
  
#line 3900 
  ipw_queue_tx_free(priv,& priv->txq[2]);
  
#line 3901 
  ipw_queue_tx_free(priv,& priv->txq[3]);
  
#line 3902 
  return;
}


#line 3904  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_create_bssid(struct ipw_priv *priv, u8 *bssid)
{
  
#line 3907 
  *bssid = priv->mac_addr[0];
  
#line 3908 
  *(bssid + 1U) = priv->mac_addr[1];
  
#line 3909 
  *(bssid + 2U) = priv->mac_addr[2];
  
#line 3912 
  get_random_bytes((void *)(bssid + 3U),3);
  
#line 3914 
  *bssid = (unsigned char)((unsigned int)*bssid & 254U);
  
#line 3915 
  *bssid = (unsigned char)((unsigned int)*bssid | 2U);
  
#line 3916 
  return;
}


#line 3918  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static u8 ipw_add_station(struct ipw_priv *priv, u8 *bssid)
{
  u8 __retres;
  struct ipw_station_entry entry;
  int i;
  bool tmp;
  
#line 3923 
  i = 0;
  
#line 3923 
  goto ldv_55043;
  ldv_55042: 
#line 3924 
  ;
  
#line 3924 
  tmp = ether_addr_equal((u8 const *)(& priv->stations[i]),(u8 const *)bssid);
  
#line 3924 
  if ((int)tmp != 0) {
    
#line 3926 
    priv->missed_adhoc_beacons = 0U;
    
#line 3927 
    if ((priv->config & 1U) == 0U) 
#line 3929 
                                   priv->config &= 4294967263U; else ;
    
#line 3931 
    __retres = (unsigned char)i;
    
#line 3931 
    goto return_label;
  }
  else ;
  
#line 3923 
  i += 1;
  ldv_55043: 
#line 3924 
  ;
  
#line 3923 
  if ((int)priv->num_stations > i) 
#line 3925 
                                   goto ldv_55042; else 
#line 3928 
                                                        goto ldv_55044;
  ldv_55044: 
#line 3929 
  ;
  
#line 3935 
  if (i == 32) {
    
#line 3936 
    __retres = (unsigned char)255U;
    
#line 3936 
    goto return_label;
  }
  else ;
  
#line 3938 
  if ((ipw_debug_level & 2048U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 3938 
    ;
    
#line 3938 
    tmp_0 = preempt_count();
    
#line 3938 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 3938 
                                                   tmp_1 = 73; else 
#line 3938 
                                                                    tmp_1 = 85;
    
#line 3938 
    printk("\001",tmp_1,"ipw_add_station",bssid);
  }
  else ;
  
#line 3940 
  entry.reserved = (unsigned char)0U;
  
#line 3941 
  entry.support_mode = (unsigned char)0U;
  
#line 3942 
  memcpy((void *)(& entry.mac_addr),(void const *)bssid,6UL);
  
#line 3943 
  memcpy((void *)(& priv->stations[i]),(void const *)bssid,6UL);
  
#line 3944 
  ipw_write_direct(priv,(unsigned int)((unsigned long)i) * 8U + 3084U,(void *)(& entry),8);
  
#line 3946 
  priv->num_stations = (u8)((int)priv->num_stations + 1);
  
#line 3948 
  __retres = (unsigned char)i;
  return_label: 
#line 3948 
                return __retres;
}


#line 3951  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static u8 ipw_find_station(struct ipw_priv *priv, u8 *bssid)
{
  u8 __retres;
  int i;
  bool tmp;
  
#line 3955 
  i = 0;
  
#line 3955 
  goto ldv_55052;
  ldv_55051: 
#line 3956 
  ;
  
#line 3956 
  tmp = ether_addr_equal((u8 const *)(& priv->stations[i]),(u8 const *)bssid);
  
#line 3956 
  if ((int)tmp != 0) {
    
#line 3957 
    __retres = (unsigned char)i;
    
#line 3957 
    goto return_label;
  }
  else ;
  
#line 3955 
  i += 1;
  ldv_55052: 
#line 3956 
  ;
  
#line 3955 
  if ((int)priv->num_stations > i) 
#line 3957 
                                   goto ldv_55051; else 
#line 3960 
                                                        goto ldv_55053;
  ldv_55053: 
#line 3961 
  ;
  
#line 3959 
  __retres = (unsigned char)255U;
  return_label: 
#line 3959 
                return __retres;
}


#line 3962  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_send_disassociate(struct ipw_priv *priv, int quiet)
{
  int err;
  
#line 3966 
  if ((priv->status & 256U) != 0U) {
    
#line 3967 
    if ((ipw_debug_level & 4100U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 3967 
      tmp = preempt_count();
      
#line 3967 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 3967 
                                                   tmp_0 = 73; else 
#line 3967 
                                                                    tmp_0 = 85;
      
#line 3967 
      printk("\001",tmp_0,"ipw_send_disassociate");
    }
    else ;
    
#line 3968 
    ldv_schedule_work_125(& priv->disassociate);
    
#line 3969 
    goto return_label;
  }
  else ;
  
#line 3972 
  if ((priv->status & 128U) == 0U) {
    
#line 3973 
    if ((ipw_debug_level & 4100U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 3973 
      tmp_1 = preempt_count();
      
#line 3973 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 3973 
                                                     tmp_2 = 73; else 
                                                                   
#line 3973 
                                                                   tmp_2 = 85;
      
#line 3973 
      printk("\001",tmp_2,"ipw_send_disassociate");
    }
    else ;
    
#line 3974 
    goto return_label;
  }
  else ;
  
#line 3977 
  if ((ipw_debug_level & 4100U) != 0U) {
    int tmp_4;
    int tmp_3;
    
#line 3977 
    ;
    
#line 3977 
    ;
    
#line 3977 
    tmp_3 = preempt_count();
    
#line 3977 
    if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 3977 
                                                   tmp_4 = 73; else 
#line 3977 
                                                                    tmp_4 = 85;
    
#line 3977 
    printk("\001",tmp_4,"ipw_send_disassociate",(u8 *)(& priv->assoc_request.bssid),(int)priv->assoc_request.channel);
  }
  else ;
  
#line 3982 
  priv->status &= 4294966911U;
  
#line 3983 
  priv->status |= 512U;
  
#line 3985 
  if (quiet != 0) 
#line 3986 
                  priv->assoc_request.assoc_type = (unsigned char)5U; else 
                                                                    
#line 3988 
                                                                    priv->assoc_request.assoc_type = (unsigned char)2U;
  
#line 3990 
  err = ipw_send_associate(priv,& priv->assoc_request);
  
#line 3991 
  if (err != 0) {
    
#line 3992 
    if ((ipw_debug_level & 32U) != 0U) {
      int tmp_6;
      int tmp_5;
      
#line 3992 
      tmp_5 = preempt_count();
      
#line 3992 
      if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 3992 
                                                     tmp_6 = 73; else 
                                                                   
#line 3992 
                                                                   tmp_6 = 85;
      
#line 3992 
      printk("\001",tmp_6,"ipw_send_disassociate");
    }
    else ;
    
#line 3994 
    goto return_label;
  }
  else ;
  return_label: 
#line 3996 
                return;
}


#line 3999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_disassociate(void *data)
{
  int __retres;
  
#line 4001 
  struct ipw_priv *priv = (struct ipw_priv *)data;
  
#line 4002 
  if ((priv->status & 384U) == 0U) {
    
#line 4003 
    __retres = 0;
    
#line 4003 
    goto return_label;
  }
  else ;
  
#line 4004 
  ipw_send_disassociate((struct ipw_priv *)data,0);
  
#line 4005 
  netif_carrier_off(priv->net_dev);
  
#line 4006 
  __retres = 1;
  return_label: 
#line 4006 
                return __retres;
}


#line 4009  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_bg_disassociate(struct work_struct *work)
{
  struct ipw_priv *tmp;
  {
    
#line 4012 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 4012 
    tmp = (struct ipw_priv *)__mptr + 18446744073709547488U;
  }
  
#line 4011 
  struct ipw_priv *priv = tmp;
  
#line 4013 
  ldv_mutex_lock_126(& priv->mutex);
  
#line 4014 
  ipw_disassociate((void *)priv);
  
#line 4015 
  ldv_mutex_unlock_127(& priv->mutex);
  
#line 4016 
  return;
}


#line 4018  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_system_config(struct work_struct *work)
{
  struct ipw_priv *tmp;
  {
    
#line 4021 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 4021 
    tmp = (struct ipw_priv *)__mptr + 18446744073709547408U;
  }
  
#line 4020 
  struct ipw_priv *priv = tmp;
  
#line 4024 
  if (priv->prom_net_dev != (struct net_device *)0) {
    bool tmp_0;
    
#line 4024 
    tmp_0 = netif_running((struct net_device const *)priv->prom_net_dev);
    
#line 4024 
    if ((int)tmp_0 != 0) {
      
#line 4025 
      priv->sys_config.accept_all_data_frames = (unsigned char)1U;
      
#line 4026 
      priv->sys_config.accept_non_directed_frames = (unsigned char)1U;
      
#line 4027 
      priv->sys_config.accept_all_mgmt_bcpr = (unsigned char)1U;
      
#line 4028 
      priv->sys_config.accept_all_mgmt_frames = (unsigned char)1U;
    }
    else ;
  }
  else ;
  
#line 4032 
  ipw_send_system_config(priv);
  
#line 4033 
  return;
}


#line 4040  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct ipw_status_code const ipw_status_codes[23U] = {{.status = (unsigned short)0U, .reason = "Successful"}, {.status = (unsigned short)1U, .reason = "Unspecified failure"}, {.status = (unsigned short)10U, .reason = "Cannot support all requested capabilities in the "}, {.status = (unsigned short)11U, .reason = "Reassociation denied due to inability to confirm that "}, {.status = (unsigned short)12U, .reason = "Association denied due to reason outside the scope of this "}, {.status = (unsigned short)13U, .reason = "Responding station does not support the specified authentication "}, {.status = (unsigned short)14U, .reason = "Received an Authentication frame with authentication sequence "}, {.status = (unsigned short)15U, .reason = "Authentication rejected because of challenge failure"}, {.status = (unsigned short)16U, .reason = "Authentication rejected due to timeout waiting for next "}, {.status = (unsigned short)17U, .reason = "Association denied because AP is unable to handle additional "}, {.status = (unsigned short)18U, .reason = "Association denied due to requesting station not supporting all "}, {.status = (unsigned short)19U, .reason = "Association denied due to requesting station not supporting "}, {.status = (unsigned short)20U, .reason = "Association denied due to requesting station not supporting "}, {.status = (unsigned short)21U, .reason = "Association denied due to requesting station not supporting "}, {.status = (unsigned short)25U, .reason = "Association denied due to requesting station not supporting "}, {.status = (unsigned short)26U, .reason = "Association denied due to requesting station not supporting "}, {.status = (unsigned short)40U, .reason = "Invalid Information Element"}, {.status = (unsigned short)41U, .reason = "Group Cipher is not valid"}, {.status = (unsigned short)42U, .reason = "Pairwise Cipher is not valid"}, {.status = (unsigned short)43U, .reason = "AKMP is not valid"}, {.status = (unsigned short)44U, .reason = "Unsupported RSN IE version"}, {.status = (unsigned short)45U, .reason = "Invalid RSN IE Capabilities"}, {.status = (unsigned short)46U, .reason = "Cipher suite is rejected per security policy"}};

#line 4087  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static char const *ipw_get_status_code(u16 status)
{
  char const *__retres;
  int i;
  
#line 4090 
  i = 0;
  
#line 4090 
  goto ldv_55088;
  ldv_55087: 
#line 4091 
  ;
  
#line 4091 
  if ((int)ipw_status_codes[i].status == ((int)status & 255)) {
    
#line 4092 
    __retres = ipw_status_codes[i].reason;
    
#line 4092 
    goto return_label;
  }
  else ;
  
#line 4090 
  i += 1;
  ldv_55088: 
#line 4091 
  ;
  
#line 4090 
  if ((unsigned int)i <= 22U) 
#line 4092 
                              goto ldv_55087; else 
#line 4095 
                                                   goto ldv_55089;
  ldv_55089: 
#line 4096 
  ;
  
#line 4093 
  __retres = "Unknown status value.";
  return_label: 
#line 4093 
                return __retres;
}


#line 4096  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
__inline static void average_init(struct average *avg)
{
  
#line 4098 
  memset((void *)avg,0,24UL);
  
#line 4099 
  return;
}


#line 4103  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static s16 exponential_average(s16 prev_avg, s16 val, u8 depth)
{
  s16 __retres;
  
#line 4105 
  __retres = (short)((((int)depth + -1) * (int)prev_avg + (int)val) / (int)depth);
  
#line 4105 
  return __retres;
}


#line 4108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void average_add(struct average *avg, s16 val)
{
  u8 tmp;
  
#line 4110 
  avg->sum -= (int)avg->entries[(int)avg->pos];
  
#line 4111 
  avg->sum += (int)val;
  
#line 4112 
  tmp = avg->pos;
  
#line 4112 
  avg->pos = (u8)((int)avg->pos + 1);
  
#line 4112 
  avg->entries[(int)tmp] = val;
  
#line 4113 
  if ((long)((unsigned int)avg->pos == 8U) != 0L) {
    
#line 4114 
    avg->init = (unsigned char)1U;
    
#line 4115 
    avg->pos = (unsigned char)0U;
  }
  else ;
  
#line 4117 
  return;
}


#line 4119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static s16 average_value(struct average *avg)
{
  s16 __retres;
  
#line 4121 
  if ((long)((unsigned int)avg->init != 0U) == 0L) {
    
#line 4122 
    if ((unsigned int)avg->pos != 0U) {
      
#line 4123 
      __retres = (short)(avg->sum / (int)avg->pos);
      
#line 4123 
      goto return_label;
    }
    else ;
    
#line 4124 
    __retres = (short)0;
    
#line 4124 
    goto return_label;
  }
  else ;
  
#line 4127 
  __retres = (short)(avg->sum / 8);
  return_label: 
#line 4127 
                return __retres;
}


#line 4130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_reset_stats(struct ipw_priv *priv)
{
  
#line 4132 
  u32 len = 4U;
  
#line 4134 
  priv->quality = 0U;
  
#line 4136 
  average_init(& priv->average_missed_beacons);
  
#line 4137 
  priv->exp_avg_rssi = (short)(-60);
  
#line 4138 
  priv->exp_avg_noise = (short)171;
  
#line 4140 
  priv->last_rate = 0U;
  
#line 4141 
  priv->last_missed_beacons = 0U;
  
#line 4142 
  priv->last_rx_packets = 0U;
  
#line 4143 
  priv->last_tx_packets = 0U;
  
#line 4144 
  priv->last_tx_failures = 0U;
  
#line 4148 
  ipw_get_ordinal(priv,61498U,(void *)(& priv->last_rx_err),& len);
  
#line 4150 
  ipw_get_ordinal(priv,61497U,(void *)(& priv->last_tx_failures),& len);
  
#line 4154 
  priv->missed_adhoc_beacons = 0U;
  
#line 4155 
  priv->missed_beacons = 0U;
  
#line 4156 
  priv->tx_packets = 0U;
  
#line 4157 
  priv->rx_packets = 0U;
  
#line 4158 
  return;
}


#line 4161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static u32 ipw_get_max_rate(struct ipw_priv *priv)
{
  u32 __retres;
  
#line 4163 
  u32 i = 2147483648U;
  
#line 4164 
  u32 mask = (unsigned int)priv->rates_mask;
  
#line 4167 
  if ((unsigned int)priv->assoc_request.ieee_mode == 1U) 
#line 4168 
                                                         mask &= 15U; else ;
  
#line 4173 
  goto ldv_55115;
  ldv_55114: 
#line 4174 
  ;
  
#line 4174 
  i >>= 1;
  ldv_55115: 
#line 4175 
  ;
  
#line 4173 
  if (i != 0U && (mask & i) == 0U) 
#line 4175 
                                   goto ldv_55114; else 
#line 4178 
                                                        goto ldv_55116;
  ldv_55116: 
#line 4179 
  ;
  
#line 4175 
  switch (i) {
    case (u32)1: 
#line 4176 
    ;
    
#line 4177 
    __retres = 1000000U;
    
#line 4177 
    goto return_label;
    case (u32)2: 
#line 4178 
    ;
    
#line 4179 
    __retres = 2000000U;
    
#line 4179 
    goto return_label;
    case (u32)4: 
#line 4180 
    ;
    
#line 4181 
    __retres = 5500000U;
    
#line 4181 
    goto return_label;
    case (u32)16: 
#line 4182 
    ;
    
#line 4183 
    __retres = 6000000U;
    
#line 4183 
    goto return_label;
    case (u32)32: 
#line 4184 
    ;
    
#line 4185 
    __retres = 9000000U;
    
#line 4185 
    goto return_label;
    case (u32)8: 
#line 4186 
    ;
    
#line 4187 
    __retres = 11000000U;
    
#line 4187 
    goto return_label;
    case (u32)64: 
#line 4188 
    ;
    
#line 4189 
    __retres = 12000000U;
    
#line 4189 
    goto return_label;
    case (u32)128: 
#line 4190 
    ;
    
#line 4191 
    __retres = 18000000U;
    
#line 4191 
    goto return_label;
    case (u32)256: 
#line 4192 
    ;
    
#line 4193 
    __retres = 24000000U;
    
#line 4193 
    goto return_label;
    case (u32)512: 
#line 4194 
    ;
    
#line 4195 
    __retres = 36000000U;
    
#line 4195 
    goto return_label;
    case (u32)1024: 
#line 4196 
    ;
    
#line 4197 
    __retres = 48000000U;
    
#line 4197 
    goto return_label;
    case (u32)2048: 
#line 4198 
    ;
    
#line 4199 
    __retres = 54000000U;
    
#line 4199 
    goto return_label;
  }
  
#line 4202 
  if ((priv->ieee)->mode == 2) {
    
#line 4203 
    __retres = 11000000U;
    
#line 4203 
    goto return_label;
  }
  else {
    
#line 4205 
    __retres = 54000000U;
    
#line 4205 
    goto return_label;
  }
  return_label: 
#line 4202 
                return __retres;
}


#line 4208  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static u32 ipw_get_current_rate(struct ipw_priv *priv)
{
  u32 __retres;
  u32 rate;
  int err;
  
#line 4210 
  u32 len = 4U;
  
#line 4213 
  if ((priv->status & 128U) == 0U) {
    
#line 4214 
    __retres = 0U;
    
#line 4214 
    goto return_label;
  }
  else ;
  
#line 4216 
  if (priv->tx_packets > 300U) {
    
#line 4217 
    err = ipw_get_ordinal(priv,61441U,(void *)(& rate),& len);
    
#line 4219 
    if (err != 0) {
      
#line 4220 
      if ((ipw_debug_level & 4U) != 0U) {
        int tmp_0;
        int tmp;
        
#line 4220 
        tmp = preempt_count();
        
#line 4220 
        if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 4220 
                                                     tmp_0 = 73; else 
                                                                   
#line 4220 
                                                                   tmp_0 = 85;
        
#line 4220 
        printk("\001",tmp_0,"ipw_get_current_rate");
      }
      else ;
      
#line 4221 
      __retres = 0U;
      
#line 4221 
      goto return_label;
    }
    else ;
  }
  else {
    u32 tmp_1;
    
#line 4224 
    tmp_1 = ipw_get_max_rate(priv);
    
#line 4224 
    __retres = tmp_1;
    
#line 4224 
    goto return_label;
  }
  
#line 4226 
  switch (rate) {
    case (u32)10: 
#line 4227 
    ;
    
#line 4228 
    __retres = 1000000U;
    
#line 4228 
    goto return_label;
    case (u32)20: 
#line 4229 
    ;
    
#line 4230 
    __retres = 2000000U;
    
#line 4230 
    goto return_label;
    case (u32)55: 
#line 4231 
    ;
    
#line 4232 
    __retres = 5500000U;
    
#line 4232 
    goto return_label;
    case (u32)13: 
#line 4233 
    ;
    
#line 4234 
    __retres = 6000000U;
    
#line 4234 
    goto return_label;
    case (u32)15: 
#line 4235 
    ;
    
#line 4236 
    __retres = 9000000U;
    
#line 4236 
    goto return_label;
    case (u32)110: 
#line 4237 
    ;
    
#line 4238 
    __retres = 11000000U;
    
#line 4238 
    goto return_label;
    case (u32)5: 
#line 4239 
    ;
    
#line 4240 
    __retres = 12000000U;
    
#line 4240 
    goto return_label;
    case (u32)7: 
#line 4241 
    ;
    
#line 4242 
    __retres = 18000000U;
    
#line 4242 
    goto return_label;
    case (u32)9: 
#line 4243 
    ;
    
#line 4244 
    __retres = 24000000U;
    
#line 4244 
    goto return_label;
    case (u32)11: 
#line 4245 
    ;
    
#line 4246 
    __retres = 36000000U;
    
#line 4246 
    goto return_label;
    case (u32)1: 
#line 4247 
    ;
    
#line 4248 
    __retres = 48000000U;
    
#line 4248 
    goto return_label;
    case (u32)3: 
#line 4249 
    ;
    
#line 4250 
    __retres = 54000000U;
    
#line 4250 
    goto return_label;
  }
  
#line 4253 
  __retres = 0U;
  return_label: 
#line 4253 
                return __retres;
}


#line 4257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_gather_stats(struct ipw_priv *priv)
{
  u32 rx_err;
  u32 rx_err_delta;
  u32 rx_packets_delta;
  u32 tx_failures;
  u32 tx_failures_delta;
  u32 tx_packets_delta;
  u32 missed_beacons_percent;
  u32 missed_beacons_delta;
  s16 rssi;
  u32 beacon_quality;
  u32 signal_quality;
  u32 tx_quality;
  u32 rx_quality;
  u32 rate_quality;
  u32 max_rate;
  u32 tmp_10;
  u32 tmp_12;
  u32 tmp_14;
  u32 tmp_16;
  
#line 4262 
  u32 quality = 0U;
  
#line 4263 
  u32 len = 4U;
  
#line 4269 
  if ((priv->status & 128U) == 0U) {
    
#line 4270 
    priv->quality = 0U;
    
#line 4271 
    goto return_label;
  }
  else ;
  
#line 4275 
  ipw_get_ordinal(priv,61507U,(void *)(& priv->missed_beacons),& len);
  
#line 4277 
  missed_beacons_delta = priv->missed_beacons - priv->last_missed_beacons;
  
#line 4278 
  priv->last_missed_beacons = priv->missed_beacons;
  
#line 4279 
  if ((unsigned int)priv->assoc_request.beacon_interval != 0U) 
#line 4280 
                                                               missed_beacons_percent = (((unsigned int)priv->assoc_request.beacon_interval * missed_beacons_delta) * 250U) / 5000U; else 
                                                                    
#line 4284 
                                                                    missed_beacons_percent = 0U;
  
#line 4286 
  average_add(& priv->average_missed_beacons,(short)((int)((short)missed_beacons_percent)));
  
#line 4288 
  ipw_get_ordinal(priv,61498U,(void *)(& rx_err),& len);
  
#line 4289 
  rx_err_delta = rx_err - priv->last_rx_err;
  
#line 4290 
  priv->last_rx_err = rx_err;
  
#line 4292 
  ipw_get_ordinal(priv,61497U,(void *)(& tx_failures),& len);
  
#line 4293 
  tx_failures_delta = tx_failures - priv->last_tx_failures;
  
#line 4294 
  priv->last_tx_failures = tx_failures;
  
#line 4296 
  rx_packets_delta = priv->rx_packets - priv->last_rx_packets;
  
#line 4297 
  priv->last_rx_packets = priv->rx_packets;
  
#line 4299 
  tx_packets_delta = priv->tx_packets - priv->last_tx_packets;
  
#line 4300 
  priv->last_tx_packets = priv->tx_packets;
  
#line 4314 
  beacon_quality = 100U - missed_beacons_percent;
  
#line 4315 
  if (beacon_quality <= 4U) 
#line 4316 
                            beacon_quality = 0U; else 
#line 4318 
                                                      beacon_quality = (beacon_quality * 100U + 4294966796U) / 95U;
  
#line 4320 
  if ((ipw_debug_level & 536870912U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 4320 
    ;
    
#line 4320 
    ;
    
#line 4320 
    tmp = preempt_count();
    
#line 4320 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 4320 
                                                 tmp_0 = 73; else 
#line 4320 
                                                                  tmp_0 = 85;
    
#line 4320 
    printk("\001",tmp_0,"ipw_gather_stats",beacon_quality,missed_beacons_percent);
  }
  else ;
  
#line 4323 
  priv->last_rate = ipw_get_current_rate(priv);
  
#line 4324 
  max_rate = ipw_get_max_rate(priv);
  
#line 4325 
  rate_quality = (priv->last_rate * 40U) / max_rate + 60U;
  
#line 4326 
  if ((ipw_debug_level & 536870912U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 4326 
    ;
    
#line 4326 
    ;
    
#line 4326 
    tmp_1 = preempt_count();
    
#line 4326 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 4326 
                                                   tmp_2 = 73; else 
#line 4326 
                                                                    tmp_2 = 85;
    
#line 4326 
    printk("\001",tmp_2,"ipw_gather_stats",rate_quality,priv->last_rate / 1000000U);
  }
  else ;
  
#line 4329 
  if (rx_packets_delta > 100U && rx_packets_delta + rx_err_delta != 0U) 
    
#line 4330 
    rx_quality = 100U - (rx_err_delta * 100U) / (rx_packets_delta + rx_err_delta); else 
                                                                    
#line 4333 
                                                                    rx_quality = 100U;
  
#line 4334 
  if ((ipw_debug_level & 536870912U) != 0U) {
    int tmp_4;
    int tmp_3;
    
#line 4334 
    ;
    
#line 4334 
    ;
    
#line 4334 
    ;
    
#line 4334 
    tmp_3 = preempt_count();
    
#line 4334 
    if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 4334 
                                                   tmp_4 = 73; else 
#line 4334 
                                                                    tmp_4 = 85;
    
#line 4334 
    printk("\001",tmp_4,"ipw_gather_stats",rx_quality,rx_err_delta,rx_packets_delta);
  }
  else ;
  
#line 4337 
  if (tx_packets_delta > 100U && tx_packets_delta + tx_failures_delta != 0U) 
    
#line 4338 
    tx_quality = 100U - (tx_failures_delta * 100U) / (tx_packets_delta + tx_failures_delta); else 
                                                                    
#line 4341 
                                                                    tx_quality = 100U;
  
#line 4342 
  if ((ipw_debug_level & 536870912U) != 0U) {
    int tmp_6;
    int tmp_5;
    
#line 4342 
    ;
    
#line 4342 
    ;
    
#line 4342 
    ;
    
#line 4342 
    tmp_5 = preempt_count();
    
#line 4342 
    if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 4342 
                                                   tmp_6 = 73; else 
#line 4342 
                                                                    tmp_6 = 85;
    
#line 4342 
    printk("\001",tmp_6,"ipw_gather_stats",tx_quality,tx_failures_delta,tx_packets_delta);
  }
  else ;
  
#line 4345 
  rssi = priv->exp_avg_rssi;
  
#line 4346 
  signal_quality = (unsigned int)(((((priv->ieee)->perfect_rssi - (priv->ieee)->worst_rssi) * 100) * ((priv->ieee)->perfect_rssi - (priv->ieee)->worst_rssi) - ((priv->ieee)->perfect_rssi - (int)rssi) * (((priv->ieee)->perfect_rssi - (priv->ieee)->worst_rssi) * 15 + ((priv->ieee)->perfect_rssi - (int)rssi) * 62)) / (((priv->ieee)->perfect_rssi - (priv->ieee)->worst_rssi) * ((priv->ieee)->perfect_rssi - (priv->ieee)->worst_rssi)));
  
#line 4355 
  if (signal_quality > 100U) 
#line 4356 
                             signal_quality = 100U;
  else 
    
#line 4357 
    if (signal_quality == 0U) 
#line 4358 
                              signal_quality = 0U; else ;
  
#line 4360 
  if ((ipw_debug_level & 536870912U) != 0U) {
    int tmp_8;
    int tmp_7;
    
#line 4360 
    ;
    
#line 4360 
    ;
    
#line 4360 
    tmp_7 = preempt_count();
    
#line 4360 
    if (((unsigned long)tmp_7 & 2096896UL) != 0UL) 
#line 4360 
                                                   tmp_8 = 73; else 
#line 4360 
                                                                    tmp_8 = 85;
    
#line 4360 
    printk("\001",tmp_8,"ipw_gather_stats",signal_quality,(int)rssi);
  }
  else ;
  {
    u32 tmp_9;
    
#line 4363 
    u32 _min1 = rx_quality;
    
#line 4363 
    u32 _min2 = signal_quality;
    
#line 4363 
    if (_min1 < _min2) 
#line 4363 
                       tmp_9 = _min1; else 
#line 4363 
                                           tmp_9 = _min2;
    
#line 4363 
    tmp_10 = tmp_9;
  }
  
#line 4363 
  quality = tmp_10;
  {
    u32 tmp_11;
    
#line 4364 
    u32 _min1_0 = tx_quality;
    
#line 4364 
    u32 _min2_0 = quality;
    
#line 4364 
    if (_min1_0 < _min2_0) 
#line 4364 
                           tmp_11 = _min1_0; else 
#line 4364 
                                                  tmp_11 = _min2_0;
    
#line 4364 
    tmp_12 = tmp_11;
  }
  
#line 4364 
  quality = tmp_12;
  {
    u32 tmp_13;
    
#line 4365 
    u32 _min1_1 = rate_quality;
    
#line 4365 
    u32 _min2_1 = quality;
    
#line 4365 
    if (_min1_1 < _min2_1) 
#line 4365 
                           tmp_13 = _min1_1; else 
#line 4365 
                                                  tmp_13 = _min2_1;
    
#line 4365 
    tmp_14 = tmp_13;
  }
  
#line 4365 
  quality = tmp_14;
  {
    u32 tmp_15;
    
#line 4366 
    u32 _min1_2 = beacon_quality;
    
#line 4366 
    u32 _min2_2 = quality;
    
#line 4366 
    if (_min1_2 < _min2_2) 
#line 4366 
                           tmp_15 = _min1_2; else 
#line 4366 
                                                  tmp_15 = _min2_2;
    
#line 4366 
    tmp_16 = tmp_15;
  }
  
#line 4366 
  quality = tmp_16;
  
#line 4367 
  if (quality == beacon_quality) {
    
#line 4368 
    if ((ipw_debug_level & 536870912U) != 0U) {
      int tmp_18;
      int tmp_17;
      
#line 4368 
      ;
      
#line 4368 
      tmp_17 = preempt_count();
      
#line 4368 
      if (((unsigned long)tmp_17 & 2096896UL) != 0UL) 
#line 4368 
                                                      tmp_18 = 73; else 
                                                                    
#line 4368 
                                                                    tmp_18 = 85;
      
#line 4368 
      printk("\001",tmp_18,"ipw_gather_stats",quality);
    }
    else ;
  }
  else ;
  
#line 4370 
  if (quality == rate_quality) {
    
#line 4371 
    if ((ipw_debug_level & 536870912U) != 0U) {
      int tmp_20;
      int tmp_19;
      
#line 4371 
      ;
      
#line 4371 
      tmp_19 = preempt_count();
      
#line 4371 
      if (((unsigned long)tmp_19 & 2096896UL) != 0UL) 
#line 4371 
                                                      tmp_20 = 73; else 
                                                                    
#line 4371 
                                                                    tmp_20 = 85;
      
#line 4371 
      printk("\001",tmp_20,"ipw_gather_stats",quality);
    }
    else ;
  }
  else ;
  
#line 4373 
  if (quality == tx_quality) {
    
#line 4374 
    if ((ipw_debug_level & 536870912U) != 0U) {
      int tmp_22;
      int tmp_21;
      
#line 4374 
      ;
      
#line 4374 
      tmp_21 = preempt_count();
      
#line 4374 
      if (((unsigned long)tmp_21 & 2096896UL) != 0UL) 
#line 4374 
                                                      tmp_22 = 73; else 
                                                                    
#line 4374 
                                                                    tmp_22 = 85;
      
#line 4374 
      printk("\001",tmp_22,"ipw_gather_stats",quality);
    }
    else ;
  }
  else ;
  
#line 4376 
  if (quality == rx_quality) {
    
#line 4377 
    if ((ipw_debug_level & 536870912U) != 0U) {
      int tmp_24;
      int tmp_23;
      
#line 4377 
      ;
      
#line 4377 
      tmp_23 = preempt_count();
      
#line 4377 
      if (((unsigned long)tmp_23 & 2096896UL) != 0UL) 
#line 4377 
                                                      tmp_24 = 73; else 
                                                                    
#line 4377 
                                                                    tmp_24 = 85;
      
#line 4377 
      printk("\001",tmp_24,"ipw_gather_stats",quality);
    }
    else ;
  }
  else ;
  
#line 4379 
  if (quality == signal_quality) {
    
#line 4380 
    if ((ipw_debug_level & 536870912U) != 0U) {
      int tmp_26;
      int tmp_25;
      
#line 4380 
      ;
      
#line 4380 
      tmp_25 = preempt_count();
      
#line 4380 
      if (((unsigned long)tmp_25 & 2096896UL) != 0UL) 
#line 4380 
                                                      tmp_26 = 73; else 
                                                                    
#line 4380 
                                                                    tmp_26 = 85;
      
#line 4380 
      printk("\001",tmp_26,"ipw_gather_stats",quality);
    }
    else ;
  }
  else ;
  
#line 4383 
  priv->quality = quality;
  
#line 4385 
  ldv_schedule_delayed_work_128(& priv->gather_stats,500UL);
  return_label: 
#line 4386 
                return;
}


#line 4388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_bg_gather_stats(struct work_struct *work)
{
  struct ipw_priv *tmp;
  {
    
#line 4391 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 4391 
    tmp = (struct ipw_priv *)__mptr + 18446744073709545888U;
  }
  
#line 4390 
  struct ipw_priv *priv = tmp;
  
#line 4392 
  ldv_mutex_lock_129(& priv->mutex);
  
#line 4393 
  ipw_gather_stats(priv);
  
#line 4394 
  ldv_mutex_unlock_130(& priv->mutex);
  
#line 4395 
  return;
}


#line 4402  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_handle_missed_beacon(struct ipw_priv *priv, int missed_count)
{
  
#line 4405 
  priv->notif_missed_beacons = (unsigned int)missed_count;
  
#line 4407 
  if (priv->disassociate_threshold < (unsigned int)missed_count && (priv->status & 128U) != 0U) {
    
#line 4412 
    if ((ipw_debug_level & 5188U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 4412 
      ;
      
#line 4412 
      tmp = preempt_count();
      
#line 4412 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 4412 
                                                   tmp_0 = 73; else 
#line 4412 
                                                                    tmp_0 = 85;
      
#line 4412 
      printk("\001",tmp_0,"ipw_handle_missed_beacon",missed_count);
    }
    else ;
    
#line 4415 
    priv->status &= 4294966271U;
    
#line 4416 
    if ((priv->status & 2097152U) != 0U) {
      
#line 4417 
      if ((ipw_debug_level & 1092U) != 0U) {
        int tmp_2;
        int tmp_1;
        
#line 4417 
        tmp_1 = preempt_count();
        
#line 4417 
        if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 4417 
                                                       tmp_2 = 73; else 
                                                                    
#line 4417 
                                                                    tmp_2 = 85;
        
#line 4417 
        printk("\001",tmp_2,"ipw_handle_missed_beacon");
      }
      else ;
      
#line 4420 
      ldv_schedule_work_131(& priv->abort_scan);
    }
    else ;
    
#line 4423 
    ldv_schedule_work_132(& priv->disassociate);
    
#line 4424 
    goto return_label;
  }
  else ;
  
#line 4427 
  if ((priv->status & 1024U) != 0U) {
    
#line 4430 
    if ((ipw_debug_level & 1088U) != 0U) {
      int tmp_4;
      int tmp_3;
      
#line 4430 
      ;
      
#line 4430 
      tmp_3 = preempt_count();
      
#line 4430 
      if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 4430 
                                                     tmp_4 = 73; else 
                                                                   
#line 4430 
                                                                   tmp_4 = 85;
      
#line 4430 
      printk("\001",tmp_4,"ipw_handle_missed_beacon",missed_count);
    }
    else ;
    
#line 4433 
    goto return_label;
  }
  else ;
  
#line 4436 
  if (roaming != 0 && (priv->roaming_threshold < (unsigned int)missed_count && priv->disassociate_threshold >= (unsigned int)missed_count)) {
    
#line 4443 
    if ((ipw_debug_level & 1088U) != 0U) {
      int tmp_6;
      int tmp_5;
      
#line 4443 
      ;
      
#line 4443 
      tmp_5 = preempt_count();
      
#line 4443 
      if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 4443 
                                                     tmp_6 = 73; else 
                                                                   
#line 4443 
                                                                   tmp_6 = 85;
      
#line 4443 
      printk("\001",tmp_6,"ipw_handle_missed_beacon",missed_count);
    }
    else ;
    
#line 4446 
    if ((priv->status & 1024U) == 0U) {
      
#line 4447 
      priv->status |= 1024U;
      
#line 4448 
      if ((priv->status & 2097152U) == 0U) 
#line 4449 
                                           ldv_schedule_delayed_work_133(& priv->request_scan,0UL); else ;
    }
    else ;
    
#line 4451 
    goto return_label;
  }
  else ;
  
#line 4454 
  if ((priv->status & 2097152U) != 0U && missed_count > 3) {
    
#line 4460 
    if ((ipw_debug_level & 1092U) != 0U) {
      int tmp_8;
      int tmp_7;
      
#line 4460 
      tmp_7 = preempt_count();
      
#line 4460 
      if (((unsigned long)tmp_7 & 2096896UL) != 0UL) 
#line 4460 
                                                     tmp_8 = 73; else 
                                                                   
#line 4460 
                                                                   tmp_8 = 85;
      
#line 4460 
      printk("\001",tmp_8,"ipw_handle_missed_beacon");
    }
    else ;
    
#line 4462 
    ldv_schedule_work_134(& priv->abort_scan);
  }
  else ;
  
#line 4465 
  if ((ipw_debug_level & 1024U) != 0U) {
    int tmp_10;
    int tmp_9;
    
#line 4465 
    ;
    
#line 4465 
    tmp_9 = preempt_count();
    
#line 4465 
    if (((unsigned long)tmp_9 & 2096896UL) != 0UL) 
#line 4465 
                                                   tmp_10 = 73; else 
                                                                  
#line 4465 
                                                                  tmp_10 = 85;
    
#line 4465 
    printk("\001",tmp_10,"ipw_handle_missed_beacon",missed_count);
  }
  else ;
  return_label: 
#line 4466 
                return;
}


#line 4468  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_scan_event(struct work_struct *work)
{
  union iwreq_data wrqu;
  struct ipw_priv *tmp;
  {
    
#line 4473 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 4473 
    tmp = (struct ipw_priv *)__mptr + 18446744073709546576U;
  }
  
#line 4472 
  struct ipw_priv *priv = tmp;
  
#line 4475 
  wrqu.data.length = (unsigned short)0U;
  
#line 4476 
  wrqu.data.flags = (unsigned short)0U;
  
#line 4477 
  wireless_send_event(priv->net_dev,35609U,& wrqu,(char const *)0);
  
#line 4478 
  return;
}


#line 4480  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void handle_scan_event(struct ipw_priv *priv)
{
  
#line 4483 
  if (priv->user_requested_scan == 0) {
    unsigned long tmp_0;
    unsigned long tmp;
    
#line 4485 
    tmp = msecs_to_jiffies(4000U);
    
#line 4484 
    tmp_0 = round_jiffies_relative(tmp);
    
#line 4484 
    ;
    
#line 4484 
    ldv_schedule_delayed_work_135(& priv->scan_event,tmp_0);
  }
  else {
    
#line 4487 
    priv->user_requested_scan = 0;
    
#line 4488 
    mod_delayed_work(system_wq,& priv->scan_event,0UL);
  }
  
#line 4490 
  return;
}


#line 4496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_rx_notification(struct ipw_priv *priv, struct ipw_rx_notification *notif)
{
  
#line 4499 
  u16 size = notif->size;
  
#line 4501 
  if ((ipw_debug_level & 1024U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 4501 
    ;
    
#line 4501 
    ;
    
#line 4501 
    tmp = preempt_count();
    
#line 4501 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 4501 
                                                 tmp_0 = 73; else 
#line 4501 
                                                                  tmp_0 = 85;
    
#line 4501 
    printk("\001",tmp_0,"ipw_rx_notification",(int)notif->subtype,(int)size);
  }
  else ;
  
#line 4503 
  switch ((int)notif->subtype) {
    case 10: 
#line 4504 
    ;
    {
      
#line 4505 
      struct notif_association *assoc = & notif->u.assoc;
      
#line 4507 
      switch ((int)assoc->state) {
        case 12: 
#line 4508 
        ;
        
#line 4509 
        if ((ipw_debug_level & 5184U) != 0U) {
          int tmp_2;
          int tmp_1;
          
#line 4509 
          ;
          
#line 4509 
          ;
          
#line 4509 
          ;
          
#line 4509 
          tmp_1 = preempt_count();
          
#line 4509 
          if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 4509 
                                                         tmp_2 = 73; else 
                                                                    
#line 4509 
                                                                    tmp_2 = 85;
          
#line 4509 
          printk("\001",tmp_2,"ipw_rx_notification",(int)priv->essid_len,(u8 *)(& priv->essid),(u8 *)(& priv->bssid));
        }
        else ;
        
#line 4515 
        switch ((priv->ieee)->iw_mode) {
          case 2: 
#line 4516 
          ;
          
#line 4517 
          memcpy((void *)(& (priv->ieee)->bssid),(void const *)(& priv->bssid),6UL);
          
#line 4519 
          goto ldv_55212;
          case 1: 
#line 4521 
          ;
          
#line 4522 
          memcpy((void *)(& (priv->ieee)->bssid),(void const *)(& priv->bssid),6UL);
          
#line 4526 
          priv->num_stations = (unsigned char)0U;
          
#line 4528 
          if ((ipw_debug_level & 4100U) != 0U) {
            int tmp_4;
            int tmp_3;
            
#line 4528 
            tmp_3 = preempt_count();
            
#line 4528 
            if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 4528 
                                                           tmp_4 = 73; else 
                                                                    
#line 4528 
                                                                    tmp_4 = 85;
            
#line 4528 
            printk("\001",tmp_4,"ipw_rx_notification");
          }
          else ;
          
#line 4530 
          ldv_schedule_delayed_work_136(& priv->adhoc_check,(unsigned long)priv->assoc_request.beacon_interval);
          
#line 4535 
          goto ldv_55212;
        }
        ldv_55212: 
#line 4538 
        ;
        
#line 4538 
        priv->status &= 4294967039U;
        
#line 4539 
        priv->status |= 128U;
        
#line 4540 
        ldv_schedule_work_137(& priv->system_config);
        
#line 4545 
        if ((priv->status & 64U) != 0U && ((int)((struct ieee80211_hdr *)(& notif->u.raw))->frame_control & 240) == 16) {
          
#line 4548 
          if ((unsigned int)size + 65506U <= 2284U) {
            
#line 4555 
            struct libipw_rx_stats stats = {.mac_time = 0U, .rssi = (signed char)0, .signal = (unsigned char)0, .noise = (unsigned char)0, .rate = (unsigned short)0, .received_channel = (unsigned char)0, .control = (unsigned char)0, .mask = (unsigned char)0, .freq = (unsigned char)0, .len = (unsigned short)((unsigned int)size + 65535U), .tsf = 0ULL, .beacon_time = 0U};
            
#line 4559 
            if (ipw_debug_level < (u32)0) {
              int tmp_6;
              int tmp_5;
              
#line 4559 
              ;
              
#line 4559 
              tmp_5 = preempt_count();
              
#line 4559 
              if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 4559 
                                                             tmp_6 = 73; else 
                                                                    
#line 4559 
                                                                    tmp_6 = 85;
              
#line 4559 
              printk("\001",tmp_6,"ipw_rx_notification",(int)size);
            }
            else ;
            
#line 4562 
            libipw_rx_mgt(priv->ieee,(struct libipw_hdr_4addr *)(& notif->u.raw),& stats);
          }
          else ;
        }
        else ;
        
#line 4572 
        ldv_schedule_work_138(& priv->link_up);
        
#line 4574 
        goto ldv_55215;
        case 9: 
#line 4577 
        ;
        
#line 4578 
        if ((priv->status & 192U) != 0U) {
          
#line 4581 
          struct notif_authenticate *auth = & notif->u.auth;
          
#line 4583 
          if ((ipw_debug_level & 5184U) != 0U) {
            char const *tmp_7;
            int tmp_9;
            int tmp_8;
            
#line 4583 
            tmp_7 = ipw_get_status_code((unsigned short)((int)auth->status));
            
#line 4583 
            ;
            
#line 4583 
            ;
            
#line 4583 
            ;
            
#line 4583 
            ;
            
#line 4583 
            tmp_8 = preempt_count();
            
#line 4583 
            if (((unsigned long)tmp_8 & 2096896UL) != 0UL) 
#line 4583 
                                                           tmp_9 = 73; else 
                                                                    
#line 4583 
                                                                    tmp_9 = 85;
            
#line 4583 
            printk("\001",tmp_9,"ipw_rx_notification",(int)priv->essid_len,(u8 *)(& priv->essid),(u8 *)(& priv->bssid),(int)auth->status,tmp_7);
          }
          else ;
          
#line 4595 
          priv->status &= 4294966847U;
          
#line 4600 
          ldv_schedule_work_139(& priv->link_down);
          
#line 4601 
          goto ldv_55215;
        }
        else ;
        
#line 4604 
        if ((ipw_debug_level & 5184U) != 0U) {
          int tmp_11;
          int tmp_10;
          
#line 4604 
          ;
          
#line 4604 
          ;
          
#line 4604 
          ;
          
#line 4604 
          tmp_10 = preempt_count();
          
#line 4604 
          if (((unsigned long)tmp_10 & 2096896UL) != 0UL) 
#line 4604 
                                                          tmp_11 = 73; else 
                                                                    
#line 4604 
                                                                    tmp_11 = 85;
          
#line 4604 
          printk("\001",tmp_11,"ipw_rx_notification",(int)priv->essid_len,(u8 *)(& priv->essid),(u8 *)(& priv->bssid));
        }
        else ;
        
#line 4609 
        goto ldv_55215;
        case 0: 
#line 4612 
        ;
        
#line 4613 
        if ((priv->status & 64U) != 0U) {
          struct libipw_assoc_response *resp;
          
#line 4617 
          resp = (struct libipw_assoc_response *)(& notif->u.raw);
          
#line 4621 
          if ((ipw_debug_level & 5184U) != 0U) {
            char const *tmp_12;
            int tmp_14;
            int tmp_13;
            
#line 4621 
            tmp_12 = ipw_get_status_code((unsigned short)((int)resp->status));
            
#line 4621 
            ;
            
#line 4621 
            tmp_13 = preempt_count();
            
#line 4621 
            if (((unsigned long)tmp_13 & 2096896UL) != 0UL) 
#line 4621 
                                                            tmp_14 = 73; else 
                                                                    
#line 4621 
                                                                    tmp_14 = 85;
            
#line 4621 
            printk("\001",tmp_14,"ipw_rx_notification",(int)resp->status,tmp_12);
          }
          else ;
        }
        else ;
        
#line 4631 
        if ((ipw_debug_level & 5184U) != 0U) {
          int tmp_16;
          int tmp_15;
          
#line 4631 
          ;
          
#line 4631 
          ;
          
#line 4631 
          ;
          
#line 4631 
          tmp_15 = preempt_count();
          
#line 4631 
          if (((unsigned long)tmp_15 & 2096896UL) != 0UL) 
#line 4631 
                                                          tmp_16 = 73; else 
                                                                    
#line 4631 
                                                                    tmp_16 = 85;
          
#line 4631 
          printk("\001",tmp_16,"ipw_rx_notification",(int)priv->essid_len,(u8 *)(& priv->essid),(u8 *)(& priv->bssid));
        }
        else ;
        
#line 4637 
        priv->status &= 4294966335U;
        
#line 4641 
        if (priv->assoc_network != (struct libipw_network *)0 && ((int)(priv->assoc_network)->capability & 2) != 0) 
          
#line 4645 
          ipw_remove_current_network(priv); else ;
        
#line 4648 
        ldv_schedule_work_140(& priv->link_down);
        
#line 4650 
        goto ldv_55215;
        case 11: 
#line 4653 
        ;
        
#line 4654 
        goto ldv_55215;
        default: 
#line 4656 
        ;
        
#line 4657 
        printk("\001",(int)assoc->state);
        
#line 4659 
        goto ldv_55215;
      }
      ldv_55215: 
#line 4662 
      ;
      
#line 4662 
      goto ldv_55222;
    }
    case 11: 
#line 4665 
    ;
    {
      
#line 4666 
      struct notif_authenticate *auth_0 = & notif->u.auth;
      
#line 4667 
      switch ((int)auth_0->state) {
        case 9: 
#line 4668 
        ;
        
#line 4669 
        if ((ipw_debug_level & 1088U) != 0U) {
          int tmp_18;
          int tmp_17;
          
#line 4669 
          ;
          
#line 4669 
          ;
          
#line 4669 
          ;
          
#line 4669 
          tmp_17 = preempt_count();
          
#line 4669 
          if (((unsigned long)tmp_17 & 2096896UL) != 0UL) 
#line 4669 
                                                          tmp_18 = 73; else 
                                                                    
#line 4669 
                                                                    tmp_18 = 85;
          
#line 4669 
          printk("\001",tmp_18,"ipw_rx_notification",(int)priv->essid_len,(u8 *)(& priv->essid),(u8 *)(& priv->bssid));
        }
        else ;
        
#line 4673 
        priv->status |= 64U;
        
#line 4674 
        goto ldv_55226;
        case 0: 
#line 4676 
        ;
        
#line 4677 
        if ((priv->status & 64U) != 0U) {
          
#line 4678 
          if ((ipw_debug_level & 5184U) != 0U) {
            char const *tmp_19;
            int tmp_21;
            int tmp_20;
            
#line 4678 
            tmp_19 = ipw_get_status_code((unsigned short)((int)auth_0->status));
            
#line 4678 
            ;
            
#line 4678 
            tmp_20 = preempt_count();
            
#line 4678 
            if (((unsigned long)tmp_20 & 2096896UL) != 0UL) 
#line 4678 
                                                            tmp_21 = 73; else 
                                                                    
#line 4678 
                                                                    tmp_21 = 85;
            
#line 4678 
            printk("\001",tmp_21,"ipw_rx_notification",(int)auth_0->status,tmp_19);
          }
          else ;
        }
        else ;
        
#line 4686 
        if ((ipw_debug_level & 5184U) != 0U) {
          int tmp_23;
          int tmp_22;
          
#line 4686 
          ;
          
#line 4686 
          ;
          
#line 4686 
          ;
          
#line 4686 
          tmp_22 = preempt_count();
          
#line 4686 
          if (((unsigned long)tmp_22 & 2096896UL) != 0UL) 
#line 4686 
                                                          tmp_23 = 73; else 
                                                                    
#line 4686 
                                                                    tmp_23 = 85;
          
#line 4686 
          printk("\001",tmp_23,"ipw_rx_notification",(int)priv->essid_len,(u8 *)(& priv->essid),(u8 *)(& priv->bssid));
        }
        else ;
        
#line 4692 
        priv->status &= 4294966847U;
        
#line 4696 
        ldv_schedule_work_141(& priv->link_down);
        
#line 4697 
        goto ldv_55226;
        case 1: 
#line 4699 
        ;
        
#line 4700 
        if ((ipw_debug_level & 5184U) != 0U) {
          int tmp_25;
          int tmp_24;
          
#line 4700 
          tmp_24 = preempt_count();
          
#line 4700 
          if (((unsigned long)tmp_24 & 2096896UL) != 0UL) 
#line 4700 
                                                          tmp_25 = 73; else 
                                                                    
#line 4700 
                                                                    tmp_25 = 85;
          
#line 4700 
          printk("\001",tmp_25,"ipw_rx_notification");
        }
        else ;
        
#line 4702 
        goto ldv_55226;
        case 2: 
#line 4703 
        ;
        
#line 4704 
        if ((ipw_debug_level & 5184U) != 0U) {
          int tmp_27;
          int tmp_26;
          
#line 4704 
          tmp_26 = preempt_count();
          
#line 4704 
          if (((unsigned long)tmp_26 & 2096896UL) != 0UL) 
#line 4704 
                                                          tmp_27 = 73; else 
                                                                    
#line 4704 
                                                                    tmp_27 = 85;
          
#line 4704 
          printk("\001",tmp_27,"ipw_rx_notification");
        }
        else ;
        
#line 4706 
        goto ldv_55226;
        case 3: 
#line 4707 
        ;
        
#line 4708 
        if ((ipw_debug_level & 5184U) != 0U) {
          int tmp_29;
          int tmp_28;
          
#line 4708 
          tmp_28 = preempt_count();
          
#line 4708 
          if (((unsigned long)tmp_28 & 2096896UL) != 0UL) 
#line 4708 
                                                          tmp_29 = 73; else 
                                                                    
#line 4708 
                                                                    tmp_29 = 85;
          
#line 4708 
          printk("\001",tmp_29,"ipw_rx_notification");
        }
        else ;
        
#line 4710 
        goto ldv_55226;
        case 4: 
#line 4711 
        ;
        
#line 4712 
        if ((ipw_debug_level & 5184U) != 0U) {
          int tmp_31;
          int tmp_30;
          
#line 4712 
          tmp_30 = preempt_count();
          
#line 4712 
          if (((unsigned long)tmp_30 & 2096896UL) != 0UL) 
#line 4712 
                                                          tmp_31 = 73; else 
                                                                    
#line 4712 
                                                                    tmp_31 = 85;
          
#line 4712 
          printk("\001",tmp_31,"ipw_rx_notification");
        }
        else ;
        
#line 4714 
        goto ldv_55226;
        case 5: 
#line 4715 
        ;
        
#line 4716 
        if ((ipw_debug_level & 5184U) != 0U) {
          int tmp_33;
          int tmp_32;
          
#line 4716 
          tmp_32 = preempt_count();
          
#line 4716 
          if (((unsigned long)tmp_32 & 2096896UL) != 0UL) 
#line 4716 
                                                          tmp_33 = 73; else 
                                                                    
#line 4716 
                                                                    tmp_33 = 85;
          
#line 4716 
          printk("\001",tmp_33,"ipw_rx_notification");
        }
        else ;
        
#line 4718 
        goto ldv_55226;
        case 6: 
#line 4719 
        ;
        
#line 4720 
        if ((ipw_debug_level & 5184U) != 0U) {
          int tmp_35;
          int tmp_34;
          
#line 4720 
          tmp_34 = preempt_count();
          
#line 4720 
          if (((unsigned long)tmp_34 & 2096896UL) != 0UL) 
#line 4720 
                                                          tmp_35 = 73; else 
                                                                    
#line 4720 
                                                                    tmp_35 = 85;
          
#line 4720 
          printk("\001",tmp_35,"ipw_rx_notification");
        }
        else ;
        
#line 4722 
        goto ldv_55226;
        case 7: 
#line 4723 
        ;
        
#line 4724 
        if ((ipw_debug_level & 5184U) != 0U) {
          int tmp_37;
          int tmp_36;
          
#line 4724 
          tmp_36 = preempt_count();
          
#line 4724 
          if (((unsigned long)tmp_36 & 2096896UL) != 0UL) 
#line 4724 
                                                          tmp_37 = 73; else 
                                                                    
#line 4724 
                                                                    tmp_37 = 85;
          
#line 4724 
          printk("\001",tmp_37,"ipw_rx_notification");
        }
        else ;
        
#line 4726 
        goto ldv_55226;
        case 8: 
#line 4727 
        ;
        
#line 4728 
        if ((ipw_debug_level & 5184U) != 0U) {
          int tmp_39;
          int tmp_38;
          
#line 4728 
          tmp_38 = preempt_count();
          
#line 4728 
          if (((unsigned long)tmp_38 & 2096896UL) != 0UL) 
#line 4728 
                                                          tmp_39 = 73; else 
                                                                    
#line 4728 
                                                                    tmp_39 = 85;
          
#line 4728 
          printk("\001",tmp_39,"ipw_rx_notification");
        }
        else ;
        
#line 4730 
        goto ldv_55226;
        case 10: 
#line 4731 
        ;
        
#line 4732 
        if ((ipw_debug_level & 5184U) != 0U) {
          int tmp_41;
          int tmp_40;
          
#line 4732 
          tmp_40 = preempt_count();
          
#line 4732 
          if (((unsigned long)tmp_40 & 2096896UL) != 0UL) 
#line 4732 
                                                          tmp_41 = 73; else 
                                                                    
#line 4732 
                                                                    tmp_41 = 85;
          
#line 4732 
          printk("\001",tmp_41,"ipw_rx_notification");
        }
        else ;
        
#line 4734 
        goto ldv_55226;
        case 11: 
#line 4735 
        ;
        
#line 4736 
        if ((ipw_debug_level & 5184U) != 0U) {
          int tmp_43;
          int tmp_42;
          
#line 4736 
          tmp_42 = preempt_count();
          
#line 4736 
          if (((unsigned long)tmp_42 & 2096896UL) != 0UL) 
#line 4736 
                                                          tmp_43 = 73; else 
                                                                    
#line 4736 
                                                                    tmp_43 = 85;
          
#line 4736 
          printk("\001",tmp_43,"ipw_rx_notification");
        }
        else ;
        
#line 4739 
        goto ldv_55226;
        case 12: 
#line 4740 
        ;
        
#line 4741 
        if ((ipw_debug_level & 5184U) != 0U) {
          int tmp_45;
          int tmp_44;
          
#line 4741 
          tmp_44 = preempt_count();
          
#line 4741 
          if (((unsigned long)tmp_44 & 2096896UL) != 0UL) 
#line 4741 
                                                          tmp_45 = 73; else 
                                                                    
#line 4741 
                                                                    tmp_45 = 85;
          
#line 4741 
          printk("\001",tmp_45,"ipw_rx_notification");
        }
        else ;
        
#line 4743 
        goto ldv_55226;
        default: 
#line 4744 
        ;
        
#line 4745 
        if ((ipw_debug_level & 1024U) != 0U) {
          int tmp_47;
          int tmp_46;
          
#line 4745 
          ;
          
#line 4745 
          tmp_46 = preempt_count();
          
#line 4745 
          if (((unsigned long)tmp_46 & 2096896UL) != 0UL) 
#line 4745 
                                                          tmp_47 = 73; else 
                                                                    
#line 4745 
                                                                    tmp_47 = 85;
          
#line 4745 
          printk("\001",tmp_47,"ipw_rx_notification",(int)auth_0->state);
        }
        else ;
        
#line 4747 
        goto ldv_55226;
      }
      ldv_55226: 
#line 4749 
      ;
      
#line 4749 
      goto ldv_55222;
    }
    case 12: 
#line 4752 
    ;
    {
      
#line 4753 
      struct notif_channel_result *x = & notif->u.channel_result;
      
#line 4756 
      if ((unsigned int)size == 46U) {
        
#line 4757 
        if ((ipw_debug_level & 2048U) != 0U) {
          int tmp_49;
          int tmp_48;
          
#line 4757 
          ;
          
#line 4757 
          tmp_48 = preempt_count();
          
#line 4757 
          if (((unsigned long)tmp_48 & 2096896UL) != 0UL) 
#line 4757 
                                                          tmp_49 = 73; else 
                                                                    
#line 4757 
                                                                    tmp_49 = 85;
          
#line 4757 
          printk("\001",tmp_49,"ipw_rx_notification",(int)x->channel_num);
        }
        else ;
      }
      else 
        
#line 4760 
        if ((ipw_debug_level & 2048U) != 0U) {
          int tmp_51;
          int tmp_50;
          
#line 4760 
          ;
          
#line 4760 
          tmp_50 = preempt_count();
          
#line 4760 
          if (((unsigned long)tmp_50 & 2096896UL) != 0UL) 
#line 4760 
                                                          tmp_51 = 73; else 
                                                                    
#line 4760 
                                                                    tmp_51 = 85;
          
#line 4760 
          printk("\001",tmp_51,"ipw_rx_notification",(int)size,46UL);
        }
        else ;
      
#line 4764 
      goto ldv_55222;
    }
    case 13: 
#line 4767 
    ;
    {
      
#line 4768 
      struct notif_scan_complete *x_0 = & notif->u.scan_complete;
      
#line 4769 
      if ((unsigned int)size == 4U) {
        
#line 4770 
        if ((ipw_debug_level & 2048U) != 0U) {
          int tmp_53;
          int tmp_52;
          
#line 4770 
          ;
          
#line 4770 
          ;
          
#line 4770 
          ;
          
#line 4770 
          tmp_52 = preempt_count();
          
#line 4770 
          if (((unsigned long)tmp_52 & 2096896UL) != 0UL) 
#line 4770 
                                                          tmp_53 = 73; else 
                                                                    
#line 4770 
                                                                    tmp_53 = 85;
          
#line 4770 
          printk("\001",tmp_53,"ipw_rx_notification",(int)x_0->scan_type,(int)x_0->num_channels,(int)x_0->status);
        }
        else ;
      }
      else 
#line 4775 
           printk("\001",(int)size,4UL);
      
#line 4780 
      priv->status &= 4288675839U;
      
#line 4783 
      __wake_up(& priv->wait_state,1U,1,(void *)0);
      
#line 4784 
      cancel_delayed_work(& priv->scan_check);
      
#line 4786 
      if ((priv->status & 2048U) != 0U) 
#line 4787 
                                        goto ldv_55222; else ;
      
#line 4789 
      (priv->ieee)->scans += 1;
      
#line 4792 
      if ((priv->ieee)->iw_mode == 6) {
        
#line 4793 
        priv->status |= 8388608U;
        
#line 4794 
        ldv_schedule_delayed_work_142(& priv->request_scan,0UL);
        
#line 4795 
        goto ldv_55222;
      }
      else ;
      
#line 4797 
      priv->status &= 4286578687U;
      
#line 4801 
      if ((priv->status & 524288U) != 0U) 
#line 4802 
                                          ldv_schedule_delayed_work_143(& priv->request_direct_scan,0UL); else ;
      
#line 4804 
      if ((priv->status & 1920U) == 0U) 
#line 4808 
                                        ldv_schedule_work_144(& priv->associate);
      else 
        
#line 4809 
        if ((priv->status & 1024U) != 0U) 
          
#line 4810 
          if ((unsigned int)x_0->status == 1U) 
#line 4815 
                                               ldv_schedule_work_145(& priv->roam); else 
                                                                    
#line 4818 
                                                                    priv->status &= 4294966271U;
        else 
          
#line 4819 
          if ((priv->status & 1048576U) != 0U) 
#line 4820 
                                               ldv_schedule_delayed_work_146(& priv->request_scan,0UL);
          else 
            
#line 4821 
            if ((priv->config & 1024U) != 0U && (priv->status & 128U) != 0U) {
              unsigned long tmp_54;
              
#line 4823 
              tmp_54 = round_jiffies_relative(250UL);
              
#line 4823 
              ;
              
#line 4823 
              ldv_schedule_delayed_work_147(& priv->request_scan,tmp_54);
            }
            else ;
      
#line 4835 
      if ((unsigned int)x_0->status == 1U) 
#line 4836 
                                           handle_scan_event(priv); else ;
      
#line 4837 
      goto ldv_55222;
    }
    case 14: 
#line 4840 
    ;
    {
      
#line 4841 
      struct notif_frag_length *x_1 = & notif->u.frag_len;
      
#line 4843 
      if ((unsigned int)size == 4U) 
#line 4844 
                                    printk("\001",(int)x_1->frag_length); else 
                                                                    
#line 4847 
                                                                    printk("\001",(int)size,4UL);
      
#line 4850 
      goto ldv_55222;
    }
    case 15: 
#line 4853 
    ;
    {
      
#line 4854 
      struct notif_link_deterioration *x_2 = & notif->u.link_deterioration;
      
#line 4857 
      if ((unsigned int)size == 145U) {
        
#line 4858 
        if ((ipw_debug_level & 1088U) != 0U) {
          int tmp_56;
          int tmp_55;
          
#line 4858 
          ;
          
#line 4858 
          ;
          
#line 4858 
          tmp_55 = preempt_count();
          
#line 4858 
          if (((unsigned long)tmp_55 & 2096896UL) != 0UL) 
#line 4858 
                                                          tmp_56 = 73; else 
                                                                    
#line 4858 
                                                                    tmp_56 = 85;
          
#line 4858 
          printk("\001",tmp_56,"ipw_rx_notification",(int)x_2->silence_notification_type,(int)x_2->silence_count);
        }
        else ;
        
#line 4862 
        memcpy((void *)(& priv->last_link_deterioration),(void const *)x_2,145UL);
      }
      else 
#line 4865 
           printk("\001",(int)size,145UL);
      
#line 4869 
      goto ldv_55222;
    }
    case 16: 
#line 4872 
    ;
    
#line 4873 
    printk("\001");
    
#line 4874 
    if (priv->hcmd != (struct ipw_cmd *)0 && (priv->hcmd)->cmd != 30U) 
      
#line 4876 
      printk("\001"); else ;
    
#line 4878 
    goto ldv_55222;
    case 17: 
#line 4881 
    ;
    {
      
#line 4882 
      struct notif_beacon_state *x_3 = & notif->u.beacon_state;
      
#line 4883 
      if ((unsigned int)size != 8U) {
        
#line 4884 
        printk("\001",(int)size,8UL);
        
#line 4887 
        goto ldv_55222;
      }
      else ;
      
#line 4890 
      if (x_3->state == 1U) 
#line 4892 
                            ipw_handle_missed_beacon(priv,(int)x_3->number); else ;
      
#line 4896 
      goto ldv_55222;
    }
    case 18: 
#line 4899 
    ;
    {
      
#line 4900 
      struct notif_tgi_tx_key *x_4 = & notif->u.tgi_tx_key;
      
#line 4901 
      if ((unsigned int)size == 4U) {
        
#line 4902 
        printk("\001",(int)x_4->key_state,(int)x_4->security_type,(int)x_4->station_index);
        
#line 4906 
        goto ldv_55222;
      }
      else ;
      
#line 4909 
      printk("\001",(int)size,4UL);
      
#line 4912 
      goto ldv_55222;
    }
    case 20: 
#line 4915 
    ;
    {
      
#line 4916 
      struct notif_calibration *x_5 = & notif->u.calibration;
      
#line 4918 
      if ((unsigned int)size == 104U) {
        
#line 4919 
        memcpy((void *)(& priv->calib),(void const *)x_5,104UL);
        
#line 4920 
        if ((ipw_debug_level & 4U) != 0U) {
          int tmp_58;
          int tmp_57;
          
#line 4920 
          tmp_57 = preempt_count();
          
#line 4920 
          if (((unsigned long)tmp_57 & 2096896UL) != 0UL) 
#line 4920 
                                                          tmp_58 = 73; else 
                                                                    
#line 4920 
                                                                    tmp_58 = 85;
          
#line 4920 
          printk("\001",tmp_58,"ipw_rx_notification");
        }
        else ;
        
#line 4921 
        goto ldv_55222;
      }
      else ;
      
#line 4924 
      printk("\001",(int)size,104UL);
      
#line 4927 
      goto ldv_55222;
    }
    case 25: 
#line 4930 
    ;
    
#line 4931 
    if ((unsigned int)size == 4U) {
      
#line 4932 
      priv->exp_avg_noise = exponential_average((short)((int)priv->exp_avg_noise),(short)((int)((unsigned char)notif->u.noise.value)),(unsigned char)16);
      
#line 4936 
      goto ldv_55222;
    }
    else ;
    
#line 4939 
    printk("\001",(int)size,4UL);
    
#line 4942 
    goto ldv_55222;
    default: 
#line 4945 
    ;
    
#line 4946 
    if ((ipw_debug_level & 1024U) != 0U) {
      int tmp_60;
      int tmp_59;
      
#line 4946 
      ;
      
#line 4946 
      ;
      
#line 4946 
      ;
      
#line 4946 
      tmp_59 = preempt_count();
      
#line 4946 
      if (((unsigned long)tmp_59 & 2096896UL) != 0UL) 
#line 4946 
                                                      tmp_60 = 73; else 
                                                                    
#line 4946 
                                                                    tmp_60 = 85;
      
#line 4946 
      printk("\001",tmp_60,"ipw_rx_notification",(int)notif->subtype,(int)notif->flags,(int)size);
    }
    else ;
  }
  ldv_55222: 
#line 4950 
  ;
  
#line 4951 
  return;
}


#line 4958  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_queue_reset(struct ipw_priv *priv)
{
  int __retres;
  
#line 4960 
  int rc = 0;
  
#line 4962 
  int nTx = 64;
  
#line 4962 
  int nTxCmd = 8;
  
#line 4963 
  ipw_tx_queue_free(priv);
  
#line 4965 
  rc = ipw_queue_tx_init(priv,& priv->txq_cmd,nTxCmd,640U,3968U,512U,516U);
  
#line 4970 
  if (rc != 0) {
    
#line 4971 
    printk("\001");
    
#line 4972 
    goto error;
  }
  else ;
  
#line 4975 
  rc = ipw_queue_tx_init(priv,& priv->txq[0],nTx,644U,3972U,520U,524U);
  
#line 4979 
  if (rc != 0) {
    
#line 4980 
    printk("\001");
    
#line 4981 
    goto error;
  }
  else ;
  
#line 4983 
  rc = ipw_queue_tx_init(priv,& priv->txq[1],nTx,648U,3976U,528U,532U);
  
#line 4987 
  if (rc != 0) {
    
#line 4988 
    printk("\001");
    
#line 4989 
    goto error;
  }
  else ;
  
#line 4991 
  rc = ipw_queue_tx_init(priv,& priv->txq[2],nTx,652U,3980U,536U,540U);
  
#line 4995 
  if (rc != 0) {
    
#line 4996 
    printk("\001");
    
#line 4997 
    goto error;
  }
  else ;
  
#line 4999 
  rc = ipw_queue_tx_init(priv,& priv->txq[3],nTx,656U,3984U,544U,548U);
  
#line 5003 
  if (rc != 0) {
    
#line 5004 
    printk("\001");
    
#line 5005 
    goto error;
  }
  else ;
  
#line 5008 
  priv->rx_bufs_min = 0;
  
#line 5009 
  priv->rx_pend_max = 0;
  
#line 5010 
  __retres = rc;
  
#line 5010 
  goto return_label;
  error: 
#line 5012 
  ;
  
#line 5013 
  ipw_tx_queue_free(priv);
  
#line 5014 
  __retres = rc;
  return_label: 
#line 5014 
                return __retres;
}


#line 5030  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_queue_tx_reclaim(struct ipw_priv *priv, struct clx2_tx_queue *txq, int qindex)
{
  u32 hw_tail;
  int used;
  u32 tmp_2;
  int tmp_3;
  
#line 5035 
  struct clx2_queue *q = & txq->q;
  
#line 5037 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 5037 
    ;
    
#line 5037 
    tmp = preempt_count();
    
#line 5037 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 5037 
                                                 tmp_0 = 73; else 
#line 5037 
                                                                  tmp_0 = 85;
    
#line 5037 
    printk("\001",tmp_0,"ipw_queue_tx_reclaim",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",5037,q->reg_r);
  }
  else ;
  
#line 5037 
  tmp_2 = _ipw_read32(priv,(unsigned long)q->reg_r);
  
#line 5037 
  hw_tail = tmp_2;
  
#line 5038 
  if ((unsigned int)q->n_bd <= hw_tail) {
    
#line 5039 
    printk("\001",hw_tail,q->n_bd);
    
#line 5042 
    goto done;
  }
  else ;
  
#line 5044 
  goto ldv_55276;
  ldv_55275: 
#line 5045 
  ;
  
#line 5046 
  ipw_queue_tx_free_tfd(priv,txq);
  
#line 5047 
  priv->tx_packets += 1U;
  
#line 5045 
  q->last_used = ipw_queue_inc_wrap(q->last_used,q->n_bd);
  ldv_55276: 
#line 5046 
  ;
  
#line 5044 
  if ((unsigned int)q->last_used != hw_tail) 
#line 5046 
                                             goto ldv_55275; else 
#line 5049 
                                                                  goto ldv_55277;
  ldv_55277: 
#line 5050 
  ;
  done: 
#line 5049 
  ;
  
#line 5050 
  tmp_3 = ipw_tx_queue_space((struct clx2_queue const *)q);
  
#line 5050 
  ;
  
#line 5050 
  if (tmp_3 > q->low_mark) {
    
#line 5050 
    if (qindex >= 0) 
#line 5052 
                     netif_wake_queue(priv->net_dev); else ;
  }
  else ;
  
#line 5053 
  used = q->first_empty - q->last_used;
  
#line 5054 
  if (used < 0) 
#line 5055 
                used = q->n_bd + used; else ;
  
#line 5057 
  return used;
}


#line 5060  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_queue_tx_hcmd(struct ipw_priv *priv, int hcmd, void *buf, int len, int sync)
{
  int __retres;
  struct tfd_frame *tfd;
  int tmp;
  int tmp_0;
  
#line 5063 
  struct clx2_tx_queue *txq = & priv->txq_cmd;
  
#line 5064 
  struct clx2_queue *q = & txq->q;
  
#line 5067 
  tmp = ipw_tx_queue_space((struct clx2_queue const *)q);
  
#line 5067 
  if (sync != 0) 
#line 5067 
                 tmp_0 = 1; else 
#line 5067 
                                 tmp_0 = 2;
  
#line 5067 
  if (tmp < tmp_0) {
    
#line 5068 
    printk("\001");
    
#line 5069 
    __retres = -16;
    
#line 5069 
    goto return_label;
  }
  else ;
  
#line 5072 
  tfd = txq->bd + q->first_empty;
  
#line 5073 
  *(txq->txb + q->first_empty) = (struct libipw_txb *)0;
  
#line 5075 
  memset((void *)tfd,0,128UL);
  
#line 5076 
  tfd->control_flags.message_type = (unsigned char)1U;
  
#line 5077 
  tfd->control_flags.control_bits = (unsigned char)4U;
  
#line 5078 
  priv->hcmd_seq += 1U;
  
#line 5079 
  tfd->u.cmd.index = (unsigned char)hcmd;
  
#line 5080 
  tfd->u.cmd.length = (unsigned char)len;
  
#line 5081 
  memcpy((void *)(& tfd->u.cmd.payload),(void const *)buf,(unsigned long)len);
  
#line 5082 
  q->first_empty = ipw_queue_inc_wrap(q->first_empty,q->n_bd);
  
#line 5083 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 5083 
    ;
    
#line 5083 
    ;
    
#line 5083 
    tmp_1 = preempt_count();
    
#line 5083 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 5083 
                                                   tmp_2 = 73; else 
#line 5083 
                                                                    tmp_2 = 85;
    
#line 5083 
    printk("\001",tmp_2,"ipw_queue_tx_hcmd",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",5083,q->reg_w,(unsigned int)q->first_empty);
  }
  else ;
  
#line 5083 
  _ipw_write32(priv,(unsigned long)q->reg_w,(unsigned int)q->first_empty);
  
#line 5084 
  _ipw_read32(priv,144UL);
  
#line 5086 
  __retres = 0;
  return_label: 
#line 5086 
                return __retres;
}


#line 5162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_rx_queue_restock(struct ipw_priv *priv)
{
  struct list_head *element;
  struct ipw_rx_mem_buffer *rxb;
  unsigned long flags;
  int write;
  struct ipw_rx_mem_buffer *tmp;
  int tmp_2;
  
#line 5164 
  struct ipw_rx_queue *rxq = priv->rxq;
  
#line 5170 
  ldv___ldv_spin_lock_148(& rxq->lock);
  
#line 5171 
  write = (int)rxq->write;
  
#line 5172 
  goto ldv_55301;
  ldv_55300: 
#line 5173 
  ;
  
#line 5173 
  element = rxq->rx_free.next;
  {
    
#line 5174 
    struct list_head const *__mptr = (struct list_head const *)element;
    
#line 5174 
    tmp = (struct ipw_rx_mem_buffer *)__mptr + 18446744073709551600U;
  }
  
#line 5174 
  rxb = tmp;
  
#line 5175 
  list_del(element);
  
#line 5177 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 5177 
    ;
    
#line 5177 
    ;
    
#line 5177 
    tmp_0 = preempt_count();
    
#line 5177 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 5177 
                                                   tmp_1 = 73; else 
#line 5177 
                                                                    tmp_1 = 85;
    
#line 5177 
    printk("\001",tmp_1,"ipw_rx_queue_restock",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",5178,(rxq->write + 320U) * 4U,(unsigned int)rxb->dma_addr);
  }
  else ;
  
#line 5177 
  _ipw_write32(priv,(unsigned long)((rxq->write + 320U) * 4U),(unsigned int)rxb->dma_addr);
  
#line 5179 
  rxq->queue[rxq->write] = rxb;
  
#line 5180 
  rxq->write = (rxq->write + 1U) & 31U;
  
#line 5181 
  rxq->free_count -= 1U;
  ldv_55301: 
#line 5182 
  ;
  
#line 5172 
  tmp_2 = ipw_rx_queue_space((struct ipw_rx_queue const *)rxq);
  
#line 5172 
  if (tmp_2 > 0) {
    
#line 5172 
    if (rxq->free_count != 0U) 
#line 5174 
                               goto ldv_55300; else 
#line 5177 
                                                    goto ldv_55302;
  }
  else 
#line 5177 
       goto ldv_55302;
  ldv_55302: 
#line 5178 
  ;
  
#line 5183 
  ldv_spin_unlock_irqrestore_149(& rxq->lock,flags);
  
#line 5187 
  if (rxq->free_count <= 8U) 
#line 5188 
                             ldv_schedule_work_150(& priv->rx_replenish); else ;
  
#line 5191 
  if (rxq->write != (unsigned int)write) {
    
#line 5192 
    if ((ipw_debug_level & 134217728U) != 0U) {
      int tmp_4;
      int tmp_3;
      
#line 5192 
      ;
      
#line 5192 
      tmp_3 = preempt_count();
      
#line 5192 
      if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 5192 
                                                     tmp_4 = 73; else 
                                                                   
#line 5192 
                                                                   tmp_4 = 85;
      
#line 5192 
      printk("\001",tmp_4,"ipw_rx_queue_restock",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",5192,4000U,rxq->write);
    }
    else ;
    
#line 5192 
    _ipw_write32(priv,4000UL,rxq->write);
  }
  else ;
  
#line 5194 
  return;
}


#line 5201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_rx_queue_replenish(void *data)
{
  struct list_head *element;
  struct ipw_rx_mem_buffer *rxb;
  unsigned long flags;
  struct ipw_rx_mem_buffer *tmp;
  int tmp_0;
  
#line 5203 
  struct ipw_priv *priv = (struct ipw_priv *)data;
  
#line 5204 
  struct ipw_rx_queue *rxq = priv->rxq;
  
#line 5209 
  ldv___ldv_spin_lock_151(& rxq->lock);
  
#line 5210 
  goto ldv_55315;
  ldv_55314: 
#line 5211 
  ;
  
#line 5211 
  element = rxq->rx_used.next;
  {
    
#line 5212 
    struct list_head const *__mptr = (struct list_head const *)element;
    
#line 5212 
    tmp = (struct ipw_rx_mem_buffer *)__mptr + 18446744073709551600U;
  }
  
#line 5212 
  rxb = tmp;
  
#line 5213 
  rxb->skb = alloc_skb(3000U,32U);
  
#line 5214 
  if (rxb->skb == (struct sk_buff *)0) {
    
#line 5215 
    printk("\001",(char *)(& (priv->net_dev)->name));
    
#line 5220 
    goto ldv_55313;
  }
  else ;
  
#line 5222 
  list_del(element);
  
#line 5224 
  rxb->dma_addr = pci_map_single(priv->pci_dev,(void *)(rxb->skb)->data,3000UL,2);
  
#line 5228 
  list_add_tail(& rxb->list,& rxq->rx_free);
  
#line 5229 
  rxq->free_count += 1U;
  ldv_55315: 
#line 5230 
  ;
  
#line 5210 
  tmp_0 = list_empty((struct list_head const *)(& rxq->rx_used));
  
#line 5210 
  if (tmp_0 == 0) 
#line 5212 
                  goto ldv_55314; else 
#line 5215 
                                       goto ldv_55313;
  ldv_55313: 
#line 5216 
  ;
  
#line 5231 
  ldv_spin_unlock_irqrestore_152(& rxq->lock,flags);
  
#line 5233 
  ipw_rx_queue_restock(priv);
  
#line 5234 
  return;
}


#line 5236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_bg_rx_queue_replenish(struct work_struct *work)
{
  struct ipw_priv *tmp;
  {
    
#line 5239 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 5239 
    tmp = (struct ipw_priv *)__mptr + 18446744073709547328U;
  }
  
#line 5238 
  struct ipw_priv *priv = tmp;
  
#line 5240 
  ldv_mutex_lock_153(& priv->mutex);
  
#line 5241 
  ipw_rx_queue_replenish((void *)priv);
  
#line 5242 
  ldv_mutex_unlock_154(& priv->mutex);
  
#line 5243 
  return;
}


#line 5250  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_rx_queue_free(struct ipw_priv *priv, struct ipw_rx_queue *rxq)
{
  int i;
  
#line 5254 
  if (rxq == (struct ipw_rx_queue *)0) 
#line 5255 
                                       goto return_label; else ;
  
#line 5257 
  i = 0;
  
#line 5257 
  goto ldv_55328;
  ldv_55327: 
#line 5258 
  ;
  
#line 5258 
  if (rxq->pool[i].skb != (struct sk_buff *)0) {
    
#line 5259 
    pci_unmap_single(priv->pci_dev,rxq->pool[i].dma_addr,3000UL,2);
    
#line 5261 
    consume_skb(rxq->pool[i].skb);
  }
  else ;
  
#line 5257 
  i += 1;
  ldv_55328: 
#line 5258 
  ;
  
#line 5257 
  if (i <= 63) 
#line 5259 
               goto ldv_55327; else 
#line 5262 
                                    goto ldv_55329;
  ldv_55329: 
#line 5263 
  ;
  
#line 5265 
  kfree((void const *)rxq);
  return_label: 
#line 5266 
                return;
}


#line 5268  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct ipw_rx_queue *ipw_rx_queue_alloc(struct ipw_priv *priv)
{
  struct ipw_rx_queue *__retres;
  struct ipw_rx_queue *rxq;
  int i;
  u32 tmp_0;
  
#line 5273 
  rxq = (struct ipw_rx_queue *)kzalloc(2424UL,208U);
  
#line 5274 
  if ((long)(rxq == (struct ipw_rx_queue *)0) != 0L) {
    
#line 5275 
    printk("\001");
    
#line 5276 
    __retres = (struct ipw_rx_queue *)0;
    
#line 5276 
    goto return_label;
  }
  else ;
  
#line 5278 
  spinlock_check(& rxq->lock);
  {
    struct lock_class_key __key;
    
#line 5278 
    __raw_spin_lock_init(& rxq->lock.__anonCompField_spinlock_18.rlock,"&(&rxq->lock)->rlock",& __key);
  }
  
#line 5279 
  INIT_LIST_HEAD(& rxq->rx_free);
  
#line 5280 
  INIT_LIST_HEAD(& rxq->rx_used);
  
#line 5283 
  i = 0;
  
#line 5283 
  goto ldv_55337;
  ldv_55336: 
#line 5284 
  ;
  
#line 5284 
  list_add_tail(& rxq->pool[i].list,& rxq->rx_used);
  
#line 5283 
  i += 1;
  ldv_55337: 
#line 5284 
  ;
  
#line 5283 
  if (i <= 63) 
#line 5285 
               goto ldv_55336; else 
#line 5288 
                                    goto ldv_55338;
  ldv_55338: 
#line 5289 
  ;
  
#line 5288 
  tmp_0 = 0U;
  
#line 5288 
  rxq->write = tmp_0;
  
#line 5288 
  rxq->read = tmp_0;
  
#line 5289 
  rxq->free_count = 0U;
  
#line 5291 
  __retres = rxq;
  return_label: 
#line 5291 
                return __retres;
}


#line 5294  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_is_rate_in_mask(struct ipw_priv *priv, int ieee_mode, u8 rate)
{
  int __retres;
  
#line 5296 
  rate = (unsigned char)((unsigned int)rate & 127U);
  
#line 5297 
  if (ieee_mode == 1) 
    
#line 5298 
    switch ((int)rate) {
      case 12: 
#line 5299 
      ;
      
#line 5301 
      __retres = ((int)priv->rates_mask >> 4) & 1;
      
#line 5301 
      goto return_label;
      case 18: 
#line 5302 
      ;
      
#line 5304 
      __retres = ((int)priv->rates_mask >> 5) & 1;
      
#line 5304 
      goto return_label;
      case 24: 
#line 5305 
      ;
      
#line 5307 
      __retres = ((int)priv->rates_mask >> 6) & 1;
      
#line 5307 
      goto return_label;
      case 36: 
#line 5308 
      ;
      
#line 5310 
      __retres = ((int)priv->rates_mask >> 7) & 1;
      
#line 5310 
      goto return_label;
      case 48: 
#line 5311 
      ;
      
#line 5313 
      __retres = ((int)priv->rates_mask >> 8) & 1;
      
#line 5313 
      goto return_label;
      case 72: 
#line 5314 
      ;
      
#line 5316 
      __retres = ((int)priv->rates_mask >> 9) & 1;
      
#line 5316 
      goto return_label;
      case 96: 
#line 5317 
      ;
      
#line 5319 
      __retres = ((int)priv->rates_mask >> 10) & 1;
      
#line 5319 
      goto return_label;
      case 108: 
#line 5320 
      ;
      
#line 5322 
      __retres = ((int)priv->rates_mask >> 11) & 1;
      
#line 5322 
      goto return_label;
      default: 
#line 5323 
      ;
      
#line 5324 
      __retres = 0;
      
#line 5324 
      goto return_label;
    }
  else ;
  
#line 5329 
  switch ((int)rate) {
    case 2: 
#line 5330 
    ;
    
#line 5331 
    __retres = (int)priv->rates_mask & 1;
    
#line 5331 
    goto return_label;
    case 4: 
#line 5332 
    ;
    
#line 5333 
    __retres = ((int)priv->rates_mask >> 1) & 1;
    
#line 5333 
    goto return_label;
    case 11: 
#line 5334 
    ;
    
#line 5335 
    __retres = ((int)priv->rates_mask >> 2) & 1;
    
#line 5335 
    goto return_label;
    case 22: 
#line 5336 
    ;
    
#line 5337 
    __retres = ((int)priv->rates_mask >> 3) & 1;
    
#line 5337 
    goto return_label;
  }
  
#line 5341 
  if (ieee_mode == 2) {
    
#line 5342 
    __retres = 0;
    
#line 5342 
    goto return_label;
  }
  else ;
  
#line 5345 
  switch ((int)rate) {
    case 12: 
#line 5346 
    ;
    
#line 5347 
    __retres = ((int)priv->rates_mask >> 4) & 1;
    
#line 5347 
    goto return_label;
    case 18: 
#line 5348 
    ;
    
#line 5349 
    __retres = ((int)priv->rates_mask >> 5) & 1;
    
#line 5349 
    goto return_label;
    case 24: 
#line 5350 
    ;
    
#line 5351 
    __retres = ((int)priv->rates_mask >> 6) & 1;
    
#line 5351 
    goto return_label;
    case 36: 
#line 5352 
    ;
    
#line 5353 
    __retres = ((int)priv->rates_mask >> 7) & 1;
    
#line 5353 
    goto return_label;
    case 48: 
#line 5354 
    ;
    
#line 5355 
    __retres = ((int)priv->rates_mask >> 8) & 1;
    
#line 5355 
    goto return_label;
    case 72: 
#line 5356 
    ;
    
#line 5357 
    __retres = ((int)priv->rates_mask >> 9) & 1;
    
#line 5357 
    goto return_label;
    case 96: 
#line 5358 
    ;
    
#line 5359 
    __retres = ((int)priv->rates_mask >> 10) & 1;
    
#line 5359 
    goto return_label;
    case 108: 
#line 5360 
    ;
    
#line 5361 
    __retres = ((int)priv->rates_mask >> 11) & 1;
    
#line 5361 
    goto return_label;
  }
  
#line 5364 
  __retres = 0;
  return_label: 
#line 5364 
                return __retres;
}


#line 5367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_compatible_rates(struct ipw_priv *priv, struct libipw_network const *network, struct ipw_supported_rates *rates)
{
  int __retres;
  int num_rates;
  int i;
  int tmp_0;
  int tmp_6;
  u8 tmp_7;
  int tmp_9;
  int tmp_15;
  u8 tmp_16;
  
#line 5373 
  memset((void *)rates,0,16UL);
  {
    int tmp;
    
#line 5374 
    u8 const _min1 = network->rates_len;
    
#line 5374 
    unsigned char _min2 = (unsigned char)12U;
    
#line 5374 
    if ((int)_min1 < (int)_min2) 
#line 5374 
                                 tmp = (int)_min1; else 
#line 5374 
                                                        tmp = (int)_min2;
    
#line 5374 
    tmp_0 = tmp;
  }
  
#line 5374 
  num_rates = tmp_0;
  
#line 5375 
  rates->num_rates = (unsigned char)0U;
  
#line 5376 
  i = 0;
  
#line 5376 
  goto ldv_55378;
  ldv_55377: 
#line 5377 
  ;
  
#line 5377 
  tmp_6 = ipw_is_rate_in_mask(priv,(int)network->mode,(unsigned char)((int)network->rates[i]));
  
#line 5377 
  if (tmp_6 == 0) {
    
#line 5380 
    if ((int)network->rates[i] < 0) {
      u8 tmp_3;
      
#line 5381 
      if ((ipw_debug_level & 2048U) != 0U) {
        int tmp_2;
        int tmp_1;
        
#line 5381 
        ;
        
#line 5381 
        tmp_1 = preempt_count();
        
#line 5381 
        if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 5381 
                                                       tmp_2 = 73; else 
                                                                    
#line 5381 
                                                                    tmp_2 = 85;
        
#line 5381 
        printk("\001",tmp_2,"ipw_compatible_rates",(int)network->rates[i]);
      }
      else ;
      
#line 5384 
      tmp_3 = rates->num_rates;
      
#line 5384 
      rates->num_rates = (u8)((int)rates->num_rates + 1);
      
#line 5384 
      rates->supported_rates[(int)tmp_3] = network->rates[i];
      
#line 5386 
      goto ldv_55376;
    }
    else ;
    
#line 5389 
    if ((ipw_debug_level & 2048U) != 0U) {
      int tmp_5;
      int tmp_4;
      
#line 5389 
      ;
      
#line 5389 
      ;
      
#line 5389 
      tmp_4 = preempt_count();
      
#line 5389 
      if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
#line 5389 
                                                     tmp_5 = 73; else 
                                                                   
#line 5389 
                                                                   tmp_5 = 85;
      
#line 5389 
      printk("\001",tmp_5,"ipw_compatible_rates",(int)network->rates[i],(int)priv->rates_mask);
    }
    else ;
    
#line 5391 
    goto ldv_55376;
  }
  else ;
  
#line 5394 
  tmp_7 = rates->num_rates;
  
#line 5394 
  rates->num_rates = (u8)((int)rates->num_rates + 1);
  
#line 5394 
  rates->supported_rates[(int)tmp_7] = network->rates[i];
  ldv_55376: 
#line 5395 
  ;
  
#line 5376 
  i += 1;
  ldv_55378: 
#line 5377 
  ;
  
#line 5376 
  if (i < num_rates) 
#line 5378 
                     goto ldv_55377; else 
#line 5381 
                                          goto ldv_55379;
  ldv_55379: 
#line 5382 
  ;
  {
    int tmp_8;
    
#line 5397 
    u8 const _min1_0 = network->rates_ex_len;
    
#line 5397 
    unsigned char _min2_0 = (unsigned char)(12U - (unsigned int)((unsigned char)num_rates));
    
#line 5397 
    if ((int)_min1_0 < (int)_min2_0) 
#line 5397 
                                     tmp_8 = (int)_min1_0; else 
#line 5397 
                                                                tmp_8 = (int)_min2_0;
    
#line 5397 
    tmp_9 = tmp_8;
  }
  
#line 5397 
  num_rates = tmp_9;
  
#line 5399 
  i = 0;
  
#line 5399 
  goto ldv_55385;
  ldv_55384: 
#line 5400 
  ;
  
#line 5400 
  tmp_15 = ipw_is_rate_in_mask(priv,(int)network->mode,(unsigned char)((int)network->rates_ex[i]));
  
#line 5400 
  if (tmp_15 == 0) {
    
#line 5402 
    if ((int)network->rates_ex[i] < 0) {
      u8 tmp_12;
      
#line 5403 
      if ((ipw_debug_level & 2048U) != 0U) {
        int tmp_11;
        int tmp_10;
        
#line 5403 
        ;
        
#line 5403 
        tmp_10 = preempt_count();
        
#line 5403 
        if (((unsigned long)tmp_10 & 2096896UL) != 0UL) 
#line 5403 
                                                        tmp_11 = 73; else 
                                                                    
#line 5403 
                                                                    tmp_11 = 85;
        
#line 5403 
        printk("\001",tmp_11,"ipw_compatible_rates",(int)network->rates_ex[i]);
      }
      else ;
      
#line 5406 
      tmp_12 = rates->num_rates;
      
#line 5406 
      rates->num_rates = (u8)((int)rates->num_rates + 1);
      
#line 5406 
      rates->supported_rates[(int)tmp_12] = network->rates[i];
      
#line 5408 
      goto ldv_55383;
    }
    else ;
    
#line 5411 
    if ((ipw_debug_level & 2048U) != 0U) {
      int tmp_14;
      int tmp_13;
      
#line 5411 
      ;
      
#line 5411 
      ;
      
#line 5411 
      tmp_13 = preempt_count();
      
#line 5411 
      if (((unsigned long)tmp_13 & 2096896UL) != 0UL) 
#line 5411 
                                                      tmp_14 = 73; else 
                                                                    
#line 5411 
                                                                    tmp_14 = 85;
      
#line 5411 
      printk("\001",tmp_14,"ipw_compatible_rates",(int)network->rates_ex[i],(int)priv->rates_mask);
    }
    else ;
    
#line 5413 
    goto ldv_55383;
  }
  else ;
  
#line 5416 
  tmp_16 = rates->num_rates;
  
#line 5416 
  rates->num_rates = (u8)((int)rates->num_rates + 1);
  
#line 5416 
  rates->supported_rates[(int)tmp_16] = network->rates_ex[i];
  ldv_55383: 
#line 5418 
  ;
  
#line 5399 
  i += 1;
  ldv_55385: 
#line 5400 
  ;
  
#line 5399 
  if (i < num_rates) 
#line 5401 
                     goto ldv_55384; else 
#line 5404 
                                          goto ldv_55386;
  ldv_55386: 
#line 5405 
  ;
  
#line 5420 
  __retres = 1;
  
#line 5420 
  return __retres;
}


#line 5423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_copy_rates(struct ipw_supported_rates *dest, struct ipw_supported_rates const *src)
{
  u8 i;
  
#line 5427 
  i = (unsigned char)0U;
  
#line 5427 
  goto ldv_55393;
  ldv_55392: 
#line 5428 
  ;
  
#line 5428 
  dest->supported_rates[(int)i] = src->supported_rates[(int)i];
  
#line 5427 
  i = (u8)((int)i + 1);
  ldv_55393: 
#line 5428 
  ;
  
#line 5427 
  if ((int)src->num_rates > (int)i) 
#line 5429 
                                    goto ldv_55392; else 
#line 5432 
                                                         goto ldv_55394;
  ldv_55394: 
#line 5433 
  ;
  
#line 5429 
  dest->num_rates = src->num_rates;
  
#line 5430 
  return;
}


#line 5435  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_add_cck_scan_rates(struct ipw_supported_rates *rates, u8 modulation, u32 rate_mask)
{
  unsigned int tmp;
  
#line 5438 
  if ((unsigned int)modulation == 2U) 
#line 5438 
                                      tmp = 128U; else 
#line 5438 
                                                       tmp = 0U;
  
#line 5438 
  u8 basic_mask = (unsigned char)tmp;
  
#line 5441 
  if ((rate_mask & 1U) != 0U) {
    u8 tmp_0;
    
#line 5442 
    tmp_0 = rates->num_rates;
    
#line 5442 
    rates->num_rates = (u8)((int)rates->num_rates + 1);
    
#line 5442 
    rates->supported_rates[(int)tmp_0] = (unsigned char)130U;
  }
  else ;
  
#line 5445 
  if ((rate_mask & 2U) != 0U) {
    u8 tmp_1;
    
#line 5446 
    tmp_1 = rates->num_rates;
    
#line 5446 
    rates->num_rates = (u8)((int)rates->num_rates + 1);
    
#line 5446 
    rates->supported_rates[(int)tmp_1] = (unsigned char)132U;
  }
  else ;
  
#line 5449 
  if ((rate_mask & 4U) != 0U) {
    u8 tmp_2;
    
#line 5450 
    tmp_2 = rates->num_rates;
    
#line 5450 
    rates->num_rates = (u8)((int)rates->num_rates + 1);
    
#line 5450 
    rates->supported_rates[(int)tmp_2] = (unsigned char)((unsigned int)basic_mask | 11U);
  }
  else ;
  
#line 5453 
  if ((rate_mask & 8U) != 0U) {
    u8 tmp_3;
    
#line 5454 
    tmp_3 = rates->num_rates;
    
#line 5454 
    rates->num_rates = (u8)((int)rates->num_rates + 1);
    
#line 5454 
    rates->supported_rates[(int)tmp_3] = (unsigned char)((unsigned int)basic_mask | 22U);
  }
  else ;
  
#line 5455 
  return;
}


#line 5458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_add_ofdm_scan_rates(struct ipw_supported_rates *rates, u8 modulation, u32 rate_mask)
{
  unsigned int tmp;
  
#line 5461 
  if ((unsigned int)modulation == 2U) 
#line 5461 
                                      tmp = 128U; else 
#line 5461 
                                                       tmp = 0U;
  
#line 5461 
  u8 basic_mask = (unsigned char)tmp;
  
#line 5464 
  if ((rate_mask & 16U) != 0U) {
    u8 tmp_0;
    
#line 5465 
    tmp_0 = rates->num_rates;
    
#line 5465 
    rates->num_rates = (u8)((int)rates->num_rates + 1);
    
#line 5465 
    rates->supported_rates[(int)tmp_0] = (unsigned char)((unsigned int)basic_mask | 12U);
  }
  else ;
  
#line 5468 
  if ((rate_mask & 32U) != 0U) {
    u8 tmp_1;
    
#line 5469 
    tmp_1 = rates->num_rates;
    
#line 5469 
    rates->num_rates = (u8)((int)rates->num_rates + 1);
    
#line 5469 
    rates->supported_rates[(int)tmp_1] = (unsigned char)18U;
  }
  else ;
  
#line 5472 
  if ((rate_mask & 64U) != 0U) {
    u8 tmp_2;
    
#line 5473 
    tmp_2 = rates->num_rates;
    
#line 5473 
    rates->num_rates = (u8)((int)rates->num_rates + 1);
    
#line 5473 
    rates->supported_rates[(int)tmp_2] = (unsigned char)((unsigned int)basic_mask | 24U);
  }
  else ;
  
#line 5476 
  if ((rate_mask & 128U) != 0U) {
    u8 tmp_3;
    
#line 5477 
    tmp_3 = rates->num_rates;
    
#line 5477 
    rates->num_rates = (u8)((int)rates->num_rates + 1);
    
#line 5477 
    rates->supported_rates[(int)tmp_3] = (unsigned char)36U;
  }
  else ;
  
#line 5480 
  if ((rate_mask & 256U) != 0U) {
    u8 tmp_4;
    
#line 5481 
    tmp_4 = rates->num_rates;
    
#line 5481 
    rates->num_rates = (u8)((int)rates->num_rates + 1);
    
#line 5481 
    rates->supported_rates[(int)tmp_4] = (unsigned char)((unsigned int)basic_mask | 48U);
  }
  else ;
  
#line 5484 
  if ((rate_mask & 512U) != 0U) {
    u8 tmp_5;
    
#line 5485 
    tmp_5 = rates->num_rates;
    
#line 5485 
    rates->num_rates = (u8)((int)rates->num_rates + 1);
    
#line 5485 
    rates->supported_rates[(int)tmp_5] = (unsigned char)72U;
  }
  else ;
  
#line 5488 
  if ((rate_mask & 1024U) != 0U) {
    u8 tmp_6;
    
#line 5489 
    tmp_6 = rates->num_rates;
    
#line 5489 
    rates->num_rates = (u8)((int)rates->num_rates + 1);
    
#line 5489 
    rates->supported_rates[(int)tmp_6] = (unsigned char)96U;
  }
  else ;
  
#line 5492 
  if ((rate_mask & 2048U) != 0U) {
    u8 tmp_7;
    
#line 5493 
    tmp_7 = rates->num_rates;
    
#line 5493 
    rates->num_rates = (u8)((int)rates->num_rates + 1);
    
#line 5493 
    rates->supported_rates[(int)tmp_7] = (unsigned char)108U;
  }
  else ;
  
#line 5494 
  return;
}


#line 5502  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_find_adhoc_network(struct ipw_priv *priv, struct ipw_network_match *match, struct libipw_network *network, int roaming_0)
{
  int __retres;
  struct ipw_supported_rates rates;
  bool tmp_26;
  int tmp_29;
  int tmp_32;
  
#line 5511 
  if ((priv->ieee)->iw_mode == 1 && ((int)network->capability & 2) == 0) {
    
#line 5513 
    if ((ipw_debug_level & 1073741824U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 5513 
      ;
      
#line 5513 
      ;
      
#line 5513 
      ;
      
#line 5513 
      tmp = preempt_count();
      
#line 5513 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 5513 
                                                   tmp_0 = 73; else 
#line 5513 
                                                                    tmp_0 = 85;
      
#line 5513 
      printk("\001",tmp_0,"ipw_find_adhoc_network",(int)network->ssid_len,(u8 *)(& network->ssid),(u8 *)(& network->bssid));
    }
    else ;
    
#line 5516 
    __retres = 0;
    
#line 5516 
    goto return_label;
  }
  else ;
  
#line 5519 
  if ((long)(roaming_0 != 0) != 0L) {
    
#line 5522 
    if ((int)network->ssid_len != (int)(match->network)->ssid_len) 
#line 5522 
                                                                   goto _LOR;
    else {
      int tmp_3;
      
#line 5522 
      tmp_3 = memcmp((void const *)(& network->ssid),(void const *)(& (match->network)->ssid),(unsigned long)network->ssid_len);
      
#line 5522 
      if (tmp_3 != 0) {
        _LOR: {
                
#line 5525 
                if ((ipw_debug_level & 1073741824U) != 0U) {
                  int tmp_2;
                  int tmp_1;
                  
#line 5525 
                  ;
                  
#line 5525 
                  ;
                  
#line 5525 
                  ;
                  
#line 5525 
                  tmp_1 = preempt_count();
                  
#line 5525 
                  if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 5525 
                                                                 tmp_2 = 73; else 
                                                                    
#line 5525 
                                                                    tmp_2 = 85;
                  
#line 5525 
                  printk("\001",tmp_2,"ipw_find_adhoc_network",(int)network->ssid_len,(u8 *)(& network->ssid),(u8 *)(& network->bssid));
                }
                else ;
                
#line 5528 
                __retres = 0;
                
#line 5528 
                goto return_label;
              }
      }
      else ;
    }
  }
  else 
    
#line 5533 
    if ((priv->config & 2U) != 0U) {
      
#line 5533 
      if ((int)network->ssid_len != (int)priv->essid_len) 
#line 5533 
                                                          goto _LOR_0;
      else {
        int tmp_8;
        int tmp_7;
        {
          int tmp_6;
          
#line 5536 
          u8 _min1 = network->ssid_len;
          
#line 5536 
          u8 _min2 = priv->essid_len;
          
#line 5536 
          if ((int)_min1 < (int)_min2) 
#line 5536 
                                       tmp_6 = (int)_min1; else 
#line 5536 
                                                                tmp_6 = (int)_min2;
          
#line 5536 
          tmp_7 = tmp_6;
        }
        
#line 5534 
        ;
        
#line 5534 
        ;
        
#line 5534 
        tmp_8 = memcmp((void const *)(& network->ssid),(void const *)(& priv->essid),(unsigned long)tmp_7);
        
#line 5534 
        if (tmp_8 != 0) {
          _LOR_0: {
                    
#line 5537 
                    if ((ipw_debug_level & 1073741824U) != 0U) {
                      int tmp_5;
                      int tmp_4;
                      
#line 5537 
                      ;
                      
#line 5537 
                      ;
                      
#line 5537 
                      ;
                      
#line 5537 
                      ;
                      
#line 5537 
                      ;
                      
#line 5537 
                      tmp_4 = preempt_count();
                      
#line 5537 
                      if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
                        
#line 5537 
                        tmp_5 = 73; else 
#line 5537 
                                         tmp_5 = 85;
                      
#line 5537 
                      printk("\001",tmp_5,"ipw_find_adhoc_network",(int)network->ssid_len,(u8 *)(& network->ssid),(u8 *)(& network->bssid),(int)priv->essid_len,(u8 *)(& priv->essid));
                    }
                    else ;
                    
#line 5541 
                    __retres = 0;
                    
#line 5541 
                    goto return_label;
                  }
        }
        else ;
      }
    }
    else ;
  
#line 5548 
  if (network->time_stamp[0] < (match->network)->time_stamp[0]) {
    
#line 5549 
    if ((ipw_debug_level & 1073741824U) != 0U) {
      int tmp_10;
      int tmp_9;
      
#line 5549 
      ;
      
#line 5549 
      ;
      
#line 5549 
      tmp_9 = preempt_count();
      
#line 5549 
      if (((unsigned long)tmp_9 & 2096896UL) != 0UL) 
#line 5549 
                                                     tmp_10 = 73; else 
                                                                    
#line 5549 
                                                                    tmp_10 = 85;
      
#line 5549 
      printk("\001",tmp_10,"ipw_find_adhoc_network",(int)(match->network)->ssid_len,(u8 *)(& (match->network)->ssid));
    }
    else ;
    
#line 5551 
    __retres = 0;
    
#line 5551 
    goto return_label;
  }
  else 
    
#line 5552 
    if (network->time_stamp[1] < (match->network)->time_stamp[1]) {
      
#line 5553 
      if ((ipw_debug_level & 1073741824U) != 0U) {
        int tmp_12;
        int tmp_11;
        
#line 5553 
        ;
        
#line 5553 
        ;
        
#line 5553 
        tmp_11 = preempt_count();
        
#line 5553 
        if (((unsigned long)tmp_11 & 2096896UL) != 0UL) 
#line 5553 
                                                        tmp_12 = 73; else 
                                                                    
#line 5553 
                                                                    tmp_12 = 85;
        
#line 5553 
        printk("\001",tmp_12,"ipw_find_adhoc_network",(int)(match->network)->ssid_len,(u8 *)(& (match->network)->ssid));
      }
      else ;
      
#line 5555 
      __retres = 0;
      
#line 5555 
      goto return_label;
    }
    else ;
  
#line 5559 
  if ((priv->ieee)->scan_age != 0) {
    int tmp_16;
    {
      unsigned long __dummy;
      unsigned long volatile __dummy2;
      
#line 5560 
      tmp_16 = 1;
    }
    
#line 5559 
    if (tmp_16 != 0) {
      int tmp_17;
      {
        unsigned long __dummy_0;
        unsigned long __dummy2_0;
        
#line 5560 
        tmp_17 = 1;
      }
      
#line 5560 
      if (tmp_17 != 0) {
        
#line 5560 
        if ((long)((network->last_scanned + (unsigned long)(priv->ieee)->scan_age) - jiffies) < 0L) {
          
#line 5561 
          if ((ipw_debug_level & 1073741824U) != 0U) {
            unsigned int tmp_13;
            int tmp_15;
            int tmp_14;
            
#line 5561 
            tmp_13 = jiffies_to_msecs(jiffies - network->last_scanned);
            
#line 5561 
            ;
            
#line 5561 
            ;
            
#line 5561 
            ;
            
#line 5561 
            tmp_14 = preempt_count();
            
#line 5561 
            if (((unsigned long)tmp_14 & 2096896UL) != 0UL) 
#line 5561 
                                                            tmp_15 = 73; else 
                                                                    
#line 5561 
                                                                    tmp_15 = 85;
            
#line 5561 
            printk("\001",tmp_15,"ipw_find_adhoc_network",(int)network->ssid_len,(u8 *)(& network->ssid),(u8 *)(& network->bssid),tmp_13);
          }
          else ;
          
#line 5566 
          __retres = 0;
          
#line 5566 
          goto return_label;
        }
        else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 5569 
  if ((priv->config & 1U) != 0U && (int)network->channel != (int)priv->channel) {
    
#line 5571 
    if ((ipw_debug_level & 1073741824U) != 0U) {
      int tmp_19;
      int tmp_18;
      
#line 5571 
      ;
      
#line 5571 
      ;
      
#line 5571 
      ;
      
#line 5571 
      ;
      
#line 5571 
      ;
      
#line 5571 
      tmp_18 = preempt_count();
      
#line 5571 
      if (((unsigned long)tmp_18 & 2096896UL) != 0UL) 
#line 5571 
                                                      tmp_19 = 73; else 
                                                                    
#line 5571 
                                                                    tmp_19 = 85;
      
#line 5571 
      printk("\001",tmp_19,"ipw_find_adhoc_network",(int)network->ssid_len,(u8 *)(& network->ssid),(u8 *)(& network->bssid),(int)network->channel,(int)priv->channel);
    }
    else ;
    
#line 5575 
    __retres = 0;
    
#line 5575 
    goto return_label;
  }
  else ;
  
#line 5579 
  if ((((int)(priv->capability >> 1) ^ ((int)network->capability >> 4)) & 1) != 0) {
    
#line 5581 
    if ((ipw_debug_level & 1073741824U) != 0U) {
      char *tmp_20;
      char *tmp_21;
      int tmp_23;
      int tmp_22;
      
#line 5581 
      if (((int)network->capability & 16) != 0) 
#line 5581 
                                                tmp_20 = (char *)"on"; else 
                                                                    
#line 5581 
                                                                    tmp_20 = (char *)"off";
      
#line 5581 
      if ((priv->capability & 2U) != 0U) 
#line 5581 
                                         tmp_21 = (char *)"on"; else 
                                                                  
#line 5581 
                                                                  tmp_21 = (char *)"off";
      
#line 5581 
      ;
      
#line 5581 
      ;
      
#line 5581 
      ;
      
#line 5581 
      tmp_22 = preempt_count();
      
#line 5581 
      if (((unsigned long)tmp_22 & 2096896UL) != 0UL) 
#line 5581 
                                                      tmp_23 = 73; else 
                                                                    
#line 5581 
                                                                    tmp_23 = 85;
      
#line 5581 
      printk("\001",tmp_23,"ipw_find_adhoc_network",(int)network->ssid_len,(u8 *)(& network->ssid),(u8 *)(& network->bssid),tmp_21,tmp_20);
    }
    else ;
    
#line 5589 
    __retres = 0;
    
#line 5589 
    goto return_label;
  }
  else ;
  
#line 5592 
  tmp_26 = ether_addr_equal((u8 const *)(& network->bssid),(u8 const *)(& priv->bssid));
  
#line 5592 
  if ((int)tmp_26 != 0) {
    
#line 5593 
    if ((ipw_debug_level & 1073741824U) != 0U) {
      int tmp_25;
      int tmp_24;
      
#line 5593 
      ;
      
#line 5593 
      ;
      
#line 5593 
      ;
      
#line 5593 
      ;
      
#line 5593 
      tmp_24 = preempt_count();
      
#line 5593 
      if (((unsigned long)tmp_24 & 2096896UL) != 0UL) 
#line 5593 
                                                      tmp_25 = 73; else 
                                                                    
#line 5593 
                                                                    tmp_25 = 85;
      
#line 5593 
      printk("\001",tmp_25,"ipw_find_adhoc_network",(int)network->ssid_len,(u8 *)(& network->ssid),(u8 *)(& network->bssid),(u8 *)(& priv->bssid));
    }
    else ;
    
#line 5596 
    __retres = 0;
    
#line 5596 
    goto return_label;
  }
  else ;
  
#line 5600 
  tmp_29 = libipw_is_valid_mode(priv->ieee,(int)network->mode);
  
#line 5600 
  if (tmp_29 == 0) {
    
#line 5601 
    if ((ipw_debug_level & 1073741824U) != 0U) {
      int tmp_28;
      int tmp_27;
      
#line 5601 
      ;
      
#line 5601 
      ;
      
#line 5601 
      ;
      
#line 5601 
      tmp_27 = preempt_count();
      
#line 5601 
      if (((unsigned long)tmp_27 & 2096896UL) != 0UL) 
#line 5601 
                                                      tmp_28 = 73; else 
                                                                    
#line 5601 
                                                                    tmp_28 = 85;
      
#line 5601 
      printk("\001",tmp_28,"ipw_find_adhoc_network",(int)network->ssid_len,(u8 *)(& network->ssid),(u8 *)(& network->bssid));
    }
    else ;
    
#line 5604 
    __retres = 0;
    
#line 5604 
    goto return_label;
  }
  else ;
  
#line 5609 
  tmp_32 = ipw_compatible_rates(priv,(struct libipw_network const *)network,& rates);
  
#line 5609 
  if (tmp_32 == 0) {
    
#line 5610 
    if ((ipw_debug_level & 1073741824U) != 0U) {
      int tmp_31;
      int tmp_30;
      
#line 5610 
      ;
      
#line 5610 
      ;
      
#line 5610 
      ;
      
#line 5610 
      tmp_30 = preempt_count();
      
#line 5610 
      if (((unsigned long)tmp_30 & 2096896UL) != 0UL) 
#line 5610 
                                                      tmp_31 = 73; else 
                                                                    
#line 5610 
                                                                    tmp_31 = 85;
      
#line 5610 
      printk("\001",tmp_31,"ipw_find_adhoc_network",(int)network->ssid_len,(u8 *)(& network->ssid),(u8 *)(& network->bssid));
    }
    else ;
    
#line 5613 
    __retres = 0;
    
#line 5613 
    goto return_label;
  }
  else ;
  
#line 5616 
  if ((unsigned int)rates.num_rates == 0U) {
    
#line 5617 
    if ((ipw_debug_level & 1073741824U) != 0U) {
      int tmp_34;
      int tmp_33;
      
#line 5617 
      ;
      
#line 5617 
      ;
      
#line 5617 
      ;
      
#line 5617 
      tmp_33 = preempt_count();
      
#line 5617 
      if (((unsigned long)tmp_33 & 2096896UL) != 0UL) 
#line 5617 
                                                      tmp_34 = 73; else 
                                                                    
#line 5617 
                                                                    tmp_34 = 85;
      
#line 5617 
      printk("\001",tmp_34,"ipw_find_adhoc_network",(int)network->ssid_len,(u8 *)(& network->ssid),(u8 *)(& network->bssid));
    }
    else ;
    
#line 5620 
    __retres = 0;
    
#line 5620 
    goto return_label;
  }
  else ;
  
#line 5628 
  ipw_copy_rates(& match->rates,(struct ipw_supported_rates const *)(& rates));
  
#line 5629 
  match->network = network;
  
#line 5630 
  if ((ipw_debug_level & 1073741824U) != 0U) {
    int tmp_36;
    int tmp_35;
    
#line 5630 
    ;
    
#line 5630 
    ;
    
#line 5630 
    ;
    
#line 5630 
    tmp_35 = preempt_count();
    
#line 5630 
    if (((unsigned long)tmp_35 & 2096896UL) != 0UL) 
#line 5630 
                                                    tmp_36 = 73; else 
                                                                   
#line 5630 
                                                                   tmp_36 = 85;
    
#line 5630 
    printk("\001",tmp_36,"ipw_find_adhoc_network",(int)network->ssid_len,(u8 *)(& network->ssid),(u8 *)(& network->bssid));
  }
  else ;
  
#line 5633 
  __retres = 1;
  return_label: 
#line 5633 
                return __retres;
}


#line 5636  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_merge_adhoc_network(struct work_struct *work)
{
  struct ipw_priv *tmp;
  {
    
#line 5639 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 5639 
    tmp = (struct ipw_priv *)__mptr + 18446744073709544376U;
  }
  
#line 5638 
  struct ipw_priv *priv = tmp;
  
#line 5640 
  struct libipw_network *network = (struct libipw_network *)0;
  
#line 5641 
  struct ipw_network_match match = {.network = priv->assoc_network, .rates = {.ieee_mode = (unsigned char)0, .num_rates = (unsigned char)0, .purpose = (unsigned char)0, .reserved = (unsigned char)0, .supported_rates = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}}};
  
#line 5645 
  if ((priv->status & 128U) != 0U && (priv->ieee)->iw_mode == 1) {
    unsigned long flags;
    struct libipw_network *tmp_0;
    struct libipw_network *tmp_1;
    
#line 5651 
    ldv___ldv_spin_lock_155(& (priv->ieee)->lock);
    {
      
#line 5652 
      struct list_head const *__mptr_0 = (struct list_head const *)(priv->ieee)->network_list.next;
      
#line 5652 
      tmp_0 = (struct libipw_network *)__mptr_0 + 18446744073709551264U;
    }
    
#line 5652 
    network = tmp_0;
    
#line 5652 
    goto ldv_55441;
    ldv_55440: 
#line 5653 
    ;
    
#line 5653 
    if (priv->assoc_network != network) 
#line 5654 
                                        ipw_find_adhoc_network(priv,& match,network,1); else ;
    {
      
#line 5652 
      struct list_head const *__mptr_1 = (struct list_head const *)network->list.next;
      
#line 5652 
      tmp_1 = (struct libipw_network *)__mptr_1 + 18446744073709551264U;
    }
    
#line 5652 
    network = tmp_1;
    ldv_55441: 
#line 5654 
    ;
    
#line 5652 
    if (& network->list != & (priv->ieee)->network_list) 
#line 5654 
                                                         goto ldv_55440; else 
                                                                    
#line 5657 
                                                                    goto ldv_55442;
    ldv_55442: 
#line 5658 
    ;
    
#line 5657 
    ldv_spin_unlock_irqrestore_156(& (priv->ieee)->lock,flags);
    
#line 5659 
    if (match.network == priv->assoc_network) {
      
#line 5660 
      if ((ipw_debug_level & 1073741824U) != 0U) {
        int tmp_3;
        int tmp_2;
        
#line 5660 
        tmp_2 = preempt_count();
        
#line 5660 
        if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 5660 
                                                       tmp_3 = 73; else 
                                                                    
#line 5660 
                                                                    tmp_3 = 85;
        
#line 5660 
        printk("\001",tmp_3,"ipw_merge_adhoc_network");
      }
      else ;
      
#line 5662 
      goto return_label;
    }
    else ;
    
#line 5665 
    ldv_mutex_lock_157(& priv->mutex);
    
#line 5666 
    if ((priv->ieee)->iw_mode == 1) {
      
#line 5667 
      if ((ipw_debug_level & 1073741824U) != 0U) {
        int tmp_5;
        int tmp_4;
        
#line 5667 
        ;
        
#line 5667 
        ;
        
#line 5667 
        tmp_4 = preempt_count();
        
#line 5667 
        if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
#line 5667 
                                                       tmp_5 = 73; else 
                                                                    
#line 5667 
                                                                    tmp_5 = 85;
        
#line 5667 
        printk("\001",tmp_5,"ipw_merge_adhoc_network",(int)priv->essid_len,(u8 *)(& priv->essid));
      }
      else ;
      
#line 5669 
      ipw_remove_current_network(priv);
    }
    else ;
    
#line 5672 
    ipw_disassociate((void *)priv);
    
#line 5673 
    priv->assoc_network = match.network;
    
#line 5674 
    ldv_mutex_unlock_158(& priv->mutex);
    
#line 5675 
    goto return_label;
  }
  else ;
  return_label: 
#line 5677 
                return;
}


#line 5679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_best_network(struct ipw_priv *priv, struct ipw_network_match *match, struct libipw_network *network, int roaming_0)
{
  int __retres;
  struct ipw_supported_rates rates;
  int tmp_33;
  int tmp_36;
  int tmp_39;
  
#line 5687 
  if (((priv->ieee)->iw_mode == 2 && ((int)network->capability & 1) == 0) || ((priv->ieee)->iw_mode == 1 && ((int)network->capability & 2) == 0)) {
    
#line 5691 
    if ((ipw_debug_level & 4100U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 5691 
      ;
      
#line 5691 
      ;
      
#line 5691 
      ;
      
#line 5691 
      tmp = preempt_count();
      
#line 5691 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 5691 
                                                   tmp_0 = 73; else 
#line 5691 
                                                                    tmp_0 = 85;
      
#line 5691 
      printk("\001",tmp_0,"ipw_best_network",(int)network->ssid_len,(u8 *)(& network->ssid),(u8 *)(& network->bssid));
    }
    else ;
    
#line 5694 
    __retres = 0;
    
#line 5694 
    goto return_label;
  }
  else ;
  
#line 5697 
  if ((long)(roaming_0 != 0) != 0L) {
    
#line 5700 
    if ((int)network->ssid_len != (int)(match->network)->ssid_len) 
#line 5700 
                                                                   goto _LOR;
    else {
      int tmp_3;
      
#line 5700 
      tmp_3 = memcmp((void const *)(& network->ssid),(void const *)(& (match->network)->ssid),(unsigned long)network->ssid_len);
      
#line 5700 
      if (tmp_3 != 0) {
        _LOR: {
                
#line 5703 
                if ((ipw_debug_level & 4100U) != 0U) {
                  int tmp_2;
                  int tmp_1;
                  
#line 5703 
                  ;
                  
#line 5703 
                  ;
                  
#line 5703 
                  ;
                  
#line 5703 
                  tmp_1 = preempt_count();
                  
#line 5703 
                  if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 5703 
                                                                 tmp_2 = 73; else 
                                                                    
#line 5703 
                                                                    tmp_2 = 85;
                  
#line 5703 
                  printk("\001",tmp_2,"ipw_best_network",(int)network->ssid_len,(u8 *)(& network->ssid),(u8 *)(& network->bssid));
                }
                else ;
                
#line 5706 
                __retres = 0;
                
#line 5706 
                goto return_label;
              }
      }
      else ;
    }
  }
  else 
    
#line 5711 
    if ((priv->config & 2U) != 0U) {
      
#line 5711 
      if ((int)network->ssid_len != (int)priv->essid_len) 
#line 5711 
                                                          goto _LOR_0;
      else {
        int tmp_8;
        int tmp_7;
        {
          int tmp_6;
          
#line 5714 
          u8 _min1 = network->ssid_len;
          
#line 5714 
          u8 _min2 = priv->essid_len;
          
#line 5714 
          if ((int)_min1 < (int)_min2) 
#line 5714 
                                       tmp_6 = (int)_min1; else 
#line 5714 
                                                                tmp_6 = (int)_min2;
          
#line 5714 
          tmp_7 = tmp_6;
        }
        
#line 5712 
        ;
        
#line 5712 
        ;
        
#line 5712 
        tmp_8 = memcmp((void const *)(& network->ssid),(void const *)(& priv->essid),(unsigned long)tmp_7);
        
#line 5712 
        if (tmp_8 != 0) {
          _LOR_0: {
                    
#line 5715 
                    if ((ipw_debug_level & 4100U) != 0U) {
                      int tmp_5;
                      int tmp_4;
                      
#line 5715 
                      ;
                      
#line 5715 
                      ;
                      
#line 5715 
                      ;
                      
#line 5715 
                      ;
                      
#line 5715 
                      ;
                      
#line 5715 
                      tmp_4 = preempt_count();
                      
#line 5715 
                      if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
                        
#line 5715 
                        tmp_5 = 73; else 
#line 5715 
                                         tmp_5 = 85;
                      
#line 5715 
                      printk("\001",tmp_5,"ipw_best_network",(int)network->ssid_len,(u8 *)(& network->ssid),(u8 *)(& network->bssid),(int)priv->essid_len,(u8 *)(& priv->essid));
                    }
                    else ;
                    
#line 5719 
                    __retres = 0;
                    
#line 5719 
                    goto return_label;
                  }
        }
        else ;
      }
    }
    else ;
  
#line 5725 
  if (match->network != (struct libipw_network *)0 && (int)(match->network)->stats.rssi > (int)network->stats.rssi) {
    
#line 5726 
    if ((ipw_debug_level & 4100U) != 0U) {
      int tmp_10;
      int tmp_9;
      
#line 5726 
      ;
      
#line 5726 
      ;
      
#line 5726 
      ;
      
#line 5726 
      ;
      
#line 5726 
      ;
      
#line 5726 
      ;
      
#line 5726 
      tmp_9 = preempt_count();
      
#line 5726 
      if (((unsigned long)tmp_9 & 2096896UL) != 0UL) 
#line 5726 
                                                     tmp_10 = 73; else 
                                                                    
#line 5726 
                                                                    tmp_10 = 85;
      
#line 5726 
      printk("\001",tmp_10,"ipw_best_network",(int)network->ssid_len,(u8 *)(& network->ssid),(u8 *)(& network->bssid),(int)(match->network)->ssid_len,(u8 *)(& (match->network)->ssid),(u8 *)(& (match->network)->bssid));
    }
    else ;
    
#line 5730 
    __retres = 0;
    
#line 5730 
    goto return_label;
  }
  else ;
  
#line 5735 
  if (network->last_associate != 0U) {
    int tmp_14;
    {
      unsigned long __dummy;
      unsigned long __dummy2;
      
#line 5736 
      tmp_14 = 1;
    }
    
#line 5735 
    if (tmp_14 != 0) {
      int tmp_15;
      {
        unsigned long __dummy_0;
        unsigned long volatile __dummy2_0;
        
#line 5736 
        tmp_15 = 1;
      }
      
#line 5736 
      if (tmp_15 != 0) {
        
#line 5736 
        if ((long)((jiffies - (unsigned long)network->last_associate) + 18446744073709550866UL) < 0L) {
          
#line 5737 
          if ((ipw_debug_level & 4100U) != 0U) {
            unsigned int tmp_11;
            int tmp_13;
            int tmp_12;
            
#line 5737 
            tmp_11 = jiffies_to_msecs(jiffies - (unsigned long)network->last_associate);
            
#line 5737 
            ;
            
#line 5737 
            ;
            
#line 5737 
            ;
            
#line 5737 
            tmp_12 = preempt_count();
            
#line 5737 
            if (((unsigned long)tmp_12 & 2096896UL) != 0UL) 
#line 5737 
                                                            tmp_13 = 73; else 
                                                                    
#line 5737 
                                                                    tmp_13 = 85;
            
#line 5737 
            printk("\001",tmp_13,"ipw_best_network",(int)network->ssid_len,(u8 *)(& network->ssid),(u8 *)(& network->bssid),tmp_11);
          }
          else ;
          
#line 5742 
          __retres = 0;
          
#line 5742 
          goto return_label;
        }
        else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 5746 
  if ((priv->ieee)->scan_age != 0) {
    int tmp_19;
    {
      unsigned long __dummy_1;
      unsigned long volatile __dummy2_1;
      
#line 5747 
      tmp_19 = 1;
    }
    
#line 5746 
    if (tmp_19 != 0) {
      int tmp_20;
      {
        unsigned long __dummy_2;
        unsigned long __dummy2_2;
        
#line 5747 
        tmp_20 = 1;
      }
      
#line 5747 
      if (tmp_20 != 0) {
        
#line 5747 
        if ((long)((network->last_scanned + (unsigned long)(priv->ieee)->scan_age) - jiffies) < 0L) {
          
#line 5748 
          if ((ipw_debug_level & 4100U) != 0U) {
            unsigned int tmp_16;
            int tmp_18;
            int tmp_17;
            
#line 5748 
            tmp_16 = jiffies_to_msecs(jiffies - network->last_scanned);
            
#line 5748 
            ;
            
#line 5748 
            ;
            
#line 5748 
            ;
            
#line 5748 
            tmp_17 = preempt_count();
            
#line 5748 
            if (((unsigned long)tmp_17 & 2096896UL) != 0UL) 
#line 5748 
                                                            tmp_18 = 73; else 
                                                                    
#line 5748 
                                                                    tmp_18 = 85;
            
#line 5748 
            printk("\001",tmp_18,"ipw_best_network",(int)network->ssid_len,(u8 *)(& network->ssid),(u8 *)(& network->bssid),tmp_16);
          }
          else ;
          
#line 5753 
          __retres = 0;
          
#line 5753 
          goto return_label;
        }
        else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 5756 
  if ((priv->config & 1U) != 0U && (int)network->channel != (int)priv->channel) {
    
#line 5758 
    if ((ipw_debug_level & 4100U) != 0U) {
      int tmp_22;
      int tmp_21;
      
#line 5758 
      ;
      
#line 5758 
      ;
      
#line 5758 
      ;
      
#line 5758 
      ;
      
#line 5758 
      ;
      
#line 5758 
      tmp_21 = preempt_count();
      
#line 5758 
      if (((unsigned long)tmp_21 & 2096896UL) != 0UL) 
#line 5758 
                                                      tmp_22 = 73; else 
                                                                    
#line 5758 
                                                                    tmp_22 = 85;
      
#line 5758 
      printk("\001",tmp_22,"ipw_best_network",(int)network->ssid_len,(u8 *)(& network->ssid),(u8 *)(& network->bssid),(int)network->channel,(int)priv->channel);
    }
    else ;
    
#line 5762 
    __retres = 0;
    
#line 5762 
    goto return_label;
  }
  else ;
  
#line 5766 
  if ((((int)(priv->capability >> 1) ^ ((int)network->capability >> 4)) & 1) != 0) {
    
#line 5768 
    if ((ipw_debug_level & 4100U) != 0U) {
      char *tmp_23;
      char *tmp_24;
      int tmp_26;
      int tmp_25;
      
#line 5768 
      if (((int)network->capability & 16) != 0) 
#line 5768 
                                                tmp_23 = (char *)"on"; else 
                                                                    
#line 5768 
                                                                    tmp_23 = (char *)"off";
      
#line 5768 
      if ((priv->capability & 2U) != 0U) 
#line 5768 
                                         tmp_24 = (char *)"on"; else 
                                                                  
#line 5768 
                                                                  tmp_24 = (char *)"off";
      
#line 5768 
      ;
      
#line 5768 
      ;
      
#line 5768 
      ;
      
#line 5768 
      tmp_25 = preempt_count();
      
#line 5768 
      if (((unsigned long)tmp_25 & 2096896UL) != 0UL) 
#line 5768 
                                                      tmp_26 = 73; else 
                                                                    
#line 5768 
                                                                    tmp_26 = 85;
      
#line 5768 
      printk("\001",tmp_26,"ipw_best_network",(int)network->ssid_len,(u8 *)(& network->ssid),(u8 *)(& network->bssid),tmp_24,tmp_23);
    }
    else ;
    
#line 5775 
    __retres = 0;
    
#line 5775 
    goto return_label;
  }
  else ;
  
#line 5778 
  if ((priv->config & 4U) != 0U) {
    int tmp_30;
    bool tmp_29;
    
#line 5779 
    tmp_29 = ether_addr_equal((u8 const *)(& network->bssid),(u8 const *)(& priv->bssid));
    
#line 5779 
    if (tmp_29) 
#line 5779 
                tmp_30 = 0; else 
#line 5779 
                                 tmp_30 = 1;
    
#line 5779 
    if (tmp_30) {
      
#line 5780 
      if ((ipw_debug_level & 4100U) != 0U) {
        int tmp_28;
        int tmp_27;
        
#line 5780 
        ;
        
#line 5780 
        ;
        
#line 5780 
        ;
        
#line 5780 
        ;
        
#line 5780 
        tmp_27 = preempt_count();
        
#line 5780 
        if (((unsigned long)tmp_27 & 2096896UL) != 0UL) 
#line 5780 
                                                        tmp_28 = 73; else 
                                                                    
#line 5780 
                                                                    tmp_28 = 85;
        
#line 5780 
        printk("\001",tmp_28,"ipw_best_network",(int)network->ssid_len,(u8 *)(& network->ssid),(u8 *)(& network->bssid),(u8 *)(& priv->bssid));
      }
      else ;
      
#line 5783 
      __retres = 0;
      
#line 5783 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 5787 
  tmp_33 = libipw_is_valid_mode(priv->ieee,(int)network->mode);
  
#line 5787 
  if (tmp_33 == 0) {
    
#line 5788 
    if ((ipw_debug_level & 4100U) != 0U) {
      int tmp_32;
      int tmp_31;
      
#line 5788 
      ;
      
#line 5788 
      ;
      
#line 5788 
      ;
      
#line 5788 
      tmp_31 = preempt_count();
      
#line 5788 
      if (((unsigned long)tmp_31 & 2096896UL) != 0UL) 
#line 5788 
                                                      tmp_32 = 73; else 
                                                                    
#line 5788 
                                                                    tmp_32 = 85;
      
#line 5788 
      printk("\001",tmp_32,"ipw_best_network",(int)network->ssid_len,(u8 *)(& network->ssid),(u8 *)(& network->bssid));
    }
    else ;
    
#line 5791 
    __retres = 0;
    
#line 5791 
    goto return_label;
  }
  else ;
  
#line 5795 
  tmp_36 = libipw_is_valid_channel(priv->ieee,(unsigned char)((int)network->channel));
  
#line 5795 
  if (tmp_36 == 0) {
    
#line 5796 
    if ((ipw_debug_level & 4100U) != 0U) {
      int tmp_35;
      int tmp_34;
      
#line 5796 
      ;
      
#line 5796 
      ;
      
#line 5796 
      ;
      
#line 5796 
      tmp_34 = preempt_count();
      
#line 5796 
      if (((unsigned long)tmp_34 & 2096896UL) != 0UL) 
#line 5796 
                                                      tmp_35 = 73; else 
                                                                    
#line 5796 
                                                                    tmp_35 = 85;
      
#line 5796 
      printk("\001",tmp_35,"ipw_best_network",(int)network->ssid_len,(u8 *)(& network->ssid),(u8 *)(& network->bssid));
    }
    else ;
    
#line 5799 
    __retres = 0;
    
#line 5799 
    goto return_label;
  }
  else ;
  
#line 5804 
  tmp_39 = ipw_compatible_rates(priv,(struct libipw_network const *)network,& rates);
  
#line 5804 
  if (tmp_39 == 0) {
    
#line 5805 
    if ((ipw_debug_level & 4100U) != 0U) {
      int tmp_38;
      int tmp_37;
      
#line 5805 
      ;
      
#line 5805 
      ;
      
#line 5805 
      ;
      
#line 5805 
      tmp_37 = preempt_count();
      
#line 5805 
      if (((unsigned long)tmp_37 & 2096896UL) != 0UL) 
#line 5805 
                                                      tmp_38 = 73; else 
                                                                    
#line 5805 
                                                                    tmp_38 = 85;
      
#line 5805 
      printk("\001",tmp_38,"ipw_best_network",(int)network->ssid_len,(u8 *)(& network->ssid),(u8 *)(& network->bssid));
    }
    else ;
    
#line 5808 
    __retres = 0;
    
#line 5808 
    goto return_label;
  }
  else ;
  
#line 5811 
  if ((unsigned int)rates.num_rates == 0U) {
    
#line 5812 
    if ((ipw_debug_level & 4100U) != 0U) {
      int tmp_41;
      int tmp_40;
      
#line 5812 
      ;
      
#line 5812 
      ;
      
#line 5812 
      ;
      
#line 5812 
      tmp_40 = preempt_count();
      
#line 5812 
      if (((unsigned long)tmp_40 & 2096896UL) != 0UL) 
#line 5812 
                                                      tmp_41 = 73; else 
                                                                    
#line 5812 
                                                                    tmp_41 = 85;
      
#line 5812 
      printk("\001",tmp_41,"ipw_best_network",(int)network->ssid_len,(u8 *)(& network->ssid),(u8 *)(& network->bssid));
    }
    else ;
    
#line 5815 
    __retres = 0;
    
#line 5815 
    goto return_label;
  }
  else ;
  
#line 5823 
  ipw_copy_rates(& match->rates,(struct ipw_supported_rates const *)(& rates));
  
#line 5824 
  match->network = network;
  
#line 5826 
  if ((ipw_debug_level & 4100U) != 0U) {
    int tmp_43;
    int tmp_42;
    
#line 5826 
    ;
    
#line 5826 
    ;
    
#line 5826 
    ;
    
#line 5826 
    tmp_42 = preempt_count();
    
#line 5826 
    if (((unsigned long)tmp_42 & 2096896UL) != 0UL) 
#line 5826 
                                                    tmp_43 = 73; else 
                                                                   
#line 5826 
                                                                   tmp_43 = 85;
    
#line 5826 
    printk("\001",tmp_43,"ipw_best_network",(int)network->ssid_len,(u8 *)(& network->ssid),(u8 *)(& network->bssid));
  }
  else ;
  
#line 5829 
  __retres = 1;
  return_label: 
#line 5829 
                return __retres;
}


#line 5832  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_adhoc_create(struct ipw_priv *priv, struct libipw_network *network)
{
  int i;
  int tmp_0;
  int tmp_2;
  
#line 5835 
  struct libipw_geo const *geo = libipw_get_geo(priv->ieee);
  
#line 5850 
  tmp_0 = libipw_is_valid_channel(priv->ieee,(unsigned char)((int)priv->channel));
  
#line 5850 
  switch (tmp_0) {
    case 2: 
#line 5851 
    ;
    
#line 5852 
    network->mode = (unsigned char)1U;
    
#line 5853 
    i = libipw_channel_to_index(priv->ieee,(unsigned char)((int)priv->channel));
    
#line 5854 
    if ((long)(i == -1) != 0L) {
      
#line 5856 
      ldv_inline_asm();
      
#line 5854 
      ;
    }
    else ;
    
#line 5855 
    if (((int)geo->a[i].flags & 1) != 0) {
      
#line 5856 
      printk("\001");
      
#line 5857 
      priv->channel = geo->a[0].channel;
    }
    else ;
    
#line 5859 
    goto ldv_55474;
    case 1: 
#line 5861 
    ;
    
#line 5862 
    if (((priv->ieee)->mode & 4) != 0) 
#line 5863 
                                       network->mode = (unsigned char)4U; else 
                                                                    
#line 5865 
                                                                    network->mode = (unsigned char)2U;
    
#line 5866 
    i = libipw_channel_to_index(priv->ieee,(unsigned char)((int)priv->channel));
    
#line 5867 
    if ((long)(i == -1) != 0L) {
      
#line 5869 
      ldv_inline_asm();
      
#line 5867 
      ;
    }
    else ;
    
#line 5868 
    if (((int)geo->bg[i].flags & 1) != 0) {
      
#line 5869 
      printk("\001");
      
#line 5870 
      priv->channel = geo->bg[0].channel;
    }
    else ;
    
#line 5872 
    goto ldv_55474;
    default: 
#line 5874 
    ;
    
#line 5875 
    printk("\001");
    
#line 5876 
    if (((priv->ieee)->mode & 1) != 0) {
      
#line 5877 
      network->mode = (unsigned char)1U;
      
#line 5878 
      priv->channel = geo->a[0].channel;
    }
    else 
      
#line 5879 
      if (((priv->ieee)->mode & 4) != 0) {
        
#line 5880 
        network->mode = (unsigned char)4U;
        
#line 5881 
        priv->channel = geo->bg[0].channel;
      }
      else {
        
#line 5883 
        network->mode = (unsigned char)2U;
        
#line 5884 
        priv->channel = geo->bg[0].channel;
      }
    
#line 5886 
    goto ldv_55474;
  }
  ldv_55474: 
#line 5889 
  ;
  
#line 5889 
  network->channel = priv->channel;
  
#line 5890 
  priv->config |= 32U;
  
#line 5891 
  ipw_create_bssid(priv,(u8 *)(& network->bssid));
  
#line 5892 
  network->ssid_len = priv->essid_len;
  
#line 5893 
  memcpy((void *)(& network->ssid),(void const *)(& priv->essid),(unsigned long)priv->essid_len);
  
#line 5894 
  memset((void *)(& network->stats),0,32UL);
  
#line 5895 
  network->capability = (unsigned short)2U;
  
#line 5896 
  if ((priv->config & 16U) == 0U) 
#line 5897 
                                  network->capability = (unsigned short)((unsigned int)network->capability | 32U); else ;
  
#line 5898 
  if ((priv->capability & 2U) != 0U) 
#line 5899 
                                     network->capability = (unsigned short)((unsigned int)network->capability | 16U); else ;
  {
    int tmp_1;
    
#line 5900 
    u8 _min1 = priv->rates.num_rates;
    
#line 5900 
    unsigned char _min2 = (unsigned char)12U;
    
#line 5900 
    if ((int)_min1 < (int)_min2) 
#line 5900 
                                 tmp_1 = (int)_min1; else 
#line 5900 
                                                          tmp_1 = (int)_min2;
    
#line 5900 
    tmp_2 = tmp_1;
  }
  
#line 5900 
  network->rates_len = (unsigned char)tmp_2;
  
#line 5901 
  memcpy((void *)(& network->rates),(void const *)(& priv->rates.supported_rates),(unsigned long)network->rates_len);
  
#line 5902 
  network->rates_ex_len = (unsigned char)((int)priv->rates.num_rates - (int)network->rates_len);
  
#line 5903 
  memcpy((void *)(& network->rates_ex),(void const *)(& priv->rates.supported_rates[(int)network->rates_len]),(unsigned long)network->rates_ex_len);
  
#line 5906 
  network->last_scanned = 0UL;
  
#line 5907 
  network->flags = 0U;
  
#line 5908 
  network->last_associate = 0U;
  
#line 5909 
  network->time_stamp[0] = 0U;
  
#line 5910 
  network->time_stamp[1] = 0U;
  
#line 5911 
  network->beacon_interval = (unsigned short)100U;
  
#line 5912 
  network->listen_interval = (unsigned short)10U;
  
#line 5913 
  network->atim_window = (unsigned short)0U;
  
#line 5914 
  network->wpa_ie_len = 0UL;
  
#line 5915 
  network->rsn_ie_len = 0UL;
  
#line 5916 
  return;
}


#line 5918  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_send_tgi_tx_key(struct ipw_priv *priv, int type, int index)
{
  struct ipw_tgi_tx_key key;
  
#line 5922 
  if ((((int)(priv->ieee)->sec.flags >> index) & 1) == 0) 
#line 5923 
                                                          goto return_label; else ;
  
#line 5925 
  key.key_id = (unsigned char)index;
  
#line 5926 
  memcpy((void *)(& key.key),(void const *)(& (priv->ieee)->sec.keys[index]),16UL);
  
#line 5927 
  key.security_type = (unsigned char)type;
  
#line 5928 
  key.station_index = (unsigned char)0U;
  
#line 5929 
  key.flags = (unsigned char)0U;
  
#line 5931 
  key.tx_counter[0] = 0U;
  
#line 5932 
  key.tx_counter[1] = 0U;
  
#line 5934 
  ipw_send_cmd_pdu(priv,(unsigned char)19,(unsigned char)28,(void *)(& key));
  return_label: 
#line 5935 
                return;
}


#line 5937  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_send_wep_keys(struct ipw_priv *priv, int type)
{
  struct ipw_wep_key key;
  int i;
  
#line 5942 
  key.cmd_id = (unsigned char)8U;
  
#line 5943 
  key.seq_num = (unsigned char)0U;
  
#line 5947 
  i = 0;
  
#line 5947 
  goto ldv_55494;
  ldv_55493: 
#line 5948 
  ;
  
#line 5948 
  key.key_index = (unsigned char)(i | type);
  
#line 5949 
  if ((((int)(priv->ieee)->sec.flags >> i) & 1) == 0) {
    
#line 5950 
    key.key_size = (unsigned char)0U;
    
#line 5951 
    goto ldv_55492;
  }
  else ;
  
#line 5954 
  key.key_size = (priv->ieee)->sec.key_sizes[i];
  
#line 5955 
  memcpy((void *)(& key.key),(void const *)(& (priv->ieee)->sec.keys[i]),(unsigned long)key.key_size);
  
#line 5957 
  ipw_send_cmd_pdu(priv,(unsigned char)18,(unsigned char)20,(void *)(& key));
  ldv_55492: 
#line 5958 
  ;
  
#line 5947 
  i += 1;
  ldv_55494: 
#line 5948 
  ;
  
#line 5947 
  if (i <= 3) 
#line 5949 
              goto ldv_55493; else 
#line 5952 
                                   goto ldv_55495;
  ldv_55495: 
#line 5953 
  ;
  
#line 5954 
  return;
}


#line 5961  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_set_hw_decrypt_unicast(struct ipw_priv *priv, int level)
{
  
#line 5963 
  if ((priv->ieee)->host_encrypt != 0) 
#line 5964 
                                       goto return_label; else ;
  
#line 5966 
  switch (level) {
    case 4: 
#line 5967 
    ;
    
#line 5968 
    priv->sys_config.disable_unicast_decryption = (unsigned char)0U;
    
#line 5969 
    (priv->ieee)->host_decrypt = 0;
    
#line 5970 
    goto ldv_55501;
    case 2: 
#line 5971 
    ;
    
#line 5972 
    priv->sys_config.disable_unicast_decryption = (unsigned char)1U;
    
#line 5973 
    (priv->ieee)->host_decrypt = 1;
    
#line 5974 
    goto ldv_55501;
    case 1: 
#line 5975 
    ;
    
#line 5976 
    priv->sys_config.disable_unicast_decryption = (unsigned char)0U;
    
#line 5977 
    (priv->ieee)->host_decrypt = 0;
    
#line 5978 
    goto ldv_55501;
    case 0: 
#line 5979 
    ;
    
#line 5980 
    priv->sys_config.disable_unicast_decryption = (unsigned char)1U;
    
#line 5981 
    goto ldv_55501;
    default: 
#line 5982 
    ;
    
#line 5983 
    goto ldv_55501;
  }
  ldv_55501: 
#line 5985 
  ;
  return_label: 
#line 5986 
                return;
}


#line 5987  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_set_hw_decrypt_multicast(struct ipw_priv *priv, int level)
{
  
#line 5989 
  if ((priv->ieee)->host_encrypt != 0) 
#line 5990 
                                       goto return_label; else ;
  
#line 5992 
  switch (level) {
    case 4: 
#line 5993 
    ;
    
#line 5994 
    priv->sys_config.disable_multicast_decryption = (unsigned char)0U;
    
#line 5995 
    goto ldv_55511;
    case 2: 
#line 5996 
    ;
    
#line 5997 
    priv->sys_config.disable_multicast_decryption = (unsigned char)1U;
    
#line 5998 
    goto ldv_55511;
    case 1: 
#line 5999 
    ;
    
#line 6000 
    priv->sys_config.disable_multicast_decryption = (unsigned char)0U;
    
#line 6001 
    goto ldv_55511;
    case 0: 
#line 6002 
    ;
    
#line 6003 
    priv->sys_config.disable_multicast_decryption = (unsigned char)1U;
    
#line 6004 
    goto ldv_55511;
    default: 
#line 6005 
    ;
    
#line 6006 
    goto ldv_55511;
  }
  ldv_55511: 
#line 6008 
  ;
  return_label: 
#line 6009 
                return;
}


#line 6010  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_set_hwcrypto_keys(struct ipw_priv *priv)
{
  
#line 6012 
  switch ((int)(priv->ieee)->sec.level) {
    case 4: 
#line 6013 
    ;
    
#line 6014 
    if (((int)(priv->ieee)->sec.flags & 16) != 0) 
#line 6015 
                                                  ipw_send_tgi_tx_key(priv,8,(int)(priv->ieee)->sec.active_key); else ;
    
#line 6019 
    if ((priv->ieee)->host_mc_decrypt == 0) 
#line 6020 
                                            ipw_send_wep_keys(priv,32); else ;
    
#line 6021 
    goto ldv_55520;
    case 2: 
#line 6022 
    ;
    
#line 6023 
    if (((int)(priv->ieee)->sec.flags & 16) != 0) 
#line 6024 
                                                  ipw_send_tgi_tx_key(priv,12,(int)(priv->ieee)->sec.active_key); else ;
    
#line 6027 
    goto ldv_55520;
    case 1: 
#line 6028 
    ;
    
#line 6029 
    ipw_send_wep_keys(priv,0);
    
#line 6030 
    ipw_set_hw_decrypt_unicast(priv,(int)(priv->ieee)->sec.level);
    
#line 6031 
    ipw_set_hw_decrypt_multicast(priv,(int)(priv->ieee)->sec.level);
    
#line 6032 
    goto ldv_55520;
    case 0: 
#line 6033 
    ;
    default: 
#line 6034 
    ;
    
#line 6035 
    goto ldv_55520;
  }
  ldv_55520: 
#line 6037 
  ;
  
#line 6038 
  return;
}


#line 6039  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_adhoc_check(void *data)
{
  u32 tmp_1;
  
#line 6041 
  struct ipw_priv *priv = (struct ipw_priv *)data;
  
#line 6043 
  tmp_1 = priv->missed_adhoc_beacons;
  
#line 6043 
  priv->missed_adhoc_beacons += 1U;
  
#line 6043 
  ;
  
#line 6043 
  if (tmp_1 > priv->disassociate_threshold) {
    
#line 6043 
    if ((priv->config & 32U) == 0U) {
      
#line 6045 
      if ((ipw_debug_level & 5188U) != 0U) {
        int tmp_0;
        int tmp;
        
#line 6045 
        ;
        
#line 6045 
        tmp = preempt_count();
        
#line 6045 
        if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 6045 
                                                     tmp_0 = 73; else 
                                                                   
#line 6045 
                                                                   tmp_0 = 85;
        
#line 6045 
        printk("\001",tmp_0,"ipw_adhoc_check",priv->missed_adhoc_beacons);
      }
      else ;
      
#line 6049 
      ipw_remove_current_network(priv);
      
#line 6050 
      ipw_disassociate((void *)priv);
      
#line 6051 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 6054 
  ldv_schedule_delayed_work_159(& priv->adhoc_check,(unsigned long)priv->assoc_request.beacon_interval);
  return_label: 
#line 6056 
                return;
}


#line 6058  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_bg_adhoc_check(struct work_struct *work)
{
  struct ipw_priv *tmp;
  {
    
#line 6061 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 6061 
    tmp = (struct ipw_priv *)__mptr + 18446744073709547792U;
  }
  
#line 6060 
  struct ipw_priv *priv = tmp;
  
#line 6062 
  ldv_mutex_lock_160(& priv->mutex);
  
#line 6063 
  ipw_adhoc_check((void *)priv);
  
#line 6064 
  ldv_mutex_unlock_161(& priv->mutex);
  
#line 6065 
  return;
}


#line 6067  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_debug_config(struct ipw_priv *priv)
{
  
#line 6069 
  if ((ipw_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 6069 
    ;
    
#line 6069 
    tmp = preempt_count();
    
#line 6069 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 6069 
                                                 tmp_0 = 73; else 
#line 6069 
                                                                  tmp_0 = 85;
    
#line 6069 
    printk("\001",tmp_0,"ipw_debug_config",priv->config);
  }
  else ;
  
#line 6071 
  if ((priv->config & 1U) != 0U) {
    
#line 6072 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 6072 
      ;
      
#line 6072 
      tmp_1 = preempt_count();
      
#line 6072 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 6072 
                                                     tmp_2 = 73; else 
                                                                   
#line 6072 
                                                                   tmp_2 = 85;
      
#line 6072 
      printk("\001",tmp_2,"ipw_debug_config",(int)priv->channel);
    }
    else ;
  }
  else 
    
#line 6074 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_4;
      int tmp_3;
      
#line 6074 
      tmp_3 = preempt_count();
      
#line 6074 
      if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 6074 
                                                     tmp_4 = 73; else 
                                                                   
#line 6074 
                                                                   tmp_4 = 85;
      
#line 6074 
      printk("\001",tmp_4,"ipw_debug_config");
    }
    else ;
  
#line 6075 
  if ((priv->config & 2U) != 0U) {
    
#line 6076 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_6;
      int tmp_5;
      
#line 6076 
      ;
      
#line 6076 
      ;
      
#line 6076 
      tmp_5 = preempt_count();
      
#line 6076 
      if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 6076 
                                                     tmp_6 = 73; else 
                                                                   
#line 6076 
                                                                   tmp_6 = 85;
      
#line 6076 
      printk("\001",tmp_6,"ipw_debug_config",(int)priv->essid_len,(u8 *)(& priv->essid));
    }
    else ;
  }
  else 
    
#line 6079 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_8;
      int tmp_7;
      
#line 6079 
      tmp_7 = preempt_count();
      
#line 6079 
      if (((unsigned long)tmp_7 & 2096896UL) != 0UL) 
#line 6079 
                                                     tmp_8 = 73; else 
                                                                   
#line 6079 
                                                                   tmp_8 = 85;
      
#line 6079 
      printk("\001",tmp_8,"ipw_debug_config");
    }
    else ;
  
#line 6080 
  if ((priv->config & 4U) != 0U) {
    
#line 6081 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_10;
      int tmp_9;
      
#line 6081 
      ;
      
#line 6081 
      tmp_9 = preempt_count();
      
#line 6081 
      if (((unsigned long)tmp_9 & 2096896UL) != 0UL) 
#line 6081 
                                                     tmp_10 = 73; else 
                                                                    
#line 6081 
                                                                    tmp_10 = 85;
      
#line 6081 
      printk("\001",tmp_10,"ipw_debug_config",(u8 *)(& priv->bssid));
    }
    else ;
  }
  else 
    
#line 6083 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_12;
      int tmp_11;
      
#line 6083 
      tmp_11 = preempt_count();
      
#line 6083 
      if (((unsigned long)tmp_11 & 2096896UL) != 0UL) 
#line 6083 
                                                      tmp_12 = 73; else 
                                                                    
#line 6083 
                                                                    tmp_12 = 85;
      
#line 6083 
      printk("\001",tmp_12,"ipw_debug_config");
    }
    else ;
  
#line 6084 
  if ((priv->capability & 2U) != 0U) {
    
#line 6085 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_14;
      int tmp_13;
      
#line 6085 
      tmp_13 = preempt_count();
      
#line 6085 
      if (((unsigned long)tmp_13 & 2096896UL) != 0UL) 
#line 6085 
                                                      tmp_14 = 73; else 
                                                                    
#line 6085 
                                                                    tmp_14 = 85;
      
#line 6085 
      printk("\001",tmp_14,"ipw_debug_config");
    }
    else ;
  }
  else 
    
#line 6087 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_16;
      int tmp_15;
      
#line 6087 
      tmp_15 = preempt_count();
      
#line 6087 
      if (((unsigned long)tmp_15 & 2096896UL) != 0UL) 
#line 6087 
                                                      tmp_16 = 73; else 
                                                                    
#line 6087 
                                                                    tmp_16 = 85;
      
#line 6087 
      printk("\001",tmp_16,"ipw_debug_config");
    }
    else ;
  
#line 6088 
  if ((ipw_debug_level & 4U) != 0U) {
    int tmp_18;
    int tmp_17;
    
#line 6088 
    ;
    
#line 6088 
    tmp_17 = preempt_count();
    
#line 6088 
    if (((unsigned long)tmp_17 & 2096896UL) != 0UL) 
#line 6088 
                                                    tmp_18 = 73; else 
                                                                   
#line 6088 
                                                                   tmp_18 = 85;
    
#line 6088 
    printk("\001",tmp_18,"ipw_debug_config",(int)priv->rates_mask);
  }
  else ;
  
#line 6089 
  return;
}


#line 6091  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_set_fixed_rate(struct ipw_priv *priv, int mode)
{
  struct ipw_fixed_rate fr;
  u32 reg;
  u32 tmp_8;
  
#line 6096 
  u16 mask = (unsigned short)0U;
  
#line 6097 
  u16 new_tx_rates = priv->rates_mask;
  
#line 6102 
  switch ((priv->ieee)->freq_band) {
    case 2: 
#line 6103 
    ;
    
#line 6105 
    if (((int)priv->rates_mask & -4081) != 0) {
      
#line 6107 
      if ((ipw_debug_level & 8U) != 0U) {
        int tmp_0;
        int tmp;
        
#line 6107 
        tmp = preempt_count();
        
#line 6107 
        if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 6107 
                                                     tmp_0 = 73; else 
                                                                   
#line 6107 
                                                                   tmp_0 = 85;
        
#line 6107 
        printk("\001",tmp_0,"ipw_set_fixed_rate");
      }
      else ;
      
#line 6109 
      new_tx_rates = (unsigned short)0U;
      
#line 6110 
      goto ldv_55550;
    }
    else ;
    
#line 6113 
    new_tx_rates = (unsigned short)((int)new_tx_rates >> 4);
    
#line 6114 
    goto ldv_55550;
    default: 
#line 6116 
    ;
    
#line 6118 
    if (mode == 2) {
      
#line 6119 
      if (((int)new_tx_rates & -16) != 0) {
        
#line 6121 
        if ((ipw_debug_level & 8U) != 0U) {
          int tmp_2;
          int tmp_1;
          
#line 6121 
          tmp_1 = preempt_count();
          
#line 6121 
          if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 6121 
                                                         tmp_2 = 73; else 
                                                                    
#line 6121 
                                                                    tmp_2 = 85;
          
#line 6121 
          printk("\001",tmp_2,"ipw_set_fixed_rate");
        }
        else ;
        
#line 6123 
        new_tx_rates = (unsigned short)0U;
      }
      else ;
      
#line 6125 
      goto ldv_55550;
    }
    else ;
    
#line 6129 
    if (((int)new_tx_rates & -4096) != 0) {
      
#line 6132 
      if ((ipw_debug_level & 8U) != 0U) {
        int tmp_4;
        int tmp_3;
        
#line 6132 
        tmp_3 = preempt_count();
        
#line 6132 
        if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 6132 
                                                       tmp_4 = 73; else 
                                                                    
#line 6132 
                                                                    tmp_4 = 85;
        
#line 6132 
        printk("\001",tmp_4,"ipw_set_fixed_rate");
      }
      else ;
      
#line 6134 
      new_tx_rates = (unsigned short)0U;
      
#line 6135 
      goto ldv_55550;
    }
    else ;
    
#line 6138 
    if (((unsigned int)new_tx_rates & 16U) != 0U) {
      
#line 6139 
      mask = (unsigned short)((unsigned int)mask | 8U);
      
#line 6140 
      new_tx_rates = (unsigned short)((unsigned int)new_tx_rates & 65519U);
    }
    else ;
    
#line 6143 
    if (((unsigned int)new_tx_rates & 32U) != 0U) {
      
#line 6144 
      mask = (unsigned short)((unsigned int)mask | 16U);
      
#line 6145 
      new_tx_rates = (unsigned short)((unsigned int)new_tx_rates & 65503U);
    }
    else ;
    
#line 6148 
    if (((unsigned int)new_tx_rates & 64U) != 0U) {
      
#line 6149 
      mask = (unsigned short)((unsigned int)mask | 32U);
      
#line 6150 
      new_tx_rates = (unsigned short)((unsigned int)new_tx_rates & 65471U);
    }
    else ;
    
#line 6153 
    new_tx_rates = (unsigned short)((int)new_tx_rates | (int)mask);
    
#line 6154 
    goto ldv_55550;
  }
  ldv_55550: 
#line 6157 
  ;
  
#line 6157 
  fr.tx_rates = new_tx_rates;
  
#line 6159 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_6;
    int tmp_5;
    
#line 6159 
    tmp_5 = preempt_count();
    
#line 6159 
    if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 6159 
                                                   tmp_6 = 73; else 
#line 6159 
                                                                    tmp_6 = 85;
    
#line 6159 
    printk("\001",tmp_6,"ipw_set_fixed_rate",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",6159,1564U);
  }
  else ;
  
#line 6159 
  tmp_8 = _ipw_read32(priv,1564UL);
  
#line 6159 
  reg = tmp_8;
  
#line 6160 
  ipw_write_reg32(priv,reg,*((u32 *)(& fr)));
  
#line 6161 
  return;
}


#line 6163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_abort_scan(struct ipw_priv *priv)
{
  int err;
  
#line 6167 
  if ((priv->status & 4194304U) != 0U) {
    
#line 6168 
    if ((ipw_debug_level & 32U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 6168 
      tmp = preempt_count();
      
#line 6168 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 6168 
                                                   tmp_0 = 73; else 
#line 6168 
                                                                    tmp_0 = 85;
      
#line 6168 
      printk("\001",tmp_0,"ipw_abort_scan");
    }
    else ;
    
#line 6169 
    goto return_label;
  }
  else ;
  
#line 6171 
  priv->status |= 4194304U;
  
#line 6173 
  err = ipw_send_scan_abort(priv);
  
#line 6174 
  if (err != 0) {
    
#line 6175 
    if ((ipw_debug_level & 32U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 6175 
      tmp_1 = preempt_count();
      
#line 6175 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 6175 
                                                     tmp_2 = 73; else 
                                                                   
#line 6175 
                                                                   tmp_2 = 85;
      
#line 6175 
      printk("\001",tmp_2,"ipw_abort_scan");
    }
    else ;
  }
  else ;
  return_label: 
#line 6176 
                return;
}


#line 6178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_add_scan_channels(struct ipw_priv *priv, struct ipw_scan_request_ext *scan, int scan_type)
{
  struct libipw_geo const *geo;
  int i;
  
#line 6182 
  int channel_index = 0;
  
#line 6186 
  geo = libipw_get_geo(priv->ieee);
  
#line 6188 
  if (((priv->ieee)->freq_band & 2) != 0) {
    unsigned int tmp;
    
#line 6189 
    int start = channel_index;
    
#line 6190 
    i = 0;
    
#line 6190 
    goto ldv_55569;
    ldv_55568: 
#line 6191 
    ;
    
#line 6191 
    if ((priv->status & 128U) != 0U && (int)geo->a[i].channel == (int)priv->channel) 
      
#line 6193 
      goto ldv_55567; else ;
    
#line 6194 
    channel_index += 1;
    
#line 6195 
    scan->channels_list[channel_index] = geo->a[i].channel;
    
#line 6196 
    if (((int)geo->a[i].flags & 1) == 0) 
#line 6196 
                                         tmp = (unsigned int)((unsigned char)scan_type); else 
                                                                    
#line 6196 
                                                                    tmp = 1U;
    
#line 6196 
    ;
    
#line 6196 
    ;
    
#line 6196 
    ipw_set_scan_type(scan,(unsigned char)((int)((unsigned char)channel_index)),(unsigned char)((int)tmp));
    ldv_55567: 
#line 6199 
    ;
    
#line 6190 
    i += 1;
    ldv_55569: 
#line 6191 
    ;
    
#line 6190 
    if ((int)geo->a_channels > i) 
#line 6192 
                                  goto ldv_55568; else 
#line 6195 
                                                       goto ldv_55570;
    ldv_55570: 
#line 6196 
    ;
    
#line 6203 
    if (start != channel_index) {
      
#line 6204 
      scan->channels_list[start] = (unsigned char)((int)((unsigned char)channel_index) - (int)((unsigned char)start));
      
#line 6206 
      channel_index += 1;
    }
    else ;
  }
  else ;
  
#line 6210 
  if (((priv->ieee)->freq_band & 1) != 0) {
    
#line 6211 
    int start_0 = channel_index;
    
#line 6212 
    if ((priv->config & 2048U) != 0U) {
      int index;
      u8 channel;
      unsigned int tmp_0;
      
#line 6214 
      u8 channels[14U] = {(unsigned char)0U};
      
#line 6220 
      goto ldv_55575;
      ldv_55577: 
#line 6221 
      ;
      
#line 6221 
      channel = priv->speed_scan[(int)priv->speed_scan_pos];
      
#line 6223 
      if ((unsigned int)channel == 0U) {
        
#line 6224 
        priv->speed_scan_pos = (unsigned char)0U;
        
#line 6225 
        channel = priv->speed_scan[0];
      }
      else ;
      
#line 6227 
      if ((priv->status & 128U) != 0U && (int)priv->channel == (int)channel) {
        
#line 6229 
        priv->speed_scan_pos = (u8)((int)priv->speed_scan_pos + 1);
        
#line 6230 
        goto ldv_55575;
      }
      else ;
      
#line 6238 
      if ((unsigned int)channels[(int)channel + -1] != 0U) 
#line 6239 
                                                           goto ldv_55576; else ;
      
#line 6241 
      channels[(int)channel + -1] = (unsigned char)1U;
      
#line 6242 
      priv->speed_scan_pos = (u8)((int)priv->speed_scan_pos + 1);
      
#line 6243 
      channel_index += 1;
      
#line 6244 
      scan->channels_list[channel_index] = channel;
      
#line 6245 
      index = libipw_channel_to_index(priv->ieee,(unsigned char)((int)channel));
      
#line 6247 
      if (((int)geo->bg[index].flags & 1) == 0) 
#line 6247 
                                                tmp_0 = (unsigned int)((unsigned char)scan_type); else 
                                                                    
#line 6247 
                                                                    tmp_0 = 1U;
      
#line 6247 
      ;
      
#line 6247 
      ;
      
#line 6247 
      ipw_set_scan_type(scan,(unsigned char)((int)((unsigned char)channel_index)),(unsigned char)((int)tmp_0));
      ldv_55575: 
#line 6251 
      ;
      
#line 6220 
      if (channel_index <= 52) 
#line 6222 
                               goto ldv_55577; else 
#line 6225 
                                                    goto ldv_55576;
      ldv_55576: 
#line 6226 
      ;
    }
    else {
      unsigned int tmp_1;
      
#line 6255 
      i = 0;
      
#line 6255 
      goto ldv_55580;
      ldv_55579: 
#line 6256 
      ;
      
#line 6256 
      if ((priv->status & 128U) != 0U && (int)geo->bg[i].channel == (int)priv->channel) 
        
#line 6258 
        goto ldv_55578; else ;
      
#line 6259 
      channel_index += 1;
      
#line 6260 
      scan->channels_list[channel_index] = geo->bg[i].channel;
      
#line 6262 
      if (((int)geo->bg[i].flags & 1) == 0) 
#line 6262 
                                            tmp_1 = (unsigned int)((unsigned char)scan_type); else 
                                                                    
#line 6262 
                                                                    tmp_1 = 1U;
      
#line 6262 
      ;
      
#line 6262 
      ;
      
#line 6262 
      ipw_set_scan_type(scan,(unsigned char)((int)((unsigned char)channel_index)),(unsigned char)((int)tmp_1));
      ldv_55578: 
#line 6266 
      ;
      
#line 6255 
      i += 1;
      ldv_55580: 
#line 6256 
      ;
      
#line 6255 
      if ((int)geo->bg_channels > i) 
#line 6257 
                                     goto ldv_55579; else 
#line 6260 
                                                          goto ldv_55581;
      ldv_55581: 
#line 6261 
      ;
    }
    
#line 6271 
    if (start_0 != channel_index) 
#line 6272 
                                  scan->channels_list[start_0] = (unsigned char)((channel_index - start_0) | 64); else ;
  }
  else ;
  
#line 6274 
  return;
}


#line 6278  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_passive_dwell_time(struct ipw_priv *priv)
{
  int __retres;
  
#line 6285 
  if ((priv->status & 128U) != 0U && (unsigned int)(priv->assoc_network)->beacon_interval > 10U) {
    
#line 6287 
    __retres = (int)(priv->assoc_network)->beacon_interval + -10;
    
#line 6287 
    goto return_label;
  }
  else {
    
#line 6289 
    __retres = 120;
    
#line 6289 
    goto return_label;
  }
  return_label: 
#line 6285 
                return __retres;
}


#line 6292  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_request_scan_helper(struct ipw_priv *priv, int type, int direct)
{
  int __retres;
  struct ipw_scan_request_ext scan;
  int scan_type;
  int tmp_10;
  int tmp_14;
  
#line 6295 
  int err = 0;
  
#line 6297 
  if ((priv->status & 32U) == 0U || (priv->status & 2048U) != 0U) {
    
#line 6299 
    __retres = 0;
    
#line 6299 
    goto return_label;
  }
  else ;
  
#line 6301 
  ldv_mutex_lock_162(& priv->mutex);
  
#line 6303 
  if (direct != 0 && (unsigned int)priv->direct_scan_ssid_len == 0U) {
    
#line 6304 
    if ((ipw_debug_level & 32U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 6304 
      tmp = preempt_count();
      
#line 6304 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 6304 
                                                   tmp_0 = 73; else 
#line 6304 
                                                                    tmp_0 = 85;
      
#line 6304 
      printk("\001",tmp_0,"ipw_request_scan_helper");
    }
    else ;
    
#line 6305 
    priv->status &= 4294443007U;
    
#line 6306 
    goto done;
  }
  else ;
  
#line 6309 
  if ((priv->status & 2097152U) != 0U) {
    int tmp_3;
    
#line 6310 
    if ((ipw_debug_level & 32U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 6310 
      tmp_1 = preempt_count();
      
#line 6310 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 6310 
                                                     tmp_2 = 73; else 
                                                                   
#line 6310 
                                                                   tmp_2 = 85;
      
#line 6310 
      printk("\001",tmp_2,"ipw_request_scan_helper");
    }
    else ;
    
#line 6311 
    if (direct != 0) 
#line 6311 
                     tmp_3 = 524288; else 
#line 6311 
                                          tmp_3 = 1048576;
    
#line 6311 
    priv->status |= (unsigned int)tmp_3;
    
#line 6313 
    goto done;
  }
  else ;
  
#line 6316 
  if ((priv->status & 8388608U) == 0U && (priv->status & 4194304U) != 0U) {
    int tmp_6;
    
#line 6318 
    if ((ipw_debug_level & 32U) != 0U) {
      int tmp_5;
      int tmp_4;
      
#line 6318 
      tmp_4 = preempt_count();
      
#line 6318 
      if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
#line 6318 
                                                     tmp_5 = 73; else 
                                                                   
#line 6318 
                                                                   tmp_5 = 85;
      
#line 6318 
      printk("\001",tmp_5,"ipw_request_scan_helper");
    }
    else ;
    
#line 6319 
    if (direct != 0) 
#line 6319 
                     tmp_6 = 524288; else 
#line 6319 
                                          tmp_6 = 1048576;
    
#line 6319 
    priv->status |= (unsigned int)tmp_6;
    
#line 6321 
    goto done;
  }
  else ;
  
#line 6324 
  if ((priv->status & 12U) != 0U) {
    int tmp_9;
    
#line 6325 
    if ((ipw_debug_level & 32U) != 0U) {
      int tmp_8;
      int tmp_7;
      
#line 6325 
      tmp_7 = preempt_count();
      
#line 6325 
      if (((unsigned long)tmp_7 & 2096896UL) != 0UL) 
#line 6325 
                                                     tmp_8 = 73; else 
                                                                   
#line 6325 
                                                                   tmp_8 = 85;
      
#line 6325 
      printk("\001",tmp_8,"ipw_request_scan_helper");
    }
    else ;
    
#line 6326 
    if (direct != 0) 
#line 6326 
                     tmp_9 = 524288; else 
#line 6326 
                                          tmp_9 = 1048576;
    
#line 6326 
    priv->status |= (unsigned int)tmp_9;
    
#line 6328 
    goto done;
  }
  else ;
  
#line 6331 
  memset((void *)(& scan),0,96UL);
  
#line 6332 
  tmp_10 = libipw_get_scans(priv->ieee);
  
#line 6332 
  scan.full_scan_index = (unsigned int)tmp_10;
  
#line 6334 
  if (type == 1) {
    int tmp_13;
    
#line 6335 
    if ((ipw_debug_level & 8U) != 0U) {
      int tmp_12;
      int tmp_11;
      
#line 6335 
      tmp_11 = preempt_count();
      
#line 6335 
      if (((unsigned long)tmp_11 & 2096896UL) != 0UL) 
#line 6335 
                                                      tmp_12 = 73; else 
                                                                    
#line 6335 
                                                                    tmp_12 = 85;
      
#line 6335 
      printk("\001",tmp_12,"ipw_request_scan_helper");
    }
    else ;
    
#line 6336 
    scan_type = 1;
    
#line 6338 
    tmp_13 = ipw_passive_dwell_time(priv);
    
#line 6337 
    scan.dwell_time[1] = (unsigned short)tmp_13;
    
#line 6339 
    ipw_add_scan_channels(priv,& scan,scan_type);
    
#line 6340 
    goto send_request;
  }
  else ;
  
#line 6344 
  if ((priv->config & 2048U) != 0U) 
#line 6345 
                                    scan.dwell_time[3] = (unsigned short)30U; else 
                                                                    
#line 6348 
                                                                    scan.dwell_time[3] = (unsigned short)20U;
  
#line 6351 
  scan.dwell_time[4] = (unsigned short)20U;
  
#line 6355 
  tmp_14 = ipw_passive_dwell_time(priv);
  
#line 6354 
  scan.dwell_time[1] = (unsigned short)tmp_14;
  
#line 6356 
  scan.dwell_time[2] = (unsigned short)20U;
  
#line 6359 
  if ((priv->ieee)->iw_mode == 6) {
    u8 channel;
    int tmp_15;
    
#line 6361 
    u8 band = (unsigned char)0U;
    
#line 6363 
    tmp_15 = libipw_is_valid_channel(priv->ieee,(unsigned char)((int)priv->channel));
    
#line 6363 
    switch (tmp_15) {
      case 2: 
#line 6364 
      ;
      
#line 6365 
      band = (unsigned char)1U;
      
#line 6366 
      channel = priv->channel;
      
#line 6367 
      goto ldv_55599;
      case 1: 
#line 6369 
      ;
      
#line 6370 
      band = (unsigned char)65U;
      
#line 6371 
      channel = priv->channel;
      
#line 6372 
      goto ldv_55599;
      default: 
#line 6374 
      ;
      
#line 6375 
      band = (unsigned char)65U;
      
#line 6376 
      channel = (unsigned char)9U;
      
#line 6377 
      goto ldv_55599;
    }
    ldv_55599: 
#line 6380 
    ;
    
#line 6380 
    scan.channels_list[0] = band;
    
#line 6381 
    scan.channels_list[1] = channel;
    
#line 6382 
    ipw_set_scan_type(& scan,(unsigned char)1,(unsigned char)1);
    
#line 6392 
    scan.dwell_time[1] = (unsigned short)2000U;
  }
  else {
    
#line 6399 
    if (direct != 0) {
      
#line 6400 
      err = ipw_send_ssid(priv,(u8 *)(& priv->direct_scan_ssid),(int)priv->direct_scan_ssid_len);
      
#line 6402 
      if (err != 0) {
        
#line 6403 
        if ((ipw_debug_level & 32U) != 0U) {
          int tmp_17;
          int tmp_16;
          
#line 6403 
          tmp_16 = preempt_count();
          
#line 6403 
          if (((unsigned long)tmp_16 & 2096896UL) != 0UL) 
#line 6403 
                                                          tmp_17 = 73; else 
                                                                    
#line 6403 
                                                                    tmp_17 = 85;
          
#line 6403 
          printk("\001",tmp_17,"ipw_request_scan_helper");
        }
        else ;
        
#line 6405 
        goto done;
      }
      else ;
      
#line 6408 
      scan_type = 4;
    }
    else 
      
#line 6409 
      if ((priv->status & 1024U) != 0U || (((priv->status & 128U) == 0U && (priv->config & 2U) != 0U) && (scan.full_scan_index & 1U) != 0U)) {
        
#line 6413 
        err = ipw_send_ssid(priv,(u8 *)(& priv->essid),(int)priv->essid_len);
        
#line 6414 
        if (err != 0) {
          
#line 6415 
          if ((ipw_debug_level & 32U) != 0U) {
            int tmp_19;
            int tmp_18;
            
#line 6415 
            tmp_18 = preempt_count();
            
#line 6415 
            if (((unsigned long)tmp_18 & 2096896UL) != 0UL) 
#line 6415 
                                                            tmp_19 = 73; else 
                                                                    
#line 6415 
                                                                    tmp_19 = 85;
            
#line 6415 
            printk("\001",tmp_19,"ipw_request_scan_helper");
          }
          else ;
          
#line 6417 
          goto done;
        }
        else ;
        
#line 6420 
        scan_type = 4;
      }
      else 
#line 6422 
           scan_type = 3;
    
#line 6424 
    ipw_add_scan_channels(priv,& scan,scan_type);
  }
  send_request: 
#line 6429 
  ;
  
#line 6430 
  err = ipw_send_scan_request_ext(priv,& scan);
  
#line 6431 
  if (err != 0) {
    
#line 6432 
    if ((ipw_debug_level & 32U) != 0U) {
      int tmp_21;
      int tmp_20;
      
#line 6432 
      ;
      
#line 6432 
      tmp_20 = preempt_count();
      
#line 6432 
      if (((unsigned long)tmp_20 & 2096896UL) != 0UL) 
#line 6432 
                                                      tmp_21 = 73; else 
                                                                    
#line 6432 
                                                                    tmp_21 = 85;
      
#line 6432 
      printk("\001",tmp_21,"ipw_request_scan_helper",err);
    }
    else ;
    
#line 6433 
    goto done;
  }
  else ;
  
#line 6436 
  priv->status |= 2097152U;
  
#line 6437 
  if (direct != 0) {
    
#line 6438 
    priv->status &= 4294443007U;
    
#line 6439 
    priv->direct_scan_ssid_len = (unsigned char)0U;
  }
  else 
#line 6441 
       priv->status &= 4293918719U;
  
#line 6443 
  ldv_schedule_delayed_work_163(& priv->scan_check,1250UL);
  done: 
#line 6444 
  ;
  
#line 6445 
  ldv_mutex_unlock_164(& priv->mutex);
  
#line 6446 
  __retres = err;
  return_label: 
#line 6446 
                return __retres;
}


#line 6449  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_request_passive_scan(struct work_struct *work)
{
  struct ipw_priv *tmp;
  {
    
#line 6452 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 6452 
    tmp = (struct ipw_priv *)__mptr + 18446744073709546800U;
  }
  
#line 6451 
  struct ipw_priv *priv = tmp;
  
#line 6453 
  ipw_request_scan_helper(priv,1,0);
  
#line 6454 
  return;
}


#line 6456  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_request_scan(struct work_struct *work)
{
  struct ipw_priv *tmp;
  {
    
#line 6459 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 6459 
    tmp = (struct ipw_priv *)__mptr + 18446744073709547248U;
  }
  
#line 6458 
  struct ipw_priv *priv = tmp;
  
#line 6460 
  ipw_request_scan_helper(priv,0,0);
  
#line 6461 
  return;
}


#line 6463  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_request_direct_scan(struct work_struct *work)
{
  struct ipw_priv *tmp;
  {
    
#line 6466 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 6466 
    tmp = (struct ipw_priv *)__mptr + 18446744073709547024U;
  }
  
#line 6465 
  struct ipw_priv *priv = tmp;
  
#line 6467 
  ipw_request_scan_helper(priv,0,1);
  
#line 6468 
  return;
}


#line 6470  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_bg_abort_scan(struct work_struct *work)
{
  struct ipw_priv *tmp;
  {
    
#line 6473 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 6473 
    tmp = (struct ipw_priv *)__mptr + 18446744073709545664U;
  }
  
#line 6472 
  struct ipw_priv *priv = tmp;
  
#line 6474 
  ldv_mutex_lock_165(& priv->mutex);
  
#line 6475 
  ipw_abort_scan(priv);
  
#line 6476 
  ldv_mutex_unlock_166(& priv->mutex);
  
#line 6477 
  return;
}


#line 6479  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wpa_enable(struct ipw_priv *priv, int value)
{
  int __retres;
  
#line 6483 
  (priv->ieee)->wpa_enabled = value;
  
#line 6484 
  __retres = 0;
  
#line 6484 
  return __retres;
}


#line 6487  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wpa_set_auth_algs(struct ipw_priv *priv, int value)
{
  int __retres;
  
#line 6489 
  struct libipw_device *ieee = priv->ieee;
  
#line 6490 
  struct libipw_security sec = {.active_key = (unsigned short)0, .enabled = (unsigned short)0, .unicast_uses_group = (unsigned short)0, .encrypt = (unsigned short)0, .auth_mode = (unsigned char)0, .encode_alg = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .key_sizes = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .keys = {{(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}}, .level = (unsigned char)0, .flags = (unsigned short)32U};
  
#line 6493 
  int ret = 0;
  
#line 6495 
  if ((value & 2) != 0) {
    
#line 6496 
    sec.auth_mode = (unsigned char)1U;
    
#line 6497 
    ieee->open_wep = 0;
  }
  else 
    
#line 6498 
    if ((value & 1) != 0) {
      
#line 6499 
      sec.auth_mode = (unsigned char)0U;
      
#line 6500 
      ieee->open_wep = 1;
    }
    else 
      
#line 6501 
      if ((value & 4) != 0) {
        
#line 6502 
        sec.auth_mode = (unsigned char)128U;
        
#line 6503 
        ieee->open_wep = 1;
      }
      else {
        
#line 6505 
        __retres = -22;
        
#line 6505 
        goto return_label;
      }
  
#line 6507 
  if (ieee->set_security != (void (*)(struct net_device *, struct libipw_security *))0) 
    
#line 6508 
    (*(ieee->set_security))(ieee->dev,& sec); else 
#line 6510 
                                                   ret = -95;
  
#line 6512 
  __retres = ret;
  return_label: 
#line 6512 
                return __retres;
}


#line 6515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_wpa_assoc_frame(struct ipw_priv *priv, char *wpa_ie, int wpa_ie_len)
{
  
#line 6519 
  ipw_wpa_enable(priv,1);
  
#line 6520 
  return;
}


#line 6522  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_set_rsn_capa(struct ipw_priv *priv, char *capabilities, int length)
{
  int tmp_1;
  
#line 6525 
  if ((ipw_debug_level & 32U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 6525 
    tmp = preempt_count();
    
#line 6525 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 6525 
                                                 tmp_0 = 73; else 
#line 6525 
                                                                  tmp_0 = 85;
    
#line 6525 
    printk("\001",tmp_0,"ipw_set_rsn_capa");
  }
  else ;
  
#line 6527 
  tmp_1 = ipw_send_cmd_pdu(priv,(unsigned char)31,(unsigned char)((int)((unsigned char)length)),(void *)capabilities);
  
#line 6527 
  return tmp_1;
}


#line 6536  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_set_genie(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  u8 *buf;
  
#line 6540 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 6541 
  struct libipw_device *ieee = priv->ieee;
  
#line 6543 
  int err = 0;
  
#line 6545 
  if ((unsigned int)wrqu->data.length > 64U || ((unsigned int)wrqu->data.length != 0U && extra == (char *)0)) {
    
#line 6547 
    __retres = -22;
    
#line 6547 
    goto return_label;
  }
  else ;
  
#line 6549 
  if ((unsigned int)wrqu->data.length != 0U) {
    
#line 6550 
    buf = (u8 *)kmemdup((void const *)extra,(unsigned long)wrqu->data.length,208U);
    
#line 6551 
    if (buf == (u8 *)0U) {
      
#line 6552 
      err = -12;
      
#line 6553 
      goto out;
    }
    else ;
    
#line 6556 
    kfree((void const *)ieee->wpa_ie);
    
#line 6557 
    ieee->wpa_ie = buf;
    
#line 6558 
    ieee->wpa_ie_len = (unsigned long)wrqu->data.length;
  }
  else {
    
#line 6560 
    kfree((void const *)ieee->wpa_ie);
    
#line 6561 
    ieee->wpa_ie = (u8 *)0U;
    
#line 6562 
    ieee->wpa_ie_len = 0UL;
  }
  
#line 6565 
  ipw_wpa_assoc_frame(priv,(char *)ieee->wpa_ie,(int)ieee->wpa_ie_len);
  out: 
#line 6566 
  ;
  
#line 6567 
  __retres = err;
  return_label: 
#line 6567 
                return __retres;
}


#line 6571  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_get_genie(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  
#line 6575 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 6576 
  struct libipw_device *ieee = priv->ieee;
  
#line 6577 
  int err = 0;
  
#line 6579 
  if (ieee->wpa_ie_len == 0UL || ieee->wpa_ie == (u8 *)0U) {
    
#line 6580 
    wrqu->data.length = (unsigned short)0U;
    
#line 6581 
    goto out;
  }
  else ;
  
#line 6584 
  if ((unsigned long)wrqu->data.length < ieee->wpa_ie_len) {
    
#line 6585 
    err = -7;
    
#line 6586 
    goto out;
  }
  else ;
  
#line 6589 
  wrqu->data.length = (unsigned short)ieee->wpa_ie_len;
  
#line 6590 
  memcpy((void *)extra,(void const *)ieee->wpa_ie,ieee->wpa_ie_len);
  out: 
#line 6592 
  ;
  
#line 6593 
  return err;
}


#line 6596  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int wext_cipher2level(int cipher)
{
  int __retres;
  
#line 6598 
  switch (cipher) {
    case 1: 
#line 6599 
    ;
    
#line 6600 
    __retres = 0;
    
#line 6600 
    goto return_label;
    case 2: 
#line 6601 
    ;
    case 16: 
#line 6602 
    ;
    
#line 6603 
    __retres = 1;
    
#line 6603 
    goto return_label;
    case 4: 
#line 6604 
    ;
    
#line 6605 
    __retres = 2;
    
#line 6605 
    goto return_label;
    case 8: 
#line 6606 
    ;
    
#line 6607 
    __retres = 4;
    
#line 6607 
    goto return_label;
    default: 
#line 6608 
    ;
    
#line 6609 
    __retres = -1;
    
#line 6609 
    goto return_label;
  }
  return_label: 
#line 6598 
                return __retres;
}


#line 6614  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_set_auth(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  struct lib80211_crypt_data *crypt;
  unsigned long flags;
  
#line 6618 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 6619 
  struct libipw_device *ieee = priv->ieee;
  
#line 6620 
  struct iw_param *param = & wrqu->param;
  
#line 6623 
  int ret = 0;
  
#line 6625 
  switch ((int)param->flags & 4095) {
    int tmp_0;
    int tmp_1;
    case 0: 
#line 6626 
    ;
    
#line 6627 
    goto ldv_55691;
    case 1: 
#line 6628 
    ;
    
#line 6629 
    tmp_0 = wext_cipher2level(param->value);
    
#line 6629 
    ;
    
#line 6629 
    ipw_set_hw_decrypt_unicast(priv,tmp_0);
    
#line 6631 
    goto ldv_55691;
    case 2: 
#line 6632 
    ;
    
#line 6633 
    tmp_1 = wext_cipher2level(param->value);
    
#line 6633 
    ;
    
#line 6633 
    ipw_set_hw_decrypt_multicast(priv,tmp_1);
    
#line 6635 
    goto ldv_55691;
    case 3: 
#line 6636 
    ;
    
#line 6640 
    goto ldv_55691;
    case 4: 
#line 6642 
    ;
    
#line 6643 
    crypt = (priv->ieee)->crypt_info.crypt[(priv->ieee)->crypt_info.tx_keyidx];
    
#line 6644 
    if ((crypt == (struct lib80211_crypt_data *)0 || (crypt->ops)->set_flags == (unsigned long (*)(unsigned long , void *))0) || (crypt->ops)->get_flags == (unsigned long (*)(void *))0) 
      
#line 6645 
      goto ldv_55691; else ;
    
#line 6647 
    flags = (*((crypt->ops)->get_flags))(crypt->priv);
    
#line 6649 
    if (param->value != 0) 
#line 6650 
                           flags |= 1UL; else 
#line 6652 
                                              flags &= 18446744073709551614UL;
    
#line 6654 
    (*((crypt->ops)->set_flags))(flags,crypt->priv);
    
#line 6656 
    goto ldv_55691;
    case 5: 
#line 6658 
    ;
    {
      
#line 6670 
      struct libipw_security sec = {.active_key = (unsigned short)0, .enabled = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))param->value, .unicast_uses_group = (unsigned short)0, .encrypt = (unsigned short)0, .auth_mode = (unsigned char)0, .encode_alg = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .key_sizes = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .keys = {{(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}}, .level = (unsigned char)0, .flags = (unsigned short)256U};
      
#line 6674 
      (priv->ieee)->drop_unencrypted = param->value;
      
#line 6678 
      if (param->value == 0) {
        
#line 6679 
        sec.flags = (unsigned short)((unsigned int)sec.flags | 128U);
        
#line 6680 
        sec.level = (unsigned char)0U;
      }
      else {
        
#line 6682 
        sec.flags = (unsigned short)((unsigned int)sec.flags | 128U);
        
#line 6683 
        sec.level = (unsigned char)1U;
      }
      
#line 6685 
      if ((priv->ieee)->set_security != (void (*)(struct net_device *, struct libipw_security *))0) 
        
#line 6686 
        (*((priv->ieee)->set_security))((priv->ieee)->dev,& sec); else ;
      
#line 6687 
      goto ldv_55691;
    }
    case 6: 
#line 6690 
    ;
    
#line 6691 
    ret = ipw_wpa_set_auth_algs(priv,param->value);
    
#line 6692 
    goto ldv_55691;
    case 7: 
#line 6694 
    ;
    
#line 6695 
    ret = ipw_wpa_enable(priv,param->value);
    
#line 6696 
    ipw_disassociate((void *)priv);
    
#line 6697 
    goto ldv_55691;
    case 8: 
#line 6699 
    ;
    
#line 6700 
    ieee->ieee802_1x = param->value;
    
#line 6701 
    goto ldv_55691;
    case 10: 
#line 6703 
    ;
    
#line 6704 
    ieee->privacy_invoked = param->value;
    
#line 6705 
    goto ldv_55691;
    default: 
#line 6707 
    ;
    
#line 6708 
    __retres = -95;
    
#line 6708 
    goto return_label;
  }
  ldv_55691: 
#line 6710 
  ;
  
#line 6710 
  __retres = ret;
  return_label: 
#line 6710 
                return __retres;
}


#line 6714  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_get_auth(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  struct lib80211_crypt_data *crypt;
  
#line 6718 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 6719 
  struct libipw_device *ieee = priv->ieee;
  
#line 6721 
  struct iw_param *param = & wrqu->param;
  
#line 6723 
  switch ((int)param->flags & 4095) {
    unsigned long tmp_0;
    case 0: 
#line 6724 
    ;
    case 1: 
#line 6725 
    ;
    case 2: 
#line 6726 
    ;
    case 3: 
#line 6727 
    ;
    
#line 6731 
    __retres = -95;
    
#line 6731 
    goto return_label;
    case 4: 
#line 6733 
    ;
    
#line 6734 
    crypt = (priv->ieee)->crypt_info.crypt[(priv->ieee)->crypt_info.tx_keyidx];
    
#line 6735 
    if (crypt == (struct lib80211_crypt_data *)0 || (crypt->ops)->get_flags == (unsigned long (*)(void *))0) 
      
#line 6736 
      goto ldv_55718; else ;
    
#line 6738 
    tmp_0 = (*((crypt->ops)->get_flags))(crypt->priv);
    
#line 6738 
    param->value = (tmp_0 & 1UL) != 0UL;
    
#line 6741 
    goto ldv_55718;
    case 5: 
#line 6743 
    ;
    
#line 6744 
    param->value = ieee->drop_unencrypted;
    
#line 6745 
    goto ldv_55718;
    case 6: 
#line 6747 
    ;
    
#line 6748 
    param->value = (int)ieee->sec.auth_mode;
    
#line 6749 
    goto ldv_55718;
    case 7: 
#line 6751 
    ;
    
#line 6752 
    param->value = ieee->wpa_enabled;
    
#line 6753 
    goto ldv_55718;
    case 8: 
#line 6755 
    ;
    
#line 6756 
    param->value = ieee->ieee802_1x;
    
#line 6757 
    goto ldv_55718;
    case 9: 
#line 6759 
    ;
    case 10: 
#line 6760 
    ;
    
#line 6761 
    param->value = ieee->privacy_invoked;
    
#line 6762 
    goto ldv_55718;
    default: 
#line 6764 
    ;
    
#line 6765 
    __retres = -95;
    
#line 6765 
    goto return_label;
  }
  ldv_55718: 
#line 6767 
  ;
  
#line 6767 
  __retres = 0;
  return_label: 
#line 6767 
                return __retres;
}


#line 6771  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_set_encodeext(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int tmp_0;
  
#line 6775 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 6776 
  struct iw_encode_ext *ext = (struct iw_encode_ext *)extra;
  
#line 6778 
  if (hwcrypto != 0) 
    
#line 6779 
    if ((unsigned int)ext->alg == 2U) 
      
#line 6782 
      if ((ext->ext_flags & 4U) != 0U) 
#line 6783 
                                       (priv->ieee)->host_mc_decrypt = 1;
      else {
        
#line 6785 
        (priv->ieee)->host_encrypt = 0;
        
#line 6786 
        (priv->ieee)->host_encrypt_msdu = 1;
        
#line 6787 
        (priv->ieee)->host_decrypt = 1;
      }
    else {
      
#line 6790 
      (priv->ieee)->host_encrypt = 0;
      
#line 6791 
      (priv->ieee)->host_encrypt_msdu = 0;
      
#line 6792 
      (priv->ieee)->host_decrypt = 0;
      
#line 6793 
      (priv->ieee)->host_mc_decrypt = 0;
    }
  else ;
  
#line 6797 
  tmp_0 = libipw_wx_set_encodeext(priv->ieee,info,wrqu,extra);
  
#line 6797 
  return tmp_0;
}


#line 6801  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_get_encodeext(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int tmp_0;
  
#line 6805 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 6806 
  tmp_0 = libipw_wx_get_encodeext(priv->ieee,info,wrqu,extra);
  
#line 6806 
  return tmp_0;
}


#line 6810  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_set_mlme(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  __le16 reason;
  
#line 6814 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 6815 
  struct iw_mlme *mlme = (struct iw_mlme *)extra;
  
#line 6818 
  reason = mlme->reason_code;
  
#line 6820 
  switch ((int)mlme->cmd) {
    case 0: 
#line 6821 
    ;
    
#line 6823 
    goto ldv_55751;
    case 1: 
#line 6825 
    ;
    
#line 6826 
    ipw_disassociate((void *)priv);
    
#line 6827 
    goto ldv_55751;
    default: 
#line 6829 
    ;
    
#line 6830 
    __retres = -95;
    
#line 6830 
    goto return_label;
  }
  ldv_55751: 
#line 6832 
  ;
  
#line 6832 
  __retres = 0;
  return_label: 
#line 6832 
                return __retres;
}


#line 6842  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static u8 ipw_qos_current_mode(struct ipw_priv *priv)
{
  
#line 6844 
  u8 mode = (unsigned char)0U;
  
#line 6846 
  if ((priv->status & 128U) != 0U) {
    unsigned long flags;
    
#line 6849 
    ldv___ldv_spin_lock_167(& (priv->ieee)->lock);
    
#line 6850 
    mode = (priv->assoc_network)->mode;
    
#line 6851 
    ldv_spin_unlock_irqrestore_168(& (priv->ieee)->lock,flags);
  }
  else 
#line 6853 
       mode = (unsigned char)(priv->ieee)->mode;
  
#line 6855 
  if (ipw_debug_level < (u32)0) {
    int tmp_0;
    int tmp;
    
#line 6855 
    ;
    
#line 6855 
    tmp = preempt_count();
    
#line 6855 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 6855 
                                                 tmp_0 = 73; else 
#line 6855 
                                                                  tmp_0 = 85;
    
#line 6855 
    printk("\001",tmp_0,"ipw_qos_current_mode",(int)mode);
  }
  else ;
  
#line 6856 
  return mode;
}


#line 6862  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_qos_handle_probe_response(struct ipw_priv *priv, int active_network, struct libipw_network *network)
{
  int __retres;
  
#line 6866 
  u32 size = 32U;
  
#line 6868 
  if (((int)network->capability & 2) != 0) 
#line 6869 
                                           network->qos_data.active = network->qos_data.supported; else ;
  
#line 6871 
  if ((network->flags & 24U) != 0U) {
    
#line 6872 
    if (active_network != 0 && (network->flags & 8U) != 0U) 
#line 6874 
                                                            network->qos_data.active = network->qos_data.supported; else ;
    
#line 6876 
    if (((network->qos_data.active == 1 && active_network == 1) && (network->flags & 8U) != 0U) && (int)network->qos_data.old_param_count != (int)network->qos_data.param_count) {
      
#line 6880 
      network->qos_data.old_param_count = network->qos_data.param_count;
      
#line 6882 
      ldv_schedule_work_169(& priv->qos_activate);
      
#line 6883 
      if (ipw_debug_level < (u32)0) {
        int tmp_0;
        int tmp;
        
#line 6883 
        tmp = preempt_count();
        
#line 6883 
        if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 6883 
                                                     tmp_0 = 73; else 
                                                                   
#line 6883 
                                                                   tmp_0 = 85;
        
#line 6883 
        printk("\001",tmp_0,"ipw_qos_handle_probe_response");
      }
      else ;
    }
    else ;
  }
  else {
    
#line 6887 
    if ((priv->ieee)->mode == 2 || (unsigned int)network->mode == 2U) 
      
#line 6888 
      memcpy((void *)(& network->qos_data.parameters),(void const *)(& def_parameters_CCK),(unsigned long)size); else 
                                                                    
#line 6891 
                                                                    memcpy((void *)(& network->qos_data.parameters),(void const *)(& def_parameters_OFDM),(unsigned long)size);
    
#line 6894 
    if (network->qos_data.active == 1 && active_network == 1) {
      
#line 6895 
      if (ipw_debug_level < (u32)0) {
        int tmp_2;
        int tmp_1;
        
#line 6895 
        tmp_1 = preempt_count();
        
#line 6895 
        if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 6895 
                                                       tmp_2 = 73; else 
                                                                    
#line 6895 
                                                                    tmp_2 = 85;
        
#line 6895 
        printk("\001",tmp_2,"ipw_qos_handle_probe_response");
      }
      else ;
      
#line 6896 
      ldv_schedule_work_170(& priv->qos_activate);
    }
    else ;
    
#line 6899 
    network->qos_data.active = 0;
    
#line 6900 
    network->qos_data.supported = 0;
  }
  
#line 6902 
  if (((priv->status & 128U) != 0U && (priv->ieee)->iw_mode == 1) && active_network == 0) {
    int tmp_5;
    bool tmp_4;
    
#line 6904 
    tmp_4 = ether_addr_equal((u8 const *)(& network->bssid),(u8 const *)(& priv->bssid));
    
#line 6904 
    if (tmp_4) 
#line 6904 
               tmp_5 = 0; else 
#line 6904 
                               tmp_5 = 1;
    
#line 6904 
    if (tmp_5) {
      
#line 6905 
      if (((int)network->capability & 2) != 0) {
        
#line 6906 
        if ((int)network->ssid_len == (int)(priv->assoc_network)->ssid_len) {
          int tmp_3;
          
#line 6907 
          tmp_3 = memcmp((void const *)(& network->ssid),(void const *)(& (priv->assoc_network)->ssid),(unsigned long)network->ssid_len);
          
#line 6907 
          if (tmp_3 == 0) 
#line 6911 
                          ldv_schedule_work_171(& priv->merge_networks); else ;
        }
        else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 6915 
  __retres = 0;
  
#line 6915 
  return __retres;
}


#line 6922  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_qos_activate(struct ipw_priv *priv, struct libipw_qos_data *qos_network_data)
{
  int err;
  struct libipw_qos_parameters qos_parameters[3U];
  u32 burst_duration;
  int i;
  u8 type;
  
#line 6927 
  struct libipw_qos_parameters *active_one = (struct libipw_qos_parameters *)0;
  
#line 6928 
  u32 size = 32U;
  
#line 6933 
  type = ipw_qos_current_mode(priv);
  
#line 6935 
  active_one = & qos_parameters[1];
  
#line 6936 
  memcpy((void *)active_one,(void const *)priv->qos_data.def_qos_parm_CCK,(unsigned long)size);
  
#line 6937 
  active_one = & qos_parameters[2];
  
#line 6938 
  memcpy((void *)active_one,(void const *)priv->qos_data.def_qos_parm_OFDM,(unsigned long)size);
  
#line 6940 
  if (qos_network_data == (struct libipw_qos_data *)0) {
    
#line 6941 
    if ((unsigned int)type == 2U) {
      
#line 6942 
      if (ipw_debug_level < (u32)0) {
        int tmp_0;
        int tmp;
        
#line 6942 
        ;
        
#line 6942 
        tmp = preempt_count();
        
#line 6942 
        if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 6942 
                                                     tmp_0 = 73; else 
                                                                   
#line 6942 
                                                                   tmp_0 = 85;
        
#line 6942 
        printk("\001",tmp_0,"ipw_qos_activate",(int)type);
      }
      else ;
      
#line 6943 
      active_one = & def_parameters_CCK;
    }
    else 
#line 6945 
         active_one = & def_parameters_OFDM;
    
#line 6947 
    memcpy((void *)(&(qos_parameters[0])),(void const *)active_one,(unsigned long)size);
    
#line 6948 
    burst_duration = ipw_qos_get_burst_duration(priv);
    
#line 6949 
    i = 0;
    
#line 6949 
    goto ldv_55780;
    ldv_55779: 
#line 6950 
    ;
    
#line 6950 
    qos_parameters[0].tx_op_limit[i] = (unsigned short)burst_duration;
    
#line 6949 
    i += 1;
    ldv_55780: 
#line 6950 
    ;
    
#line 6949 
    if (i <= 3) 
#line 6951 
                goto ldv_55779; else 
#line 6954 
                                     goto ldv_55781;
    ldv_55781: 
#line 6955 
    ;
  }
  else 
    
#line 6952 
    if ((priv->ieee)->iw_mode == 1) {
      
#line 6953 
      if ((unsigned int)type == 2U) {
        
#line 6954 
        if (ipw_debug_level < (u32)0) {
          int tmp_2;
          int tmp_1;
          
#line 6954 
          ;
          
#line 6954 
          tmp_1 = preempt_count();
          
#line 6954 
          if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 6954 
                                                         tmp_2 = 73; else 
                                                                    
#line 6954 
                                                                    tmp_2 = 85;
          
#line 6954 
          printk("\001",tmp_2,"ipw_qos_activate",(int)type);
        }
        else ;
        
#line 6956 
        if (priv->qos_data.qos_enable == 0) 
#line 6957 
                                            active_one = & def_parameters_CCK; else 
                                                                    
#line 6959 
                                                                    active_one = priv->qos_data.def_qos_parm_CCK;
      }
      else 
        
#line 6961 
        if (priv->qos_data.qos_enable == 0) 
#line 6962 
                                            active_one = & def_parameters_OFDM; else 
                                                                    
#line 6964 
                                                                    active_one = priv->qos_data.def_qos_parm_OFDM;
      
#line 6966 
      memcpy((void *)(&(qos_parameters[0])),(void const *)active_one,(unsigned long)size);
    }
    else {
      unsigned long flags;
      int active;
      
#line 6971 
      ldv___ldv_spin_lock_172(& (priv->ieee)->lock);
      
#line 6972 
      active_one = & qos_network_data->parameters;
      
#line 6973 
      qos_network_data->old_param_count = qos_network_data->param_count;
      
#line 6975 
      memcpy((void *)(&(qos_parameters[0])),(void const *)active_one,(unsigned long)size);
      
#line 6976 
      active = qos_network_data->supported;
      
#line 6977 
      ldv_spin_unlock_irqrestore_173(& (priv->ieee)->lock,flags);
      
#line 6979 
      if (active == 0) {
        
#line 6980 
        burst_duration = ipw_qos_get_burst_duration(priv);
        
#line 6981 
        i = 0;
        
#line 6981 
        goto ldv_55785;
        ldv_55784: 
#line 6982 
        ;
        
#line 6983 
        qos_parameters[0].tx_op_limit[i] = (unsigned short)burst_duration;
        
#line 6981 
        i += 1;
        ldv_55785: 
#line 6982 
        ;
        
#line 6981 
        if (i <= 3) 
#line 6983 
                    goto ldv_55784; else 
#line 6986 
                                         goto ldv_55786;
        ldv_55786: 
#line 6987 
        ;
      }
      else ;
    }
  
#line 6987 
  if (ipw_debug_level < (u32)0) {
    int tmp_4;
    int tmp_3;
    
#line 6987 
    tmp_3 = preempt_count();
    
#line 6987 
    if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 6987 
                                                   tmp_4 = 73; else 
#line 6987 
                                                                    tmp_4 = 85;
    
#line 6987 
    printk("\001",tmp_4,"ipw_qos_activate");
  }
  else ;
  
#line 6988 
  err = ipw_send_qos_params_command(priv,&(qos_parameters[0]));
  
#line 6989 
  if (err != 0) {
    
#line 6990 
    if (ipw_debug_level < (u32)0) {
      int tmp_6;
      int tmp_5;
      
#line 6990 
      tmp_5 = preempt_count();
      
#line 6990 
      if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 6990 
                                                     tmp_6 = 73; else 
                                                                   
#line 6990 
                                                                   tmp_6 = 85;
      
#line 6990 
      printk("\001",tmp_6,"ipw_qos_activate");
    }
    else ;
  }
  else ;
  
#line 6992 
  return err;
}


#line 6998  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_qos_set_info_element(struct ipw_priv *priv)
{
  int __retres;
  struct libipw_qos_information_element qos_info;
  
#line 7000 
  int ret = 0;
  
#line 7003 
  if (priv == (struct ipw_priv *)0) {
    
#line 7004 
    __retres = -1;
    
#line 7004 
    goto return_label;
  }
  else ;
  
#line 7006 
  qos_info.elementID = (unsigned char)221U;
  
#line 7007 
  qos_info.length = (unsigned char)7U;
  
#line 7009 
  qos_info.version = (unsigned char)1U;
  
#line 7010 
  qos_info.ac_info = (unsigned char)0U;
  
#line 7012 
  memcpy((void *)(& qos_info.qui),(void const *)(& qos_oui),3UL);
  
#line 7013 
  qos_info.qui_type = (unsigned char)2U;
  
#line 7014 
  qos_info.qui_subtype = (unsigned char)0U;
  
#line 7016 
  ret = ipw_send_qos_info_command(priv,& qos_info);
  
#line 7017 
  if (ret != 0) {
    
#line 7018 
    if (ipw_debug_level < (u32)0) {
      int tmp_0;
      int tmp;
      
#line 7018 
      tmp = preempt_count();
      
#line 7018 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 7018 
                                                   tmp_0 = 73; else 
#line 7018 
                                                                    tmp_0 = 85;
      
#line 7018 
      printk("\001",tmp_0,"ipw_qos_set_info_element");
    }
    else ;
  }
  else ;
  
#line 7020 
  __retres = ret;
  return_label: 
#line 7020 
                return __retres;
}


#line 7026  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_qos_association(struct ipw_priv *priv, struct libipw_network *network)
{
  int __retres;
  
#line 7029 
  int err = 0;
  
#line 7030 
  struct libipw_qos_data *qos_data = (struct libipw_qos_data *)0;
  
#line 7031 
  struct libipw_qos_data ibss_data = {.parameters = {.cw_min = {(unsigned short)0, (unsigned short)0, (unsigned short)0, (unsigned short)0}, .cw_max = {(unsigned short)0, (unsigned short)0, (unsigned short)0, (unsigned short)0}, .aifs = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .flag = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .tx_op_limit = {(unsigned short)0, (unsigned short)0, (unsigned short)0, (unsigned short)0}}, .active = 1, .supported = 1, .param_count = (unsigned char)0, .old_param_count = (unsigned char)0};
  
#line 7036 
  switch ((priv->ieee)->iw_mode) {
    case 1: 
#line 7037 
    ;
    
#line 7038 
    if ((long)(((int)network->capability & 2) == 0) != 0L) {
      
#line 7040 
      ldv_inline_asm();
      
#line 7038 
      ;
    }
    else ;
    
#line 7040 
    qos_data = & ibss_data;
    
#line 7041 
    goto ldv_55801;
    case 2: 
#line 7043 
    ;
    
#line 7044 
    qos_data = & network->qos_data;
    
#line 7045 
    goto ldv_55801;
    default: 
#line 7047 
    ;
    
#line 7048 
    ldv_inline_asm();
    
#line 7048 
    ;
  }
  ldv_55801: 
#line 7052 
  ;
  
#line 7052 
  err = ipw_qos_activate(priv,qos_data);
  
#line 7053 
  if (err != 0) {
    
#line 7054 
    priv->assoc_request.policy_support = (unsigned short)((unsigned int)priv->assoc_request.policy_support & 65534U);
    
#line 7055 
    __retres = err;
    
#line 7055 
    goto return_label;
  }
  else ;
  
#line 7058 
  if (priv->qos_data.qos_enable != 0 && qos_data->supported != 0) {
    int tmp_1;
    
#line 7059 
    if (ipw_debug_level < (u32)0) {
      int tmp_0;
      int tmp;
      
#line 7059 
      tmp = preempt_count();
      
#line 7059 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 7059 
                                                   tmp_0 = 73; else 
#line 7059 
                                                                    tmp_0 = 85;
      
#line 7059 
      printk("\001",tmp_0,"ipw_qos_association");
    }
    else ;
    
#line 7060 
    priv->assoc_request.policy_support = (unsigned short)((unsigned int)priv->assoc_request.policy_support | 1U);
    
#line 7061 
    tmp_1 = ipw_qos_set_info_element(priv);
    
#line 7061 
    __retres = tmp_1;
    
#line 7061 
    goto return_label;
  }
  else ;
  
#line 7064 
  __retres = 0;
  return_label: 
#line 7064 
                return __retres;
}


#line 7072  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_qos_association_resp(struct ipw_priv *priv, struct libipw_network *network)
{
  int __retres;
  unsigned long flags;
  
#line 7075 
  int ret = 0;
  
#line 7077 
  u32 size = 32U;
  
#line 7078 
  int set_qos_param = 0;
  
#line 7080 
  if ((priv == (struct ipw_priv *)0 || network == (struct libipw_network *)0) || priv->assoc_network == (struct libipw_network *)0) {
    
#line 7082 
    __retres = ret;
    
#line 7082 
    goto return_label;
  }
  else ;
  
#line 7084 
  if ((priv->status & 128U) == 0U) {
    
#line 7085 
    __retres = ret;
    
#line 7085 
    goto return_label;
  }
  else ;
  
#line 7087 
  if ((priv->ieee)->iw_mode != 2) {
    
#line 7088 
    __retres = ret;
    
#line 7088 
    goto return_label;
  }
  else ;
  
#line 7090 
  ldv___ldv_spin_lock_174(& (priv->ieee)->lock);
  
#line 7091 
  if ((network->flags & 8U) != 0U) {
    
#line 7092 
    memcpy((void *)(& (priv->assoc_network)->qos_data),(void const *)(& network->qos_data),44UL);
    
#line 7094 
    (priv->assoc_network)->qos_data.active = 1;
    
#line 7095 
    if ((int)network->qos_data.old_param_count != (int)network->qos_data.param_count) {
      
#line 7097 
      set_qos_param = 1;
      
#line 7098 
      network->qos_data.old_param_count = network->qos_data.param_count;
    }
    else ;
  }
  else {
    
#line 7103 
    if ((unsigned int)network->mode == 2U || (priv->ieee)->mode == 2) 
      
#line 7104 
      memcpy((void *)(& (priv->assoc_network)->qos_data.parameters),(void const *)(& def_parameters_CCK),(unsigned long)size); else 
                                                                    
#line 7107 
                                                                    memcpy((void *)(& (priv->assoc_network)->qos_data.parameters),(void const *)(& def_parameters_OFDM),(unsigned long)size);
    
#line 7109 
    (priv->assoc_network)->qos_data.active = 0;
    
#line 7110 
    (priv->assoc_network)->qos_data.supported = 0;
    
#line 7111 
    set_qos_param = 1;
  }
  
#line 7114 
  ldv_spin_unlock_irqrestore_175(& (priv->ieee)->lock,flags);
  
#line 7116 
  if (set_qos_param == 1) 
#line 7117 
                          ldv_schedule_work_176(& priv->qos_activate); else ;
  
#line 7119 
  __retres = ret;
  return_label: 
#line 7119 
                return __retres;
}


#line 7122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static u32 ipw_qos_get_burst_duration(struct ipw_priv *priv)
{
  u32 __retres;
  
#line 7124 
  u32 ret = 0U;
  
#line 7126 
  if (priv == (struct ipw_priv *)0) {
    
#line 7127 
    __retres = 0U;
    
#line 7127 
    goto return_label;
  }
  else ;
  
#line 7129 
  if (((priv->ieee)->modulation & 2) == 0) 
#line 7130 
                                           ret = priv->qos_data.burst_duration_CCK; else 
                                                                    
#line 7132 
                                                                    ret = priv->qos_data.burst_duration_OFDM;
  
#line 7134 
  __retres = ret;
  return_label: 
#line 7134 
                return __retres;
}


#line 7140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_qos_init(struct ipw_priv *priv, int enable, int burst_enable, u32 burst_duration_CCK_0, u32 burst_duration_OFDM_0)
{
  
#line 7144 
  priv->qos_data.qos_enable = enable;
  
#line 7146 
  if (priv->qos_data.qos_enable != 0) {
    
#line 7147 
    priv->qos_data.def_qos_parm_CCK = & def_qos_parameters_CCK;
    
#line 7148 
    priv->qos_data.def_qos_parm_OFDM = & def_qos_parameters_OFDM;
    
#line 7149 
    if (ipw_debug_level < (u32)0) {
      int tmp_0;
      int tmp;
      
#line 7149 
      tmp = preempt_count();
      
#line 7149 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 7149 
                                                   tmp_0 = 73; else 
#line 7149 
                                                                    tmp_0 = 85;
      
#line 7149 
      printk("\001",tmp_0,"ipw_qos_init");
    }
    else ;
  }
  else {
    
#line 7151 
    priv->qos_data.def_qos_parm_CCK = & def_parameters_CCK;
    
#line 7152 
    priv->qos_data.def_qos_parm_OFDM = & def_parameters_OFDM;
    
#line 7153 
    if (ipw_debug_level < (u32)0) {
      int tmp_2;
      int tmp_1;
      
#line 7153 
      tmp_1 = preempt_count();
      
#line 7153 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 7153 
                                                     tmp_2 = 73; else 
                                                                   
#line 7153 
                                                                   tmp_2 = 85;
      
#line 7153 
      printk("\001",tmp_2,"ipw_qos_init");
    }
    else ;
  }
  
#line 7156 
  priv->qos_data.burst_enable = burst_enable;
  
#line 7158 
  if (burst_enable != 0) {
    
#line 7159 
    priv->qos_data.burst_duration_CCK = burst_duration_CCK_0;
    
#line 7160 
    priv->qos_data.burst_duration_OFDM = burst_duration_OFDM_0;
  }
  else {
    
#line 7162 
    priv->qos_data.burst_duration_CCK = 0U;
    
#line 7163 
    priv->qos_data.burst_duration_OFDM = 0U;
  }
  
#line 7165 
  return;
}


#line 7170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_get_tx_queue_number(struct ipw_priv *priv, u16 priority)
{
  int __retres;
  
#line 7172 
  if ((unsigned int)priority > 7U || priv->qos_data.qos_enable == 0) 
    
#line 7173 
    priority = (unsigned short)0U; else ;
  
#line 7175 
  __retres = from_priority_to_tx_queue[(int)priority] + -1;
  
#line 7175 
  return __retres;
}


#line 7178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_is_qos_active(struct net_device *dev, struct sk_buff *skb)
{
  int __retres;
  int active;
  int supported;
  int tmp_1;
  bool tmp_0;
  
#line 7181 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 7182 
  struct libipw_qos_data *qos_data = (struct libipw_qos_data *)0;
  
#line 7184 
  u8 *daddr = skb->data + 6U;
  
#line 7185 
  tmp_0 = is_multicast_ether_addr((u8 const *)daddr);
  
#line 7185 
  if (tmp_0) 
#line 7185 
             tmp_1 = 0; else 
#line 7185 
                             tmp_1 = 1;
  
#line 7185 
  int unicast = tmp_1;
  
#line 7187 
  if ((priv->status & 128U) == 0U) {
    
#line 7188 
    __retres = 0;
    
#line 7188 
    goto return_label;
  }
  else ;
  
#line 7190 
  qos_data = & (priv->assoc_network)->qos_data;
  
#line 7192 
  if ((priv->ieee)->iw_mode == 1) 
    
#line 7193 
    if (unicast == 0) 
#line 7194 
                      qos_data->active = 0; else 
#line 7196 
                                                 qos_data->active = qos_data->supported;
  else ;
  
#line 7198 
  active = qos_data->active;
  
#line 7199 
  supported = qos_data->supported;
  
#line 7200 
  if (ipw_debug_level < (u32)0) {
    int tmp_3;
    int tmp_2;
    
#line 7200 
    ;
    
#line 7200 
    ;
    
#line 7200 
    ;
    
#line 7200 
    ;
    
#line 7200 
    tmp_2 = preempt_count();
    
#line 7200 
    if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 7200 
                                                   tmp_3 = 73; else 
#line 7200 
                                                                    tmp_3 = 85;
    
#line 7200 
    printk("\001",tmp_3,"ipw_is_qos_active",priv->qos_data.qos_enable,active,supported,unicast);
  }
  else ;
  
#line 7203 
  if (active != 0 && priv->qos_data.qos_enable != 0) {
    
#line 7204 
    __retres = 1;
    
#line 7204 
    goto return_label;
  }
  else ;
  
#line 7206 
  __retres = 0;
  return_label: 
#line 7206 
                return __retres;
}


#line 7212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_qos_set_tx_queue_command(struct ipw_priv *priv, u16 priority, struct tfd_data *tfd)
{
  int __retres;
  
#line 7216 
  int tx_queue_id = 0;
  
#line 7219 
  tx_queue_id = from_priority_to_tx_queue[(int)priority] + -1;
  
#line 7220 
  tfd->tx_flags_ext = (unsigned char)((unsigned int)tfd->tx_flags_ext | 16U);
  
#line 7222 
  if ((((unsigned long)priv->qos_data.qos_no_ack_mask >> tx_queue_id) & 1UL) != 0UL) {
    
#line 7223 
    tfd->tx_flags = (unsigned char)((unsigned int)tfd->tx_flags & 127U);
    
#line 7224 
    tfd->tfd.tfd_26.mchdr.qos_ctrl = (unsigned short)((unsigned int)tfd->tfd.tfd_26.mchdr.qos_ctrl | 32U);
  }
  else ;
  
#line 7226 
  __retres = 0;
  
#line 7226 
  return __retres;
}


#line 7232  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_bg_qos_activate(struct work_struct *work)
{
  struct ipw_priv *tmp;
  {
    
#line 7235 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 7235 
    tmp = (struct ipw_priv *)__mptr + 18446744073709544136U;
  }
  
#line 7234 
  struct ipw_priv *priv = tmp;
  
#line 7237 
  ldv_mutex_lock_177(& priv->mutex);
  
#line 7239 
  if ((priv->status & 128U) != 0U) 
#line 7240 
                                   ipw_qos_activate(priv,& (priv->assoc_network)->qos_data); else ;
  
#line 7242 
  ldv_mutex_unlock_178(& priv->mutex);
  
#line 7243 
  return;
}


#line 7245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_handle_probe_response(struct net_device *dev, struct libipw_probe_response *resp, struct libipw_network *network)
{
  int __retres;
  
#line 7249 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 7250 
  int active_network = ((priv->status & 128U) != 0U && priv->assoc_network == network) != 0;
  
#line 7253 
  ipw_qos_handle_probe_response(priv,active_network,network);
  
#line 7255 
  __retres = 0;
  
#line 7255 
  return __retres;
}


#line 7258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_handle_beacon(struct net_device *dev, struct libipw_probe_response *resp, struct libipw_network *network)
{
  int __retres;
  
#line 7262 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 7263 
  int active_network = ((priv->status & 128U) != 0U && priv->assoc_network == network) != 0;
  
#line 7266 
  ipw_qos_handle_probe_response(priv,active_network,network);
  
#line 7268 
  __retres = 0;
  
#line 7268 
  return __retres;
}


#line 7271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_handle_assoc_response(struct net_device *dev, struct libipw_assoc_response *resp, struct libipw_network *network)
{
  int __retres;
  
#line 7275 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 7276 
  ipw_qos_association_resp(priv,network);
  
#line 7277 
  __retres = 0;
  
#line 7277 
  return __retres;
}


#line 7280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_send_qos_params_command(struct ipw_priv *priv, struct libipw_qos_parameters *qos_param)
{
  int tmp;
  
#line 7283 
  tmp = ipw_send_cmd_pdu(priv,(unsigned char)25,(unsigned char)96,(void *)qos_param);
  
#line 7283 
  return tmp;
}


#line 7287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_send_qos_info_command(struct ipw_priv *priv, struct libipw_qos_information_element *qos_param)
{
  int tmp;
  
#line 7290 
  tmp = ipw_send_cmd_pdu(priv,(unsigned char)84,(unsigned char)9,(void *)qos_param);
  
#line 7290 
  return tmp;
}


#line 7296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_associate_network(struct ipw_priv *priv, struct libipw_network *network, struct ipw_supported_rates *rates, int roaming_0)
{
  int __retres;
  int err;
  
#line 7302 
  if ((priv->config & 128U) != 0U) 
#line 7303 
                                   ipw_set_fixed_rate(priv,(int)network->mode); else ;
  
#line 7305 
  if ((priv->config & 2U) == 0U) {
    int tmp_0;
    {
      int tmp;
      
#line 7306 
      u8 _min1 = network->ssid_len;
      
#line 7306 
      unsigned char _min2 = (unsigned char)32U;
      
#line 7306 
      if ((int)_min1 < (int)_min2) 
#line 7306 
                                   tmp = (int)_min1; else 
#line 7306 
                                                          tmp = (int)_min2;
      
#line 7306 
      tmp_0 = tmp;
    }
    
#line 7306 
    priv->essid_len = (unsigned char)tmp_0;
    
#line 7308 
    memcpy((void *)(& priv->essid),(void const *)(& network->ssid),(unsigned long)priv->essid_len);
  }
  else ;
  
#line 7311 
  network->last_associate = (unsigned int)jiffies;
  
#line 7313 
  memset((void *)(& priv->assoc_request),0,40UL);
  
#line 7314 
  priv->assoc_request.channel = network->channel;
  
#line 7315 
  priv->assoc_request.auth_key = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U;
  
#line 7317 
  if ((priv->capability & 2U) != 0U && (unsigned int)(priv->ieee)->sec.auth_mode == 1U) {
    
#line 7319 
    priv->assoc_request.auth_type = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))1U;
    
#line 7320 
    priv->assoc_request.auth_key = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))(priv->ieee)->sec.active_key;
    
#line 7322 
    if ((unsigned int)(priv->ieee)->sec.level == 1U) 
#line 7323 
                                                     ipw_send_wep_keys(priv,0); else ;
  }
  else 
    
#line 7325 
    if ((priv->capability & 2U) != 0U && (unsigned int)(priv->ieee)->sec.auth_mode == 128U) 
      
#line 7327 
      priv->assoc_request.auth_type = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))2U; else 
                                                                    
#line 7329 
                                                                    priv->assoc_request.auth_type = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))0U;
  
#line 7331 
  if ((priv->ieee)->wpa_ie_len != 0UL) {
    
#line 7332 
    priv->assoc_request.policy_support = (unsigned short)2U;
    
#line 7333 
    ipw_set_rsn_capa(priv,(char *)(priv->ieee)->wpa_ie,(int)(priv->ieee)->wpa_ie_len);
  }
  else ;
  
#line 7342 
  if ((((int)network->mode & (priv->ieee)->mode) & 1) != 0) 
#line 7343 
                                                            priv->assoc_request.ieee_mode = (unsigned char)0U;
  else 
    
#line 7344 
    if ((((int)network->mode & (priv->ieee)->mode) & 4) != 0) 
#line 7345 
                                                              priv->assoc_request.ieee_mode = (unsigned char)2U;
    else 
      
#line 7346 
      if ((((int)network->mode & (priv->ieee)->mode) & 2) != 0) 
#line 7347 
                                                                priv->assoc_request.ieee_mode = (unsigned char)1U; else ;
  
#line 7349 
  priv->assoc_request.capability = network->capability;
  
#line 7350 
  if (((int)network->capability & 32) != 0 && (priv->config & 16U) == 0U) 
    
#line 7352 
    priv->assoc_request.preamble_length = (unsigned char)4U;
  else {
    
#line 7354 
    priv->assoc_request.preamble_length = (unsigned char)0U;
    
#line 7357 
    priv->assoc_request.capability = (unsigned short)((unsigned int)priv->assoc_request.capability & 65503U);
  }
  
#line 7362 
  if ((priv->ieee)->iw_mode == 1) 
#line 7363 
                                  priv->assoc_request.capability = (unsigned short)((unsigned int)priv->assoc_request.capability & 64511U); else ;
  
#line 7366 
  if ((ipw_debug_level & 4100U) != 0U) {
    int tmp_1;
    int tmp_2;
    char *tmp_3;
    char *tmp_5;
    char *tmp_6;
    char *tmp_7;
    char *tmp_8;
    char *tmp_9;
    int tmp_11;
    int tmp_10;
    
#line 7366 
    if ((priv->capability & 2U) != 0U) 
#line 7366 
                                       tmp_1 = 46; else 
#line 7366 
                                                        tmp_1 = 32;
    
#line 7366 
    if ((priv->capability & 2U) != 0U) 
#line 7366 
                                       tmp_2 = (int)(priv->ieee)->sec.active_key + 49; else 
                                                                    
#line 7366 
                                                                    tmp_2 = 46;
    
#line 7366 
    if ((priv->capability & 2U) != 0U) 
#line 7366 
                                       tmp_3 = (char *)" key="; else 
                                                                  
#line 7366 
                                                                  tmp_3 = (char *)"";
    
#line 7366 
    if ((priv->capability & 2U) != 0U) {
      char *tmp_4;
      
#line 7366 
      if ((priv->capability & 1U) != 0U) 
#line 7366 
                                         tmp_4 = (char *)"(shared)"; else 
                                                                    
#line 7366 
                                                                    tmp_4 = (char *)"(open)";
      
#line 7366 
      tmp_5 = tmp_4;
    }
    else 
#line 7366 
         tmp_5 = (char *)"";
    
#line 7366 
    if ((priv->capability & 2U) != 0U) 
#line 7366 
                                       tmp_6 = (char *)"on "; else 
#line 7366 
                                                                   tmp_6 = (char *)"off";
    
#line 7366 
    if (((int)network->capability & 32) != 0) 
#line 7366 
                                              tmp_7 = (char *)"short"; else 
                                                                    
#line 7366 
                                                                    tmp_7 = (char *)"long";
    
#line 7366 
    if ((unsigned int)priv->assoc_request.preamble_length == 0U) 
#line 7366 
                                                                 tmp_8 = (char *)"long"; else 
                                                                    
#line 7366 
                                                                    tmp_8 = (char *)"short";
    
#line 7366 
    ;
    
#line 7366 
    ;
    
#line 7366 
    ;
    
#line 7366 
    ;
    
#line 7366 
    ;
    
#line 7366 
    if (roaming_0 != 0) 
#line 7366 
                        tmp_9 = (char *)"Rea"; else 
#line 7366 
                                                    tmp_9 = (char *)"A";
    
#line 7366 
    tmp_10 = preempt_count();
    
#line 7366 
    if (((unsigned long)tmp_10 & 2096896UL) != 0UL) 
#line 7366 
                                                    tmp_11 = 73; else 
                                                                   
#line 7366 
                                                                   tmp_11 = 85;
    
#line 7366 
    printk("\001",tmp_11,"ipw_associate_network",tmp_9,(int)priv->essid_len,(u8 *)(& priv->essid),(int)network->channel,(int)ipw_modes[(int)priv->assoc_request.ieee_mode],(int)rates->num_rates,tmp_8,tmp_7,tmp_6,tmp_5,tmp_3,tmp_2,tmp_1);
  }
  else ;
  
#line 7385 
  priv->assoc_request.beacon_interval = network->beacon_interval;
  
#line 7386 
  if (((priv->ieee)->iw_mode == 1 && network->time_stamp[0] == 0U) && network->time_stamp[1] == 0U) {
    
#line 7388 
    priv->assoc_request.assoc_type = (unsigned char)3U;
    
#line 7389 
    priv->assoc_request.assoc_tsf_msw = 0U;
    
#line 7390 
    priv->assoc_request.assoc_tsf_lsw = 0U;
  }
  else {
    
#line 7392 
    if ((long)(roaming_0 != 0) != 0L) 
#line 7393 
                                      priv->assoc_request.assoc_type = (unsigned char)1U; else 
                                                                    
#line 7395 
                                                                    priv->assoc_request.assoc_type = (unsigned char)0U;
    
#line 7396 
    priv->assoc_request.assoc_tsf_msw = network->time_stamp[1];
    
#line 7397 
    priv->assoc_request.assoc_tsf_lsw = network->time_stamp[0];
  }
  
#line 7400 
  memcpy((void *)(& priv->assoc_request.bssid),(void const *)(& network->bssid),6UL);
  
#line 7402 
  if ((priv->ieee)->iw_mode == 1) {
    
#line 7403 
    eth_broadcast_addr((u8 *)(& priv->assoc_request.dest));
    
#line 7404 
    priv->assoc_request.atim_window = network->atim_window;
  }
  else {
    
#line 7406 
    memcpy((void *)(& priv->assoc_request.dest),(void const *)(& network->bssid),6UL);
    
#line 7407 
    priv->assoc_request.atim_window = (unsigned short)0U;
  }
  
#line 7410 
  priv->assoc_request.listen_interval = network->listen_interval;
  
#line 7412 
  err = ipw_send_ssid(priv,(u8 *)(& priv->essid),(int)priv->essid_len);
  
#line 7413 
  if (err != 0) {
    
#line 7414 
    if ((ipw_debug_level & 32U) != 0U) {
      int tmp_13;
      int tmp_12;
      
#line 7414 
      tmp_12 = preempt_count();
      
#line 7414 
      if (((unsigned long)tmp_12 & 2096896UL) != 0UL) 
#line 7414 
                                                      tmp_13 = 73; else 
                                                                    
#line 7414 
                                                                    tmp_13 = 85;
      
#line 7414 
      printk("\001",tmp_13,"ipw_associate_network");
    }
    else ;
    
#line 7415 
    __retres = err;
    
#line 7415 
    goto return_label;
  }
  else ;
  
#line 7418 
  rates->ieee_mode = priv->assoc_request.ieee_mode;
  
#line 7419 
  rates->purpose = (unsigned char)0U;
  
#line 7420 
  ipw_send_supported_rates(priv,rates);
  
#line 7422 
  if ((unsigned int)priv->assoc_request.ieee_mode == 2U) 
#line 7423 
                                                         priv->sys_config.dot11g_auto_detection = (unsigned char)1U; else 
                                                                    
#line 7425 
                                                                    priv->sys_config.dot11g_auto_detection = (unsigned char)0U;
  
#line 7427 
  if ((priv->ieee)->iw_mode == 1) 
#line 7428 
                                  priv->sys_config.answer_broadcast_ssid_probe = (unsigned char)1U; else 
                                                                    
#line 7430 
                                                                    priv->sys_config.answer_broadcast_ssid_probe = (unsigned char)0U;
  
#line 7432 
  err = ipw_send_system_config(priv);
  
#line 7433 
  if (err != 0) {
    
#line 7434 
    if ((ipw_debug_level & 32U) != 0U) {
      int tmp_15;
      int tmp_14;
      
#line 7434 
      tmp_14 = preempt_count();
      
#line 7434 
      if (((unsigned long)tmp_14 & 2096896UL) != 0UL) 
#line 7434 
                                                      tmp_15 = 73; else 
                                                                    
#line 7434 
                                                                    tmp_15 = 85;
      
#line 7434 
      printk("\001",tmp_15,"ipw_associate_network");
    }
    else ;
    
#line 7435 
    __retres = err;
    
#line 7435 
    goto return_label;
  }
  else ;
  
#line 7438 
  if ((ipw_debug_level & 4100U) != 0U) {
    int tmp_17;
    int tmp_16;
    
#line 7438 
    ;
    
#line 7438 
    tmp_16 = preempt_count();
    
#line 7438 
    if (((unsigned long)tmp_16 & 2096896UL) != 0UL) 
#line 7438 
                                                    tmp_17 = 73; else 
                                                                   
#line 7438 
                                                                   tmp_17 = 85;
    
#line 7438 
    printk("\001",tmp_17,"ipw_associate_network",(int)network->stats.rssi);
  }
  else ;
  
#line 7439 
  err = ipw_set_sensitivity(priv,(unsigned short)((int)((unsigned int)((unsigned short)network->stats.rssi) + 112U)));
  
#line 7440 
  if (err != 0) {
    
#line 7441 
    if ((ipw_debug_level & 32U) != 0U) {
      int tmp_19;
      int tmp_18;
      
#line 7441 
      tmp_18 = preempt_count();
      
#line 7441 
      if (((unsigned long)tmp_18 & 2096896UL) != 0UL) 
#line 7441 
                                                      tmp_19 = 73; else 
                                                                    
#line 7441 
                                                                    tmp_19 = 85;
      
#line 7441 
      printk("\001",tmp_19,"ipw_associate_network");
    }
    else ;
    
#line 7442 
    __retres = err;
    
#line 7442 
    goto return_label;
  }
  else ;
  
#line 7450 
  priv->channel = network->channel;
  
#line 7451 
  memcpy((void *)(& priv->bssid),(void const *)(& network->bssid),6UL);
  
#line 7452 
  priv->status |= 256U;
  
#line 7453 
  priv->status &= 2147483647U;
  
#line 7455 
  priv->assoc_network = network;
  
#line 7458 
  ipw_qos_association(priv,network);
  
#line 7461 
  err = ipw_send_associate(priv,& priv->assoc_request);
  
#line 7462 
  if (err != 0) {
    
#line 7463 
    if ((ipw_debug_level & 32U) != 0U) {
      int tmp_21;
      int tmp_20;
      
#line 7463 
      tmp_20 = preempt_count();
      
#line 7463 
      if (((unsigned long)tmp_20 & 2096896UL) != 0UL) 
#line 7463 
                                                      tmp_21 = 73; else 
                                                                    
#line 7463 
                                                                    tmp_21 = 85;
      
#line 7463 
      printk("\001",tmp_21,"ipw_associate_network");
    }
    else ;
    
#line 7464 
    __retres = err;
    
#line 7464 
    goto return_label;
  }
  else ;
  
#line 7467 
  if ((ipw_debug_level & 64U) != 0U) {
    int tmp_23;
    int tmp_22;
    
#line 7467 
    ;
    
#line 7467 
    ;
    
#line 7467 
    ;
    
#line 7467 
    tmp_22 = preempt_count();
    
#line 7467 
    if (((unsigned long)tmp_22 & 2096896UL) != 0UL) 
#line 7467 
                                                    tmp_23 = 73; else 
                                                                   
#line 7467 
                                                                   tmp_23 = 85;
    
#line 7467 
    printk("\001",tmp_23,"ipw_associate_network",(int)priv->essid_len,(u8 *)(& priv->essid),(u8 *)(& priv->bssid));
  }
  else ;
  
#line 7470 
  __retres = 0;
  return_label: 
#line 7470 
                return __retres;
}


#line 7473  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_roam(void *data)
{
  
#line 7475 
  struct ipw_priv *priv = (struct ipw_priv *)data;
  
#line 7476 
  struct libipw_network *network = (struct libipw_network *)0;
  
#line 7477 
  struct ipw_network_match match = {.network = priv->assoc_network, .rates = {.ieee_mode = (unsigned char)0, .num_rates = (unsigned char)0, .purpose = (unsigned char)0, .reserved = (unsigned char)0, .supported_rates = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}}};
  
#line 7501 
  if ((priv->status & 1152U) == 0U) 
#line 7502 
                                    goto return_label; else ;
  
#line 7504 
  if ((priv->status & 128U) != 0U) {
    unsigned long flags;
    struct libipw_network *tmp;
    struct libipw_network *tmp_0;
    
#line 7508 
    u8 rssi = (unsigned char)(priv->assoc_network)->stats.rssi;
    
#line 7509 
    (priv->assoc_network)->stats.rssi = (signed char)(-128);
    
#line 7510 
    ldv___ldv_spin_lock_179(& (priv->ieee)->lock);
    {
      
#line 7511 
      struct list_head const *__mptr = (struct list_head const *)(priv->ieee)->network_list.next;
      
#line 7511 
      tmp = (struct libipw_network *)__mptr + 18446744073709551264U;
    }
    
#line 7511 
    network = tmp;
    
#line 7511 
    goto ldv_55904;
    ldv_55903: 
#line 7512 
    ;
    
#line 7512 
    if (priv->assoc_network != network) 
#line 7513 
                                        ipw_best_network(priv,& match,network,1); else ;
    {
      
#line 7511 
      struct list_head const *__mptr_0 = (struct list_head const *)network->list.next;
      
#line 7511 
      tmp_0 = (struct libipw_network *)__mptr_0 + 18446744073709551264U;
    }
    
#line 7511 
    network = tmp_0;
    ldv_55904: 
#line 7513 
    ;
    
#line 7511 
    if (& network->list != & (priv->ieee)->network_list) 
#line 7513 
                                                         goto ldv_55903; else 
                                                                    
#line 7516 
                                                                    goto ldv_55905;
    ldv_55905: 
#line 7517 
    ;
    
#line 7515 
    ldv_spin_unlock_irqrestore_180(& (priv->ieee)->lock,flags);
    
#line 7516 
    (priv->assoc_network)->stats.rssi = (signed char)rssi;
    
#line 7518 
    if (match.network == priv->assoc_network) {
      
#line 7519 
      if ((ipw_debug_level & 4100U) != 0U) {
        int tmp_2;
        int tmp_1;
        
#line 7519 
        tmp_1 = preempt_count();
        
#line 7519 
        if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 7519 
                                                       tmp_2 = 73; else 
                                                                    
#line 7519 
                                                                    tmp_2 = 85;
        
#line 7519 
        printk("\001",tmp_2,"ipw_roam");
      }
      else ;
      
#line 7521 
      priv->status &= 4294966271U;
      
#line 7522 
      ipw_debug_config(priv);
      
#line 7523 
      goto return_label;
    }
    else ;
    
#line 7526 
    ipw_send_disassociate(priv,1);
    
#line 7527 
    priv->assoc_network = match.network;
    
#line 7529 
    goto return_label;
  }
  else ;
  
#line 7533 
  ipw_compatible_rates(priv,(struct libipw_network const *)priv->assoc_network,& match.rates);
  
#line 7534 
  ipw_associate_network(priv,priv->assoc_network,& match.rates,1);
  
#line 7535 
  priv->status &= 4294966271U;
  return_label: 
#line 7536 
                return;
}


#line 7538  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_bg_roam(struct work_struct *work)
{
  struct ipw_priv *tmp;
  {
    
#line 7541 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 7541 
    tmp = (struct ipw_priv *)__mptr + 18446744073709545584U;
  }
  
#line 7540 
  struct ipw_priv *priv = tmp;
  
#line 7542 
  ldv_mutex_lock_181(& priv->mutex);
  
#line 7543 
  ipw_roam((void *)priv);
  
#line 7544 
  ldv_mutex_unlock_182(& priv->mutex);
  
#line 7545 
  return;
}


#line 7547  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_associate(void *data)
{
  int __retres;
  struct ipw_supported_rates *rates;
  struct list_head *element;
  unsigned long flags;
  int tmp_7;
  struct libipw_network *tmp_10;
  struct libipw_network *tmp_11;
  
#line 7549 
  struct ipw_priv *priv = (struct ipw_priv *)data;
  
#line 7551 
  struct libipw_network *network = (struct libipw_network *)0;
  
#line 7552 
  struct ipw_network_match match = {.network = (struct libipw_network *)0, .rates = {.ieee_mode = (unsigned char)0, .num_rates = (unsigned char)0, .purpose = (unsigned char)0, .reserved = (unsigned char)0, .supported_rates = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}}};
  
#line 7559 
  if ((priv->ieee)->iw_mode == 6) {
    
#line 7560 
    if ((ipw_debug_level & 4100U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 7560 
      tmp = preempt_count();
      
#line 7560 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 7560 
                                                   tmp_0 = 73; else 
#line 7560 
                                                                    tmp_0 = 85;
      
#line 7560 
      printk("\001",tmp_0,"ipw_associate");
    }
    else ;
    
#line 7561 
    __retres = 0;
    
#line 7561 
    goto return_label;
  }
  else ;
  
#line 7564 
  if ((priv->status & 384U) != 0U) {
    
#line 7565 
    if ((ipw_debug_level & 4100U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 7565 
      tmp_1 = preempt_count();
      
#line 7565 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 7565 
                                                     tmp_2 = 73; else 
                                                                   
#line 7565 
                                                                   tmp_2 = 85;
      
#line 7565 
      printk("\001",tmp_2,"ipw_associate");
    }
    else ;
    
#line 7567 
    __retres = 0;
    
#line 7567 
    goto return_label;
  }
  else ;
  
#line 7570 
  if ((priv->status & 512U) != 0U) {
    
#line 7571 
    if ((ipw_debug_level & 4100U) != 0U) {
      int tmp_4;
      int tmp_3;
      
#line 7571 
      tmp_3 = preempt_count();
      
#line 7571 
      if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 7571 
                                                     tmp_4 = 73; else 
                                                                   
#line 7571 
                                                                   tmp_4 = 85;
      
#line 7571 
      printk("\001",tmp_4,"ipw_associate");
    }
    else ;
    
#line 7573 
    ldv_schedule_work_183(& priv->associate);
    
#line 7574 
    __retres = 0;
    
#line 7574 
    goto return_label;
  }
  else ;
  
#line 7577 
  tmp_7 = ipw_is_init(priv);
  
#line 7577 
  if (tmp_7 == 0) 
#line 7577 
                  goto _LOR;
  else 
    
#line 7577 
    if ((priv->status & 2097152U) != 0U) {
      _LOR: {
              
#line 7578 
              if ((ipw_debug_level & 4100U) != 0U) {
                int tmp_6;
                int tmp_5;
                
#line 7578 
                tmp_5 = preempt_count();
                
#line 7578 
                if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 7578 
                                                               tmp_6 = 73; else 
                                                                    
#line 7578 
                                                                    tmp_6 = 85;
                
#line 7578 
                printk("\001",tmp_6,"ipw_associate");
              }
              else ;
              
#line 7580 
              __retres = 0;
              
#line 7580 
              goto return_label;
            }
    }
    else ;
  
#line 7583 
  if ((priv->config & 64U) == 0U && (priv->config & 6U) == 0U) {
    
#line 7585 
    if ((ipw_debug_level & 4100U) != 0U) {
      int tmp_9;
      int tmp_8;
      
#line 7585 
      tmp_8 = preempt_count();
      
#line 7585 
      if (((unsigned long)tmp_8 & 2096896UL) != 0UL) 
#line 7585 
                                                     tmp_9 = 73; else 
                                                                   
#line 7585 
                                                                   tmp_9 = 85;
      
#line 7585 
      printk("\001",tmp_9,"ipw_associate");
    }
    else ;
    
#line 7586 
    __retres = 0;
    
#line 7586 
    goto return_label;
  }
  else ;
  
#line 7590 
  ldv___ldv_spin_lock_184(& (priv->ieee)->lock);
  {
    
#line 7591 
    struct list_head const *__mptr = (struct list_head const *)(priv->ieee)->network_list.next;
    
#line 7591 
    tmp_10 = (struct libipw_network *)__mptr + 18446744073709551264U;
  }
  
#line 7591 
  network = tmp_10;
  
#line 7591 
  goto ldv_55928;
  ldv_55927: 
#line 7592 
  ;
  
#line 7592 
  ipw_best_network(priv,& match,network,0);
  {
    
#line 7591 
    struct list_head const *__mptr_0 = (struct list_head const *)network->list.next;
    
#line 7591 
    tmp_11 = (struct libipw_network *)__mptr_0 + 18446744073709551264U;
  }
  
#line 7591 
  network = tmp_11;
  ldv_55928: 
#line 7593 
  ;
  
#line 7591 
  if (& network->list != & (priv->ieee)->network_list) 
#line 7593 
                                                       goto ldv_55927; else 
                                                                    
#line 7596 
                                                                    goto ldv_55929;
  ldv_55929: 
#line 7597 
  ;
  
#line 7594 
  network = match.network;
  
#line 7595 
  rates = & match.rates;
  
#line 7597 
  if ((((network == (struct libipw_network *)0 && (priv->ieee)->iw_mode == 1) && (priv->config & 256U) != 0U) && (priv->config & 2U) != 0U) && (priv->config & 1U) != 0U) {
    int tmp_16;
    struct libipw_network *tmp_17;
    
#line 7603 
    tmp_16 = list_empty((struct list_head const *)(& (priv->ieee)->network_free_list));
    
#line 7603 
    if (tmp_16 != 0) {
      struct libipw_network *target;
      struct libipw_network *tmp_12;
      struct libipw_network *tmp_13;
      
#line 7604 
      struct libipw_network *oldest = (struct libipw_network *)0;
      {
        
#line 7607 
        struct list_head const *__mptr_1 = (struct list_head const *)(priv->ieee)->network_list.next;
        
#line 7607 
        tmp_12 = (struct libipw_network *)__mptr_1 + 18446744073709551264U;
      }
      
#line 7607 
      target = tmp_12;
      
#line 7607 
      goto ldv_55937;
      ldv_55936: 
#line 7608 
      ;
      
#line 7608 
      if (oldest == (struct libipw_network *)0 || target->last_scanned < oldest->last_scanned) 
        
#line 7610 
        oldest = target; else ;
      {
        
#line 7607 
        struct list_head const *__mptr_2 = (struct list_head const *)target->list.next;
        
#line 7607 
        tmp_13 = (struct libipw_network *)__mptr_2 + 18446744073709551264U;
      }
      
#line 7607 
      target = tmp_13;
      ldv_55937: 
#line 7609 
      ;
      
#line 7607 
      if (& target->list != & (priv->ieee)->network_list) 
#line 7609 
                                                          goto ldv_55936; else 
                                                                    
#line 7612 
                                                                    goto ldv_55938;
      ldv_55938: 
#line 7613 
      ;
      
#line 7614 
      list_del(& oldest->list);
      
#line 7615 
      target = oldest;
      
#line 7616 
      if ((ipw_debug_level & 4100U) != 0U) {
        int tmp_15;
        int tmp_14;
        
#line 7616 
        ;
        
#line 7616 
        ;
        
#line 7616 
        ;
        
#line 7616 
        tmp_14 = preempt_count();
        
#line 7616 
        if (((unsigned long)tmp_14 & 2096896UL) != 0UL) 
#line 7616 
                                                        tmp_15 = 73; else 
                                                                    
#line 7616 
                                                                    tmp_15 = 85;
        
#line 7616 
        printk("\001",tmp_15,"ipw_associate",(int)target->ssid_len,(u8 *)(& target->ssid),(u8 *)(& target->bssid));
      }
      else ;
      
#line 7619 
      list_add_tail(& target->list,& (priv->ieee)->network_free_list);
    }
    else ;
    
#line 7623 
    element = (priv->ieee)->network_free_list.next;
    {
      
#line 7624 
      struct list_head const *__mptr_3 = (struct list_head const *)element;
      
#line 7624 
      tmp_17 = (struct libipw_network *)__mptr_3 + 18446744073709551264U;
    }
    
#line 7624 
    network = tmp_17;
    
#line 7625 
    ipw_adhoc_create(priv,network);
    
#line 7626 
    rates = & priv->rates;
    
#line 7627 
    list_del(element);
    
#line 7628 
    list_add_tail(& network->list,& (priv->ieee)->network_list);
  }
  else ;
  
#line 7630 
  ldv_spin_unlock_irqrestore_185(& (priv->ieee)->lock,flags);
  
#line 7634 
  if (network == (struct libipw_network *)0) {
    
#line 7635 
    ipw_debug_config(priv);
    
#line 7637 
    if ((priv->status & 2097152U) == 0U) 
      
#line 7638 
      if ((priv->config & 2048U) == 0U) 
#line 7639 
                                        ldv_schedule_delayed_work_186(& priv->request_scan,25UL); else 
                                                                    
#line 7642 
                                                                    ldv_schedule_delayed_work_187(& priv->request_scan,0UL);
    else ;
    
#line 7645 
    __retres = 0;
    
#line 7645 
    goto return_label;
  }
  else ;
  
#line 7648 
  ipw_associate_network(priv,network,rates,0);
  
#line 7650 
  __retres = 1;
  return_label: 
#line 7650 
                return __retres;
}


#line 7653  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_bg_associate(struct work_struct *work)
{
  struct ipw_priv *tmp;
  {
    
#line 7656 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 7656 
    tmp = (struct ipw_priv *)__mptr + 18446744073709547568U;
  }
  
#line 7655 
  struct ipw_priv *priv = tmp;
  
#line 7657 
  ldv_mutex_lock_188(& priv->mutex);
  
#line 7658 
  ipw_associate((void *)priv);
  
#line 7659 
  ldv_mutex_unlock_189(& priv->mutex);
  
#line 7660 
  return;
}


#line 7662  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_rebuild_decrypted_skb(struct ipw_priv *priv, struct sk_buff *skb)
{
  struct ieee80211_hdr *hdr;
  u16 fc;
  
#line 7668 
  hdr = (struct ieee80211_hdr *)skb->data;
  
#line 7669 
  fc = hdr->frame_control;
  
#line 7670 
  if (((int)fc & 16384) == 0) 
#line 7671 
                              goto return_label; else ;
  
#line 7673 
  fc = (unsigned short)((unsigned int)fc & 49151U);
  
#line 7674 
  hdr->frame_control = fc;
  
#line 7675 
  switch ((int)(priv->ieee)->sec.level) {
    case 4: 
#line 7676 
    ;
    
#line 7678 
    memmove((void *)(skb->data + 24U),(void const *)(skb->data + 32U),(unsigned long)(skb->len + 4294967264U));
    
#line 7681 
    skb_trim(skb,skb->len + 4294967280U);
    
#line 7682 
    goto ldv_55954;
    case 2: 
#line 7683 
    ;
    
#line 7684 
    goto ldv_55954;
    case 1: 
#line 7685 
    ;
    
#line 7687 
    memmove((void *)(skb->data + 24U),(void const *)(skb->data + 28U),(unsigned long)(skb->len + 4294967268U));
    
#line 7690 
    skb_trim(skb,skb->len + 4294967288U);
    
#line 7691 
    goto ldv_55954;
    case 0: 
#line 7692 
    ;
    
#line 7693 
    goto ldv_55954;
    default: 
#line 7694 
    ;
    
#line 7695 
    printk("\001",(int)(priv->ieee)->sec.level);
    
#line 7697 
    goto ldv_55954;
  }
  ldv_55954: 
#line 7699 
  ;
  return_label: 
#line 7700 
                return;
}


#line 7701  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_handle_data_packet(struct ipw_priv *priv, struct ipw_rx_mem_buffer *rxb, struct libipw_rx_stats *stats)
{
  struct libipw_hdr_4addr *hdr;
  int tmp_5;
  int tmp_10;
  
#line 7705 
  struct net_device *dev = priv->net_dev;
  
#line 7707 
  struct ipw_rx_packet *pkt = (struct ipw_rx_packet *)(rxb->skb)->data;
  
#line 7710 
  dev->trans_start = jiffies;
  
#line 7714 
  tmp_5 = skb_tailroom((struct sk_buff const *)rxb->skb);
  
#line 7714 
  ;
  
#line 7714 
  if ((long)((unsigned int)pkt->u.frame.length + 28U > (unsigned int)tmp_5) != 0L) {
    
#line 7716 
    dev->stats.rx_errors += 1UL;
    
#line 7717 
    priv->wstats.discard.misc += 1U;
    
#line 7718 
    if ((ipw_debug_level & 8192U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 7718 
      tmp = preempt_count();
      
#line 7718 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 7718 
                                                   tmp_0 = 73; else 
#line 7718 
                                                                    tmp_0 = 85;
      
#line 7718 
      printk("\001",tmp_0,"ipw_handle_data_packet");
    }
    else ;
    
#line 7719 
    goto return_label;
  }
  else {
    int tmp_4;
    bool tmp_3;
    
#line 7720 
    tmp_3 = netif_running((struct net_device const *)priv->net_dev);
    
#line 7720 
    if (tmp_3) 
#line 7720 
               tmp_4 = 0; else 
#line 7720 
                               tmp_4 = 1;
    
#line 7720 
    if ((long)tmp_4 != 0L) {
      
#line 7721 
      dev->stats.rx_dropped += 1UL;
      
#line 7722 
      priv->wstats.discard.misc += 1U;
      
#line 7723 
      if ((ipw_debug_level & 8192U) != 0U) {
        int tmp_2;
        int tmp_1;
        
#line 7723 
        tmp_1 = preempt_count();
        
#line 7723 
        if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 7723 
                                                       tmp_2 = 73; else 
                                                                    
#line 7723 
                                                                    tmp_2 = 85;
        
#line 7723 
        printk("\001",tmp_2,"ipw_handle_data_packet");
      }
      else ;
      
#line 7724 
      goto return_label;
    }
    else ;
  }
  
#line 7728 
  skb_reserve(rxb->skb,28);
  
#line 7731 
  skb_put(rxb->skb,(unsigned int)pkt->u.frame.length);
  
#line 7733 
  if ((ipw_debug_level & 16777216U) != 0U) {
    int tmp_7;
    int tmp_6;
    
#line 7733 
    ;
    
#line 7733 
    tmp_6 = preempt_count();
    
#line 7733 
    if (((unsigned long)tmp_6 & 2096896UL) != 0UL) 
#line 7733 
                                                   tmp_7 = 73; else 
#line 7733 
                                                                    tmp_7 = 85;
    
#line 7733 
    printk("\001",tmp_7,"ipw_handle_data_packet",(rxb->skb)->len);
  }
  else ;
  
#line 7736 
  hdr = (struct libipw_hdr_4addr *)(rxb->skb)->data;
  
#line 7737 
  if ((priv->ieee)->iw_mode != 6) {
    int tmp_9;
    bool tmp_8;
    
#line 7737 
    tmp_8 = is_multicast_ether_addr((u8 const *)(& hdr->addr1));
    
#line 7737 
    if ((int)tmp_8 != 0) 
#line 7737 
                         tmp_9 = (priv->ieee)->host_mc_decrypt == 0; else 
                                                                    
#line 7737 
                                                                    tmp_9 = (priv->ieee)->host_decrypt == 0;
    
#line 7737 
    if (tmp_9) 
#line 7740 
               ipw_rebuild_decrypted_skb(priv,rxb->skb); else ;
  }
  else ;
  
#line 7742 
  tmp_10 = libipw_rx(priv->ieee,rxb->skb,stats);
  
#line 7742 
  if (tmp_10 == 0) 
#line 7743 
                   dev->stats.rx_errors += 1UL;
  else {
    
#line 7745 
    rxb->skb = (struct sk_buff *)0;
    
#line 7746 
    __ipw_led_activity_on(priv);
  }
  return_label: 
#line 7748 
                return;
}


#line 7751  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_handle_data_packet_monitor(struct ipw_priv *priv, struct ipw_rx_mem_buffer *rxb, struct libipw_rx_stats *stats)
{
  struct ipw_rt_hdr *ipw_rt;
  int tmp_5;
  int tmp_11;
  
#line 7755 
  struct net_device *dev = priv->net_dev;
  
#line 7756 
  struct ipw_rx_packet *pkt = (struct ipw_rx_packet *)(rxb->skb)->data;
  
#line 7757 
  struct ipw_rx_frame *frame = & pkt->u.frame;
  
#line 7760 
  u16 received_channel = (unsigned short)frame->received_channel;
  
#line 7761 
  u8 antennaAndPhy = frame->antennaAndPhy;
  
#line 7762 
  s8 antsignal = (signed char)((unsigned int)frame->rssi_dbm + 144U);
  
#line 7763 
  u16 pktrate = (unsigned short)frame->rate;
  
#line 7770 
  unsigned short len = pkt->u.frame.length;
  
#line 7773 
  dev->trans_start = jiffies;
  
#line 7777 
  tmp_5 = skb_tailroom((struct sk_buff const *)rxb->skb);
  
#line 7777 
  ;
  
#line 7777 
  if ((long)((unsigned int)pkt->u.frame.length + 28U > (unsigned int)tmp_5) != 0L) {
    
#line 7779 
    dev->stats.rx_errors += 1UL;
    
#line 7780 
    priv->wstats.discard.misc += 1U;
    
#line 7781 
    if ((ipw_debug_level & 8192U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 7781 
      tmp = preempt_count();
      
#line 7781 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 7781 
                                                   tmp_0 = 73; else 
#line 7781 
                                                                    tmp_0 = 85;
      
#line 7781 
      printk("\001",tmp_0,"ipw_handle_data_packet_monitor");
    }
    else ;
    
#line 7782 
    goto return_label;
  }
  else {
    int tmp_4;
    bool tmp_3;
    
#line 7783 
    tmp_3 = netif_running((struct net_device const *)priv->net_dev);
    
#line 7783 
    if (tmp_3) 
#line 7783 
               tmp_4 = 0; else 
#line 7783 
                               tmp_4 = 1;
    
#line 7783 
    if ((long)tmp_4 != 0L) {
      
#line 7784 
      dev->stats.rx_dropped += 1UL;
      
#line 7785 
      priv->wstats.discard.misc += 1U;
      
#line 7786 
      if ((ipw_debug_level & 8192U) != 0U) {
        int tmp_2;
        int tmp_1;
        
#line 7786 
        tmp_1 = preempt_count();
        
#line 7786 
        if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 7786 
                                                       tmp_2 = 73; else 
                                                                    
#line 7786 
                                                                    tmp_2 = 85;
        
#line 7786 
        printk("\001",tmp_2,"ipw_handle_data_packet_monitor");
      }
      else ;
      
#line 7787 
      goto return_label;
    }
    else ;
  }
  
#line 7792 
  if ((unsigned int)len > 2975U) {
    
#line 7794 
    dev->stats.rx_dropped += 1UL;
    
#line 7795 
    priv->wstats.discard.misc += 1U;
    
#line 7796 
    if ((ipw_debug_level & 8192U) != 0U) {
      int tmp_7;
      int tmp_6;
      
#line 7796 
      tmp_6 = preempt_count();
      
#line 7796 
      if (((unsigned long)tmp_6 & 2096896UL) != 0UL) 
#line 7796 
                                                     tmp_7 = 73; else 
                                                                   
#line 7796 
                                                                   tmp_7 = 85;
      
#line 7796 
      printk("\001",tmp_7,"ipw_handle_data_packet_monitor");
    }
    else ;
    
#line 7797 
    goto return_label;
  }
  else ;
  
#line 7801 
  memmove((void *)((rxb->skb)->data + 25U),(void const *)((rxb->skb)->data + 28U),(unsigned long)len);
  
#line 7804 
  ipw_rt = (struct ipw_rt_hdr *)(rxb->skb)->data;
  
#line 7806 
  ipw_rt->rt_hdr.it_version = (unsigned char)0U;
  
#line 7807 
  ipw_rt->rt_hdr.it_pad = (unsigned char)0U;
  
#line 7808 
  ipw_rt->rt_hdr.it_len = (unsigned short)25U;
  
#line 7811 
  ipw_rt->rt_hdr.it_present = 2159U;
  
#line 7821 
  ipw_rt->rt_flags = (unsigned char)0U;
  
#line 7822 
  ipw_rt->rt_tsf = (unsigned long long)(((((int)frame->parent_tsf[3] << 24) | ((int)frame->parent_tsf[2] << 16)) | ((int)frame->parent_tsf[1] << 8)) | (int)frame->parent_tsf[0]);
  
#line 7828 
  ipw_rt->rt_dbmsignal = antsignal;
  
#line 7829 
  ipw_rt->rt_dbmnoise = (signed char)frame->noise;
  
#line 7832 
  if ((unsigned int)received_channel <= 14U) {
    unsigned int tmp_8;
    
#line 7832 
    if ((unsigned int)received_channel != 14U) 
#line 7832 
                                               tmp_8 = (unsigned int)received_channel * 5U + 2407U; else 
                                                                    
#line 7832 
                                                                    tmp_8 = 2484U;
    
#line 7832 
    ipw_rt->rt_channel = (unsigned short)tmp_8;
  }
  else 
#line 7832 
       ipw_rt->rt_channel = (unsigned short)((unsigned int)received_channel * 5U + 5000U);
  
#line 7833 
  if ((unsigned int)received_channel > 14U) 
#line 7834 
                                            ipw_rt->rt_chbitmask = (unsigned short)320U;
  else 
    
#line 7836 
    if (((int)antennaAndPhy & 32) != 0) 
#line 7837 
                                        ipw_rt->rt_chbitmask = (unsigned short)160U; else 
                                                                    
#line 7840 
                                                                    ipw_rt->rt_chbitmask = (unsigned short)192U;
  
#line 7845 
  switch ((int)pktrate) {
    case 10: 
#line 7846 
    ;
    
#line 7847 
    ipw_rt->rt_rate = (unsigned char)2U;
    
#line 7848 
    goto ldv_55984;
    case 20: 
#line 7849 
    ;
    
#line 7850 
    ipw_rt->rt_rate = (unsigned char)4U;
    
#line 7851 
    goto ldv_55984;
    case 55: 
#line 7852 
    ;
    
#line 7853 
    ipw_rt->rt_rate = (unsigned char)10U;
    
#line 7854 
    goto ldv_55984;
    case 13: 
#line 7855 
    ;
    
#line 7856 
    ipw_rt->rt_rate = (unsigned char)12U;
    
#line 7857 
    goto ldv_55984;
    case 15: 
#line 7858 
    ;
    
#line 7859 
    ipw_rt->rt_rate = (unsigned char)18U;
    
#line 7860 
    goto ldv_55984;
    case 110: 
#line 7861 
    ;
    
#line 7862 
    ipw_rt->rt_rate = (unsigned char)22U;
    
#line 7863 
    goto ldv_55984;
    case 5: 
#line 7864 
    ;
    
#line 7865 
    ipw_rt->rt_rate = (unsigned char)24U;
    
#line 7866 
    goto ldv_55984;
    case 7: 
#line 7867 
    ;
    
#line 7868 
    ipw_rt->rt_rate = (unsigned char)36U;
    
#line 7869 
    goto ldv_55984;
    case 9: 
#line 7870 
    ;
    
#line 7871 
    ipw_rt->rt_rate = (unsigned char)48U;
    
#line 7872 
    goto ldv_55984;
    case 11: 
#line 7873 
    ;
    
#line 7874 
    ipw_rt->rt_rate = (unsigned char)72U;
    
#line 7875 
    goto ldv_55984;
    case 1: 
#line 7876 
    ;
    
#line 7877 
    ipw_rt->rt_rate = (unsigned char)96U;
    
#line 7878 
    goto ldv_55984;
    case 3: 
#line 7879 
    ;
    
#line 7880 
    ipw_rt->rt_rate = (unsigned char)108U;
    
#line 7881 
    goto ldv_55984;
    default: 
#line 7882 
    ;
    
#line 7883 
    ipw_rt->rt_rate = (unsigned char)0U;
    
#line 7884 
    goto ldv_55984;
  }
  ldv_55984: 
#line 7888 
  ;
  
#line 7888 
  ipw_rt->rt_antenna = (unsigned char)((unsigned int)antennaAndPhy & 3U);
  
#line 7891 
  if (((int)antennaAndPhy & 64) != 0) 
#line 7892 
                                      ipw_rt->rt_flags = (unsigned char)((unsigned int)ipw_rt->rt_flags | 2U); else ;
  
#line 7895 
  skb_put(rxb->skb,(unsigned int)len + 25U);
  
#line 7897 
  if ((ipw_debug_level & 16777216U) != 0U) {
    int tmp_10;
    int tmp_9;
    
#line 7897 
    ;
    
#line 7897 
    tmp_9 = preempt_count();
    
#line 7897 
    if (((unsigned long)tmp_9 & 2096896UL) != 0UL) 
#line 7897 
                                                   tmp_10 = 73; else 
                                                                  
#line 7897 
                                                                  tmp_10 = 85;
    
#line 7897 
    printk("\001",tmp_10,"ipw_handle_data_packet_monitor",(rxb->skb)->len);
  }
  else ;
  
#line 7899 
  tmp_11 = libipw_rx(priv->ieee,rxb->skb,stats);
  
#line 7899 
  if (tmp_11 == 0) 
#line 7900 
                   dev->stats.rx_errors += 1UL; else 
#line 7902 
                                                     rxb->skb = (struct sk_buff *)0;
  return_label: 
#line 7903 
                return;
}


#line 7928  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_handle_promiscuous_rx(struct ipw_priv *priv, struct ipw_rx_mem_buffer *rxb, struct libipw_rx_stats *stats)
{
  struct ipw_rt_hdr *ipw_rt;
  struct ieee80211_hdr *hdr;
  struct sk_buff *skb;
  int tmp_1;
  int tmp_5;
  bool tmp_4;
  int tmp_12;
  
#line 7932 
  struct net_device *dev = priv->prom_net_dev;
  
#line 7933 
  struct ipw_rx_packet *pkt = (struct ipw_rx_packet *)(rxb->skb)->data;
  
#line 7934 
  struct ipw_rx_frame *frame = & pkt->u.frame;
  
#line 7940 
  u16 channel = (unsigned short)frame->received_channel;
  
#line 7941 
  u8 phy_flags = frame->antennaAndPhy;
  
#line 7942 
  s8 signal = (signed char)((unsigned int)frame->rssi_dbm + 144U);
  
#line 7943 
  s8 noise = (signed char)frame->noise;
  
#line 7944 
  u8 rate = frame->rate;
  
#line 7945 
  unsigned short len = pkt->u.frame.length;
  
#line 7947 
  int hdr_only = 0;
  
#line 7948 
  u16 filter = (unsigned short)(priv->prom_priv)->filter;
  
#line 7951 
  if (((int)filter & 32) != 0) 
#line 7952 
                               goto return_label; else ;
  
#line 7955 
  dev->trans_start = jiffies;
  
#line 7957 
  tmp_1 = skb_tailroom((struct sk_buff const *)rxb->skb);
  
#line 7957 
  ;
  
#line 7957 
  if ((long)((unsigned int)len + 28U > (unsigned int)tmp_1) != 0L) {
    
#line 7958 
    dev->stats.rx_errors += 1UL;
    
#line 7959 
    if ((ipw_debug_level & 8192U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 7959 
      tmp = preempt_count();
      
#line 7959 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 7959 
                                                   tmp_0 = 73; else 
#line 7959 
                                                                    tmp_0 = 85;
      
#line 7959 
      printk("\001",tmp_0,"ipw_handle_promiscuous_rx");
    }
    else ;
    
#line 7960 
    goto return_label;
  }
  else ;
  
#line 7964 
  tmp_4 = netif_running((struct net_device const *)dev);
  
#line 7964 
  if (tmp_4) 
#line 7964 
             tmp_5 = 0; else 
#line 7964 
                             tmp_5 = 1;
  
#line 7964 
  if ((long)tmp_5 != 0L) {
    
#line 7965 
    dev->stats.rx_dropped += 1UL;
    
#line 7966 
    if ((ipw_debug_level & 8192U) != 0U) {
      int tmp_3;
      int tmp_2;
      
#line 7966 
      tmp_2 = preempt_count();
      
#line 7966 
      if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 7966 
                                                     tmp_3 = 73; else 
                                                                   
#line 7966 
                                                                   tmp_3 = 85;
      
#line 7966 
      printk("\001",tmp_3,"ipw_handle_promiscuous_rx");
    }
    else ;
    
#line 7967 
    goto return_label;
  }
  else ;
  
#line 7972 
  if ((unsigned int)len > 2975U) {
    
#line 7974 
    dev->stats.rx_dropped += 1UL;
    
#line 7975 
    if ((ipw_debug_level & 8192U) != 0U) {
      int tmp_7;
      int tmp_6;
      
#line 7975 
      tmp_6 = preempt_count();
      
#line 7975 
      if (((unsigned long)tmp_6 & 2096896UL) != 0UL) 
#line 7975 
                                                     tmp_7 = 73; else 
                                                                   
#line 7975 
                                                                   tmp_7 = 85;
      
#line 7975 
      printk("\001",tmp_7,"ipw_handle_promiscuous_rx");
    }
    else ;
    
#line 7976 
    goto return_label;
  }
  else ;
  
#line 7979 
  hdr = (struct ieee80211_hdr *)(rxb->skb)->data + 28U;
  
#line 7980 
  if (((int)hdr->frame_control & 12) == 0) {
    
#line 7981 
    if (((int)filter & 128) != 0) 
#line 7982 
                                  goto return_label; else ;
    
#line 7983 
    if (((int)filter & 2) != 0) 
#line 7984 
                                hdr_only = 1; else ;
  }
  else 
    
#line 7985 
    if (((int)hdr->frame_control & 12) == 4) {
      
#line 7986 
      if (((int)filter & 64) != 0) 
#line 7987 
                                   goto return_label; else ;
      
#line 7988 
      if (((int)filter & 1) != 0) 
#line 7989 
                                  hdr_only = 1; else ;
    }
    else 
      
#line 7990 
      if (((int)hdr->frame_control & 12) == 8) {
        
#line 7991 
        if (((int)filter & 256) != 0) 
#line 7992 
                                      goto return_label; else ;
        
#line 7993 
        if (((int)filter & 4) != 0) 
#line 7994 
                                    hdr_only = 1; else ;
      }
      else ;
  
#line 7998 
  skb = skb_copy((struct sk_buff const *)rxb->skb,32U);
  
#line 7999 
  if (skb == (struct sk_buff *)0) {
    
#line 8000 
    printk("\001");
    
#line 8001 
    goto return_label;
  }
  else ;
  
#line 8005 
  ipw_rt = (struct ipw_rt_hdr *)skb->data;
  
#line 8007 
  if (hdr_only != 0) {
    int tmp_8;
    
#line 8008 
    tmp_8 = libipw_get_hdrlen((unsigned short)((int)hdr->frame_control));
    
#line 8008 
    len = (unsigned short)tmp_8;
  }
  else ;
  
#line 8010 
  memcpy((void *)(& ipw_rt->payload),(void const *)hdr,(unsigned long)len);
  
#line 8012 
  ipw_rt->rt_hdr.it_version = (unsigned char)0U;
  
#line 8013 
  ipw_rt->rt_hdr.it_pad = (unsigned char)0U;
  
#line 8014 
  ipw_rt->rt_hdr.it_len = (unsigned short)25U;
  
#line 8017 
  skb_put(skb,(unsigned int)len + 25U);
  
#line 8020 
  ipw_rt->rt_hdr.it_present = 2159U;
  
#line 8030 
  ipw_rt->rt_flags = (unsigned char)0U;
  
#line 8031 
  ipw_rt->rt_tsf = (unsigned long long)(((((int)frame->parent_tsf[3] << 24) | ((int)frame->parent_tsf[2] << 16)) | ((int)frame->parent_tsf[1] << 8)) | (int)frame->parent_tsf[0]);
  
#line 8037 
  ipw_rt->rt_dbmsignal = signal;
  
#line 8038 
  ipw_rt->rt_dbmnoise = noise;
  
#line 8041 
  if ((unsigned int)channel <= 14U) {
    unsigned int tmp_9;
    
#line 8041 
    if ((unsigned int)channel != 14U) 
#line 8041 
                                      tmp_9 = (unsigned int)channel * 5U + 2407U; else 
                                                                    
#line 8041 
                                                                    tmp_9 = 2484U;
    
#line 8041 
    ipw_rt->rt_channel = (unsigned short)tmp_9;
  }
  else 
#line 8041 
       ipw_rt->rt_channel = (unsigned short)((unsigned int)channel * 5U + 5000U);
  
#line 8042 
  if ((unsigned int)channel > 14U) 
#line 8043 
                                   ipw_rt->rt_chbitmask = (unsigned short)320U;
  else 
    
#line 8045 
    if (((int)phy_flags & 32) != 0) 
#line 8046 
                                    ipw_rt->rt_chbitmask = (unsigned short)160U; else 
                                                                    
#line 8049 
                                                                    ipw_rt->rt_chbitmask = (unsigned short)192U;
  
#line 8054 
  switch ((int)rate) {
    case 10: 
#line 8055 
    ;
    
#line 8056 
    ipw_rt->rt_rate = (unsigned char)2U;
    
#line 8057 
    goto ldv_56018;
    case 20: 
#line 8058 
    ;
    
#line 8059 
    ipw_rt->rt_rate = (unsigned char)4U;
    
#line 8060 
    goto ldv_56018;
    case 55: 
#line 8061 
    ;
    
#line 8062 
    ipw_rt->rt_rate = (unsigned char)10U;
    
#line 8063 
    goto ldv_56018;
    case 13: 
#line 8064 
    ;
    
#line 8065 
    ipw_rt->rt_rate = (unsigned char)12U;
    
#line 8066 
    goto ldv_56018;
    case 15: 
#line 8067 
    ;
    
#line 8068 
    ipw_rt->rt_rate = (unsigned char)18U;
    
#line 8069 
    goto ldv_56018;
    case 110: 
#line 8070 
    ;
    
#line 8071 
    ipw_rt->rt_rate = (unsigned char)22U;
    
#line 8072 
    goto ldv_56018;
    case 5: 
#line 8073 
    ;
    
#line 8074 
    ipw_rt->rt_rate = (unsigned char)24U;
    
#line 8075 
    goto ldv_56018;
    case 7: 
#line 8076 
    ;
    
#line 8077 
    ipw_rt->rt_rate = (unsigned char)36U;
    
#line 8078 
    goto ldv_56018;
    case 9: 
#line 8079 
    ;
    
#line 8080 
    ipw_rt->rt_rate = (unsigned char)48U;
    
#line 8081 
    goto ldv_56018;
    case 11: 
#line 8082 
    ;
    
#line 8083 
    ipw_rt->rt_rate = (unsigned char)72U;
    
#line 8084 
    goto ldv_56018;
    case 1: 
#line 8085 
    ;
    
#line 8086 
    ipw_rt->rt_rate = (unsigned char)96U;
    
#line 8087 
    goto ldv_56018;
    case 3: 
#line 8088 
    ;
    
#line 8089 
    ipw_rt->rt_rate = (unsigned char)108U;
    
#line 8090 
    goto ldv_56018;
    default: 
#line 8091 
    ;
    
#line 8092 
    ipw_rt->rt_rate = (unsigned char)0U;
    
#line 8093 
    goto ldv_56018;
  }
  ldv_56018: 
#line 8097 
  ;
  
#line 8097 
  ipw_rt->rt_antenna = (unsigned char)((unsigned int)phy_flags & 3U);
  
#line 8100 
  if (((int)phy_flags & 64) != 0) 
#line 8101 
                                  ipw_rt->rt_flags = (unsigned char)((unsigned int)ipw_rt->rt_flags | 2U); else ;
  
#line 8103 
  if ((ipw_debug_level & 16777216U) != 0U) {
    int tmp_11;
    int tmp_10;
    
#line 8103 
    ;
    
#line 8103 
    tmp_10 = preempt_count();
    
#line 8103 
    if (((unsigned long)tmp_10 & 2096896UL) != 0UL) 
#line 8103 
                                                    tmp_11 = 73; else 
                                                                   
#line 8103 
                                                                   tmp_11 = 85;
    
#line 8103 
    printk("\001",tmp_11,"ipw_handle_promiscuous_rx",skb->len);
  }
  else ;
  
#line 8105 
  tmp_12 = libipw_rx((priv->prom_priv)->ieee,skb,stats);
  
#line 8105 
  if (tmp_12 == 0) {
    
#line 8106 
    dev->stats.rx_errors += 1UL;
    
#line 8107 
    dev_kfree_skb_any(skb);
  }
  else ;
  return_label: 
#line 8109 
                return;
}


#line 8112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int is_network_packet(struct ipw_priv *priv, struct libipw_hdr_4addr *header)
{
  int __retres;
  
#line 8117 
  switch ((priv->ieee)->iw_mode) {
    bool tmp;
    bool tmp_1;
    bool tmp_2;
    bool tmp_3;
    bool tmp_5;
    bool tmp_6;
    case 1: 
#line 8118 
    ;
    
#line 8120 
    tmp = ether_addr_equal((u8 const *)(& header->addr2),(u8 const *)(priv->net_dev)->dev_addr);
    
#line 8120 
    if ((int)tmp != 0) {
      
#line 8121 
      __retres = 0;
      
#line 8121 
      goto return_label;
    }
    else ;
    
#line 8124 
    tmp_1 = is_multicast_ether_addr((u8 const *)(& header->addr1));
    
#line 8124 
    if ((int)tmp_1 != 0) {
      bool tmp_0;
      
#line 8125 
      tmp_0 = ether_addr_equal((u8 const *)(& header->addr3),(u8 const *)(& priv->bssid));
      
#line 8125 
      __retres = (int)tmp_0;
      
#line 8125 
      goto return_label;
    }
    else ;
    
#line 8128 
    tmp_2 = ether_addr_equal((u8 const *)(& header->addr1),(u8 const *)(priv->net_dev)->dev_addr);
    
#line 8128 
    __retres = (int)tmp_2;
    
#line 8128 
    goto return_label;
    case 2: 
#line 8131 
    ;
    
#line 8133 
    tmp_3 = ether_addr_equal((u8 const *)(& header->addr3),(u8 const *)(priv->net_dev)->dev_addr);
    
#line 8133 
    if ((int)tmp_3 != 0) {
      
#line 8134 
      __retres = 0;
      
#line 8134 
      goto return_label;
    }
    else ;
    
#line 8137 
    tmp_5 = is_multicast_ether_addr((u8 const *)(& header->addr1));
    
#line 8137 
    if ((int)tmp_5 != 0) {
      bool tmp_4;
      
#line 8138 
      tmp_4 = ether_addr_equal((u8 const *)(& header->addr2),(u8 const *)(& priv->bssid));
      
#line 8138 
      __retres = (int)tmp_4;
      
#line 8138 
      goto return_label;
    }
    else ;
    
#line 8141 
    tmp_6 = ether_addr_equal((u8 const *)(& header->addr1),(u8 const *)(priv->net_dev)->dev_addr);
    
#line 8141 
    __retres = (int)tmp_6;
    
#line 8141 
    goto return_label;
  }
  
#line 8145 
  __retres = 1;
  return_label: 
#line 8145 
                return __retres;
}


#line 8150  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int is_duplicate_packet(struct ipw_priv *priv, struct libipw_hdr_4addr *header)
{
  int __retres;
  u16 *last_seq;
  u16 *last_frag;
  unsigned long *last_time;
  
#line 8153 
  u16 sc = header->seq_ctl;
  
#line 8154 
  u16 seq = (unsigned short)((int)sc >> 4);
  
#line 8155 
  u16 frag = (unsigned short)((unsigned int)sc & 15U);
  
#line 8159 
  switch ((priv->ieee)->iw_mode) {
    case 1: 
#line 8160 
    ;
    {
      struct list_head *p;
      struct ipw_ibss_seq *tmp;
      bool tmp_0;
      
#line 8163 
      struct ipw_ibss_seq *entry = (struct ipw_ibss_seq *)0;
      
#line 8164 
      u8 *mac = (u8 *)(& header->addr2);
      
#line 8165 
      int index = (int)((unsigned int)*(mac + 5U) % 31U);
      
#line 8167 
      p = priv->ibss_mac_hash[index].next;
      
#line 8167 
      goto ldv_56056;
      ldv_56055: 
#line 8168 
      ;
      {
        
#line 8169 
        struct list_head const *__mptr = (struct list_head const *)p;
        
#line 8169 
        tmp = (struct ipw_ibss_seq *)__mptr + 18446744073709551592U;
      }
      
#line 8168 
      entry = tmp;
      
#line 8170 
      tmp_0 = ether_addr_equal((u8 const *)(& entry->mac),(u8 const *)mac);
      
#line 8170 
      if ((int)tmp_0 != 0) 
#line 8171 
                           goto ldv_56054; else ;
      
#line 8167 
      p = p->next;
      ldv_56056: 
#line 8168 
      ;
      
#line 8167 
      if (& priv->ibss_mac_hash[index] != p) 
#line 8169 
                                             goto ldv_56055; else 
#line 8172 
                                                                  goto ldv_56054;
      ldv_56054: 
#line 8173 
      ;
      
#line 8173 
      if (& priv->ibss_mac_hash[index] == p) {
        
#line 8174 
        entry = (struct ipw_ibss_seq *)kmalloc(40UL,32U);
        
#line 8175 
        if (entry == (struct ipw_ibss_seq *)0) {
          
#line 8176 
          printk("\001");
          
#line 8178 
          __retres = 0;
          
#line 8178 
          goto return_label;
        }
        else ;
        
#line 8180 
        memcpy((void *)(& entry->mac),(void const *)mac,6UL);
        
#line 8181 
        entry->seq_num = seq;
        
#line 8182 
        entry->frag_num = frag;
        
#line 8183 
        entry->packet_time = jiffies;
        
#line 8184 
        list_add(& entry->list,& priv->ibss_mac_hash[index]);
        
#line 8186 
        __retres = 0;
        
#line 8186 
        goto return_label;
      }
      else ;
      
#line 8188 
      last_seq = & entry->seq_num;
      
#line 8189 
      last_frag = & entry->frag_num;
      
#line 8190 
      last_time = & entry->packet_time;
      
#line 8191 
      goto ldv_56057;
    }
    case 2: 
#line 8193 
    ;
    
#line 8194 
    last_seq = & priv->last_seq_num;
    
#line 8195 
    last_frag = & priv->last_frag_num;
    
#line 8196 
    last_time = & priv->last_packet_time;
    
#line 8197 
    goto ldv_56057;
    default: 
#line 8198 
    ;
    
#line 8199 
    __retres = 0;
    
#line 8199 
    goto return_label;
  }
  ldv_56057: 
#line 8201 
  ;
  
#line 8201 
  if ((int)*last_seq == (int)seq) {
    int tmp_2;
    {
      unsigned long __dummy;
      unsigned long __dummy2;
      
#line 8202 
      tmp_2 = 1;
    }
    
#line 8201 
    if (tmp_2 != 0) {
      int tmp_3;
      {
        unsigned long __dummy_0;
        unsigned long volatile __dummy2_0;
        
#line 8202 
        tmp_3 = 1;
      }
      
#line 8202 
      if (tmp_3 != 0) 
        
#line 8202 
        if ((long)((jiffies - *last_time) + 18446744073709551366UL) < 0L) {
          
#line 8203 
          if ((int)*last_frag == (int)frag) 
#line 8204 
                                            goto drop; else ;
          
#line 8205 
          if ((int)*last_frag + 1 != (int)frag) 
#line 8207 
                                                goto drop; else ;
        }
        else 
#line 8209 
             *last_seq = seq;
      else 
#line 8209 
           *last_seq = seq;
    }
    else 
#line 8209 
         *last_seq = seq;
  }
  else 
#line 8209 
       *last_seq = seq;
  
#line 8211 
  *last_frag = frag;
  
#line 8212 
  *last_time = jiffies;
  
#line 8213 
  __retres = 0;
  
#line 8213 
  goto return_label;
  drop: 
#line 8215 
  ;
  
#line 8220 
  __retres = 1;
  return_label: 
#line 8220 
                return __retres;
}


#line 8223  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_handle_mgmt_packet(struct ipw_priv *priv, struct ipw_rx_mem_buffer *rxb, struct libipw_rx_stats *stats)
{
  
#line 8227 
  struct sk_buff *skb = rxb->skb;
  
#line 8228 
  struct ipw_rx_packet *pkt = (struct ipw_rx_packet *)skb->data;
  
#line 8229 
  struct libipw_hdr_4addr *header = (struct libipw_hdr_4addr *)(skb->data + 28U);
  
#line 8232 
  libipw_rx_mgt(priv->ieee,header,stats);
  
#line 8234 
  if ((priv->ieee)->iw_mode == 1 && (((int)header->frame_ctl & 240) == 80 || ((int)header->frame_ctl & 240) == 128)) {
    bool tmp;
    
#line 8239 
    tmp = ether_addr_equal((u8 const *)(& header->addr3),(u8 const *)(& priv->bssid));
    
#line 8239 
    if ((int)tmp != 0) 
#line 8240 
                       ipw_add_station(priv,(u8 *)(& header->addr2)); else ;
  }
  else ;
  
#line 8243 
  if ((priv->config & 4096U) != 0U) {
    unsigned char *tmp_2;
    
#line 8244 
    if ((ipw_debug_level & 32U) != 0U) {
      int tmp_1;
      int tmp_0;
      
#line 8244 
      tmp_0 = preempt_count();
      
#line 8244 
      if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 8244 
                                                     tmp_1 = 73; else 
                                                                   
#line 8244 
                                                                   tmp_1 = 85;
      
#line 8244 
      printk("\001",tmp_1,"ipw_handle_mgmt_packet");
    }
    else ;
    
#line 8248 
    skb_put(skb,(unsigned int)pkt->u.frame.length + 28U);
    
#line 8252 
    skb_pull(skb,28U);
    
#line 8255 
    ;
    
#line 8255 
    tmp_2 = skb_push(skb,32U);
    
#line 8255 
    memcpy((void *)tmp_2,(void const *)stats,32UL);
    
#line 8257 
    skb->dev = (priv->ieee)->dev;
    
#line 8260 
    skb_reset_mac_header(skb);
    
#line 8262 
    skb->pkt_type = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))))3U;
    
#line 8263 
    skb->protocol = (unsigned short)6656U;
    
#line 8264 
    memset((void *)(& skb->cb),0,48UL);
    
#line 8265 
    netif_rx(skb);
    
#line 8266 
    rxb->skb = (struct sk_buff *)0;
  }
  else ;
  
#line 8268 
  return;
}


#line 8275  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_rx(struct ipw_priv *priv)
{
  struct ipw_rx_mem_buffer *rxb;
  struct ipw_rx_packet *pkt;
  struct libipw_hdr_4addr *header;
  u32 r;
  u32 w;
  u32 i;
  u8 network_packet;
  u32 tmp_2;
  u32 tmp_6;
  int tmp_7;
  
#line 8282 
  u8 fill_rx = (unsigned char)0U;
  
#line 8284 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 8284 
    tmp = preempt_count();
    
#line 8284 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 8284 
                                                 tmp_0 = 73; else 
#line 8284 
                                                                  tmp_0 = 85;
    
#line 8284 
    printk("\001",tmp_0,"ipw_rx",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",8284,672U);
  }
  else ;
  
#line 8284 
  tmp_2 = _ipw_read32(priv,672UL);
  
#line 8284 
  r = tmp_2;
  
#line 8285 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_4;
    int tmp_3;
    
#line 8285 
    tmp_3 = preempt_count();
    
#line 8285 
    if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 8285 
                                                   tmp_4 = 73; else 
#line 8285 
                                                                    tmp_4 = 85;
    
#line 8285 
    printk("\001",tmp_4,"ipw_rx",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",8285,4000U);
  }
  else ;
  
#line 8285 
  tmp_6 = _ipw_read32(priv,4000UL);
  
#line 8285 
  w = tmp_6;
  
#line 8286 
  i = (priv->rxq)->read;
  
#line 8288 
  tmp_7 = ipw_rx_queue_space((struct ipw_rx_queue const *)priv->rxq);
  
#line 8288 
  if (tmp_7 > 16) 
#line 8289 
                  fill_rx = (unsigned char)1U; else ;
  
#line 8291 
  goto ldv_56101;
  ldv_56100: 
#line 8292 
  ;
  
#line 8292 
  rxb = (priv->rxq)->queue[i];
  
#line 8293 
  if ((long)(rxb == (struct ipw_rx_mem_buffer *)0) != 0L) {
    
#line 8294 
    printk("\001");
    
#line 8295 
    goto ldv_56090;
  }
  else ;
  
#line 8297 
  (priv->rxq)->queue[i] = (struct ipw_rx_mem_buffer *)0;
  
#line 8299 
  pci_dma_sync_single_for_cpu(priv->pci_dev,rxb->dma_addr,3000UL,2);
  
#line 8303 
  pkt = (struct ipw_rx_packet *)(rxb->skb)->data;
  
#line 8304 
  if ((ipw_debug_level & 16777216U) != 0U) {
    int tmp_9;
    int tmp_8;
    
#line 8304 
    ;
    
#line 8304 
    ;
    
#line 8304 
    ;
    
#line 8304 
    tmp_8 = preempt_count();
    
#line 8304 
    if (((unsigned long)tmp_8 & 2096896UL) != 0UL) 
#line 8304 
                                                   tmp_9 = 73; else 
#line 8304 
                                                                    tmp_9 = 85;
    
#line 8304 
    printk("\001",tmp_9,"ipw_rx",(int)pkt->header.message_type,(int)pkt->header.rx_seq_num,(int)pkt->header.control_bits);
  }
  else ;
  
#line 8308 
  switch ((int)pkt->header.message_type) {
    case 9: 
#line 8309 
    ;
    {
      unsigned int tmp_10;
      int tmp_12;
      int tmp_17;
      
#line 8321 
      if (((int)pkt->u.frame.control & 1) != 0) 
#line 8321 
                                                tmp_10 = 1U; else 
#line 8321 
                                                                  tmp_10 = 2U;
      
#line 8310 
      struct libipw_rx_stats stats = {.mac_time = (unsigned int)jiffies, .rssi = (signed char)((unsigned int)pkt->u.frame.rssi_dbm + 144U), .signal = (unsigned char)((unsigned int)pkt->u.frame.rssi_dbm + 144U), .noise = (unsigned char)pkt->u.frame.noise, .rate = (unsigned short)pkt->u.frame.rate, .received_channel = pkt->u.frame.received_channel, .control = (unsigned char)0, .mask = (unsigned char)0, .freq = (unsigned char)tmp_10, .len = pkt->u.frame.length, .tsf = 0ULL, .beacon_time = 0U};
      
#line 8330 
      if ((int)stats.rssi != 0) 
#line 8331 
                                stats.mask = (unsigned char)((unsigned int)stats.mask | 2U); else ;
      
#line 8332 
      if ((unsigned int)stats.signal != 0U) 
#line 8333 
                                            stats.mask = (unsigned char)((unsigned int)stats.mask | 1U); else ;
      
#line 8334 
      if ((unsigned int)stats.noise != 0U) 
#line 8335 
                                           stats.mask = (unsigned char)((unsigned int)stats.mask | 4U); else ;
      
#line 8336 
      if ((unsigned int)stats.rate != 0U) 
#line 8337 
                                          stats.mask = (unsigned char)((unsigned int)stats.mask | 8U); else ;
      
#line 8339 
      priv->rx_packets += 1U;
      
#line 8342 
      if (priv->prom_net_dev != (struct net_device *)0) {
        bool tmp_11;
        
#line 8342 
        tmp_11 = netif_running((struct net_device const *)priv->prom_net_dev);
        
#line 8342 
        if ((int)tmp_11 != 0) 
#line 8343 
                              ipw_handle_promiscuous_rx(priv,rxb,& stats); else ;
      }
      else ;
      
#line 8347 
      if ((priv->ieee)->iw_mode == 6) {
        
#line 8350 
        ipw_handle_data_packet_monitor(priv,rxb,& stats);
        
#line 8357 
        goto ldv_56093;
      }
      else ;
      
#line 8361 
      header = (struct libipw_hdr_4addr *)((rxb->skb)->data + 28U);
      
#line 8371 
      tmp_12 = is_network_packet(priv,header);
      
#line 8371 
      network_packet = (unsigned char)tmp_12;
      
#line 8373 
      if ((unsigned int)network_packet != 0U && priv->assoc_network != (struct libipw_network *)0) {
        
#line 8374 
        (priv->assoc_network)->stats.rssi = stats.rssi;
        
#line 8376 
        priv->exp_avg_rssi = exponential_average((short)((int)priv->exp_avg_rssi),(short)((int)stats.rssi),(unsigned char)8);
      }
      else ;
      
#line 8381 
      if ((ipw_debug_level & 16777216U) != 0U) {
        int tmp_14;
        int tmp_13;
        
#line 8381 
        ;
        
#line 8381 
        tmp_13 = preempt_count();
        
#line 8381 
        if (((unsigned long)tmp_13 & 2096896UL) != 0UL) 
#line 8381 
                                                        tmp_14 = 73; else 
                                                                    
#line 8381 
                                                                    tmp_14 = 85;
        
#line 8381 
        printk("\001",tmp_14,"ipw_rx",(int)pkt->u.frame.length);
      }
      else ;
      
#line 8384 
      tmp_17 = libipw_get_hdrlen((unsigned short)((int)header->frame_ctl));
      
#line 8384 
      ;
      
#line 8384 
      if ((int)pkt->u.frame.length < tmp_17) {
        
#line 8387 
        if ((ipw_debug_level & 8192U) != 0U) {
          int tmp_16;
          int tmp_15;
          
#line 8387 
          tmp_15 = preempt_count();
          
#line 8387 
          if (((unsigned long)tmp_15 & 2096896UL) != 0UL) 
#line 8387 
                                                          tmp_16 = 73; else 
                                                                    
#line 8387 
                                                                    tmp_16 = 85;
          
#line 8387 
          printk("\001",tmp_16,"ipw_rx");
        }
        else ;
        
#line 8390 
        (priv->net_dev)->stats.rx_errors += 1UL;
        
#line 8391 
        priv->wstats.discard.misc += 1U;
        
#line 8392 
        goto ldv_56093;
      }
      else ;
      
#line 8395 
      switch ((int)header->frame_ctl & 12) {
        case 0: 
#line 8398 
        ;
        
#line 8399 
        ipw_handle_mgmt_packet(priv,rxb,& stats);
        
#line 8401 
        goto ldv_56095;
        case 4: 
#line 8403 
        ;
        
#line 8404 
        goto ldv_56095;
        case 8: 
#line 8406 
        ;
        
#line 8407 
        if ((long)((unsigned int)network_packet == 0U) != 0L) 
#line 8407 
                                                              goto _LOR;
        else {
          int tmp_20;
          
#line 8407 
          tmp_20 = is_duplicate_packet(priv,header);
          
#line 8407 
          if ((long)(tmp_20 != 0) != 0L) {
            _LOR: {
                    
#line 8411 
                    if ((ipw_debug_level & 8192U) != 0U) {
                      int tmp_19;
                      int tmp_18;
                      
#line 8411 
                      ;
                      
#line 8411 
                      ;
                      
#line 8411 
                      ;
                      
#line 8411 
                      tmp_18 = preempt_count();
                      
#line 8411 
                      if (((unsigned long)tmp_18 & 2096896UL) != 0UL) 
                        
#line 8411 
                        tmp_19 = 73; else 
#line 8411 
                                          tmp_19 = 85;
                      
#line 8411 
                      printk("\001",tmp_19,"ipw_rx",(u8 *)(& header->addr1),(u8 *)(& header->addr2),(u8 *)(& header->addr3));
                    }
                    else ;
                    
#line 8418 
                    goto ldv_56095;
                  }
          }
          else ;
        }
        
#line 8421 
        ipw_handle_data_packet(priv,rxb,& stats);
        
#line 8424 
        goto ldv_56095;
      }
      ldv_56095: 
#line 8426 
      ;
      
#line 8426 
      goto ldv_56093;
    }
    case 3: 
#line 8429 
    ;
    
#line 8430 
    if ((ipw_debug_level & 16777216U) != 0U) {
      int tmp_22;
      int tmp_21;
      
#line 8430 
      ;
      
#line 8430 
      ;
      
#line 8430 
      ;
      
#line 8430 
      tmp_21 = preempt_count();
      
#line 8430 
      if (((unsigned long)tmp_21 & 2096896UL) != 0UL) 
#line 8430 
                                                      tmp_22 = 73; else 
                                                                    
#line 8430 
                                                                    tmp_22 = 85;
      
#line 8430 
      printk("\001",tmp_22,"ipw_rx",(int)pkt->u.notification.subtype,(int)pkt->u.notification.flags,(int)pkt->u.notification.size);
    }
    else ;
    
#line 8435 
    ipw_rx_notification(priv,& pkt->u.notification);
    
#line 8436 
    goto ldv_56093;
    default: 
#line 8439 
    ;
    
#line 8440 
    if ((ipw_debug_level & 16777216U) != 0U) {
      int tmp_24;
      int tmp_23;
      
#line 8440 
      ;
      
#line 8440 
      tmp_23 = preempt_count();
      
#line 8440 
      if (((unsigned long)tmp_23 & 2096896UL) != 0UL) 
#line 8440 
                                                      tmp_24 = 73; else 
                                                                    
#line 8440 
                                                                    tmp_24 = 85;
      
#line 8440 
      printk("\001",tmp_24,"ipw_rx",(int)pkt->header.message_type);
    }
    else ;
    
#line 8442 
    goto ldv_56093;
  }
  ldv_56093: 
#line 8448 
  ;
  
#line 8448 
  if (rxb->skb != (struct sk_buff *)0) {
    
#line 8449 
    dev_kfree_skb_any(rxb->skb);
    
#line 8450 
    rxb->skb = (struct sk_buff *)0;
  }
  else ;
  
#line 8453 
  pci_unmap_single(priv->pci_dev,rxb->dma_addr,3000UL,2);
  
#line 8455 
  list_add_tail(& rxb->list,& (priv->rxq)->rx_used);
  
#line 8457 
  i = (i + 1U) & 31U;
  
#line 8461 
  if ((unsigned int)fill_rx != 0U) {
    
#line 8462 
    (priv->rxq)->read = i;
    
#line 8463 
    ipw_rx_queue_replenish((void *)priv);
  }
  else ;
  ldv_56101: 
#line 8465 
  ;
  
#line 8291 
  if (i != r) 
#line 8293 
              goto ldv_56100; else 
#line 8296 
                                   goto ldv_56090;
  ldv_56090: 
#line 8297 
  ;
  
#line 8468 
  (priv->rxq)->read = i;
  
#line 8469 
  ipw_rx_queue_restock(priv);
  
#line 8470 
  return;
}


#line 8486  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_sw_reset(struct ipw_priv *priv, int option)
{
  int __retres;
  int band;
  int modulation;
  
#line 8489 
  int old_mode = (priv->ieee)->iw_mode;
  
#line 8492 
  priv->config = 0U;
  
#line 8496 
  if (led_support == 0) 
#line 8497 
                        priv->config |= 512U; else ;
  
#line 8499 
  if (associate != 0) 
#line 8500 
                      priv->config |= 64U;
  else 
    
#line 8502 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 8502 
      tmp = preempt_count();
      
#line 8502 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 8502 
                                                   tmp_0 = 73; else 
#line 8502 
                                                                    tmp_0 = 85;
      
#line 8502 
      printk("\001",tmp_0,"ipw_sw_reset");
    }
    else ;
  
#line 8504 
  if (auto_create != 0) 
#line 8505 
                        priv->config |= 256U;
  else 
    
#line 8507 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 8507 
      tmp_1 = preempt_count();
      
#line 8507 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 8507 
                                                     tmp_2 = 73; else 
                                                                   
#line 8507 
                                                                   tmp_2 = 85;
      
#line 8507 
      printk("\001",tmp_2,"ipw_sw_reset");
    }
    else ;
  
#line 8509 
  priv->config &= 4294967293U;
  
#line 8510 
  priv->essid_len = (unsigned char)0U;
  
#line 8511 
  memset((void *)(& priv->essid),0,32UL);
  
#line 8513 
  if (disable != 0 && option != 0) {
    
#line 8514 
    priv->status |= 8U;
    
#line 8515 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_4;
      int tmp_3;
      
#line 8515 
      tmp_3 = preempt_count();
      
#line 8515 
      if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 8515 
                                                     tmp_4 = 73; else 
                                                                   
#line 8515 
                                                                   tmp_4 = 85;
      
#line 8515 
      printk("\001",tmp_4,"ipw_sw_reset");
    }
    else ;
  }
  else ;
  
#line 8518 
  if (default_channel != 0) {
    
#line 8519 
    priv->config |= 1U;
    
#line 8520 
    priv->channel = (unsigned char)default_channel;
    
#line 8521 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_6;
      int tmp_5;
      
#line 8521 
      ;
      
#line 8521 
      tmp_5 = preempt_count();
      
#line 8521 
      if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 8521 
                                                     tmp_6 = 73; else 
                                                                   
#line 8521 
                                                                   tmp_6 = 85;
      
#line 8521 
      printk("\001",tmp_6,"ipw_sw_reset",default_channel);
    }
    else ;
  }
  else ;
  
#line 8525 
  ipw_qos_init(priv,qos_enable,qos_burst_enable,(unsigned int)burst_duration_CCK,(unsigned int)burst_duration_OFDM);
  
#line 8529 
  switch (network_mode) {
    case 1: 
#line 8530 
    ;
    
#line 8531 
    (priv->ieee)->iw_mode = 1;
    
#line 8532 
    (priv->net_dev)->type = (unsigned short)1U;
    
#line 8534 
    goto ldv_56111;
    case 2: 
#line 8536 
    ;
    
#line 8537 
    (priv->ieee)->iw_mode = 6;
    
#line 8539 
    (priv->net_dev)->type = (unsigned short)803U;
    
#line 8543 
    goto ldv_56111;
    default: 
#line 8545 
    ;
    case 0: 
#line 8546 
    ;
    
#line 8547 
    (priv->net_dev)->type = (unsigned short)1U;
    
#line 8548 
    (priv->ieee)->iw_mode = 2;
    
#line 8549 
    goto ldv_56111;
  }
  ldv_56111: 
#line 8552 
  ;
  
#line 8552 
  if (hwcrypto != 0) {
    
#line 8553 
    (priv->ieee)->host_encrypt = 0;
    
#line 8554 
    (priv->ieee)->host_encrypt_msdu = 0;
    
#line 8555 
    (priv->ieee)->host_decrypt = 0;
    
#line 8556 
    (priv->ieee)->host_mc_decrypt = 0;
  }
  else ;
  
#line 8558 
  if ((ipw_debug_level & 4U) != 0U) {
    char *tmp_7;
    int tmp_9;
    int tmp_8;
    
#line 8558 
    if (hwcrypto != 0) 
#line 8558 
                       tmp_7 = (char *)"on"; else 
#line 8558 
                                                  tmp_7 = (char *)"off";
    
#line 8558 
    tmp_8 = preempt_count();
    
#line 8558 
    if (((unsigned long)tmp_8 & 2096896UL) != 0UL) 
#line 8558 
                                                   tmp_9 = 73; else 
#line 8558 
                                                                    tmp_9 = 85;
    
#line 8558 
    printk("\001",tmp_9,"ipw_sw_reset",tmp_7);
  }
  else ;
  
#line 8561 
  (priv->ieee)->host_open_frag = 0;
  
#line 8563 
  if ((unsigned int)(priv->pci_dev)->device + 48605U <= 1U) {
    
#line 8565 
    if (option == 1) 
#line 8566 
                     printk("\001"); else ;
    
#line 8569 
    (priv->ieee)->abg_true = 1;
    
#line 8570 
    band = 3;
    
#line 8571 
    modulation = 3;
    
#line 8573 
    priv->adapter = (unsigned char)2U;
    
#line 8574 
    (priv->ieee)->mode = 7;
  }
  else {
    
#line 8576 
    if (option == 1) 
#line 8577 
                     printk("\001"); else ;
    
#line 8581 
    (priv->ieee)->abg_true = 0;
    
#line 8582 
    band = 1;
    
#line 8583 
    modulation = 3;
    
#line 8585 
    priv->adapter = (unsigned char)1U;
    
#line 8586 
    (priv->ieee)->mode = 6;
  }
  
#line 8589 
  (priv->ieee)->freq_band = band;
  
#line 8590 
  (priv->ieee)->modulation = modulation;
  
#line 8592 
  priv->rates_mask = (unsigned short)4095U;
  
#line 8594 
  priv->disassociate_threshold = 24U;
  
#line 8595 
  priv->roaming_threshold = 8U;
  
#line 8597 
  priv->rts_threshold = (unsigned short)2304U;
  
#line 8598 
  priv->short_retry_limit = (unsigned char)7U;
  
#line 8599 
  priv->long_retry_limit = (unsigned char)4U;
  
#line 8602 
  priv->power_mode = 6U;
  
#line 8603 
  priv->tx_power = (signed char)20;
  
#line 8605 
  __retres = (priv->ieee)->iw_mode == old_mode;
  
#line 8605 
  return __retres;
}


#line 8618  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_set_channel(struct ipw_priv *priv, u8 channel)
{
  int __retres;
  int tmp_15;
  
#line 8620 
  if ((unsigned int)channel == 0U) {
    
#line 8621 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 8621 
      tmp = preempt_count();
      
#line 8621 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 8621 
                                                   tmp_0 = 73; else 
#line 8621 
                                                                    tmp_0 = 85;
      
#line 8621 
      printk("\001",tmp_0,"ipw_set_channel");
    }
    else ;
    
#line 8622 
    priv->config &= 4294967294U;
    
#line 8623 
    if ((ipw_debug_level & 4100U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 8623 
      tmp_1 = preempt_count();
      
#line 8623 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 8623 
                                                     tmp_2 = 73; else 
                                                                   
#line 8623 
                                                                   tmp_2 = 85;
      
#line 8623 
      printk("\001",tmp_2,"ipw_set_channel");
    }
    else ;
    
#line 8625 
    ipw_associate((void *)priv);
    
#line 8626 
    __retres = 0;
    
#line 8626 
    goto return_label;
  }
  else ;
  
#line 8629 
  priv->config |= 1U;
  
#line 8631 
  if ((int)priv->channel == (int)channel) {
    
#line 8632 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_4;
      int tmp_3;
      
#line 8632 
      ;
      
#line 8632 
      tmp_3 = preempt_count();
      
#line 8632 
      if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 8632 
                                                     tmp_4 = 73; else 
                                                                   
#line 8632 
                                                                   tmp_4 = 85;
      
#line 8632 
      printk("\001",tmp_4,"ipw_set_channel",(int)channel);
    }
    else ;
    
#line 8634 
    __retres = 0;
    
#line 8634 
    goto return_label;
  }
  else ;
  
#line 8637 
  if ((ipw_debug_level & 4U) != 0U) {
    int tmp_6;
    int tmp_5;
    
#line 8637 
    ;
    
#line 8637 
    tmp_5 = preempt_count();
    
#line 8637 
    if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 8637 
                                                   tmp_6 = 73; else 
#line 8637 
                                                                    tmp_6 = 85;
    
#line 8637 
    printk("\001",tmp_6,"ipw_set_channel",(int)channel);
  }
  else ;
  
#line 8638 
  priv->channel = channel;
  
#line 8641 
  if ((priv->ieee)->iw_mode == 6) {
    int i;
    
#line 8643 
    if ((priv->status & 2097152U) != 0U) {
      
#line 8644 
      if ((ipw_debug_level & 2048U) != 0U) {
        int tmp_8;
        int tmp_7;
        
#line 8644 
        tmp_7 = preempt_count();
        
#line 8644 
        if (((unsigned long)tmp_7 & 2096896UL) != 0UL) 
#line 8644 
                                                       tmp_8 = 73; else 
                                                                    
#line 8644 
                                                                    tmp_8 = 85;
        
#line 8644 
        printk("\001",tmp_8,"ipw_set_channel");
      }
      else ;
      
#line 8646 
      ipw_abort_scan(priv);
    }
    else ;
    
#line 8649 
    i = 1000;
    
#line 8649 
    goto ldv_56122;
    ldv_56121: 
#line 8650 
    ;
    
#line 8650 
    __const_udelay(42950UL);
    
#line 8649 
    i -= 1;
    ldv_56122: 
#line 8650 
    ;
    
#line 8649 
    if (i != 0 && (priv->status & 2097152U) != 0U) 
#line 8651 
                                                   goto ldv_56121; else 
                                                                    
#line 8654 
                                                                    goto ldv_56123;
    ldv_56123: 
#line 8655 
    ;
    
#line 8652 
    if ((priv->status & 2097152U) != 0U) {
      
#line 8653 
      if ((ipw_debug_level & 2048U) != 0U) {
        int tmp_10;
        int tmp_9;
        
#line 8653 
        tmp_9 = preempt_count();
        
#line 8653 
        if (((unsigned long)tmp_9 & 2096896UL) != 0UL) 
#line 8653 
                                                       tmp_10 = 73; else 
                                                                    
#line 8653 
                                                                    tmp_10 = 85;
        
#line 8653 
        printk("\001",tmp_10,"ipw_set_channel");
      }
      else ;
    }
    else 
      
#line 8655 
      if ((ipw_debug_level & 2048U) != 0U) {
        int tmp_12;
        int tmp_11;
        
#line 8655 
        ;
        
#line 8655 
        tmp_11 = preempt_count();
        
#line 8655 
        if (((unsigned long)tmp_11 & 2096896UL) != 0UL) 
#line 8655 
                                                        tmp_12 = 73; else 
                                                                    
#line 8655 
                                                                    tmp_12 = 85;
        
#line 8655 
        printk("\001",tmp_12,"ipw_set_channel",1000 - i);
      }
      else ;
    
#line 8658 
    __retres = 0;
    
#line 8658 
    goto return_label;
  }
  else ;
  
#line 8663 
  if ((ipw_debug_level & 4100U) != 0U) {
    int tmp_14;
    int tmp_13;
    
#line 8663 
    tmp_13 = preempt_count();
    
#line 8663 
    if (((unsigned long)tmp_13 & 2096896UL) != 0UL) 
#line 8663 
                                                    tmp_14 = 73; else 
                                                                   
#line 8663 
                                                                   tmp_14 = 85;
    
#line 8663 
    printk("\001",tmp_14,"ipw_set_channel");
  }
  else ;
  
#line 8664 
  tmp_15 = ipw_disassociate((void *)priv);
  
#line 8664 
  if (tmp_15 == 0) 
#line 8665 
                   ipw_associate((void *)priv); else ;
  
#line 8667 
  __retres = 0;
  return_label: 
#line 8667 
                return __retres;
}


#line 8670  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_set_freq(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  int i;
  u8 channel;
  u8 flags;
  int band;
  
#line 8674 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 8675 
  struct libipw_geo const *geo = libipw_get_geo(priv->ieee);
  
#line 8676 
  struct iw_freq *fwrq = & wrqu->freq;
  
#line 8677 
  int ret = 0;
  
#line 8681 
  if (fwrq->m == 0) {
    
#line 8682 
    if ((ipw_debug_level & 8U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 8682 
      tmp_1 = preempt_count();
      
#line 8682 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 8682 
                                                     tmp_2 = 73; else 
                                                                   
#line 8682 
                                                                   tmp_2 = 85;
      
#line 8682 
      printk("\001",tmp_2,"ipw_wx_set_freq");
    }
    else ;
    
#line 8683 
    ldv_mutex_lock_190(& priv->mutex);
    
#line 8684 
    ret = ipw_set_channel(priv,(unsigned char)0);
    
#line 8685 
    ldv_mutex_unlock_191(& priv->mutex);
    
#line 8686 
    __retres = ret;
    
#line 8686 
    goto return_label;
  }
  else ;
  
#line 8689 
  if ((int)fwrq->e == 1) {
    
#line 8690 
    channel = libipw_freq_to_channel(priv->ieee,(unsigned int)fwrq->m);
    
#line 8691 
    if ((unsigned int)channel == 0U) {
      
#line 8692 
      __retres = -22;
      
#line 8692 
      goto return_label;
    }
    else ;
  }
  else 
#line 8694 
       channel = (unsigned char)fwrq->m;
  
#line 8696 
  band = libipw_is_valid_channel(priv->ieee,(unsigned char)((int)channel));
  
#line 8696 
  if (band == 0) {
    
#line 8697 
    __retres = -22;
    
#line 8697 
    goto return_label;
  }
  else ;
  
#line 8699 
  if ((priv->ieee)->iw_mode == 1) {
    
#line 8700 
    i = libipw_channel_to_index(priv->ieee,(unsigned char)((int)channel));
    
#line 8701 
    if (i == -1) {
      
#line 8702 
      __retres = -22;
      
#line 8702 
      goto return_label;
    }
    else ;
    
#line 8704 
    if (band == 1) 
#line 8704 
                   flags = geo->bg[i].flags; else 
#line 8704 
                                                  flags = geo->a[i].flags;
    
#line 8706 
    if (((int)flags & 1) != 0) {
      
#line 8707 
      if ((ipw_debug_level & 8U) != 0U) {
        int tmp_4;
        int tmp_3;
        
#line 8707 
        tmp_3 = preempt_count();
        
#line 8707 
        if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 8707 
                                                       tmp_4 = 73; else 
                                                                    
#line 8707 
                                                                    tmp_4 = 85;
        
#line 8707 
        printk("\001",tmp_4,"ipw_wx_set_freq");
      }
      else ;
      
#line 8708 
      __retres = -22;
      
#line 8708 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 8712 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_6;
    int tmp_5;
    
#line 8712 
    ;
    
#line 8712 
    tmp_5 = preempt_count();
    
#line 8712 
    if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 8712 
                                                   tmp_6 = 73; else 
#line 8712 
                                                                    tmp_6 = 85;
    
#line 8712 
    printk("\001",tmp_6,"ipw_wx_set_freq",fwrq->m);
  }
  else ;
  
#line 8713 
  ldv_mutex_lock_192(& priv->mutex);
  
#line 8714 
  ret = ipw_set_channel(priv,(unsigned char)((int)channel));
  
#line 8715 
  ldv_mutex_unlock_193(& priv->mutex);
  
#line 8716 
  __retres = ret;
  return_label: 
#line 8716 
                return __retres;
}


#line 8719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_get_freq(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 8723 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 8725 
  wrqu->freq.e = (short)0;
  
#line 8729 
  ldv_mutex_lock_194(& priv->mutex);
  
#line 8730 
  if ((priv->config & 1U) != 0U || (priv->status & 384U) != 0U) {
    int i;
    int tmp_0;
    
#line 8734 
    i = libipw_channel_to_index(priv->ieee,(unsigned char)((int)priv->channel));
    
#line 8735 
    if ((long)(i == -1) != 0L) {
      
#line 8737 
      ldv_inline_asm();
      
#line 8735 
      ;
    }
    else ;
    
#line 8736 
    wrqu->freq.e = (short)1;
    
#line 8738 
    tmp_0 = libipw_is_valid_channel(priv->ieee,(unsigned char)((int)priv->channel));
    
#line 8738 
    switch (tmp_0) {
      case 2: 
#line 8739 
      ;
      
#line 8740 
      wrqu->freq.m = (int)((priv->ieee)->geo.a[i].freq * 100000U);
      
#line 8741 
      goto ldv_56148;
      case 1: 
#line 8743 
      ;
      
#line 8744 
      wrqu->freq.m = (int)((priv->ieee)->geo.bg[i].freq * 100000U);
      
#line 8745 
      goto ldv_56148;
      default: 
#line 8747 
      ;
      
#line 8748 
      ldv_inline_asm();
      
#line 8748 
      ;
    }
    ldv_56148: 
#line 8750 
    ;
  }
  else 
#line 8751 
       wrqu->freq.m = 0;
  
#line 8753 
  ldv_mutex_unlock_195(& priv->mutex);
  
#line 8754 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 8754 
    ;
    
#line 8754 
    tmp_1 = preempt_count();
    
#line 8754 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 8754 
                                                   tmp_2 = 73; else 
#line 8754 
                                                                    tmp_2 = 85;
    
#line 8754 
    printk("\001",tmp_2,"ipw_wx_get_freq",(int)priv->channel);
  }
  else ;
  
#line 8755 
  __retres = 0;
  
#line 8755 
  return __retres;
}


#line 8758  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_set_mode(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 8762 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 8763 
  int err = 0;
  
#line 8765 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 8765 
    ;
    
#line 8765 
    tmp_0 = preempt_count();
    
#line 8765 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 8765 
                                                   tmp_1 = 73; else 
#line 8765 
                                                                    tmp_1 = 85;
    
#line 8765 
    printk("\001",tmp_1,"ipw_wx_set_mode",wrqu->mode);
  }
  else ;
  
#line 8767 
  switch (wrqu->mode) {
    case (__u32)6: 
#line 8769 
    ;
    case (__u32)1: 
#line 8771 
    ;
    case (__u32)2: 
#line 8772 
    ;
    
#line 8773 
    goto ldv_56164;
    case (__u32)0: 
#line 8774 
    ;
    
#line 8775 
    wrqu->mode = 2U;
    
#line 8776 
    goto ldv_56164;
    default: 
#line 8777 
    ;
    
#line 8778 
    __retres = -22;
    
#line 8778 
    goto return_label;
  }
  ldv_56164: 
#line 8780 
  ;
  
#line 8780 
  if (wrqu->mode == (unsigned int)(priv->ieee)->iw_mode) {
    
#line 8781 
    __retres = 0;
    
#line 8781 
    goto return_label;
  }
  else ;
  
#line 8783 
  ldv_mutex_lock_196(& priv->mutex);
  
#line 8785 
  ipw_sw_reset(priv,0);
  
#line 8788 
  if ((priv->ieee)->iw_mode == 6) 
#line 8789 
                                  (priv->net_dev)->type = (unsigned short)1U; else ;
  
#line 8791 
  if (wrqu->mode == 6U) 
#line 8793 
                        (priv->net_dev)->type = (unsigned short)803U; else ;
  
#line 8801 
  free_firmware();
  
#line 8803 
  (priv->ieee)->iw_mode = (int)wrqu->mode;
  
#line 8805 
  ldv_schedule_work_197(& priv->adapter_restart);
  
#line 8806 
  ldv_mutex_unlock_198(& priv->mutex);
  
#line 8807 
  __retres = err;
  return_label: 
#line 8807 
                return __retres;
}


#line 8810  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_get_mode(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 8814 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 8815 
  ldv_mutex_lock_199(& priv->mutex);
  
#line 8816 
  wrqu->mode = (unsigned int)(priv->ieee)->iw_mode;
  
#line 8817 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 8817 
    ;
    
#line 8817 
    tmp_0 = preempt_count();
    
#line 8817 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 8817 
                                                   tmp_1 = 73; else 
#line 8817 
                                                                    tmp_1 = 85;
    
#line 8817 
    printk("\001",tmp_1,"ipw_wx_get_mode",wrqu->mode);
  }
  else ;
  
#line 8818 
  ldv_mutex_unlock_200(& priv->mutex);
  
#line 8819 
  __retres = 0;
  
#line 8819 
  return __retres;
}


#line 8823  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static s32 const timeout_duration[5U] = {350000, 250000, 75000, 37000, 25000};

#line 8831  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static s32 const period_duration[5U] = {400000, 700000, 1000000, 1000000, 1000000};

#line 8839  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_get_range(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  int j;
  int tmp_2;
  
#line 8843 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 8844 
  struct iw_range *range = (struct iw_range *)extra;
  
#line 8845 
  struct libipw_geo const *geo = libipw_get_geo(priv->ieee);
  
#line 8846 
  int i = 0;
  
#line 8848 
  wrqu->data.length = (unsigned short)568U;
  
#line 8849 
  memset((void *)range,0,568UL);
  
#line 8852 
  range->throughput = 27000000U;
  
#line 8854 
  range->max_qual.qual = (unsigned char)100U;
  
#line 8856 
  range->max_qual.level = (unsigned char)0U;
  
#line 8857 
  range->max_qual.noise = (unsigned char)0U;
  
#line 8858 
  range->max_qual.updated = (unsigned char)7U;
  
#line 8860 
  range->avg_qual.qual = (unsigned char)70U;
  
#line 8862 
  range->avg_qual.level = (unsigned char)0U;
  
#line 8863 
  range->avg_qual.noise = (unsigned char)0U;
  
#line 8864 
  range->avg_qual.updated = (unsigned char)7U;
  
#line 8865 
  ldv_mutex_lock_201(& priv->mutex);
  {
    int tmp_1;
    
#line 8866 
    u8 _min1 = priv->rates.num_rates;
    
#line 8866 
    unsigned char _min2 = (unsigned char)32U;
    
#line 8866 
    if ((int)_min1 < (int)_min2) 
#line 8866 
                                 tmp_1 = (int)_min1; else 
#line 8866 
                                                          tmp_1 = (int)_min2;
    
#line 8866 
    tmp_2 = tmp_1;
  }
  
#line 8866 
  range->num_bitrates = (unsigned char)tmp_2;
  
#line 8868 
  i = 0;
  
#line 8868 
  goto ldv_56192;
  ldv_56191: 
#line 8869 
  ;
  
#line 8869 
  range->bitrate[i] = ((int)priv->rates.supported_rates[i] & 127) * 500000;
  
#line 8868 
  i += 1;
  ldv_56192: 
#line 8869 
  ;
  
#line 8868 
  if ((int)range->num_bitrates > i) 
#line 8870 
                                    goto ldv_56191; else 
#line 8873 
                                                         goto ldv_56193;
  ldv_56193: 
#line 8874 
  ;
  
#line 8872 
  range->max_rts = 2304;
  
#line 8873 
  range->min_frag = 256;
  
#line 8874 
  range->max_frag = 2346;
  
#line 8876 
  range->encoding_size[0] = (unsigned short)5U;
  
#line 8877 
  range->encoding_size[1] = (unsigned short)13U;
  
#line 8878 
  range->num_encoding_sizes = (unsigned char)2U;
  
#line 8879 
  range->max_encoding_tokens = (unsigned char)4U;
  
#line 8882 
  range->we_version_compiled = (unsigned char)22U;
  
#line 8883 
  range->we_version_source = (unsigned char)18U;
  
#line 8885 
  i = 0;
  
#line 8886 
  if (((priv->ieee)->mode & 6) != 0) {
    
#line 8887 
    j = 0;
    
#line 8887 
    goto ldv_56196;
    ldv_56195: 
#line 8888 
    ;
    
#line 8888 
    if ((priv->ieee)->iw_mode == 1 && ((int)geo->bg[j].flags & 1) != 0) 
      
#line 8890 
      goto ldv_56194; else ;
    
#line 8892 
    range->freq[i].i = geo->bg[j].channel;
    
#line 8893 
    range->freq[i].m = (int)(geo->bg[j].freq * 100000U);
    
#line 8894 
    range->freq[i].e = (short)1;
    
#line 8895 
    i += 1;
    ldv_56194: 
#line 8896 
    ;
    
#line 8887 
    j += 1;
    ldv_56196: 
#line 8888 
    ;
    
#line 8887 
    if ((int)geo->bg_channels > j && i <= 31) 
#line 8889 
                                              goto ldv_56195; else 
#line 8892 
                                                                   goto ldv_56197;
    ldv_56197: 
#line 8893 
    ;
  }
  else ;
  
#line 8899 
  if (((priv->ieee)->mode & 1) != 0) {
    
#line 8900 
    j = 0;
    
#line 8900 
    goto ldv_56200;
    ldv_56199: 
#line 8901 
    ;
    
#line 8901 
    if ((priv->ieee)->iw_mode == 1 && ((int)geo->a[j].flags & 1) != 0) 
      
#line 8903 
      goto ldv_56198; else ;
    
#line 8905 
    range->freq[i].i = geo->a[j].channel;
    
#line 8906 
    range->freq[i].m = (int)(geo->a[j].freq * 100000U);
    
#line 8907 
    range->freq[i].e = (short)1;
    
#line 8908 
    i += 1;
    ldv_56198: 
#line 8909 
    ;
    
#line 8900 
    j += 1;
    ldv_56200: 
#line 8901 
    ;
    
#line 8900 
    if ((int)geo->a_channels > j && i <= 31) 
#line 8902 
                                             goto ldv_56199; else 
#line 8905 
                                                                  goto ldv_56201;
    ldv_56201: 
#line 8906 
    ;
  }
  else ;
  
#line 8912 
  range->num_channels = (unsigned short)i;
  
#line 8913 
  range->num_frequency = (unsigned char)i;
  
#line 8915 
  ldv_mutex_unlock_202(& priv->mutex);
  
#line 8918 
  range->event_capa[0] = 103284816U;
  
#line 8922 
  range->event_capa[1] = 1024U;
  
#line 8924 
  range->enc_capa = 15U;
  
#line 8927 
  range->scan_capa = (unsigned char)33U;
  
#line 8929 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_4;
    int tmp_3;
    
#line 8929 
    tmp_3 = preempt_count();
    
#line 8929 
    if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 8929 
                                                   tmp_4 = 73; else 
#line 8929 
                                                                    tmp_4 = 85;
    
#line 8929 
    printk("\001",tmp_4,"ipw_wx_get_range");
  }
  else ;
  
#line 8930 
  __retres = 0;
  
#line 8930 
  return __retres;
}


#line 8933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_set_wap(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  bool tmp_4;
  bool tmp_8;
  int tmp_13;
  
#line 8937 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 8939 
  if ((unsigned int)wrqu->ap_addr.sa_family != 1U) {
    
#line 8940 
    __retres = -22;
    
#line 8940 
    goto return_label;
  }
  else ;
  
#line 8941 
  ldv_mutex_lock_203(& priv->mutex);
  
#line 8942 
  tmp_4 = is_broadcast_ether_addr((u8 const *)(& wrqu->ap_addr.sa_data));
  
#line 8942 
  if ((int)tmp_4 != 0) 
#line 8942 
                       goto _LOR;
  else {
    bool tmp_5;
    
#line 8942 
    tmp_5 = is_zero_ether_addr((u8 const *)(& wrqu->ap_addr.sa_data));
    
#line 8942 
    if ((int)tmp_5 != 0) {
      _LOR: {
              
#line 8945 
              if ((ipw_debug_level & 8U) != 0U) {
                int tmp_1;
                int tmp_0;
                
#line 8945 
                tmp_0 = preempt_count();
                
#line 8945 
                if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 8945 
                                                               tmp_1 = 73; else 
                                                                    
#line 8945 
                                                                    tmp_1 = 85;
                
#line 8945 
                printk("\001",tmp_1,"ipw_wx_set_wap");
              }
              else ;
              
#line 8946 
              priv->config &= 4294967291U;
              
#line 8947 
              if ((ipw_debug_level & 4100U) != 0U) {
                int tmp_3;
                int tmp_2;
                
#line 8947 
                tmp_2 = preempt_count();
                
#line 8947 
                if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 8947 
                                                               tmp_3 = 73; else 
                                                                    
#line 8947 
                                                                    tmp_3 = 85;
                
#line 8947 
                printk("\001",tmp_3,"ipw_wx_set_wap");
              }
              else ;
              
#line 8949 
              ipw_associate((void *)priv);
              
#line 8950 
              ldv_mutex_unlock_204(& priv->mutex);
              
#line 8951 
              __retres = 0;
              
#line 8951 
              goto return_label;
            }
    }
    else ;
  }
  
#line 8954 
  priv->config |= 4U;
  
#line 8955 
  tmp_8 = ether_addr_equal((u8 const *)(& priv->bssid),(u8 const *)(& wrqu->ap_addr.sa_data));
  
#line 8955 
  if ((int)tmp_8 != 0) {
    
#line 8956 
    if ((ipw_debug_level & 8U) != 0U) {
      int tmp_7;
      int tmp_6;
      
#line 8956 
      tmp_6 = preempt_count();
      
#line 8956 
      if (((unsigned long)tmp_6 & 2096896UL) != 0UL) 
#line 8956 
                                                     tmp_7 = 73; else 
                                                                   
#line 8956 
                                                                   tmp_7 = 85;
      
#line 8956 
      printk("\001",tmp_7,"ipw_wx_set_wap");
    }
    else ;
    
#line 8957 
    ldv_mutex_unlock_205(& priv->mutex);
    
#line 8958 
    __retres = 0;
    
#line 8958 
    goto return_label;
  }
  else ;
  
#line 8961 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_10;
    int tmp_9;
    
#line 8961 
    ;
    
#line 8961 
    tmp_9 = preempt_count();
    
#line 8961 
    if (((unsigned long)tmp_9 & 2096896UL) != 0UL) 
#line 8961 
                                                   tmp_10 = 73; else 
                                                                  
#line 8961 
                                                                  tmp_10 = 85;
    
#line 8961 
    printk("\001",tmp_10,"ipw_wx_set_wap",(char *)(& wrqu->ap_addr.sa_data));
  }
  else ;
  
#line 8964 
  memcpy((void *)(& priv->bssid),(void const *)(& wrqu->ap_addr.sa_data),6UL);
  
#line 8967 
  if ((ipw_debug_level & 4100U) != 0U) {
    int tmp_12;
    int tmp_11;
    
#line 8967 
    tmp_11 = preempt_count();
    
#line 8967 
    if (((unsigned long)tmp_11 & 2096896UL) != 0UL) 
#line 8967 
                                                    tmp_12 = 73; else 
                                                                   
#line 8967 
                                                                   tmp_12 = 85;
    
#line 8967 
    printk("\001",tmp_12,"ipw_wx_set_wap");
  }
  else ;
  
#line 8968 
  tmp_13 = ipw_disassociate((void *)priv);
  
#line 8968 
  if (tmp_13 == 0) 
#line 8969 
                   ipw_associate((void *)priv); else ;
  
#line 8971 
  ldv_mutex_unlock_206(& priv->mutex);
  
#line 8972 
  __retres = 0;
  return_label: 
#line 8972 
                return __retres;
}


#line 8975  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_get_wap(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 8979 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 8983 
  ldv_mutex_lock_207(& priv->mutex);
  
#line 8984 
  if ((priv->config & 4U) != 0U || (priv->status & 384U) != 0U) {
    
#line 8986 
    wrqu->ap_addr.sa_family = (unsigned short)1U;
    
#line 8987 
    memcpy((void *)(& wrqu->ap_addr.sa_data),(void const *)(& priv->bssid),6UL);
  }
  else 
#line 8989 
       eth_zero_addr((u8 *)(& wrqu->ap_addr.sa_data));
  
#line 8991 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 8991 
    ;
    
#line 8991 
    tmp_0 = preempt_count();
    
#line 8991 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 8991 
                                                   tmp_1 = 73; else 
#line 8991 
                                                                    tmp_1 = 85;
    
#line 8991 
    printk("\001",tmp_1,"ipw_wx_get_wap",(char *)(& wrqu->ap_addr.sa_data));
  }
  else ;
  
#line 8993 
  ldv_mutex_unlock_208(& priv->mutex);
  
#line 8994 
  __retres = 0;
  
#line 8994 
  return __retres;
}


#line 8997  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_set_essid(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  int length;
  int tmp_3;
  int tmp_11;
  
#line 9001 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9004 
  ldv_mutex_lock_209(& priv->mutex);
  
#line 9006 
  if ((unsigned int)wrqu->essid.flags == 0U) {
    
#line 9008 
    if ((ipw_debug_level & 8U) != 0U) {
      int tmp_1;
      int tmp_0;
      
#line 9008 
      tmp_0 = preempt_count();
      
#line 9008 
      if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 9008 
                                                     tmp_1 = 73; else 
                                                                   
#line 9008 
                                                                   tmp_1 = 85;
      
#line 9008 
      printk("\001",tmp_1,"ipw_wx_set_essid");
    }
    else ;
    
#line 9009 
    ipw_disassociate((void *)priv);
    
#line 9010 
    priv->config &= 4294967293U;
    
#line 9011 
    ipw_associate((void *)priv);
    
#line 9012 
    ldv_mutex_unlock_210(& priv->mutex);
    
#line 9013 
    __retres = 0;
    
#line 9013 
    goto return_label;
  }
  else ;
  {
    int tmp_2;
    
#line 9016 
    int _min1 = (int)wrqu->essid.length;
    
#line 9016 
    int _min2 = 32;
    
#line 9016 
    if (_min1 < _min2) 
#line 9016 
                       tmp_2 = _min1; else 
#line 9016 
                                           tmp_2 = _min2;
    
#line 9016 
    tmp_3 = tmp_2;
  }
  
#line 9016 
  length = tmp_3;
  
#line 9018 
  priv->config |= 2U;
  
#line 9020 
  if ((int)priv->essid_len == length) {
    int tmp_6;
    
#line 9020 
    tmp_6 = memcmp((void const *)(& priv->essid),(void const *)extra,(unsigned long)length);
    
#line 9020 
    if (tmp_6 == 0) {
      
#line 9021 
      if ((priv->status & 384U) != 0U) {
        
#line 9022 
        if ((ipw_debug_level & 8U) != 0U) {
          int tmp_5;
          int tmp_4;
          
#line 9022 
          tmp_4 = preempt_count();
          
#line 9022 
          if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
#line 9022 
                                                         tmp_5 = 73; else 
                                                                    
#line 9022 
                                                                    tmp_5 = 85;
          
#line 9022 
          printk("\001",tmp_5,"ipw_wx_set_essid");
        }
        else ;
        
#line 9023 
        ldv_mutex_unlock_211(& priv->mutex);
        
#line 9024 
        __retres = 0;
        
#line 9024 
        goto return_label;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 9027 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_8;
    int tmp_7;
    
#line 9027 
    ;
    
#line 9027 
    ;
    
#line 9027 
    ;
    
#line 9027 
    tmp_7 = preempt_count();
    
#line 9027 
    if (((unsigned long)tmp_7 & 2096896UL) != 0UL) 
#line 9027 
                                                   tmp_8 = 73; else 
#line 9027 
                                                                    tmp_8 = 85;
    
#line 9027 
    printk("\001",tmp_8,"ipw_wx_set_essid",length,extra,length);
  }
  else ;
  
#line 9029 
  priv->essid_len = (unsigned char)length;
  
#line 9030 
  memcpy((void *)(& priv->essid),(void const *)extra,(unsigned long)priv->essid_len);
  
#line 9033 
  if ((ipw_debug_level & 4100U) != 0U) {
    int tmp_10;
    int tmp_9;
    
#line 9033 
    tmp_9 = preempt_count();
    
#line 9033 
    if (((unsigned long)tmp_9 & 2096896UL) != 0UL) 
#line 9033 
                                                   tmp_10 = 73; else 
                                                                  
#line 9033 
                                                                  tmp_10 = 85;
    
#line 9033 
    printk("\001",tmp_10,"ipw_wx_set_essid");
  }
  else ;
  
#line 9034 
  tmp_11 = ipw_disassociate((void *)priv);
  
#line 9034 
  if (tmp_11 == 0) 
#line 9035 
                   ipw_associate((void *)priv); else ;
  
#line 9037 
  ldv_mutex_unlock_212(& priv->mutex);
  
#line 9038 
  __retres = 0;
  return_label: 
#line 9038 
                return __retres;
}


#line 9041  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_get_essid(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 9045 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9049 
  ldv_mutex_lock_213(& priv->mutex);
  
#line 9050 
  if ((priv->config & 2U) != 0U || (priv->status & 384U) != 0U) {
    
#line 9052 
    if ((ipw_debug_level & 8U) != 0U) {
      int tmp_1;
      int tmp_0;
      
#line 9052 
      ;
      
#line 9052 
      ;
      
#line 9052 
      tmp_0 = preempt_count();
      
#line 9052 
      if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 9052 
                                                     tmp_1 = 73; else 
                                                                   
#line 9052 
                                                                   tmp_1 = 85;
      
#line 9052 
      printk("\001",tmp_1,"ipw_wx_get_essid",(int)priv->essid_len,(u8 *)(& priv->essid));
    }
    else ;
    
#line 9054 
    memcpy((void *)extra,(void const *)(& priv->essid),(unsigned long)priv->essid_len);
    
#line 9055 
    wrqu->essid.length = (unsigned short)priv->essid_len;
    
#line 9056 
    wrqu->essid.flags = (unsigned short)1U;
  }
  else {
    
#line 9058 
    if ((ipw_debug_level & 8U) != 0U) {
      int tmp_3;
      int tmp_2;
      
#line 9058 
      tmp_2 = preempt_count();
      
#line 9058 
      if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 9058 
                                                     tmp_3 = 73; else 
                                                                   
#line 9058 
                                                                   tmp_3 = 85;
      
#line 9058 
      printk("\001",tmp_3,"ipw_wx_get_essid");
    }
    else ;
    
#line 9059 
    wrqu->essid.length = (unsigned short)0U;
    
#line 9060 
    wrqu->essid.flags = (unsigned short)0U;
  }
  
#line 9062 
  ldv_mutex_unlock_214(& priv->mutex);
  
#line 9063 
  __retres = 0;
  
#line 9063 
  return __retres;
}


#line 9066  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_set_nick(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  size_t tmp_3;
  
#line 9070 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9072 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 9072 
    ;
    
#line 9072 
    tmp_0 = preempt_count();
    
#line 9072 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 9072 
                                                   tmp_1 = 73; else 
#line 9072 
                                                                    tmp_1 = 85;
    
#line 9072 
    printk("\001",tmp_1,"ipw_wx_set_nick",extra);
  }
  else ;
  
#line 9073 
  if ((unsigned int)wrqu->data.length > 32U) {
    
#line 9074 
    __retres = -7;
    
#line 9074 
    goto return_label;
  }
  else ;
  
#line 9075 
  ldv_mutex_lock_215(& priv->mutex);
  {
    size_t tmp_2;
    
#line 9076 
    size_t __min1 = (unsigned long)wrqu->data.length;
    
#line 9076 
    size_t __min2 = 32UL;
    
#line 9076 
    if (__min1 < __min2) 
#line 9076 
                         tmp_2 = __min1; else 
#line 9076 
                                              tmp_2 = __min2;
    
#line 9076 
    tmp_3 = tmp_2;
  }
  
#line 9076 
  wrqu->data.length = (unsigned short)tmp_3;
  
#line 9077 
  memset((void *)(& priv->nick),0,32UL);
  
#line 9078 
  memcpy((void *)(& priv->nick),(void const *)extra,(unsigned long)wrqu->data.length);
  
#line 9079 
  if ((ipw_debug_level & 268435456U) != 0U) {
    int tmp_5;
    int tmp_4;
    
#line 9079 
    tmp_4 = preempt_count();
    
#line 9079 
    if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
#line 9079 
                                                   tmp_5 = 73; else 
#line 9079 
                                                                    tmp_5 = 85;
    
#line 9079 
    printk("\001",tmp_5,"ipw_wx_set_nick");
  }
  else ;
  
#line 9080 
  ldv_mutex_unlock_216(& priv->mutex);
  
#line 9081 
  __retres = 0;
  return_label: 
#line 9081 
                return __retres;
}


#line 9085  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_get_nick(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  size_t tmp_2;
  
#line 9089 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9090 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 9090 
    tmp_0 = preempt_count();
    
#line 9090 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 9090 
                                                   tmp_1 = 73; else 
#line 9090 
                                                                    tmp_1 = 85;
    
#line 9090 
    printk("\001",tmp_1,"ipw_wx_get_nick");
  }
  else ;
  
#line 9091 
  ldv_mutex_lock_217(& priv->mutex);
  
#line 9092 
  tmp_2 = strlen((char const *)(& priv->nick));
  
#line 9092 
  wrqu->data.length = (unsigned short)tmp_2;
  
#line 9093 
  memcpy((void *)extra,(void const *)(& priv->nick),(unsigned long)wrqu->data.length);
  
#line 9094 
  wrqu->data.flags = (unsigned short)1U;
  
#line 9095 
  ldv_mutex_unlock_218(& priv->mutex);
  
#line 9096 
  __retres = 0;
  
#line 9096 
  return __retres;
}


#line 9099  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_set_sens(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  
#line 9103 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9104 
  int err = 0;
  
#line 9106 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 9106 
    ;
    
#line 9106 
    tmp_0 = preempt_count();
    
#line 9106 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 9106 
                                                   tmp_1 = 73; else 
#line 9106 
                                                                    tmp_1 = 85;
    
#line 9106 
    printk("\001",tmp_1,"ipw_wx_set_sens",wrqu->sens.value);
  }
  else ;
  
#line 9107 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_3;
    int tmp_2;
    
#line 9107 
    ;
    
#line 9107 
    tmp_2 = preempt_count();
    
#line 9107 
    if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 9107 
                                                   tmp_3 = 73; else 
#line 9107 
                                                                    tmp_3 = 85;
    
#line 9107 
    printk("\001",tmp_3,"ipw_wx_set_sens",wrqu->sens.value * 3);
  }
  else ;
  
#line 9108 
  ldv_mutex_lock_219(& priv->mutex);
  
#line 9110 
  if ((unsigned int)wrqu->sens.fixed == 0U) {
    
#line 9112 
    priv->roaming_threshold = 8U;
    
#line 9113 
    priv->disassociate_threshold = 24U;
    
#line 9114 
    goto out;
  }
  else ;
  
#line 9116 
  if ((unsigned int)wrqu->sens.value + 4294967295U > 29U) {
    
#line 9118 
    err = -22;
    
#line 9119 
    goto out;
  }
  else ;
  
#line 9122 
  priv->roaming_threshold = (unsigned int)wrqu->sens.value;
  
#line 9123 
  priv->disassociate_threshold = (unsigned int)(wrqu->sens.value * 3);
  out: 
#line 9124 
  ;
  
#line 9125 
  ldv_mutex_unlock_220(& priv->mutex);
  
#line 9126 
  return err;
}


#line 9129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_get_sens(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 9133 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9134 
  ldv_mutex_lock_221(& priv->mutex);
  
#line 9135 
  wrqu->sens.fixed = (unsigned char)1U;
  
#line 9136 
  wrqu->sens.value = (int)priv->roaming_threshold;
  
#line 9137 
  ldv_mutex_unlock_222(& priv->mutex);
  
#line 9139 
  if ((ipw_debug_level & 8U) != 0U) {
    char *tmp_0;
    int tmp_2;
    int tmp_1;
    
#line 9139 
    ;
    
#line 9139 
    if ((unsigned int)wrqu->power.disabled != 0U) 
#line 9139 
                                                  tmp_0 = (char *)"OFF"; else 
                                                                    
#line 9139 
                                                                    tmp_0 = (char *)"ON";
    
#line 9139 
    tmp_1 = preempt_count();
    
#line 9139 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 9139 
                                                   tmp_2 = 73; else 
#line 9139 
                                                                    tmp_2 = 85;
    
#line 9139 
    printk("\001",tmp_2,"ipw_wx_get_sens",tmp_0,wrqu->power.value);
  }
  else ;
  
#line 9142 
  __retres = 0;
  
#line 9142 
  return __retres;
}


#line 9145  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_set_rate(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  u32 fixed;
  u32 mask;
  int tmp_9;
  
#line 9150 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9151 
  u32 target_rate = (unsigned int)wrqu->bitrate.value;
  
#line 9158 
  if (target_rate == 4294967295U) {
    
#line 9159 
    fixed = 0U;
    
#line 9160 
    mask = 4095U;
    
#line 9162 
    goto apply;
  }
  else ;
  
#line 9165 
  mask = 0U;
  
#line 9166 
  fixed = (unsigned int)wrqu->bitrate.fixed;
  
#line 9168 
  if (target_rate == 1000000U || fixed == 0U) 
#line 9169 
                                              mask |= 1U; else ;
  
#line 9170 
  if (target_rate == 1000000U) 
#line 9171 
                               goto apply; else ;
  
#line 9173 
  if (target_rate == 2000000U || fixed == 0U) 
#line 9174 
                                              mask |= 2U; else ;
  
#line 9175 
  if (target_rate == 2000000U) 
#line 9176 
                               goto apply; else ;
  
#line 9178 
  if (target_rate == 5500000U || fixed == 0U) 
#line 9179 
                                              mask |= 4U; else ;
  
#line 9180 
  if (target_rate == 5500000U) 
#line 9181 
                               goto apply; else ;
  
#line 9183 
  if (target_rate == 6000000U || fixed == 0U) 
#line 9184 
                                              mask |= 16U; else ;
  
#line 9185 
  if (target_rate == 6000000U) 
#line 9186 
                               goto apply; else ;
  
#line 9188 
  if (target_rate == 9000000U || fixed == 0U) 
#line 9189 
                                              mask |= 32U; else ;
  
#line 9190 
  if (target_rate == 9000000U) 
#line 9191 
                               goto apply; else ;
  
#line 9193 
  if (target_rate == 11000000U || fixed == 0U) 
#line 9194 
                                               mask |= 8U; else ;
  
#line 9195 
  if (target_rate == 11000000U) 
#line 9196 
                                goto apply; else ;
  
#line 9198 
  if (target_rate == 12000000U || fixed == 0U) 
#line 9199 
                                               mask |= 64U; else ;
  
#line 9200 
  if (target_rate == 12000000U) 
#line 9201 
                                goto apply; else ;
  
#line 9203 
  if (target_rate == 18000000U || fixed == 0U) 
#line 9204 
                                               mask |= 128U; else ;
  
#line 9205 
  if (target_rate == 18000000U) 
#line 9206 
                                goto apply; else ;
  
#line 9208 
  if (target_rate == 24000000U || fixed == 0U) 
#line 9209 
                                               mask |= 256U; else ;
  
#line 9210 
  if (target_rate == 24000000U) 
#line 9211 
                                goto apply; else ;
  
#line 9213 
  if (target_rate == 36000000U || fixed == 0U) 
#line 9214 
                                               mask |= 512U; else ;
  
#line 9215 
  if (target_rate == 36000000U) 
#line 9216 
                                goto apply; else ;
  
#line 9218 
  if (target_rate == 48000000U || fixed == 0U) 
#line 9219 
                                               mask |= 1024U; else ;
  
#line 9220 
  if (target_rate == 48000000U) 
#line 9221 
                                goto apply; else ;
  
#line 9223 
  if (target_rate == 54000000U || fixed == 0U) 
#line 9224 
                                               mask |= 2048U; else ;
  
#line 9225 
  if (target_rate == 54000000U) 
#line 9226 
                                goto apply; else ;
  
#line 9228 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 9228 
    tmp_0 = preempt_count();
    
#line 9228 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 9228 
                                                   tmp_1 = 73; else 
#line 9228 
                                                                    tmp_1 = 85;
    
#line 9228 
    printk("\001",tmp_1,"ipw_wx_set_rate");
  }
  else ;
  
#line 9229 
  __retres = -22;
  
#line 9229 
  goto return_label;
  apply: 
#line 9231 
  ;
  
#line 9232 
  if ((ipw_debug_level & 8U) != 0U) {
    char *tmp_2;
    int tmp_4;
    int tmp_3;
    
#line 9232 
    if (fixed != 0U) 
#line 9232 
                     tmp_2 = (char *)"fixed"; else 
#line 9232 
                                                   tmp_2 = (char *)"sub-rates";
    
#line 9232 
    ;
    
#line 9232 
    tmp_3 = preempt_count();
    
#line 9232 
    if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 9232 
                                                   tmp_4 = 73; else 
#line 9232 
                                                                    tmp_4 = 85;
    
#line 9232 
    printk("\001",tmp_4,"ipw_wx_set_rate",mask,tmp_2);
  }
  else ;
  
#line 9234 
  ldv_mutex_lock_223(& priv->mutex);
  
#line 9235 
  if (mask == 4095U) {
    
#line 9236 
    priv->config &= 4294967167U;
    
#line 9237 
    ipw_set_fixed_rate(priv,(priv->ieee)->mode);
  }
  else 
#line 9239 
       priv->config |= 128U;
  
#line 9241 
  if ((unsigned int)priv->rates_mask == mask) {
    
#line 9242 
    if ((ipw_debug_level & 8U) != 0U) {
      int tmp_6;
      int tmp_5;
      
#line 9242 
      tmp_5 = preempt_count();
      
#line 9242 
      if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 9242 
                                                     tmp_6 = 73; else 
                                                                   
#line 9242 
                                                                   tmp_6 = 85;
      
#line 9242 
      printk("\001",tmp_6,"ipw_wx_set_rate");
    }
    else ;
    
#line 9243 
    ldv_mutex_unlock_224(& priv->mutex);
    
#line 9244 
    __retres = 0;
    
#line 9244 
    goto return_label;
  }
  else ;
  
#line 9247 
  priv->rates_mask = (unsigned short)mask;
  
#line 9250 
  if ((ipw_debug_level & 4100U) != 0U) {
    int tmp_8;
    int tmp_7;
    
#line 9250 
    tmp_7 = preempt_count();
    
#line 9250 
    if (((unsigned long)tmp_7 & 2096896UL) != 0UL) 
#line 9250 
                                                   tmp_8 = 73; else 
#line 9250 
                                                                    tmp_8 = 85;
    
#line 9250 
    printk("\001",tmp_8,"ipw_wx_set_rate");
  }
  else ;
  
#line 9251 
  tmp_9 = ipw_disassociate((void *)priv);
  
#line 9251 
  if (tmp_9 == 0) 
#line 9252 
                  ipw_associate((void *)priv); else ;
  
#line 9254 
  ldv_mutex_unlock_225(& priv->mutex);
  
#line 9255 
  __retres = 0;
  return_label: 
#line 9255 
                return __retres;
}


#line 9258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_get_rate(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 9262 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9263 
  ldv_mutex_lock_226(& priv->mutex);
  
#line 9264 
  wrqu->bitrate.value = (int)priv->last_rate;
  
#line 9265 
  wrqu->bitrate.fixed = (unsigned char)((unsigned int)((unsigned char)(priv->config >> 7)) & 1U);
  
#line 9266 
  ldv_mutex_unlock_227(& priv->mutex);
  
#line 9267 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 9267 
    ;
    
#line 9267 
    tmp_0 = preempt_count();
    
#line 9267 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 9267 
                                                   tmp_1 = 73; else 
#line 9267 
                                                                    tmp_1 = 85;
    
#line 9267 
    printk("\001",tmp_1,"ipw_wx_get_rate",wrqu->bitrate.value);
  }
  else ;
  
#line 9268 
  __retres = 0;
  
#line 9268 
  return __retres;
}


#line 9271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_set_rts(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 9275 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9276 
  ldv_mutex_lock_228(& priv->mutex);
  
#line 9277 
  if ((unsigned int)wrqu->rts.disabled != 0U || (unsigned int)wrqu->rts.fixed == 0U) 
    
#line 9278 
    priv->rts_threshold = (unsigned short)2304U;
  else {
    
#line 9280 
    if ((unsigned int)wrqu->rts.value + 4294967295U > 2303U) {
      
#line 9282 
      ldv_mutex_unlock_229(& priv->mutex);
      
#line 9283 
      __retres = -22;
      
#line 9283 
      goto return_label;
    }
    else ;
    
#line 9285 
    priv->rts_threshold = (unsigned short)wrqu->rts.value;
  }
  
#line 9288 
  ipw_send_rts_threshold(priv,(unsigned short)((int)priv->rts_threshold));
  
#line 9289 
  ldv_mutex_unlock_230(& priv->mutex);
  
#line 9290 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 9290 
    ;
    
#line 9290 
    tmp_0 = preempt_count();
    
#line 9290 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 9290 
                                                   tmp_1 = 73; else 
#line 9290 
                                                                    tmp_1 = 85;
    
#line 9290 
    printk("\001",tmp_1,"ipw_wx_set_rts",(int)priv->rts_threshold);
  }
  else ;
  
#line 9291 
  __retres = 0;
  return_label: 
#line 9291 
                return __retres;
}


#line 9294  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_get_rts(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 9298 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9299 
  ldv_mutex_lock_231(& priv->mutex);
  
#line 9300 
  wrqu->rts.value = (int)priv->rts_threshold;
  
#line 9301 
  wrqu->rts.fixed = (unsigned char)0U;
  
#line 9302 
  wrqu->rts.disabled = (unsigned char)(wrqu->rts.value == 2304);
  
#line 9303 
  ldv_mutex_unlock_232(& priv->mutex);
  
#line 9304 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 9304 
    ;
    
#line 9304 
    tmp_0 = preempt_count();
    
#line 9304 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 9304 
                                                   tmp_1 = 73; else 
#line 9304 
                                                                    tmp_1 = 85;
    
#line 9304 
    printk("\001",tmp_1,"ipw_wx_get_rts",wrqu->rts.value);
  }
  else ;
  
#line 9305 
  __retres = 0;
  
#line 9305 
  return __retres;
}


#line 9308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_set_txpow(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int tmp_0;
  
#line 9312 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9313 
  int err = 0;
  
#line 9315 
  ldv_mutex_lock_233(& priv->mutex);
  
#line 9316 
  tmp_0 = ipw_radio_kill_sw(priv,(int)wrqu->power.disabled);
  
#line 9316 
  if (tmp_0 != 0) {
    
#line 9317 
    err = -115;
    
#line 9318 
    goto out;
  }
  else ;
  
#line 9321 
  if ((unsigned int)wrqu->power.fixed == 0U) 
#line 9322 
                                             wrqu->power.value = 20; else ;
  
#line 9324 
  if ((unsigned int)wrqu->power.flags != 0U) {
    
#line 9325 
    err = -22;
    
#line 9326 
    goto out;
  }
  else ;
  
#line 9329 
  if ((unsigned int)wrqu->power.value + 12U > 32U) {
    
#line 9331 
    err = -22;
    
#line 9332 
    goto out;
  }
  else ;
  
#line 9335 
  priv->tx_power = (signed char)wrqu->power.value;
  
#line 9336 
  err = ipw_set_tx_power(priv);
  out: 
#line 9337 
  ;
  
#line 9338 
  ldv_mutex_unlock_234(& priv->mutex);
  
#line 9339 
  return err;
}


#line 9342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_get_txpow(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 9346 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9347 
  ldv_mutex_lock_235(& priv->mutex);
  
#line 9348 
  wrqu->power.value = (int)priv->tx_power;
  
#line 9349 
  wrqu->power.fixed = (unsigned char)1U;
  
#line 9350 
  wrqu->power.flags = (unsigned short)0U;
  
#line 9351 
  wrqu->power.disabled = (unsigned char)((priv->status & 12U) != 0U);
  
#line 9352 
  ldv_mutex_unlock_236(& priv->mutex);
  
#line 9354 
  if ((ipw_debug_level & 8U) != 0U) {
    char *tmp_0;
    int tmp_2;
    int tmp_1;
    
#line 9354 
    ;
    
#line 9354 
    if ((unsigned int)wrqu->power.disabled != 0U) 
#line 9354 
                                                  tmp_0 = (char *)"OFF"; else 
                                                                    
#line 9354 
                                                                    tmp_0 = (char *)"ON";
    
#line 9354 
    tmp_1 = preempt_count();
    
#line 9354 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 9354 
                                                   tmp_2 = 73; else 
#line 9354 
                                                                    tmp_2 = 85;
    
#line 9354 
    printk("\001",tmp_2,"ipw_wx_get_txpow",tmp_0,wrqu->power.value);
  }
  else ;
  
#line 9357 
  __retres = 0;
  
#line 9357 
  return __retres;
}


#line 9360  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_set_frag(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 9364 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9365 
  ldv_mutex_lock_237(& priv->mutex);
  
#line 9366 
  if ((unsigned int)wrqu->frag.disabled != 0U || (unsigned int)wrqu->frag.fixed == 0U) 
    
#line 9367 
    (priv->ieee)->fts = (unsigned short)2346U;
  else {
    
#line 9369 
    if ((unsigned int)wrqu->frag.value + 4294967040U > 2090U) {
      
#line 9371 
      ldv_mutex_unlock_238(& priv->mutex);
      
#line 9372 
      __retres = -22;
      
#line 9372 
      goto return_label;
    }
    else ;
    
#line 9375 
    (priv->ieee)->fts = (unsigned short)((unsigned int)((unsigned short)wrqu->frag.value) & 65534U);
  }
  
#line 9378 
  ipw_send_frag_threshold(priv,(unsigned short)((int)((unsigned short)wrqu->frag.value)));
  
#line 9379 
  ldv_mutex_unlock_239(& priv->mutex);
  
#line 9380 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 9380 
    ;
    
#line 9380 
    tmp_0 = preempt_count();
    
#line 9380 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 9380 
                                                   tmp_1 = 73; else 
#line 9380 
                                                                    tmp_1 = 85;
    
#line 9380 
    printk("\001",tmp_1,"ipw_wx_set_frag",wrqu->frag.value);
  }
  else ;
  
#line 9381 
  __retres = 0;
  return_label: 
#line 9381 
                return __retres;
}


#line 9384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_get_frag(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 9388 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9389 
  ldv_mutex_lock_240(& priv->mutex);
  
#line 9390 
  wrqu->frag.value = (int)(priv->ieee)->fts;
  
#line 9391 
  wrqu->frag.fixed = (unsigned char)0U;
  
#line 9392 
  wrqu->frag.disabled = (unsigned char)(wrqu->frag.value == 2346);
  
#line 9393 
  ldv_mutex_unlock_241(& priv->mutex);
  
#line 9394 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 9394 
    ;
    
#line 9394 
    tmp_0 = preempt_count();
    
#line 9394 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 9394 
                                                   tmp_1 = 73; else 
#line 9394 
                                                                    tmp_1 = 85;
    
#line 9394 
    printk("\001",tmp_1,"ipw_wx_get_frag",wrqu->frag.value);
  }
  else ;
  
#line 9396 
  __retres = 0;
  
#line 9396 
  return __retres;
}


#line 9399  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_set_retry(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 9403 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9405 
  if (((int)wrqu->retry.flags & 8192) != 0 || (unsigned int)wrqu->retry.disabled != 0U) {
    
#line 9406 
    __retres = -22;
    
#line 9406 
    goto return_label;
  }
  else ;
  
#line 9408 
  if (((int)wrqu->retry.flags & 4096) == 0) {
    
#line 9409 
    __retres = 0;
    
#line 9409 
    goto return_label;
  }
  else ;
  
#line 9411 
  if ((unsigned int)wrqu->retry.value > 254U) {
    
#line 9412 
    __retres = -22;
    
#line 9412 
    goto return_label;
  }
  else ;
  
#line 9414 
  ldv_mutex_lock_242(& priv->mutex);
  
#line 9415 
  if (((int)wrqu->retry.flags & 16) != 0) 
#line 9416 
                                          priv->short_retry_limit = (unsigned char)wrqu->retry.value;
  else 
    
#line 9417 
    if (((int)wrqu->retry.flags & 32) != 0) 
#line 9418 
                                            priv->long_retry_limit = (unsigned char)wrqu->retry.value;
    else {
      
#line 9420 
      priv->short_retry_limit = (unsigned char)wrqu->retry.value;
      
#line 9421 
      priv->long_retry_limit = (unsigned char)wrqu->retry.value;
    }
  
#line 9424 
  ipw_send_retry_limit(priv,(unsigned char)((int)priv->short_retry_limit),(unsigned char)((int)priv->long_retry_limit));
  
#line 9426 
  ldv_mutex_unlock_243(& priv->mutex);
  
#line 9427 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 9427 
    ;
    
#line 9427 
    ;
    
#line 9427 
    tmp_0 = preempt_count();
    
#line 9427 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 9427 
                                                   tmp_1 = 73; else 
#line 9427 
                                                                    tmp_1 = 85;
    
#line 9427 
    printk("\001",tmp_1,"ipw_wx_set_retry",(int)priv->short_retry_limit,(int)priv->long_retry_limit);
  }
  else ;
  
#line 9429 
  __retres = 0;
  return_label: 
#line 9429 
                return __retres;
}


#line 9432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_get_retry(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 9436 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9438 
  ldv_mutex_lock_244(& priv->mutex);
  
#line 9439 
  wrqu->retry.disabled = (unsigned char)0U;
  
#line 9441 
  if (((int)wrqu->retry.flags & 61440) == 8192) {
    
#line 9442 
    ldv_mutex_unlock_245(& priv->mutex);
    
#line 9443 
    __retres = -22;
    
#line 9443 
    goto return_label;
  }
  else ;
  
#line 9446 
  if (((int)wrqu->retry.flags & 32) != 0) {
    
#line 9447 
    wrqu->retry.flags = (unsigned short)4128U;
    
#line 9448 
    wrqu->retry.value = (int)priv->long_retry_limit;
  }
  else 
    
#line 9449 
    if (((int)wrqu->retry.flags & 16) != 0) {
      
#line 9450 
      wrqu->retry.flags = (unsigned short)4112U;
      
#line 9451 
      wrqu->retry.value = (int)priv->short_retry_limit;
    }
    else {
      
#line 9453 
      wrqu->retry.flags = (unsigned short)4096U;
      
#line 9454 
      wrqu->retry.value = (int)priv->short_retry_limit;
    }
  
#line 9456 
  ldv_mutex_unlock_246(& priv->mutex);
  
#line 9458 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 9458 
    ;
    
#line 9458 
    tmp_0 = preempt_count();
    
#line 9458 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 9458 
                                                   tmp_1 = 73; else 
#line 9458 
                                                                    tmp_1 = 85;
    
#line 9458 
    printk("\001",tmp_1,"ipw_wx_get_retry",wrqu->retry.value);
  }
  else ;
  
#line 9460 
  __retres = 0;
  return_label: 
#line 9460 
                return __retres;
}


#line 9463  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_set_scan(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 9467 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9468 
  struct iw_scan_req *req = (struct iw_scan_req *)extra;
  
#line 9469 
  struct delayed_work *work = (struct delayed_work *)0;
  
#line 9471 
  ldv_mutex_lock_247(& priv->mutex);
  
#line 9473 
  priv->user_requested_scan = 1;
  
#line 9475 
  if ((unsigned int)wrqu->data.length == 316U) {
    
#line 9476 
    if (((int)wrqu->data.flags & 2) != 0) {
      int tmp_1;
      {
        int tmp_0;
        
#line 9477 
        int _min1 = (int)req->essid_len;
        
#line 9477 
        int _min2 = 32;
        
#line 9477 
        if (_min1 < _min2) 
#line 9477 
                           tmp_0 = _min1; else 
#line 9477 
                                               tmp_0 = _min2;
        
#line 9477 
        tmp_1 = tmp_0;
      }
      
#line 9477 
      int len = tmp_1;
      
#line 9479 
      memcpy((void *)(& priv->direct_scan_ssid),(void const *)(& req->essid),(unsigned long)len);
      
#line 9480 
      priv->direct_scan_ssid_len = (unsigned char)len;
      
#line 9481 
      work = & priv->request_direct_scan;
    }
    else 
      
#line 9482 
      if ((unsigned int)req->scan_type == 1U) 
#line 9483 
                                              work = & priv->request_passive_scan; else ;
  }
  else 
#line 9487 
       work = & priv->request_scan;
  
#line 9490 
  ldv_mutex_unlock_248(& priv->mutex);
  
#line 9492 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_3;
    int tmp_2;
    
#line 9492 
    tmp_2 = preempt_count();
    
#line 9492 
    if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 9492 
                                                   tmp_3 = 73; else 
#line 9492 
                                                                    tmp_3 = 85;
    
#line 9492 
    printk("\001",tmp_3,"ipw_wx_set_scan");
  }
  else ;
  
#line 9494 
  ldv_schedule_delayed_work_249(work,0UL);
  
#line 9496 
  __retres = 0;
  
#line 9496 
  return __retres;
}


#line 9499  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_get_scan(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int tmp_0;
  
#line 9503 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9504 
  tmp_0 = libipw_wx_get_scan(priv->ieee,info,wrqu,extra);
  
#line 9504 
  return tmp_0;
}


#line 9507  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_set_encode(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *key)
{
  int ret;
  
#line 9511 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9513 
  u32 cap = priv->capability;
  
#line 9515 
  ldv_mutex_lock_250(& priv->mutex);
  
#line 9516 
  ret = libipw_wx_set_encode(priv->ieee,info,wrqu,key);
  
#line 9520 
  if ((priv->capability != cap && (priv->ieee)->iw_mode == 1) && (priv->status & 128U) != 0U) 
    
#line 9523 
    ipw_disassociate((void *)priv); else ;
  
#line 9525 
  ldv_mutex_unlock_251(& priv->mutex);
  
#line 9526 
  return ret;
}


#line 9529  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_get_encode(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *key)
{
  int tmp_0;
  
#line 9533 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9534 
  tmp_0 = libipw_wx_get_encode(priv->ieee,info,wrqu,key);
  
#line 9534 
  return tmp_0;
}


#line 9537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_set_power(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  int err;
  
#line 9541 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9543 
  ldv_mutex_lock_252(& priv->mutex);
  
#line 9544 
  if ((unsigned int)wrqu->power.disabled != 0U) {
    
#line 9545 
    priv->power_mode &= 15U;
    
#line 9546 
    err = ipw_send_power_mode(priv,0U);
    
#line 9547 
    if (err != 0) {
      
#line 9548 
      if ((ipw_debug_level & 8U) != 0U) {
        int tmp_1;
        int tmp_0;
        
#line 9548 
        tmp_0 = preempt_count();
        
#line 9548 
        if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 9548 
                                                       tmp_1 = 73; else 
                                                                    
#line 9548 
                                                                    tmp_1 = 85;
        
#line 9548 
        printk("\001",tmp_1,"ipw_wx_set_power");
      }
      else ;
      
#line 9549 
      ldv_mutex_unlock_253(& priv->mutex);
      
#line 9550 
      __retres = err;
      
#line 9550 
      goto return_label;
    }
    else ;
    
#line 9552 
    if ((ipw_debug_level & 8U) != 0U) {
      int tmp_3;
      int tmp_2;
      
#line 9552 
      tmp_2 = preempt_count();
      
#line 9552 
      if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 9552 
                                                     tmp_3 = 73; else 
                                                                   
#line 9552 
                                                                   tmp_3 = 85;
      
#line 9552 
      printk("\001",tmp_3,"ipw_wx_set_power");
    }
    else ;
    
#line 9553 
    ldv_mutex_unlock_254(& priv->mutex);
    
#line 9554 
    __retres = 0;
    
#line 9554 
    goto return_label;
  }
  else ;
  
#line 9557 
  switch ((int)wrqu->power.flags & 3840) {
    case 0: 
#line 9558 
    ;
    case 3840: 
#line 9559 
    ;
    case 768: 
#line 9560 
    ;
    
#line 9561 
    goto ldv_56410;
    default: 
#line 9562 
    ;
    
#line 9563 
    if ((ipw_debug_level & 8U) != 0U) {
      int tmp_5;
      int tmp_4;
      
#line 9563 
      ;
      
#line 9563 
      tmp_4 = preempt_count();
      
#line 9563 
      if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
#line 9563 
                                                     tmp_5 = 73; else 
                                                                   
#line 9563 
                                                                   tmp_5 = 85;
      
#line 9563 
      printk("\001",tmp_5,"ipw_wx_set_power",(int)wrqu->power.flags);
    }
    else ;
    
#line 9565 
    ldv_mutex_unlock_255(& priv->mutex);
    
#line 9566 
    __retres = -95;
    
#line 9566 
    goto return_label;
  }
  ldv_56410: 
#line 9571 
  ;
  
#line 9571 
  if ((priv->power_mode & 15U) == 6U) 
#line 9572 
                                      priv->power_mode = 23U; else 
#line 9574 
                                                                   priv->power_mode |= 16U;
  
#line 9576 
  err = ipw_send_power_mode(priv,priv->power_mode & 15U);
  
#line 9577 
  if (err != 0) {
    
#line 9578 
    if ((ipw_debug_level & 8U) != 0U) {
      int tmp_7;
      int tmp_6;
      
#line 9578 
      tmp_6 = preempt_count();
      
#line 9578 
      if (((unsigned long)tmp_6 & 2096896UL) != 0UL) 
#line 9578 
                                                     tmp_7 = 73; else 
                                                                   
#line 9578 
                                                                   tmp_7 = 85;
      
#line 9578 
      printk("\001",tmp_7,"ipw_wx_set_power");
    }
    else ;
    
#line 9579 
    ldv_mutex_unlock_256(& priv->mutex);
    
#line 9580 
    __retres = err;
    
#line 9580 
    goto return_label;
  }
  else ;
  
#line 9583 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_9;
    int tmp_8;
    
#line 9583 
    ;
    
#line 9583 
    tmp_8 = preempt_count();
    
#line 9583 
    if (((unsigned long)tmp_8 & 2096896UL) != 0UL) 
#line 9583 
                                                   tmp_9 = 73; else 
#line 9583 
                                                                    tmp_9 = 85;
    
#line 9583 
    printk("\001",tmp_9,"ipw_wx_set_power",priv->power_mode);
  }
  else ;
  
#line 9584 
  ldv_mutex_unlock_257(& priv->mutex);
  
#line 9585 
  __retres = 0;
  return_label: 
#line 9585 
                return __retres;
}


#line 9588  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_get_power(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 9592 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9593 
  ldv_mutex_lock_258(& priv->mutex);
  
#line 9594 
  if ((priv->power_mode & 16U) == 0U) 
#line 9595 
                                      wrqu->power.disabled = (unsigned char)1U; else 
                                                                    
#line 9597 
                                                                    wrqu->power.disabled = (unsigned char)0U;
  
#line 9599 
  ldv_mutex_unlock_259(& priv->mutex);
  
#line 9600 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 9600 
    ;
    
#line 9600 
    tmp_0 = preempt_count();
    
#line 9600 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 9600 
                                                   tmp_1 = 73; else 
#line 9600 
                                                                    tmp_1 = 85;
    
#line 9600 
    printk("\001",tmp_1,"ipw_wx_get_power",priv->power_mode);
  }
  else ;
  
#line 9602 
  __retres = 0;
  
#line 9602 
  return __retres;
}


#line 9605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_set_powermode(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  int err;
  
#line 9609 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9610 
  int mode = *((int *)extra);
  
#line 9613 
  ldv_mutex_lock_260(& priv->mutex);
  
#line 9614 
  if ((unsigned int)mode + 4294967295U > 6U) 
#line 9615 
                                             mode = 6; else ;
  
#line 9617 
  if ((priv->power_mode & 15U) != (unsigned int)mode) {
    
#line 9618 
    err = ipw_send_power_mode(priv,(unsigned int)mode);
    
#line 9619 
    if (err != 0) {
      
#line 9620 
      if ((ipw_debug_level & 8U) != 0U) {
        int tmp_1;
        int tmp_0;
        
#line 9620 
        tmp_0 = preempt_count();
        
#line 9620 
        if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 9620 
                                                       tmp_1 = 73; else 
                                                                    
#line 9620 
                                                                    tmp_1 = 85;
        
#line 9620 
        printk("\001",tmp_1,"ipw_wx_set_powermode");
      }
      else ;
      
#line 9621 
      ldv_mutex_unlock_261(& priv->mutex);
      
#line 9622 
      __retres = err;
      
#line 9622 
      goto return_label;
    }
    else ;
    
#line 9624 
    priv->power_mode = (unsigned int)(mode | 16);
  }
  else ;
  
#line 9626 
  ldv_mutex_unlock_262(& priv->mutex);
  
#line 9627 
  __retres = 0;
  return_label: 
#line 9627 
                return __retres;
}


#line 9631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_get_powermode(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  int tmp_0;
  
#line 9635 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9636 
  int level = (int)priv->power_mode & 15;
  
#line 9637 
  char *p = extra;
  
#line 9639 
  tmp_0 = snprintf(p,80UL,"Power save level: %d ",level);
  
#line 9639 
  p += tmp_0;
  
#line 9641 
  switch (level) {
    int tmp_1;
    int tmp_2;
    int tmp_3;
    case 6: 
#line 9642 
    ;
    
#line 9643 
    tmp_1 = snprintf(p,(unsigned long)(80L - ((long)p - (long)extra)),"(AC)");
    
#line 9643 
    p += tmp_1;
    
#line 9644 
    goto ldv_56440;
    case 7: 
#line 9645 
    ;
    
#line 9646 
    tmp_2 = snprintf(p,(unsigned long)(80L - ((long)p - (long)extra)),"(BATTERY)");
    
#line 9646 
    p += tmp_2;
    
#line 9647 
    goto ldv_56440;
    default: 
#line 9648 
    ;
    
#line 9649 
    tmp_3 = snprintf(p,(unsigned long)(80L - ((long)p - (long)extra)),"(Timeout %dms, Period %dms)",timeout_duration[level + -1] / 1000,period_duration[level + -1] / 1000);
    
#line 9652 
    p += tmp_3;
  }
  ldv_56440: 
#line 9655 
  ;
  
#line 9655 
  if ((priv->power_mode & 16U) == 0U) {
    int tmp_4;
    
#line 9656 
    tmp_4 = snprintf(p,(unsigned long)(80L - ((long)p - (long)extra))," OFF");
    
#line 9656 
    p += tmp_4;
  }
  else ;
  
#line 9658 
  wrqu->data.length = (unsigned short)((unsigned int)((unsigned short)((long)p - (long)extra)) + 1U);
  
#line 9660 
  __retres = 0;
  
#line 9660 
  return __retres;
}


#line 9663  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_set_wireless_mode(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  int tmp_2;
  
#line 9667 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9668 
  int mode = *((int *)extra);
  
#line 9669 
  u8 band = (unsigned char)0U;
  
#line 9669 
  u8 modulation = (unsigned char)0U;
  
#line 9671 
  if (mode == 0 || (mode & -8) != 0) {
    
#line 9672 
    printk("\001",mode);
    
#line 9673 
    __retres = -22;
    
#line 9673 
    goto return_label;
  }
  else ;
  
#line 9675 
  ldv_mutex_lock_263(& priv->mutex);
  
#line 9676 
  if ((unsigned int)priv->adapter == 2U) {
    
#line 9677 
    (priv->ieee)->abg_true = 1;
    
#line 9678 
    if ((mode & 1) != 0) {
      
#line 9679 
      band = (unsigned char)((unsigned int)band | 2U);
      
#line 9680 
      modulation = (unsigned char)((unsigned int)modulation | 2U);
    }
    else 
#line 9682 
         (priv->ieee)->abg_true = 0;
  }
  else {
    
#line 9684 
    if ((mode & 1) != 0) {
      
#line 9685 
      printk("\001");
      
#line 9687 
      ldv_mutex_unlock_264(& priv->mutex);
      
#line 9688 
      __retres = -22;
      
#line 9688 
      goto return_label;
    }
    else ;
    
#line 9691 
    (priv->ieee)->abg_true = 0;
  }
  
#line 9694 
  if ((mode & 2) != 0) {
    
#line 9695 
    band = (unsigned char)((unsigned int)band | 1U);
    
#line 9696 
    modulation = (unsigned char)((unsigned int)modulation | 1U);
  }
  else 
#line 9698 
       (priv->ieee)->abg_true = 0;
  
#line 9700 
  if ((mode & 4) != 0) {
    
#line 9701 
    band = (unsigned char)((unsigned int)band | 1U);
    
#line 9702 
    modulation = (unsigned char)((unsigned int)modulation | 2U);
  }
  else 
#line 9704 
       (priv->ieee)->abg_true = 0;
  
#line 9706 
  (priv->ieee)->mode = mode;
  
#line 9707 
  (priv->ieee)->freq_band = (int)band;
  
#line 9708 
  (priv->ieee)->modulation = (int)modulation;
  
#line 9709 
  init_supported_rates(priv,& priv->rates);
  
#line 9712 
  if ((ipw_debug_level & 4100U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 9712 
    tmp_0 = preempt_count();
    
#line 9712 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 9712 
                                                   tmp_1 = 73; else 
#line 9712 
                                                                    tmp_1 = 85;
    
#line 9712 
    printk("\001",tmp_1,"ipw_wx_set_wireless_mode");
  }
  else ;
  
#line 9713 
  tmp_2 = ipw_disassociate((void *)priv);
  
#line 9713 
  if (tmp_2 == 0) {
    
#line 9714 
    ipw_send_supported_rates(priv,& priv->rates);
    
#line 9715 
    ipw_associate((void *)priv);
  }
  else ;
  
#line 9719 
  ipw_led_band_on(priv);
  
#line 9721 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_3;
    int tmp_4;
    int tmp_5;
    int tmp_7;
    int tmp_6;
    
#line 9721 
    if ((mode & 4) != 0) 
#line 9721 
                         tmp_3 = 103; else 
#line 9721 
                                           tmp_3 = 46;
    
#line 9721 
    if ((mode & 2) != 0) 
#line 9721 
                         tmp_4 = 98; else 
#line 9721 
                                          tmp_4 = 46;
    
#line 9721 
    if ((mode & 1) != 0) 
#line 9721 
                         tmp_5 = 97; else 
#line 9721 
                                          tmp_5 = 46;
    
#line 9721 
    tmp_6 = preempt_count();
    
#line 9721 
    if (((unsigned long)tmp_6 & 2096896UL) != 0UL) 
#line 9721 
                                                   tmp_7 = 73; else 
#line 9721 
                                                                    tmp_7 = 85;
    
#line 9721 
    printk("\001",tmp_7,"ipw_wx_set_wireless_mode",tmp_5,tmp_4,tmp_3);
  }
  else ;
  
#line 9724 
  ldv_mutex_unlock_265(& priv->mutex);
  
#line 9725 
  __retres = 0;
  return_label: 
#line 9725 
                return __retres;
}


#line 9728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_get_wireless_mode(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  size_t tmp_2;
  
#line 9732 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9733 
  ldv_mutex_lock_266(& priv->mutex);
  
#line 9734 
  switch ((priv->ieee)->mode) {
    case 1: 
#line 9735 
    ;
    
#line 9736 
    strncpy(extra,"802.11a (1)",80UL);
    
#line 9737 
    goto ldv_56462;
    case 2: 
#line 9738 
    ;
    
#line 9739 
    strncpy(extra,"802.11b (2)",80UL);
    
#line 9740 
    goto ldv_56462;
    case 3: 
#line 9741 
    ;
    
#line 9742 
    strncpy(extra,"802.11ab (3)",80UL);
    
#line 9743 
    goto ldv_56462;
    case 4: 
#line 9744 
    ;
    
#line 9745 
    strncpy(extra,"802.11g (4)",80UL);
    
#line 9746 
    goto ldv_56462;
    case 5: 
#line 9747 
    ;
    
#line 9748 
    strncpy(extra,"802.11ag (5)",80UL);
    
#line 9749 
    goto ldv_56462;
    case 6: 
#line 9750 
    ;
    
#line 9751 
    strncpy(extra,"802.11bg (6)",80UL);
    
#line 9752 
    goto ldv_56462;
    case 7: 
#line 9753 
    ;
    
#line 9754 
    strncpy(extra,"802.11abg (7)",80UL);
    
#line 9755 
    goto ldv_56462;
    default: 
#line 9756 
    ;
    
#line 9757 
    strncpy(extra,"unknown",80UL);
    
#line 9758 
    goto ldv_56462;
  }
  ldv_56462: 
#line 9760 
  ;
  
#line 9760 
  *(extra + 79U) = (char)0;
  
#line 9762 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 9762 
    ;
    
#line 9762 
    tmp_0 = preempt_count();
    
#line 9762 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 9762 
                                                   tmp_1 = 73; else 
#line 9762 
                                                                    tmp_1 = 85;
    
#line 9762 
    printk("\001",tmp_1,"ipw_wx_get_wireless_mode",extra);
  }
  else ;
  
#line 9764 
  tmp_2 = strlen((char const *)extra);
  
#line 9764 
  wrqu->data.length = (unsigned short)((unsigned int)((unsigned short)tmp_2) + 1U);
  
#line 9765 
  ldv_mutex_unlock_267(& priv->mutex);
  
#line 9767 
  __retres = 0;
  
#line 9767 
  return __retres;
}


#line 9770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_set_preamble(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 9774 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9775 
  int mode = *((int *)extra);
  
#line 9776 
  ldv_mutex_lock_268(& priv->mutex);
  
#line 9778 
  if (mode == 1) {
    
#line 9779 
    if ((priv->config & 16U) == 0U) {
      int tmp_2;
      
#line 9780 
      priv->config |= 16U;
      
#line 9783 
      if ((ipw_debug_level & 4100U) != 0U) {
        int tmp_1;
        int tmp_0;
        
#line 9783 
        tmp_0 = preempt_count();
        
#line 9783 
        if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 9783 
                                                       tmp_1 = 73; else 
                                                                    
#line 9783 
                                                                    tmp_1 = 85;
        
#line 9783 
        printk("\001",tmp_1,"ipw_wx_set_preamble");
      }
      else ;
      
#line 9785 
      tmp_2 = ipw_disassociate((void *)priv);
      
#line 9785 
      if (tmp_2 == 0) 
#line 9786 
                      ipw_associate((void *)priv); else ;
    }
    else ;
    
#line 9788 
    goto done;
  }
  else ;
  
#line 9791 
  if (mode == 0) {
    
#line 9792 
    priv->config &= 4294967279U;
    
#line 9793 
    goto done;
  }
  else ;
  
#line 9795 
  ldv_mutex_unlock_269(& priv->mutex);
  
#line 9796 
  __retres = -22;
  
#line 9796 
  goto return_label;
  done: 
#line 9798 
  ;
  
#line 9799 
  ldv_mutex_unlock_270(& priv->mutex);
  
#line 9800 
  __retres = 0;
  return_label: 
#line 9800 
                return __retres;
}


#line 9803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_get_preamble(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 9807 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9808 
  ldv_mutex_lock_271(& priv->mutex);
  
#line 9809 
  if ((priv->config & 16U) != 0U) 
#line 9810 
                                  snprintf((char *)(& wrqu->name),16UL,"long (1)"); else 
                                                                    
#line 9812 
                                                                    snprintf((char *)(& wrqu->name),16UL,"auto (0)");
  
#line 9813 
  ldv_mutex_unlock_272(& priv->mutex);
  
#line 9814 
  __retres = 0;
  
#line 9814 
  return __retres;
}


#line 9818  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_set_monitor(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 9822 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9823 
  int *parms = (int *)extra;
  
#line 9824 
  int enable = *parms > 0;
  
#line 9825 
  ldv_mutex_lock_273(& priv->mutex);
  
#line 9826 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 9826 
    ;
    
#line 9826 
    ;
    
#line 9826 
    tmp_0 = preempt_count();
    
#line 9826 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 9826 
                                                   tmp_1 = 73; else 
#line 9826 
                                                                    tmp_1 = 85;
    
#line 9826 
    printk("\001",tmp_1,"ipw_wx_set_monitor",enable,*(parms + 1U));
  }
  else ;
  
#line 9827 
  if (enable != 0) {
    
#line 9828 
    if ((priv->ieee)->iw_mode != 6) {
      
#line 9830 
      (priv->net_dev)->type = (unsigned short)803U;
      
#line 9834 
      ldv_schedule_work_274(& priv->adapter_restart);
    }
    else ;
    
#line 9837 
    ipw_set_channel(priv,(unsigned char)((int)((unsigned char)*(parms + 1U))));
  }
  else {
    
#line 9839 
    if ((priv->ieee)->iw_mode != 6) {
      
#line 9840 
      ldv_mutex_unlock_275(& priv->mutex);
      
#line 9841 
      __retres = 0;
      
#line 9841 
      goto return_label;
    }
    else ;
    
#line 9843 
    (priv->net_dev)->type = (unsigned short)1U;
    
#line 9844 
    ldv_schedule_work_276(& priv->adapter_restart);
  }
  
#line 9846 
  ldv_mutex_unlock_277(& priv->mutex);
  
#line 9847 
  __retres = 0;
  return_label: 
#line 9847 
                return __retres;
}


#line 9852  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_reset(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 9856 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9857 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 9857 
    tmp_0 = preempt_count();
    
#line 9857 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 9857 
                                                   tmp_1 = 73; else 
#line 9857 
                                                                    tmp_1 = 85;
    
#line 9857 
    printk("\001",tmp_1,"ipw_wx_reset");
  }
  else ;
  
#line 9858 
  ldv_schedule_work_278(& priv->adapter_restart);
  
#line 9859 
  __retres = 0;
  
#line 9859 
  return __retres;
}


#line 9862  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wx_sw_reset(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  int ret;
  
#line 9866 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 9867 
  union iwreq_data wrqu_sec = {.encoding = {.pointer = (void *)0, .length = (unsigned short)0, .flags = (unsigned short)32768U}};
  
#line 9874 
  if ((ipw_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 9874 
    tmp_0 = preempt_count();
    
#line 9874 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 9874 
                                                   tmp_1 = 73; else 
#line 9874 
                                                                    tmp_1 = 85;
    
#line 9874 
    printk("\001",tmp_1,"ipw_wx_sw_reset");
  }
  else ;
  
#line 9876 
  ldv_mutex_lock_279(& priv->mutex);
  
#line 9878 
  ret = ipw_sw_reset(priv,2);
  
#line 9879 
  if (ret == 0) {
    
#line 9880 
    free_firmware();
    
#line 9881 
    ipw_adapter_restart((void *)priv);
  }
  else ;
  
#line 9886 
  ipw_radio_kill_sw(priv,(int)priv->status & 8);
  
#line 9888 
  ldv_mutex_unlock_280(& priv->mutex);
  
#line 9889 
  libipw_wx_set_encode(priv->ieee,info,& wrqu_sec,(char *)0);
  
#line 9890 
  ldv_mutex_lock_281(& priv->mutex);
  
#line 9892 
  if ((priv->status & 12U) == 0U) {
    int tmp_4;
    
#line 9894 
    if ((ipw_debug_level & 4100U) != 0U) {
      int tmp_3;
      int tmp_2;
      
#line 9894 
      tmp_2 = preempt_count();
      
#line 9894 
      if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 9894 
                                                     tmp_3 = 73; else 
                                                                   
#line 9894 
                                                                   tmp_3 = 85;
      
#line 9894 
      printk("\001",tmp_3,"ipw_wx_sw_reset");
    }
    else ;
    
#line 9896 
    tmp_4 = ipw_disassociate((void *)priv);
    
#line 9896 
    if (tmp_4 == 0) 
#line 9897 
                    ipw_associate((void *)priv); else ;
  }
  else ;
  
#line 9900 
  ldv_mutex_unlock_282(& priv->mutex);
  
#line 9902 
  __retres = 0;
  
#line 9902 
  return __retres;
}


#line 9906  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static iw_handler ipw_wx_handlers[54U] = {[1] = (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& cfg80211_wext_giwname), [4] = & ipw_wx_set_freq, & ipw_wx_get_freq, & ipw_wx_set_mode, & ipw_wx_get_mode, & ipw_wx_set_sens, & ipw_wx_get_sens, [11] = & ipw_wx_get_range, [16] = & iw_handler_set_spy, & iw_handler_get_spy, & iw_handler_set_thrspy, & iw_handler_get_thrspy, & ipw_wx_set_wap, & ipw_wx_get_wap, & ipw_wx_set_mlme, [24] = & ipw_wx_set_scan, & ipw_wx_get_scan, & ipw_wx_set_essid, & ipw_wx_get_essid, & ipw_wx_set_nick, & ipw_wx_get_nick, [32] = & ipw_wx_set_rate, & ipw_wx_get_rate, & ipw_wx_set_rts, & ipw_wx_get_rts, & ipw_wx_set_frag, & ipw_wx_get_frag, & ipw_wx_set_txpow, & ipw_wx_get_txpow, & ipw_wx_set_retry, & ipw_wx_get_retry, & ipw_wx_set_encode, & ipw_wx_get_encode, & ipw_wx_set_power, & ipw_wx_get_power, [48] = & ipw_wx_set_genie, & ipw_wx_get_genie, & ipw_wx_set_auth, & ipw_wx_get_auth, & ipw_wx_set_encodeext, & ipw_wx_get_encodeext};

#line 9964  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct iw_priv_args ipw_priv_args[9U] = {{.cmd = 35808U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0, .name = {(char)'s', (char)'e', (char)'t', (char)'_', (char)'p', (char)'o', (char)'w', (char)'e', (char)'r', (char)'\000'}}, {.cmd = 35809U, .set_args = (unsigned short)0, .get_args = (unsigned short)10320U, .name = {(char)'g', (char)'e', (char)'t', (char)'_', (char)'p', (char)'o', (char)'w', (char)'e', (char)'r', (char)'\000'}}, {.cmd = 35810U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0, .name = {(char)'s', (char)'e', (char)'t', (char)'_', (char)'m', (char)'o', (char)'d', (char)'e', (char)'\000'}}, {.cmd = 35811U, .set_args = (unsigned short)0, .get_args = (unsigned short)10320U, .name = {(char)'g', (char)'e', (char)'t', (char)'_', (char)'m', (char)'o', (char)'d', (char)'e', (char)'\000'}}, {.cmd = 35812U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0, .name = {(char)'s', (char)'e', (char)'t', (char)'_', (char)'p', (char)'r', (char)'e', (char)'a', (char)'m', (char)'b', (char)'l', (char)'e', (char)'\000'}}, {.cmd = 35813U, .set_args = (unsigned short)0, .get_args = (unsigned short)10256U, .name = {(char)'g', (char)'e', (char)'t', (char)'_', (char)'p', (char)'r', (char)'e', (char)'a', (char)'m', (char)'b', (char)'l', (char)'e', (char)'\000'}}, {.cmd = 35814U, .set_args = (unsigned short)18432U, .get_args = (unsigned short)0U, .name = {(char)'r', (char)'e', (char)'s', (char)'e', (char)'t', (char)'\000'}}, {.cmd = 35815U, .set_args = (unsigned short)18432U, .get_args = (unsigned short)0U, .name = {(char)'s', (char)'w', (char)'_', (char)'r', (char)'e', (char)'s', (char)'e', (char)'t', (char)'\000'}}, {.cmd = 35816U, .set_args = (unsigned short)18434U, .get_args = (unsigned short)0U, .name = {(char)'m', (char)'o', (char)'n', (char)'i', (char)'t', (char)'o', (char)'r', (char)'\000'}}};

#line 10002  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static iw_handler ipw_priv_handler[9U] = {& ipw_wx_set_powermode, & ipw_wx_get_powermode, & ipw_wx_set_wireless_mode, & ipw_wx_get_wireless_mode, & ipw_wx_set_preamble, & ipw_wx_get_preamble, & ipw_wx_reset, & ipw_wx_sw_reset, & ipw_wx_set_monitor};

#line 10016  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct iw_handler_def ipw_wx_handler_def = {.standard = (iw_handler (* const *)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& ipw_wx_handlers), .num_standard = (unsigned short)54U, .num_private = (unsigned short)9U, .num_private_args = (unsigned short)9U, .private = (iw_handler (* const *)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& ipw_priv_handler), .private_args = (struct iw_priv_args const *)(& ipw_priv_args), .get_wireless_stats = & ipw_get_wireless_stats};

#line 10031  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct iw_statistics *ipw_get_wireless_stats(struct net_device *dev)
{
  struct iw_statistics *__retres;
  struct iw_statistics *wstats;
  s16 tmp_0;
  
#line 10033 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 10036 
  wstats = & priv->wstats;
  
#line 10043 
  if ((priv->status & 128U) == 0U) {
    
#line 10044 
    wstats->miss.beacon = 0U;
    
#line 10045 
    wstats->discard.retries = 0U;
    
#line 10046 
    wstats->qual.qual = (unsigned char)0U;
    
#line 10047 
    wstats->qual.level = (unsigned char)0U;
    
#line 10048 
    wstats->qual.noise = (unsigned char)0U;
    
#line 10049 
    wstats->qual.updated = (unsigned char)7U;
    
#line 10050 
    wstats->qual.updated = (unsigned char)((unsigned int)wstats->qual.updated | 112U);
    
#line 10052 
    __retres = wstats;
    
#line 10052 
    goto return_label;
  }
  else ;
  
#line 10055 
  wstats->qual.qual = (unsigned char)priv->quality;
  
#line 10056 
  wstats->qual.level = (unsigned char)priv->exp_avg_rssi;
  
#line 10057 
  wstats->qual.noise = (unsigned char)priv->exp_avg_noise;
  
#line 10058 
  wstats->qual.updated = (unsigned char)15U;
  
#line 10061 
  tmp_0 = average_value(& priv->average_missed_beacons);
  
#line 10061 
  wstats->miss.beacon = (unsigned int)tmp_0;
  
#line 10062 
  wstats->discard.retries = priv->last_tx_failures;
  
#line 10063 
  wstats->discard.code = (priv->ieee)->ieee_stats.rx_discards_undecryptable;
  
#line 10069 
  __retres = wstats;
  return_label: 
#line 10069 
                return __retres;
}


#line 10074  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void init_sys_config(struct ipw_sys_config *sys_config)
{
  
#line 10076 
  memset((void *)sys_config,0,20UL);
  
#line 10077 
  sys_config->bt_coexistence = (unsigned char)0U;
  
#line 10078 
  sys_config->answer_broadcast_ssid_probe = (unsigned char)0U;
  
#line 10079 
  sys_config->accept_all_data_frames = (unsigned char)0U;
  
#line 10080 
  sys_config->accept_non_directed_frames = (unsigned char)1U;
  
#line 10081 
  sys_config->exclude_unicast_unencrypted = (unsigned char)0U;
  
#line 10082 
  sys_config->disable_unicast_decryption = (unsigned char)1U;
  
#line 10083 
  sys_config->exclude_multicast_unencrypted = (unsigned char)0U;
  
#line 10084 
  sys_config->disable_multicast_decryption = (unsigned char)1U;
  
#line 10085 
  if ((unsigned int)antenna > 3U) 
#line 10086 
                                  antenna = 0; else ;
  
#line 10087 
  sys_config->antenna_diversity = (unsigned char)antenna;
  
#line 10088 
  sys_config->pass_crc_to_host = (unsigned char)0U;
  
#line 10089 
  sys_config->dot11g_auto_detection = (unsigned char)0U;
  
#line 10090 
  sys_config->enable_cts_to_self = (unsigned char)0U;
  
#line 10091 
  sys_config->bt_coexist_collision_thr = (unsigned char)0U;
  
#line 10092 
  sys_config->pass_noise_stats_to_host = (unsigned char)1U;
  
#line 10093 
  sys_config->silence_threshold = (unsigned char)30U;
  
#line 10094 
  return;
}


#line 10096  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_net_open(struct net_device *dev)
{
  int __retres;
  
#line 10098 
  if ((ipw_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 10098 
    tmp = preempt_count();
    
#line 10098 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 10098 
                                                 tmp_0 = 73; else 
#line 10098 
                                                                  tmp_0 = 85;
    
#line 10098 
    printk("\001",tmp_0,"ipw_net_open");
  }
  else ;
  
#line 10099 
  netif_start_queue(dev);
  
#line 10100 
  __retres = 0;
  
#line 10100 
  return __retres;
}


#line 10103  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_net_stop(struct net_device *dev)
{
  int __retres;
  
#line 10105 
  if ((ipw_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 10105 
    tmp = preempt_count();
    
#line 10105 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 10105 
                                                 tmp_0 = 73; else 
#line 10105 
                                                                  tmp_0 = 85;
    
#line 10105 
    printk("\001",tmp_0,"ipw_net_stop");
  }
  else ;
  
#line 10106 
  netif_start_queue(dev);
  
#line 10107 
  __retres = 0;
  
#line 10107 
  return __retres;
}


#line 10117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_tx_skb(struct ipw_priv *priv, struct libipw_txb *txb, int pri)
{
  int __retres;
  struct tfd_frame *tfd;
  u8 id;
  u8 hdr_len;
  u8 unicast;
  int fc;
  int tmp_0;
  int tmp_6;
  dma_addr_t tmp_13;
  int tmp_18;
  
#line 10120 
  struct libipw_hdr_3addrqos *hdr = (struct libipw_hdr_3addrqos *)(txb->fragments[0])->data;
  
#line 10122 
  int i = 0;
  
#line 10125 
  int tx_id = ipw_get_tx_queue_number(priv,(unsigned short)((int)((unsigned short)pri)));
  
#line 10126 
  struct clx2_tx_queue *txq = & priv->txq[tx_id];
  
#line 10130 
  struct clx2_queue *q = & txq->q;
  
#line 10134 
  if ((priv->status & 128U) == 0U) 
#line 10135 
                                   goto drop; else ;
  
#line 10137 
  tmp_0 = libipw_get_hdrlen((unsigned short)((int)hdr->frame_ctl));
  
#line 10137 
  hdr_len = (unsigned char)tmp_0;
  
#line 10138 
  switch ((priv->ieee)->iw_mode) {
    int tmp_2;
    bool tmp_1;
    int tmp_4;
    bool tmp_3;
    case 1: 
#line 10139 
    ;
    
#line 10140 
    tmp_1 = is_multicast_ether_addr((u8 const *)(& hdr->addr1));
    
#line 10140 
    if (tmp_1) 
#line 10140 
               tmp_2 = 0; else 
#line 10140 
                               tmp_2 = 1;
    
#line 10140 
    unicast = (unsigned char)tmp_2;
    
#line 10141 
    id = ipw_find_station(priv,(u8 *)(& hdr->addr1));
    
#line 10142 
    if ((unsigned int)id == 255U) {
      
#line 10143 
      id = ipw_add_station(priv,(u8 *)(& hdr->addr1));
      
#line 10144 
      if ((unsigned int)id == 255U) {
        
#line 10145 
        printk("\001",(u8 *)(& hdr->addr1));
        
#line 10148 
        goto drop;
      }
      else ;
    }
    else ;
    
#line 10151 
    goto ldv_56572;
    case 2: 
#line 10153 
    ;
    default: 
#line 10154 
    ;
    
#line 10155 
    tmp_3 = is_multicast_ether_addr((u8 const *)(& hdr->addr3));
    
#line 10155 
    if (tmp_3) 
#line 10155 
               tmp_4 = 0; else 
#line 10155 
                               tmp_4 = 1;
    
#line 10155 
    unicast = (unsigned char)tmp_4;
    
#line 10156 
    id = (unsigned char)0U;
    
#line 10157 
    goto ldv_56572;
  }
  ldv_56572: 
#line 10160 
  ;
  
#line 10160 
  tfd = txq->bd + q->first_empty;
  
#line 10161 
  *(txq->txb + q->first_empty) = txb;
  
#line 10162 
  memset((void *)tfd,0,128UL);
  
#line 10163 
  tfd->u.data.station_number = id;
  
#line 10165 
  tfd->control_flags.message_type = (unsigned char)0U;
  
#line 10166 
  tfd->control_flags.control_bits = (unsigned char)4U;
  
#line 10168 
  tfd->u.data.cmd_id = (unsigned char)11U;
  
#line 10169 
  tfd->u.data.len = txb->payload_size;
  
#line 10171 
  if ((unsigned int)priv->assoc_request.ieee_mode == 1U) 
#line 10172 
                                                         tfd->u.data.tx_flags_ext = (unsigned char)((unsigned int)tfd->u.data.tx_flags_ext | 1U); else 
                                                                    
#line 10174 
                                                                    tfd->u.data.tx_flags_ext = tfd->u.data.tx_flags_ext;
  
#line 10176 
  if ((unsigned int)priv->assoc_request.preamble_length == 4U) 
#line 10177 
                                                               tfd->u.data.tx_flags = (unsigned char)((unsigned int)tfd->u.data.tx_flags | 4U); else ;
  
#line 10179 
  fc = (int)hdr->frame_ctl;
  
#line 10180 
  hdr->frame_ctl = (unsigned short)((unsigned int)((unsigned short)fc) & 64511U);
  
#line 10182 
  memcpy((void *)(& tfd->u.data.tfd.tfd_24.mchdr),(void const *)hdr,(unsigned long)hdr_len);
  
#line 10184 
  if ((long)((unsigned int)unicast != 0U) != 0L) 
#line 10185 
                                                 tfd->u.data.tx_flags = (unsigned char)((unsigned int)tfd->u.data.tx_flags | 128U); else ;
  
#line 10187 
  if ((unsigned int)txb->encrypted != 0U && (priv->ieee)->host_encrypt == 0) {
    
#line 10188 
    switch ((int)(priv->ieee)->sec.level) {
      case 4: 
#line 10189 
      ;
      
#line 10190 
      tfd->u.data.tfd.tfd_24.mchdr.frame_ctl = (unsigned short)((unsigned int)tfd->u.data.tfd.tfd_24.mchdr.frame_ctl | 16384U);
      
#line 10196 
      if ((unsigned int)unicast == 0U) 
#line 10197 
                                       tfd->u.data.tx_flags = (unsigned char)((unsigned int)tfd->u.data.tx_flags | 128U); else ;
      
#line 10199 
      tfd->u.data.tx_flags = (unsigned char)((unsigned int)tfd->u.data.tx_flags & 223U);
      
#line 10200 
      tfd->u.data.tx_flags_ext = (unsigned char)((unsigned int)tfd->u.data.tx_flags_ext | 8U);
      
#line 10201 
      tfd->u.data.key_index = (unsigned char)0U;
      
#line 10202 
      tfd->u.data.key_index = (unsigned char)((unsigned int)tfd->u.data.key_index | 32U);
      
#line 10203 
      goto ldv_56576;
      case 2: 
#line 10204 
      ;
      
#line 10205 
      tfd->u.data.tfd.tfd_24.mchdr.frame_ctl = (unsigned short)((unsigned int)tfd->u.data.tfd.tfd_24.mchdr.frame_ctl | 16384U);
      
#line 10207 
      tfd->u.data.tx_flags = (unsigned char)((unsigned int)tfd->u.data.tx_flags & 223U);
      
#line 10208 
      tfd->u.data.tx_flags_ext = (unsigned char)((unsigned int)tfd->u.data.tx_flags_ext | 12U);
      
#line 10209 
      tfd->u.data.key_index = (unsigned char)32U;
      
#line 10210 
      goto ldv_56576;
      case 1: 
#line 10211 
      ;
      
#line 10212 
      tfd->u.data.tfd.tfd_24.mchdr.frame_ctl = (unsigned short)((unsigned int)tfd->u.data.tfd.tfd_24.mchdr.frame_ctl | 16384U);
      
#line 10214 
      tfd->u.data.key_index = (unsigned char)(priv->ieee)->crypt_info.tx_keyidx;
      
#line 10215 
      if ((unsigned int)(priv->ieee)->sec.key_sizes[(priv->ieee)->crypt_info.tx_keyidx] <= 40U) 
        
#line 10217 
        tfd->u.data.key_index = (unsigned char)((unsigned int)tfd->u.data.key_index | 64U); else 
                                                                    
#line 10219 
                                                                    tfd->u.data.key_index = (unsigned char)((unsigned int)tfd->u.data.key_index | 128U);
      
#line 10220 
      goto ldv_56576;
      case 0: 
#line 10221 
      ;
      
#line 10222 
      goto ldv_56576;
      default: 
#line 10223 
      ;
      
#line 10224 
      printk("\001",(int)(priv->ieee)->sec.level);
      
#line 10226 
      goto ldv_56576;
    }
    ldv_56576: 
#line 10228 
    ;
  }
  else 
#line 10230 
       tfd->u.data.tx_flags = (unsigned char)((unsigned int)tfd->u.data.tx_flags | 32U);
  
#line 10233 
  if ((fc & 128) != 0) 
#line 10234 
                       ipw_qos_set_tx_queue_command(priv,(unsigned short)((int)((unsigned short)pri)),& tfd->u.data); else ;
  {
    int tmp_5;
    
#line 10238 
    unsigned char _min1 = (unsigned char)4U;
    
#line 10238 
    u8 _min2 = txb->nr_frags;
    
#line 10238 
    if ((int)_min1 < (int)_min2) 
#line 10238 
                                 tmp_5 = (int)_min1; else 
#line 10238 
                                                          tmp_5 = (int)_min2;
    
#line 10238 
    tmp_6 = tmp_5;
  }
  
#line 10238 
  tfd->u.data.num_chunks = (unsigned int)tmp_6;
  
#line 10240 
  if ((ipw_debug_level & 2097152U) != 0U) {
    int tmp_8;
    int tmp_7;
    
#line 10240 
    ;
    
#line 10240 
    ;
    
#line 10240 
    tmp_7 = preempt_count();
    
#line 10240 
    if (((unsigned long)tmp_7 & 2096896UL) != 0UL) 
#line 10240 
                                                   tmp_8 = 73; else 
#line 10240 
                                                                    tmp_8 = 85;
    
#line 10240 
    printk("\001",tmp_8,"ipw_tx_skb",(int)txb->nr_frags,tfd->u.data.num_chunks);
  }
  else ;
  
#line 10242 
  i = 0;
  
#line 10242 
  goto ldv_56586;
  ldv_56585: 
#line 10243 
  ;
  
#line 10243 
  if ((ipw_debug_level & 2097152U) != 0U) {
    int tmp_10;
    int tmp_9;
    
#line 10243 
    ;
    
#line 10243 
    ;
    
#line 10243 
    ;
    
#line 10243 
    tmp_9 = preempt_count();
    
#line 10243 
    if (((unsigned long)tmp_9 & 2096896UL) != 0UL) 
#line 10243 
                                                   tmp_10 = 73; else 
                                                                  
#line 10243 
                                                                  tmp_10 = 85;
    
#line 10243 
    printk("\001",tmp_10,"ipw_tx_skb",i,tfd->u.data.num_chunks,(txb->fragments[i])->len - (unsigned int)hdr_len);
  }
  else ;
  
#line 10246 
  if ((ipw_debug_level & 8388608U) != 0U) {
    int tmp_12;
    int tmp_11;
    
#line 10246 
    ;
    
#line 10246 
    ;
    
#line 10246 
    ;
    
#line 10246 
    tmp_11 = preempt_count();
    
#line 10246 
    if (((unsigned long)tmp_11 & 2096896UL) != 0UL) 
#line 10246 
                                                    tmp_12 = 73; else 
                                                                   
#line 10246 
                                                                   tmp_12 = 85;
    
#line 10246 
    printk("\001",tmp_12,"ipw_tx_skb",i,tfd->u.data.num_chunks,(txb->fragments[i])->len - (unsigned int)hdr_len);
  }
  else ;
  
#line 10249 
  printk_buf(8388608,(u8 const *)((txb->fragments[i])->data + (int)hdr_len),(txb->fragments[i])->len - (unsigned int)hdr_len);
  
#line 10253 
  tmp_13 = pci_map_single(priv->pci_dev,(void *)((txb->fragments[i])->data + (int)hdr_len),(unsigned long)((txb->fragments[i])->len - (unsigned int)hdr_len),1);
  
#line 10252 
  tfd->u.data.chunk_ptr[i] = (unsigned int)tmp_13;
  
#line 10258 
  tfd->u.data.chunk_len[i] = (unsigned short)((int)((unsigned short)(txb->fragments[i])->len) - (int)((unsigned short)hdr_len));
  
#line 10242 
  i += 1;
  ldv_56586: 
#line 10243 
  ;
  
#line 10242 
  if (tfd->u.data.num_chunks > (unsigned int)i) 
#line 10244 
                                                goto ldv_56585; else 
                                                                  
#line 10247 
                                                                  goto ldv_56587;
  ldv_56587: 
#line 10248 
  ;
  
#line 10262 
  if ((int)txb->nr_frags != i) {
    struct sk_buff *skb;
    int j;
    
#line 10264 
    u16 remaining_bytes = (unsigned short)0U;
    
#line 10267 
    j = i;
    
#line 10267 
    goto ldv_56592;
    ldv_56591: 
#line 10268 
    ;
    
#line 10268 
    remaining_bytes = (unsigned short)(((int)((unsigned short)(txb->fragments[j])->len) - (int)((unsigned short)hdr_len)) + (int)remaining_bytes);
    
#line 10267 
    j += 1;
    ldv_56592: 
#line 10268 
    ;
    
#line 10267 
    if ((int)txb->nr_frags > j) 
#line 10269 
                                goto ldv_56591; else 
#line 10272 
                                                     goto ldv_56593;
    ldv_56593: 
#line 10273 
    ;
    
#line 10270 
    printk("\001",(int)remaining_bytes);
    
#line 10272 
    skb = alloc_skb((unsigned int)remaining_bytes,32U);
    
#line 10273 
    if (skb != (struct sk_buff *)0) {
      dma_addr_t tmp_15;
      
#line 10274 
      tfd->u.data.chunk_len[i] = remaining_bytes;
      
#line 10275 
      j = i;
      
#line 10275 
      goto ldv_56596;
      ldv_56595: 
#line 10276 
      ;
      {
        unsigned char *tmp_14;
        
#line 10276 
        int size = (int)((txb->fragments[j])->len - (unsigned int)hdr_len);
        
#line 10278 
        printk("\001",j,size);
        
#line 10280 
        ;
        
#line 10280 
        ;
        
#line 10280 
        tmp_14 = skb_put(skb,(unsigned int)size);
        
#line 10280 
        memcpy((void *)tmp_14,(void const *)((txb->fragments[j])->data + (int)hdr_len),(unsigned long)size);
      }
      
#line 10275 
      j += 1;
      ldv_56596: 
#line 10276 
      ;
      
#line 10275 
      if ((int)txb->nr_frags > j) 
#line 10277 
                                  goto ldv_56595; else 
#line 10280 
                                                       goto ldv_56597;
      ldv_56597: 
#line 10281 
      ;
      
#line 10283 
      dev_kfree_skb_any(txb->fragments[i]);
      
#line 10284 
      txb->fragments[i] = skb;
      
#line 10286 
      tmp_15 = pci_map_single(priv->pci_dev,(void *)skb->data,(unsigned long)remaining_bytes,1);
      
#line 10285 
      tfd->u.data.chunk_ptr[i] = (unsigned int)tmp_15;
      
#line 10291 
      le32_add_cpu(& tfd->u.data.num_chunks,1U);
    }
    else ;
  }
  else ;
  
#line 10296 
  q->first_empty = ipw_queue_inc_wrap(q->first_empty,q->n_bd);
  
#line 10297 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_17;
    int tmp_16;
    
#line 10297 
    ;
    
#line 10297 
    ;
    
#line 10297 
    tmp_16 = preempt_count();
    
#line 10297 
    if (((unsigned long)tmp_16 & 2096896UL) != 0UL) 
#line 10297 
                                                    tmp_17 = 73; else 
                                                                   
#line 10297 
                                                                   tmp_17 = 85;
    
#line 10297 
    printk("\001",tmp_17,"ipw_tx_skb",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",10297,q->reg_w,(unsigned int)q->first_empty);
  }
  else ;
  
#line 10297 
  _ipw_write32(priv,(unsigned long)q->reg_w,(unsigned int)q->first_empty);
  
#line 10299 
  tmp_18 = ipw_tx_queue_space((struct clx2_queue const *)q);
  
#line 10299 
  ;
  
#line 10299 
  if (tmp_18 < q->high_mark) 
#line 10300 
                             netif_start_queue(priv->net_dev); else ;
  
#line 10302 
  __retres = 0;
  
#line 10302 
  goto return_label;
  drop: 
#line 10304 
  ;
  
#line 10305 
  if ((ipw_debug_level & 8192U) != 0U) {
    int tmp_20;
    int tmp_19;
    
#line 10305 
    tmp_19 = preempt_count();
    
#line 10305 
    if (((unsigned long)tmp_19 & 2096896UL) != 0UL) 
#line 10305 
                                                    tmp_20 = 73; else 
                                                                   
#line 10305 
                                                                   tmp_20 = 85;
    
#line 10305 
    printk("\001",tmp_20,"ipw_tx_skb");
  }
  else ;
  
#line 10306 
  libipw_txb_free(txb);
  
#line 10307 
  __retres = 0;
  return_label: 
#line 10307 
                return __retres;
}


#line 10310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_net_is_queue_full(struct net_device *dev, int pri)
{
  int __retres;
  int tmp_1;
  
#line 10312 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 10314 
  int tx_id = ipw_get_tx_queue_number(priv,(unsigned short)((int)((unsigned short)pri)));
  
#line 10315 
  struct clx2_tx_queue *txq = & priv->txq[tx_id];
  
#line 10320 
  tmp_1 = ipw_tx_queue_space((struct clx2_queue const *)(& txq->q));
  
#line 10320 
  ;
  
#line 10320 
  if (tmp_1 < txq->q.high_mark) {
    
#line 10321 
    __retres = 1;
    
#line 10321 
    goto return_label;
  }
  else ;
  
#line 10323 
  __retres = 0;
  return_label: 
#line 10323 
                return __retres;
}


#line 10327  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_handle_promiscuous_tx(struct ipw_priv *priv, struct libipw_txb *txb)
{
  struct libipw_rx_stats dummystats;
  struct ieee80211_hdr *hdr;
  u8 n;
  
#line 10333 
  u16 filter = (unsigned short)(priv->prom_priv)->filter;
  
#line 10334 
  int hdr_only = 0;
  
#line 10336 
  if (((int)filter & 16) != 0) 
#line 10337 
                               goto return_label; else ;
  
#line 10339 
  memset((void *)(& dummystats),0,32UL);
  
#line 10342 
  hdr = (struct ieee80211_hdr *)(txb->fragments[0])->data;
  
#line 10343 
  if (((int)hdr->frame_control & 12) == 0) {
    
#line 10344 
    if (((int)filter & 128) != 0) 
#line 10345 
                                  goto return_label; else ;
    
#line 10346 
    if (((int)filter & 2) != 0) 
#line 10347 
                                hdr_only = 1; else ;
  }
  else 
    
#line 10348 
    if (((int)hdr->frame_control & 12) == 4) {
      
#line 10349 
      if (((int)filter & 64) != 0) 
#line 10350 
                                   goto return_label; else ;
      
#line 10351 
      if (((int)filter & 1) != 0) 
#line 10352 
                                  hdr_only = 1; else ;
    }
    else 
      
#line 10353 
      if (((int)hdr->frame_control & 12) == 8) {
        
#line 10354 
        if (((int)filter & 256) != 0) 
#line 10355 
                                      goto return_label; else ;
        
#line 10356 
        if (((int)filter & 4) != 0) 
#line 10357 
                                    hdr_only = 1; else ;
      }
      else ;
  
#line 10360 
  n = (unsigned char)0U;
  
#line 10360 
  goto ldv_56620;
  ldv_56619: 
#line 10361 
  ;
  {
    struct sk_buff *dst;
    struct ieee80211_radiotap_header *rt_hdr;
    int len;
    unsigned char *tmp_0;
    unsigned char *tmp_5;
    int tmp_6;
    
#line 10361 
    struct sk_buff *src = txb->fragments[(int)n];
    
#line 10366 
    if (hdr_only != 0) {
      
#line 10367 
      hdr = (struct ieee80211_hdr *)src->data;
      
#line 10368 
      len = libipw_get_hdrlen((unsigned short)((int)hdr->frame_control));
    }
    else 
#line 10370 
         len = (int)src->len;
    
#line 10372 
    dst = alloc_skb((unsigned int)len + 12U,32U);
    
#line 10373 
    if (dst == (struct sk_buff *)0) 
#line 10374 
                                    goto ldv_56618; else ;
    
#line 10376 
    rt_hdr = (struct ieee80211_radiotap_header *)skb_put(dst,8U);
    
#line 10378 
    rt_hdr->it_version = (unsigned char)0U;
    
#line 10379 
    rt_hdr->it_pad = (unsigned char)0U;
    
#line 10380 
    rt_hdr->it_present = 0U;
    
#line 10381 
    rt_hdr->it_present |= 8U;
    
#line 10383 
    tmp_0 = skb_put(dst,2U);
    
#line 10383 
    if ((unsigned int)priv->channel <= 14U) {
      unsigned int tmp_1;
      
#line 10383 
      if ((unsigned int)priv->channel != 14U) 
#line 10383 
                                              tmp_1 = (unsigned int)((unsigned short)priv->channel) * 5U + 2407U; else 
                                                                    
#line 10383 
                                                                    tmp_1 = 2484U;
      
#line 10383 
      *((__le16 *)tmp_0) = (unsigned short)tmp_1;
    }
    else 
#line 10383 
         *((__le16 *)tmp_0) = (unsigned short)((unsigned int)((unsigned short)((int)priv->channel + 1000)) * 5U);
    
#line 10385 
    if ((unsigned int)priv->channel > 14U) {
      unsigned char *tmp_2;
      
#line 10386 
      tmp_2 = skb_put(dst,2U);
      
#line 10386 
      *((__le16 *)tmp_2) = (unsigned short)320U;
    }
    else 
      
#line 10389 
      if ((priv->ieee)->mode == 2) {
        unsigned char *tmp_3;
        
#line 10390 
        tmp_3 = skb_put(dst,2U);
        
#line 10390 
        *((__le16 *)tmp_3) = (unsigned short)160U;
      }
      else {
        unsigned char *tmp_4;
        
#line 10394 
        tmp_4 = skb_put(dst,2U);
        
#line 10394 
        *((__le16 *)tmp_4) = (unsigned short)192U;
      }
    
#line 10398 
    rt_hdr->it_len = (unsigned short)dst->len;
    
#line 10400 
    ;
    
#line 10400 
    tmp_5 = skb_put(dst,(unsigned int)len);
    
#line 10400 
    ;
    
#line 10400 
    skb_copy_from_linear_data((struct sk_buff const *)src,(void *)tmp_5,(unsigned int)len);
    
#line 10402 
    tmp_6 = libipw_rx((priv->prom_priv)->ieee,dst,& dummystats);
    
#line 10402 
    if (tmp_6 == 0) 
#line 10403 
                    dev_kfree_skb_any(dst); else ;
  }
  ldv_56618: 
#line 10405 
  ;
  
#line 10360 
  n = (u8)((int)n + 1);
  ldv_56620: 
#line 10361 
  ;
  
#line 10360 
  if ((int)txb->nr_frags > (int)n) 
#line 10362 
                                   goto ldv_56619; else 
#line 10365 
                                                        goto ldv_56621;
  ldv_56621: 
#line 10366 
  ;
  return_label: 
#line 10367 
                return;
}


#line 10408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static netdev_tx_t ipw_net_hard_start_xmit(struct libipw_txb *txb, struct net_device *dev, int pri)
{
  unsigned long flags;
  netdev_tx_t ret;
  int tmp_3;
  
#line 10411 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 10415 
  if ((ipw_debug_level & 8388608U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 10415 
    ;
    
#line 10415 
    tmp_0 = preempt_count();
    
#line 10415 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 10415 
                                                   tmp_1 = 73; else 
#line 10415 
                                                                    tmp_1 = 85;
    
#line 10415 
    printk("\001",tmp_1,"ipw_net_hard_start_xmit",(int)txb->payload_size);
  }
  else ;
  
#line 10416 
  ldv___ldv_spin_lock_283(& priv->lock);
  
#line 10419 
  if (rtap_iface != 0) {
    bool tmp_2;
    
#line 10419 
    tmp_2 = netif_running((struct net_device const *)priv->prom_net_dev);
    
#line 10419 
    if ((int)tmp_2 != 0) 
#line 10420 
                         ipw_handle_promiscuous_tx(priv,txb); else ;
  }
  else ;
  
#line 10423 
  tmp_3 = ipw_tx_skb(priv,txb,pri);
  
#line 10423 
  ret = (enum netdev_tx)tmp_3;
  
#line 10424 
  if (ret == (unsigned int)NETDEV_TX_OK) 
#line 10425 
                                         __ipw_led_activity_on(priv); else ;
  
#line 10426 
  ldv_spin_unlock_irqrestore_284(& priv->lock,flags);
  
#line 10428 
  return ret;
}


#line 10431  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_net_set_multicast_list(struct net_device *dev)
{
  
#line 10433 
  return;
}


#line 10436  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_net_set_mac_address(struct net_device *dev, void *p)
{
  int __retres;
  int tmp_1;
  bool tmp_0;
  
#line 10438 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 10439 
  struct sockaddr *addr = (struct sockaddr *)p;
  
#line 10441 
  tmp_0 = is_valid_ether_addr((u8 const *)(& addr->sa_data));
  
#line 10441 
  if (tmp_0) 
#line 10441 
             tmp_1 = 0; else 
#line 10441 
                             tmp_1 = 1;
  
#line 10441 
  if (tmp_1) {
    
#line 10442 
    __retres = -99;
    
#line 10442 
    goto return_label;
  }
  else ;
  
#line 10443 
  ldv_mutex_lock_285(& priv->mutex);
  
#line 10444 
  priv->config |= 8U;
  
#line 10445 
  memcpy((void *)(& priv->mac_addr),(void const *)(& addr->sa_data),6UL);
  
#line 10446 
  printk("\001",(char *)(& (priv->net_dev)->name),(u8 *)(& priv->mac_addr));
  
#line 10448 
  ldv_schedule_work_286(& priv->adapter_restart);
  
#line 10449 
  ldv_mutex_unlock_287(& priv->mutex);
  
#line 10450 
  __retres = 0;
  return_label: 
#line 10450 
                return __retres;
}


#line 10453  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_ethtool_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
{
  char vers[64U];
  char date[32U];
  u32 len;
  char const *tmp_0;
  
#line 10456 
  struct ipw_priv *p = libipw_priv(dev);
  
#line 10461 
  strlcpy((char *)(& info->driver),"ipw2200",32UL);
  
#line 10462 
  strlcpy((char *)(& info->version),"1.2.2",32UL);
  
#line 10464 
  len = 64U;
  
#line 10465 
  ipw_get_ordinal(p,61953U,(void *)(& vers),& len);
  
#line 10466 
  len = 32U;
  
#line 10467 
  ipw_get_ordinal(p,61954U,(void *)(& date),& len);
  
#line 10469 
  snprintf((char *)(& info->fw_version),32UL,"%s (%s)",(char *)(& vers),(char *)(& date));
  
#line 10471 
  tmp_0 = pci_name((struct pci_dev const *)p->pci_dev);
  
#line 10471 
  ;
  
#line 10471 
  strlcpy((char *)(& info->bus_info),tmp_0,32UL);
  
#line 10473 
  info->eedump_len = 256U;
  
#line 10474 
  return;
}


#line 10476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static u32 ipw_ethtool_get_link(struct net_device *dev)
{
  u32 __retres;
  
#line 10478 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 10479 
  __retres = (unsigned int)((priv->status & 128U) != 0U);
  
#line 10479 
  return __retres;
}


#line 10482  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_ethtool_get_eeprom_len(struct net_device *dev)
{
  int __retres;
  
#line 10484 
  __retres = 256;
  
#line 10484 
  return __retres;
}


#line 10487  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_ethtool_get_eeprom(struct net_device *dev, struct ethtool_eeprom *eeprom, u8 *bytes)
{
  int __retres;
  
#line 10490 
  struct ipw_priv *p = libipw_priv(dev);
  
#line 10492 
  if (eeprom->offset + eeprom->len > 256U) {
    
#line 10493 
    __retres = -22;
    
#line 10493 
    goto return_label;
  }
  else ;
  
#line 10494 
  ldv_mutex_lock_288(& p->mutex);
  
#line 10495 
  memcpy((void *)bytes,(void const *)(& p->eeprom[eeprom->offset]),(unsigned long)eeprom->len);
  
#line 10496 
  ldv_mutex_unlock_289(& p->mutex);
  
#line 10497 
  __retres = 0;
  return_label: 
#line 10497 
                return __retres;
}


#line 10500  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_ethtool_set_eeprom(struct net_device *dev, struct ethtool_eeprom *eeprom, u8 *bytes)
{
  int __retres;
  int i;
  
#line 10503 
  struct ipw_priv *p = libipw_priv(dev);
  
#line 10506 
  if (eeprom->offset + eeprom->len > 256U) {
    
#line 10507 
    __retres = -22;
    
#line 10507 
    goto return_label;
  }
  else ;
  
#line 10508 
  ldv_mutex_lock_290(& p->mutex);
  
#line 10509 
  memcpy((void *)(& p->eeprom[eeprom->offset]),(void const *)bytes,(unsigned long)eeprom->len);
  
#line 10510 
  i = 0;
  
#line 10510 
  goto ldv_56670;
  ldv_56669: 
#line 10511 
  ;
  
#line 10511 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 10511 
    ;
    
#line 10511 
    ;
    
#line 10511 
    tmp_0 = preempt_count();
    
#line 10511 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 10511 
                                                   tmp_1 = 73; else 
#line 10511 
                                                                    tmp_1 = 85;
    
#line 10511 
    printk("\001",tmp_1,"ipw_ethtool_set_eeprom",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",10511,(unsigned int)(i + 2592),(unsigned int)p->eeprom[i]);
  }
  else ;
  
#line 10511 
  _ipw_write8(p,(unsigned long)(i + 2592),(unsigned char)((int)p->eeprom[i]));
  
#line 10510 
  i += 1;
  ldv_56670: 
#line 10511 
  ;
  
#line 10510 
  if (i <= 255) 
#line 10512 
                goto ldv_56669; else 
#line 10515 
                                     goto ldv_56671;
  ldv_56671: 
#line 10516 
  ;
  
#line 10512 
  ldv_mutex_unlock_291(& p->mutex);
  
#line 10513 
  __retres = 0;
  return_label: 
#line 10513 
                return __retres;
}


#line 10516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct ethtool_ops const ipw_ethtool_ops = {.get_settings = (int (*)(struct net_device *, struct ethtool_cmd *))0, .set_settings = (int (*)(struct net_device *, struct ethtool_cmd *))0, .get_drvinfo = & ipw_ethtool_get_drvinfo, .get_regs_len = (int (*)(struct net_device *))0, .get_regs = (void (*)(struct net_device *, struct ethtool_regs *, void *))0, .get_wol = (void (*)(struct net_device *, struct ethtool_wolinfo *))0, .set_wol = (int (*)(struct net_device *, struct ethtool_wolinfo *))0, .get_msglevel = (u32 (*)(struct net_device *))0, .set_msglevel = (void (*)(struct net_device *, u32 ))0, .nway_reset = (int (*)(struct net_device *))0, .get_link = & ipw_ethtool_get_link, .get_eeprom_len = & ipw_ethtool_get_eeprom_len, .get_eeprom = & ipw_ethtool_get_eeprom, .set_eeprom = & ipw_ethtool_set_eeprom, .get_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .set_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .get_ringparam = (void (*)(struct net_device *, struct ethtool_ringparam *))0, .set_ringparam = (int (*)(struct net_device *, struct ethtool_ringparam *))0, .get_pauseparam = (void (*)(struct net_device *, struct ethtool_pauseparam *))0, .set_pauseparam = (int (*)(struct net_device *, struct ethtool_pauseparam *))0, .self_test = (void (*)(struct net_device *, struct ethtool_test *, u64 *))0, .get_strings = (void (*)(struct net_device *, u32 , u8 *))0, .set_phys_id = (int (*)(struct net_device *, enum ethtool_phys_id_state ))0, .get_ethtool_stats = (void (*)(struct net_device *, struct ethtool_stats *, u64 *))0, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = (int (*)(struct net_device *, int ))0, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = (int (*)(struct net_device *, struct ethtool_ts_info *))0, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 10524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static irqreturn_t ipw_isr(int irq, void *data)
{
  irqreturn_t __retres;
  u32 inta;
  u32 inta_mask;
  u32 tmp_2;
  u32 tmp_6;
  
#line 10526 
  struct ipw_priv *priv = (struct ipw_priv *)data;
  
#line 10529 
  if (priv == (struct ipw_priv *)0) {
    
#line 10530 
    __retres = IRQ_NONE;
    
#line 10530 
    goto return_label;
  }
  else ;
  
#line 10532 
  ldv_spin_lock_292(& priv->irq_lock);
  
#line 10534 
  if ((priv->status & 2U) == 0U) 
#line 10536 
                                 goto none; else ;
  
#line 10539 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 10539 
    tmp = preempt_count();
    
#line 10539 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 10539 
                                                 tmp_0 = 73; else 
#line 10539 
                                                                  tmp_0 = 85;
    
#line 10539 
    printk("\001",tmp_0,"ipw_isr",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",10539,8U);
  }
  else ;
  
#line 10539 
  tmp_2 = _ipw_read32(priv,8UL);
  
#line 10539 
  inta = tmp_2;
  
#line 10540 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_4;
    int tmp_3;
    
#line 10540 
    tmp_3 = preempt_count();
    
#line 10540 
    if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 10540 
                                                   tmp_4 = 73; else 
#line 10540 
                                                                    tmp_4 = 85;
    
#line 10540 
    printk("\001",tmp_4,"ipw_isr",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",10540,12U);
  }
  else ;
  
#line 10540 
  tmp_6 = _ipw_read32(priv,12UL);
  
#line 10540 
  inta_mask = tmp_6;
  
#line 10542 
  if (inta == 4294967295U) {
    
#line 10544 
    printk("\001");
    
#line 10545 
    goto none;
  }
  else ;
  
#line 10548 
  if (((inta_mask & inta) & 3308386354U) == 0U) 
#line 10550 
                                                goto none; else ;
  
#line 10554 
  __ipw_disable_interrupts(priv);
  
#line 10557 
  inta = (inta_mask & inta) & 3308386354U;
  
#line 10558 
  if ((ipw_debug_level & 134217728U) != 0U) {
    int tmp_8;
    int tmp_7;
    
#line 10558 
    ;
    
#line 10558 
    tmp_7 = preempt_count();
    
#line 10558 
    if (((unsigned long)tmp_7 & 2096896UL) != 0UL) 
#line 10558 
                                                   tmp_8 = 73; else 
#line 10558 
                                                                    tmp_8 = 85;
    
#line 10558 
    printk("\001",tmp_8,"ipw_isr",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c",10558,8U,inta);
  }
  else ;
  
#line 10558 
  _ipw_write32(priv,8UL,inta);
  
#line 10561 
  priv->isr_inta = inta;
  
#line 10563 
  ldv_tasklet_schedule_293(& priv->irq_tasklet);
  
#line 10565 
  ldv_spin_unlock_294(& priv->irq_lock);
  
#line 10567 
  __retres = IRQ_HANDLED;
  
#line 10567 
  goto return_label;
  none: 
#line 10568 
  ;
  
#line 10569 
  ldv_spin_unlock_295(& priv->irq_lock);
  
#line 10570 
  __retres = IRQ_NONE;
  return_label: 
#line 10570 
                return __retres;
}


#line 10573  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_rf_kill(void *adapter)
{
  unsigned long flags;
  int tmp_1;
  
#line 10575 
  struct ipw_priv *priv = (struct ipw_priv *)adapter;
  
#line 10578 
  ldv___ldv_spin_lock_296(& priv->lock);
  
#line 10580 
  tmp_1 = rf_kill_active(priv);
  
#line 10580 
  if (tmp_1 != 0) {
    
#line 10581 
    if ((ipw_debug_level & 131072U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 10581 
      tmp = preempt_count();
      
#line 10581 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 10581 
                                                   tmp_0 = 73; else 
#line 10581 
                                                                    tmp_0 = 85;
      
#line 10581 
      printk("\001",tmp_0,"ipw_rf_kill");
    }
    else ;
    
#line 10582 
    ldv_schedule_delayed_work_297(& priv->rf_kill,500UL);
    
#line 10583 
    goto exit_unlock;
  }
  else ;
  
#line 10588 
  if ((priv->status & 12U) == 0U) {
    
#line 10589 
    if ((ipw_debug_level & 131072U) != 0U) {
      int tmp_3;
      int tmp_2;
      
#line 10589 
      tmp_2 = preempt_count();
      
#line 10589 
      if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 10589 
                                                     tmp_3 = 73; else 
                                                                   
#line 10589 
                                                                   tmp_3 = 85;
      
#line 10589 
      printk("\001",tmp_3,"ipw_rf_kill");
    }
    else ;
    
#line 10593 
    ldv_schedule_work_298(& priv->adapter_restart);
  }
  else 
    
#line 10595 
    if ((ipw_debug_level & 131072U) != 0U) {
      int tmp_5;
      int tmp_4;
      
#line 10595 
      tmp_4 = preempt_count();
      
#line 10595 
      if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
#line 10595 
                                                     tmp_5 = 73; else 
                                                                   
#line 10595 
                                                                   tmp_5 = 85;
      
#line 10595 
      printk("\001",tmp_5,"ipw_rf_kill");
    }
    else ;
  exit_unlock: 
#line 10598 
  ;
  
#line 10599 
  ldv_spin_unlock_irqrestore_299(& priv->lock,flags);
  
#line 10600 
  return;
}


#line 10602  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_bg_rf_kill(struct work_struct *work)
{
  struct ipw_priv *tmp;
  {
    
#line 10605 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 10605 
    tmp = (struct ipw_priv *)__mptr + 18446744073709546272U;
  }
  
#line 10604 
  struct ipw_priv *priv = tmp;
  
#line 10606 
  ldv_mutex_lock_300(& priv->mutex);
  
#line 10607 
  ipw_rf_kill((void *)priv);
  
#line 10608 
  ldv_mutex_unlock_301(& priv->mutex);
  
#line 10609 
  return;
}


#line 10611  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_link_up(struct ipw_priv *priv)
{
  
#line 10613 
  priv->last_seq_num = (unsigned short)65535U;
  
#line 10614 
  priv->last_frag_num = (unsigned short)65535U;
  
#line 10615 
  priv->last_packet_time = 0UL;
  
#line 10617 
  netif_carrier_on(priv->net_dev);
  
#line 10619 
  cancel_delayed_work(& priv->request_scan);
  
#line 10620 
  cancel_delayed_work(& priv->request_direct_scan);
  
#line 10621 
  cancel_delayed_work(& priv->request_passive_scan);
  
#line 10622 
  cancel_delayed_work(& priv->scan_event);
  
#line 10623 
  ipw_reset_stats(priv);
  
#line 10625 
  priv->last_rate = ipw_get_current_rate(priv);
  
#line 10626 
  ipw_gather_stats(priv);
  
#line 10627 
  ipw_led_link_up(priv);
  
#line 10628 
  notify_wx_assoc_event(priv);
  
#line 10630 
  if ((priv->config & 1024U) != 0U) 
#line 10631 
                                    ldv_schedule_delayed_work_302(& priv->request_scan,250UL); else ;
  
#line 10632 
  return;
}


#line 10634  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_bg_link_up(struct work_struct *work)
{
  struct ipw_priv *tmp;
  {
    
#line 10637 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 10637 
    tmp = (struct ipw_priv *)__mptr + 18446744073709545280U;
  }
  
#line 10636 
  struct ipw_priv *priv = tmp;
  
#line 10638 
  ldv_mutex_lock_303(& priv->mutex);
  
#line 10639 
  ipw_link_up(priv);
  
#line 10640 
  ldv_mutex_unlock_304(& priv->mutex);
  
#line 10641 
  return;
}


#line 10643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_link_down(struct ipw_priv *priv)
{
  
#line 10645 
  ipw_led_link_down(priv);
  
#line 10646 
  netif_carrier_off(priv->net_dev);
  
#line 10647 
  notify_wx_assoc_event(priv);
  
#line 10650 
  cancel_delayed_work(& priv->request_scan);
  
#line 10651 
  cancel_delayed_work(& priv->request_direct_scan);
  
#line 10652 
  cancel_delayed_work(& priv->request_passive_scan);
  
#line 10653 
  cancel_delayed_work(& priv->adhoc_check);
  
#line 10654 
  cancel_delayed_work(& priv->gather_stats);
  
#line 10656 
  ipw_reset_stats(priv);
  
#line 10658 
  if ((priv->status & 2048U) == 0U) 
#line 10660 
                                    ldv_schedule_delayed_work_305(& priv->request_scan,0UL); else 
                                                                    
#line 10662 
                                                                    cancel_delayed_work(& priv->scan_event);
  
#line 10663 
  return;
}


#line 10665  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_bg_link_down(struct work_struct *work)
{
  struct ipw_priv *tmp;
  {
    
#line 10668 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 10668 
    tmp = (struct ipw_priv *)__mptr + 18446744073709545200U;
  }
  
#line 10667 
  struct ipw_priv *priv = tmp;
  
#line 10669 
  ldv_mutex_lock_306(& priv->mutex);
  
#line 10670 
  ipw_link_down(priv);
  
#line 10671 
  ldv_mutex_unlock_307(& priv->mutex);
  
#line 10672 
  return;
}


#line 10674  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_setup_deferred_work(struct ipw_priv *priv)
{
  
#line 10676 
  int ret = 0;
  {
    struct lock_class_key __key;
    
#line 10678 
    __init_waitqueue_head(& priv->wait_command_queue,"&priv->wait_command_queue",& __key);
  }
  {
    struct lock_class_key __key_0;
    
#line 10679 
    __init_waitqueue_head(& priv->wait_state,"&priv->wait_state",& __key_0);
  }
  {
    struct lock_class_key __key_1;
    
#line 10681 
    __init_work(& priv->adhoc_check.work,0);
    
#line 10681 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 10681 
    priv->adhoc_check.work.data = __constr_expr_37;
    
#line 10681 
    lockdep_init_map(& priv->adhoc_check.work.lockdep_map,"(&(&priv->adhoc_check)->work)",& __key_1,0);
    
#line 10681 
    INIT_LIST_HEAD(& priv->adhoc_check.work.entry);
    
#line 10681 
    priv->adhoc_check.work.func = & ipw_bg_adhoc_check;
  }
  {
    struct lock_class_key __key_2;
    
#line 10681 
    init_timer_key(& priv->adhoc_check.timer,2097152U,"(&(&priv->adhoc_check)->timer)",& __key_2);
  }
  
#line 10681 
  priv->adhoc_check.timer.function = & delayed_work_timer_fn;
  
#line 10681 
  priv->adhoc_check.timer.data = (unsigned long)(& priv->adhoc_check);
  {
    struct lock_class_key __key_3;
    
#line 10682 
    __init_work(& priv->associate,0);
    
#line 10682 
    atomic_long_t __constr_expr_38 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 10682 
    priv->associate.data = __constr_expr_38;
    
#line 10682 
    lockdep_init_map(& priv->associate.lockdep_map,"(&priv->associate)",& __key_3,0);
    
#line 10682 
    INIT_LIST_HEAD(& priv->associate.entry);
    
#line 10682 
    priv->associate.func = & ipw_bg_associate;
  }
  {
    struct lock_class_key __key_4;
    
#line 10683 
    __init_work(& priv->disassociate,0);
    
#line 10683 
    atomic_long_t __constr_expr_39 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 10683 
    priv->disassociate.data = __constr_expr_39;
    
#line 10683 
    lockdep_init_map(& priv->disassociate.lockdep_map,"(&priv->disassociate)",& __key_4,0);
    
#line 10683 
    INIT_LIST_HEAD(& priv->disassociate.entry);
    
#line 10683 
    priv->disassociate.func = & ipw_bg_disassociate;
  }
  {
    struct lock_class_key __key_5;
    
#line 10684 
    __init_work(& priv->system_config,0);
    
#line 10684 
    atomic_long_t __constr_expr_40 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 10684 
    priv->system_config.data = __constr_expr_40;
    
#line 10684 
    lockdep_init_map(& priv->system_config.lockdep_map,"(&priv->system_config)",& __key_5,0);
    
#line 10684 
    INIT_LIST_HEAD(& priv->system_config.entry);
    
#line 10684 
    priv->system_config.func = & ipw_system_config;
  }
  {
    struct lock_class_key __key_6;
    
#line 10685 
    __init_work(& priv->rx_replenish,0);
    
#line 10685 
    atomic_long_t __constr_expr_41 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 10685 
    priv->rx_replenish.data = __constr_expr_41;
    
#line 10685 
    lockdep_init_map(& priv->rx_replenish.lockdep_map,"(&priv->rx_replenish)",& __key_6,0);
    
#line 10685 
    INIT_LIST_HEAD(& priv->rx_replenish.entry);
    
#line 10685 
    priv->rx_replenish.func = & ipw_bg_rx_queue_replenish;
  }
  {
    struct lock_class_key __key_7;
    
#line 10686 
    __init_work(& priv->adapter_restart,0);
    
#line 10686 
    atomic_long_t __constr_expr_42 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 10686 
    priv->adapter_restart.data = __constr_expr_42;
    
#line 10686 
    lockdep_init_map(& priv->adapter_restart.lockdep_map,"(&priv->adapter_restart)",& __key_7,0);
    
#line 10686 
    INIT_LIST_HEAD(& priv->adapter_restart.entry);
    
#line 10686 
    priv->adapter_restart.func = & ipw_bg_adapter_restart;
  }
  {
    struct lock_class_key __key_8;
    
#line 10687 
    __init_work(& priv->rf_kill.work,0);
    
#line 10687 
    atomic_long_t __constr_expr_43 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 10687 
    priv->rf_kill.work.data = __constr_expr_43;
    
#line 10687 
    lockdep_init_map(& priv->rf_kill.work.lockdep_map,"(&(&priv->rf_kill)->work)",& __key_8,0);
    
#line 10687 
    INIT_LIST_HEAD(& priv->rf_kill.work.entry);
    
#line 10687 
    priv->rf_kill.work.func = & ipw_bg_rf_kill;
  }
  {
    struct lock_class_key __key_9;
    
#line 10687 
    init_timer_key(& priv->rf_kill.timer,2097152U,"(&(&priv->rf_kill)->timer)",& __key_9);
  }
  
#line 10687 
  priv->rf_kill.timer.function = & delayed_work_timer_fn;
  
#line 10687 
  priv->rf_kill.timer.data = (unsigned long)(& priv->rf_kill);
  {
    struct lock_class_key __key_10;
    
#line 10688 
    __init_work(& priv->up,0);
    
#line 10688 
    atomic_long_t __constr_expr_44 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 10688 
    priv->up.data = __constr_expr_44;
    
#line 10688 
    lockdep_init_map(& priv->up.lockdep_map,"(&priv->up)",& __key_10,0);
    
#line 10688 
    INIT_LIST_HEAD(& priv->up.entry);
    
#line 10688 
    priv->up.func = & ipw_bg_up;
  }
  {
    struct lock_class_key __key_11;
    
#line 10689 
    __init_work(& priv->down,0);
    
#line 10689 
    atomic_long_t __constr_expr_45 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 10689 
    priv->down.data = __constr_expr_45;
    
#line 10689 
    lockdep_init_map(& priv->down.lockdep_map,"(&priv->down)",& __key_11,0);
    
#line 10689 
    INIT_LIST_HEAD(& priv->down.entry);
    
#line 10689 
    priv->down.func = & ipw_bg_down;
  }
  {
    struct lock_class_key __key_12;
    
#line 10690 
    __init_work(& priv->request_scan.work,0);
    
#line 10690 
    atomic_long_t __constr_expr_46 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 10690 
    priv->request_scan.work.data = __constr_expr_46;
    
#line 10690 
    lockdep_init_map(& priv->request_scan.work.lockdep_map,"(&(&priv->request_scan)->work)",& __key_12,0);
    
#line 10690 
    INIT_LIST_HEAD(& priv->request_scan.work.entry);
    
#line 10690 
    priv->request_scan.work.func = & ipw_request_scan;
  }
  {
    struct lock_class_key __key_13;
    
#line 10690 
    init_timer_key(& priv->request_scan.timer,2097152U,"(&(&priv->request_scan)->timer)",& __key_13);
  }
  
#line 10690 
  priv->request_scan.timer.function = & delayed_work_timer_fn;
  
#line 10690 
  priv->request_scan.timer.data = (unsigned long)(& priv->request_scan);
  {
    struct lock_class_key __key_14;
    
#line 10691 
    __init_work(& priv->request_direct_scan.work,0);
    
#line 10691 
    atomic_long_t __constr_expr_47 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 10691 
    priv->request_direct_scan.work.data = __constr_expr_47;
    
#line 10691 
    lockdep_init_map(& priv->request_direct_scan.work.lockdep_map,"(&(&priv->request_direct_scan)->work)",& __key_14,0);
    
#line 10691 
    INIT_LIST_HEAD(& priv->request_direct_scan.work.entry);
    
#line 10691 
    priv->request_direct_scan.work.func = & ipw_request_direct_scan;
  }
  {
    struct lock_class_key __key_15;
    
#line 10691 
    init_timer_key(& priv->request_direct_scan.timer,2097152U,"(&(&priv->request_direct_scan)->timer)",& __key_15);
  }
  
#line 10691 
  priv->request_direct_scan.timer.function = & delayed_work_timer_fn;
  
#line 10691 
  priv->request_direct_scan.timer.data = (unsigned long)(& priv->request_direct_scan);
  {
    struct lock_class_key __key_16;
    
#line 10692 
    __init_work(& priv->request_passive_scan.work,0);
    
#line 10692 
    atomic_long_t __constr_expr_48 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 10692 
    priv->request_passive_scan.work.data = __constr_expr_48;
    
#line 10692 
    lockdep_init_map(& priv->request_passive_scan.work.lockdep_map,"(&(&priv->request_passive_scan)->work)",& __key_16,0);
    
#line 10692 
    INIT_LIST_HEAD(& priv->request_passive_scan.work.entry);
    
#line 10692 
    priv->request_passive_scan.work.func = & ipw_request_passive_scan;
  }
  {
    struct lock_class_key __key_17;
    
#line 10692 
    init_timer_key(& priv->request_passive_scan.timer,2097152U,"(&(&priv->request_passive_scan)->timer)",& __key_17);
  }
  
#line 10692 
  priv->request_passive_scan.timer.function = & delayed_work_timer_fn;
  
#line 10692 
  priv->request_passive_scan.timer.data = (unsigned long)(& priv->request_passive_scan);
  {
    struct lock_class_key __key_18;
    
#line 10693 
    __init_work(& priv->scan_event.work,0);
    
#line 10693 
    atomic_long_t __constr_expr_49 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 10693 
    priv->scan_event.work.data = __constr_expr_49;
    
#line 10693 
    lockdep_init_map(& priv->scan_event.work.lockdep_map,"(&(&priv->scan_event)->work)",& __key_18,0);
    
#line 10693 
    INIT_LIST_HEAD(& priv->scan_event.work.entry);
    
#line 10693 
    priv->scan_event.work.func = & ipw_scan_event;
  }
  {
    struct lock_class_key __key_19;
    
#line 10693 
    init_timer_key(& priv->scan_event.timer,2097152U,"(&(&priv->scan_event)->timer)",& __key_19);
  }
  
#line 10693 
  priv->scan_event.timer.function = & delayed_work_timer_fn;
  
#line 10693 
  priv->scan_event.timer.data = (unsigned long)(& priv->scan_event);
  {
    struct lock_class_key __key_20;
    
#line 10694 
    __init_work(& priv->gather_stats.work,0);
    
#line 10694 
    atomic_long_t __constr_expr_50 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 10694 
    priv->gather_stats.work.data = __constr_expr_50;
    
#line 10694 
    lockdep_init_map(& priv->gather_stats.work.lockdep_map,"(&(&priv->gather_stats)->work)",& __key_20,0);
    
#line 10694 
    INIT_LIST_HEAD(& priv->gather_stats.work.entry);
    
#line 10694 
    priv->gather_stats.work.func = & ipw_bg_gather_stats;
  }
  {
    struct lock_class_key __key_21;
    
#line 10694 
    init_timer_key(& priv->gather_stats.timer,2097152U,"(&(&priv->gather_stats)->timer)",& __key_21);
  }
  
#line 10694 
  priv->gather_stats.timer.function = & delayed_work_timer_fn;
  
#line 10694 
  priv->gather_stats.timer.data = (unsigned long)(& priv->gather_stats);
  {
    struct lock_class_key __key_22;
    
#line 10695 
    __init_work(& priv->abort_scan,0);
    
#line 10695 
    atomic_long_t __constr_expr_51 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 10695 
    priv->abort_scan.data = __constr_expr_51;
    
#line 10695 
    lockdep_init_map(& priv->abort_scan.lockdep_map,"(&priv->abort_scan)",& __key_22,0);
    
#line 10695 
    INIT_LIST_HEAD(& priv->abort_scan.entry);
    
#line 10695 
    priv->abort_scan.func = & ipw_bg_abort_scan;
  }
  {
    struct lock_class_key __key_23;
    
#line 10696 
    __init_work(& priv->roam,0);
    
#line 10696 
    atomic_long_t __constr_expr_52 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 10696 
    priv->roam.data = __constr_expr_52;
    
#line 10696 
    lockdep_init_map(& priv->roam.lockdep_map,"(&priv->roam)",& __key_23,0);
    
#line 10696 
    INIT_LIST_HEAD(& priv->roam.entry);
    
#line 10696 
    priv->roam.func = & ipw_bg_roam;
  }
  {
    struct lock_class_key __key_24;
    
#line 10697 
    __init_work(& priv->scan_check.work,0);
    
#line 10697 
    atomic_long_t __constr_expr_53 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 10697 
    priv->scan_check.work.data = __constr_expr_53;
    
#line 10697 
    lockdep_init_map(& priv->scan_check.work.lockdep_map,"(&(&priv->scan_check)->work)",& __key_24,0);
    
#line 10697 
    INIT_LIST_HEAD(& priv->scan_check.work.entry);
    
#line 10697 
    priv->scan_check.work.func = & ipw_bg_scan_check;
  }
  {
    struct lock_class_key __key_25;
    
#line 10697 
    init_timer_key(& priv->scan_check.timer,2097152U,"(&(&priv->scan_check)->timer)",& __key_25);
  }
  
#line 10697 
  priv->scan_check.timer.function = & delayed_work_timer_fn;
  
#line 10697 
  priv->scan_check.timer.data = (unsigned long)(& priv->scan_check);
  {
    struct lock_class_key __key_26;
    
#line 10698 
    __init_work(& priv->link_up,0);
    
#line 10698 
    atomic_long_t __constr_expr_54 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 10698 
    priv->link_up.data = __constr_expr_54;
    
#line 10698 
    lockdep_init_map(& priv->link_up.lockdep_map,"(&priv->link_up)",& __key_26,0);
    
#line 10698 
    INIT_LIST_HEAD(& priv->link_up.entry);
    
#line 10698 
    priv->link_up.func = & ipw_bg_link_up;
  }
  {
    struct lock_class_key __key_27;
    
#line 10699 
    __init_work(& priv->link_down,0);
    
#line 10699 
    atomic_long_t __constr_expr_55 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 10699 
    priv->link_down.data = __constr_expr_55;
    
#line 10699 
    lockdep_init_map(& priv->link_down.lockdep_map,"(&priv->link_down)",& __key_27,0);
    
#line 10699 
    INIT_LIST_HEAD(& priv->link_down.entry);
    
#line 10699 
    priv->link_down.func = & ipw_bg_link_down;
  }
  {
    struct lock_class_key __key_28;
    
#line 10700 
    __init_work(& priv->led_link_on.work,0);
    
#line 10700 
    atomic_long_t __constr_expr_56 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 10700 
    priv->led_link_on.work.data = __constr_expr_56;
    
#line 10700 
    lockdep_init_map(& priv->led_link_on.work.lockdep_map,"(&(&priv->led_link_on)->work)",& __key_28,0);
    
#line 10700 
    INIT_LIST_HEAD(& priv->led_link_on.work.entry);
    
#line 10700 
    priv->led_link_on.work.func = & ipw_bg_led_link_on;
  }
  {
    struct lock_class_key __key_29;
    
#line 10700 
    init_timer_key(& priv->led_link_on.timer,2097152U,"(&(&priv->led_link_on)->timer)",& __key_29);
  }
  
#line 10700 
  priv->led_link_on.timer.function = & delayed_work_timer_fn;
  
#line 10700 
  priv->led_link_on.timer.data = (unsigned long)(& priv->led_link_on);
  {
    struct lock_class_key __key_30;
    
#line 10701 
    __init_work(& priv->led_link_off.work,0);
    
#line 10701 
    atomic_long_t __constr_expr_57 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 10701 
    priv->led_link_off.work.data = __constr_expr_57;
    
#line 10701 
    lockdep_init_map(& priv->led_link_off.work.lockdep_map,"(&(&priv->led_link_off)->work)",& __key_30,0);
    
#line 10701 
    INIT_LIST_HEAD(& priv->led_link_off.work.entry);
    
#line 10701 
    priv->led_link_off.work.func = & ipw_bg_led_link_off;
  }
  {
    struct lock_class_key __key_31;
    
#line 10701 
    init_timer_key(& priv->led_link_off.timer,2097152U,"(&(&priv->led_link_off)->timer)",& __key_31);
  }
  
#line 10701 
  priv->led_link_off.timer.function = & delayed_work_timer_fn;
  
#line 10701 
  priv->led_link_off.timer.data = (unsigned long)(& priv->led_link_off);
  {
    struct lock_class_key __key_32;
    
#line 10702 
    __init_work(& priv->led_act_off.work,0);
    
#line 10702 
    atomic_long_t __constr_expr_58 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 10702 
    priv->led_act_off.work.data = __constr_expr_58;
    
#line 10702 
    lockdep_init_map(& priv->led_act_off.work.lockdep_map,"(&(&priv->led_act_off)->work)",& __key_32,0);
    
#line 10702 
    INIT_LIST_HEAD(& priv->led_act_off.work.entry);
    
#line 10702 
    priv->led_act_off.work.func = & ipw_bg_led_activity_off;
  }
  {
    struct lock_class_key __key_33;
    
#line 10702 
    init_timer_key(& priv->led_act_off.timer,2097152U,"(&(&priv->led_act_off)->timer)",& __key_33);
  }
  
#line 10702 
  priv->led_act_off.timer.function = & delayed_work_timer_fn;
  
#line 10702 
  priv->led_act_off.timer.data = (unsigned long)(& priv->led_act_off);
  {
    struct lock_class_key __key_34;
    
#line 10703 
    __init_work(& priv->merge_networks,0);
    
#line 10703 
    atomic_long_t __constr_expr_59 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 10703 
    priv->merge_networks.data = __constr_expr_59;
    
#line 10703 
    lockdep_init_map(& priv->merge_networks.lockdep_map,"(&priv->merge_networks)",& __key_34,0);
    
#line 10703 
    INIT_LIST_HEAD(& priv->merge_networks.entry);
    
#line 10703 
    priv->merge_networks.func = & ipw_merge_adhoc_network;
  }
  {
    struct lock_class_key __key_35;
    
#line 10706 
    __init_work(& priv->qos_activate,0);
    
#line 10706 
    atomic_long_t __constr_expr_60 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 10706 
    priv->qos_activate.data = __constr_expr_60;
    
#line 10706 
    lockdep_init_map(& priv->qos_activate.lockdep_map,"(&priv->qos_activate)",& __key_35,0);
    
#line 10706 
    INIT_LIST_HEAD(& priv->qos_activate.entry);
    
#line 10706 
    priv->qos_activate.func = & ipw_bg_qos_activate;
  }
  
#line 10709 
  ldv_tasklet_init_308(& priv->irq_tasklet,(void (*)(unsigned long ))(& ipw_irq_tasklet),(unsigned long)priv);
  
#line 10712 
  return ret;
}


#line 10715  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void shim__set_security(struct net_device *dev, struct libipw_security *sec)
{
  int i;
  
#line 10718 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 10720 
  i = 0;
  
#line 10720 
  goto ldv_56788;
  ldv_56787: 
#line 10721 
  ;
  
#line 10721 
  if ((((int)sec->flags >> i) & 1) != 0) {
    
#line 10722 
    (priv->ieee)->sec.encode_alg[i] = sec->encode_alg[i];
    
#line 10723 
    (priv->ieee)->sec.key_sizes[i] = sec->key_sizes[i];
    
#line 10724 
    if ((unsigned int)sec->key_sizes[i] == 0U) 
#line 10725 
                                               (priv->ieee)->sec.flags = (unsigned short)((int)(priv->ieee)->sec.flags & ~ (1 << i));
    else {
      
#line 10727 
      memcpy((void *)(& (priv->ieee)->sec.keys[i]),(void const *)(& sec->keys[i]),(unsigned long)sec->key_sizes[i]);
      
#line 10729 
      (priv->ieee)->sec.flags = (unsigned short)((int)(priv->ieee)->sec.flags | (1 << i));
    }
    
#line 10731 
    priv->status |= 2147483648U;
  }
  else 
    
#line 10732 
    if ((unsigned int)sec->level != 1U) 
#line 10733 
                                        (priv->ieee)->sec.flags = (unsigned short)((int)(priv->ieee)->sec.flags & ~ (1 << i)); else ;
  
#line 10720 
  i += 1;
  ldv_56788: 
#line 10721 
  ;
  
#line 10720 
  if (i <= 3) 
#line 10722 
              goto ldv_56787; else 
#line 10725 
                                   goto ldv_56789;
  ldv_56789: 
#line 10726 
  ;
  
#line 10736 
  if (((int)sec->flags & 16) != 0) {
    
#line 10738 
    (priv->ieee)->sec.active_key = sec->active_key;
    
#line 10739 
    (priv->ieee)->sec.flags = (unsigned short)((unsigned int)(priv->ieee)->sec.flags | 16U);
    
#line 10742 
    priv->status |= 2147483648U;
  }
  else 
#line 10744 
       (priv->ieee)->sec.flags = (unsigned short)((unsigned int)(priv->ieee)->sec.flags & 65519U);
  
#line 10746 
  if (((int)sec->flags & 32) != 0 && (int)(priv->ieee)->sec.auth_mode != (int)sec->auth_mode) {
    
#line 10748 
    (priv->ieee)->sec.auth_mode = sec->auth_mode;
    
#line 10749 
    (priv->ieee)->sec.flags = (unsigned short)((unsigned int)(priv->ieee)->sec.flags | 32U);
    
#line 10750 
    if ((unsigned int)sec->auth_mode == 1U) 
#line 10751 
                                            priv->capability |= 1U; else 
                                                                    
#line 10753 
                                                                    priv->capability &= 4294967294U;
    
#line 10754 
    priv->status |= 2147483648U;
  }
  else ;
  
#line 10757 
  if (((int)sec->flags & 256) != 0 && (int)(priv->ieee)->sec.enabled != (int)sec->enabled) {
    
#line 10758 
    (priv->ieee)->sec.flags = (unsigned short)((unsigned int)(priv->ieee)->sec.flags | 256U);
    
#line 10759 
    (priv->ieee)->sec.enabled = sec->enabled;
    
#line 10760 
    priv->status |= 2147483648U;
    
#line 10761 
    if ((unsigned int)*((unsigned char *)sec + 0UL) != 0U) 
#line 10762 
                                                           priv->capability |= 2U; else 
                                                                    
#line 10764 
                                                                    priv->capability &= 4294967293U;
  }
  else ;
  
#line 10767 
  if (((int)sec->flags & 512) != 0) 
#line 10768 
                                    (priv->ieee)->sec.encrypt = sec->encrypt; else ;
  
#line 10770 
  if (((int)sec->flags & 128) != 0 && (int)(priv->ieee)->sec.level != (int)sec->level) {
    
#line 10771 
    (priv->ieee)->sec.level = sec->level;
    
#line 10772 
    (priv->ieee)->sec.flags = (unsigned short)((unsigned int)(priv->ieee)->sec.flags | 128U);
    
#line 10773 
    priv->status |= 2147483648U;
  }
  else ;
  
#line 10776 
  if ((priv->ieee)->host_encrypt == 0 && ((int)sec->flags & 512) != 0) 
    
#line 10777 
    ipw_set_hwcrypto_keys(priv); else ;
  
#line 10778 
  return;
}


#line 10795  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int init_supported_rates(struct ipw_priv *priv, struct ipw_supported_rates *rates)
{
  int __retres;
  
#line 10800 
  memset((void *)rates,0,16UL);
  
#line 10802 
  switch ((priv->ieee)->freq_band) {
    case 2: 
#line 10803 
    ;
    
#line 10804 
    rates->ieee_mode = (unsigned char)0U;
    
#line 10805 
    rates->purpose = (unsigned char)1U;
    
#line 10806 
    ipw_add_ofdm_scan_rates(rates,(unsigned char)1,4080U);
    
#line 10808 
    goto ldv_56795;
    default: 
#line 10810 
    ;
    
#line 10811 
    rates->ieee_mode = (unsigned char)2U;
    
#line 10812 
    rates->purpose = (unsigned char)1U;
    
#line 10813 
    ipw_add_cck_scan_rates(rates,(unsigned char)1,15U);
    
#line 10815 
    if (((priv->ieee)->modulation & 2) != 0) 
#line 10816 
                                             ipw_add_ofdm_scan_rates(rates,(unsigned char)1,4080U); else ;
    
#line 10819 
    goto ldv_56795;
  }
  ldv_56795: 
#line 10822 
  ;
  
#line 10822 
  __retres = 0;
  
#line 10822 
  return __retres;
}


#line 10825  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_config(struct ipw_priv *priv)
{
  int __retres;
  int tmp;
  int tmp_0;
  int tmp_2;
  int tmp_3;
  int tmp_7;
  int tmp_8;
  
#line 10830 
  tmp = ipw_set_tx_power(priv);
  
#line 10830 
  if (tmp != 0) 
#line 10831 
                goto error; else ;
  
#line 10834 
  tmp_0 = ipw_send_adapter_address(priv,(priv->net_dev)->dev_addr);
  
#line 10834 
  if (tmp_0 != 0) 
#line 10835 
                  goto error; else ;
  
#line 10838 
  init_sys_config(& priv->sys_config);
  
#line 10842 
  if (bt_coexist != 0) {
    
#line 10843 
    unsigned char bt_caps = priv->eeprom[75UL];
    
#line 10845 
    if (((int)bt_caps & 1) != 0) 
#line 10847 
                                 priv->sys_config.bt_coexistence = (unsigned char)((unsigned int)priv->sys_config.bt_coexistence | 1U); else ;
    
#line 10848 
    if (((int)bt_caps & 4) != 0) 
#line 10850 
                                 priv->sys_config.bt_coexistence = (unsigned char)((unsigned int)priv->sys_config.bt_coexistence | 16U); else ;
  }
  else ;
  
#line 10854 
  if (priv->prom_net_dev != (struct net_device *)0) {
    bool tmp_1;
    
#line 10854 
    tmp_1 = netif_running((struct net_device const *)priv->prom_net_dev);
    
#line 10854 
    if ((int)tmp_1 != 0) {
      
#line 10855 
      priv->sys_config.accept_all_data_frames = (unsigned char)1U;
      
#line 10856 
      priv->sys_config.accept_non_directed_frames = (unsigned char)1U;
      
#line 10857 
      priv->sys_config.accept_all_mgmt_bcpr = (unsigned char)1U;
      
#line 10858 
      priv->sys_config.accept_all_mgmt_frames = (unsigned char)1U;
    }
    else ;
  }
  else ;
  
#line 10862 
  if ((priv->ieee)->iw_mode == 1) 
#line 10863 
                                  priv->sys_config.answer_broadcast_ssid_probe = (unsigned char)1U; else 
                                                                    
#line 10865 
                                                                    priv->sys_config.answer_broadcast_ssid_probe = (unsigned char)0U;
  
#line 10867 
  tmp_2 = ipw_send_system_config(priv);
  
#line 10867 
  if (tmp_2 != 0) 
#line 10868 
                  goto error; else ;
  
#line 10870 
  init_supported_rates(priv,& priv->rates);
  
#line 10871 
  tmp_3 = ipw_send_supported_rates(priv,& priv->rates);
  
#line 10871 
  if (tmp_3 != 0) 
#line 10872 
                  goto error; else ;
  
#line 10875 
  if ((unsigned int)priv->rts_threshold != 0U) {
    int tmp_4;
    
#line 10876 
    tmp_4 = ipw_send_rts_threshold(priv,(unsigned short)((int)priv->rts_threshold));
    
#line 10876 
    if (tmp_4 != 0) 
#line 10877 
                    goto error; else ;
  }
  else ;
  
#line 10880 
  if (ipw_debug_level < (u32)0) {
    int tmp_6;
    int tmp_5;
    
#line 10880 
    tmp_5 = preempt_count();
    
#line 10880 
    if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 10880 
                                                   tmp_6 = 73; else 
#line 10880 
                                                                    tmp_6 = 85;
    
#line 10880 
    printk("\001",tmp_6,"ipw_config");
  }
  else ;
  
#line 10881 
  ipw_qos_activate(priv,(struct libipw_qos_data *)0);
  
#line 10884 
  tmp_7 = ipw_set_random_seed(priv);
  
#line 10884 
  if (tmp_7 != 0) 
#line 10885 
                  goto error; else ;
  
#line 10888 
  tmp_8 = ipw_send_host_complete(priv);
  
#line 10888 
  if (tmp_8 != 0) 
#line 10889 
                  goto error; else ;
  
#line 10891 
  priv->status |= 32U;
  
#line 10893 
  ipw_led_init(priv);
  
#line 10894 
  ipw_led_radio_on(priv);
  
#line 10895 
  priv->notif_missed_beacons = 0U;
  
#line 10898 
  if (((priv->capability & 2U) != 0U && (unsigned int)(priv->ieee)->sec.level == 1U) && ((priv->ieee)->host_encrypt == 0 && (priv->ieee)->host_decrypt == 0)) 
    
#line 10901 
    ipw_set_hwcrypto_keys(priv); else ;
  
#line 10903 
  __retres = 0;
  
#line 10903 
  goto return_label;
  error: 
#line 10905 
  ;
  
#line 10906 
  __retres = -5;
  return_label: 
#line 10906 
                return __retres;
}


#line 10923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct libipw_geo const ipw_geos[14U] = {{.name = {(unsigned char)'-', (unsigned char)'-', (unsigned char)'-', (unsigned char)'\000'}, .bg_channels = (unsigned char)11U, .a_channels = (unsigned char)0, .bg = {{.freq = 2412U, .channel = (unsigned char)1U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2417U, .channel = (unsigned char)2U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2422U, .channel = (unsigned char)3U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2427U, .channel = (unsigned char)4U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2432U, .channel = (unsigned char)5U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2437U, .channel = (unsigned char)6U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2442U, .channel = (unsigned char)7U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2447U, .channel = (unsigned char)8U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2452U, .channel = (unsigned char)9U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2457U, .channel = (unsigned char)10U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2462U, .channel = (unsigned char)11U, .flags = (unsigned char)0, .max_power = (unsigned char)0}}, .a = {{.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}}}, {.name = {(unsigned char)'Z', (unsigned char)'Z', (unsigned char)'F', (unsigned char)'\000'}, .bg_channels = (unsigned char)11U, .a_channels = (unsigned char)8U, .bg = {{.freq = 2412U, .channel = (unsigned char)1U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2417U, .channel = (unsigned char)2U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2422U, .channel = (unsigned char)3U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2427U, .channel = (unsigned char)4U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2432U, .channel = (unsigned char)5U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2437U, .channel = (unsigned char)6U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2442U, .channel = (unsigned char)7U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2447U, .channel = (unsigned char)8U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2452U, .channel = (unsigned char)9U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2457U, .channel = (unsigned char)10U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2462U, .channel = (unsigned char)11U, .flags = (unsigned char)0, .max_power = (unsigned char)0}}, .a = {{.freq = 5180U, .channel = (unsigned char)36U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5200U, .channel = (unsigned char)40U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5220U, .channel = (unsigned char)44U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5240U, .channel = (unsigned char)48U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5260U, .channel = (unsigned char)52U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5280U, .channel = (unsigned char)56U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5300U, .channel = (unsigned char)60U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5320U, .channel = (unsigned char)64U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}}}, {.name = {(unsigned char)'Z', (unsigned char)'Z', (unsigned char)'D', (unsigned char)'\000'}, .bg_channels = (unsigned char)13U, .a_channels = (unsigned char)0, .bg = {{.freq = 2412U, .channel = (unsigned char)1U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2417U, .channel = (unsigned char)2U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2422U, .channel = (unsigned char)3U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2427U, .channel = (unsigned char)4U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2432U, .channel = (unsigned char)5U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2437U, .channel = (unsigned char)6U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2442U, .channel = (unsigned char)7U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2447U, .channel = (unsigned char)8U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2452U, .channel = (unsigned char)9U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2457U, .channel = (unsigned char)10U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2462U, .channel = (unsigned char)11U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2467U, .channel = (unsigned char)12U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2472U, .channel = (unsigned char)13U, .flags = (unsigned char)0, .max_power = (unsigned char)0}}, .a = {{.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}}}, {.name = {(unsigned char)'Z', (unsigned char)'Z', (unsigned char)'A', (unsigned char)'\000'}, .bg_channels = (unsigned char)11U, .a_channels = (unsigned char)13U, .bg = {{.freq = 2412U, .channel = (unsigned char)1U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2417U, .channel = (unsigned char)2U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2422U, .channel = (unsigned char)3U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2427U, .channel = (unsigned char)4U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2432U, .channel = (unsigned char)5U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2437U, .channel = (unsigned char)6U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2442U, .channel = (unsigned char)7U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2447U, .channel = (unsigned char)8U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2452U, .channel = (unsigned char)9U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2457U, .channel = (unsigned char)10U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2462U, .channel = (unsigned char)11U, .flags = (unsigned char)0, .max_power = (unsigned char)0}}, .a = {{.freq = 5180U, .channel = (unsigned char)36U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5200U, .channel = (unsigned char)40U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5220U, .channel = (unsigned char)44U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5240U, .channel = (unsigned char)48U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5260U, .channel = (unsigned char)52U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5280U, .channel = (unsigned char)56U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5300U, .channel = (unsigned char)60U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5320U, .channel = (unsigned char)64U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5745U, .channel = (unsigned char)149U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5765U, .channel = (unsigned char)153U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5785U, .channel = (unsigned char)157U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5805U, .channel = (unsigned char)161U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5825U, .channel = (unsigned char)165U, .flags = (unsigned char)0, .max_power = (unsigned char)0}}}, {.name = {(unsigned char)'Z', (unsigned char)'Z', (unsigned char)'B', (unsigned char)'\000'}, .bg_channels = (unsigned char)11U, .a_channels = (unsigned char)13U, .bg = {{.freq = 2412U, .channel = (unsigned char)1U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2417U, .channel = (unsigned char)2U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2422U, .channel = (unsigned char)3U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2427U, .channel = (unsigned char)4U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2432U, .channel = (unsigned char)5U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2437U, .channel = (unsigned char)6U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2442U, .channel = (unsigned char)7U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2447U, .channel = (unsigned char)8U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2452U, .channel = (unsigned char)9U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2457U, .channel = (unsigned char)10U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2462U, .channel = (unsigned char)11U, .flags = (unsigned char)0, .max_power = (unsigned char)0}}, .a = {{.freq = 5180U, .channel = (unsigned char)36U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5200U, .channel = (unsigned char)40U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5220U, .channel = (unsigned char)44U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5240U, .channel = (unsigned char)48U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5260U, .channel = (unsigned char)52U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5280U, .channel = (unsigned char)56U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5300U, .channel = (unsigned char)60U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5320U, .channel = (unsigned char)64U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5745U, .channel = (unsigned char)149U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5765U, .channel = (unsigned char)153U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5785U, .channel = (unsigned char)157U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5805U, .channel = (unsigned char)161U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5825U, .channel = (unsigned char)165U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}}}, {.name = {(unsigned char)'Z', (unsigned char)'Z', (unsigned char)'C', (unsigned char)'\000'}, .bg_channels = (unsigned char)11U, .a_channels = (unsigned char)4U, .bg = {{.freq = 2412U, .channel = (unsigned char)1U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2417U, .channel = (unsigned char)2U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2422U, .channel = (unsigned char)3U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2427U, .channel = (unsigned char)4U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2432U, .channel = (unsigned char)5U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2437U, .channel = (unsigned char)6U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2442U, .channel = (unsigned char)7U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2447U, .channel = (unsigned char)8U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2452U, .channel = (unsigned char)9U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2457U, .channel = (unsigned char)10U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2462U, .channel = (unsigned char)11U, .flags = (unsigned char)0, .max_power = (unsigned char)0}}, .a = {{.freq = 5170U, .channel = (unsigned char)34U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5190U, .channel = (unsigned char)38U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5210U, .channel = (unsigned char)42U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5230U, .channel = (unsigned char)46U, .flags = (unsigned char)0, .max_power = (unsigned char)0}}}, {.name = {(unsigned char)'Z', (unsigned char)'Z', (unsigned char)'M', (unsigned char)'\000'}, .bg_channels = (unsigned char)11U, .a_channels = (unsigned char)0, .bg = {{.freq = 2412U, .channel = (unsigned char)1U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2417U, .channel = (unsigned char)2U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2422U, .channel = (unsigned char)3U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2427U, .channel = (unsigned char)4U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2432U, .channel = (unsigned char)5U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2437U, .channel = (unsigned char)6U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2442U, .channel = (unsigned char)7U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2447U, .channel = (unsigned char)8U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2452U, .channel = (unsigned char)9U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2457U, .channel = (unsigned char)10U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2462U, .channel = (unsigned char)11U, .flags = (unsigned char)0, .max_power = (unsigned char)0}}, .a = {{.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}}}, {.name = {(unsigned char)'Z', (unsigned char)'Z', (unsigned char)'E', (unsigned char)'\000'}, .bg_channels = (unsigned char)13U, .a_channels = (unsigned char)19U, .bg = {{.freq = 2412U, .channel = (unsigned char)1U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2417U, .channel = (unsigned char)2U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2422U, .channel = (unsigned char)3U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2427U, .channel = (unsigned char)4U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2432U, .channel = (unsigned char)5U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2437U, .channel = (unsigned char)6U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2442U, .channel = (unsigned char)7U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2447U, .channel = (unsigned char)8U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2452U, .channel = (unsigned char)9U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2457U, .channel = (unsigned char)10U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2462U, .channel = (unsigned char)11U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2467U, .channel = (unsigned char)12U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2472U, .channel = (unsigned char)13U, .flags = (unsigned char)0, .max_power = (unsigned char)0}}, .a = {{.freq = 5180U, .channel = (unsigned char)36U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5200U, .channel = (unsigned char)40U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5220U, .channel = (unsigned char)44U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5240U, .channel = (unsigned char)48U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5260U, .channel = (unsigned char)52U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5280U, .channel = (unsigned char)56U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5300U, .channel = (unsigned char)60U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5320U, .channel = (unsigned char)64U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5500U, .channel = (unsigned char)100U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5520U, .channel = (unsigned char)104U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5540U, .channel = (unsigned char)108U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5560U, .channel = (unsigned char)112U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5580U, .channel = (unsigned char)116U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5600U, .channel = (unsigned char)120U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5620U, .channel = (unsigned char)124U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5640U, .channel = (unsigned char)128U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5660U, .channel = (unsigned char)132U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5680U, .channel = (unsigned char)136U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5700U, .channel = (unsigned char)140U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}}}, {.name = {(unsigned char)'Z', (unsigned char)'Z', (unsigned char)'J', (unsigned char)'\000'}, .bg_channels = (unsigned char)14U, .a_channels = (unsigned char)4U, .bg = {{.freq = 2412U, .channel = (unsigned char)1U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2417U, .channel = (unsigned char)2U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2422U, .channel = (unsigned char)3U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2427U, .channel = (unsigned char)4U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2432U, .channel = (unsigned char)5U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2437U, .channel = (unsigned char)6U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2442U, .channel = (unsigned char)7U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2447U, .channel = (unsigned char)8U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2452U, .channel = (unsigned char)9U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2457U, .channel = (unsigned char)10U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2462U, .channel = (unsigned char)11U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2467U, .channel = (unsigned char)12U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2472U, .channel = (unsigned char)13U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2484U, .channel = (unsigned char)14U, .flags = (unsigned char)4U, .max_power = (unsigned char)0}}, .a = {{.freq = 5170U, .channel = (unsigned char)34U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5190U, .channel = (unsigned char)38U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5210U, .channel = (unsigned char)42U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5230U, .channel = (unsigned char)46U, .flags = (unsigned char)0, .max_power = (unsigned char)0}}}, {.name = {(unsigned char)'Z', (unsigned char)'Z', (unsigned char)'R', (unsigned char)'\000'}, .bg_channels = (unsigned char)14U, .a_channels = (unsigned char)0, .bg = {{.freq = 2412U, .channel = (unsigned char)1U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2417U, .channel = (unsigned char)2U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2422U, .channel = (unsigned char)3U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2427U, .channel = (unsigned char)4U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2432U, .channel = (unsigned char)5U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2437U, .channel = (unsigned char)6U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2442U, .channel = (unsigned char)7U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2447U, .channel = (unsigned char)8U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2452U, .channel = (unsigned char)9U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2457U, .channel = (unsigned char)10U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2462U, .channel = (unsigned char)11U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2467U, .channel = (unsigned char)12U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2472U, .channel = (unsigned char)13U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2484U, .channel = (unsigned char)14U, .flags = (unsigned char)5U, .max_power = (unsigned char)0}}, .a = {{.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}}}, {.name = {(unsigned char)'Z', (unsigned char)'Z', (unsigned char)'H', (unsigned char)'\000'}, .bg_channels = (unsigned char)13U, .a_channels = (unsigned char)4U, .bg = {{.freq = 2412U, .channel = (unsigned char)1U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2417U, .channel = (unsigned char)2U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2422U, .channel = (unsigned char)3U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2427U, .channel = (unsigned char)4U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2432U, .channel = (unsigned char)5U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2437U, .channel = (unsigned char)6U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2442U, .channel = (unsigned char)7U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2447U, .channel = (unsigned char)8U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2452U, .channel = (unsigned char)9U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2457U, .channel = (unsigned char)10U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2462U, .channel = (unsigned char)11U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2467U, .channel = (unsigned char)12U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 2472U, .channel = (unsigned char)13U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}}, .a = {{.freq = 5745U, .channel = (unsigned char)149U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5765U, .channel = (unsigned char)153U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5785U, .channel = (unsigned char)157U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5805U, .channel = (unsigned char)161U, .flags = (unsigned char)0, .max_power = (unsigned char)0}}}, {.name = {(unsigned char)'Z', (unsigned char)'Z', (unsigned char)'G', (unsigned char)'\000'}, .bg_channels = (unsigned char)13U, .a_channels = (unsigned char)4U, .bg = {{.freq = 2412U, .channel = (unsigned char)1U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2417U, .channel = (unsigned char)2U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2422U, .channel = (unsigned char)3U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2427U, .channel = (unsigned char)4U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2432U, .channel = (unsigned char)5U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2437U, .channel = (unsigned char)6U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2442U, .channel = (unsigned char)7U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2447U, .channel = (unsigned char)8U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2452U, .channel = (unsigned char)9U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2457U, .channel = (unsigned char)10U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2462U, .channel = (unsigned char)11U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2467U, .channel = (unsigned char)12U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2472U, .channel = (unsigned char)13U, .flags = (unsigned char)0, .max_power = (unsigned char)0}}, .a = {{.freq = 5180U, .channel = (unsigned char)36U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5200U, .channel = (unsigned char)40U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5220U, .channel = (unsigned char)44U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 5240U, .channel = (unsigned char)48U, .flags = (unsigned char)0, .max_power = (unsigned char)0}}}, {.name = {(unsigned char)'Z', (unsigned char)'Z', (unsigned char)'K', (unsigned char)'\000'}, .bg_channels = (unsigned char)13U, .a_channels = (unsigned char)24U, .bg = {{.freq = 2412U, .channel = (unsigned char)1U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2417U, .channel = (unsigned char)2U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2422U, .channel = (unsigned char)3U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2427U, .channel = (unsigned char)4U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2432U, .channel = (unsigned char)5U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2437U, .channel = (unsigned char)6U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2442U, .channel = (unsigned char)7U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2447U, .channel = (unsigned char)8U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2452U, .channel = (unsigned char)9U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2457U, .channel = (unsigned char)10U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2462U, .channel = (unsigned char)11U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2467U, .channel = (unsigned char)12U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 2472U, .channel = (unsigned char)13U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}}, .a = {{.freq = 5180U, .channel = (unsigned char)36U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5200U, .channel = (unsigned char)40U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5220U, .channel = (unsigned char)44U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5240U, .channel = (unsigned char)48U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5260U, .channel = (unsigned char)52U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5280U, .channel = (unsigned char)56U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5300U, .channel = (unsigned char)60U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5320U, .channel = (unsigned char)64U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5500U, .channel = (unsigned char)100U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5520U, .channel = (unsigned char)104U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5540U, .channel = (unsigned char)108U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5560U, .channel = (unsigned char)112U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5580U, .channel = (unsigned char)116U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5600U, .channel = (unsigned char)120U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5620U, .channel = (unsigned char)124U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5640U, .channel = (unsigned char)128U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5660U, .channel = (unsigned char)132U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5680U, .channel = (unsigned char)136U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5700U, .channel = (unsigned char)140U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5745U, .channel = (unsigned char)149U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5765U, .channel = (unsigned char)153U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5785U, .channel = (unsigned char)157U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5805U, .channel = (unsigned char)161U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5825U, .channel = (unsigned char)165U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}}}, {.name = {(unsigned char)'Z', (unsigned char)'Z', (unsigned char)'L', (unsigned char)'\000'}, .bg_channels = (unsigned char)11U, .a_channels = (unsigned char)13U, .bg = {{.freq = 2412U, .channel = (unsigned char)1U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2417U, .channel = (unsigned char)2U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2422U, .channel = (unsigned char)3U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2427U, .channel = (unsigned char)4U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2432U, .channel = (unsigned char)5U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2437U, .channel = (unsigned char)6U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2442U, .channel = (unsigned char)7U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2447U, .channel = (unsigned char)8U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2452U, .channel = (unsigned char)9U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2457U, .channel = (unsigned char)10U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2462U, .channel = (unsigned char)11U, .flags = (unsigned char)0, .max_power = (unsigned char)0}}, .a = {{.freq = 5180U, .channel = (unsigned char)36U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5200U, .channel = (unsigned char)40U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5220U, .channel = (unsigned char)44U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5240U, .channel = (unsigned char)48U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5260U, .channel = (unsigned char)52U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5280U, .channel = (unsigned char)56U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5300U, .channel = (unsigned char)60U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5320U, .channel = (unsigned char)64U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5745U, .channel = (unsigned char)149U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5765U, .channel = (unsigned char)153U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5785U, .channel = (unsigned char)157U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5805U, .channel = (unsigned char)161U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}, {.freq = 5825U, .channel = (unsigned char)165U, .flags = (unsigned char)1U, .max_power = (unsigned char)0}}}};

#line 11169  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_set_geo(struct ipw_priv *priv)
{
  int j;
  int tmp;
  
#line 11173 
  j = 0;
  
#line 11173 
  goto ldv_56813;
  ldv_56812: 
#line 11174 
  ;
  
#line 11174 
  tmp = memcmp((void const *)(& priv->eeprom[76UL]),(void const *)(& ipw_geos[j].name),3UL);
  
#line 11174 
  if (tmp == 0) 
#line 11176 
                goto ldv_56811; else ;
  
#line 11173 
  j += 1;
  ldv_56813: 
#line 11174 
  ;
  
#line 11173 
  if ((unsigned int)j <= 13U) 
#line 11175 
                              goto ldv_56812; else 
#line 11178 
                                                   goto ldv_56811;
  ldv_56811: 
#line 11179 
  ;
  
#line 11179 
  if (j == 14) {
    
#line 11180 
    printk("\001",(int)priv->eeprom[76UL],(int)priv->eeprom[77UL],(int)priv->eeprom[78UL]);
    
#line 11184 
    j = 0;
  }
  else ;
  
#line 11187 
  libipw_set_geo(priv->ieee,& ipw_geos[j]);
  
#line 11188 
  return;
}


#line 11191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_up(struct ipw_priv *priv)
{
  int __retres;
  int rc;
  int i;
  
#line 11196 
  if (priv->suspend_time != 0UL) {
    
#line 11197 
    libipw_networks_age(priv->ieee,priv->suspend_time);
    
#line 11198 
    priv->suspend_time = 0UL;
  }
  else ;
  
#line 11201 
  if ((priv->status & 2048U) != 0U) {
    
#line 11202 
    __retres = -5;
    
#line 11202 
    goto return_label;
  }
  else ;
  
#line 11204 
  if (cmdlog != 0 && priv->cmdlog == (struct ipw_cmd_log *)0) {
    
#line 11205 
    priv->cmdlog = (struct ipw_cmd_log *)kcalloc((unsigned long)cmdlog,144UL,208U);
    
#line 11207 
    if (priv->cmdlog == (struct ipw_cmd_log *)0) {
      
#line 11208 
      printk("\001",cmdlog);
      
#line 11210 
      __retres = -12;
      
#line 11210 
      goto return_label;
    }
    else 
#line 11212 
         priv->cmdlog_len = cmdlog;
  }
  else ;
  
#line 11216 
  i = 0;
  
#line 11216 
  goto ldv_56824;
  ldv_56823: 
#line 11217 
  ;
  
#line 11219 
  rc = ipw_load(priv);
  
#line 11220 
  if (rc != 0) {
    
#line 11221 
    printk("\001",rc);
    
#line 11222 
    __retres = rc;
    
#line 11222 
    goto return_label;
  }
  else ;
  
#line 11225 
  ipw_init_ordinals(priv);
  
#line 11226 
  if ((priv->config & 8U) == 0U) 
#line 11227 
                                 eeprom_parse_mac(priv,(u8 *)(& priv->mac_addr)); else ;
  
#line 11228 
  memcpy((void *)(priv->net_dev)->dev_addr,(void const *)(& priv->mac_addr),6UL);
  
#line 11230 
  ipw_set_geo(priv);
  
#line 11232 
  if ((priv->status & 8U) != 0U) {
    
#line 11233 
    printk("\001");
    
#line 11234 
    __retres = 0;
    
#line 11234 
    goto return_label;
  }
  else {
    int tmp_0;
    
#line 11235 
    tmp_0 = rf_kill_active(priv);
    
#line 11235 
    if (tmp_0 != 0) {
      
#line 11236 
      printk("\001");
      
#line 11239 
      ldv_schedule_delayed_work_309(& priv->rf_kill,500UL);
      
#line 11240 
      __retres = 0;
      
#line 11240 
      goto return_label;
    }
    else ;
  }
  
#line 11243 
  rc = ipw_config(priv);
  
#line 11244 
  if (rc == 0) {
    
#line 11245 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 11245 
      ;
      
#line 11245 
      tmp_1 = preempt_count();
      
#line 11245 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 11245 
                                                     tmp_2 = 73; else 
                                                                   
#line 11245 
                                                                   tmp_2 = 85;
      
#line 11245 
      printk("\001",tmp_2,"ipw_up",i);
    }
    else ;
    
#line 11249 
    ldv_schedule_delayed_work_310(& priv->request_scan,0UL);
    
#line 11251 
    __retres = 0;
    
#line 11251 
    goto return_label;
  }
  else ;
  
#line 11254 
  if ((ipw_debug_level & 4U) != 0U) {
    int tmp_4;
    int tmp_3;
    
#line 11254 
    ;
    
#line 11254 
    tmp_3 = preempt_count();
    
#line 11254 
    if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 11254 
                                                   tmp_4 = 73; else 
#line 11254 
                                                                    tmp_4 = 85;
    
#line 11254 
    printk("\001",tmp_4,"ipw_up",rc);
  }
  else ;
  
#line 11255 
  if ((ipw_debug_level & 4U) != 0U) {
    int tmp_6;
    int tmp_5;
    
#line 11255 
    ;
    
#line 11255 
    tmp_5 = preempt_count();
    
#line 11255 
    if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 11255 
                                                   tmp_6 = 73; else 
#line 11255 
                                                                    tmp_6 = 85;
    
#line 11255 
    printk("\001",tmp_6,"ipw_up",i,5);
  }
  else ;
  
#line 11260 
  ipw_down(priv);
  
#line 11216 
  i += 1;
  ldv_56824: 
#line 11217 
  ;
  
#line 11216 
  if (i <= 4) 
#line 11218 
              goto ldv_56823; else 
#line 11221 
                                   goto ldv_56825;
  ldv_56825: 
#line 11222 
  ;
  
#line 11265 
  printk("\001",i);
  
#line 11267 
  __retres = -5;
  return_label: 
#line 11267 
                return __retres;
}


#line 11270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_bg_up(struct work_struct *work)
{
  struct ipw_priv *tmp;
  {
    
#line 11273 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 11273 
    tmp = (struct ipw_priv *)__mptr + 18446744073709546048U;
  }
  
#line 11272 
  struct ipw_priv *priv = tmp;
  
#line 11274 
  ldv_mutex_lock_311(& priv->mutex);
  
#line 11275 
  ipw_up(priv);
  
#line 11276 
  ldv_mutex_unlock_312(& priv->mutex);
  
#line 11277 
  return;
}


#line 11279  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_deinit(struct ipw_priv *priv)
{
  int i;
  
#line 11283 
  if ((priv->status & 2097152U) != 0U) {
    
#line 11284 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 11284 
      tmp = preempt_count();
      
#line 11284 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 11284 
                                                   tmp_0 = 73; else 
#line 11284 
                                                                    tmp_0 = 85;
      
#line 11284 
      printk("\001",tmp_0,"ipw_deinit");
    }
    else ;
    
#line 11285 
    ipw_abort_scan(priv);
  }
  else ;
  
#line 11288 
  if ((priv->status & 128U) != 0U) {
    
#line 11289 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 11289 
      tmp_1 = preempt_count();
      
#line 11289 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 11289 
                                                     tmp_2 = 73; else 
                                                                   
#line 11289 
                                                                   tmp_2 = 85;
      
#line 11289 
      printk("\001",tmp_2,"ipw_deinit");
    }
    else ;
    
#line 11290 
    ipw_disassociate((void *)priv);
  }
  else ;
  
#line 11293 
  ipw_led_shutdown(priv);
  
#line 11298 
  i = 1000;
  
#line 11298 
  goto ldv_56838;
  ldv_56837: 
#line 11299 
  ;
  
#line 11301 
  __const_udelay(42950UL);
  
#line 11300 
  i -= 1;
  ldv_56838: 
#line 11301 
  ;
  
#line 11298 
  if (i != 0 && (priv->status & 2097792U) != 0U) 
#line 11300 
                                                 goto ldv_56837; else 
                                                                   
#line 11303 
                                                                   goto ldv_56839;
  ldv_56839: 
#line 11304 
  ;
  
#line 11303 
  if ((priv->status & 2097792U) != 0U) {
    
#line 11305 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_4;
      int tmp_3;
      
#line 11305 
      tmp_3 = preempt_count();
      
#line 11305 
      if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 11305 
                                                     tmp_4 = 73; else 
                                                                   
#line 11305 
                                                                   tmp_4 = 85;
      
#line 11305 
      printk("\001",tmp_4,"ipw_deinit");
    }
    else ;
  }
  else 
    
#line 11307 
    if ((ipw_debug_level & 4U) != 0U) {
      int tmp_6;
      int tmp_5;
      
#line 11307 
      ;
      
#line 11307 
      tmp_5 = preempt_count();
      
#line 11307 
      if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 11307 
                                                     tmp_6 = 73; else 
                                                                   
#line 11307 
                                                                   tmp_6 = 85;
      
#line 11307 
      printk("\001",tmp_6,"ipw_deinit",1000 - i);
    }
    else ;
  
#line 11310 
  ipw_send_card_disable(priv,0U);
  
#line 11312 
  priv->status &= 4294967263U;
  
#line 11313 
  return;
}


#line 11315  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_down(struct ipw_priv *priv)
{
  int tmp;
  
#line 11317 
  int exit_pending = (int)priv->status & 2048;
  
#line 11319 
  priv->status |= 2048U;
  
#line 11321 
  tmp = ipw_is_init(priv);
  
#line 11321 
  if (tmp != 0) 
#line 11322 
                ipw_deinit(priv); else ;
  
#line 11326 
  if (exit_pending == 0) 
#line 11327 
                         priv->status &= 4294965247U; else ;
  
#line 11330 
  ipw_disable_interrupts(priv);
  
#line 11333 
  priv->status &= 2060U;
  
#line 11334 
  netif_carrier_off(priv->net_dev);
  
#line 11336 
  ipw_stop_nic(priv);
  
#line 11338 
  ipw_led_radio_off(priv);
  
#line 11339 
  return;
}


#line 11341  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_bg_down(struct work_struct *work)
{
  struct ipw_priv *tmp;
  {
    
#line 11344 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 11344 
    tmp = (struct ipw_priv *)__mptr + 18446744073709545968U;
  }
  
#line 11343 
  struct ipw_priv *priv = tmp;
  
#line 11345 
  ldv_mutex_lock_313(& priv->mutex);
  
#line 11346 
  ipw_down(priv);
  
#line 11347 
  ldv_mutex_unlock_314(& priv->mutex);
  
#line 11348 
  return;
}


#line 11350  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_wdev_init(struct net_device *dev)
{
  int i;
  int tmp_3;
  
#line 11352 
  int rc = 0;
  
#line 11353 
  struct ipw_priv *priv = libipw_priv(dev);
  
#line 11354 
  struct libipw_geo const *geo = libipw_get_geo(priv->ieee);
  
#line 11355 
  struct wireless_dev *wdev = & (priv->ieee)->wdev;
  
#line 11357 
  memcpy((void *)(& (wdev->wiphy)->perm_addr),(void const *)(& priv->mac_addr),6UL);
  
#line 11360 
  if ((unsigned int)geo->bg_channels != 0U) {
    
#line 11361 
    struct ieee80211_supported_band *bg_band = & (priv->ieee)->bg_band;
    
#line 11363 
    bg_band->band = IEEE80211_BAND_2GHZ;
    
#line 11364 
    bg_band->n_channels = (int)geo->bg_channels;
    
#line 11365 
    bg_band->channels = (struct ieee80211_channel *)kcalloc((unsigned long)geo->bg_channels,64UL,208U);
    
#line 11368 
    if (bg_band->channels == (struct ieee80211_channel *)0) {
      
#line 11369 
      rc = -12;
      
#line 11370 
      goto out;
    }
    else ;
    
#line 11373 
    i = 0;
    
#line 11373 
    goto ldv_56861;
    ldv_56860: 
#line 11374 
    ;
    
#line 11374 
    (bg_band->channels + i)->band = IEEE80211_BAND_2GHZ;
    
#line 11375 
    (bg_band->channels + i)->center_freq = (unsigned short)geo->bg[i].freq;
    
#line 11376 
    (bg_band->channels + i)->hw_value = (unsigned short)geo->bg[i].channel;
    
#line 11377 
    (bg_band->channels + i)->max_power = (int)geo->bg[i].max_power;
    
#line 11378 
    if (((int)geo->bg[i].flags & 1) != 0) 
#line 11379 
                                          (bg_band->channels + i)->flags |= 2U; else ;
    
#line 11381 
    if (((int)geo->bg[i].flags & 8) != 0) 
#line 11382 
                                          (bg_band->channels + i)->flags |= 2U; else ;
    
#line 11384 
    if (((int)geo->bg[i].flags & 32) != 0) 
#line 11385 
                                           (bg_band->channels + i)->flags |= 8U; else ;
    
#line 11373 
    i += 1;
    ldv_56861: 
#line 11374 
    ;
    
#line 11373 
    if ((int)geo->bg_channels > i) 
#line 11375 
                                   goto ldv_56860; else 
#line 11378 
                                                        goto ldv_56862;
    ldv_56862: 
#line 11379 
    ;
    
#line 11392 
    bg_band->bitrates = (struct ieee80211_rate *)(& ipw2200_rates);
    
#line 11393 
    bg_band->n_bitrates = 12;
    
#line 11395 
    (wdev->wiphy)->bands[0] = bg_band;
  }
  else ;
  
#line 11399 
  if ((unsigned int)geo->a_channels != 0U) {
    
#line 11400 
    struct ieee80211_supported_band *a_band = & (priv->ieee)->a_band;
    
#line 11402 
    a_band->band = IEEE80211_BAND_5GHZ;
    
#line 11403 
    a_band->n_channels = (int)geo->a_channels;
    
#line 11404 
    a_band->channels = (struct ieee80211_channel *)kcalloc((unsigned long)geo->a_channels,64UL,208U);
    
#line 11407 
    if (a_band->channels == (struct ieee80211_channel *)0) {
      
#line 11408 
      rc = -12;
      
#line 11409 
      goto out;
    }
    else ;
    
#line 11412 
    i = 0;
    
#line 11412 
    goto ldv_56865;
    ldv_56864: 
#line 11413 
    ;
    
#line 11413 
    (a_band->channels + i)->band = IEEE80211_BAND_5GHZ;
    
#line 11414 
    (a_band->channels + i)->center_freq = (unsigned short)geo->a[i].freq;
    
#line 11415 
    (a_band->channels + i)->hw_value = (unsigned short)geo->a[i].channel;
    
#line 11416 
    (a_band->channels + i)->max_power = (int)geo->a[i].max_power;
    
#line 11417 
    if (((int)geo->a[i].flags & 1) != 0) 
#line 11418 
                                         (a_band->channels + i)->flags |= 2U; else ;
    
#line 11420 
    if (((int)geo->a[i].flags & 8) != 0) 
#line 11421 
                                         (a_band->channels + i)->flags |= 2U; else ;
    
#line 11423 
    if (((int)geo->a[i].flags & 32) != 0) 
#line 11424 
                                          (a_band->channels + i)->flags |= 8U; else ;
    
#line 11412 
    i += 1;
    ldv_56865: 
#line 11413 
    ;
    
#line 11412 
    if ((int)geo->a_channels > i) 
#line 11414 
                                  goto ldv_56864; else 
#line 11417 
                                                       goto ldv_56866;
    ldv_56866: 
#line 11418 
    ;
    
#line 11431 
    a_band->bitrates = (struct ieee80211_rate *)(& ipw2200_rates) + 4U;
    
#line 11432 
    a_band->n_bitrates = 8;
    
#line 11434 
    (wdev->wiphy)->bands[1] = a_band;
  }
  else ;
  
#line 11437 
  (wdev->wiphy)->cipher_suites = (u32 const *)(& ipw_cipher_suites);
  
#line 11438 
  (wdev->wiphy)->n_cipher_suites = 4;
  
#line 11440 
  set_wiphy_dev(wdev->wiphy,& (priv->pci_dev)->dev);
  
#line 11443 
  tmp_3 = wiphy_register(wdev->wiphy);
  
#line 11443 
  if (tmp_3 != 0) 
#line 11444 
                  rc = -5; else ;
  out: 
#line 11445 
  ;
  
#line 11446 
  return rc;
}


#line 11450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct pci_device_id const card_ids[23U] = {{.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9985U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9986U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 10001U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 10002U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 10017U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 10018U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 10033U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 10034U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 10049U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 4156U, .subdevice = 10049U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 10050U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 10065U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 10066U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 10067U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 10068U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 10081U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 10082U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4175U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 16928U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 16929U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 16931U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 16932U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 11478  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
struct pci_device_id const __mod_pci__card_ids_device_table[23U];

#line 11480  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct attribute *ipw_sysfs_entries[23U] = {& dev_attr_rf_kill.attr, & dev_attr_direct_dword.attr, & dev_attr_indirect_byte.attr, & dev_attr_indirect_dword.attr, & dev_attr_mem_gpio_reg.attr, & dev_attr_command_event_reg.attr, & dev_attr_nic_type.attr, & dev_attr_status.attr, & dev_attr_cfg.attr, & dev_attr_error.attr, & dev_attr_event_log.attr, & dev_attr_cmd_log.attr, & dev_attr_eeprom_delay.attr, & dev_attr_ucode_version.attr, & dev_attr_rtc.attr, & dev_attr_scan_age.attr, & dev_attr_led.attr, & dev_attr_speed_scan.attr, & dev_attr_net_stats.attr, & dev_attr_channels.attr, & dev_attr_rtap_iface.attr, & dev_attr_rtap_filter.attr, (struct attribute *)0};

#line 11508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct attribute_group ipw_attribute_group = {.name = (char const *)0, .is_visible = (umode_t (*)(struct kobject *, struct attribute *, int ))0, .attrs = (struct attribute **)(& ipw_sysfs_entries), .bin_attrs = (struct bin_attribute **)0};

#line 11514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_prom_open(struct net_device *dev)
{
  int __retres;
  
#line 11516 
  struct ipw_prom_priv *prom_priv = libipw_priv(dev);
  
#line 11517 
  struct ipw_priv *priv = prom_priv->priv;
  
#line 11519 
  if ((ipw_debug_level & 4U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 11519 
    tmp_0 = preempt_count();
    
#line 11519 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 11519 
                                                   tmp_1 = 73; else 
#line 11519 
                                                                    tmp_1 = 85;
    
#line 11519 
    printk("\001",tmp_1,"ipw_prom_open");
  }
  else ;
  
#line 11520 
  netif_carrier_off(dev);
  
#line 11522 
  if ((priv->ieee)->iw_mode != 6) {
    
#line 11523 
    priv->sys_config.accept_all_data_frames = (unsigned char)1U;
    
#line 11524 
    priv->sys_config.accept_non_directed_frames = (unsigned char)1U;
    
#line 11525 
    priv->sys_config.accept_all_mgmt_bcpr = (unsigned char)1U;
    
#line 11526 
    priv->sys_config.accept_all_mgmt_frames = (unsigned char)1U;
    
#line 11528 
    ipw_send_system_config(priv);
  }
  else ;
  
#line 11531 
  __retres = 0;
  
#line 11531 
  return __retres;
}


#line 11534  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_prom_stop(struct net_device *dev)
{
  int __retres;
  
#line 11536 
  struct ipw_prom_priv *prom_priv = libipw_priv(dev);
  
#line 11537 
  struct ipw_priv *priv = prom_priv->priv;
  
#line 11539 
  if ((ipw_debug_level & 4U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 11539 
    tmp_0 = preempt_count();
    
#line 11539 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 11539 
                                                   tmp_1 = 73; else 
#line 11539 
                                                                    tmp_1 = 85;
    
#line 11539 
    printk("\001",tmp_1,"ipw_prom_stop");
  }
  else ;
  
#line 11541 
  if ((priv->ieee)->iw_mode != 6) {
    
#line 11542 
    priv->sys_config.accept_all_data_frames = (unsigned char)0U;
    
#line 11543 
    priv->sys_config.accept_non_directed_frames = (unsigned char)0U;
    
#line 11544 
    priv->sys_config.accept_all_mgmt_bcpr = (unsigned char)0U;
    
#line 11545 
    priv->sys_config.accept_all_mgmt_frames = (unsigned char)0U;
    
#line 11547 
    ipw_send_system_config(priv);
  }
  else ;
  
#line 11550 
  __retres = 0;
  
#line 11550 
  return __retres;
}


#line 11553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static netdev_tx_t ipw_prom_hard_start_xmit(struct sk_buff *skb, struct net_device *dev)
{
  netdev_tx_t __retres;
  
#line 11556 
  if ((ipw_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 11556 
    tmp = preempt_count();
    
#line 11556 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 11556 
                                                 tmp_0 = 73; else 
#line 11556 
                                                                  tmp_0 = 85;
    
#line 11556 
    printk("\001",tmp_0,"ipw_prom_hard_start_xmit");
  }
  else ;
  
#line 11557 
  consume_skb(skb);
  
#line 11558 
  __retres = NETDEV_TX_OK;
  
#line 11558 
  return __retres;
}


#line 11561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct net_device_ops const ipw_prom_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & ipw_prom_open, .ndo_stop = & ipw_prom_stop, .ndo_start_xmit = & ipw_prom_hard_start_xmit, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = (void (*)(struct net_device *))0, .ndo_set_mac_address = & eth_mac_addr, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = (int (*)(struct net_device *, struct ifreq *, int ))0, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & libipw_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = (void (*)(struct net_device *))0, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = (struct net_device_stats *(*)(struct net_device *))0, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = (void (*)(struct net_device *))0, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = (int (*)(struct net_device *, netdev_features_t ))0, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 11570  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_prom_alloc(struct ipw_priv *priv)
{
  int __retres;
  
#line 11572 
  int rc = 0;
  
#line 11574 
  if (priv->prom_net_dev != (struct net_device *)0) {
    
#line 11575 
    __retres = -1;
    
#line 11575 
    goto return_label;
  }
  else ;
  
#line 11577 
  priv->prom_net_dev = alloc_libipw(32,1);
  
#line 11578 
  if (priv->prom_net_dev == (struct net_device *)0) {
    
#line 11579 
    __retres = -12;
    
#line 11579 
    goto return_label;
  }
  else ;
  
#line 11581 
  priv->prom_priv = (struct ipw_prom_priv *)libipw_priv(priv->prom_net_dev);
  
#line 11582 
  (priv->prom_priv)->ieee = (struct libipw_device *)netdev_priv((struct net_device const *)priv->prom_net_dev);
  
#line 11583 
  (priv->prom_priv)->priv = priv;
  
#line 11585 
  strcpy((char *)(& (priv->prom_net_dev)->name),"rtap%d");
  
#line 11586 
  memcpy((void *)(priv->prom_net_dev)->dev_addr,(void const *)(& priv->mac_addr),6UL);
  
#line 11588 
  (priv->prom_net_dev)->type = (unsigned short)803U;
  
#line 11589 
  (priv->prom_net_dev)->netdev_ops = & ipw_prom_netdev_ops;
  
#line 11591 
  ((priv->prom_priv)->ieee)->iw_mode = 6;
  
#line 11592 
  (priv->prom_net_dev)->dev.parent = & (priv->pci_dev)->dev;
  
#line 11594 
  rc = ldv_register_netdev_315(priv->prom_net_dev);
  
#line 11595 
  if (rc != 0) {
    
#line 11596 
    free_libipw(priv->prom_net_dev,1);
    
#line 11597 
    priv->prom_net_dev = (struct net_device *)0;
    
#line 11598 
    __retres = rc;
    
#line 11598 
    goto return_label;
  }
  else ;
  
#line 11601 
  __retres = 0;
  return_label: 
#line 11601 
                return __retres;
}


#line 11604  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_prom_free(struct ipw_priv *priv)
{
  
#line 11606 
  if (priv->prom_net_dev == (struct net_device *)0) 
#line 11607 
                                                    goto return_label; else ;
  
#line 11609 
  ldv_unregister_netdev_316(priv->prom_net_dev);
  
#line 11610 
  free_libipw(priv->prom_net_dev,1);
  
#line 11612 
  priv->prom_net_dev = (struct net_device *)0;
  return_label: 
#line 11613 
                return;
}


#line 11617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct net_device_ops const ipw_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & ipw_net_open, .ndo_stop = & ipw_net_stop, .ndo_start_xmit = & libipw_xmit, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & ipw_net_set_multicast_list, .ndo_set_mac_address = & ipw_net_set_mac_address, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = (int (*)(struct net_device *, struct ifreq *, int ))0, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & libipw_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = (void (*)(struct net_device *))0, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = (struct net_device_stats *(*)(struct net_device *))0, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = (void (*)(struct net_device *))0, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = (int (*)(struct net_device *, netdev_features_t ))0, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 11627  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_pci_probe(struct pci_dev *pdev, struct pci_device_id const *ent)
{
  int __retres;
  struct net_device *net_dev;
  void *base;
  u32 length;
  u32 val;
  struct ipw_priv *priv;
  int i;
  int tmp_1;
  int tmp_6;
  
#line 11630 
  int err = 0;
  
#line 11637 
  net_dev = alloc_libipw(7576,0);
  
#line 11638 
  if (net_dev == (struct net_device *)0) {
    
#line 11639 
    err = -12;
    
#line 11640 
    goto out;
  }
  else ;
  
#line 11643 
  priv = (struct ipw_priv *)libipw_priv(net_dev);
  
#line 11644 
  priv->ieee = (struct libipw_device *)netdev_priv((struct net_device const *)net_dev);
  
#line 11646 
  priv->net_dev = net_dev;
  
#line 11647 
  priv->pci_dev = pdev;
  
#line 11648 
  ipw_debug_level = (unsigned int)debug;
  
#line 11649 
  spinlock_check(& priv->irq_lock);
  {
    struct lock_class_key __key;
    
#line 11649 
    __raw_spin_lock_init(& priv->irq_lock.__anonCompField_spinlock_18.rlock,"&(&priv->irq_lock)->rlock",& __key);
  }
  
#line 11650 
  spinlock_check(& priv->lock);
  {
    struct lock_class_key __key_0;
    
#line 11650 
    __raw_spin_lock_init(& priv->lock.__anonCompField_spinlock_18.rlock,"&(&priv->lock)->rlock",& __key_0);
  }
  
#line 11651 
  i = 0;
  
#line 11651 
  goto ldv_56915;
  ldv_56914: 
#line 11652 
  ;
  
#line 11652 
  INIT_LIST_HEAD(& priv->ibss_mac_hash[i]);
  
#line 11651 
  i += 1;
  ldv_56915: 
#line 11652 
  ;
  
#line 11651 
  if (i <= 30) 
#line 11653 
               goto ldv_56914; else 
#line 11656 
                                    goto ldv_56916;
  ldv_56916: 
#line 11657 
  ;
  {
    struct lock_class_key __key_1;
    
#line 11654 
    __mutex_init(& priv->mutex,"&priv->mutex",& __key_1);
  }
  
#line 11655 
  tmp_1 = pci_enable_device(pdev);
  
#line 11655 
  if (tmp_1 != 0) {
    
#line 11656 
    err = -19;
    
#line 11657 
    goto out_free_libipw;
  }
  else ;
  
#line 11660 
  pci_set_master(pdev);
  
#line 11662 
  err = pci_set_dma_mask(pdev,4294967295ULL);
  
#line 11663 
  if (err == 0) 
#line 11664 
                err = pci_set_consistent_dma_mask(pdev,4294967295ULL); else ;
  
#line 11665 
  if (err != 0) {
    
#line 11666 
    printk("\001");
    
#line 11667 
    goto out_pci_disable_device;
  }
  else ;
  
#line 11670 
  pci_set_drvdata(pdev,(void *)priv);
  
#line 11672 
  err = pci_request_regions(pdev,"ipw2200");
  
#line 11673 
  if (err != 0) 
#line 11674 
                goto out_pci_disable_device; else ;
  
#line 11678 
  pci_read_config_dword((struct pci_dev const *)pdev,64,& val);
  
#line 11679 
  if ((val & 65280U) != 0U) 
#line 11680 
                            pci_write_config_dword((struct pci_dev const *)pdev,64,val & 4294902015U); else ;
  
#line 11682 
  if (pdev->resource[0].start != 0ULL || pdev->resource[0].end != pdev->resource[0].start) 
    
#line 11682 
    length = ((unsigned int)pdev->resource[0].end - (unsigned int)pdev->resource[0].start) + 1U; else 
                                                                    
#line 11682 
                                                                    length = 0U;
  
#line 11683 
  priv->hw_len = (unsigned long)length;
  
#line 11685 
  base = pci_ioremap_bar(pdev,0);
  
#line 11686 
  if (base == (void *)0) {
    
#line 11687 
    err = -19;
    
#line 11688 
    goto out_pci_release_regions;
  }
  else ;
  
#line 11691 
  priv->hw_base = base;
  
#line 11692 
  if ((ipw_debug_level & 4U) != 0U) {
    int tmp_3;
    int tmp_2;
    
#line 11692 
    ;
    
#line 11692 
    tmp_2 = preempt_count();
    
#line 11692 
    if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 11692 
                                                   tmp_3 = 73; else 
#line 11692 
                                                                    tmp_3 = 85;
    
#line 11692 
    printk("\001",tmp_3,"ipw_pci_probe",length);
  }
  else ;
  
#line 11693 
  if ((ipw_debug_level & 4U) != 0U) {
    int tmp_5;
    int tmp_4;
    
#line 11693 
    ;
    
#line 11693 
    tmp_4 = preempt_count();
    
#line 11693 
    if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
#line 11693 
                                                   tmp_5 = 73; else 
#line 11693 
                                                                    tmp_5 = 85;
    
#line 11693 
    printk("\001",tmp_5,"ipw_pci_probe",base);
  }
  else ;
  
#line 11695 
  err = ipw_setup_deferred_work(priv);
  
#line 11696 
  if (err != 0) {
    
#line 11697 
    printk("\001");
    
#line 11698 
    goto out_iounmap;
  }
  else ;
  
#line 11701 
  ipw_sw_reset(priv,1);
  
#line 11703 
  err = ldv_request_irq_317(pdev->irq,& ipw_isr,128UL,"ipw2200",(void *)priv);
  
#line 11704 
  if (err != 0) {
    
#line 11705 
    printk("\001",pdev->irq);
    
#line 11706 
    goto out_iounmap;
  }
  else ;
  
#line 11709 
  net_dev->dev.parent = & pdev->dev;
  
#line 11711 
  ldv_mutex_lock_318(& priv->mutex);
  
#line 11713 
  (priv->ieee)->hard_start_xmit = & ipw_net_hard_start_xmit;
  
#line 11714 
  (priv->ieee)->set_security = & shim__set_security;
  
#line 11715 
  (priv->ieee)->is_queue_full = & ipw_net_is_queue_full;
  
#line 11718 
  (priv->ieee)->is_qos_active = & ipw_is_qos_active;
  
#line 11719 
  (priv->ieee)->handle_probe_response = & ipw_handle_beacon;
  
#line 11720 
  (priv->ieee)->handle_beacon = & ipw_handle_probe_response;
  
#line 11721 
  (priv->ieee)->handle_assoc_response = & ipw_handle_assoc_response;
  
#line 11724 
  (priv->ieee)->perfect_rssi = -20;
  
#line 11725 
  (priv->ieee)->worst_rssi = -85;
  
#line 11727 
  net_dev->netdev_ops = & ipw_netdev_ops;
  
#line 11728 
  priv->wireless_data.spy_data = & (priv->ieee)->spy_data;
  
#line 11729 
  net_dev->wireless_data = & priv->wireless_data;
  
#line 11730 
  net_dev->wireless_handlers = (struct iw_handler_def const *)(& ipw_wx_handler_def);
  
#line 11731 
  net_dev->ethtool_ops = & ipw_ethtool_ops;
  
#line 11733 
  err = sysfs_create_group(& pdev->dev.kobj,(struct attribute_group const *)(& ipw_attribute_group));
  
#line 11734 
  if (err != 0) {
    
#line 11735 
    printk("\001");
    
#line 11736 
    ldv_mutex_unlock_319(& priv->mutex);
    
#line 11737 
    goto out_release_irq;
  }
  else ;
  
#line 11740 
  tmp_6 = ipw_up(priv);
  
#line 11740 
  if (tmp_6 != 0) {
    
#line 11741 
    ldv_mutex_unlock_320(& priv->mutex);
    
#line 11742 
    err = -5;
    
#line 11743 
    goto out_remove_sysfs;
  }
  else ;
  
#line 11746 
  ldv_mutex_unlock_321(& priv->mutex);
  
#line 11748 
  err = ipw_wdev_init(net_dev);
  
#line 11749 
  if (err != 0) {
    
#line 11750 
    printk("\001");
    
#line 11751 
    goto out_remove_sysfs;
  }
  else ;
  
#line 11754 
  err = ldv_register_netdev_322(net_dev);
  
#line 11755 
  if (err != 0) {
    
#line 11756 
    printk("\001");
    
#line 11757 
    goto out_unregister_wiphy;
  }
  else ;
  
#line 11761 
  if (rtap_iface != 0) {
    
#line 11762 
    err = ipw_prom_alloc(priv);
    
#line 11763 
    if (err != 0) {
      
#line 11764 
      printk("\001",err);
      
#line 11766 
      ldv_unregister_netdev_323(priv->net_dev);
      
#line 11767 
      goto out_unregister_wiphy;
    }
    else ;
  }
  else ;
  
#line 11772 
  printk("\001",(u8 *)(& (priv->ieee)->geo.name),(int)(priv->ieee)->geo.bg_channels,(int)(priv->ieee)->geo.a_channels);
  
#line 11777 
  __retres = 0;
  
#line 11777 
  goto return_label;
  out_unregister_wiphy: 
#line 11779 
  ;
  
#line 11780 
  wiphy_unregister((priv->ieee)->wdev.wiphy);
  
#line 11781 
  kfree((void const *)(priv->ieee)->a_band.channels);
  
#line 11782 
  kfree((void const *)(priv->ieee)->bg_band.channels);
  out_remove_sysfs: 
#line 11783 
  ;
  
#line 11784 
  sysfs_remove_group(& pdev->dev.kobj,(struct attribute_group const *)(& ipw_attribute_group));
  out_release_irq: 
#line 11785 
  ;
  
#line 11786 
  ldv_free_irq_324(pdev->irq,(void *)priv);
  out_iounmap: 
#line 11787 
  ;
  
#line 11788 
  iounmap((void volatile *)priv->hw_base);
  out_pci_release_regions: 
#line 11789 
  ;
  
#line 11790 
  pci_release_regions(pdev);
  out_pci_disable_device: 
#line 11791 
  ;
  
#line 11792 
  pci_disable_device(pdev);
  out_free_libipw: 
#line 11793 
  ;
  
#line 11794 
  free_libipw(priv->net_dev,0);
  out: 
#line 11795 
  ;
  
#line 11796 
  __retres = err;
  return_label: 
#line 11796 
                return __retres;
}


#line 11799  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_pci_remove(struct pci_dev *pdev)
{
  struct list_head *p;
  struct list_head *q;
  int i;
  struct ipw_ibss_seq *tmp_0;
  
#line 11801 
  struct ipw_priv *priv = pci_get_drvdata(pdev);
  
#line 11805 
  if (priv == (struct ipw_priv *)0) 
#line 11806 
                                    goto return_label; else ;
  
#line 11808 
  ldv_mutex_lock_325(& priv->mutex);
  
#line 11810 
  priv->status |= 2048U;
  
#line 11811 
  ipw_down(priv);
  
#line 11812 
  sysfs_remove_group(& pdev->dev.kobj,(struct attribute_group const *)(& ipw_attribute_group));
  
#line 11814 
  ldv_mutex_unlock_326(& priv->mutex);
  
#line 11816 
  ldv_unregister_netdev_327(priv->net_dev);
  
#line 11818 
  if (priv->rxq != (struct ipw_rx_queue *)0) {
    
#line 11819 
    ipw_rx_queue_free(priv,priv->rxq);
    
#line 11820 
    priv->rxq = (struct ipw_rx_queue *)0;
  }
  else ;
  
#line 11822 
  ipw_tx_queue_free(priv);
  
#line 11824 
  if (priv->cmdlog != (struct ipw_cmd_log *)0) {
    
#line 11825 
    kfree((void const *)priv->cmdlog);
    
#line 11826 
    priv->cmdlog = (struct ipw_cmd_log *)0;
  }
  else ;
  
#line 11830 
  cancel_delayed_work_sync(& priv->adhoc_check);
  
#line 11831 
  cancel_work_sync(& priv->associate);
  
#line 11832 
  cancel_work_sync(& priv->disassociate);
  
#line 11833 
  cancel_work_sync(& priv->system_config);
  
#line 11834 
  cancel_work_sync(& priv->rx_replenish);
  
#line 11835 
  cancel_work_sync(& priv->adapter_restart);
  
#line 11836 
  cancel_delayed_work_sync(& priv->rf_kill);
  
#line 11837 
  cancel_work_sync(& priv->up);
  
#line 11838 
  cancel_work_sync(& priv->down);
  
#line 11839 
  cancel_delayed_work_sync(& priv->request_scan);
  
#line 11840 
  cancel_delayed_work_sync(& priv->request_direct_scan);
  
#line 11841 
  cancel_delayed_work_sync(& priv->request_passive_scan);
  
#line 11842 
  cancel_delayed_work_sync(& priv->scan_event);
  
#line 11843 
  cancel_delayed_work_sync(& priv->gather_stats);
  
#line 11844 
  cancel_work_sync(& priv->abort_scan);
  
#line 11845 
  cancel_work_sync(& priv->roam);
  
#line 11846 
  cancel_delayed_work_sync(& priv->scan_check);
  
#line 11847 
  cancel_work_sync(& priv->link_up);
  
#line 11848 
  cancel_work_sync(& priv->link_down);
  
#line 11849 
  cancel_delayed_work_sync(& priv->led_link_on);
  
#line 11850 
  cancel_delayed_work_sync(& priv->led_link_off);
  
#line 11851 
  cancel_delayed_work_sync(& priv->led_act_off);
  
#line 11852 
  cancel_work_sync(& priv->merge_networks);
  
#line 11855 
  i = 0;
  
#line 11855 
  goto ldv_56939;
  ldv_56938: 
#line 11856 
  ;
  
#line 11856 
  p = priv->ibss_mac_hash[i].next;
  
#line 11856 
  q = p->next;
  
#line 11856 
  goto ldv_56936;
  ldv_56935: 
#line 11857 
  ;
  
#line 11857 
  list_del(p);
  {
    
#line 11858 
    struct list_head const *__mptr = (struct list_head const *)p;
    
#line 11858 
    tmp_0 = (struct ipw_ibss_seq *)__mptr + 18446744073709551592U;
  }
  
#line 11858 
  kfree((void const *)tmp_0);
  
#line 11856 
  p = q;
  
#line 11856 
  q = p->next;
  ldv_56936: 
#line 11857 
  ;
  
#line 11856 
  if (& priv->ibss_mac_hash[i] != p) 
#line 11858 
                                     goto ldv_56935; else 
#line 11861 
                                                          goto ldv_56937;
  ldv_56937: 
#line 11862 
  ;
  
#line 11855 
  i += 1;
  ldv_56939: 
#line 11856 
  ;
  
#line 11855 
  if (i <= 30) 
#line 11857 
               goto ldv_56938; else 
#line 11860 
                                    goto ldv_56940;
  ldv_56940: 
#line 11861 
  ;
  
#line 11862 
  kfree((void const *)priv->error);
  
#line 11863 
  priv->error = (struct ipw_fw_error *)0;
  
#line 11866 
  ipw_prom_free(priv);
  
#line 11869 
  ldv_free_irq_328(pdev->irq,(void *)priv);
  
#line 11870 
  iounmap((void volatile *)priv->hw_base);
  
#line 11871 
  pci_release_regions(pdev);
  
#line 11872 
  pci_disable_device(pdev);
  
#line 11874 
  wiphy_unregister((priv->ieee)->wdev.wiphy);
  
#line 11875 
  kfree((void const *)(priv->ieee)->a_band.channels);
  
#line 11876 
  kfree((void const *)(priv->ieee)->bg_band.channels);
  
#line 11877 
  free_libipw(priv->net_dev,0);
  
#line 11878 
  free_firmware();
  return_label: 
#line 11879 
                return;
}


#line 11882  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_pci_suspend(struct pci_dev *pdev, pm_message_t state)
{
  int __retres;
  pci_power_t tmp_0;
  
#line 11884 
  struct ipw_priv *priv = pci_get_drvdata(pdev);
  
#line 11885 
  struct net_device *dev = priv->net_dev;
  
#line 11887 
  printk("\001",(char *)(& dev->name));
  
#line 11890 
  ipw_down(priv);
  
#line 11893 
  netif_device_detach(dev);
  
#line 11895 
  pci_save_state(pdev);
  
#line 11896 
  pci_disable_device(pdev);
  
#line 11897 
  tmp_0 = pci_choose_state(pdev,state);
  
#line 11897 
  ;
  
#line 11897 
  pci_set_power_state(pdev,tmp_0);
  
#line 11899 
  priv->suspend_at = get_seconds();
  
#line 11901 
  __retres = 0;
  
#line 11901 
  return __retres;
}


#line 11904  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_pci_resume(struct pci_dev *pdev)
{
  int __retres;
  int err;
  u32 val;
  unsigned long tmp_0;
  
#line 11906 
  struct ipw_priv *priv = pci_get_drvdata(pdev);
  
#line 11907 
  struct net_device *dev = priv->net_dev;
  
#line 11911 
  printk("\001",(char *)(& dev->name));
  
#line 11913 
  pci_set_power_state(pdev,0);
  
#line 11914 
  err = pci_enable_device(pdev);
  
#line 11915 
  if (err != 0) {
    
#line 11916 
    printk("\001",(char *)(& dev->name));
    
#line 11918 
    __retres = err;
    
#line 11918 
    goto return_label;
  }
  else ;
  
#line 11920 
  pci_restore_state(pdev);
  
#line 11928 
  pci_read_config_dword((struct pci_dev const *)pdev,64,& val);
  
#line 11929 
  if ((val & 65280U) != 0U) 
#line 11930 
                            pci_write_config_dword((struct pci_dev const *)pdev,64,val & 4294902015U); else ;
  
#line 11934 
  netif_device_attach(dev);
  
#line 11936 
  tmp_0 = get_seconds();
  
#line 11936 
  priv->suspend_time = tmp_0 - priv->suspend_at;
  
#line 11939 
  ldv_schedule_work_329(& priv->up);
  
#line 11941 
  __retres = 0;
  return_label: 
#line 11941 
                return __retres;
}


#line 11945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_pci_shutdown(struct pci_dev *pdev)
{
  
#line 11947 
  struct ipw_priv *priv = pci_get_drvdata(pdev);
  
#line 11950 
  ipw_down(priv);
  
#line 11952 
  pci_disable_device(pdev);
  
#line 11953 
  return;
}


#line 11956  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static struct pci_driver ipw_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "ipw2200", .id_table = (struct pci_device_id const *)(& card_ids), .probe = & ipw_pci_probe, .remove = & ipw_pci_remove, .suspend = & ipw_pci_suspend, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = & ipw_pci_resume, .shutdown = & ipw_pci_shutdown, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = (struct pci_error_handlers const *)0, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = (struct dev_pm_ops const *)0, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 11968  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static int ipw_init(void)
{
  int __retres;
  int ret;
  
#line 11972 
  printk("\001");
  
#line 11973 
  printk("\001");
  
#line 11975 
  ret = ldv___pci_register_driver_330(& ipw_driver,& __this_module,"ipw2200");
  
#line 11976 
  if (ret != 0) {
    
#line 11977 
    printk("\001");
    
#line 11978 
    __retres = ret;
    
#line 11978 
    goto return_label;
  }
  else ;
  
#line 11981 
  ret = driver_create_file(& ipw_driver.driver,(struct driver_attribute const *)(& driver_attr_debug_level));
  
#line 11982 
  if (ret != 0) {
    
#line 11983 
    printk("\001");
    
#line 11984 
    ldv_pci_unregister_driver_331(& ipw_driver);
    
#line 11985 
    __retres = ret;
    
#line 11985 
    goto return_label;
  }
  else ;
  
#line 11988 
  __retres = ret;
  return_label: 
#line 11988 
                return __retres;
}


#line 11991  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2200.c"
static void ipw_exit(void)
{
  
#line 11993 
  driver_remove_file(& ipw_driver.driver,(struct driver_attribute const *)(& driver_attr_debug_level));
  
#line 11994 
  ldv_pci_unregister_driver_332(& ipw_driver);
  
#line 11995 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
struct pci_driver *ldv_emg_alias_ipw_driver_2 = & ipw_driver;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
int (*ldv_emg_alias_eth_validate_addr_8)(struct net_device *) = & eth_validate_addr;

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
int (*ldv_emg_alias_eth_mac_addr_10)(struct net_device *, void *) = & eth_mac_addr;

#line 59  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
enum netdev_tx (*ldv_emg_alias_libipw_xmit_9)(struct sk_buff *, struct net_device *) = & libipw_xmit;

#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
void (*ldv_emg_alias_None_2)(unsigned long ) = (void (*)(unsigned long ))(& ipw_irq_tasklet);

#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
int (*ldv_emg_alias_libipw_change_mtu_5)(struct net_device *, int ) = & libipw_change_mtu;

#line 64 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 65 
_Bool ldv_emg_schedule_delayed_work(struct delayed_work *arg0, unsigned long arg1);


#line 66 
_Bool ldv_emg_schedule_work(struct work_struct *arg0);


#line 67 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 68 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 69 
void ldv_emg_tasklet_init(struct tasklet_struct *arg0, void (*arg1)(unsigned long ), unsigned long arg2);


#line 70 
void ldv_emg_tasklet_schedule(struct tasklet_struct *arg0);


#line 71 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 72 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 73 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 77  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
void ldv_emg_ipw_exit(void)
{
  
#line 78 
  ipw_exit();
  
#line 79 
  return;
}


#line 81  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
void ldv_emg_wrapper_ipw_ethtool_get_drvinfo_3(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 82 
  ipw_ethtool_get_drvinfo(arg0,arg1);
  
#line 83 
  return;
}


#line 86  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
int ldv_emg_wrapper_ipw_prom_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 87 
  tmp = ipw_prom_open(arg0);
  
#line 87 
  return tmp;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
enum irqreturn ldv_emg_wrapper_ipw_isr_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 92 
  tmp = ipw_isr(arg0,arg1);
  
#line 92 
  return tmp;
}


#line 96  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
void ldv_emg_wrapper_ipw_pci_shutdown_2(struct pci_dev *arg0)
{
  
#line 97 
  ipw_pci_shutdown(arg0);
  
#line 98 
  return;
}


#line 101  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
int ldv_emg_wrapper_ipw_pci_probe_3(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 102 
  tmp = ipw_pci_probe(arg0,(struct pci_device_id const *)arg1);
  
#line 102 
  return tmp;
}


#line 106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
int ldv_emg_wrapper_ipw_pci_suspend_4(struct pci_dev *arg0, struct pm_message arg1)
{
  int tmp;
  
#line 107 
  tmp = ipw_pci_suspend(arg0,arg1);
  
#line 107 
  return tmp;
}


#line 111  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
void ldv_emg_wrapper_ipw_pci_remove_5(struct pci_dev *arg0)
{
  
#line 112 
  ipw_pci_remove(arg0);
  
#line 113 
  return;
}


#line 116  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
int ldv_emg_wrapper_ipw_ethtool_get_eeprom_len_11(struct net_device *arg0)
{
  int tmp;
  
#line 117 
  tmp = ipw_ethtool_get_eeprom_len(arg0);
  
#line 117 
  return tmp;
}


#line 121  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
int ldv_emg_wrapper_ipw_ethtool_get_eeprom_2(struct net_device *arg0, struct ethtool_eeprom *arg1, unsigned char *arg2)
{
  int tmp;
  
#line 122 
  tmp = ipw_ethtool_get_eeprom(arg0,arg1,arg2);
  
#line 122 
  return tmp;
}


#line 126  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
unsigned int ldv_emg_wrapper_ipw_ethtool_get_link_4(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 127 
  tmp = ipw_ethtool_get_link(arg0);
  
#line 127 
  return tmp;
}


#line 131  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
int ldv_emg_wrapper_ipw_net_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 132 
  tmp = ipw_net_open(arg0);
  
#line 132 
  return tmp;
}


#line 136  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
int ldv_emg_wrapper_ipw_pci_resume_6(struct pci_dev *arg0)
{
  int tmp;
  
#line 137 
  tmp = ipw_pci_resume(arg0);
  
#line 137 
  return tmp;
}


#line 141  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
int ldv_emg_wrapper_ipw_net_stop_2(struct net_device *arg0)
{
  int tmp;
  
#line 142 
  tmp = ipw_net_stop(arg0);
  
#line 142 
  return tmp;
}


#line 146  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
int ldv_emg_wrapper_ipw_ethtool_set_eeprom_6(struct net_device *arg0, struct ethtool_eeprom *arg1, unsigned char *arg2)
{
  int tmp;
  
#line 147 
  tmp = ipw_ethtool_set_eeprom(arg0,arg1,arg2);
  
#line 147 
  return tmp;
}


#line 151  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
int ldv_emg_wrapper_ipw_prom_stop_2(struct net_device *arg0)
{
  int tmp;
  
#line 152 
  tmp = ipw_prom_stop(arg0);
  
#line 152 
  return tmp;
}


#line 156  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
void ldv_emg_wrapper_ipw_net_set_multicast_list_7(struct net_device *arg0)
{
  
#line 157 
  ipw_net_set_multicast_list(arg0);
  
#line 158 
  return;
}


#line 161  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
int ldv_emg_ipw_init(void)
{
  int tmp;
  
#line 162 
  tmp = ipw_init();
  
#line 162 
  return tmp;
}


#line 498  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 501 
  tmp = ldv_kmalloc(size,flags);
  
#line 501 
  return tmp;
}


#line 512  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 515 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 515 
  return tmp;
}


#line 519  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 522 
  tmp = ldv_kzalloc(size,flags);
  
#line 522 
  return tmp;
}


#line 836  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv___ldv_spin_lock_72(spinlock_t *ldv_func_arg1)
{
  
#line 840 
  ldv_spin_model_lock((char *)"irq_lock_of_ipw_priv");
  
#line 842 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 843 
  return;
}


#line 846  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_73(spinlock_t *lock, unsigned long flags)
{
  
#line 850 
  ldv_spin_model_unlock((char *)"irq_lock_of_ipw_priv");
  
#line 852 
  spin_unlock_irqrestore(lock,flags);
  
#line 853 
  return;
}


#line 856  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv___ldv_spin_lock_74(spinlock_t *ldv_func_arg1)
{
  
#line 860 
  ldv_spin_model_lock((char *)"irq_lock_of_ipw_priv");
  
#line 862 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 863 
  return;
}


#line 866  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_75(spinlock_t *lock, unsigned long flags)
{
  
#line 870 
  ldv_spin_model_unlock((char *)"irq_lock_of_ipw_priv");
  
#line 872 
  spin_unlock_irqrestore(lock,flags);
  
#line 873 
  return;
}


#line 876  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv___ldv_spin_lock_76(spinlock_t *ldv_func_arg1)
{
  
#line 880 
  ldv_spin_model_lock((char *)"lock_of_ipw_priv");
  
#line 882 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 883 
  return;
}


#line 886  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_delayed_work_77(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 890 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 890 
  __retres = tmp != 0;
  
#line 890 
  return __retres;
}


#line 894  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_78(spinlock_t *lock, unsigned long flags)
{
  
#line 898 
  ldv_spin_model_unlock((char *)"lock_of_ipw_priv");
  
#line 900 
  spin_unlock_irqrestore(lock,flags);
  
#line 901 
  return;
}


#line 904  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_79(struct mutex *ldv_func_arg1)
{
  
#line 908 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 909 
  return;
}


#line 912  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_80(struct mutex *ldv_func_arg1)
{
  
#line 916 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 917 
  return;
}


#line 920  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv___ldv_spin_lock_81(spinlock_t *ldv_func_arg1)
{
  
#line 924 
  ldv_spin_model_lock((char *)"lock_of_ipw_priv");
  
#line 926 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 927 
  return;
}


#line 930  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_delayed_work_82(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 934 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 934 
  __retres = tmp != 0;
  
#line 934 
  return __retres;
}


#line 938  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_83(spinlock_t *lock, unsigned long flags)
{
  
#line 942 
  ldv_spin_model_unlock((char *)"lock_of_ipw_priv");
  
#line 944 
  spin_unlock_irqrestore(lock,flags);
  
#line 945 
  return;
}


#line 948  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_84(struct mutex *ldv_func_arg1)
{
  
#line 952 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 953 
  return;
}


#line 956  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_85(struct mutex *ldv_func_arg1)
{
  
#line 960 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 961 
  return;
}


#line 964  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_delayed_work_86(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 968 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 968 
  __retres = tmp != 0;
  
#line 968 
  return __retres;
}


#line 972  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_delayed_work_87(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 976 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 976 
  __retres = tmp != 0;
  
#line 976 
  return __retres;
}


#line 980  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv___ldv_spin_lock_88(spinlock_t *ldv_func_arg1)
{
  
#line 984 
  ldv_spin_model_lock((char *)"lock_of_ipw_priv");
  
#line 986 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 987 
  return;
}


#line 990  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_89(spinlock_t *lock, unsigned long flags)
{
  
#line 994 
  ldv_spin_model_unlock((char *)"lock_of_ipw_priv");
  
#line 996 
  spin_unlock_irqrestore(lock,flags);
  
#line 997 
  return;
}


#line 1000  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_90(struct mutex *ldv_func_arg1)
{
  
#line 1004 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1005 
  return;
}


#line 1008  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_91(struct mutex *ldv_func_arg1)
{
  
#line 1012 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1013 
  return;
}


#line 1016  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv___ldv_spin_lock_92(spinlock_t *ldv_func_arg1)
{
  
#line 1020 
  ldv_spin_model_lock((char *)"lock_of_ipw_priv");
  
#line 1022 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1023 
  return;
}


#line 1026  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_93(spinlock_t *lock, unsigned long flags)
{
  
#line 1030 
  ldv_spin_model_unlock((char *)"lock_of_ipw_priv");
  
#line 1032 
  spin_unlock_irqrestore(lock,flags);
  
#line 1033 
  return;
}


#line 1036  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv___ldv_spin_lock_94(spinlock_t *ldv_func_arg1)
{
  
#line 1040 
  ldv_spin_model_lock((char *)"lock_of_ipw_priv");
  
#line 1042 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1043 
  return;
}


#line 1046  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_95(spinlock_t *lock, unsigned long flags)
{
  
#line 1050 
  ldv_spin_model_unlock((char *)"lock_of_ipw_priv");
  
#line 1052 
  spin_unlock_irqrestore(lock,flags);
  
#line 1053 
  return;
}


#line 1056  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_96(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1060 
  tmp = ldv_emg_schedule_work(work);
  
#line 1060 
  __retres = tmp != 0;
  
#line 1060 
  return __retres;
}


#line 1064  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_delayed_work_97(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1068 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 1068 
  __retres = tmp != 0;
  
#line 1068 
  return __retres;
}


#line 1072  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_98(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1076 
  tmp = ldv_emg_schedule_work(work);
  
#line 1076 
  __retres = tmp != 0;
  
#line 1076 
  return __retres;
}


#line 1080  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv___ldv_spin_lock_99(spinlock_t *ldv_func_arg1)
{
  
#line 1084 
  ldv_spin_model_lock((char *)"irq_lock_of_ipw_priv");
  
#line 1086 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1087 
  return;
}


#line 1090  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_100(spinlock_t *lock, unsigned long flags)
{
  
#line 1094 
  ldv_spin_model_unlock((char *)"irq_lock_of_ipw_priv");
  
#line 1096 
  spin_unlock_irqrestore(lock,flags);
  
#line 1097 
  return;
}


#line 1100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv___ldv_spin_lock_101(spinlock_t *ldv_func_arg1)
{
  
#line 1104 
  ldv_spin_model_lock((char *)"lock_of_ipw_priv");
  
#line 1106 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1107 
  return;
}


#line 1110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_102(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1114 
  tmp = ldv_emg_schedule_work(work);
  
#line 1114 
  __retres = tmp != 0;
  
#line 1114 
  return __retres;
}


#line 1118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_delayed_work_103(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1122 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 1122 
  __retres = tmp != 0;
  
#line 1122 
  return __retres;
}


#line 1126  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_104(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1130 
  tmp = ldv_emg_schedule_work(work);
  
#line 1130 
  __retres = tmp != 0;
  
#line 1130 
  return __retres;
}


#line 1134  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_105(spinlock_t *lock, unsigned long flags)
{
  
#line 1138 
  ldv_spin_model_unlock((char *)"lock_of_ipw_priv");
  
#line 1140 
  spin_unlock_irqrestore(lock,flags);
  
#line 1141 
  return;
}


#line 1144  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv___ldv_spin_lock_106(spinlock_t *ldv_func_arg1)
{
  
#line 1148 
  ldv_spin_model_lock((char *)"lock_of_ipw_priv");
  
#line 1150 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1151 
  return;
}


#line 1154  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_107(spinlock_t *lock, unsigned long flags)
{
  
#line 1158 
  ldv_spin_model_unlock((char *)"lock_of_ipw_priv");
  
#line 1160 
  spin_unlock_irqrestore(lock,flags);
  
#line 1161 
  return;
}


#line 1164  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_108(spinlock_t *lock, unsigned long flags)
{
  
#line 1168 
  ldv_spin_model_unlock((char *)"lock_of_ipw_priv");
  
#line 1170 
  spin_unlock_irqrestore(lock,flags);
  
#line 1171 
  return;
}


#line 1174  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_109(spinlock_t *lock, unsigned long flags)
{
  
#line 1178 
  ldv_spin_model_unlock((char *)"lock_of_ipw_priv");
  
#line 1180 
  spin_unlock_irqrestore(lock,flags);
  
#line 1181 
  return;
}


#line 1184  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv___ldv_spin_lock_110(spinlock_t *ldv_func_arg1)
{
  
#line 1188 
  ldv_spin_model_lock((char *)"lock_of_ipw_priv");
  
#line 1190 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1191 
  return;
}


#line 1194  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_111(spinlock_t *lock, unsigned long flags)
{
  
#line 1198 
  ldv_spin_model_unlock((char *)"lock_of_ipw_priv");
  
#line 1200 
  spin_unlock_irqrestore(lock,flags);
  
#line 1201 
  return;
}


#line 1204  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_112(spinlock_t *lock, unsigned long flags)
{
  
#line 1208 
  ldv_spin_model_unlock((char *)"lock_of_ipw_priv");
  
#line 1210 
  spin_unlock_irqrestore(lock,flags);
  
#line 1211 
  return;
}


#line 1214  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_113(struct mutex *ldv_func_arg1)
{
  
#line 1218 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1219 
  return;
}


#line 1222  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_114(struct mutex *ldv_func_arg1)
{
  
#line 1226 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1227 
  return;
}


#line 1230  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_115(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1234 
  tmp = ldv_emg_schedule_work(work);
  
#line 1234 
  __retres = tmp != 0;
  
#line 1234 
  return __retres;
}


#line 1238  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_delayed_work_116(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1242 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 1242 
  __retres = tmp != 0;
  
#line 1242 
  return __retres;
}


#line 1246  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_117(struct mutex *ldv_func_arg1)
{
  
#line 1250 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1251 
  return;
}


#line 1254  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_118(struct mutex *ldv_func_arg1)
{
  
#line 1258 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1259 
  return;
}


#line 1262  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv___ldv_spin_lock_119(spinlock_t *ldv_func_arg1)
{
  
#line 1266 
  ldv_spin_model_lock((char *)"lock_of_libipw_device");
  
#line 1268 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1269 
  return;
}


#line 1272  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_120(spinlock_t *lock, unsigned long flags)
{
  
#line 1276 
  ldv_spin_model_unlock((char *)"lock_of_libipw_device");
  
#line 1278 
  spin_unlock_irqrestore(lock,flags);
  
#line 1279 
  return;
}


#line 1282  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv___ldv_spin_lock_121(spinlock_t *ldv_func_arg1)
{
  
#line 1286 
  ldv_spin_model_lock((char *)"lock_of_ipw_priv");
  
#line 1288 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1289 
  return;
}


#line 1292  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_122(spinlock_t *lock, unsigned long flags)
{
  
#line 1296 
  ldv_spin_model_unlock((char *)"lock_of_ipw_priv");
  
#line 1298 
  spin_unlock_irqrestore(lock,flags);
  
#line 1299 
  return;
}


#line 1302  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv___ldv_spin_lock_123(spinlock_t *ldv_func_arg1)
{
  
#line 1306 
  ldv_spin_model_lock((char *)"lock_of_ipw_rx_queue");
  
#line 1308 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1309 
  return;
}


#line 1312  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_124(spinlock_t *lock, unsigned long flags)
{
  
#line 1316 
  ldv_spin_model_unlock((char *)"lock_of_ipw_rx_queue");
  
#line 1318 
  spin_unlock_irqrestore(lock,flags);
  
#line 1319 
  return;
}


#line 1322  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_125(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1326 
  tmp = ldv_emg_schedule_work(work);
  
#line 1326 
  __retres = tmp != 0;
  
#line 1326 
  return __retres;
}


#line 1330  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_126(struct mutex *ldv_func_arg1)
{
  
#line 1334 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1335 
  return;
}


#line 1338  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_127(struct mutex *ldv_func_arg1)
{
  
#line 1342 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1343 
  return;
}


#line 1346  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_delayed_work_128(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1350 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 1350 
  __retres = tmp != 0;
  
#line 1350 
  return __retres;
}


#line 1354  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_129(struct mutex *ldv_func_arg1)
{
  
#line 1358 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1359 
  return;
}


#line 1362  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_130(struct mutex *ldv_func_arg1)
{
  
#line 1366 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1367 
  return;
}


#line 1370  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_131(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1374 
  tmp = ldv_emg_schedule_work(work);
  
#line 1374 
  __retres = tmp != 0;
  
#line 1374 
  return __retres;
}


#line 1378  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_132(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1382 
  tmp = ldv_emg_schedule_work(work);
  
#line 1382 
  __retres = tmp != 0;
  
#line 1382 
  return __retres;
}


#line 1386  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_delayed_work_133(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1390 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 1390 
  __retres = tmp != 0;
  
#line 1390 
  return __retres;
}


#line 1394  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_134(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1398 
  tmp = ldv_emg_schedule_work(work);
  
#line 1398 
  __retres = tmp != 0;
  
#line 1398 
  return __retres;
}


#line 1402  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_delayed_work_135(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1406 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 1406 
  __retres = tmp != 0;
  
#line 1406 
  return __retres;
}


#line 1410  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_delayed_work_136(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1414 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 1414 
  __retres = tmp != 0;
  
#line 1414 
  return __retres;
}


#line 1418  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_137(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1422 
  tmp = ldv_emg_schedule_work(work);
  
#line 1422 
  __retres = tmp != 0;
  
#line 1422 
  return __retres;
}


#line 1426  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_138(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1430 
  tmp = ldv_emg_schedule_work(work);
  
#line 1430 
  __retres = tmp != 0;
  
#line 1430 
  return __retres;
}


#line 1434  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_139(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1438 
  tmp = ldv_emg_schedule_work(work);
  
#line 1438 
  __retres = tmp != 0;
  
#line 1438 
  return __retres;
}


#line 1442  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_140(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1446 
  tmp = ldv_emg_schedule_work(work);
  
#line 1446 
  __retres = tmp != 0;
  
#line 1446 
  return __retres;
}


#line 1450  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_141(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1454 
  tmp = ldv_emg_schedule_work(work);
  
#line 1454 
  __retres = tmp != 0;
  
#line 1454 
  return __retres;
}


#line 1458  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_delayed_work_142(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1462 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 1462 
  __retres = tmp != 0;
  
#line 1462 
  return __retres;
}


#line 1466  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_delayed_work_143(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1470 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 1470 
  __retres = tmp != 0;
  
#line 1470 
  return __retres;
}


#line 1474  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_144(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1478 
  tmp = ldv_emg_schedule_work(work);
  
#line 1478 
  __retres = tmp != 0;
  
#line 1478 
  return __retres;
}


#line 1482  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_145(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1486 
  tmp = ldv_emg_schedule_work(work);
  
#line 1486 
  __retres = tmp != 0;
  
#line 1486 
  return __retres;
}


#line 1490  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_delayed_work_146(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1494 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 1494 
  __retres = tmp != 0;
  
#line 1494 
  return __retres;
}


#line 1498  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_delayed_work_147(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1502 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 1502 
  __retres = tmp != 0;
  
#line 1502 
  return __retres;
}


#line 1506  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv___ldv_spin_lock_148(spinlock_t *ldv_func_arg1)
{
  
#line 1510 
  ldv_spin_model_lock((char *)"lock_of_ipw_rx_queue");
  
#line 1512 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1513 
  return;
}


#line 1516  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_149(spinlock_t *lock, unsigned long flags)
{
  
#line 1520 
  ldv_spin_model_unlock((char *)"lock_of_ipw_rx_queue");
  
#line 1522 
  spin_unlock_irqrestore(lock,flags);
  
#line 1523 
  return;
}


#line 1526  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_150(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1530 
  tmp = ldv_emg_schedule_work(work);
  
#line 1530 
  __retres = tmp != 0;
  
#line 1530 
  return __retres;
}


#line 1534  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv___ldv_spin_lock_151(spinlock_t *ldv_func_arg1)
{
  
#line 1538 
  ldv_spin_model_lock((char *)"lock_of_ipw_rx_queue");
  
#line 1540 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1541 
  return;
}


#line 1544  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_152(spinlock_t *lock, unsigned long flags)
{
  
#line 1548 
  ldv_spin_model_unlock((char *)"lock_of_ipw_rx_queue");
  
#line 1550 
  spin_unlock_irqrestore(lock,flags);
  
#line 1551 
  return;
}


#line 1554  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_153(struct mutex *ldv_func_arg1)
{
  
#line 1558 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1559 
  return;
}


#line 1562  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_154(struct mutex *ldv_func_arg1)
{
  
#line 1566 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1567 
  return;
}


#line 1570  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv___ldv_spin_lock_155(spinlock_t *ldv_func_arg1)
{
  
#line 1574 
  ldv_spin_model_lock((char *)"lock_of_libipw_device");
  
#line 1576 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1577 
  return;
}


#line 1580  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_156(spinlock_t *lock, unsigned long flags)
{
  
#line 1584 
  ldv_spin_model_unlock((char *)"lock_of_libipw_device");
  
#line 1586 
  spin_unlock_irqrestore(lock,flags);
  
#line 1587 
  return;
}


#line 1590  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_157(struct mutex *ldv_func_arg1)
{
  
#line 1594 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1595 
  return;
}


#line 1598  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_158(struct mutex *ldv_func_arg1)
{
  
#line 1602 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1603 
  return;
}


#line 1606  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_delayed_work_159(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1610 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 1610 
  __retres = tmp != 0;
  
#line 1610 
  return __retres;
}


#line 1614  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_160(struct mutex *ldv_func_arg1)
{
  
#line 1618 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1619 
  return;
}


#line 1622  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_161(struct mutex *ldv_func_arg1)
{
  
#line 1626 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1627 
  return;
}


#line 1630  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_162(struct mutex *ldv_func_arg1)
{
  
#line 1634 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1635 
  return;
}


#line 1638  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_delayed_work_163(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1642 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 1642 
  __retres = tmp != 0;
  
#line 1642 
  return __retres;
}


#line 1646  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_164(struct mutex *ldv_func_arg1)
{
  
#line 1650 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1651 
  return;
}


#line 1654  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_165(struct mutex *ldv_func_arg1)
{
  
#line 1658 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1659 
  return;
}


#line 1662  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_166(struct mutex *ldv_func_arg1)
{
  
#line 1666 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1667 
  return;
}


#line 1670  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv___ldv_spin_lock_167(spinlock_t *ldv_func_arg1)
{
  
#line 1674 
  ldv_spin_model_lock((char *)"lock_of_libipw_device");
  
#line 1676 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1677 
  return;
}


#line 1680  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_168(spinlock_t *lock, unsigned long flags)
{
  
#line 1684 
  ldv_spin_model_unlock((char *)"lock_of_libipw_device");
  
#line 1686 
  spin_unlock_irqrestore(lock,flags);
  
#line 1687 
  return;
}


#line 1690  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_169(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1694 
  tmp = ldv_emg_schedule_work(work);
  
#line 1694 
  __retres = tmp != 0;
  
#line 1694 
  return __retres;
}


#line 1698  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_170(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1702 
  tmp = ldv_emg_schedule_work(work);
  
#line 1702 
  __retres = tmp != 0;
  
#line 1702 
  return __retres;
}


#line 1706  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_171(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1710 
  tmp = ldv_emg_schedule_work(work);
  
#line 1710 
  __retres = tmp != 0;
  
#line 1710 
  return __retres;
}


#line 1714  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv___ldv_spin_lock_172(spinlock_t *ldv_func_arg1)
{
  
#line 1718 
  ldv_spin_model_lock((char *)"lock_of_libipw_device");
  
#line 1720 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1721 
  return;
}


#line 1724  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_173(spinlock_t *lock, unsigned long flags)
{
  
#line 1728 
  ldv_spin_model_unlock((char *)"lock_of_libipw_device");
  
#line 1730 
  spin_unlock_irqrestore(lock,flags);
  
#line 1731 
  return;
}


#line 1734  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv___ldv_spin_lock_174(spinlock_t *ldv_func_arg1)
{
  
#line 1738 
  ldv_spin_model_lock((char *)"lock_of_libipw_device");
  
#line 1740 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1741 
  return;
}


#line 1744  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_175(spinlock_t *lock, unsigned long flags)
{
  
#line 1748 
  ldv_spin_model_unlock((char *)"lock_of_libipw_device");
  
#line 1750 
  spin_unlock_irqrestore(lock,flags);
  
#line 1751 
  return;
}


#line 1754  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_176(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1758 
  tmp = ldv_emg_schedule_work(work);
  
#line 1758 
  __retres = tmp != 0;
  
#line 1758 
  return __retres;
}


#line 1762  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_177(struct mutex *ldv_func_arg1)
{
  
#line 1766 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1767 
  return;
}


#line 1770  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_178(struct mutex *ldv_func_arg1)
{
  
#line 1774 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1775 
  return;
}


#line 1778  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv___ldv_spin_lock_179(spinlock_t *ldv_func_arg1)
{
  
#line 1782 
  ldv_spin_model_lock((char *)"lock_of_libipw_device");
  
#line 1784 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1785 
  return;
}


#line 1788  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_180(spinlock_t *lock, unsigned long flags)
{
  
#line 1792 
  ldv_spin_model_unlock((char *)"lock_of_libipw_device");
  
#line 1794 
  spin_unlock_irqrestore(lock,flags);
  
#line 1795 
  return;
}


#line 1798  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_181(struct mutex *ldv_func_arg1)
{
  
#line 1802 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1803 
  return;
}


#line 1806  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_182(struct mutex *ldv_func_arg1)
{
  
#line 1810 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1811 
  return;
}


#line 1814  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_183(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1818 
  tmp = ldv_emg_schedule_work(work);
  
#line 1818 
  __retres = tmp != 0;
  
#line 1818 
  return __retres;
}


#line 1822  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv___ldv_spin_lock_184(spinlock_t *ldv_func_arg1)
{
  
#line 1826 
  ldv_spin_model_lock((char *)"lock_of_libipw_device");
  
#line 1828 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1829 
  return;
}


#line 1832  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_185(spinlock_t *lock, unsigned long flags)
{
  
#line 1836 
  ldv_spin_model_unlock((char *)"lock_of_libipw_device");
  
#line 1838 
  spin_unlock_irqrestore(lock,flags);
  
#line 1839 
  return;
}


#line 1842  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_delayed_work_186(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1846 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 1846 
  __retres = tmp != 0;
  
#line 1846 
  return __retres;
}


#line 1850  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_delayed_work_187(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1854 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 1854 
  __retres = tmp != 0;
  
#line 1854 
  return __retres;
}


#line 1858  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_188(struct mutex *ldv_func_arg1)
{
  
#line 1862 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1863 
  return;
}


#line 1866  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_189(struct mutex *ldv_func_arg1)
{
  
#line 1870 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1871 
  return;
}


#line 1874  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_190(struct mutex *ldv_func_arg1)
{
  
#line 1878 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1879 
  return;
}


#line 1882  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_191(struct mutex *ldv_func_arg1)
{
  
#line 1886 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1887 
  return;
}


#line 1890  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_192(struct mutex *ldv_func_arg1)
{
  
#line 1894 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1895 
  return;
}


#line 1898  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_193(struct mutex *ldv_func_arg1)
{
  
#line 1902 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1903 
  return;
}


#line 1906  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_194(struct mutex *ldv_func_arg1)
{
  
#line 1910 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1911 
  return;
}


#line 1914  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_195(struct mutex *ldv_func_arg1)
{
  
#line 1918 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1919 
  return;
}


#line 1922  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_196(struct mutex *ldv_func_arg1)
{
  
#line 1926 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1927 
  return;
}


#line 1930  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_197(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1934 
  tmp = ldv_emg_schedule_work(work);
  
#line 1934 
  __retres = tmp != 0;
  
#line 1934 
  return __retres;
}


#line 1938  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_198(struct mutex *ldv_func_arg1)
{
  
#line 1942 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1943 
  return;
}


#line 1946  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_199(struct mutex *ldv_func_arg1)
{
  
#line 1950 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1951 
  return;
}


#line 1954  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_200(struct mutex *ldv_func_arg1)
{
  
#line 1958 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1959 
  return;
}


#line 1962  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_201(struct mutex *ldv_func_arg1)
{
  
#line 1966 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1967 
  return;
}


#line 1970  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_202(struct mutex *ldv_func_arg1)
{
  
#line 1974 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1975 
  return;
}


#line 1978  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_203(struct mutex *ldv_func_arg1)
{
  
#line 1982 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1983 
  return;
}


#line 1986  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_204(struct mutex *ldv_func_arg1)
{
  
#line 1990 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1991 
  return;
}


#line 1994  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_205(struct mutex *ldv_func_arg1)
{
  
#line 1998 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 1999 
  return;
}


#line 2002  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_206(struct mutex *ldv_func_arg1)
{
  
#line 2006 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2007 
  return;
}


#line 2010  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_207(struct mutex *ldv_func_arg1)
{
  
#line 2014 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2015 
  return;
}


#line 2018  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_208(struct mutex *ldv_func_arg1)
{
  
#line 2022 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2023 
  return;
}


#line 2026  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_209(struct mutex *ldv_func_arg1)
{
  
#line 2030 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2031 
  return;
}


#line 2034  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_210(struct mutex *ldv_func_arg1)
{
  
#line 2038 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2039 
  return;
}


#line 2042  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_211(struct mutex *ldv_func_arg1)
{
  
#line 2046 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2047 
  return;
}


#line 2050  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_212(struct mutex *ldv_func_arg1)
{
  
#line 2054 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2055 
  return;
}


#line 2058  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_213(struct mutex *ldv_func_arg1)
{
  
#line 2062 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2063 
  return;
}


#line 2066  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_214(struct mutex *ldv_func_arg1)
{
  
#line 2070 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2071 
  return;
}


#line 2074  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_215(struct mutex *ldv_func_arg1)
{
  
#line 2078 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2079 
  return;
}


#line 2082  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_216(struct mutex *ldv_func_arg1)
{
  
#line 2086 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2087 
  return;
}


#line 2090  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_217(struct mutex *ldv_func_arg1)
{
  
#line 2094 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2095 
  return;
}


#line 2098  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_218(struct mutex *ldv_func_arg1)
{
  
#line 2102 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2103 
  return;
}


#line 2106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_219(struct mutex *ldv_func_arg1)
{
  
#line 2110 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2111 
  return;
}


#line 2114  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_220(struct mutex *ldv_func_arg1)
{
  
#line 2118 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2119 
  return;
}


#line 2122  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_221(struct mutex *ldv_func_arg1)
{
  
#line 2126 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2127 
  return;
}


#line 2130  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_222(struct mutex *ldv_func_arg1)
{
  
#line 2134 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2135 
  return;
}


#line 2138  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_223(struct mutex *ldv_func_arg1)
{
  
#line 2142 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2143 
  return;
}


#line 2146  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_224(struct mutex *ldv_func_arg1)
{
  
#line 2150 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2151 
  return;
}


#line 2154  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_225(struct mutex *ldv_func_arg1)
{
  
#line 2158 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2159 
  return;
}


#line 2162  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_226(struct mutex *ldv_func_arg1)
{
  
#line 2166 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2167 
  return;
}


#line 2170  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_227(struct mutex *ldv_func_arg1)
{
  
#line 2174 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2175 
  return;
}


#line 2178  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_228(struct mutex *ldv_func_arg1)
{
  
#line 2182 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2183 
  return;
}


#line 2186  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_229(struct mutex *ldv_func_arg1)
{
  
#line 2190 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2191 
  return;
}


#line 2194  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_230(struct mutex *ldv_func_arg1)
{
  
#line 2198 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2199 
  return;
}


#line 2202  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_231(struct mutex *ldv_func_arg1)
{
  
#line 2206 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2207 
  return;
}


#line 2210  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_232(struct mutex *ldv_func_arg1)
{
  
#line 2214 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2215 
  return;
}


#line 2218  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_233(struct mutex *ldv_func_arg1)
{
  
#line 2222 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2223 
  return;
}


#line 2226  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_234(struct mutex *ldv_func_arg1)
{
  
#line 2230 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2231 
  return;
}


#line 2234  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_235(struct mutex *ldv_func_arg1)
{
  
#line 2238 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2239 
  return;
}


#line 2242  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_236(struct mutex *ldv_func_arg1)
{
  
#line 2246 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2247 
  return;
}


#line 2250  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_237(struct mutex *ldv_func_arg1)
{
  
#line 2254 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2255 
  return;
}


#line 2258  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_238(struct mutex *ldv_func_arg1)
{
  
#line 2262 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2263 
  return;
}


#line 2266  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_239(struct mutex *ldv_func_arg1)
{
  
#line 2270 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2271 
  return;
}


#line 2274  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_240(struct mutex *ldv_func_arg1)
{
  
#line 2278 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2279 
  return;
}


#line 2282  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_241(struct mutex *ldv_func_arg1)
{
  
#line 2286 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2287 
  return;
}


#line 2290  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_242(struct mutex *ldv_func_arg1)
{
  
#line 2294 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2295 
  return;
}


#line 2298  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_243(struct mutex *ldv_func_arg1)
{
  
#line 2302 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2303 
  return;
}


#line 2306  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_244(struct mutex *ldv_func_arg1)
{
  
#line 2310 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2311 
  return;
}


#line 2314  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_245(struct mutex *ldv_func_arg1)
{
  
#line 2318 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2319 
  return;
}


#line 2322  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_246(struct mutex *ldv_func_arg1)
{
  
#line 2326 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2327 
  return;
}


#line 2330  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_247(struct mutex *ldv_func_arg1)
{
  
#line 2334 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2335 
  return;
}


#line 2338  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_248(struct mutex *ldv_func_arg1)
{
  
#line 2342 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2343 
  return;
}


#line 2346  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_delayed_work_249(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 2350 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 2350 
  __retres = tmp != 0;
  
#line 2350 
  return __retres;
}


#line 2354  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_250(struct mutex *ldv_func_arg1)
{
  
#line 2358 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2359 
  return;
}


#line 2362  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_251(struct mutex *ldv_func_arg1)
{
  
#line 2366 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2367 
  return;
}


#line 2370  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_252(struct mutex *ldv_func_arg1)
{
  
#line 2374 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2375 
  return;
}


#line 2378  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_253(struct mutex *ldv_func_arg1)
{
  
#line 2382 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2383 
  return;
}


#line 2386  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_254(struct mutex *ldv_func_arg1)
{
  
#line 2390 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2391 
  return;
}


#line 2394  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_255(struct mutex *ldv_func_arg1)
{
  
#line 2398 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2399 
  return;
}


#line 2402  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_256(struct mutex *ldv_func_arg1)
{
  
#line 2406 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2407 
  return;
}


#line 2410  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_257(struct mutex *ldv_func_arg1)
{
  
#line 2414 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2415 
  return;
}


#line 2418  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_258(struct mutex *ldv_func_arg1)
{
  
#line 2422 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2423 
  return;
}


#line 2426  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_259(struct mutex *ldv_func_arg1)
{
  
#line 2430 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2431 
  return;
}


#line 2434  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_260(struct mutex *ldv_func_arg1)
{
  
#line 2438 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2439 
  return;
}


#line 2442  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_261(struct mutex *ldv_func_arg1)
{
  
#line 2446 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2447 
  return;
}


#line 2450  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_262(struct mutex *ldv_func_arg1)
{
  
#line 2454 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2455 
  return;
}


#line 2458  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_263(struct mutex *ldv_func_arg1)
{
  
#line 2462 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2463 
  return;
}


#line 2466  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_264(struct mutex *ldv_func_arg1)
{
  
#line 2470 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2471 
  return;
}


#line 2474  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_265(struct mutex *ldv_func_arg1)
{
  
#line 2478 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2479 
  return;
}


#line 2482  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_266(struct mutex *ldv_func_arg1)
{
  
#line 2486 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2487 
  return;
}


#line 2490  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_267(struct mutex *ldv_func_arg1)
{
  
#line 2494 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2495 
  return;
}


#line 2498  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_268(struct mutex *ldv_func_arg1)
{
  
#line 2502 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2503 
  return;
}


#line 2506  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_269(struct mutex *ldv_func_arg1)
{
  
#line 2510 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2511 
  return;
}


#line 2514  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_270(struct mutex *ldv_func_arg1)
{
  
#line 2518 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2519 
  return;
}


#line 2522  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_271(struct mutex *ldv_func_arg1)
{
  
#line 2526 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2527 
  return;
}


#line 2530  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_272(struct mutex *ldv_func_arg1)
{
  
#line 2534 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2535 
  return;
}


#line 2538  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_273(struct mutex *ldv_func_arg1)
{
  
#line 2542 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2543 
  return;
}


#line 2546  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_274(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 2550 
  tmp = ldv_emg_schedule_work(work);
  
#line 2550 
  __retres = tmp != 0;
  
#line 2550 
  return __retres;
}


#line 2554  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_275(struct mutex *ldv_func_arg1)
{
  
#line 2558 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2559 
  return;
}


#line 2562  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_276(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 2566 
  tmp = ldv_emg_schedule_work(work);
  
#line 2566 
  __retres = tmp != 0;
  
#line 2566 
  return __retres;
}


#line 2570  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_277(struct mutex *ldv_func_arg1)
{
  
#line 2574 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2575 
  return;
}


#line 2578  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_278(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 2582 
  tmp = ldv_emg_schedule_work(work);
  
#line 2582 
  __retres = tmp != 0;
  
#line 2582 
  return __retres;
}


#line 2586  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_279(struct mutex *ldv_func_arg1)
{
  
#line 2590 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2591 
  return;
}


#line 2594  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_280(struct mutex *ldv_func_arg1)
{
  
#line 2598 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2599 
  return;
}


#line 2602  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_281(struct mutex *ldv_func_arg1)
{
  
#line 2606 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2607 
  return;
}


#line 2610  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_282(struct mutex *ldv_func_arg1)
{
  
#line 2614 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2615 
  return;
}


#line 2618  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv___ldv_spin_lock_283(spinlock_t *ldv_func_arg1)
{
  
#line 2622 
  ldv_spin_model_lock((char *)"lock_of_ipw_priv");
  
#line 2624 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 2625 
  return;
}


#line 2628  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_284(spinlock_t *lock, unsigned long flags)
{
  
#line 2632 
  ldv_spin_model_unlock((char *)"lock_of_ipw_priv");
  
#line 2634 
  spin_unlock_irqrestore(lock,flags);
  
#line 2635 
  return;
}


#line 2638  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_285(struct mutex *ldv_func_arg1)
{
  
#line 2642 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2643 
  return;
}


#line 2646  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_286(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 2650 
  tmp = ldv_emg_schedule_work(work);
  
#line 2650 
  __retres = tmp != 0;
  
#line 2650 
  return __retres;
}


#line 2654  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_287(struct mutex *ldv_func_arg1)
{
  
#line 2658 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2659 
  return;
}


#line 2662  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_288(struct mutex *ldv_func_arg1)
{
  
#line 2666 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2667 
  return;
}


#line 2670  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_289(struct mutex *ldv_func_arg1)
{
  
#line 2674 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2675 
  return;
}


#line 2678  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_290(struct mutex *ldv_func_arg1)
{
  
#line 2682 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2683 
  return;
}


#line 2686  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_291(struct mutex *ldv_func_arg1)
{
  
#line 2690 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2691 
  return;
}


#line 2694  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_lock_292(spinlock_t *lock)
{
  
#line 2698 
  ldv_spin_model_lock((char *)"irq_lock_of_ipw_priv");
  
#line 2700 
  spin_lock(lock);
  
#line 2701 
  return;
}


#line 2704  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_tasklet_schedule_293(struct tasklet_struct *t)
{
  
#line 2708 
  ldv_emg_tasklet_schedule(t);
  
#line 2709 
  return;
}


#line 2712  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_294(spinlock_t *lock)
{
  
#line 2716 
  ldv_spin_model_unlock((char *)"irq_lock_of_ipw_priv");
  
#line 2718 
  spin_unlock(lock);
  
#line 2719 
  return;
}


#line 2722  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_295(spinlock_t *lock)
{
  
#line 2726 
  ldv_spin_model_unlock((char *)"irq_lock_of_ipw_priv");
  
#line 2728 
  spin_unlock(lock);
  
#line 2729 
  return;
}


#line 2732  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv___ldv_spin_lock_296(spinlock_t *ldv_func_arg1)
{
  
#line 2736 
  ldv_spin_model_lock((char *)"lock_of_ipw_priv");
  
#line 2738 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 2739 
  return;
}


#line 2742  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_delayed_work_297(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 2746 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 2746 
  __retres = tmp != 0;
  
#line 2746 
  return __retres;
}


#line 2750  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_298(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 2754 
  tmp = ldv_emg_schedule_work(work);
  
#line 2754 
  __retres = tmp != 0;
  
#line 2754 
  return __retres;
}


#line 2758  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_spin_unlock_irqrestore_299(spinlock_t *lock, unsigned long flags)
{
  
#line 2762 
  ldv_spin_model_unlock((char *)"lock_of_ipw_priv");
  
#line 2764 
  spin_unlock_irqrestore(lock,flags);
  
#line 2765 
  return;
}


#line 2768  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_300(struct mutex *ldv_func_arg1)
{
  
#line 2772 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2773 
  return;
}


#line 2776  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_301(struct mutex *ldv_func_arg1)
{
  
#line 2780 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2781 
  return;
}


#line 2784  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_delayed_work_302(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 2788 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 2788 
  __retres = tmp != 0;
  
#line 2788 
  return __retres;
}


#line 2792  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_303(struct mutex *ldv_func_arg1)
{
  
#line 2796 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2797 
  return;
}


#line 2800  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_304(struct mutex *ldv_func_arg1)
{
  
#line 2804 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2805 
  return;
}


#line 2808  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_delayed_work_305(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 2812 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 2812 
  __retres = tmp != 0;
  
#line 2812 
  return __retres;
}


#line 2816  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_306(struct mutex *ldv_func_arg1)
{
  
#line 2820 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2821 
  return;
}


#line 2824  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_307(struct mutex *ldv_func_arg1)
{
  
#line 2828 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2829 
  return;
}


#line 2832  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_tasklet_init_308(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3)
{
  
#line 2836 
  ldv_emg_tasklet_init(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 2837 
  return;
}


#line 2840  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_delayed_work_309(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 2844 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 2844 
  __retres = tmp != 0;
  
#line 2844 
  return __retres;
}


#line 2848  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_delayed_work_310(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 2852 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 2852 
  __retres = tmp != 0;
  
#line 2852 
  return __retres;
}


#line 2856  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_311(struct mutex *ldv_func_arg1)
{
  
#line 2860 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2861 
  return;
}


#line 2864  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_312(struct mutex *ldv_func_arg1)
{
  
#line 2868 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2869 
  return;
}


#line 2872  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_313(struct mutex *ldv_func_arg1)
{
  
#line 2876 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2877 
  return;
}


#line 2880  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_314(struct mutex *ldv_func_arg1)
{
  
#line 2884 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2885 
  return;
}


#line 2888  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static int ldv_register_netdev_315(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 2892 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 2892 
  return tmp;
}


#line 2896  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_unregister_netdev_316(struct net_device *ldv_func_arg1)
{
  
#line 2900 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 2901 
  return;
}


#line 2904  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static int ldv_request_irq_317(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 2908 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 2908 
  return tmp;
}


#line 2912  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_318(struct mutex *ldv_func_arg1)
{
  
#line 2916 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2917 
  return;
}


#line 2920  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_319(struct mutex *ldv_func_arg1)
{
  
#line 2924 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2925 
  return;
}


#line 2928  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_320(struct mutex *ldv_func_arg1)
{
  
#line 2932 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2933 
  return;
}


#line 2936  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_321(struct mutex *ldv_func_arg1)
{
  
#line 2940 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2941 
  return;
}


#line 2944  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static int ldv_register_netdev_322(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 2948 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 2948 
  return tmp;
}


#line 2952  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_unregister_netdev_323(struct net_device *ldv_func_arg1)
{
  
#line 2956 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 2957 
  return;
}


#line 2960  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_free_irq_324(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 2964 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 2965 
  return;
}


#line 2968  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_lock_325(struct mutex *ldv_func_arg1)
{
  
#line 2972 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2973 
  return;
}


#line 2976  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_mutex_unlock_326(struct mutex *ldv_func_arg1)
{
  
#line 2980 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mutex_of_ipw_priv");
  
#line 2981 
  return;
}


#line 2984  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_unregister_netdev_327(struct net_device *ldv_func_arg1)
{
  
#line 2988 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 2989 
  return;
}


#line 2992  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_free_irq_328(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 2996 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 2997 
  return;
}


#line 3000  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static bool ldv_schedule_work_329(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 3004 
  tmp = ldv_emg_schedule_work(work);
  
#line 3004 
  __retres = tmp != 0;
  
#line 3004 
  return __retres;
}


#line 3008  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static int ldv___pci_register_driver_330(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 3012 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 3012 
  return tmp;
}


#line 3016  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_pci_unregister_driver_331(struct pci_driver *ldv_func_arg1)
{
  
#line 3020 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 3021 
  return;
}


#line 3024  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/weaver/.tmp_ipw2200.c.aux"
static void ldv_pci_unregister_driver_332(struct pci_driver *ldv_func_arg1)
{
  
#line 3028 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 3029 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 28 
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_5_1(struct net_device *arg0);


#line 67 
int main(void);


#line 68 
void ldv_dispatch_deregister_3_1(struct pci_driver *arg0);


#line 73 
void ldv_dispatch_register_4_4(struct net_device *arg0);


#line 74 
void ldv_dispatch_irq_register_8_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 75 
void *ldv_interrupt_scenario_14(void *arg0);


#line 79 
void *ldv_pci_scenario_12(void *arg0);


#line 80 
void *ldv_random_allocationless_scenario_13(void *arg0);


#line 81 
void ldv_dispatch_register_6_3(struct pci_driver *arg0);


#line 83 
void *ldv_initialization_1(void *arg0);


#line 84 
void ldv_dispatch_irq_deregister_10_1(int arg0);


#line 88  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_14;

#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_12;

#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_13;

#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_5_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_13 *cf_arg_13;
  int tmp;
  
#line 97 
  tmp = ldv_undef_int();
  
#line 97 
  switch (tmp) {
    case 0: 
#line 98 
    ;
    
#line 99 
    ret = pthread_join(ldv_thread_13,(void **)0);
    
#line 100 
    __VERIFIER_assume(ret == 0);
    
#line 101 
    goto ldv_44680;
    default: 
#line 103 
    ;
    
#line 103 
    __VERIFIER_assume(0);
  }
  ldv_44680: 
#line 104 
  ;
  
#line 105 
  return;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_schedule_delayed_work(struct delayed_work *arg0, unsigned long arg1)
{
  _Bool __retres;
  struct work_struct *ldv_2_ldv_param_0_2;
  struct delayed_work *ldv_2_delayed_work;
  int tmp_0;
  
#line 117 
  tmp_0 = ldv_undef_int();
  
#line 117 
  if (tmp_0 != 0) {
    
#line 119 
    ldv_2_delayed_work = arg0;
    
#line 123 
    ldv_2_ldv_param_0_2 = (struct work_struct *)ldv_xmalloc_unknown_size(0UL);
    
#line 127 
    if (ldv_2_delayed_work->work.func != (void (*)(struct work_struct *))0) 
      
#line 129 
      (*(ldv_2_delayed_work->work.func))(ldv_2_ldv_param_0_2); else ;
    
#line 134 
    ldv_free((void *)ldv_2_ldv_param_0_2);
    
#line 138 
    __retres = (_Bool)1;
    
#line 138 
    goto return_label;
  }
  else {
    
#line 145 
    __retres = (_Bool)0;
    
#line 145 
    goto return_label;
  }
  return_label: 
#line 117 
                return __retres;
}


#line 155  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 158 
  ldv_initialize();
  
#line 161 
  ldv_initialization_1((void *)0);
  
#line 163 
  __retres = 0;
  
#line 163 
  return __retres;
}


#line 168  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_3_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_12 *cf_arg_12;
  int tmp;
  
#line 171 
  tmp = ldv_undef_int();
  
#line 171 
  switch (tmp) {
    case 0: 
#line 172 
    ;
    
#line 173 
    ret = pthread_join(ldv_thread_12,(void **)0);
    
#line 174 
    __VERIFIER_assume(ret == 0);
    
#line 175 
    goto ldv_44697;
    default: 
#line 177 
    ;
    
#line 177 
    __VERIFIER_assume(0);
  }
  ldv_44697: 
#line 178 
  ;
  
#line 179 
  return;
}


#line 183  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 186 
  struct pci_driver *ldv_6_pci_driver = ldv_emg_alias_ipw_driver_2;
  
#line 190 
  tmp_0 = ldv_undef_int();
  
#line 190 
  if (tmp_0 != 0) {
    
#line 192 
    ldv_6_pci_driver = arg0;
    
#line 196 
    ldv_dispatch_register_6_3(ldv_6_pci_driver);
    
#line 200 
    __retres = 0;
    
#line 200 
    goto return_label;
  }
  else {
    int tmp;
    
#line 207 
    tmp = ldv_undef_int_negative();
    
#line 207 
    __retres = tmp;
    
#line 207 
    goto return_label;
  }
  return_label: 
#line 190 
                return __retres;
}


#line 217  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_tasklet_init(struct tasklet_struct *arg0, void (*arg1)(unsigned long ), unsigned long arg2)
{
  
#line 222 
  arg0->func = arg1;
  
#line 223 
  arg0->data = arg2;
  
#line 224 
  arg0->count.counter = 0;
  
#line 228 
  goto return_label;
  return_label: 
#line 230 
                return;
}


#line 235  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_tasklet_schedule(struct tasklet_struct *arg0)
{
  unsigned long ldv_11_ldv_param_0_2;
  struct tasklet_struct *ldv_11_tasklet_struct;
  
#line 242 
  ldv_11_tasklet_struct = arg0;
  
#line 249 
  if (ldv_11_tasklet_struct->count.counter == 0) 
#line 251 
                                                 (*ldv_emg_alias_None_2)(ldv_11_ldv_param_0_2); else ;
  
#line 259 
  goto return_label;
  return_label: 
#line 261 
                return;
}


#line 266  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 269 
  struct pci_driver *ldv_3_pci_driver = ldv_emg_alias_ipw_driver_2;
  
#line 272 
  ldv_3_pci_driver = arg0;
  
#line 276 
  ldv_dispatch_deregister_3_1(ldv_3_pci_driver);
  
#line 280 
  goto return_label;
  return_label: 
#line 282 
                return;
}


#line 287  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_4_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_13 *cf_arg_13;
  int tmp;
  
#line 290 
  tmp = ldv_undef_int();
  
#line 290 
  switch (tmp) {
    case 0: 
#line 291 
    ;
    
#line 292 
    cf_arg_13 = (struct ldv_struct_random_allocationless_scenario_13 *)ldv_xmalloc(16UL);
    
#line 293 
    cf_arg_13->arg0 = arg0;
    
#line 294 
    ret = pthread_create(& ldv_thread_13,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_13,(void *)cf_arg_13);
    
#line 295 
    __VERIFIER_assume(ret == 0);
    
#line 296 
    goto ldv_44726;
    default: 
#line 298 
    ;
    
#line 298 
    __VERIFIER_assume(0);
  }
  ldv_44726: 
#line 299 
  ;
  
#line 300 
  return;
}


#line 304  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_8_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_14 *cf_arg_14;
  int tmp;
  
#line 307 
  tmp = ldv_undef_int();
  
#line 307 
  switch (tmp) {
    case 0: 
#line 308 
    ;
    
#line 309 
    cf_arg_14 = (struct ldv_struct_interrupt_scenario_14 *)ldv_xmalloc(32UL);
    
#line 310 
    cf_arg_14->arg0 = arg0;
    
#line 311 
    cf_arg_14->arg1 = arg1;
    
#line 312 
    cf_arg_14->arg2 = arg2;
    
#line 313 
    cf_arg_14->arg3 = arg3;
    
#line 314 
    ret = pthread_create(& ldv_thread_14,(pthread_attr_t const *)0,& ldv_interrupt_scenario_14,(void *)cf_arg_14);
    
#line 315 
    __VERIFIER_assume(ret == 0);
    
#line 316 
    goto ldv_44741;
    default: 
#line 318 
    ;
    
#line 318 
    __VERIFIER_assume(0);
  }
  ldv_44741: 
#line 319 
  ;
  
#line 320 
  return;
}


#line 324  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_10_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_10 *cf_arg_14;
  int tmp;
  
#line 327 
  tmp = ldv_undef_int();
  
#line 327 
  switch (tmp) {
    case 0: 
#line 328 
    ;
    
#line 329 
    ret = pthread_join(ldv_thread_14,(void **)0);
    
#line 330 
    __VERIFIER_assume(ret == 0);
    
#line 331 
    goto ldv_44749;
    default: 
#line 333 
    ;
    
#line 333 
    __VERIFIER_assume(0);
  }
  ldv_44749: 
#line 334 
  ;
  
#line 335 
  return;
}


#line 339  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_5_netdev;
  
#line 345 
  ldv_5_netdev = arg0;
  
#line 350 
  ldv_emg_wrapper_ipw_net_stop_2(ldv_5_netdev);
  
#line 354 
  ldv_dispatch_deregister_5_1(ldv_5_netdev);
  
#line 358 
  goto return_label;
  return_label: 
#line 360 
                return;
}


#line 365  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_10_line;
  
#line 371 
  ldv_10_line = (int)arg0;
  
#line 375 
  ldv_dispatch_irq_deregister_10_1(ldv_10_line);
  
#line 379 
  goto return_label;
  return_label: 
#line 381 
                return;
}


#line 386  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_8_line;
  void *ldv_8_data;
  enum irqreturn (*ldv_8_thread)(int , void *);
  int tmp_0;
  
#line 391 
  enum irqreturn (*ldv_8_callback)(int , void *) = & ldv_emg_wrapper_ipw_isr_2;
  
#line 396 
  tmp_0 = ldv_undef_int();
  
#line 396 
  if (tmp_0 != 0) {
    
#line 398 
    ldv_8_line = (int)arg0;
    
#line 399 
    ldv_8_callback = arg1;
    
#line 400 
    ldv_8_thread = (enum irqreturn (*)(int , void *))0;
    
#line 401 
    ldv_8_data = arg4;
    
#line 405 
    ldv_dispatch_irq_register_8_3(ldv_8_line,ldv_8_callback,ldv_8_thread,ldv_8_data);
    
#line 409 
    __retres = 0;
    
#line 409 
    goto return_label;
  }
  else {
    int tmp;
    
#line 416 
    tmp = ldv_undef_int_negative();
    
#line 416 
    __retres = tmp;
    
#line 416 
    goto return_label;
  }
  return_label: 
#line 396 
                return __retres;
}


#line 426  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_12(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_12_resource_1;
  struct pci_device_id *ldv_12_ldv_param_1_2;
  struct pm_message ldv_12_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 431 
  struct pci_driver *ldv_12_container = ldv_emg_alias_ipw_driver_2;
  
#line 432 
  int ldv_12_ret = ldv_undef_int();
  
#line 435 
  struct ldv_struct_pci_scenario_12 *data = (struct ldv_struct_pci_scenario_12 *)arg0;
  
#line 439 
  ldv_12_ret = ldv_undef_int();
  
#line 442 
  if (data != (struct ldv_struct_pci_scenario_12 *)0) {
    
#line 443 
    ldv_12_container = data->arg0;
    
#line 444 
    ldv_free((void *)data);
  }
  else ;
  
#line 455 
  goto ldv_main_12;
  
#line 457 
  __retres = (void *)0;
  
#line 457 
  goto return_label;
  ldv_main_12: 
#line 460 
  ;
  
#line 463 
  tmp_2 = ldv_undef_int();
  
#line 463 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 465 
    ldv_12_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 470 
    ldv_pre_probe();
    
#line 472 
    ldv_12_ret = ldv_emg_wrapper_ipw_pci_probe_3(ldv_12_resource_1,ldv_12_ldv_param_1_2);
    
#line 474 
    ldv_12_ret = ldv_post_probe(ldv_12_ret);
    
#line 478 
    ldv_free((void *)ldv_12_ldv_param_1_2);
    
#line 481 
    tmp_1 = ldv_undef_int();
    
#line 481 
    if (tmp_1 != 0) {
      
#line 483 
      __VERIFIER_assume(ldv_12_ret == 0);
      
#line 490 
      goto ldv_call_12;
    }
    else {
      
#line 494 
      __VERIFIER_assume(ldv_12_ret != 0);
      
#line 501 
      goto ldv_main_12;
    }
  }
  else {
    
#line 513 
    __retres = (void *)0;
    
#line 513 
    goto return_label;
  }
  
#line 516 
  __retres = (void *)0;
  
#line 516 
  goto return_label;
  ldv_call_12: 
#line 519 
  ;
  
#line 522 
  tmp_3 = ldv_undef_int();
  
#line 522 
  switch (tmp_3) {
    case 1: 
#line 523 
    ;
    
#line 532 
    goto ldv_call_12;
    case 2: 
#line 535 
    ;
    
#line 538 
    ldv_12_ret = ldv_emg_wrapper_ipw_pci_suspend_4(ldv_12_resource_1,ldv_12_resource_0);
    
#line 540 
    ldv_12_ret = ldv_filter_err_code(ldv_12_ret);
    
#line 544 
    if (ldv_12_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 546 
      ldv_12_ret = (*(ldv_12_container->suspend_late))(ldv_12_resource_1,ldv_12_resource_0);
      
#line 548 
      ldv_12_ret = ldv_filter_err_code(ldv_12_ret);
    }
    else 
#line 550 
         ldv_12_ret = ldv_undef_int();
    
#line 555 
    if (ldv_12_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 557 
      (*(ldv_12_container->resume_early))(ldv_12_resource_1); else ;
    
#line 563 
    ldv_emg_wrapper_ipw_pci_resume_6(ldv_12_resource_1);
    
#line 570 
    goto ldv_call_12;
    case 3: 
#line 573 
    ;
    
#line 576 
    ldv_emg_wrapper_ipw_pci_shutdown_2(ldv_12_resource_1);
    
#line 581 
    ldv_emg_wrapper_ipw_pci_remove_5(ldv_12_resource_1);
    
#line 588 
    goto ldv_main_12;
    default: 
#line 591 
    ;
    
#line 591 
    __VERIFIER_assume(0);
  }
  
#line 594 
  __retres = (void *)0;
  return_label: 
#line 594 
                return __retres;
}


#line 599  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_6_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_12 *cf_arg_12;
  int tmp;
  
#line 602 
  tmp = ldv_undef_int();
  
#line 602 
  switch (tmp) {
    case 0: 
#line 603 
    ;
    
#line 604 
    cf_arg_12 = (struct ldv_struct_pci_scenario_12 *)ldv_xmalloc(16UL);
    
#line 605 
    cf_arg_12->arg0 = arg0;
    
#line 606 
    ret = pthread_create(& ldv_thread_12,(pthread_attr_t const *)0,& ldv_pci_scenario_12,(void *)cf_arg_12);
    
#line 607 
    __VERIFIER_assume(ret == 0);
    
#line 608 
    goto ldv_44798;
    default: 
#line 610 
    ;
    
#line 610 
    __VERIFIER_assume(0);
  }
  ldv_44798: 
#line 611 
  ;
  
#line 612 
  return;
}


#line 616  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_13(void *arg0)
{
  void *__retres;
  unsigned char *ldv_13_ldv_param_2_3;
  struct ethtool_eeprom *ldv_13_ldv_param_1_2;
  struct ethtool_drvinfo *ldv_13_ldv_param_1_4;
  struct ethtool_eeprom *ldv_13_ldv_param_1_5;
  unsigned char *ldv_13_ldv_param_2_6;
  int ldv_13_ldv_param_1_7;
  struct sk_buff *ldv_13_ldv_param_0_8;
  struct net_device *ldv_13_container;
  void *ldv_13_ldv_param_1_9;
  int tmp_6;
  
#line 629 
  struct ldv_struct_random_allocationless_scenario_13 *data = (struct ldv_struct_random_allocationless_scenario_13 *)arg0;
  
#line 634 
  if (data != (struct ldv_struct_random_allocationless_scenario_13 *)0) {
    
#line 635 
    ldv_13_container = data->arg0;
    
#line 636 
    ldv_free((void *)data);
  }
  else ;
  
#line 644 
  goto ldv_call_13;
  
#line 646 
  __retres = (void *)0;
  
#line 646 
  goto return_label;
  ldv_call_13: 
#line 649 
  ;
  
#line 652 
  tmp_6 = ldv_undef_int();
  
#line 652 
  if (tmp_6 != 0) {
    int tmp_1;
    
#line 654 
    ldv_13_ldv_param_2_3 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
    
#line 655 
    ldv_13_ldv_param_1_2 = (struct ethtool_eeprom *)ldv_xmalloc_unknown_size(0UL);
    
#line 658 
    tmp_1 = ldv_undef_int();
    
#line 658 
    switch (tmp_1) {
      case 1: 
#line 659 
      ;
      
#line 662 
      ldv_emg_wrapper_ipw_ethtool_get_eeprom_2(ldv_13_container,ldv_13_ldv_param_1_2,ldv_13_ldv_param_2_3);
      
#line 665 
      goto ldv_44815;
      case 2: 
#line 667 
      ;
      
#line 670 
      ldv_emg_wrapper_ipw_net_set_multicast_list_7(ldv_13_container);
      
#line 673 
      goto ldv_44815;
      case 3: 
#line 675 
      ;
      
#line 677 
      ldv_13_ldv_param_1_9 = ldv_xmalloc_unknown_size(0UL);
      
#line 682 
      (*ldv_emg_alias_eth_mac_addr_10)(ldv_13_container,ldv_13_ldv_param_1_9);
      
#line 686 
      ldv_free(ldv_13_ldv_param_1_9);
      
#line 689 
      goto ldv_44815;
      case 4: 
#line 691 
      ;
      
#line 693 
      ldv_13_ldv_param_0_8 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 698 
      (*ldv_emg_alias_libipw_xmit_9)(ldv_13_ldv_param_0_8,ldv_13_container);
      
#line 702 
      ldv_free((void *)ldv_13_ldv_param_0_8);
      
#line 705 
      goto ldv_44815;
      case 5: 
#line 707 
      ;
      
#line 713 
      (*ldv_emg_alias_libipw_change_mtu_5)(ldv_13_container,ldv_13_ldv_param_1_7);
      
#line 719 
      goto ldv_44815;
      case 6: 
#line 721 
      ;
      
#line 724 
      ldv_emg_wrapper_ipw_ethtool_get_eeprom_len_11(ldv_13_container);
      
#line 727 
      goto ldv_44815;
      case 7: 
#line 729 
      ;
      
#line 732 
      (*ldv_emg_alias_eth_validate_addr_8)(ldv_13_container);
      
#line 735 
      goto ldv_44815;
      case 8: 
#line 737 
      ;
      
#line 739 
      ldv_13_ldv_param_2_6 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 740 
      ldv_13_ldv_param_1_5 = (struct ethtool_eeprom *)ldv_xmalloc_unknown_size(0UL);
      
#line 745 
      ldv_emg_wrapper_ipw_ethtool_set_eeprom_6(ldv_13_container,ldv_13_ldv_param_1_5,ldv_13_ldv_param_2_6);
      
#line 749 
      ldv_free((void *)ldv_13_ldv_param_2_6);
      
#line 750 
      ldv_free((void *)ldv_13_ldv_param_1_5);
      
#line 753 
      goto ldv_44815;
      case 9: 
#line 755 
      ;
      
#line 758 
      ldv_emg_wrapper_ipw_ethtool_get_link_4(ldv_13_container);
      
#line 761 
      goto ldv_44815;
      case 10: 
#line 763 
      ;
      
#line 765 
      ldv_13_ldv_param_1_4 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 770 
      ldv_emg_wrapper_ipw_ethtool_get_drvinfo_3(ldv_13_container,ldv_13_ldv_param_1_4);
      
#line 774 
      ldv_free((void *)ldv_13_ldv_param_1_4);
      
#line 777 
      goto ldv_44815;
      default: 
#line 779 
      ;
      
#line 779 
      __VERIFIER_assume(0);
    }
    ldv_44815: 
#line 782 
    ;
    
#line 782 
    ldv_free((void *)ldv_13_ldv_param_2_3);
    
#line 783 
    ldv_free((void *)ldv_13_ldv_param_1_2);
    
#line 790 
    goto ldv_call_13;
  }
  else {
    
#line 798 
    __retres = (void *)0;
    
#line 798 
    goto return_label;
  }
  
#line 801 
  __retres = (void *)0;
  return_label: 
#line 801 
                return __retres;
}


#line 806  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_schedule_work(struct work_struct *arg0)
{
  _Bool __retres;
  struct work_struct *ldv_7_work_struct;
  int tmp;
  
#line 813 
  tmp = ldv_undef_int();
  
#line 813 
  if (tmp != 0) {
    
#line 815 
    ldv_7_work_struct = arg0;
    
#line 819 
    if (ldv_7_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 821 
      (*(ldv_7_work_struct->func))(ldv_7_work_struct); else ;
    
#line 826 
    __retres = (_Bool)1;
    
#line 826 
    goto return_label;
  }
  else {
    
#line 833 
    __retres = (_Bool)0;
    
#line 833 
    goto return_label;
  }
  return_label: 
#line 813 
                return __retres;
}


#line 843  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 850 
  ldv_1_ret = ldv_emg_ipw_init();
  
#line 851 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 854 
  tmp = ldv_undef_int();
  
#line 854 
  if (tmp != 0) {
    
#line 856 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 860 
    __retres = (void *)0;
    
#line 860 
    goto return_label;
  }
  else {
    
#line 864 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 869 
    ldv_emg_ipw_exit();
    
#line 873 
    __retres = (void *)0;
    
#line 873 
    goto return_label;
  }
  
#line 876 
  __retres = (void *)0;
  return_label: 
#line 876 
                return __retres;
}


#line 881  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_14(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_14_ret_val;
  int ldv_14_line;
  void *ldv_14_data;
  enum irqreturn (*ldv_14_thread)(int , void *);
  int tmp;
  
#line 887 
  enum irqreturn (*ldv_14_callback)(int , void *) = & ldv_emg_wrapper_ipw_isr_2;
  
#line 890 
  struct ldv_struct_interrupt_scenario_14 *data = (struct ldv_struct_interrupt_scenario_14 *)arg0;
  
#line 895 
  if (data != (struct ldv_struct_interrupt_scenario_14 *)0) {
    
#line 896 
    ldv_14_line = data->arg0;
    
#line 897 
    ldv_14_callback = data->arg1;
    
#line 898 
    ldv_14_thread = data->arg2;
    
#line 899 
    ldv_14_data = data->arg3;
    
#line 900 
    ldv_free((void *)data);
  }
  else ;
  
#line 906 
  ldv_switch_to_interrupt_context();
  
#line 908 
  ldv_14_ret_val = ldv_emg_wrapper_ipw_isr_2(ldv_14_line,ldv_14_data);
  
#line 910 
  ldv_switch_to_process_context();
  
#line 913 
  tmp = ldv_undef_int();
  
#line 913 
  if (tmp != 0) {
    
#line 915 
    __VERIFIER_assume(ldv_14_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 919 
    if (ldv_14_thread != (enum irqreturn (*)(int , void *))0) 
#line 921 
                                                              (*ldv_14_thread)(ldv_14_line,ldv_14_data); else ;
  }
  else 
#line 928 
       __VERIFIER_assume(ldv_14_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 937 
  __retres = (void *)0;
  
#line 937 
  goto return_label;
  
#line 939 
  __retres = (void *)0;
  return_label: 
#line 939 
                return __retres;
}


#line 944  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2200.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_4_netdev;
  int tmp_3;
  
#line 948 
  int ldv_4_ret = ldv_undef_int();
  
#line 951 
  ldv_4_ret = ldv_undef_int();
  
#line 954 
  tmp_3 = ldv_undef_int();
  
#line 954 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 956 
    ldv_4_netdev = arg0;
    
#line 961 
    ldv_4_ret = ldv_emg_wrapper_ipw_net_open_2(ldv_4_netdev);
    
#line 964 
    tmp_1 = ldv_undef_int();
    
#line 964 
    if (tmp_1 != 0) {
      
#line 966 
      __VERIFIER_assume(ldv_4_ret == 0);
      
#line 970 
      ldv_dispatch_register_4_4(ldv_4_netdev);
      
#line 974 
      __retres = 0;
      
#line 974 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 981 
      __VERIFIER_assume(ldv_4_ret != 0);
      
#line 982 
      ldv_failed_register_netdev();
      
#line 983 
      tmp_0 = ldv_undef_int_negative();
      
#line 983 
      __retres = tmp_0;
      
#line 983 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 991 
    ldv_failed_register_netdev();
    
#line 992 
    tmp_2 = ldv_undef_int_negative();
    
#line 992 
    __retres = tmp_2;
    
#line 992 
    goto return_label;
  }
  return_label: 
#line 954 
                return __retres;
}


