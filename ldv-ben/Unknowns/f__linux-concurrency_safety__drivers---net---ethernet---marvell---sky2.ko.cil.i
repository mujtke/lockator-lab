/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __le16;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __le32;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __sum16;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct _ddebug {
   char const *modname ;
   char const *function ;
   char const *filename ;
   char const *format ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))) lineno : 18 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) flags : 8 ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/stat.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_46 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_46 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_47 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_47 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct vm_area_struct;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue wait_queue_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue {
   unsigned int flags ;
   void *private ;
   int (*func)(wait_queue_t *, unsigned int , int , void *) ;
   struct list_head task_list ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_48 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_48 nodemask_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 193 
struct rw_semaphore;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 246  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 247 
enum hrtimer_restart;

#line 248  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_50 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_49 {
   struct __anonstruct_50 __anonCompField___anonunion_49_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_49 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11823 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_115 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_115 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmod.h"
struct cred;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/elf.h"
struct inode;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_148 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_149 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_147 {
   struct __anonstruct_148 __anonCompField___anonunion_147_33 ;
   struct __anonstruct_149 __anonCompField___anonunion_147_34 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_147 __anonCompField_uprobe_task_35 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_150 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_152 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_156 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_155 {
   atomic_t _mapcount ;
   struct __anonstruct_156 __anonCompField___anonunion_155_38 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_154 {
   union __anonunion_155 __anonCompField___anonstruct_154_39 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_153 {
   unsigned long counters ;
   struct __anonstruct_154 __anonCompField___anonunion_153_40 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_151 {
   union __anonunion_152 __anonCompField___anonstruct_151_37 ;
   union __anonunion_153 __anonCompField___anonstruct_151_41 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_158 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_159 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_157 {
   struct list_head lru ;
   struct __anonstruct_158 __anonCompField___anonunion_157_43 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_159 __anonCompField___anonunion_157_44 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_160 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_150 __anonCompField_page_36 ;
   struct __anonstruct_151 __anonCompField_page_42 ;
   union __anonunion_157 __anonCompField_page_45 ;
   union __anonunion_160 __anonCompField_page_46 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_161 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_161 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
union __anonunion_166 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_166 __anonCompField_idr_layer_47 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct dentry;

#line 186 
struct iattr;

#line 187 
struct super_block;

#line 188 
struct file_system_type;

#line 189 
struct kernfs_open_node;

#line 190 
struct kernfs_iattrs;

#line 213 
struct kernfs_root;

#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_171 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_171 __anonCompField_kernfs_node_48 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct sock;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct bin_attribute;

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_172 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_172 __anonCompField_kernel_param_49 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 74 
struct exception_table_entry;

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist.h"
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203 
struct of_device_id;

#line 203 
struct acpi_device_id;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 1272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_183 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_183 __anonCompField_iov_iter_50 ;
   unsigned long nr_segs ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct user_struct;

#line 66 
struct writeback_control;

#line 67 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 18 
struct pid;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_185 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_185 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_186 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_186 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_187 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_187 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_188 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_188 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_189 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_189 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_190 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_190 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_191 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_191 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_192 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_192 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_193 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_194 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_193 ifr_ifrn ;
   union __anonunion_ifr_ifru_194 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_199 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_198 {
   struct __anonstruct_199 __anonCompField___anonunion_198_51 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_198 __anonCompField_lockref_52 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_201 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_200 {
   struct __anonstruct_201 __anonCompField___anonunion_200_53 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_200 __anonCompField_qstr_54 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_202 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_202 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_206 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_205 {
   struct __anonstruct_206 __anonCompField___anonunion_205_55 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_205 __anonCompField_radix_tree_node_56 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 428 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 435 
struct pid_namespace;

#line 435  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct block_device;

#line 31 
struct io_context;

#line 32 
struct cgroup_subsys_state;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct backing_dev_info;

#line 61 
struct export_operations;

#line 63 
struct pipe_inode_info;

#line 64 
struct poll_table_struct;

#line 65 
struct kstatfs;

#line 66 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_211 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_211 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_212 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_212 __anonCompField_kqid_58 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_215 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_216 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_217 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_215 __anonCompField_inode_59 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_216 __anonCompField_inode_60 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_217 __anonCompField_inode_61 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_218 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_218 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 947 
struct net;

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19 
struct fasync_struct;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_220 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_219 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_220 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_219 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1061 
struct files_struct;

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_221 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_221 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_223 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_224 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_225 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_226 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_228 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_227 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_228 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_229 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_230 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_222 {
   int _pad[28U] ;
   struct __anonstruct__kill_223 _kill ;
   struct __anonstruct__timer_224 _timer ;
   struct __anonstruct__rt_225 _rt ;
   struct __anonstruct__sigchld_226 _sigchld ;
   struct __anonstruct__sigfault_227 _sigfault ;
   struct __anonstruct__sigpoll_229 _sigpoll ;
   struct __anonstruct__sigsys_230 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_222 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_233 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_234 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_236 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_235 {
   struct keyring_index_key index_key ;
   struct __anonstruct_236 __anonCompField___anonunion_235_64 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_237 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_239 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_238 {
   union __anonunion_payload_239 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_233 __anonCompField_key_62 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_234 __anonCompField_key_63 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_235 __anonCompField_key_65 ;
   union __anonunion_type_data_237 type_data ;
   union __anonunion_238 __anonCompField_key_66 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 327 
struct cgroup;

#line 328 
struct cgroup_root;

#line 329 
struct cgroup_subsys;

#line 330 
struct cgroup_taskset;

#line 372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 134 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct reclaim_state;

#line 846  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1172 
struct uts_namespace;

#line 1173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
enum ldv_24017 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_24017 socket_state;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_268 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_268 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_25525 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_273 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_274 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_25525 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_273 __anonCompField_nf_bridge_info_73 ;
   union __anonunion_274 __anonCompField_nf_bridge_info_74 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 215 
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_275 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_275 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_277 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_276 {
   u64 v64 ;
   struct __anonstruct_277 __anonCompField___anonunion_276_75 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_276 __anonCompField_skb_mstamp_76 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_280 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_279 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_280 __anonCompField___anonstruct_279_77 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_278 {
   struct __anonstruct_279 __anonCompField___anonunion_278_78 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_282 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_281 {
   __wsum csum ;
   struct __anonstruct_282 __anonCompField___anonunion_281_80 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_283 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_284 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_285 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_278 __anonCompField_sk_buff_79 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_281 __anonCompField_sk_buff_81 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_283 __anonCompField_sk_buff_82 ;
   __u32 secmark ;
   union __anonunion_284 __anonCompField_sk_buff_83 ;
   union __anonunion_285 __anonCompField_sk_buff_84 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 767 
struct rtable;

#line 890 
enum pkt_hash_types {
    PKT_HASH_TYPE_NONE = 0,
    PKT_HASH_TYPE_L2 = 1,
    PKT_HASH_TYPE_L3 = 2,
    PKT_HASH_TYPE_L4 = 3
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib_device {
   atomic_long_t mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib_device {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118 
struct proc_dir_entry;

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_302 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_302 possible_net_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 1084  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct mii_ioctl_data {
   __u16 phy_id ;
   __u16 reg_num ;
   __u16 val_in ;
   __u16 val_out ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_28484 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_28484 phy_interface_t;

#line 126 
enum ldv_28537 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_28537 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct xfrm_policy;

#line 98 
struct xfrm_state;

#line 114 
struct request_sock;

#line 1628 
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 331 
enum gro_result {
    GRO_MERGED = 0,
    GRO_MERGED_FREE = 1,
    GRO_HELD = 2,
    GRO_NORMAL = 3,
    GRO_DROP = 4
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum gro_result gro_result_t;

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_30247 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_30248 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_315 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_316 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_317 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_315 adj_list ;
   struct __anonstruct_all_adj_list_316 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_30247 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_30248 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_317 __anonCompField_net_device_94 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 2086  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_notifier_info {
   struct net_device *dev ;
};

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_326 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_326 __anonCompField_pci_dev_95 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 1911  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct iphdr {
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) ihl : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) version : 4 ;
   __u8 tos ;
   __be16 tot_len ;
   __be16 id ;
   __be16 frag_off ;
   __u8 ttl ;
   __u8 protocol ;
   __sum16 check ;
   __be32 saddr ;
   __be32 daddr ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uaccess.h"
struct page_counter {
   atomic_long_t count ;
   unsigned long limit ;
   struct page_counter *parent ;
   unsigned long watermark ;
   unsigned long failcnt ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cacheflush.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/filter.h"
struct bpf_insn {
   __u8 code ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) dst_reg : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/bpf.h"
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4
};

#line 273 
struct bpf_prog_aux;

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
union __anonunion_333 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   bool jited ;
   bool gpl_compatible ;
   u32 len ;
   enum bpf_prog_type type ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(struct sk_buff const *, struct bpf_insn const *) ;
   union __anonunion_333 __anonCompField_bpf_prog_100 ;
};

#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sk_filter {
   atomic_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_nulls.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   unsigned long _key ;
};

#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
struct nla_policy {
   u16 type ;
   u16 len ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char const *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   int maxtype ;
   struct nla_policy const *policy ;
   int (*validate)(struct nlattr **, struct nlattr **) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device const *) ;
   int (*fill_info)(struct sk_buff *, struct net_device const *) ;
   size_t (*get_xstats_size)(struct net_device const *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device const *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   int slave_maxtype ;
   struct nla_policy const *slave_policy ;
   int (*slave_validate)(struct nlattr **, struct nlattr **) ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **) ;
   size_t (*get_slave_size)(struct net_device const *, struct net_device const *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device const *, struct net_device const *) ;
   struct net *(*get_link_net)(struct net_device const *) ;
};

#line 171 
struct neigh_table;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   void (*neigh_cleanup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   atomic_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
};

#line 129 
struct neigh_ops;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   atomic_t refcnt ;
   struct sk_buff_head arp_queue ;
   unsigned int arp_queue_len_bytes ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops const *ops ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 key[0U] ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_table {
   int family ;
   int entry_size ;
   int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void const *, struct net_device const *, __u32 *) ;
   bool (*key_eq)(struct neighbour const *, void const *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};

#line 519 
struct dn_route;

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
union __anonunion_344 {
   struct dst_entry *next ;
   struct rtable *rt_next ;
   struct rt6_info *rt6_next ;
   struct dn_route *dn_next ;
};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct dst_entry {
   struct callback_head callback_head ;
   struct dst_entry *child ;
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct dst_entry *path ;
   struct dst_entry *from ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   unsigned short pending_confirm ;
   short error ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   __u32 tclassid ;
   long __pad_to_align_refcnt[2U] ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   union __anonunion_344 __anonCompField_dst_entry_101 ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_socket_lock_t_345 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef struct __anonstruct_socket_lock_t_345 socket_lock_t;

#line 124 
struct proto;

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u32 __portpair;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u64 __addrpair;

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_347 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_346 {
   __addrpair skc_addrpair ;
   struct __anonstruct_347 __anonCompField___anonunion_346_102 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_348 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_350 {
   __be16 skc_dport ;
   __u16 skc_num ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_349 {
   __portpair skc_portpair ;
   struct __anonstruct_350 __anonCompField___anonunion_349_105 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_351 {
   struct hlist_node skc_bind_node ;
   struct hlist_nulls_node skc_portaddr_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_352 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock_common {
   union __anonunion_346 __anonCompField_sock_common_103 ;
   union __anonunion_348 __anonCompField_sock_common_104 ;
   union __anonunion_349 __anonCompField_sock_common_106 ;
   unsigned short skc_family ;
   unsigned char volatile skc_state ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) skc_reuse : 4 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_reuseport : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_ipv6only : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_351 __anonCompField_sock_common_107 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_352 __anonCompField_sock_common_108 ;
   int skc_tx_queue_mapping ;
   atomic_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
};

#line 219 
struct cg_proto;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_sk_backlog_353 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_353 sk_backlog ;
   int sk_forward_alloc ;
   __u32 sk_rxhash ;
   u16 sk_incoming_cpu ;
   __u32 sk_txhash ;
   unsigned int sk_napi_id ;
   unsigned int sk_ll_usec ;
   atomic_t sk_drops ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   struct socket_wq *sk_wq ;
   struct xfrm_policy *sk_policy[2U] ;
   unsigned long sk_flags ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   spinlock_t sk_dst_lock ;
   atomic_t sk_wmem_alloc ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   struct sk_buff_head sk_write_queue ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) sk_shutdown : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_tx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_rx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) sk_userlocks : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) sk_protocol : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) sk_type : 16 ;
   int sk_wmem_queued ;
   gfp_t sk_allocation ;
   u32 sk_pacing_rate ;
   u32 sk_max_pacing_rate ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   u16 sk_gso_max_segs ;
   int sk_rcvlowat ;
   unsigned long sk_lingertime ;
   struct sk_buff_head sk_error_queue ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   __u32 sk_priority ;
   __u32 sk_cgrp_prioidx ;
   struct pid *sk_peer_pid ;
   struct cred const *sk_peer_cred ;
   long sk_rcvtimeo ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u32 sk_tskey ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   struct page_frag sk_frag ;
   struct sk_buff *sk_send_head ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   void *sk_security ;
   __u32 sk_mark ;
   u32 sk_classid ;
   struct cg_proto *sk_cgrp ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
};

#line 914 
struct request_sock_ops;

#line 915 
struct timewait_sock_ops;

#line 916 
struct inet_hashinfo;

#line 917 
struct raw_hashinfo;

#line 932 
struct udp_table;

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_h_356 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
};

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   void (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   void (*clear_sk)(struct sock *, int ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock const *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   int *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   int slab_flags ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_356 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*init_cgroup)(struct mem_cgroup *, struct cgroup_subsys *) ;
   void (*destroy_cgroup)(struct mem_cgroup *) ;
   struct cg_proto *(*proto_cgroup)(struct mem_cgroup *) ;
};

#line 1054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct cg_proto {
   struct page_counter memory_allocated ;
   struct percpu_counter sockets_allocated ;
   int memory_pressure ;
   long sysctl_mem[3U] ;
   unsigned long flags ;
   struct mem_cgroup *memcg ;
};

#line 2242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct request_sock_ops {
   int family ;
   int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock const *) ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   struct sock *rsk_listener ;
   u16 mss ;
   u8 num_retrans ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cookie_ts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) num_timeout : 7 ;
   u32 window_clamp ;
   u32 rcv_wnd ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops const *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_pinfo ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   struct ipv6_stable_secret stable_secret ;
   void *sysctl ;
};

#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_connection_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_timewait_sock.h"
struct tcphdr {
   __be16 source ;
   __be16 dest ;
   __be32 seq ;
   __be32 ack_seq ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) res1 : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) doff : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) fin : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syn : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rst : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) psh : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ack : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) urg : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ece : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cwr : 1 ;
   __be16 window ;
   __sum16 check ;
   __be16 urg_ptr ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ip6_sf_list {
   struct ip6_sf_list *sf_next ;
   struct in6_addr sf_addr ;
   unsigned long sf_count[2U] ;
   unsigned char sf_gsresp ;
   unsigned char sf_oldin ;
   unsigned char sf_crcount ;
};

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifmcaddr6 {
   struct in6_addr mca_addr ;
   struct inet6_dev *idev ;
   struct ifmcaddr6 *next ;
   struct ip6_sf_list *mca_sources ;
   struct ip6_sf_list *mca_tomb ;
   unsigned int mca_sfmode ;
   unsigned char mca_crcount ;
   unsigned long mca_sfcount[2U] ;
   struct timer_list mca_timer ;
   unsigned int mca_flags ;
   int mca_users ;
   atomic_t mca_refcnt ;
   spinlock_t mca_lock ;
   unsigned long mca_cstamp ;
   unsigned long mca_tstamp ;
};

#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifacaddr6 {
   struct in6_addr aca_addr ;
   struct inet6_dev *aca_idev ;
   struct rt6_info *aca_rt ;
   struct ifacaddr6 *aca_next ;
   int aca_users ;
   atomic_t aca_refcnt ;
   unsigned long aca_cstamp ;
   unsigned long aca_tstamp ;
};

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ipv6_devstat {
   struct proc_dir_entry *proc_dir_entry ;
   struct ipstats_mib *ipv6 ;
   struct icmpv6_mib_device *icmpv6dev ;
   struct icmpv6msg_mib_device *icmpv6msgdev ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct inet6_dev {
   struct net_device *dev ;
   struct list_head addr_list ;
   struct ifmcaddr6 *mc_list ;
   struct ifmcaddr6 *mc_tomb ;
   spinlock_t mc_lock ;
   unsigned char mc_qrv ;
   unsigned char mc_gq_running ;
   unsigned char mc_ifc_count ;
   unsigned char mc_dad_count ;
   unsigned long mc_v1_seen ;
   unsigned long mc_qi ;
   unsigned long mc_qri ;
   unsigned long mc_maxdelay ;
   struct timer_list mc_gq_timer ;
   struct timer_list mc_ifc_timer ;
   struct timer_list mc_dad_timer ;
   struct ifacaddr6 *ac_list ;
   rwlock_t lock ;
   atomic_t refcnt ;
   __u32 if_flags ;
   int dead ;
   u8 rndid[8U] ;
   struct timer_list regen_timer ;
   struct list_head tempaddr_list ;
   struct in6_addr token ;
   struct neigh_parms *nd_parms ;
   struct ipv6_devconf cnf ;
   struct ipv6_devstat stats ;
   struct timer_list rs_timer ;
   __u8 rs_probes ;
   __u8 addr_gen_mode ;
   unsigned long tstamp ;
   struct callback_head rcu ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
union __anonunion_376 {
   __be32 a4 ;
   __be32 a6[4U] ;
   struct in6_addr in6 ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
struct inetpeer_addr_base {
   union __anonunion_376 __anonCompField_inetpeer_addr_base_110 ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inetpeer_addr {
   struct inetpeer_addr_base addr ;
   __u16 family ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_377 {
   struct list_head gc_list ;
   struct callback_head gc_rcu ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct __anonstruct_379 {
   atomic_t rid ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_378 {
   struct __anonstruct_379 __anonCompField___anonunion_378_112 ;
   struct callback_head rcu ;
   struct inet_peer *gc_next ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer {
   struct inet_peer *avl_left ;
   struct inet_peer *avl_right ;
   struct inetpeer_addr daddr ;
   __u32 avl_height ;
   u32 metrics[16U] ;
   u32 rate_tokens ;
   unsigned long rate_last ;
   union __anonunion_377 __anonCompField_inet_peer_111 ;
   union __anonunion_378 __anonCompField_inet_peer_113 ;
   __u32 dtime ;
   atomic_t refcnt ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer_base {
   struct inet_peer *root ;
   seqlock_t lock ;
   int total ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct uncached_list;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct rtable {
   struct dst_entry dst ;
   int rt_genid ;
   unsigned int rt_flags ;
   __u16 rt_type ;
   __u8 rt_is_input ;
   __u8 rt_uses_gateway ;
   int rt_iif ;
   __be32 rt_gateway ;
   u32 rt_pmtu ;
   struct list_head rt_uncached ;
   struct uncached_list *rt_uncached_list ;
};

#line 1197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of_net.h"
enum led_mode {
    MO_LED_NORM = 0,
    MO_LED_BLINK = 1,
    MO_LED_OFF = 2,
    MO_LED_ON = 3
};

#line 1703  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of_net.h"
struct sky2_tx_le {
   __le32 addr ;
   __le16 length ;
   u8 ctrl ;
   u8 opcode ;
};

#line 2175  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
struct sky2_rx_le {
   __le32 addr ;
   __le16 length ;
   u8 ctrl ;
   u8 opcode ;
};

#line 2182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
struct sky2_status_le {
   __le32 status ;
   __le16 length ;
   u8 css ;
   u8 opcode ;
};

#line 2189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
struct tx_ring_info {
   struct sk_buff *skb ;
   unsigned long flags ;
   dma_addr_t mapaddr ;
   __u32 maplen ;
};

#line 2198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
struct rx_ring_info {
   struct sk_buff *skb ;
   dma_addr_t data_addr ;
   __u32 data_size ;
   dma_addr_t frag_addr[2U] ;
};

#line 2205 
enum flow_control {
    FC_NONE = 0,
    FC_TX = 1,
    FC_RX = 2,
    FC_BOTH = 3
};

#line 2212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
struct sky2_stats {
   struct u64_stats_sync syncp ;
   u64 packets ;
   u64 bytes ;
};

#line 2218 
struct sky2_hw;

#line 2218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
struct __anonstruct_check_382 {
   unsigned long last ;
   u32 mac_rp ;
   u8 mac_lev ;
   u8 fifo_rp ;
   u8 fifo_lev ;
};

#line 2218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
struct sky2_port {
   struct sky2_hw *hw ;
   struct net_device *netdev ;
   unsigned int port ;
   u32 msg_enable ;
   spinlock_t phy_lock ;
   struct tx_ring_info *tx_ring ;
   struct sky2_tx_le *tx_le ;
   struct sky2_stats tx_stats ;
   u16 tx_ring_size ;
   u16 tx_cons ;
   u16 tx_prod ;
   u16 tx_next ;
   u16 tx_pending ;
   u16 tx_last_mss ;
   u32 tx_last_upper ;
   u32 tx_tcpsum ;
   struct rx_ring_info *rx_ring ;
   struct sky2_rx_le *rx_le ;
   struct sky2_stats rx_stats ;
   u16 rx_next ;
   u16 rx_put ;
   u16 rx_pending ;
   u16 rx_data_size ;
   u16 rx_nfrags ;
   struct __anonstruct_check_382 check ;
   dma_addr_t rx_le_map ;
   dma_addr_t tx_le_map ;
   u16 advertising ;
   u16 speed ;
   u8 wol ;
   u8 duplex ;
   u16 flags ;
   enum flow_control flow_mode ;
   enum flow_control flow_status ;
   struct dentry *debugfs ;
};

#line 2275  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
struct sky2_hw {
   void *regs ;
   struct pci_dev *pdev ;
   struct napi_struct napi ;
   struct net_device *dev[2U] ;
   unsigned long flags ;
   u8 chip_id ;
   u8 chip_rev ;
   u8 pmd_type ;
   u8 ports ;
   struct sky2_status_le *st_le ;
   u32 st_size ;
   u32 st_idx ;
   dma_addr_t st_dma ;
   struct timer_list watchdog_timer ;
   struct work_struct restart_work ;
   wait_queue_head_t msi_wait ;
   char irq_name[0U] ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
struct __anonstruct_eee_afe_384 {
   u16 reg ;
   u16 val ;
};

#line 3708  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
struct sky2_stat {
   char name[32U] ;
   u16 offset ;
};

#line 4449  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
struct vpd_tag {
   char tag[2U] ;
   char *label ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_character_driver_scenario_17 {
   struct file_operations *arg0 ;
   int signal_pending ;
};

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_free_irq_7 {
   int arg0 ;
   int signal_pending ;
};

#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_18 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_15 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 40  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_20 {
   struct net_device *arg0 ;
   int signal_pending ;
};

#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_timer_scenario_19 {
   struct timer_list *arg0 ;
   int signal_pending ;
};
unsigned short __builtin_bswap16(unsigned short);

void __builtin_prefetch(void const * , ...);

void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/fvtp/.tmp_sky2.c"
void ldv_inline_asm(void);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 479  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int fls64(__u64 x)
{
  int __retres;
  
#line 481 
  int bitpos = -1;
  
#line 482 
  ldv_inline_asm();
  
#line 490 
  __retres = bitpos + 1;
  
#line 490 
  return __retres;
}


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u16 __fswab16(__u16 val)
{
  __u16 tmp;
  
#line 49 
  tmp = __builtin_bswap16((unsigned short)((int)val));
  
#line 49 
  return tmp;
}


#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitops.h"
__inline static unsigned int fls_long(unsigned long l)
{
  unsigned int __retres;
  int tmp_0;
  
#line 178 
  tmp_0 = fls64((unsigned long long)l);
  
#line 178 
  __retres = (unsigned int)tmp_0;
  
#line 178 
  return __retres;
}


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
int ____ilog2_NaN(void);


#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static int __ilog2_u64(u64 n)
{
  int __retres;
  int tmp;
  
#line 42 
  tmp = fls64(n);
  
#line 42 
  __retres = tmp + -1;
  
#line 42 
  return __retres;
}


#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static unsigned long __roundup_pow_of_two(unsigned long n)
{
  unsigned long __retres;
  unsigned int tmp;
  
#line 63 
  tmp = fls_long(n + 18446744073709551615UL);
  
#line 63 
  __retres = 1UL << tmp;
  
#line 63 
  return __retres;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
void __dynamic_netdev_dbg(struct _ddebug *, struct net_device const *, char const * , ...);


#line 178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
void __might_sleep(char const *, int, int);


#line 402 
int sprintf(char *, char const * , ...);


#line 405 
int snprintf(char *, size_t, char const * , ...);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-defs.h"
void __bad_size_call_parameter(void);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 63 
int memcmp(void const *, void const *, size_t);


#line 64 
size_t strlen(char const *);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
char *strncpy(char *, char const *, __kernel_size_t);


#line 26 
size_t strlcpy(char *, char const *, size_t);


#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
static bool IS_ERR(void const *ptr);


#line 7  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
void __local_bh_disable_ip(unsigned long, unsigned int);


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
__inline static void local_bh_disable(void)
{
  __here_0: 
#line 18 
  ;
  
#line 18 
  __local_bh_disable_ip((unsigned long)((void *)0),512U);
  
#line 20 
  return;
}


#line 22 
void __local_bh_enable_ip(unsigned long, unsigned int);


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
__inline static void local_bh_enable(void)
{
  __here_0: 
#line 31 
  ;
  
#line 31 
  __local_bh_enable_ip((unsigned long)((void *)0),512U);
  
#line 33 
  return;
}


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 30 
void _raw_spin_lock_bh(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 42 
void _raw_spin_unlock_bh(raw_spinlock_t *);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 346 
static void ldv_spin_lock_60(spinlock_t *lock);


#line 350 
static void ldv_spin_lock_65(spinlock_t *lock);


#line 358 
static void ldv_spin_lock_88(spinlock_t *lock);


#line 359  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh(spinlock_t *lock)
{
  
#line 361 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 362 
  return;
}


#line 387 
static void ldv_spin_lock_bh_73(spinlock_t *lock);


#line 391 
static void ldv_spin_lock_bh_75(spinlock_t *lock);


#line 395 
static void ldv_spin_lock_bh_77(spinlock_t *lock);


#line 399 
static void ldv_spin_lock_bh_79(spinlock_t *lock);


#line 403 
static void ldv_spin_lock_bh_81(spinlock_t *lock);


#line 407 
static void ldv_spin_lock_bh_84(spinlock_t *lock);


#line 411 
static void ldv_spin_lock_bh_93(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 395 
static void ldv_spin_unlock_63(spinlock_t *lock);


#line 399 
static void ldv_spin_unlock_66(spinlock_t *lock);


#line 407 
static void ldv_spin_unlock_89(spinlock_t *lock);


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh(spinlock_t *lock)
{
  
#line 410 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 411 
  return;
}


#line 440 
static void ldv_spin_unlock_bh_74(spinlock_t *lock);


#line 444 
static void ldv_spin_unlock_bh_76(spinlock_t *lock);


#line 448 
static void ldv_spin_unlock_bh_78(spinlock_t *lock);


#line 452 
static void ldv_spin_unlock_bh_80(spinlock_t *lock);


#line 456 
static void ldv_spin_unlock_bh_82(spinlock_t *lock);


#line 460 
static void ldv_spin_unlock_bh_85(spinlock_t *lock);


#line 464 
static void ldv_spin_unlock_bh_94(spinlock_t *lock);


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
void ldv_spin_model_lock(char *);


#line 75 
void ldv_spin_model_unlock(char *);


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 24 
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
extern u8 const byte_rev_table[256U];


#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
__inline static u8 __bitrev8(u8 byte)
{
  u8 __retres;
  
#line 17 
  __retres = byte_rev_table[(int)byte];
  
#line 17 
  return __retres;
}


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
__inline static u16 __bitrev16(u16 x)
{
  u16 __retres;
  u8 tmp;
  u8 tmp_0;
  
#line 22 
  tmp = __bitrev8((unsigned char)((int)((unsigned char)x)));
  
#line 22 
  tmp_0 = __bitrev8((unsigned char)((int)((unsigned char)((int)x >> 8))));
  
#line 22 
  __retres = (unsigned short)(((int)tmp << 8) | (int)tmp_0);
  
#line 22 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitrev.h"
__inline static u32 __bitrev32(u32 x)
{
  u32 __retres;
  u16 tmp;
  u16 tmp_0;
  
#line 27 
  tmp = __bitrev16((unsigned short)((int)((unsigned short)x)));
  
#line 27 
  tmp_0 = __bitrev16((unsigned short)((int)((unsigned short)(x >> 16))));
  
#line 27 
  __retres = (unsigned int)(((int)tmp << 16) | (int)tmp_0);
  
#line 27 
  return __retres;
}


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crc32.h"
u32 crc32_le(u32, unsigned char const *, size_t);


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
void __init_waitqueue_head(wait_queue_head_t *, char const *, struct lock_class_key *);


#line 149 
void __wake_up(wait_queue_head_t *, unsigned int, int, void *);


#line 926 
long prepare_to_wait_event(wait_queue_head_t *, wait_queue_t *, int);


#line 927 
void finish_wait(wait_queue_head_t *, wait_queue_t *);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 173 
static int ldv_mod_timer_87(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 177 
static int ldv_mod_timer_92(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 232 
static int ldv_del_timer_sync_107(struct timer_list *ldv_func_arg1);


#line 236 
static int ldv_del_timer_sync_111(struct timer_list *ldv_func_arg1);


#line 252 
unsigned long round_jiffies(unsigned long);


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void __init_work(struct work_struct *, int);


#line 444 
bool cancel_work_sync(struct work_struct *);


#line 560 
static bool ldv_schedule_work_90(struct work_struct *work);


#line 564 
static bool ldv_schedule_work_91(struct work_struct *work);


#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned char readb(void const volatile *addr)
{
  unsigned char ret;
  
#line 57 
  ldv_inline_asm();
  
#line 56 
  return ret;
}


#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned short readw(void const volatile *addr)
{
  unsigned short ret;
  
#line 58 
  ldv_inline_asm();
  
#line 57 
  return ret;
}


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile *addr)
{
  unsigned int ret;
  
#line 59 
  ldv_inline_asm();
  
#line 58 
  return ret;
}


#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writeb(unsigned char val, void volatile *addr)
{
  
#line 66 
  ldv_inline_asm();
  
#line 67 
  return;
}


#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writew(unsigned short val, void volatile *addr)
{
  
#line 67 
  ldv_inline_asm();
  
#line 68 
  return;
}


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void volatile *addr)
{
  
#line 68 
  ldv_inline_asm();
  
#line 69 
  return;
}


#line 181 
void *ioremap_nocache(resource_size_t, unsigned long);


#line 195 
void iounmap(void volatile *);


#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void memcpy_fromio(void *dst, void const volatile *src, size_t count)
{
  
#line 217 
  memcpy(dst,(void const *)src,count);
  
#line 218 
  return;
}


#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void memcpy_toio(void volatile *dst, void const *src, size_t count)
{
  
#line 223 
  memcpy((void *)dst,src,count);
  
#line 224 
  return;
}


#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct page *alloc_pages_current(gfp_t, unsigned int);


#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
__inline static struct page *alloc_pages(gfp_t gfp_mask, unsigned int order)
{
  struct page *tmp;
  
#line 327 
  tmp = alloc_pages_current(gfp_mask,order);
  
#line 327 
  return tmp;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void msleep(unsigned int);


#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
ssize_t seq_read(struct file *, char *, size_t, loff_t *);


#line 115 
loff_t seq_lseek(struct file *, loff_t, int);


#line 118 
int seq_putc(struct seq_file *, char);


#line 119 
int seq_puts(struct seq_file *, char const *);


#line 122 
int seq_printf(struct seq_file *, char const * , ...);


#line 131 
int single_open(struct file *, int (*)(struct seq_file *, void *), void *);


#line 133 
int single_release(struct inode *, struct file *);


#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm_wakeup.h"
__inline static bool device_can_wakeup(struct device *dev)
{
  bool __retres;
  
#line 83 
  __retres = (_Bool)((int)dev->power.can_wakeup != 0);
  
#line 83 
  return __retres;
}


#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm_wakeup.h"
__inline static bool device_may_wakeup(struct device *dev)
{
  bool __retres;
  
#line 88 
  __retres = (_Bool)(((unsigned int)*((unsigned char *)(& dev->power) + 4UL) != 0U && dev->power.wakeup != (struct wakeup_source *)0) != 0);
  
#line 88 
  return __retres;
}


#line 104 
int device_set_wakeup_enable(struct device *, bool);


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 1083 
void dev_err(struct device const *, char const * , ...);


#line 1085 
void dev_warn(struct device const *, char const * , ...);


#line 1087 
void dev_notice(struct device const *, char const * , ...);


#line 1089 
void _dev_info(struct device const *, char const * , ...);


#line 400  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page-flags.h"
__inline static int PageTail(struct page const *page)
{
  int tmp;
  
#line 400 
  tmp = constant_test_bit(15L,(unsigned long const volatile *)(& page->flags));
  
#line 400 
  return tmp;
}


#line 440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static struct page *compound_head_by_tail(struct page *tail)
{
  struct page *__retres;
  int tmp;
  
#line 442 
  struct page *head = tail->__anonCompField_page_46.first_page;
  
#line 443 
  ldv_inline_asm();
  
#line 450 
  tmp = PageTail((struct page const *)tail);
  
#line 450 
  if ((long)(tmp != 0) != 0L) {
    
#line 451 
    __retres = head;
    
#line 451 
    goto return_label;
  }
  else ;
  
#line 452 
  __retres = tail;
  return_label: 
#line 452 
                return __retres;
}


#line 461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static struct page *compound_head(struct page *page)
{
  struct page *__retres;
  int tmp_0;
  
#line 463 
  tmp_0 = PageTail((struct page const *)page);
  
#line 463 
  if ((long)(tmp_0 != 0) != 0L) {
    struct page *tmp;
    
#line 464 
    tmp = compound_head_by_tail(page);
    
#line 464 
    __retres = tmp;
    
#line 464 
    goto return_label;
  }
  else ;
  
#line 465 
  __retres = page;
  return_label: 
#line 465 
                return __retres;
}


#line 569 
void put_page(struct page *);


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page const *page)
{
  void *__retres;
  
#line 947 
  __retres = (void *)((unsigned long)((unsigned long long)(((long)page + 24189255811072L) / 64L) << 12) + 18446612132314218496UL);
  
#line 947 
  return __retres;
}


#line 1031  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static bool page_is_pfmemalloc(struct page *page)
{
  bool __retres;
  
#line 1037 
  __retres = (_Bool)(page->__anonCompField_page_42.__anonCompField___anonstruct_151_37.index == 18446744073709551615UL);
  
#line 1037 
  return __retres;
}


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_queue_limits.h"
__inline static void dql_queued(struct dql *dql, unsigned int count)
{
  
#line 74 
  if ((long)(count > 268435455U) != 0L) {
    
#line 76 
    ldv_inline_asm();
    
#line 74 
    ;
  }
  else ;
  
#line 76 
  dql->last_obj_cnt = count;
  
#line 77 
  ldv_inline_asm();
  
#line 85 
  dql->num_queued += count;
  
#line 86 
  return;
}


#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_queue_limits.h"
__inline static int dql_avail(struct dql const *dql)
{
  int __retres;
  unsigned int const volatile *tmp;
  unsigned int const volatile *tmp_0;
  {
    
#line 91 
    unsigned int const __var = 0U;
    
#line 91 
    tmp = (unsigned int const volatile *)(& dql->adj_limit);
  }
  {
    
#line 91 
    unsigned int const __var_0 = 0U;
    
#line 91 
    tmp_0 = (unsigned int const volatile *)(& dql->num_queued);
  }
  
#line 91 
  ;
  
#line 91 
  __retres = (int)(*tmp - *tmp_0);
  
#line 91 
  return __retres;
}


#line 95 
void dql_completed(struct dql *, unsigned int);


#line 98 
void dql_reset(struct dql *);


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
long schedule_timeout(long);


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
int net_ratelimit(void);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 418 
static void *kmalloc(size_t size, gfp_t flags);


#line 542 
static void *kcalloc(size_t n, size_t size, gfp_t flags);


#line 581 
static void *kzalloc(size_t size, gfp_t flags);


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 42 
void debug_dma_mapping_error(struct device *, dma_addr_t);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 59 
void debug_dma_sync_single_for_cpu(struct device *, dma_addr_t, size_t, int);


#line 63 
void debug_dma_sync_single_for_device(struct device *, dma_addr_t, size_t, int);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_page(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t addr;
  void *tmp_0;
  int tmp_1;
  
#line 80 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 83 
  ;
  
#line 83 
  tmp_0 = lowmem_page_address((struct page const *)page);
  
#line 83 
  ;
  
#line 83 
  kmemcheck_mark_initialized(tmp_0 + offset,(unsigned int)size);
  
#line 84 
  tmp_1 = valid_dma_direction((int)dir);
  
#line 84 
  if ((long)(tmp_1 == 0) != 0L) {
    
#line 86 
    ldv_inline_asm();
    
#line 84 
    ;
  }
  else ;
  
#line 85 
  addr = (*(ops->map_page))(dev,page,offset,size,dir,(struct dma_attrs *)0);
  
#line 86 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr,(_Bool)0);
  
#line 88 
  return addr;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_page(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 94 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 96 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 96 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 98 
    ldv_inline_asm();
    
#line 96 
    ;
  }
  else ;
  
#line 97 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 98 
    (*(ops->unmap_page))(dev,addr,size,dir,(struct dma_attrs *)0); else ;
  
#line 99 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)0);
  
#line 100 
  return;
}


#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_for_cpu(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 106 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 108 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 108 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 110 
    ldv_inline_asm();
    
#line 108 
    ;
  }
  else ;
  
#line 109 
  if (ops->sync_single_for_cpu != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 110 
    (*(ops->sync_single_for_cpu))(dev,addr,size,dir); else ;
  
#line 111 
  debug_dma_sync_single_for_cpu(dev,addr,size,(int)dir);
  
#line 112 
  return;
}


#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_for_device(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 118 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 120 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 120 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 122 
    ldv_inline_asm();
    
#line 120 
    ;
  }
  else ;
  
#line 121 
  if (ops->sync_single_for_device != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 122 
    (*(ops->sync_single_for_device))(dev,addr,size,dir); else ;
  
#line 123 
  debug_dma_sync_single_for_device(dev,addr,size,(int)dir);
  
#line 124 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  int __retres;
  
#line 49 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 50 
  debug_dma_mapping_error(dev,dma_addr);
  
#line 51 
  if (ops->mapping_error != (int (*)(struct device *, dma_addr_t ))0) {
    int tmp_0;
    
#line 52 
    tmp_0 = (*(ops->mapping_error))(dev,dma_addr);
    
#line 52 
    __retres = tmp_0;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 54 
  __retres = dma_addr == 0ULL;
  return_label: 
#line 54 
                return __retres;
}


#line 60 
int dma_supported(struct device *, u64);


#line 61 
int dma_set_mask(struct device *, u64);


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_coherent_mask(struct device *dev, u64 mask)
{
  int __retres;
  int tmp;
  
#line 103 
  tmp = dma_supported(dev,mask);
  
#line 103 
  if (tmp == 0) {
    
#line 104 
    __retres = -5;
    
#line 104 
    goto return_label;
  }
  else ;
  
#line 105 
  dev->coherent_dma_mask = mask;
  
#line 106 
  __retres = 0;
  return_label: 
#line 106 
                return __retres;
}


#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static void *dma_zalloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_handle, gfp_t flag)
{
  
#line 186 
  void *ret = dma_alloc_attrs(dev,size,dma_handle,flag | 32768U,(struct dma_attrs *)0);
  
#line 188 
  return ret;
}


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_frag_size(skb_frag_t const *frag)
{
  unsigned int __retres;
  
#line 232 
  __retres = frag->size;
  
#line 232 
  return __retres;
}


#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_frag_size_set(skb_frag_t *frag, unsigned int size)
{
  
#line 237 
  frag->size = size;
  
#line 238 
  return;
}


#line 772 
void kfree_skb(struct sk_buff *);


#line 775 
void consume_skb(struct sk_buff *);


#line 926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_set_hash(struct sk_buff *skb, __u32 hash, enum pkt_hash_types type)
{
  
#line 928 
  skb->l4_hash = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))(type == (unsigned int)PKT_HASH_TYPE_L4);
  
#line 929 
  skb->sw_hash = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
  
#line 930 
  skb->hash = hash;
  
#line 931 
  return;
}


#line 948  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_clear_hash(struct sk_buff *skb)
{
  
#line 950 
  skb->hash = 0U;
  
#line 951 
  skb->sw_hash = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
  
#line 952 
  skb->l4_hash = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
  
#line 953 
  return;
}


#line 961  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_copy_hash(struct sk_buff *to, struct sk_buff const *from)
{
  
#line 963 
  to->hash = from->hash;
  
#line 964 
  to->sw_hash = from->sw_hash;
  
#line 965 
  to->l4_hash = from->l4_hash;
  
#line 966 
  return;
}


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1574 
  __retres = skb->len - skb->data_len;
  
#line 1574 
  return __retres;
}


#line 1599  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_fill_page_desc(struct sk_buff *skb, int i, struct page *page, int off, int size)
{
  unsigned char *tmp;
  bool tmp_0;
  
#line 1602 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1602 
  skb_frag_t *frag = & ((struct skb_shared_info *)tmp)->frags[i];
  
#line 1609 
  frag->page.p = page;
  
#line 1610 
  frag->page_offset = (unsigned int)off;
  
#line 1611 
  skb_frag_size_set(frag,(unsigned int)size);
  
#line 1613 
  page = compound_head(page);
  
#line 1614 
  tmp_0 = page_is_pfmemalloc(page);
  
#line 1614 
  if ((int)tmp_0 != 0) 
#line 1615 
                       skb->pfmemalloc = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U; else ;
  
#line 1616 
  return;
}


#line 1632  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_fill_page_desc(struct sk_buff *skb, int i, struct page *page, int off, int size)
{
  unsigned char *tmp;
  
#line 1635 
  __skb_fill_page_desc(skb,i,page,off,size);
  
#line 1636 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1636 
  ((struct skb_shared_info *)tmp)->nr_frags = (unsigned char)((unsigned int)((unsigned char)i) + 1U);
  
#line 1637 
  return;
}


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reserve(struct sk_buff *skb, int len)
{
  
#line 1791 
  skb->data += len;
  
#line 1792 
  skb->tail += (unsigned int)len;
  
#line 1793 
  return;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_transport_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1882 
  __retres = skb->head + (int)skb->transport_header;
  
#line 1882 
  return __retres;
}


#line 1897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_network_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1899 
  __retres = skb->head + (int)skb->network_header;
  
#line 1899 
  return __retres;
}


#line 1967  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_transport_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned char *tmp;
  
#line 1969 
  tmp = skb_transport_header(skb);
  
#line 1969 
  ;
  
#line 1969 
  __retres = (int)((long)tmp - (long)skb->data);
  
#line 1969 
  return __retres;
}


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *__netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length, gfp_t gfp)
{
  
#line 2179 
  struct sk_buff *skb = __netdev_alloc_skb(dev,length,gfp);
  
#line 2183 
  return skb;
}


#line 2186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2189 
  tmp = __netdev_alloc_skb_ip_align(dev,length,32U);
  
#line 2189 
  return tmp;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t const *frag)
{
  struct page *__retres;
  
#line 2274 
  __retres = frag->page.p;
  
#line 2274 
  return __retres;
}


#line 2306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_frag_unref(skb_frag_t *frag)
{
  struct page *tmp;
  
#line 2308 
  tmp = skb_frag_page((skb_frag_t const *)frag);
  
#line 2308 
  put_page(tmp);
  
#line 2309 
  return;
}


#line 2390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static dma_addr_t skb_frag_dma_map(struct device *dev, skb_frag_t const *frag, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t tmp_0;
  struct page *tmp;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  tmp = skb_frag_page(frag);
  
#line 2395 
  ;
  
#line 2395 
  tmp_0 = dma_map_page(dev,tmp,(unsigned long)frag->page_offset + offset,size,dir);
  
#line 2395 
  return tmp_0;
}


#line 2789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_copy_from_linear_data(struct sk_buff const *skb, void *to, unsigned int const len)
{
  
#line 2793 
  memcpy(to,(void const *)skb->data,(unsigned long)len);
  
#line 2794 
  return;
}


#line 3384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_gso(struct sk_buff const *skb)
{
  bool __retres;
  unsigned char *tmp;
  
#line 3386 
  tmp = skb_end_pointer(skb);
  
#line 3386 
  ;
  
#line 3386 
  __retres = (_Bool)((unsigned int)((struct skb_shared_info *)tmp)->gso_size != 0U);
  
#line 3386 
  return __retres;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static void ethtool_cmd_speed_set(struct ethtool_cmd *ep, __u32 speed)
{
  
#line 117 
  ep->speed = (unsigned short)speed;
  
#line 118 
  ep->speed_hi = (unsigned short)(speed >> 16);
  
#line 119 
  return;
}


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static __u32 ethtool_cmd_speed(struct ethtool_cmd const *ep)
{
  __u32 __retres;
  
#line 123 
  __retres = (unsigned int)(((int)ep->speed_hi << 16) | (int)ep->speed);
  
#line 123 
  return __retres;
}


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
u32 ethtool_op_get_link(struct net_device *);


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
__inline static void u64_stats_init(struct u64_stats_sync *syncp)
{
  
#line 73 
  return;
}


#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
__inline static unsigned int u64_stats_fetch_begin_irq(struct u64_stats_sync const *syncp)
{
  unsigned int __retres;
  
#line 131 
  __retres = 0U;
  
#line 131 
  return __retres;
}


#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
__inline static bool u64_stats_fetch_retry_irq(struct u64_stats_sync const *syncp, unsigned int start)
{
  bool __retres;
  
#line 144 
  __retres = (_Bool)0;
  
#line 144 
  return __retres;
}


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hardirq.h"
void synchronize_irq(unsigned int);


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_83(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 145 
static int ldv_request_irq_99(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 157 
static void ldv_free_irq_86(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 161 
static void ldv_free_irq_100(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 165 
static void ldv_free_irq_109(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
__inline static struct mii_ioctl_data *if_mii(struct ifreq *rq)
{
  struct mii_ioctl_data *__retres;
  
#line 47 
  __retres = (struct mii_ioctl_data *)(& rq->ifr_ifru);
  
#line 47 
  return __retres;
}


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule(struct napi_struct *);


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_disable_pending(struct napi_struct *n)
{
  bool __retres;
  int tmp;
  
#line 396 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& n->state));
  
#line 396 
  __retres = (_Bool)(tmp != 0);
  
#line 396 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_schedule_prep(struct napi_struct *n)
{
  bool __retres;
  int tmp_2;
  int tmp_0;
  bool tmp;
  
#line 410 
  tmp = napi_disable_pending(n);
  
#line 410 
  if (tmp) 
#line 410 
           tmp_0 = 0; else 
#line 410 
                           tmp_0 = 1;
  
#line 410 
  if (tmp_0) {
    int tmp_1;
    
#line 410 
    tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& n->state));
    
#line 410 
    if (tmp_1 == 0) 
#line 410 
                    tmp_2 = 1; else 
#line 410 
                                    tmp_2 = 0;
  }
  else 
#line 410 
       tmp_2 = 0;
  
#line 410 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 410 
  return __retres;
}


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_schedule(struct napi_struct *n)
{
  bool tmp;
  
#line 423 
  tmp = napi_schedule_prep(n);
  
#line 423 
  if ((int)tmp != 0) 
#line 424 
                     __napi_schedule(n); else ;
  
#line 425 
  return;
}


#line 450 
void napi_complete_done(struct napi_struct *, int);


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_complete(struct napi_struct *n)
{
  
#line 460 
  napi_complete_done(n,0);
  
#line 461 
  return;
}


#line 496 
void napi_disable(struct napi_struct *);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  int tmp;
  
#line 507 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 507 
  if ((long)(tmp == 0) != 0L) {
    
#line 509 
    ldv_inline_asm();
    
#line 507 
    ;
  }
  else ;
  
#line 509 
  ldv_inline_asm();
  
#line 509 
  set_bit(0L,(unsigned long volatile *)(& n->state));
  
#line 510 
  return;
}


#line 521  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_synchronize(struct napi_struct const *n)
{
  int tmp;
  
#line 523 
  goto ldv_42219;
  ldv_42218: 
#line 524 
  ;
  
#line 524 
  msleep(1U);
  ldv_42219: 
#line 525 
  ;
  
#line 523 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 523 
  if (tmp != 0) 
#line 525 
                goto ldv_42218; else 
#line 528 
                                     goto ldv_42220;
  ldv_42220: 
#line 529 
  ;
  
#line 530 
  return;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 1911 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);


#line 2084 
int register_netdevice_notifier(struct notifier_block *);


#line 2085 
int unregister_netdevice_notifier(struct notifier_block *);


#line 2103  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct net_device *netdev_notifier_info_to_dev(struct netdev_notifier_info const *info)
{
  struct net_device *__retres;
  
#line 2105 
  __retres = info->dev;
  
#line 2105 
  return __retres;
}


#line 2183 
int dev_close(struct net_device *);


#line 2205 
static void ldv_free_netdev_104(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_106(struct net_device *ldv_func_arg1);


#line 2213 
static void ldv_free_netdev_110(struct net_device *ldv_func_arg1);


#line 2505 
void netif_schedule_queue(struct netdev_queue *);


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_wake_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2552 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2552 
  netif_tx_wake_queue(tmp);
  
#line 2553 
  return;
}


#line 2565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_stop_queue(struct netdev_queue *dev_queue)
{
  
#line 2567 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2568 
  return;
}


#line 2577  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_stop_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2579 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2579 
  netif_tx_stop_queue(tmp);
  
#line 2580 
  return;
}


#line 2645  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netdev_tx_sent_queue(struct netdev_queue *dev_queue, unsigned int bytes)
{
  int tmp;
  int tmp_0;
  
#line 2649 
  dql_queued(& dev_queue->dql,bytes);
  
#line 2651 
  tmp = dql_avail((struct dql const *)(& dev_queue->dql));
  
#line 2651 
  if ((long)(tmp >= 0) != 0L) 
#line 2652 
                              goto return_label; else ;
  
#line 2654 
  set_bit(1L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2655 
  ldv_inline_asm();
  
#line 2664 
  tmp_0 = dql_avail((struct dql const *)(& dev_queue->dql));
  
#line 2664 
  if ((long)(tmp_0 >= 0) != 0L) 
#line 2665 
                                set_bit(1L,(unsigned long volatile *)(& dev_queue->state)); else ;
  return_label: 
#line 2666 
                return;
}


#line 2678  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netdev_sent_queue(struct net_device *dev, unsigned int bytes)
{
  struct netdev_queue *tmp;
  
#line 2680 
  ;
  
#line 2680 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2680 
  netdev_tx_sent_queue(tmp,bytes);
  
#line 2681 
  return;
}


#line 2683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netdev_tx_completed_queue(struct netdev_queue *dev_queue, unsigned int pkts, unsigned int bytes)
{
  int tmp;
  int tmp_0;
  
#line 2687 
  if ((long)(bytes == 0U) != 0L) 
#line 2688 
                                 goto return_label; else ;
  
#line 2690 
  dql_completed(& dev_queue->dql,bytes);
  
#line 2691 
  ldv_inline_asm();
  
#line 2699 
  tmp = dql_avail((struct dql const *)(& dev_queue->dql));
  
#line 2699 
  if (tmp < 0) 
#line 2700 
               goto return_label; else ;
  
#line 2702 
  tmp_0 = test_and_set_bit(1L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2702 
  if (tmp_0 != 0) 
#line 2703 
                  netif_schedule_queue(dev_queue); else ;
  return_label: 
#line 2704 
                return;
}


#line 2717  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netdev_completed_queue(struct net_device *dev, unsigned int pkts, unsigned int bytes)
{
  struct netdev_queue *tmp;
  
#line 2720 
  ;
  
#line 2720 
  ;
  
#line 2720 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2720 
  netdev_tx_completed_queue(tmp,pkts,bytes);
  
#line 2721 
  return;
}


#line 2723  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netdev_tx_reset_queue(struct netdev_queue *q)
{
  
#line 2726 
  set_bit(1L,(unsigned long volatile *)(& q->state));
  
#line 2727 
  dql_reset(& q->dql);
  
#line 2728 
  return;
}


#line 2738  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netdev_reset_queue(struct net_device *dev_queue)
{
  struct netdev_queue *tmp;
  
#line 2740 
  tmp = netdev_get_tx_queue((struct net_device const *)dev_queue,0U);
  
#line 2740 
  netdev_tx_reset_queue(tmp);
  
#line 2741 
  return;
}


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2943 
int netif_receive_skb_sk(struct sock *, struct sk_buff *);


#line 2944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int netif_receive_skb(struct sk_buff *skb)
{
  int tmp;
  
#line 2946 
  tmp = netif_receive_skb_sk(skb->sk,skb);
  
#line 2946 
  return tmp;
}


#line 2948 
gro_result_t napi_gro_receive(struct napi_struct *, struct sk_buff *);


#line 3038  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_carrier_ok(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 3040 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& dev->state));
  
#line 3040 
  __retres = (_Bool)(tmp == 0);
  
#line 3040 
  return __retres;
}


#line 3047 
void netif_carrier_on(struct net_device *);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3117 
void netif_device_detach(struct net_device *);


#line 3119 
void netif_device_attach(struct net_device *);


#line 3159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static u32 netif_msg_init(int debug_value, int default_msg_enable_bits)
{
  u32 __retres;
  
#line 3162 
  if ((unsigned int)debug_value > 31U) {
    
#line 3163 
    __retres = (unsigned int)default_msg_enable_bits;
    
#line 3163 
    goto return_label;
  }
  else ;
  
#line 3164 
  if (debug_value == 0) {
    
#line 3165 
    __retres = 0U;
    
#line 3165 
    goto return_label;
  }
  else ;
  
#line 3167 
  __retres = (unsigned int)((1 << debug_value) + -1);
  return_label: 
#line 3167 
                return __retres;
}


#line 3170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_lock(struct netdev_queue *txq, int cpu)
{
  
#line 3172 
  ldv_spin_lock_60(& txq->_xmit_lock);
  
#line 3173 
  txq->xmit_lock_owner = cpu;
  
#line 3174 
  return;
}


#line 3190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_unlock(struct netdev_queue *txq)
{
  
#line 3192 
  txq->xmit_lock_owner = -1;
  
#line 3193 
  ldv_spin_unlock_63(& txq->_xmit_lock);
  
#line 3194 
  return;
}


#line 3214  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_lock(struct net_device *dev)
{
  unsigned int i;
  int cpu;
  int tmp_3;
  
#line 3219 
  ldv_spin_lock_65(& dev->tx_global_lock);
  {
    int pscr_ret__;
    {
      
#line 3220 
      void const *__vpp_verify = (void const *)0;
      
#line 3220 
      void const *tmp = __vpp_verify;
    }
    
#line 3220 
    switch (4UL) {
      int tmp_0;
      int tmp_0_0;
      int tmp_1;
      int tmp_2;
      case (unsigned long)1: 
#line 3220 
      ;
      {
        int pfo_ret__;
        
#line 3220 
        switch (4UL) {
          case (unsigned long)1: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43804;
          case (unsigned long)2: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43804;
          case (unsigned long)4: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43804;
          case (unsigned long)8: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43804;
          default: 
#line 3220 
          ;
          
#line 3220 
          __bad_percpu_size();
        }
        ldv_43804: 
#line 3220 
        ;
        
#line 3220 
        tmp_0 = pfo_ret__;
      }
      
#line 3220 
      pscr_ret__ = tmp_0;
      
#line 3220 
      goto ldv_43810;
      case (unsigned long)2: 
#line 3220 
      ;
      {
        int pfo_ret___0;
        
#line 3220 
        switch (4UL) {
          case (unsigned long)1: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43814;
          case (unsigned long)2: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43814;
          case (unsigned long)4: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43814;
          case (unsigned long)8: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43814;
          default: 
#line 3220 
          ;
          
#line 3220 
          __bad_percpu_size();
        }
        ldv_43814: 
#line 3220 
        ;
        
#line 3220 
        tmp_0_0 = pfo_ret___0;
      }
      
#line 3220 
      pscr_ret__ = tmp_0_0;
      
#line 3220 
      goto ldv_43810;
      case (unsigned long)4: 
#line 3220 
      ;
      {
        int pfo_ret___1;
        
#line 3220 
        switch (4UL) {
          case (unsigned long)1: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43823;
          case (unsigned long)2: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43823;
          case (unsigned long)4: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43823;
          case (unsigned long)8: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43823;
          default: 
#line 3220 
          ;
          
#line 3220 
          __bad_percpu_size();
        }
        ldv_43823: 
#line 3220 
        ;
        
#line 3220 
        tmp_1 = pfo_ret___1;
      }
      
#line 3220 
      pscr_ret__ = tmp_1;
      
#line 3220 
      goto ldv_43810;
      case (unsigned long)8: 
#line 3220 
      ;
      {
        int pfo_ret___2;
        
#line 3220 
        switch (4UL) {
          case (unsigned long)1: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43832;
          case (unsigned long)2: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43832;
          case (unsigned long)4: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43832;
          case (unsigned long)8: 
#line 3220 
          ;
          
#line 3221 
          ldv_inline_asm();
          
#line 3220 
          goto ldv_43832;
          default: 
#line 3220 
          ;
          
#line 3220 
          __bad_percpu_size();
        }
        ldv_43832: 
#line 3220 
        ;
        
#line 3220 
        tmp_2 = pfo_ret___2;
      }
      
#line 3220 
      pscr_ret__ = tmp_2;
      
#line 3220 
      goto ldv_43810;
      default: 
#line 3220 
      ;
      
#line 3220 
      __bad_size_call_parameter();
      
#line 3220 
      goto ldv_43810;
    }
    ldv_43810: 
#line 3220 
    ;
    
#line 3220 
    tmp_3 = pscr_ret__;
  }
  
#line 3220 
  cpu = tmp_3;
  
#line 3221 
  i = 0U;
  
#line 3221 
  goto ldv_43842;
  ldv_43841: 
#line 3222 
  ;
  {
    
#line 3222 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 3230 
    __netif_tx_lock(txq,cpu);
    
#line 3231 
    set_bit(2L,(unsigned long volatile *)(& txq->state));
    
#line 3232 
    __netif_tx_unlock(txq);
  }
  
#line 3221 
  i += 1U;
  ldv_43842: 
#line 3222 
  ;
  
#line 3221 
  if (dev->num_tx_queues > i) 
#line 3223 
                              goto ldv_43841; else 
#line 3226 
                                                   goto ldv_43843;
  ldv_43843: 
#line 3227 
  ;
  
#line 3228 
  return;
}


#line 3242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_unlock(struct net_device *dev)
{
  unsigned int i;
  
#line 3246 
  i = 0U;
  
#line 3246 
  goto ldv_43853;
  ldv_43852: 
#line 3247 
  ;
  {
    
#line 3247 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 3253 
    set_bit(2L,(unsigned long volatile *)(& txq->state));
    
#line 3254 
    netif_schedule_queue(txq);
  }
  
#line 3246 
  i += 1U;
  ldv_43853: 
#line 3247 
  ;
  
#line 3246 
  if (dev->num_tx_queues > i) 
#line 3248 
                              goto ldv_43852; else 
#line 3251 
                                                   goto ldv_43854;
  ldv_43854: 
#line 3252 
  ;
  
#line 3256 
  ldv_spin_unlock_66(& dev->tx_global_lock);
  
#line 3257 
  return;
}


#line 3282  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_disable(struct net_device *dev)
{
  unsigned int i;
  int cpu;
  int tmp_3;
  
#line 3287 
  local_bh_disable();
  {
    int pscr_ret__;
    {
      
#line 3288 
      void const *__vpp_verify = (void const *)0;
      
#line 3288 
      void const *tmp = __vpp_verify;
    }
    
#line 3288 
    switch (4UL) {
      int tmp_0;
      int tmp_0_0;
      int tmp_1;
      int tmp_2;
      case (unsigned long)1: 
#line 3288 
      ;
      {
        int pfo_ret__;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43868;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43868;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43868;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43868;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_43868: 
#line 3288 
        ;
        
#line 3288 
        tmp_0 = pfo_ret__;
      }
      
#line 3288 
      pscr_ret__ = tmp_0;
      
#line 3288 
      goto ldv_43874;
      case (unsigned long)2: 
#line 3288 
      ;
      {
        int pfo_ret___0;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43878;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43878;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43878;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43878;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_43878: 
#line 3288 
        ;
        
#line 3288 
        tmp_0_0 = pfo_ret___0;
      }
      
#line 3288 
      pscr_ret__ = tmp_0_0;
      
#line 3288 
      goto ldv_43874;
      case (unsigned long)4: 
#line 3288 
      ;
      {
        int pfo_ret___1;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43887;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43887;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43887;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43887;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_43887: 
#line 3288 
        ;
        
#line 3288 
        tmp_1 = pfo_ret___1;
      }
      
#line 3288 
      pscr_ret__ = tmp_1;
      
#line 3288 
      goto ldv_43874;
      case (unsigned long)8: 
#line 3288 
      ;
      {
        int pfo_ret___2;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43896;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43896;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43896;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_43896;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_43896: 
#line 3288 
        ;
        
#line 3288 
        tmp_2 = pfo_ret___2;
      }
      
#line 3288 
      pscr_ret__ = tmp_2;
      
#line 3288 
      goto ldv_43874;
      default: 
#line 3288 
      ;
      
#line 3288 
      __bad_size_call_parameter();
      
#line 3288 
      goto ldv_43874;
    }
    ldv_43874: 
#line 3288 
    ;
    
#line 3288 
    tmp_3 = pscr_ret__;
  }
  
#line 3288 
  cpu = tmp_3;
  
#line 3289 
  i = 0U;
  
#line 3289 
  goto ldv_43906;
  ldv_43905: 
#line 3290 
  ;
  {
    
#line 3290 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 3292 
    __netif_tx_lock(txq,cpu);
    
#line 3293 
    netif_tx_stop_queue(txq);
    
#line 3294 
    __netif_tx_unlock(txq);
  }
  
#line 3289 
  i += 1U;
  ldv_43906: 
#line 3290 
  ;
  
#line 3289 
  if (dev->num_tx_queues > i) 
#line 3291 
                              goto ldv_43905; else 
#line 3294 
                                                   goto ldv_43907;
  ldv_43907: 
#line 3295 
  ;
  
#line 3296 
  local_bh_enable();
  
#line 3297 
  return;
}


#line 3355 
static int ldv_register_netdev_101(struct net_device *ldv_func_arg1);


#line 3359 
static int ldv_register_netdev_102(struct net_device *ldv_func_arg1);


#line 3364 
static void ldv_unregister_netdev_103(struct net_device *ldv_func_arg1);


#line 3368 
static void ldv_unregister_netdev_105(struct net_device *ldv_func_arg1);


#line 3372 
static void ldv_unregister_netdev_108(struct net_device *ldv_func_arg1);


#line 3549 
void netdev_rss_key_fill(void *, size_t);


#line 3683 
void netdev_update_features(struct net_device *);


#line 3819 
void netdev_printk(char const *, struct net_device const *, char const * , ...);


#line 3828 
void netdev_err(struct net_device const *, char const * , ...);


#line 3830 
void netdev_warn(struct net_device const *, char const * , ...);


#line 3834 
void netdev_info(struct net_device const *, char const * , ...);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 47 
int eth_validate_addr(struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_98(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 const *addr)
{
  bool __retres;
  int tmp_3;
  int tmp_0;
  bool tmp;
  
#line 190 
  tmp = is_multicast_ether_addr(addr);
  
#line 190 
  if (tmp) 
#line 190 
           tmp_0 = 0; else 
#line 190 
                           tmp_0 = 1;
  
#line 190 
  if (tmp_0) {
    int tmp_2;
    bool tmp_1;
    
#line 190 
    tmp_1 = is_zero_ether_addr(addr);
    
#line 190 
    if (tmp_1) 
#line 190 
               tmp_2 = 0; else 
#line 190 
                               tmp_2 = 1;
    
#line 190 
    if (tmp_2) 
#line 190 
               tmp_3 = 1; else 
#line 190 
                               tmp_3 = 0;
  }
  else 
#line 190 
       tmp_3 = 0;
  
#line 190 
  __retres = (_Bool)(tmp_3 != 0);
  
#line 190 
  return __retres;
}


#line 835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
int pci_find_capability(struct pci_dev *, int);


#line 863 
int pci_bus_read_config_dword(struct pci_bus *, unsigned int, int, u32 *);


#line 869 
int pci_bus_write_config_dword(struct pci_bus *, unsigned int, int, u32);


#line 891  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_dword(struct pci_dev const *dev, int where, u32 *val)
{
  int tmp;
  
#line 894 
  tmp = pci_bus_read_config_dword(dev->bus,dev->devfn,where,val);
  
#line 894 
  return tmp;
}


#line 904  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_write_config_dword(struct pci_dev const *dev, int where, u32 val)
{
  int tmp;
  
#line 907 
  tmp = pci_bus_write_config_dword(dev->bus,dev->devfn,where,val);
  
#line 907 
  return tmp;
}


#line 951 
int pci_enable_device(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 1040 
int pci_set_power_state(struct pci_dev *, pci_power_t);


#line 1042 
bool pci_pme_capable(struct pci_dev *, pci_power_t);


#line 1046 
int pci_wake_from_d3(struct pci_dev *, bool);


#line 1076 
ssize_t pci_read_vpd(struct pci_dev *, loff_t, size_t, void *);


#line 1094 
int pci_request_regions(struct pci_dev *, char const *);


#line 1096 
void pci_release_regions(struct pci_dev *);


#line 1146 
static int ldv___pci_register_driver_112(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_113(struct pci_driver *ldv_func_arg1);


#line 1212 
void pci_disable_msi(struct pci_dev *);


#line 1219 
int pci_enable_msi_range(struct pci_dev *, int, int);


#line 1220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_enable_msi_exact(struct pci_dev *dev, int nvec)
{
  int __retres;
  
#line 1222 
  int rc = pci_enable_msi_range(dev,nvec,nvec);
  
#line 1223 
  if (rc < 0) {
    
#line 1224 
    __retres = rc;
    
#line 1224 
    goto return_label;
  }
  else ;
  
#line 1225 
  __retres = 0;
  return_label: 
#line 1225 
                return __retres;
}


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void *pci_alloc_consistent(struct pci_dev *hwdev, size_t size, dma_addr_t *dma_handle)
{
  void *tmp_0;
  struct device *tmp;
  
#line 19 
  ;
  
#line 19 
  ;
  
#line 19 
  if (hwdev != (struct pci_dev *)0) 
#line 19 
                                    tmp = & hwdev->dev; else 
#line 19 
                                                             tmp = (struct device *)0;
  
#line 19 
  tmp_0 = dma_alloc_attrs(tmp,size,dma_handle,32U,(struct dma_attrs *)0);
  
#line 19 
  return tmp_0;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void *pci_zalloc_consistent(struct pci_dev *hwdev, size_t size, dma_addr_t *dma_handle)
{
  void *tmp_0;
  struct device *tmp;
  
#line 26 
  ;
  
#line 26 
  ;
  
#line 26 
  if (hwdev != (struct pci_dev *)0) 
#line 26 
                                    tmp = & hwdev->dev; else 
#line 26 
                                                             tmp = (struct device *)0;
  
#line 26 
  tmp_0 = dma_zalloc_coherent(tmp,size,dma_handle,32U);
  
#line 26 
  return tmp_0;
}


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_free_consistent(struct pci_dev *hwdev, size_t size, void *vaddr, dma_addr_t dma_handle)
{
  struct device *tmp;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  if (hwdev != (struct pci_dev *)0) 
#line 34 
                                    tmp = & hwdev->dev; else 
#line 34 
                                                             tmp = (struct device *)0;
  
#line 34 
  dma_free_attrs(tmp,size,vaddr,dma_handle,(struct dma_attrs *)0);
  
#line 35 
  return;
}


#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static dma_addr_t pci_map_single(struct pci_dev *hwdev, void *ptr, size_t size, int direction)
{
  dma_addr_t tmp_0;
  struct device *tmp;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  if (hwdev != (struct pci_dev *)0) 
#line 40 
                                    tmp = & hwdev->dev; else 
#line 40 
                                                             tmp = (struct device *)0;
  
#line 40 
  tmp_0 = dma_map_single_attrs(tmp,ptr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 40 
  return tmp_0;
}


#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_unmap_single(struct pci_dev *hwdev, dma_addr_t dma_addr, size_t size, int direction)
{
  struct device *tmp;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  if (hwdev != (struct pci_dev *)0) 
#line 47 
                                    tmp = & hwdev->dev; else 
#line 47 
                                                             tmp = (struct device *)0;
  
#line 47 
  dma_unmap_single_attrs(tmp,dma_addr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 48 
  return;
}


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_unmap_page(struct pci_dev *hwdev, dma_addr_t dma_address, size_t size, int direction)
{
  struct device *tmp;
  
#line 61 
  ;
  
#line 61 
  ;
  
#line 61 
  ;
  
#line 61 
  if (hwdev != (struct pci_dev *)0) 
#line 61 
                                    tmp = & hwdev->dev; else 
#line 61 
                                                             tmp = (struct device *)0;
  
#line 61 
  dma_unmap_page(tmp,dma_address,size,(enum dma_data_direction)direction);
  
#line 62 
  return;
}


#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_dma_sync_single_for_cpu(struct pci_dev *hwdev, dma_addr_t dma_handle, size_t size, int direction)
{
  struct device *tmp;
  
#line 82 
  ;
  
#line 82 
  ;
  
#line 82 
  ;
  
#line 82 
  if (hwdev != (struct pci_dev *)0) 
#line 82 
                                    tmp = & hwdev->dev; else 
#line 82 
                                                             tmp = (struct device *)0;
  
#line 82 
  dma_sync_single_for_cpu(tmp,dma_handle,size,(enum dma_data_direction)direction);
  
#line 83 
  return;
}


#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_dma_sync_single_for_device(struct pci_dev *hwdev, dma_addr_t dma_handle, size_t size, int direction)
{
  struct device *tmp;
  
#line 89 
  ;
  
#line 89 
  ;
  
#line 89 
  ;
  
#line 89 
  if (hwdev != (struct pci_dev *)0) 
#line 89 
                                    tmp = & hwdev->dev; else 
#line 89 
                                                             tmp = (struct device *)0;
  
#line 89 
  dma_sync_single_for_device(tmp,dma_handle,size,(enum dma_data_direction)direction);
  
#line 90 
  return;
}


#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_dma_mapping_error(struct pci_dev *pdev, dma_addr_t dma_addr)
{
  int tmp;
  
#line 109 
  tmp = dma_mapping_error(& pdev->dev,dma_addr);
  
#line 109 
  return tmp;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 115 
  tmp = dma_set_mask(& dev->dev,mask);
  
#line 115 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_consistent_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 120 
  tmp = dma_set_coherent_mask(& dev->dev,mask);
  
#line 120 
  return tmp;
}


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  
#line 1478 
  dev_set_drvdata(& pdev->dev,data);
  
#line 1479 
  return;
}


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static char const *pci_name(struct pci_dev const *pdev)
{
  char const *tmp;
  
#line 1486 
  tmp = dev_name(& pdev->dev);
  
#line 1486 
  return tmp;
}


#line 1718  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_pcie_cap(struct pci_dev *dev)
{
  int __retres;
  
#line 1720 
  __retres = (int)dev->pcie_cap;
  
#line 1720 
  return __retres;
}


#line 1729  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static bool pci_is_pcie(struct pci_dev *dev)
{
  bool __retres;
  int tmp;
  
#line 1731 
  tmp = pci_pcie_cap(dev);
  
#line 1731 
  __retres = (_Bool)(tmp != 0);
  
#line 1731 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ip.h"
__inline static struct iphdr *ip_hdr(struct sk_buff const *skb)
{
  struct iphdr *tmp;
  
#line 25 
  tmp = (struct iphdr *)skb_network_header(skb);
  
#line 25 
  return tmp;
}


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
void rtnl_lock(void);


#line 28 
void rtnl_unlock(void);


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static struct tcphdr *tcp_hdr(struct sk_buff const *skb)
{
  struct tcphdr *tmp;
  
#line 29 
  tmp = (struct tcphdr *)skb_transport_header(skb);
  
#line 29 
  return tmp;
}


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static unsigned int tcp_hdrlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  struct tcphdr *tmp;
  
#line 34 
  tmp = tcp_hdr(skb);
  
#line 34 
  ;
  
#line 34 
  __retres = (unsigned int)((int)tmp->doff * 4);
  
#line 34 
  return __retres;
}


#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ip.h"
__inline static unsigned int ip_hdrlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  struct iphdr *tmp;
  
#line 55 
  tmp = ip_hdr(skb);
  
#line 55 
  ;
  
#line 55 
  __retres = (unsigned int)((int)tmp->ihl * 4);
  
#line 55 
  return __retres;
}


#line 409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static void __vlan_hwaccel_put_tag(struct sk_buff *skb, __be16 vlan_proto, u16 vlan_tci)
{
  
#line 412 
  skb->vlan_proto = vlan_proto;
  
#line 413 
  skb->vlan_tci = (unsigned short)((unsigned int)vlan_tci | 4096U);
  
#line 414 
  return;
}


#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugfs.h"
static struct dentry *ldv_debugfs_create_file_96(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 62 
struct dentry *debugfs_create_dir(char const *, struct dentry *);


#line 75 
static void ldv_debugfs_remove_95(struct dentry *ldv_func_arg1);


#line 79 
static void ldv_debugfs_remove_97(struct dentry *ldv_func_arg1);


#line 83 
struct dentry *debugfs_rename(struct dentry *, struct dentry *, struct dentry *, char const *);


#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of_net.h"
void const *of_get_mac_address(struct device_node *);


#line 2313  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
__inline static int sky2_is_copper(struct sky2_hw const *hw)
{
  int __retres;
  
#line 2315 
  __retres = (hw->flags & 2UL) == 0UL;
  
#line 2315 
  return __retres;
}


#line 2319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
__inline static u32 sky2_read32(struct sky2_hw const *hw, unsigned int reg)
{
  u32 tmp;
  
#line 2321 
  tmp = readl((void const volatile *)(hw->regs + reg));
  
#line 2321 
  return tmp;
}


#line 2324  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
__inline static u16 sky2_read16(struct sky2_hw const *hw, unsigned int reg)
{
  u16 tmp;
  
#line 2326 
  tmp = readw((void const volatile *)(hw->regs + reg));
  
#line 2326 
  return tmp;
}


#line 2329  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
__inline static u8 sky2_read8(struct sky2_hw const *hw, unsigned int reg)
{
  u8 tmp;
  
#line 2331 
  tmp = readb((void const volatile *)(hw->regs + reg));
  
#line 2331 
  return tmp;
}


#line 2334  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
__inline static void sky2_write32(struct sky2_hw const *hw, unsigned int reg, u32 val)
{
  
#line 2336 
  writel(val,(void volatile *)(hw->regs + reg));
  
#line 2337 
  return;
}


#line 2339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
__inline static void sky2_write16(struct sky2_hw const *hw, unsigned int reg, u16 val)
{
  
#line 2341 
  writew((unsigned short)((int)val),(void volatile *)(hw->regs + reg));
  
#line 2342 
  return;
}


#line 2344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
__inline static void sky2_write8(struct sky2_hw const *hw, unsigned int reg, u8 val)
{
  
#line 2346 
  writeb((unsigned char)((int)val),(void volatile *)(hw->regs + reg));
  
#line 2347 
  return;
}


#line 2354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
__inline static u16 gma_read16(struct sky2_hw const *hw, unsigned int port, unsigned int reg)
{
  u16 tmp;
  
#line 2356 
  tmp = sky2_read16(hw,(port * 4096U + reg) + 10240U);
  
#line 2356 
  return tmp;
}


#line 2359  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
__inline static u32 gma_read32(struct sky2_hw *hw, unsigned int port, unsigned int reg)
{
  u32 __retres;
  u16 tmp;
  u16 tmp_0;
  
#line 2361 
  unsigned int base = (port * 4096U + reg) + 10240U;
  
#line 2362 
  tmp = sky2_read16((struct sky2_hw const *)hw,base);
  
#line 2363 
  tmp_0 = sky2_read16((struct sky2_hw const *)hw,base + 4U);
  
#line 2363 
  __retres = (unsigned int)tmp | ((unsigned int)tmp_0 << 16);
  
#line 2363 
  return __retres;
}


#line 2366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
__inline static u64 gma_read64(struct sky2_hw *hw, unsigned int port, unsigned int reg)
{
  u64 __retres;
  u16 tmp;
  u16 tmp_0;
  u16 tmp_1;
  u16 tmp_2;
  
#line 2368 
  unsigned int base = (port * 4096U + reg) + 10240U;
  
#line 2370 
  tmp = sky2_read16((struct sky2_hw const *)hw,base);
  
#line 2371 
  tmp_0 = sky2_read16((struct sky2_hw const *)hw,base + 4U);
  
#line 2372 
  tmp_1 = sky2_read16((struct sky2_hw const *)hw,base + 8U);
  
#line 2373 
  tmp_2 = sky2_read16((struct sky2_hw const *)hw,base + 12U);
  
#line 2373 
  __retres = (((unsigned long long)tmp | ((unsigned long long)tmp_0 << 16)) | ((unsigned long long)tmp_1 << 32)) | ((unsigned long long)tmp_2 << 48);
  
#line 2373 
  return __retres;
}


#line 2377  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
__inline static u32 get_stats32(struct sky2_hw *hw, unsigned int port, unsigned int reg)
{
  u32 val;
  u32 tmp;
  ldv_55471: 
#line 2380 
  ;
  
#line 2382 
  val = gma_read32(hw,port,reg);
  
#line 2383 
  tmp = gma_read32(hw,port,reg);
  
#line 2383 
  ;
  
#line 2383 
  if (tmp != val) 
#line 2385 
                  goto ldv_55471; else 
#line 2388 
                                       goto ldv_55472;
  ldv_55472: 
#line 2389 
  ;
  
#line 2385 
  return val;
}


#line 2388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
__inline static u64 get_stats64(struct sky2_hw *hw, unsigned int port, unsigned int reg)
{
  u64 val;
  u64 tmp;
  ldv_55479: 
#line 2391 
  ;
  
#line 2393 
  val = gma_read64(hw,port,reg);
  
#line 2394 
  tmp = gma_read64(hw,port,reg);
  
#line 2394 
  ;
  
#line 2394 
  if (tmp != val) 
#line 2396 
                  goto ldv_55479; else 
#line 2399 
                                       goto ldv_55480;
  ldv_55480: 
#line 2400 
  ;
  
#line 2396 
  return val;
}


#line 2399  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
__inline static void gma_write16(struct sky2_hw const *hw, unsigned int port, int r, u16 v)
{
  
#line 2401 
  sky2_write16(hw,(port * 4096U + (unsigned int)r) + 10240U,(unsigned short)((int)v));
  
#line 2402 
  return;
}


#line 2404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
__inline static void gma_set_addr(struct sky2_hw *hw, unsigned int port, unsigned int reg, u8 const *addr)
{
  
#line 2407 
  gma_write16((struct sky2_hw const *)hw,port,(int)reg,(unsigned short)((int)((unsigned short)((int)*addr | ((int)*(addr + 1U) << 8)))));
  
#line 2408 
  gma_write16((struct sky2_hw const *)hw,port,(int)(reg + 4U),(unsigned short)((int)((unsigned short)((int)*(addr + 2U) | ((int)*(addr + 3U) << 8)))));
  
#line 2409 
  gma_write16((struct sky2_hw const *)hw,port,(int)(reg + 8U),(unsigned short)((int)((unsigned short)((int)*(addr + 4U) | ((int)*(addr + 5U) << 8)))));
  
#line 2410 
  return;
}


#line 2413  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
__inline static u32 sky2_pci_read32(struct sky2_hw const *hw, unsigned int reg)
{
  u32 tmp;
  
#line 2415 
  tmp = sky2_read32(hw,reg + 7168U);
  
#line 2415 
  return tmp;
}


#line 2418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
__inline static u16 sky2_pci_read16(struct sky2_hw const *hw, unsigned int reg)
{
  u16 tmp;
  
#line 2420 
  tmp = sky2_read16(hw,reg + 7168U);
  
#line 2420 
  return tmp;
}


#line 2423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
__inline static void sky2_pci_write32(struct sky2_hw *hw, unsigned int reg, u32 val)
{
  
#line 2425 
  sky2_write32((struct sky2_hw const *)hw,reg + 7168U,val);
  
#line 2426 
  return;
}


#line 2428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.h"
__inline static void sky2_pci_write16(struct sky2_hw *hw, unsigned int reg, u16 val)
{
  
#line 2430 
  sky2_write16((struct sky2_hw const *)hw,reg + 7168U,(unsigned short)((int)val));
  
#line 2431 
  return;
}


#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static u32 const default_msg = 255U;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int debug = -1;

#line 92  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int copybreak = 128;

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int disable_msi = 0;

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int legacy_pme = 0;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static struct pci_device_id const sky2_id_table[43U] = {{.vendor = 4424U, .device = 36864U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4424U, .device = 40448U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4424U, .device = 40449U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4486U, .device = 19200U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4486U, .device = 16385U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4486U, .device = 19202U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4486U, .device = 19203U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17216U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17217U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17218U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17219U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17220U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17221U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17222U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17223U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17232U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17233U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17234U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17235U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17236U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17237U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17238U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17239U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17242U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17248U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17249U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17250U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17251U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17252U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17253U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17254U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17255U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17256U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17257U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17258U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17259U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17260U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17261U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17264U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17280U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17281U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 17282U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 150  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
struct pci_device_id const __mod_pci__sky2_id_table_device_table[43U];

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static unsigned int const txqaddr[2U] = {640U, 896U};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static unsigned int const rxqaddr[2U] = {0U, 128U};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static u32 const portirq_msk[2U] = {29U, 7424U};

#line 157 
static void sky2_set_multicast(struct net_device *dev);


#line 158 
static irqreturn_t sky2_intr(int irq, void *dev_id);


#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int gm_phy_write(struct sky2_hw *hw, unsigned int port, u16 reg, u16 val)
{
  int __retres;
  int i;
  
#line 165 
  gma_write16((struct sky2_hw const *)hw,port,132,(unsigned short)((int)val));
  
#line 166 
  gma_write16((struct sky2_hw const *)hw,port,128,(unsigned short)((int)((unsigned short)((int)reg << 6)) & 1984));
  
#line 169 
  i = 0;
  
#line 169 
  goto ldv_55636;
  ldv_55635: 
#line 170 
  ;
  {
    
#line 170 
    u16 ctrl = gma_read16((struct sky2_hw const *)hw,port,128U);
    
#line 171 
    if ((unsigned int)ctrl == 65535U) 
#line 172 
                                      goto io_error; else ;
    
#line 174 
    if (((int)ctrl & 8) == 0) {
      
#line 175 
      __retres = 0;
      
#line 175 
      goto return_label;
    }
    else ;
    
#line 177 
    __const_udelay(42950UL);
  }
  
#line 169 
  i += 1;
  ldv_55636: 
#line 170 
  ;
  
#line 169 
  if (i <= 999) 
#line 171 
                goto ldv_55635; else 
#line 174 
                                     goto ldv_55637;
  ldv_55637: 
#line 175 
  ;
  
#line 180 
  dev_warn((struct device const *)(& (hw->pdev)->dev),"%s: phy write timeout\n",(char *)(& (hw->dev[port])->name));
  
#line 181 
  __retres = -110;
  
#line 181 
  goto return_label;
  io_error: 
#line 183 
  ;
  
#line 184 
  dev_err((struct device const *)(& (hw->pdev)->dev),"%s: phy I/O error\n",(char *)(& (hw->dev[port])->name));
  
#line 185 
  __retres = -5;
  return_label: 
#line 185 
                return __retres;
}


#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int __gm_phy_read(struct sky2_hw *hw, unsigned int port, u16 reg, u16 *val)
{
  int __retres;
  int i;
  
#line 192 
  gma_write16((struct sky2_hw const *)hw,port,128,(unsigned short)((int)((unsigned short)((((int)reg << 6) & 1984) | 32))));
  
#line 195 
  i = 0;
  
#line 195 
  goto ldv_55648;
  ldv_55647: 
#line 196 
  ;
  {
    
#line 196 
    u16 ctrl = gma_read16((struct sky2_hw const *)hw,port,128U);
    
#line 197 
    if ((unsigned int)ctrl == 65535U) 
#line 198 
                                      goto io_error; else ;
    
#line 200 
    if (((int)ctrl & 16) != 0) {
      
#line 201 
      *val = gma_read16((struct sky2_hw const *)hw,port,132U);
      
#line 202 
      __retres = 0;
      
#line 202 
      goto return_label;
    }
    else ;
    
#line 205 
    __const_udelay(42950UL);
  }
  
#line 195 
  i += 1;
  ldv_55648: 
#line 196 
  ;
  
#line 195 
  if (i <= 999) 
#line 197 
                goto ldv_55647; else 
#line 200 
                                     goto ldv_55649;
  ldv_55649: 
#line 201 
  ;
  
#line 208 
  dev_warn((struct device const *)(& (hw->pdev)->dev),"%s: phy read timeout\n",(char *)(& (hw->dev[port])->name));
  
#line 209 
  __retres = -110;
  
#line 209 
  goto return_label;
  io_error: 
#line 210 
  ;
  
#line 211 
  dev_err((struct device const *)(& (hw->pdev)->dev),"%s: phy I/O error\n",(char *)(& (hw->dev[port])->name));
  
#line 212 
  __retres = -5;
  return_label: 
#line 212 
                return __retres;
}


#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
__inline static u16 gm_phy_read(struct sky2_hw *hw, unsigned int port, u16 reg)
{
  u16 v;
  
#line 218 
  __gm_phy_read(hw,port,(unsigned short)((int)reg),& v);
  
#line 219 
  return v;
}


#line 223  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_power_on(struct sky2_hw *hw)
{
  
#line 226 
  sky2_write8((struct sky2_hw const *)hw,7U,(unsigned char)166);
  
#line 230 
  sky2_write32((struct sky2_hw const *)hw,288U,1U);
  
#line 232 
  if ((unsigned int)hw->chip_id == 179U && (unsigned int)hw->chip_rev > 1U) 
    
#line 234 
    sky2_write8((struct sky2_hw const *)hw,285U,(unsigned char)119); else 
                                                                    
#line 239 
                                                                    sky2_write8((struct sky2_hw const *)hw,285U,(unsigned char)0);
  
#line 241 
  if ((hw->flags & 128UL) != 0UL) {
    u32 reg;
    
#line 244 
    sky2_pci_write32(hw,128U,0U);
    
#line 246 
    reg = sky2_pci_read32((struct sky2_hw const *)hw,132U);
    
#line 248 
    reg &= 61440U;
    
#line 249 
    sky2_pci_write32(hw,132U,reg);
    
#line 251 
    reg = sky2_pci_read32((struct sky2_hw const *)hw,136U);
    
#line 253 
    reg &= 402653184U;
    
#line 254 
    sky2_pci_write32(hw,136U,reg);
    
#line 256 
    sky2_pci_write32(hw,148U,0U);
    
#line 258 
    sky2_write16((struct sky2_hw const *)hw,4U,(unsigned short)32768);
    
#line 261 
    reg = sky2_read32((struct sky2_hw const *)hw,348U);
    
#line 262 
    reg |= 8192U;
    
#line 263 
    sky2_write32((struct sky2_hw const *)hw,348U,reg);
    
#line 265 
    sky2_read32((struct sky2_hw const *)hw,348U);
  }
  else ;
  
#line 269 
  sky2_write16((struct sky2_hw const *)hw,4U,(unsigned short)512);
  
#line 270 
  return;
}


#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_power_aux(struct sky2_hw *hw)
{
  u32 tmp;
  
#line 274 
  if ((unsigned int)hw->chip_id == 179U && (unsigned int)hw->chip_rev > 1U) 
    
#line 275 
    sky2_write8((struct sky2_hw const *)hw,285U,(unsigned char)0); else 
                                                                    
#line 278 
                                                                    sky2_write8((struct sky2_hw const *)hw,285U,(unsigned char)119);
  
#line 284 
  tmp = sky2_read32((struct sky2_hw const *)hw,4U);
  
#line 284 
  if ((tmp & 65536U) != 0U) {
    bool tmp_0;
    
#line 284 
    tmp_0 = pci_pme_capable(hw->pdev,4);
    
#line 284 
    if ((int)tmp_0 != 0) 
#line 286 
                         sky2_write8((struct sky2_hw const *)hw,7U,(unsigned char)169); else ;
  }
  else ;
  
#line 291 
  sky2_write16((struct sky2_hw const *)hw,4U,(unsigned short)256);
  
#line 292 
  return;
}


#line 294  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_gmac_reset(struct sky2_hw *hw, unsigned int port)
{
  u16 reg;
  
#line 299 
  sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3852U,(unsigned char)0);
  
#line 301 
  gma_write16((struct sky2_hw const *)hw,port,52,(unsigned short)0);
  
#line 302 
  gma_write16((struct sky2_hw const *)hw,port,56,(unsigned short)0);
  
#line 303 
  gma_write16((struct sky2_hw const *)hw,port,60,(unsigned short)0);
  
#line 304 
  gma_write16((struct sky2_hw const *)hw,port,64,(unsigned short)0);
  
#line 306 
  reg = gma_read16((struct sky2_hw const *)hw,port,12U);
  
#line 307 
  reg = (unsigned short)((unsigned int)reg | 49152U);
  
#line 308 
  gma_write16((struct sky2_hw const *)hw,port,12,(unsigned short)((int)reg));
  
#line 309 
  return;
}


#line 312  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static u16 const copper_fc_adv[4U] = {(unsigned short)0U, (unsigned short)2048U, (unsigned short)1024U, (unsigned short)3072U};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static u16 const fiber_fc_adv[4U] = {(unsigned short)0U, (unsigned short)256U, (unsigned short)128U, (unsigned short)384U};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static u16 const gm_fc_disable[4U] = {(unsigned short)8208U, (unsigned short)16U, (unsigned short)8192U, (unsigned short)0U};

#line 336  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_phy_init(struct sky2_hw *hw, unsigned int port)
{
  u16 ctrl;
  u16 ct1000;
  u16 adv;
  u16 pg;
  u16 ledctrl;
  u16 ledover;
  u16 reg;
  int tmp_1;
  
#line 338 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)hw->dev[port]);
  
#line 341 
  if (((int)sky2->flags & 2) != 0 && (hw->flags & 8UL) == 0UL) {
    
#line 343 
    u16 ectrl = gm_phy_read(hw,port,(unsigned short)20);
    
#line 345 
    ectrl = (unsigned short)((unsigned int)ectrl & 61583U);
    
#line 347 
    ectrl = (unsigned short)((unsigned int)ectrl | 112U);
    
#line 350 
    if ((unsigned int)hw->chip_id == 182U) 
#line 352 
                                           ectrl = (unsigned short)((unsigned int)ectrl | 1280U); else 
                                                                    
#line 355 
                                                                    ectrl = (unsigned short)((unsigned int)ectrl | 256U);
    
#line 357 
    gm_phy_write(hw,port,(unsigned short)20,(unsigned short)((int)ectrl));
  }
  else ;
  
#line 360 
  ctrl = gm_phy_read(hw,port,(unsigned short)16);
  
#line 361 
  tmp_1 = sky2_is_copper((struct sky2_hw const *)hw);
  
#line 361 
  if (tmp_1 != 0) 
    
#line 362 
    if ((hw->flags & 4UL) == 0UL) {
      
#line 364 
      ctrl = (unsigned short)((unsigned int)ctrl | 48U);
      
#line 366 
      if ((unsigned int)hw->chip_id == 184U && (unsigned int)hw->chip_rev == 0U) {
        u16 spec;
        
#line 371 
        spec = gm_phy_read(hw,port,(unsigned short)28);
        
#line 372 
        spec = (unsigned short)((unsigned int)spec | 1U);
        
#line 373 
        gm_phy_write(hw,port,(unsigned short)28,(unsigned short)((int)spec));
      }
      else ;
    }
    else {
      
#line 377 
      ctrl = (unsigned short)((unsigned int)ctrl & 64767U);
      
#line 380 
      ctrl = (unsigned short)((unsigned int)ctrl | 96U);
      
#line 383 
      if (((int)sky2->flags & 2) != 0 && (hw->flags & 8UL) != 0UL) {
        
#line 386 
        ctrl = (unsigned short)((unsigned int)ctrl & 36863U);
        
#line 387 
        ctrl = (unsigned short)((unsigned int)ctrl | 10240U);
      }
      else ;
    }
  else 
#line 394 
       ctrl = (unsigned short)((unsigned int)ctrl & 65439U);
  
#line 397 
  gm_phy_write(hw,port,(unsigned short)16,(unsigned short)((int)ctrl));
  
#line 400 
  if ((unsigned int)hw->chip_id == 179U && (hw->flags & 2UL) != 0UL) {
    
#line 401 
    pg = gm_phy_read(hw,port,(unsigned short)22);
    
#line 404 
    gm_phy_write(hw,port,(unsigned short)22,(unsigned short)2);
    
#line 405 
    ctrl = gm_phy_read(hw,port,(unsigned short)16);
    
#line 406 
    ctrl = (unsigned short)((unsigned int)ctrl & 64639U);
    
#line 407 
    ctrl = (unsigned short)((unsigned int)ctrl | 896U);
    
#line 408 
    gm_phy_write(hw,port,(unsigned short)16,(unsigned short)((int)ctrl));
    
#line 410 
    if ((unsigned int)hw->pmd_type == 80U) {
      
#line 412 
      gm_phy_write(hw,port,(unsigned short)22,(unsigned short)1);
      
#line 415 
      ctrl = gm_phy_read(hw,port,(unsigned short)16);
      
#line 416 
      ctrl = (unsigned short)((unsigned int)ctrl | 512U);
      
#line 417 
      gm_phy_write(hw,port,(unsigned short)16,(unsigned short)((int)ctrl));
    }
    else ;
    
#line 420 
    gm_phy_write(hw,port,(unsigned short)22,(unsigned short)((int)pg));
  }
  else ;
  
#line 423 
  ctrl = (unsigned short)32768U;
  
#line 424 
  ct1000 = (unsigned short)0U;
  
#line 425 
  adv = (unsigned short)1U;
  
#line 426 
  reg = (unsigned short)0U;
  
#line 428 
  if (((int)sky2->flags & 2) != 0) {
    int tmp_2;
    
#line 429 
    tmp_2 = sky2_is_copper((struct sky2_hw const *)hw);
    
#line 429 
    if (tmp_2 != 0) {
      
#line 430 
      if (((int)sky2->advertising & 32) != 0) 
#line 431 
                                              ct1000 = (unsigned short)((unsigned int)ct1000 | 512U); else ;
      
#line 432 
      if (((int)sky2->advertising & 16) != 0) 
#line 433 
                                              ct1000 = (unsigned short)((unsigned int)ct1000 | 256U); else ;
      
#line 434 
      if (((int)sky2->advertising & 8) != 0) 
#line 435 
                                             adv = (unsigned short)((unsigned int)adv | 256U); else ;
      
#line 436 
      if (((int)sky2->advertising & 4) != 0) 
#line 437 
                                             adv = (unsigned short)((unsigned int)adv | 128U); else ;
      
#line 438 
      if (((int)sky2->advertising & 2) != 0) 
#line 439 
                                             adv = (unsigned short)((unsigned int)adv | 64U); else ;
      
#line 440 
      if (((int)sky2->advertising & 1) != 0) 
#line 441 
                                             adv = (unsigned short)((unsigned int)adv | 32U); else ;
    }
    else {
      
#line 444 
      if (((int)sky2->advertising & 32) != 0) 
#line 445 
                                              adv = (unsigned short)((unsigned int)adv | 32U); else ;
      
#line 446 
      if (((int)sky2->advertising & 16) != 0) 
#line 447 
                                              adv = (unsigned short)((unsigned int)adv | 64U); else ;
    }
    
#line 451 
    ctrl = (unsigned short)((unsigned int)ctrl | 4608U);
  }
  else {
    
#line 454 
    ct1000 = (unsigned short)4096U;
    
#line 457 
    reg = (unsigned short)((unsigned int)reg | 5U);
    
#line 459 
    switch ((int)sky2->speed) {
      case 1000: 
#line 460 
      ;
      
#line 461 
      ctrl = (unsigned short)((unsigned int)ctrl | 64U);
      
#line 462 
      reg = (unsigned short)((unsigned int)reg | 136U);
      
#line 463 
      goto ldv_55686;
      case 100: 
#line 464 
      ;
      
#line 465 
      ctrl = (unsigned short)((unsigned int)ctrl | 8192U);
      
#line 466 
      reg = (unsigned short)((unsigned int)reg | 8U);
      
#line 467 
      goto ldv_55686;
    }
    ldv_55686: 
#line 470 
    ;
    
#line 470 
    if ((unsigned int)sky2->duplex == 1U) {
      
#line 471 
      reg = (unsigned short)((unsigned int)reg | 32U);
      
#line 472 
      ctrl = (unsigned short)((unsigned int)ctrl | 256U);
    }
    else 
      
#line 473 
      if ((unsigned int)sky2->speed <= 999U) 
#line 474 
                                             sky2->flow_mode = FC_NONE; else ;
  }
  
#line 477 
  if (((int)sky2->flags & 4) != 0) {
    int tmp_3;
    
#line 478 
    tmp_3 = sky2_is_copper((struct sky2_hw const *)hw);
    
#line 478 
    if (tmp_3 != 0) 
#line 479 
                    adv = (unsigned short)((int)copper_fc_adv[(unsigned int)sky2->flow_mode] | (int)adv); else 
                                                                    
#line 481 
                                                                    adv = (unsigned short)((int)fiber_fc_adv[(unsigned int)sky2->flow_mode] | (int)adv);
  }
  else {
    
#line 483 
    reg = (unsigned short)((unsigned int)reg | 2U);
    
#line 484 
    reg = (unsigned short)((int)gm_fc_disable[(unsigned int)sky2->flow_mode] | (int)reg);
    
#line 487 
    if (((unsigned int)sky2->flow_mode & 2U) != 0U) 
#line 488 
                                                    sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3840U,(unsigned char)8); else 
                                                                    
#line 490 
                                                                    sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3840U,(unsigned char)4);
  }
  
#line 493 
  gma_write16((struct sky2_hw const *)hw,port,4,(unsigned short)((int)reg));
  
#line 495 
  if ((hw->flags & 4UL) != 0UL) 
#line 496 
                                gm_phy_write(hw,port,(unsigned short)9,(unsigned short)((int)ct1000)); else ;
  
#line 498 
  gm_phy_write(hw,port,(unsigned short)4,(unsigned short)((int)adv));
  
#line 499 
  gm_phy_write(hw,port,(unsigned short)0,(unsigned short)((int)ctrl));
  
#line 502 
  ledctrl = (unsigned short)16384U;
  
#line 503 
  ledover = (unsigned short)0U;
  
#line 505 
  switch ((int)hw->chip_id) {
    case 183: 
#line 506 
    ;
    
#line 508 
    ledctrl = (unsigned short)((unsigned int)ledctrl | 512U);
    
#line 510 
    ctrl = gm_phy_read(hw,port,(unsigned short)22);
    
#line 513 
    ctrl = (unsigned short)((unsigned int)ctrl & 65295U);
    
#line 515 
    ctrl = (unsigned short)((unsigned int)ctrl | 176U);
    
#line 516 
    gm_phy_write(hw,port,(unsigned short)22,(unsigned short)((int)ctrl));
    
#line 517 
    goto ldv_55689;
    case 184: 
#line 519 
    ;
    
#line 521 
    ctrl = gm_phy_read(hw,port,(unsigned short)16);
    
#line 522 
    ctrl = (unsigned short)((unsigned int)ctrl | 4096U);
    
#line 525 
    ctrl = (unsigned short)((unsigned int)ctrl & 48639U);
    
#line 526 
    gm_phy_write(hw,port,(unsigned short)16,(unsigned short)((int)ctrl));
    
#line 529 
    ctrl = (unsigned short)2900U;
    
#line 533 
    gm_phy_write(hw,port,(unsigned short)22,(unsigned short)((int)ctrl));
    
#line 534 
    goto ldv_55689;
    case 179: 
#line 536 
    ;
    
#line 537 
    pg = gm_phy_read(hw,port,(unsigned short)22);
    
#line 540 
    gm_phy_write(hw,port,(unsigned short)22,(unsigned short)3);
    
#line 543 
    gm_phy_write(hw,port,(unsigned short)16,(unsigned short)6007);
    
#line 550 
    gm_phy_write(hw,port,(unsigned short)17,(unsigned short)17578);
    
#line 559 
    gm_phy_write(hw,port,(unsigned short)22,(unsigned short)((int)pg));
    
#line 560 
    goto ldv_55689;
    case 180: 
#line 562 
    ;
    case 181: 
#line 563 
    ;
    case 185: 
#line 564 
    ;
    
#line 565 
    pg = gm_phy_read(hw,port,(unsigned short)22);
    
#line 568 
    gm_phy_write(hw,port,(unsigned short)22,(unsigned short)3);
    
#line 571 
    gm_phy_write(hw,port,(unsigned short)16,(unsigned short)6263);
    
#line 578 
    gm_phy_write(hw,port,(unsigned short)18,(unsigned short)((int)((unsigned int)ledctrl | 256U)));
    
#line 581 
    gm_phy_write(hw,port,(unsigned short)22,(unsigned short)((int)pg));
    
#line 582 
    goto ldv_55689;
    default: 
#line 584 
    ;
    
#line 586 
    ledctrl = (unsigned short)((unsigned int)ledctrl | 257U);
    
#line 589 
    ledover = (unsigned short)((unsigned int)ledover | 8U);
  }
  ldv_55689: 
#line 592 
  ;
  
#line 592 
  if ((unsigned int)hw->chip_id == 180U || (unsigned int)hw->chip_id == 186U) {
    
#line 594 
    gm_phy_write(hw,port,(unsigned short)22,(unsigned short)255);
    
#line 597 
    gm_phy_write(hw,port,(unsigned short)24,(unsigned short)43673);
    
#line 598 
    gm_phy_write(hw,port,(unsigned short)23,(unsigned short)8209);
    
#line 600 
    if ((unsigned int)hw->chip_id == 180U) {
      
#line 602 
      gm_phy_write(hw,port,(unsigned short)24,(unsigned short)41476);
      
#line 603 
      gm_phy_write(hw,port,(unsigned short)23,(unsigned short)8194);
    }
    else ;
    
#line 607 
    gm_phy_write(hw,port,(unsigned short)22,(unsigned short)0);
  }
  else 
    
#line 608 
    if ((unsigned int)hw->chip_id == 184U && (unsigned int)hw->chip_rev == 0U) {
      
#line 611 
      gm_phy_write(hw,port,(unsigned short)29,(unsigned short)17);
      
#line 612 
      gm_phy_write(hw,port,(unsigned short)30,(unsigned short)16224);
    }
    else 
      
#line 613 
      if ((unsigned int)hw->chip_id == 188U && (unsigned int)hw->chip_rev == 0U) {
        
#line 615 
        gm_phy_write(hw,port,(unsigned short)22,(unsigned short)255);
        
#line 618 
        gm_phy_write(hw,port,(unsigned short)24,(unsigned short)10240);
        
#line 619 
        gm_phy_write(hw,port,(unsigned short)23,(unsigned short)8193);
        
#line 622 
        gm_phy_write(hw,port,(unsigned short)22,(unsigned short)0);
      }
      else 
        
#line 623 
        if ((unsigned int)hw->chip_id != 181U && (unsigned int)hw->chip_id <= 184U) {
          
#line 626 
          gm_phy_write(hw,port,(unsigned short)24,(unsigned short)((int)ledctrl));
          
#line 628 
          if (((int)sky2->flags & 2) == 0 || (unsigned int)sky2->speed == 100U) 
            
#line 631 
            ledover = (unsigned short)((unsigned int)ledover | 192U); else ;
          
#line 634 
          if ((unsigned int)ledover != 0U) 
#line 635 
                                           gm_phy_write(hw,port,(unsigned short)25,(unsigned short)((int)ledover)); else ;
        }
        else 
          
#line 637 
          if ((unsigned int)hw->chip_id == 189U) {
            u8 tmp_4;
            
#line 637 
            tmp_4 = sky2_read8((struct sky2_hw const *)hw,282U);
            
#line 637 
            if (((int)tmp_4 & 15) == 7) {
              int i;
              
#line 643 
              struct __anonstruct_eee_afe_384 const eee_afe[15U] = {{.reg = (unsigned short)342U, .val = (unsigned short)22734U}, {.reg = (unsigned short)339U, .val = (unsigned short)39403U}, {.reg = (unsigned short)321U, .val = (unsigned short)32868U}, {.reg = (unsigned short)0U, .val = (unsigned short)0U}, {.reg = (unsigned short)337U, .val = (unsigned short)33843U}, {.reg = (unsigned short)331U, .val = (unsigned short)35908U}, {.reg = (unsigned short)332U, .val = (unsigned short)3984U}, {.reg = (unsigned short)335U, .val = (unsigned short)14762U}, {.reg = (unsigned short)333U, .val = (unsigned short)47667U}, {.reg = (unsigned short)324U, .val = (unsigned short)72U}, {.reg = (unsigned short)338U, .val = (unsigned short)8208U}, {.reg = (unsigned short)320U, .val = (unsigned short)17476U}, {.reg = (unsigned short)340U, .val = (unsigned short)12091U}, {.reg = (unsigned short)344U, .val = (unsigned short)45571U}, {.reg = (unsigned short)343U, .val = (unsigned short)8233U}};
              
#line 665 
              gm_phy_write(hw,port,(unsigned short)22,(unsigned short)251);
              
#line 667 
              gm_phy_write(hw,port,(unsigned short)1,(unsigned short)16537);
              
#line 668 
              gm_phy_write(hw,port,(unsigned short)3,(unsigned short)4384);
              
#line 669 
              gm_phy_write(hw,port,(unsigned short)11,(unsigned short)4412);
              
#line 670 
              gm_phy_write(hw,port,(unsigned short)14,(unsigned short)33024);
              
#line 671 
              gm_phy_write(hw,port,(unsigned short)15,(unsigned short)4394);
              
#line 672 
              gm_phy_write(hw,port,(unsigned short)17,(unsigned short)4104);
              
#line 674 
              gm_phy_write(hw,port,(unsigned short)22,(unsigned short)252);
              
#line 675 
              gm_phy_write(hw,port,(unsigned short)1,(unsigned short)8368);
              
#line 677 
              gm_phy_write(hw,port,(unsigned short)22,(unsigned short)255);
              
#line 679 
              i = 0;
              
#line 679 
              goto ldv_55705;
              ldv_55704: 
#line 680 
              ;
              
#line 681 
              gm_phy_write(hw,port,(unsigned short)17,(unsigned short)((int)eee_afe[i].val));
              
#line 682 
              gm_phy_write(hw,port,(unsigned short)16,(unsigned short)((int)((unsigned int)eee_afe[i].reg | 8192U)));
              
#line 679 
              i += 1;
              ldv_55705: 
#line 680 
              ;
              
#line 679 
              if ((unsigned int)i <= 14U) 
#line 681 
                                          goto ldv_55704; else 
#line 684 
                                                               goto ldv_55706;
              ldv_55706: 
#line 685 
              ;
              
#line 686 
              gm_phy_write(hw,port,(unsigned short)22,(unsigned short)0);
              
#line 689 
              if ((unsigned int)hw->chip_id > 188U) {
                
#line 690 
                reg = gm_phy_read(hw,port,(unsigned short)20);
                
#line 691 
                gm_phy_write(hw,port,(unsigned short)20,(unsigned short)((int)((unsigned int)reg | 128U)));
              }
              else ;
            }
            else ;
          }
          else ;
  
#line 697 
  if (((int)sky2->flags & 2) != 0) 
#line 698 
                                   gm_phy_write(hw,port,(unsigned short)18,(unsigned short)2048); else 
                                                                    
#line 700 
                                                                    gm_phy_write(hw,port,(unsigned short)18,(unsigned short)25600);
  
#line 701 
  return;
}


#line 703  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static u32 const phy_power[2U] = {67108864U, 134217728U};

#line 704  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static u32 const coma_mode[2U] = {268435456U, 536870912U};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_phy_power_up(struct sky2_hw *hw, unsigned int port)
{
  u32 reg1;
  
#line 710 
  sky2_write8((struct sky2_hw const *)hw,344U,(unsigned char)2);
  
#line 711 
  reg1 = sky2_pci_read32((struct sky2_hw const *)hw,64U);
  
#line 712 
  reg1 = ~ phy_power[port] & reg1;
  
#line 714 
  if ((unsigned int)hw->chip_id == 179U && (unsigned int)hw->chip_rev > 1U) 
    
#line 715 
    reg1 = coma_mode[port] | reg1; else ;
  
#line 717 
  sky2_pci_write32(hw,64U,reg1);
  
#line 718 
  sky2_write8((struct sky2_hw const *)hw,344U,(unsigned char)1);
  
#line 719 
  sky2_pci_read32((struct sky2_hw const *)hw,64U);
  
#line 721 
  if ((unsigned int)hw->chip_id == 183U) 
#line 722 
                                         gm_phy_write(hw,port,(unsigned short)0,(unsigned short)4096);
  else 
    
#line 723 
    if ((hw->flags & 128UL) != 0UL) 
#line 724 
                                    sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3844U,(unsigned char)2); else ;
  
#line 725 
  return;
}


#line 727  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_phy_power_down(struct sky2_hw *hw, unsigned int port)
{
  u32 reg1;
  u16 ctrl;
  
#line 733 
  sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3844U,(unsigned char)2);
  
#line 736 
  sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3840U,(unsigned char)2);
  
#line 738 
  if ((hw->flags & 8UL) != 0UL) {
    
#line 740 
    gm_phy_write(hw,port,(unsigned short)22,(unsigned short)2);
    
#line 742 
    ctrl = gm_phy_read(hw,port,(unsigned short)16);
    
#line 744 
    ctrl = (unsigned short)((unsigned int)ctrl & 65527U);
    
#line 745 
    gm_phy_write(hw,port,(unsigned short)16,(unsigned short)((int)ctrl));
    
#line 748 
    gm_phy_write(hw,port,(unsigned short)22,(unsigned short)0);
  }
  else ;
  
#line 752 
  gma_write16((struct sky2_hw const *)hw,port,4,(unsigned short)79);
  
#line 757 
  if ((unsigned int)hw->chip_id != 182U) {
    
#line 758 
    if ((unsigned int)hw->chip_id == 180U) {
      
#line 760 
      gm_phy_write(hw,port,(unsigned short)22,(unsigned short)2);
      
#line 762 
      ctrl = gm_phy_read(hw,port,(unsigned short)16);
      
#line 764 
      ctrl = (unsigned short)((unsigned int)ctrl | 4U);
      
#line 765 
      gm_phy_write(hw,port,(unsigned short)16,(unsigned short)((int)ctrl));
      
#line 768 
      gm_phy_write(hw,port,(unsigned short)22,(unsigned short)0);
    }
    else ;
    
#line 772 
    gm_phy_write(hw,port,(unsigned short)0,(unsigned short)2048);
  }
  else ;
  
#line 775 
  sky2_write8((struct sky2_hw const *)hw,344U,(unsigned char)2);
  
#line 776 
  reg1 = sky2_pci_read32((struct sky2_hw const *)hw,64U);
  
#line 777 
  reg1 = phy_power[port] | reg1;
  
#line 778 
  sky2_pci_write32(hw,64U,reg1);
  
#line 779 
  sky2_write8((struct sky2_hw const *)hw,344U,(unsigned char)1);
  
#line 780 
  return;
}


#line 783  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_set_ipg(struct sky2_port *sky2)
{
  u16 reg;
  
#line 787 
  reg = gma_read16((struct sky2_hw const *)sky2->hw,sky2->port,24U);
  
#line 788 
  reg = (unsigned short)((unsigned int)reg & 65504U);
  
#line 789 
  if ((unsigned int)sky2->speed > 100U) 
#line 790 
                                        reg = (unsigned short)((unsigned int)reg | 30U); else 
                                                                    
#line 792 
                                                                    reg = (unsigned short)((unsigned int)reg | 24U);
  
#line 793 
  gma_write16((struct sky2_hw const *)sky2->hw,sky2->port,24,(unsigned short)((int)reg));
  
#line 794 
  return;
}


#line 797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_enable_rx_tx(struct sky2_port *sky2)
{
  u16 reg;
  
#line 799 
  struct sky2_hw *hw = sky2->hw;
  
#line 800 
  unsigned int port = sky2->port;
  
#line 803 
  reg = gma_read16((struct sky2_hw const *)hw,port,4U);
  
#line 804 
  reg = (unsigned short)((unsigned int)reg | 6144U);
  
#line 805 
  gma_write16((struct sky2_hw const *)hw,port,4,(unsigned short)((int)reg));
  
#line 806 
  return;
}


#line 809  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_phy_reinit(struct sky2_port *sky2)
{
  
#line 811 
  ldv_spin_lock_bh_73(& sky2->phy_lock);
  
#line 812 
  sky2_phy_init(sky2->hw,sky2->port);
  
#line 813 
  sky2_enable_rx_tx(sky2);
  
#line 814 
  ldv_spin_unlock_bh_74(& sky2->phy_lock);
  
#line 815 
  return;
}


#line 818  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_wol_init(struct sky2_port *sky2)
{
  enum flow_control save_mode;
  u16 ctrl;
  
#line 820 
  struct sky2_hw *hw = sky2->hw;
  
#line 821 
  unsigned int port = sky2->port;
  
#line 826 
  sky2_write16((struct sky2_hw const *)hw,4U,(unsigned short)2);
  
#line 827 
  sky2_write16((struct sky2_hw const *)hw,(port << 7) + 3856U,(unsigned short)2);
  
#line 829 
  sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3844U,(unsigned char)2);
  
#line 830 
  sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3840U,(unsigned char)2);
  
#line 835 
  save_mode = sky2->flow_mode;
  
#line 836 
  ctrl = sky2->advertising;
  
#line 838 
  sky2->advertising = (unsigned short)((unsigned int)sky2->advertising & 65487U);
  
#line 839 
  sky2->flow_mode = FC_NONE;
  
#line 841 
  ldv_spin_lock_bh_75(& sky2->phy_lock);
  
#line 842 
  sky2_phy_power_up(hw,port);
  
#line 843 
  sky2_phy_init(hw,port);
  
#line 844 
  ldv_spin_unlock_bh_76(& sky2->phy_lock);
  
#line 846 
  sky2->flow_mode = save_mode;
  
#line 847 
  sky2->advertising = ctrl;
  
#line 850 
  gma_write16((struct sky2_hw const *)hw,port,4,(unsigned short)14386);
  
#line 855 
  memcpy_toio((void volatile *)(hw->regs + (port * 128U + 3876U)),(void const *)(sky2->netdev)->dev_addr,6UL);
  
#line 859 
  sky2_write16((struct sky2_hw const *)hw,port * 128U + 3872U,(unsigned short)4096);
  
#line 860 
  ctrl = (unsigned short)0U;
  
#line 861 
  if (((int)sky2->wol & 1) != 0) 
#line 862 
                                 ctrl = (unsigned short)((unsigned int)ctrl | 2080U); else 
                                                                    
#line 864 
                                                                    ctrl = (unsigned short)((unsigned int)ctrl | 1040U);
  
#line 866 
  if (((int)sky2->wol & 32) != 0) 
#line 867 
                                  ctrl = (unsigned short)((unsigned int)ctrl | 520U); else 
                                                                    
#line 869 
                                                                    ctrl = (unsigned short)((unsigned int)ctrl | 260U);
  
#line 871 
  ctrl = (unsigned short)((unsigned int)ctrl | 65U);
  
#line 872 
  sky2_write16((struct sky2_hw const *)hw,port * 128U + 3872U,(unsigned short)((int)ctrl));
  
#line 875 
  sky2_write16((struct sky2_hw const *)hw,4U,(unsigned short)16384);
  
#line 878 
  if (legacy_pme != 0) {
    
#line 879 
    u32 reg1 = sky2_pci_read32((struct sky2_hw const *)hw,64U);
    
#line 880 
    reg1 |= 32768U;
    
#line 881 
    sky2_pci_write32(hw,64U,reg1);
  }
  else ;
  
#line 885 
  sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3144U,(unsigned char)1);
  
#line 886 
  sky2_read32((struct sky2_hw const *)hw,4U);
  
#line 887 
  return;
}


#line 889  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_set_tx_stfwd(struct sky2_hw *hw, unsigned int port)
{
  
#line 891 
  struct net_device *dev = hw->dev[port];
  
#line 893 
  if (((unsigned int)hw->chip_id == 181U && (unsigned int)hw->chip_rev != 1U) || (unsigned int)hw->chip_id > 183U) 
    
#line 897 
    sky2_write32((struct sky2_hw const *)hw,(port << 7) + 3400U,1073741824U);
  else 
    
#line 898 
    if (dev->mtu > 1500U) {
      
#line 900 
      sky2_write32((struct sky2_hw const *)hw,(port << 7) + 3396U,8388720U);
      
#line 903 
      sky2_write32((struct sky2_hw const *)hw,(port << 7) + 3400U,2147483648U);
    }
    else 
#line 905 
         sky2_write32((struct sky2_hw const *)hw,(port << 7) + 3400U,1073741824U);
  
#line 906 
  return;
}


#line 908  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_mac_init(struct sky2_hw *hw, unsigned int port)
{
  u16 reg;
  u32 rx_reg;
  int i;
  
#line 910 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)hw->dev[port]);
  
#line 914 
  u8 const *addr = (u8 const *)(hw->dev[port])->dev_addr;
  
#line 916 
  sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3844U,(unsigned char)1);
  
#line 917 
  sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3844U,(unsigned char)2);
  
#line 919 
  sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3840U,(unsigned char)2);
  
#line 921 
  if (((unsigned int)hw->chip_id == 179U && (unsigned int)hw->chip_rev == 0U) && port == 1U) {
    u16 tmp_0;
    
#line 926 
    sky2_write8((struct sky2_hw const *)hw,3840U,(unsigned char)2);
    ldv_55755: 
#line 927 
    ;
    
#line 928 
    sky2_write8((struct sky2_hw const *)hw,3968U,(unsigned char)1);
    
#line 929 
    sky2_write8((struct sky2_hw const *)hw,3968U,(unsigned char)2);
    
#line 932 
    tmp_0 = gm_phy_read(hw,1U,(unsigned short)2);
    
#line 932 
    if ((unsigned int)tmp_0 != 321U) 
#line 932 
                                     goto _LOR;
    else {
      u16 tmp_1;
      
#line 930 
      tmp_1 = gm_phy_read(hw,1U,(unsigned short)3);
      
#line 930 
      if ((unsigned int)tmp_1 != 3217U) 
#line 932 
                                        goto _LOR;
      else {
        u16 tmp_2;
        
#line 931 
        tmp_2 = gm_phy_read(hw,1U,(unsigned short)18);
        
#line 931 
        if ((unsigned int)tmp_2 != 0U) _LOR: 
#line 934 
                                             goto ldv_55755; else 
#line 937 
                                                                  goto ldv_55756;
      }
    }
    ldv_55756: 
#line 938 
    ;
  }
  else ;
  
#line 935 
  sky2_read16((struct sky2_hw const *)hw,(port << 7) + 3848U);
  
#line 938 
  sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3852U,(unsigned char)10);
  
#line 940 
  ldv_spin_lock_bh_77(& sky2->phy_lock);
  
#line 941 
  sky2_phy_power_up(hw,port);
  
#line 942 
  sky2_phy_init(hw,port);
  
#line 943 
  ldv_spin_unlock_bh_78(& sky2->phy_lock);
  
#line 946 
  reg = gma_read16((struct sky2_hw const *)hw,port,136U);
  
#line 947 
  gma_write16((struct sky2_hw const *)hw,port,136,(unsigned short)((int)((unsigned int)reg | 32U)));
  
#line 949 
  i = 256;
  
#line 949 
  goto ldv_55758;
  ldv_55757: 
#line 950 
  ;
  
#line 950 
  gma_read16((struct sky2_hw const *)hw,port,(unsigned int)i);
  
#line 949 
  i += 4;
  ldv_55758: 
#line 950 
  ;
  
#line 949 
  if (i <= 604) 
#line 951 
                goto ldv_55757; else 
#line 954 
                                     goto ldv_55759;
  ldv_55759: 
#line 955 
  ;
  
#line 951 
  gma_write16((struct sky2_hw const *)hw,port,136,(unsigned short)((int)reg));
  
#line 954 
  gma_write16((struct sky2_hw const *)hw,port,8,(unsigned short)4096);
  
#line 957 
  gma_write16((struct sky2_hw const *)hw,port,12,(unsigned short)57344);
  
#line 961 
  gma_write16((struct sky2_hw const *)hw,port,16,(unsigned short)65535);
  
#line 964 
  gma_write16((struct sky2_hw const *)hw,port,20,(unsigned short)55236);
  
#line 971 
  reg = (unsigned short)8734U;
  
#line 974 
  if ((hw->dev[port])->mtu > 1500U) 
#line 975 
                                    reg = (unsigned short)((unsigned int)reg | 256U); else ;
  
#line 977 
  if ((unsigned int)hw->chip_id == 180U && (unsigned int)hw->chip_rev == 5U) 
    
#line 979 
    reg = (unsigned short)((unsigned int)reg | 64U); else ;
  
#line 981 
  gma_write16((struct sky2_hw const *)hw,port,24,(unsigned short)((int)reg));
  
#line 984 
  gma_set_addr(hw,port,40U,addr);
  
#line 987 
  gma_set_addr(hw,port,28U,addr);
  
#line 990 
  gma_write16((struct sky2_hw const *)hw,port,80,(unsigned short)0);
  
#line 991 
  gma_write16((struct sky2_hw const *)hw,port,84,(unsigned short)0);
  
#line 992 
  gma_write16((struct sky2_hw const *)hw,port,88,(unsigned short)0);
  
#line 995 
  sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3144U,(unsigned char)2);
  
#line 996 
  rx_reg = 136U;
  
#line 997 
  if ((unsigned int)hw->chip_id == 181U || (unsigned int)hw->chip_id == 184U) 
    
#line 999 
    rx_reg |= 524288U; else ;
  
#line 1001 
  sky2_write32((struct sky2_hw const *)hw,(port << 7) + 3144U,rx_reg);
  
#line 1003 
  if ((unsigned int)hw->chip_id == 179U) 
#line 1005 
                                         sky2_write16((struct sky2_hw const *)hw,(port << 7) + 3148U,(unsigned short)0); else 
                                                                    
#line 1008 
                                                                    sky2_write16((struct sky2_hw const *)hw,(port << 7) + 3148U,(unsigned short)6267);
  
#line 1012 
  reg = (unsigned short)11U;
  
#line 1014 
  if ((unsigned int)hw->chip_id == 184U && (unsigned int)hw->chip_rev == 0U) 
    
#line 1016 
    reg = (unsigned short)376U; else ;
  
#line 1017 
  sky2_write16((struct sky2_hw const *)hw,(port << 7) + 3152U,(unsigned short)((int)reg));
  
#line 1020 
  sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3400U,(unsigned char)2);
  
#line 1021 
  sky2_write16((struct sky2_hw const *)hw,(port << 7) + 3400U,(unsigned short)8);
  
#line 1024 
  if ((hw->flags & 16UL) == 0UL) {
    
#line 1026 
    if ((unsigned int)hw->chip_id == 184U && (unsigned int)hw->chip_rev == 0U) 
      
#line 1028 
      reg = (unsigned short)196U; else 
#line 1030 
                                       reg = (unsigned short)128U;
    
#line 1031 
    sky2_write16((struct sky2_hw const *)hw,(port << 7) + 3160U,(unsigned short)((int)reg));
    
#line 1032 
    sky2_write16((struct sky2_hw const *)hw,(port << 7) + 3162U,(unsigned short)96);
    
#line 1034 
    sky2_set_tx_stfwd(hw,port);
  }
  else ;
  
#line 1037 
  if ((unsigned int)hw->chip_id == 184U && (unsigned int)hw->chip_rev == 0U) {
    
#line 1040 
    reg = sky2_read16((struct sky2_hw const *)hw,(port << 7) + 3392U);
    
#line 1041 
    reg = (unsigned short)((unsigned int)reg & 65532U);
    
#line 1042 
    sky2_write16((struct sky2_hw const *)hw,(port << 7) + 3392U,(unsigned short)((int)reg));
  }
  else ;
  
#line 1044 
  return;
}


#line 1047  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_ramset(struct sky2_hw *hw, u16 q, u32 start, u32 space)
{
  u32 end;
  
#line 1052 
  start *= 128U;
  
#line 1053 
  space *= 128U;
  
#line 1054 
  end = (start + space) + 4294967295U;
  
#line 1056 
  sky2_write8((struct sky2_hw const *)hw,(unsigned int)((int)q + 2088),(unsigned char)2);
  
#line 1057 
  sky2_write32((struct sky2_hw const *)hw,(unsigned int)((int)q + 2048),start);
  
#line 1058 
  sky2_write32((struct sky2_hw const *)hw,(unsigned int)((int)q + 2052),end);
  
#line 1059 
  sky2_write32((struct sky2_hw const *)hw,(unsigned int)((int)q + 2056),start);
  
#line 1060 
  sky2_write32((struct sky2_hw const *)hw,(unsigned int)((int)q + 2060),start);
  
#line 1062 
  if ((unsigned int)q == 0U || (unsigned int)q == 128U) {
    
#line 1063 
    u32 tp = space - space / 4U;
    
#line 1069 
    sky2_write32((struct sky2_hw const *)hw,(unsigned int)((int)q + 2072),tp);
    
#line 1070 
    sky2_write32((struct sky2_hw const *)hw,(unsigned int)((int)q + 2076),space / 2U);
    
#line 1072 
    tp = space + 4294966272U;
    
#line 1073 
    sky2_write32((struct sky2_hw const *)hw,(unsigned int)((int)q + 2064),tp);
    
#line 1074 
    sky2_write32((struct sky2_hw const *)hw,(unsigned int)((int)q + 2068),space / 4U);
  }
  else 
#line 1079 
       sky2_write8((struct sky2_hw const *)hw,(unsigned int)((int)q + 2088),(unsigned char)32);
  
#line 1082 
  sky2_write8((struct sky2_hw const *)hw,(unsigned int)((int)q + 2088),(unsigned char)8);
  
#line 1083 
  sky2_read8((struct sky2_hw const *)hw,(unsigned int)((int)q + 2088));
  
#line 1084 
  return;
}


#line 1087  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_qset(struct sky2_hw *hw, u16 q)
{
  
#line 1089 
  sky2_write32((struct sky2_hw const *)hw,(unsigned int)((int)q + 1076),22U);
  
#line 1090 
  sky2_write32((struct sky2_hw const *)hw,(unsigned int)((int)q + 1076),3368U);
  
#line 1091 
  sky2_write32((struct sky2_hw const *)hw,(unsigned int)((int)q + 1076),128U);
  
#line 1092 
  sky2_write32((struct sky2_hw const *)hw,(unsigned int)((int)q + 1088),1536U);
  
#line 1093 
  return;
}


#line 1098  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_prefetch_init(struct sky2_hw *hw, u32 qaddr, dma_addr_t addr, u32 last)
{
  
#line 1101 
  sky2_write32((struct sky2_hw const *)hw,qaddr + 1104U,1U);
  
#line 1102 
  sky2_write32((struct sky2_hw const *)hw,qaddr + 1104U,2U);
  
#line 1103 
  sky2_write32((struct sky2_hw const *)hw,qaddr + 1116U,(unsigned int)(addr >> 32));
  
#line 1104 
  sky2_write32((struct sky2_hw const *)hw,qaddr + 1112U,(unsigned int)addr);
  
#line 1105 
  sky2_write16((struct sky2_hw const *)hw,qaddr + 1108U,(unsigned short)((int)((unsigned short)last)));
  
#line 1106 
  sky2_write32((struct sky2_hw const *)hw,qaddr + 1104U,8U);
  
#line 1108 
  sky2_read32((struct sky2_hw const *)hw,qaddr + 1104U);
  
#line 1109 
  return;
}


#line 1111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
__inline static struct sky2_tx_le *get_tx_le(struct sky2_port *sky2, u16 *slot)
{
  
#line 1113 
  struct sky2_tx_le *le = sky2->tx_le + (int)*slot;
  
#line 1115 
  *slot = (unsigned short)(((unsigned int)*slot + 1U) & ((unsigned int)sky2->tx_ring_size + 65535U));
  
#line 1116 
  le->ctrl = (unsigned char)0U;
  
#line 1117 
  return le;
}


#line 1120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void tx_init(struct sky2_port *sky2)
{
  struct sky2_tx_le *le;
  u16 tmp;
  
#line 1124 
  tmp = (unsigned short)0U;
  
#line 1124 
  sky2->tx_cons = tmp;
  
#line 1124 
  sky2->tx_prod = tmp;
  
#line 1125 
  sky2->tx_tcpsum = 0U;
  
#line 1126 
  sky2->tx_last_mss = (unsigned short)0U;
  
#line 1127 
  netdev_reset_queue(sky2->netdev);
  
#line 1129 
  le = get_tx_le(sky2,& sky2->tx_prod);
  
#line 1130 
  le->addr = 0U;
  
#line 1131 
  le->opcode = (unsigned char)161U;
  
#line 1132 
  sky2->tx_last_upper = 0U;
  
#line 1133 
  return;
}


#line 1136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
__inline static void sky2_put_idx(struct sky2_hw *hw, unsigned int q, u16 idx)
{
  
#line 1138 
  ldv_inline_asm();
  
#line 1140 
  sky2_write16((struct sky2_hw const *)hw,q + 1124U,(unsigned short)((int)idx));
  
#line 1141 
  ldv_inline_asm();
  
#line 1142 
  return;
}


#line 1147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
__inline static struct sky2_rx_le *sky2_next_rx(struct sky2_port *sky2)
{
  
#line 1149 
  struct sky2_rx_le *le = sky2->rx_le + (int)sky2->rx_put;
  
#line 1150 
  sky2->rx_put = (unsigned short)((unsigned int)((unsigned short)((unsigned int)sky2->rx_put + 1U)) & 1023U);
  
#line 1151 
  le->ctrl = (unsigned char)0U;
  
#line 1152 
  return le;
}


#line 1155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static unsigned int sky2_get_rx_threshold(struct sky2_port *sky2)
{
  unsigned int __retres;
  unsigned int size;
  unsigned int tmp;
  {
    
#line 1160 
    int const __y = 8;
    
#line 1160 
    tmp = ((sky2->netdev)->mtu + 25U) & 4294967288U;
  }
  
#line 1160 
  size = tmp;
  
#line 1163 
  __retres = (size + 4294967288U) / 4U;
  
#line 1163 
  return __retres;
}


#line 1166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static unsigned int sky2_get_rx_data_size(struct sky2_port *sky2)
{
  struct rx_ring_info *re;
  unsigned int size;
  unsigned int tmp;
  {
    
#line 1172 
    int const __y = 8;
    
#line 1172 
    tmp = ((sky2->netdev)->mtu + 25U) & 4294967288U;
  }
  
#line 1172 
  size = tmp;
  
#line 1174 
  sky2->rx_nfrags = (unsigned short)(size >> 12);
  
#line 1175 
  if ((long)((unsigned int)sky2->rx_nfrags > 2U) != 0L) {
    
#line 1177 
    ldv_inline_asm();
    
#line 1175 
    ;
  }
  else ;
  
#line 1178 
  size -= (unsigned int)((int)sky2->rx_nfrags << 12);
  
#line 1181 
  if (size < (unsigned int)copybreak) 
#line 1182 
                                      size = (unsigned int)copybreak; else ;
  
#line 1183 
  if (size <= 13U) 
#line 1184 
                   size = 14U; else ;
  
#line 1186 
  return size;
}


#line 1190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_rx_add(struct sky2_port *sky2, u8 op, dma_addr_t map, unsigned int len)
{
  struct sky2_rx_le *le;
  
#line 1196 
  le = sky2_next_rx(sky2);
  
#line 1197 
  le->addr = (unsigned int)(map >> 32);
  
#line 1198 
  le->opcode = (unsigned char)161U;
  
#line 1201 
  le = sky2_next_rx(sky2);
  
#line 1202 
  le->addr = (unsigned int)map;
  
#line 1203 
  le->length = (unsigned short)len;
  
#line 1204 
  le->opcode = (unsigned char)((unsigned int)op | 128U);
  
#line 1205 
  return;
}


#line 1208  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_rx_submit(struct sky2_port *sky2, struct rx_ring_info const *re)
{
  int i;
  unsigned char *tmp;
  
#line 1213 
  sky2_rx_add(sky2,(unsigned char)65,re->data_addr,(unsigned int)sky2->rx_data_size);
  
#line 1215 
  i = 0;
  
#line 1215 
  goto ldv_55825;
  ldv_55824: 
#line 1216 
  ;
  
#line 1216 
  sky2_rx_add(sky2,(unsigned char)64,re->frag_addr[i],4096U);
  
#line 1215 
  i += 1;
  ldv_55825: 
#line 1216 
  ;
  
#line 1215 
  tmp = skb_end_pointer((struct sk_buff const *)re->skb);
  
#line 1215 
  ;
  
#line 1215 
  if ((int)((struct skb_shared_info *)tmp)->nr_frags > i) 
#line 1217 
                                                          goto ldv_55824; else 
                                                                    
#line 1220 
                                                                    goto ldv_55826;
  ldv_55826: 
#line 1221 
  ;
  
#line 1222 
  return;
}


#line 1220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_rx_map_skb(struct pci_dev *pdev, struct rx_ring_info *re, unsigned int size)
{
  int __retres;
  int i;
  int tmp;
  unsigned char *tmp_3;
  unsigned int tmp_5;
  unsigned char *tmp_4;
  int tmp_6;
  
#line 1223 
  struct sk_buff *skb = re->skb;
  
#line 1226 
  re->data_addr = pci_map_single(pdev,(void *)skb->data,(unsigned long)size,2);
  
#line 1227 
  tmp = pci_dma_mapping_error(pdev,re->data_addr);
  
#line 1227 
  if (tmp != 0) 
#line 1228 
                goto mapping_error; else ;
  
#line 1230 
  re->data_size = size;
  
#line 1232 
  i = 0;
  
#line 1232 
  goto ldv_55838;
  ldv_55837: 
#line 1233 
  ;
  {
    unsigned char *tmp_0;
    unsigned int tmp_1;
    int tmp_2;
    
#line 1233 
    tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 1233 
    skb_frag_t const *frag = (skb_frag_t const *)(& ((struct skb_shared_info *)tmp_0)->frags[i]);
    
#line 1236 
    tmp_1 = skb_frag_size(frag);
    
#line 1235 
    ;
    
#line 1235 
    ;
    
#line 1235 
    re->frag_addr[i] = skb_frag_dma_map(& pdev->dev,frag,0UL,(unsigned long)tmp_1,(enum dma_data_direction)DMA_FROM_DEVICE);
    
#line 1239 
    tmp_2 = dma_mapping_error(& pdev->dev,re->frag_addr[i]);
    
#line 1239 
    if (tmp_2 != 0) 
#line 1240 
                    goto map_page_error; else ;
  }
  
#line 1232 
  i += 1;
  ldv_55838: 
#line 1233 
  ;
  
#line 1232 
  tmp_3 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1232 
  ;
  
#line 1232 
  if ((int)((struct skb_shared_info *)tmp_3)->nr_frags > i) 
#line 1234 
                                                            goto ldv_55837; else 
                                                                    
#line 1237 
                                                                    goto ldv_55839;
  ldv_55839: 
#line 1238 
  ;
  
#line 1242 
  __retres = 0;
  
#line 1242 
  goto return_label;
  map_page_error: 
#line 1244 
  ;
  
#line 1245 
  goto ldv_55841;
  ldv_55840: 
#line 1246 
  ;
  
#line 1247 
  tmp_4 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1247 
  tmp_5 = skb_frag_size((skb_frag_t const *)(& ((struct skb_shared_info *)tmp_4)->frags[i]));
  
#line 1246 
  ;
  
#line 1246 
  ;
  
#line 1246 
  pci_unmap_page(pdev,re->frag_addr[i],(unsigned long)tmp_5,2);
  ldv_55841: 
#line 1248 
  ;
  
#line 1245 
  i -= 1;
  
#line 1245 
  if (i >= 0) 
#line 1247 
              goto ldv_55840; else 
#line 1250 
                                   goto ldv_55842;
  ldv_55842: 
#line 1251 
  ;
  
#line 1251 
  pci_unmap_single(pdev,re->data_addr,(unsigned long)re->data_size,2);
  mapping_error: 
#line 1254 
  ;
  
#line 1255 
  tmp_6 = net_ratelimit();
  
#line 1255 
  if (tmp_6 != 0) 
#line 1256 
                  dev_warn((struct device const *)(& pdev->dev),"%s: rx mapping error\n",(char *)(& (skb->dev)->name)); else ;
  
#line 1258 
  __retres = -5;
  return_label: 
#line 1258 
                return __retres;
}


#line 1261  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_rx_unmap_skb(struct pci_dev *pdev, struct rx_ring_info *re)
{
  int i;
  unsigned int tmp_0;
  unsigned char *tmp;
  unsigned char *tmp_1;
  
#line 1263 
  struct sk_buff *skb = re->skb;
  
#line 1266 
  pci_unmap_single(pdev,re->data_addr,(unsigned long)re->data_size,2);
  
#line 1269 
  i = 0;
  
#line 1269 
  goto ldv_55850;
  ldv_55849: 
#line 1270 
  ;
  
#line 1271 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1271 
  tmp_0 = skb_frag_size((skb_frag_t const *)(& ((struct skb_shared_info *)tmp)->frags[i]));
  
#line 1270 
  ;
  
#line 1270 
  ;
  
#line 1270 
  pci_unmap_page(pdev,re->frag_addr[i],(unsigned long)tmp_0,2);
  
#line 1269 
  i += 1;
  ldv_55850: 
#line 1270 
  ;
  
#line 1269 
  tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1269 
  ;
  
#line 1269 
  if ((int)((struct skb_shared_info *)tmp_1)->nr_frags > i) 
#line 1271 
                                                            goto ldv_55849; else 
                                                                    
#line 1274 
                                                                    goto ldv_55851;
  ldv_55851: 
#line 1275 
  ;
  
#line 1276 
  return;
}


#line 1279  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void rx_set_checksum(struct sky2_port *sky2)
{
  int tmp_0;
  
#line 1281 
  struct sky2_rx_le *le = sky2_next_rx(sky2);
  
#line 1283 
  le->addr = 917518U;
  
#line 1284 
  le->ctrl = (unsigned char)0U;
  
#line 1285 
  le->opcode = (unsigned char)146U;
  
#line 1290 
  if (((sky2->netdev)->features & 17179869184ULL) != 0ULL) 
#line 1290 
                                                           tmp_0 = 8192; else 
                                                                    
#line 1290 
                                                                    tmp_0 = 4096;
  
#line 1287 
  ;
  
#line 1287 
  ;
  
#line 1287 
  sky2_write32((struct sky2_hw const *)sky2->hw,rxqaddr[sky2->port] + 1076U,(unsigned int)tmp_0);
  
#line 1291 
  return;
}


#line 1294  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void rx_set_rss(struct net_device *dev, netdev_features_t features)
{
  int i;
  
#line 1296 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 1297 
  struct sky2_hw *hw = sky2->hw;
  
#line 1298 
  int nkeys = 4;
  
#line 1301 
  if ((hw->flags & 32UL) != 0UL) {
    
#line 1302 
    nkeys = 10;
    
#line 1303 
    sky2_write32((struct sky2_hw const *)hw,(sky2->port << 7) + 584U,63U);
  }
  else ;
  
#line 1307 
  if ((features & 8589934592ULL) != 0ULL) {
    u32 rss_key[10U];
    
#line 1310 
    netdev_rss_key_fill((void *)(& rss_key),40UL);
    
#line 1311 
    i = 0;
    
#line 1311 
    goto ldv_55866;
    ldv_55865: 
#line 1312 
    ;
    
#line 1312 
    sky2_write32((struct sky2_hw const *)hw,(sky2->port << 7) + (unsigned int)((i + 136) * 4),rss_key[i]);
    
#line 1311 
    i += 1;
    ldv_55866: 
#line 1312 
    ;
    
#line 1311 
    if (i < nkeys) 
#line 1313 
                   goto ldv_55865; else 
#line 1316 
                                        goto ldv_55867;
    ldv_55867: 
#line 1317 
    ;
    
#line 1316 
    sky2_write32((struct sky2_hw const *)hw,(sky2->port << 7) + 3144U,268435456U);
    
#line 1319 
    sky2_write32((struct sky2_hw const *)hw,rxqaddr[sky2->port] + 1076U,32768U);
  }
  else 
#line 1322 
       sky2_write32((struct sky2_hw const *)hw,rxqaddr[sky2->port] + 1076U,16384U);
  
#line 1323 
  return;
}


#line 1336  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_rx_stop(struct sky2_port *sky2)
{
  int i;
  u8 tmp;
  u8 tmp_0;
  
#line 1338 
  struct sky2_hw *hw = sky2->hw;
  
#line 1339 
  unsigned int rxq = rxqaddr[sky2->port];
  
#line 1343 
  sky2_write8((struct sky2_hw const *)hw,rxq + 2088U,(unsigned char)4);
  
#line 1345 
  i = 0;
  
#line 1345 
  goto ldv_55876;
  ldv_55875: 
#line 1346 
  ;
  
#line 1346 
  tmp = sky2_read8((struct sky2_hw const *)hw,rxq + 2118U);
  
#line 1347 
  tmp_0 = sky2_read8((struct sky2_hw const *)hw,rxq + 2122U);
  
#line 1346 
  if ((int)tmp == (int)tmp_0) 
#line 1348 
                              goto stopped; else ;
  
#line 1345 
  i += 1;
  ldv_55876: 
#line 1346 
  ;
  
#line 1345 
  if (i <= 65534) 
#line 1347 
                  goto ldv_55875; else 
#line 1350 
                                       goto ldv_55877;
  ldv_55877: 
#line 1351 
  ;
  
#line 1350 
  netdev_warn((struct net_device const *)sky2->netdev,"receiver stop failed\n");
  stopped: 
#line 1351 
  ;
  
#line 1352 
  sky2_write32((struct sky2_hw const *)hw,rxq + 1076U,17U);
  
#line 1355 
  sky2_write32((struct sky2_hw const *)hw,rxq + 1104U,1U);
  
#line 1356 
  ldv_inline_asm();
  
#line 1357 
  return;
}


#line 1360  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_rx_clean(struct sky2_port *sky2)
{
  unsigned int i;
  
#line 1364 
  if (sky2->rx_le != (struct sky2_rx_le *)0) 
#line 1365 
                                             memset((void *)sky2->rx_le,0,8192UL); else ;
  
#line 1367 
  i = 0U;
  
#line 1367 
  goto ldv_55884;
  ldv_55883: 
#line 1368 
  ;
  {
    
#line 1368 
    struct rx_ring_info *re = sky2->rx_ring + i;
    
#line 1370 
    if (re->skb != (struct sk_buff *)0) {
      
#line 1371 
      sky2_rx_unmap_skb((sky2->hw)->pdev,re);
      
#line 1372 
      kfree_skb(re->skb);
      
#line 1373 
      re->skb = (struct sk_buff *)0;
    }
    else ;
  }
  
#line 1367 
  i += 1U;
  ldv_55884: 
#line 1368 
  ;
  
#line 1367 
  if ((unsigned int)sky2->rx_pending > i) 
#line 1369 
                                          goto ldv_55883; else 
#line 1372 
                                                               goto ldv_55885;
  ldv_55885: 
#line 1373 
  ;
  
#line 1374 
  return;
}


#line 1379  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)
{
  int __retres;
  int tmp_2;
  bool tmp_1;
  
#line 1381 
  struct mii_ioctl_data *data = if_mii(ifr);
  
#line 1382 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 1383 
  struct sky2_hw *hw = sky2->hw;
  
#line 1384 
  int err = -95;
  
#line 1386 
  tmp_1 = netif_running((struct net_device const *)dev);
  
#line 1386 
  if (tmp_1) 
#line 1386 
             tmp_2 = 0; else 
#line 1386 
                             tmp_2 = 1;
  
#line 1386 
  if (tmp_2) {
    
#line 1387 
    __retres = -19;
    
#line 1387 
    goto return_label;
  }
  else ;
  
#line 1389 
  switch (cmd) {
    case 35143: 
#line 1390 
    ;
    
#line 1391 
    data->phy_id = (unsigned short)0U;
    case 35144: 
#line 1394 
    ;
    {
      
#line 1395 
      u16 val = (unsigned short)0U;
      
#line 1397 
      ldv_spin_lock_bh_79(& sky2->phy_lock);
      
#line 1398 
      err = __gm_phy_read(hw,sky2->port,(unsigned short)((int)data->reg_num & 31),& val);
      
#line 1399 
      ldv_spin_unlock_bh_80(& sky2->phy_lock);
      
#line 1401 
      data->val_out = val;
      
#line 1402 
      goto ldv_55898;
    }
    case 35145: 
#line 1405 
    ;
    
#line 1406 
    ldv_spin_lock_bh_81(& sky2->phy_lock);
    
#line 1407 
    err = gm_phy_write(hw,sky2->port,(unsigned short)((int)data->reg_num & 31),(unsigned short)((int)data->val_in));
    
#line 1409 
    ldv_spin_unlock_bh_82(& sky2->phy_lock);
    
#line 1410 
    goto ldv_55898;
  }
  ldv_55898: 
#line 1412 
  ;
  
#line 1412 
  __retres = err;
  return_label: 
#line 1412 
                return __retres;
}


#line 1417  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_vlan_mode(struct net_device *dev, netdev_features_t features)
{
  
#line 1419 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 1420 
  struct sky2_hw *hw = sky2->hw;
  
#line 1421 
  u16 port = (unsigned short)sky2->port;
  
#line 1423 
  if ((features & 256ULL) != 0ULL) 
#line 1424 
                                   sky2_write32((struct sky2_hw const *)hw,(unsigned int)(((int)port << 7) + 3144),33554432U); else 
                                                                    
#line 1427 
                                                                    sky2_write32((struct sky2_hw const *)hw,(unsigned int)(((int)port << 7) + 3144),16777216U);
  
#line 1430 
  if ((features & 128ULL) != 0ULL) {
    
#line 1431 
    sky2_write32((struct sky2_hw const *)hw,(unsigned int)(((int)port << 7) + 3400),33554432U);
    
#line 1434 
    dev->vlan_features |= 65539ULL;
  }
  else {
    
#line 1436 
    sky2_write32((struct sky2_hw const *)hw,(unsigned int)(((int)port << 7) + 3400),16777216U);
    
#line 1440 
    dev->vlan_features &= 18446744073709486076ULL;
  }
  
#line 1442 
  return;
}


#line 1445  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
__inline static unsigned int sky2_rx_pad(struct sky2_hw const *hw)
{
  unsigned int __retres;
  int tmp;
  
#line 1447 
  if ((hw->flags & 16UL) != 0UL) 
#line 1447 
                                 tmp = 8; else 
#line 1447 
                                               tmp = 2;
  
#line 1447 
  __retres = (unsigned int)tmp;
  
#line 1447 
  return __retres;
}


#line 1454  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static struct sk_buff *sky2_rx_alloc(struct sky2_port *sky2, gfp_t gfp)
{
  struct sk_buff *__retres;
  struct sk_buff *skb;
  int i;
  unsigned int tmp;
  
#line 1459 
  ;
  
#line 1460 
  tmp = sky2_rx_pad((struct sky2_hw const *)sky2->hw);
  
#line 1459 
  ;
  
#line 1459 
  ;
  
#line 1459 
  skb = __netdev_alloc_skb(sky2->netdev,(unsigned int)sky2->rx_data_size + tmp,gfp);
  
#line 1462 
  if (skb == (struct sk_buff *)0) 
#line 1463 
                                  goto nomem; else ;
  
#line 1465 
  if (((sky2->hw)->flags & 16UL) != 0UL) {
    unsigned char *start;
    
#line 1473 
    start = (unsigned char *)(((unsigned long)skb->data + 7UL) & 18446744073709551608UL);
    
#line 1474 
    skb_reserve(skb,(int)((long)start - (long)skb->data));
  }
  else 
#line 1476 
       skb_reserve(skb,0);
  
#line 1478 
  i = 0;
  
#line 1478 
  goto ldv_55921;
  ldv_55920: 
#line 1479 
  ;
  {
    
#line 1479 
    struct page *page = alloc_pages(gfp,0U);
    
#line 1481 
    if (page == (struct page *)0) 
#line 1482 
                                  goto free_partial; else ;
    
#line 1483 
    skb_fill_page_desc(skb,i,page,0,4096);
  }
  
#line 1478 
  i += 1;
  ldv_55921: 
#line 1479 
  ;
  
#line 1478 
  if ((int)sky2->rx_nfrags > i) 
#line 1480 
                                goto ldv_55920; else 
#line 1483 
                                                     goto ldv_55922;
  ldv_55922: 
#line 1484 
  ;
  
#line 1486 
  __retres = skb;
  
#line 1486 
  goto return_label;
  free_partial: 
#line 1487 
  ;
  
#line 1488 
  kfree_skb(skb);
  nomem: 
#line 1489 
  ;
  
#line 1490 
  __retres = (struct sk_buff *)0;
  return_label: 
#line 1490 
                return __retres;
}


#line 1493  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
__inline static void sky2_rx_update(struct sky2_port *sky2, unsigned int rxq)
{
  
#line 1495 
  sky2_put_idx(sky2->hw,rxq,(unsigned short)((int)sky2->rx_put));
  
#line 1496 
  return;
}


#line 1498  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_alloc_rx_skbs(struct sky2_port *sky2)
{
  int __retres;
  unsigned int i;
  unsigned int tmp;
  
#line 1500 
  struct sky2_hw *hw = sky2->hw;
  
#line 1503 
  tmp = sky2_get_rx_data_size(sky2);
  
#line 1503 
  sky2->rx_data_size = (unsigned short)tmp;
  
#line 1506 
  i = 0U;
  
#line 1506 
  goto ldv_55934;
  ldv_55933: 
#line 1507 
  ;
  {
    int tmp_0;
    
#line 1507 
    struct rx_ring_info *re = sky2->rx_ring + i;
    
#line 1509 
    re->skb = sky2_rx_alloc(sky2,208U);
    
#line 1510 
    if (re->skb == (struct sk_buff *)0) {
      
#line 1511 
      __retres = -12;
      
#line 1511 
      goto return_label;
    }
    else ;
    
#line 1513 
    tmp_0 = sky2_rx_map_skb(hw->pdev,re,(unsigned int)sky2->rx_data_size);
    
#line 1513 
    if (tmp_0 != 0) {
      
#line 1514 
      consume_skb(re->skb);
      
#line 1515 
      re->skb = (struct sk_buff *)0;
      
#line 1516 
      __retres = -12;
      
#line 1516 
      goto return_label;
    }
    else ;
  }
  
#line 1506 
  i += 1U;
  ldv_55934: 
#line 1507 
  ;
  
#line 1506 
  if ((unsigned int)sky2->rx_pending > i) 
#line 1508 
                                          goto ldv_55933; else 
#line 1511 
                                                               goto ldv_55935;
  ldv_55935: 
#line 1512 
  ;
  
#line 1519 
  __retres = 0;
  return_label: 
#line 1519 
                return __retres;
}


#line 1531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_rx_start(struct sky2_port *sky2)
{
  struct rx_ring_info *re;
  unsigned int i;
  unsigned int thresh;
  u16 tmp;
  bool tmp_0;
  
#line 1533 
  struct sky2_hw *hw = sky2->hw;
  
#line 1535 
  unsigned int rxq = rxqaddr[sky2->port];
  
#line 1538 
  tmp = (unsigned short)0U;
  
#line 1538 
  sky2->rx_next = tmp;
  
#line 1538 
  sky2->rx_put = tmp;
  
#line 1539 
  sky2_qset(hw,(unsigned short)((int)((unsigned short)rxq)));
  
#line 1542 
  tmp_0 = pci_is_pcie(hw->pdev);
  
#line 1542 
  if ((int)tmp_0 != 0) 
#line 1543 
                       sky2_write32((struct sky2_hw const *)hw,rxq + 1088U,128U); else ;
  
#line 1547 
  if ((unsigned int)hw->chip_id == 180U && (unsigned int)hw->chip_rev > 1U) 
    
#line 1549 
    sky2_write32((struct sky2_hw const *)hw,rxq + 1080U,16777216U); else ;
  
#line 1551 
  sky2_prefetch_init(hw,rxq,sky2->rx_le_map,1023U);
  
#line 1553 
  if ((hw->flags & 32UL) == 0UL) 
#line 1554 
                                 rx_set_checksum(sky2); else ;
  
#line 1556 
  if ((hw->flags & 256UL) == 0UL) 
#line 1557 
                                  rx_set_rss(sky2->netdev,(sky2->netdev)->features); else ;
  
#line 1560 
  i = 0U;
  
#line 1560 
  goto ldv_55945;
  ldv_55944: 
#line 1561 
  ;
  
#line 1561 
  re = sky2->rx_ring + i;
  
#line 1562 
  sky2_rx_submit(sky2,(struct rx_ring_info const *)re);
  
#line 1560 
  i += 1U;
  ldv_55945: 
#line 1561 
  ;
  
#line 1560 
  if ((unsigned int)sky2->rx_pending > i) 
#line 1562 
                                          goto ldv_55944; else 
#line 1565 
                                                               goto ldv_55946;
  ldv_55946: 
#line 1566 
  ;
  
#line 1571 
  thresh = sky2_get_rx_threshold(sky2);
  
#line 1572 
  if (thresh > 511U) 
#line 1573 
                     sky2_write32((struct sky2_hw const *)hw,(sky2->port << 7) + 3144U,67108864U);
  else {
    
#line 1575 
    sky2_write16((struct sky2_hw const *)hw,(sky2->port << 7) + 3156U,(unsigned short)((int)((unsigned short)thresh)));
    
#line 1576 
    sky2_write32((struct sky2_hw const *)hw,(sky2->port << 7) + 3144U,134217728U);
  }
  
#line 1580 
  sky2_rx_update(sky2,rxq);
  
#line 1582 
  if ((unsigned int)hw->chip_id == 181U || (unsigned int)hw->chip_id == 185U) 
    
#line 1591 
    sky2_write32((struct sky2_hw const *)hw,(sky2->port << 7) + 3144U,4194304U); else ;
  
#line 1594 
  if ((unsigned int)hw->chip_id > 184U) {
    
#line 1596 
    sky2_write16((struct sky2_hw const *)hw,(sky2->port << 7) + 3154U,(unsigned short)640);
    
#line 1600 
    sky2_write32((struct sky2_hw const *)hw,txqaddr[sky2->port] + 1080U,167772160U);
  }
  else ;
  
#line 1602 
  return;
}


#line 1605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_alloc_buffers(struct sky2_port *sky2)
{
  int __retres;
  int tmp_3;
  
#line 1607 
  struct sky2_hw *hw = sky2->hw;
  
#line 1610 
  sky2->tx_le = (struct sky2_tx_le *)pci_alloc_consistent(hw->pdev,(unsigned long)sky2->tx_ring_size * 8UL,& sky2->tx_le_map);
  
#line 1614 
  if (sky2->tx_le == (struct sky2_tx_le *)0) 
#line 1615 
                                             goto nomem; else ;
  
#line 1617 
  sky2->tx_ring = (struct tx_ring_info *)kcalloc((unsigned long)sky2->tx_ring_size,32UL,208U);
  
#line 1619 
  if (sky2->tx_ring == (struct tx_ring_info *)0) 
#line 1620 
                                                 goto nomem; else ;
  
#line 1622 
  sky2->rx_le = (struct sky2_rx_le *)pci_zalloc_consistent(hw->pdev,8192UL,& sky2->rx_le_map);
  
#line 1624 
  if (sky2->rx_le == (struct sky2_rx_le *)0) 
#line 1625 
                                             goto nomem; else ;
  
#line 1627 
  sky2->rx_ring = (struct rx_ring_info *)kcalloc((unsigned long)sky2->rx_pending,40UL,208U);
  
#line 1629 
  if (sky2->rx_ring == (struct rx_ring_info *)0) 
#line 1630 
                                                 goto nomem; else ;
  
#line 1632 
  tmp_3 = sky2_alloc_rx_skbs(sky2);
  
#line 1632 
  __retres = tmp_3;
  
#line 1632 
  goto return_label;
  nomem: 
#line 1633 
  ;
  
#line 1634 
  __retres = -12;
  return_label: 
#line 1634 
                return __retres;
}


#line 1637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_free_buffers(struct sky2_port *sky2)
{
  
#line 1639 
  struct sky2_hw *hw = sky2->hw;
  
#line 1641 
  sky2_rx_clean(sky2);
  
#line 1643 
  if (sky2->rx_le != (struct sky2_rx_le *)0) {
    
#line 1644 
    pci_free_consistent(hw->pdev,8192UL,(void *)sky2->rx_le,sky2->rx_le_map);
    
#line 1646 
    sky2->rx_le = (struct sky2_rx_le *)0;
  }
  else ;
  
#line 1648 
  if (sky2->tx_le != (struct sky2_tx_le *)0) {
    
#line 1649 
    pci_free_consistent(hw->pdev,(unsigned long)sky2->tx_ring_size * 8UL,(void *)sky2->tx_le,sky2->tx_le_map);
    
#line 1652 
    sky2->tx_le = (struct sky2_tx_le *)0;
  }
  else ;
  
#line 1654 
  kfree((void const *)sky2->tx_ring);
  
#line 1655 
  kfree((void const *)sky2->rx_ring);
  
#line 1657 
  sky2->tx_ring = (struct tx_ring_info *)0;
  
#line 1658 
  sky2->rx_ring = (struct rx_ring_info *)0;
  
#line 1659 
  return;
}


#line 1661  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_hw_up(struct sky2_port *sky2)
{
  u32 ramsize;
  int cap;
  u8 tmp_0;
  
#line 1663 
  struct sky2_hw *hw = sky2->hw;
  
#line 1664 
  unsigned int port = sky2->port;
  
#line 1667 
  struct net_device *otherdev = hw->dev[sky2->port ^ 1U];
  
#line 1669 
  tx_init(sky2);
  
#line 1675 
  if (otherdev != (struct net_device *)0) {
    bool tmp;
    
#line 1675 
    tmp = netif_running((struct net_device const *)otherdev);
    
#line 1675 
    if ((int)tmp != 0) {
      
#line 1676 
      cap = pci_find_capability(hw->pdev,7);
      
#line 1675 
      if (cap != 0) {
        u16 cmd;
        
#line 1679 
        cmd = sky2_pci_read16((struct sky2_hw const *)hw,(unsigned int)(cap + 2));
        
#line 1680 
        cmd = (unsigned short)((unsigned int)cmd & 65423U);
        
#line 1681 
        sky2_pci_write16(hw,(unsigned int)(cap + 2),(unsigned short)((int)cmd));
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 1684 
  sky2_mac_init(hw,port);
  
#line 1687 
  tmp_0 = sky2_read8((struct sky2_hw const *)hw,284U);
  
#line 1687 
  ramsize = (unsigned int)((int)tmp_0 * 4);
  
#line 1688 
  if (ramsize != 0U) {
    u32 rxspace;
    int tmp_1;
    {
      
#line 1691 
      struct _ddebug descriptor = {.modname = "sky2", .function = "sky2_hw_up", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c", .format = "ram buffer %dK\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1691U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
      
#line 1691 
      if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1691 
                                                          __dynamic_netdev_dbg(& descriptor,(struct net_device const *)sky2->netdev,"ram buffer %dK\n",ramsize); else ;
    }
    
#line 1692 
    if (ramsize <= 15U) 
#line 1693 
                        rxspace = ramsize / 2U; else 
#line 1695 
                                                     rxspace = ((ramsize + 2147483632U) * 2U) / 3U + 8U;
    
#line 1697 
    sky2_ramset(hw,(unsigned short)((int)((unsigned short)rxqaddr[port])),0U,rxspace);
    
#line 1698 
    sky2_ramset(hw,(unsigned short)((int)((unsigned short)txqaddr[port])),rxspace,ramsize - rxspace);
    
#line 1701 
    if (port == 0U) 
#line 1701 
                    tmp_1 = 2600; else 
#line 1701 
                                       tmp_1 = 2856;
    
#line 1701 
    ;
    
#line 1701 
    sky2_write8((struct sky2_hw const *)hw,(unsigned int)tmp_1,(unsigned char)1);
  }
  else ;
  
#line 1705 
  sky2_qset(hw,(unsigned short)((int)((unsigned short)txqaddr[port])));
  
#line 1708 
  if ((unsigned int)hw->chip_id == 181U && (unsigned int)hw->chip_rev == 2U) 
    
#line 1709 
    sky2_write32((struct sky2_hw const *)hw,txqaddr[port] + 1080U,2147483648U); else ;
  
#line 1712 
  if ((unsigned int)hw->chip_id == 180U && (unsigned int)hw->chip_rev == 1U) 
    
#line 1714 
    sky2_write16((struct sky2_hw const *)hw,txqaddr[port] + 1090U,(unsigned short)416); else ;
  
#line 1716 
  sky2_prefetch_init(hw,txqaddr[port],sky2->tx_le_map,(unsigned int)((int)sky2->tx_ring_size + -1));
  
#line 1719 
  sky2_vlan_mode(sky2->netdev,(sky2->netdev)->features);
  
#line 1720 
  netdev_update_features(sky2->netdev);
  
#line 1722 
  sky2_rx_start(sky2);
  
#line 1723 
  return;
}


#line 1726  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_setup_irq(struct sky2_hw *hw, char const *name)
{
  int err;
  int tmp;
  
#line 1728 
  struct pci_dev *pdev = hw->pdev;
  
#line 1731 
  ;
  
#line 1731 
  ;
  
#line 1732 
  if ((hw->flags & 1UL) != 0UL) 
#line 1732 
                                tmp = 0; else 
#line 1732 
                                              tmp = 128;
  
#line 1731 
  ;
  
#line 1731 
  err = ldv_request_irq_83(pdev->irq,& sky2_intr,(unsigned long)tmp,name,(void *)hw);
  
#line 1734 
  if (err != 0) 
#line 1735 
                dev_err((struct device const *)(& pdev->dev),"cannot assign irq %d\n",pdev->irq);
  else {
    
#line 1737 
    hw->flags |= 2048UL;
    
#line 1739 
    napi_enable(& hw->napi);
    
#line 1740 
    sky2_write32((struct sky2_hw const *)hw,12U,3221225472U);
    
#line 1741 
    sky2_read32((struct sky2_hw const *)hw,12U);
  }
  
#line 1744 
  return err;
}


#line 1749  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_open(struct net_device *dev)
{
  int __retres;
  u32 imask;
  int err;
  
#line 1751 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 1752 
  struct sky2_hw *hw = sky2->hw;
  
#line 1753 
  unsigned int port = sky2->port;
  
#line 1757 
  netif_carrier_off(dev);
  
#line 1759 
  err = sky2_alloc_buffers(sky2);
  
#line 1760 
  if (err != 0) 
#line 1761 
                goto err_out; else ;
  
#line 1764 
  if ((unsigned int)hw->ports == 1U) {
    
#line 1764 
    err = sky2_setup_irq(hw,(char const *)(& dev->name));
    
#line 1764 
    if (err != 0) 
#line 1765 
                  goto err_out; else ;
  }
  else ;
  
#line 1767 
  sky2_hw_up(sky2);
  
#line 1770 
  imask = sky2_read32((struct sky2_hw const *)hw,12U);
  
#line 1772 
  if ((unsigned int)hw->chip_id + 68U <= 2U) 
#line 1775 
                                             imask |= 32U; else ;
  
#line 1777 
  imask = portirq_msk[port] | imask;
  
#line 1778 
  sky2_write32((struct sky2_hw const *)hw,12U,imask);
  
#line 1779 
  sky2_read32((struct sky2_hw const *)hw,12U);
  
#line 1781 
  if ((sky2->msg_enable & 32U) != 0U) 
#line 1781 
                                      netdev_info((struct net_device const *)dev,"enabling interface\n"); else ;
  
#line 1783 
  __retres = 0;
  
#line 1783 
  goto return_label;
  err_out: 
#line 1785 
  ;
  
#line 1786 
  sky2_free_buffers(sky2);
  
#line 1787 
  __retres = err;
  return_label: 
#line 1787 
                return __retres;
}


#line 1791  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
__inline static int tx_inuse(struct sky2_port const *sky2)
{
  int __retres;
  
#line 1793 
  __retres = ((int)sky2->tx_prod - (int)sky2->tx_cons) & ((int)sky2->tx_ring_size + -1);
  
#line 1793 
  return __retres;
}


#line 1797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
__inline static int tx_avail(struct sky2_port const *sky2)
{
  int __retres;
  int tmp;
  
#line 1799 
  tmp = tx_inuse(sky2);
  
#line 1799 
  ;
  
#line 1799 
  __retres = (int)sky2->tx_pending - tmp;
  
#line 1799 
  return __retres;
}


#line 1803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static unsigned int tx_le_req(struct sk_buff const *skb)
{
  unsigned int count;
  unsigned char *tmp;
  bool tmp_0;
  
#line 1807 
  tmp = skb_end_pointer(skb);
  
#line 1807 
  count = (unsigned int)((unsigned long)((int)((struct skb_shared_info *)tmp)->nr_frags + 1)) * 2U;
  
#line 1810 
  tmp_0 = skb_is_gso(skb);
  
#line 1810 
  if ((int)tmp_0 != 0) 
#line 1811 
                       count += 1U; else ;
  
#line 1815 
  if ((unsigned int)*((unsigned char *)skb + 145UL) == 6U) 
#line 1816 
                                                           count += 1U; else ;
  
#line 1818 
  return count;
}


#line 1821  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_tx_unmap(struct pci_dev *pdev, struct tx_ring_info *re)
{
  
#line 1823 
  if ((re->flags & 1UL) != 0UL) 
#line 1824 
                                pci_unmap_single(pdev,re->mapaddr,(unsigned long)re->maplen,1);
  else 
    
#line 1827 
    if ((re->flags & 2UL) != 0UL) 
#line 1828 
                                  pci_unmap_page(pdev,re->mapaddr,(unsigned long)re->maplen,1); else ;
  
#line 1831 
  re->flags = 0UL;
  
#line 1832 
  return;
}


#line 1840  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static netdev_tx_t sky2_xmit_frame(struct sk_buff *skb, struct net_device *dev)
{
  netdev_tx_t __retres;
  struct tx_ring_info *re;
  unsigned int i;
  unsigned int len;
  dma_addr_t mapping;
  u32 upper;
  u16 slot;
  u16 mss;
  u8 ctrl;
  int tmp_0;
  unsigned int tmp_1;
  int tmp_2;
  unsigned char *tmp_3;
  unsigned char *tmp_13;
  int tmp_14;
  int tmp_15;
  
#line 1843 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 1844 
  struct sky2_hw *hw = sky2->hw;
  
#line 1845 
  struct sky2_tx_le *le = (struct sky2_tx_le *)0;
  
#line 1854 
  tmp_0 = tx_avail((struct sky2_port const *)sky2);
  
#line 1854 
  tmp_1 = tx_le_req((struct sk_buff const *)skb);
  
#line 1854 
  if ((long)((unsigned int)tmp_0 < tmp_1) != 0L) {
    
#line 1855 
    __retres = NETDEV_TX_BUSY;
    
#line 1855 
    goto return_label;
  }
  else ;
  
#line 1857 
  len = skb_headlen((struct sk_buff const *)skb);
  
#line 1858 
  mapping = pci_map_single(hw->pdev,(void *)skb->data,(unsigned long)len,1);
  
#line 1860 
  tmp_2 = pci_dma_mapping_error(hw->pdev,mapping);
  
#line 1860 
  if (tmp_2 != 0) 
#line 1861 
                  goto mapping_error; else ;
  
#line 1863 
  slot = sky2->tx_prod;
  
#line 1864 
  if ((sky2->msg_enable & 256U) != 0U) 
#line 1864 
                                       netdev_printk("\001",(struct net_device const *)dev,"tx queued, slot %u, len %d\n",(int)slot,skb->len); else ;
  
#line 1868 
  upper = (unsigned int)(mapping >> 32);
  
#line 1869 
  if (sky2->tx_last_upper != upper) {
    
#line 1870 
    le = get_tx_le(sky2,& slot);
    
#line 1871 
    le->addr = upper;
    
#line 1872 
    sky2->tx_last_upper = upper;
    
#line 1873 
    le->opcode = (unsigned char)161U;
  }
  else ;
  
#line 1877 
  tmp_3 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1877 
  mss = ((struct skb_shared_info *)tmp_3)->gso_size;
  
#line 1878 
  if ((unsigned int)mss != 0U) {
    
#line 1880 
    if ((hw->flags & 32UL) == 0UL) {
      unsigned int tmp_4;
      unsigned int tmp_5;
      
#line 1881 
      tmp_4 = ip_hdrlen((struct sk_buff const *)skb);
      
#line 1881 
      tmp_5 = tcp_hdrlen((struct sk_buff const *)skb);
      
#line 1881 
      mss = (unsigned short)((int)((unsigned short)((tmp_4 + tmp_5) + 14U)) + (int)mss);
    }
    else ;
    
#line 1883 
    if ((int)sky2->tx_last_mss != (int)mss) {
      
#line 1884 
      le = get_tx_le(sky2,& slot);
      
#line 1885 
      le->addr = (unsigned int)mss;
      
#line 1887 
      if ((hw->flags & 32UL) != 0UL) 
#line 1888 
                                     le->opcode = (unsigned char)168U; else 
                                                                    
#line 1890 
                                                                    le->opcode = (unsigned char)164U;
      
#line 1891 
      sky2->tx_last_mss = mss;
    }
    else ;
  }
  else ;
  
#line 1895 
  ctrl = (unsigned char)0U;
  
#line 1898 
  if (((int)skb->vlan_tci & 4096) != 0) {
    
#line 1899 
    if (le == (struct sky2_tx_le *)0) {
      
#line 1900 
      le = get_tx_le(sky2,& slot);
      
#line 1901 
      le->addr = 0U;
      
#line 1902 
      le->opcode = (unsigned char)162U;
    }
    else 
#line 1904 
         le->opcode = (unsigned char)((unsigned int)le->opcode | 34U);
    
#line 1905 
    if (0 != 0) 
#line 1905 
                le->length = (unsigned short)(((int)skb->vlan_tci << 8) | (((int)skb->vlan_tci >> 8) & 239)); else 
                                                                    
#line 1905 
                                                                    le->length = __fswab16((unsigned short)((int)skb->vlan_tci & 61439));
    
#line 1906 
    ctrl = (unsigned char)((unsigned int)ctrl | 32U);
  }
  else ;
  
#line 1910 
  if ((unsigned int)*((unsigned char *)skb + 145UL) == 6U) 
    
#line 1912 
    if ((hw->flags & 64UL) != 0UL) 
#line 1913 
                                   ctrl = (unsigned char)((unsigned int)ctrl | 2U);
    else {
      int tmp_7;
      u32 tcpsum;
      struct iphdr *tmp_8;
      
#line 1915 
      tmp_7 = skb_transport_offset((struct sk_buff const *)skb);
      
#line 1915 
      unsigned int const offset = (unsigned int)tmp_7;
      
#line 1918 
      tcpsum = offset << 16;
      
#line 1919 
      tcpsum = ((unsigned int)skb->__anonCompField_sk_buff_81.__anonCompField___anonunion_281_80.csum_offset + offset) | tcpsum;
      
#line 1921 
      ctrl = (unsigned char)((unsigned int)ctrl | 30U);
      
#line 1922 
      tmp_8 = ip_hdr((struct sk_buff const *)skb);
      
#line 1922 
      ;
      
#line 1922 
      if ((unsigned int)tmp_8->protocol == 17U) 
#line 1923 
                                                ctrl = (unsigned char)((unsigned int)ctrl | 1U); else ;
      
#line 1925 
      if (sky2->tx_tcpsum != tcpsum) {
        
#line 1926 
        sky2->tx_tcpsum = tcpsum;
        
#line 1928 
        le = get_tx_le(sky2,& slot);
        
#line 1929 
        le->addr = tcpsum;
        
#line 1930 
        le->length = (unsigned short)0U;
        
#line 1931 
        le->ctrl = (unsigned char)1U;
        
#line 1932 
        le->opcode = (unsigned char)159U;
      }
      else ;
    }
  else ;
  
#line 1937 
  re = sky2->tx_ring + (int)slot;
  
#line 1938 
  re->flags = 1UL;
  
#line 1939 
  re->mapaddr = mapping;
  
#line 1940 
  re->maplen = len;
  
#line 1942 
  le = get_tx_le(sky2,& slot);
  
#line 1943 
  le->addr = (unsigned int)mapping;
  
#line 1944 
  le->length = (unsigned short)len;
  
#line 1945 
  le->ctrl = ctrl;
  
#line 1946 
  if ((unsigned int)mss != 0U) 
#line 1946 
                               le->opcode = (unsigned char)195U; else 
                                                                   
#line 1946 
                                                                   le->opcode = (unsigned char)193U;
  
#line 1949 
  i = 0U;
  
#line 1949 
  goto ldv_56018;
  ldv_56017: 
#line 1950 
  ;
  {
    unsigned char *tmp_9;
    unsigned int tmp_10;
    int tmp_11;
    unsigned int tmp_12;
    
#line 1950 
    tmp_9 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 1950 
    skb_frag_t const *frag = (skb_frag_t const *)(& ((struct skb_shared_info *)tmp_9)->frags[i]);
    
#line 1953 
    tmp_10 = skb_frag_size(frag);
    
#line 1952 
    ;
    
#line 1952 
    ;
    
#line 1952 
    mapping = skb_frag_dma_map(& (hw->pdev)->dev,frag,0UL,(unsigned long)tmp_10,(enum dma_data_direction)DMA_TO_DEVICE);
    
#line 1955 
    tmp_11 = dma_mapping_error(& (hw->pdev)->dev,mapping);
    
#line 1955 
    if (tmp_11 != 0) 
#line 1956 
                     goto mapping_unwind; else ;
    
#line 1958 
    upper = (unsigned int)(mapping >> 32);
    
#line 1959 
    if (sky2->tx_last_upper != upper) {
      
#line 1960 
      le = get_tx_le(sky2,& slot);
      
#line 1961 
      le->addr = upper;
      
#line 1962 
      sky2->tx_last_upper = upper;
      
#line 1963 
      le->opcode = (unsigned char)161U;
    }
    else ;
    
#line 1966 
    re = sky2->tx_ring + (int)slot;
    
#line 1967 
    re->flags = 2UL;
    
#line 1968 
    re->mapaddr = mapping;
    
#line 1969 
    re->maplen = skb_frag_size(frag);
    
#line 1971 
    le = get_tx_le(sky2,& slot);
    
#line 1972 
    le->addr = (unsigned int)mapping;
    
#line 1973 
    tmp_12 = skb_frag_size(frag);
    
#line 1973 
    le->length = (unsigned short)tmp_12;
    
#line 1974 
    le->ctrl = ctrl;
    
#line 1975 
    le->opcode = (unsigned char)192U;
  }
  
#line 1949 
  i += 1U;
  ldv_56018: 
#line 1950 
  ;
  
#line 1949 
  tmp_13 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1949 
  ;
  
#line 1949 
  if ((unsigned int)((struct skb_shared_info *)tmp_13)->nr_frags > i) 
    
#line 1951 
    goto ldv_56017; else 
#line 1954 
                         goto ldv_56019;
  ldv_56019: 
#line 1955 
  ;
  
#line 1978 
  re->skb = skb;
  
#line 1979 
  le->ctrl = (unsigned char)((unsigned int)le->ctrl | 128U);
  
#line 1981 
  sky2->tx_prod = slot;
  
#line 1983 
  tmp_14 = tx_avail((struct sky2_port const *)sky2);
  
#line 1983 
  if ((unsigned int)tmp_14 <= 38U) 
#line 1984 
                                   netif_stop_queue(dev); else ;
  
#line 1986 
  netdev_sent_queue(dev,skb->len);
  
#line 1987 
  sky2_put_idx(hw,txqaddr[sky2->port],(unsigned short)((int)sky2->tx_prod));
  
#line 1989 
  __retres = NETDEV_TX_OK;
  
#line 1989 
  goto return_label;
  mapping_unwind: 
#line 1991 
  ;
  
#line 1992 
  i = (unsigned int)sky2->tx_prod;
  
#line 1992 
  goto ldv_56021;
  ldv_56020: 
#line 1993 
  ;
  
#line 1993 
  re = sky2->tx_ring + i;
  
#line 1995 
  sky2_tx_unmap(hw->pdev,re);
  
#line 1992 
  i = (i + 1U) & (unsigned int)((int)sky2->tx_ring_size + -1);
  ldv_56021: 
#line 1993 
  ;
  
#line 1992 
  if ((unsigned int)slot != i) 
#line 1994 
                               goto ldv_56020; else 
#line 1997 
                                                    goto ldv_56022;
  ldv_56022: 
#line 1998 
  ;
  mapping_error: 
#line 1998 
  ;
  
#line 1999 
  tmp_15 = net_ratelimit();
  
#line 1999 
  if (tmp_15 != 0) 
#line 2000 
                   dev_warn((struct device const *)(& (hw->pdev)->dev),"%s: tx mapping error\n",(char *)(& dev->name)); else ;
  
#line 2001 
  dev_kfree_skb_any(skb);
  
#line 2002 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 2002 
                return __retres;
}


#line 2015  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_tx_complete(struct sky2_port *sky2, u16 done)
{
  u16 idx;
  
#line 2017 
  struct net_device *dev = sky2->netdev;
  
#line 2019 
  unsigned int bytes_compl = 0U;
  
#line 2019 
  unsigned int pkts_compl = 0U;
  
#line 2021 
  if ((long)((int)sky2->tx_ring_size <= (int)done) != 0L) {
    
#line 2023 
    ldv_inline_asm();
    
#line 2021 
    ;
  }
  else ;
  
#line 2023 
  idx = sky2->tx_cons;
  
#line 2023 
  goto ldv_56034;
  ldv_56033: 
#line 2024 
  ;
  {
    
#line 2025 
    struct tx_ring_info *re = sky2->tx_ring + (int)idx;
    
#line 2026 
    struct sk_buff *skb = re->skb;
    
#line 2028 
    sky2_tx_unmap((sky2->hw)->pdev,re);
    
#line 2030 
    if (skb != (struct sk_buff *)0) {
      
#line 2031 
      if ((sky2->msg_enable & 1024U) != 0U) 
#line 2031 
                                            netdev_printk("\001",(struct net_device const *)dev,"tx done %u\n",(int)idx); else ;
      
#line 2034 
      pkts_compl += 1U;
      
#line 2035 
      bytes_compl = skb->len + bytes_compl;
      
#line 2037 
      re->skb = (struct sk_buff *)0;
      
#line 2038 
      dev_kfree_skb_any(skb);
      
#line 2040 
      sky2->tx_next = (unsigned short)(((unsigned int)idx + 1U) & ((unsigned int)sky2->tx_ring_size + 65535U));
    }
    else ;
  }
  
#line 2024 
  idx = (unsigned short)(((unsigned int)idx + 1U) & ((unsigned int)sky2->tx_ring_size + 65535U));
  ldv_56034: 
#line 2025 
  ;
  
#line 2023 
  if ((int)idx != (int)done) 
#line 2025 
                             goto ldv_56033; else 
#line 2028 
                                                  goto ldv_56035;
  ldv_56035: 
#line 2029 
  ;
  
#line 2044 
  sky2->tx_cons = idx;
  
#line 2045 
  ldv_inline_asm();
  
#line 2047 
  netdev_completed_queue(dev,pkts_compl,bytes_compl);
  
#line 2049 
  u64_stats_init(& sky2->tx_stats.syncp);
  
#line 2050 
  sky2->tx_stats.packets += (unsigned long long)pkts_compl;
  
#line 2051 
  sky2->tx_stats.bytes += (unsigned long long)bytes_compl;
  
#line 2052 
  u64_stats_init(& sky2->tx_stats.syncp);
  
#line 2053 
  return;
}


#line 2055  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_tx_reset(struct sky2_hw *hw, unsigned int port)
{
  
#line 2058 
  sky2_write8((struct sky2_hw const *)hw,(port << 7) + 528U,(unsigned char)84);
  
#line 2062 
  sky2_write32((struct sky2_hw const *)hw,(port << 7) + 512U,0U);
  
#line 2063 
  sky2_write32((struct sky2_hw const *)hw,(port << 7) + 520U,0U);
  
#line 2066 
  sky2_write32((struct sky2_hw const *)hw,txqaddr[port] + 1076U,17U);
  
#line 2070 
  sky2_write32((struct sky2_hw const *)hw,txqaddr[port] + 1104U,1U);
  
#line 2073 
  sky2_write32((struct sky2_hw const *)hw,txqaddr[port] + 2088U,1U);
  
#line 2074 
  sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3400U,(unsigned char)1);
  
#line 2076 
  sky2_read32((struct sky2_hw const *)hw,4U);
  
#line 2077 
  return;
}


#line 2079  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_hw_down(struct sky2_port *sky2)
{
  u16 ctrl;
  
#line 2081 
  struct sky2_hw *hw = sky2->hw;
  
#line 2082 
  unsigned int port = sky2->port;
  
#line 2086 
  sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3840U,(unsigned char)4);
  
#line 2089 
  sky2_write32((struct sky2_hw const *)hw,txqaddr[port] + 1076U,512U);
  
#line 2090 
  sky2_read32((struct sky2_hw const *)hw,txqaddr[port] + 1076U);
  
#line 2092 
  sky2_write32((struct sky2_hw const *)hw,txqaddr[port] + 2088U,5U);
  
#line 2095 
  ctrl = gma_read16((struct sky2_hw const *)hw,port,4U);
  
#line 2096 
  ctrl = (unsigned short)((unsigned int)ctrl & 59391U);
  
#line 2097 
  gma_write16((struct sky2_hw const *)hw,port,4,(unsigned short)((int)ctrl));
  
#line 2099 
  sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3844U,(unsigned char)1);
  
#line 2102 
  if ((((unsigned int)hw->chip_id != 179U || (unsigned int)hw->chip_rev != 0U) || port != 0U) || hw->dev[1] == (struct net_device *)0) 
    
#line 2104 
    sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3840U,(unsigned char)1);
  else {
    int tmp_0;
    bool tmp;
    
#line 2103 
    tmp = netif_running((struct net_device const *)hw->dev[1]);
    
#line 2103 
    if (tmp) 
#line 2103 
             tmp_0 = 0; else 
#line 2103 
                             tmp_0 = 1;
    
#line 2103 
    if (tmp_0) 
#line 2104 
               sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3840U,(unsigned char)1); else ;
  }
  
#line 2106 
  sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3144U,(unsigned char)1);
  
#line 2109 
  sky2_write32((struct sky2_hw const *)hw,3764U,0U);
  
#line 2110 
  sky2_write32((struct sky2_hw const *)hw,3780U,0U);
  
#line 2111 
  sky2_write32((struct sky2_hw const *)hw,3796U,0U);
  
#line 2112 
  sky2_read8((struct sky2_hw const *)hw,3800U);
  
#line 2114 
  sky2_rx_stop(sky2);
  
#line 2116 
  ldv_spin_lock_bh_84(& sky2->phy_lock);
  
#line 2117 
  sky2_phy_power_down(hw,port);
  
#line 2118 
  ldv_spin_unlock_bh_85(& sky2->phy_lock);
  
#line 2120 
  sky2_tx_reset(hw,port);
  
#line 2123 
  sky2_tx_complete(sky2,(unsigned short)((int)sky2->tx_prod));
  
#line 2124 
  return;
}


#line 2127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_close(struct net_device *dev)
{
  int __retres;
  
#line 2129 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 2130 
  struct sky2_hw *hw = sky2->hw;
  
#line 2133 
  if (sky2->tx_le == (struct sky2_tx_le *)0) {
    
#line 2134 
    __retres = 0;
    
#line 2134 
    goto return_label;
  }
  else ;
  
#line 2136 
  if ((sky2->msg_enable & 16U) != 0U) 
#line 2136 
                                      netdev_info((struct net_device const *)dev,"disabling interface\n"); else ;
  
#line 2138 
  if ((unsigned int)hw->ports == 1U) {
    
#line 2139 
    sky2_write32((struct sky2_hw const *)hw,12U,0U);
    
#line 2140 
    sky2_read32((struct sky2_hw const *)hw,12U);
    
#line 2142 
    napi_disable(& hw->napi);
    
#line 2143 
    ldv_free_irq_86((hw->pdev)->irq,(void *)hw);
    
#line 2144 
    hw->flags &= 18446744073709549567UL;
  }
  else {
    u32 imask;
    
#line 2149 
    imask = sky2_read32((struct sky2_hw const *)hw,12U);
    
#line 2150 
    imask = ~ portirq_msk[sky2->port] & imask;
    
#line 2151 
    sky2_write32((struct sky2_hw const *)hw,12U,imask);
    
#line 2152 
    sky2_read32((struct sky2_hw const *)hw,12U);
    
#line 2154 
    synchronize_irq((hw->pdev)->irq);
    
#line 2155 
    napi_synchronize((struct napi_struct const *)(& hw->napi));
  }
  
#line 2158 
  sky2_hw_down(sky2);
  
#line 2160 
  sky2_free_buffers(sky2);
  
#line 2162 
  __retres = 0;
  return_label: 
#line 2162 
                return __retres;
}


#line 2165  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static u16 sky2_phy_speed(struct sky2_hw const *hw, u16 aux)
{
  u16 __retres;
  
#line 2167 
  if ((hw->flags & 2UL) != 0UL) {
    
#line 2168 
    __retres = (unsigned short)1000U;
    
#line 2168 
    goto return_label;
  }
  else ;
  
#line 2170 
  if ((hw->flags & 4UL) == 0UL) 
    
#line 2171 
    if (((int)aux & 16384) != 0) {
      
#line 2172 
      __retres = (unsigned short)100U;
      
#line 2172 
      goto return_label;
    }
    else {
      
#line 2174 
      __retres = (unsigned short)10U;
      
#line 2174 
      goto return_label;
    }
  else ;
  
#line 2177 
  switch ((int)aux & 49152) {
    case 32768: 
#line 2178 
    ;
    
#line 2179 
    __retres = (unsigned short)1000U;
    
#line 2179 
    goto return_label;
    case 16384: 
#line 2180 
    ;
    
#line 2181 
    __retres = (unsigned short)100U;
    
#line 2181 
    goto return_label;
    default: 
#line 2182 
    ;
    
#line 2183 
    __retres = (unsigned short)10U;
    
#line 2183 
    goto return_label;
  }
  return_label: 
#line 2177 
                return __retres;
}


#line 2187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_link_up(struct sky2_port *sky2)
{
  
#line 2189 
  struct sky2_hw *hw = sky2->hw;
  
#line 2190 
  unsigned int port = sky2->port;
  
#line 2191 
  char const *fc_name[4U] = {"none", "tx", "rx", "both"};
  
#line 2198 
  sky2_set_ipg(sky2);
  
#line 2200 
  sky2_enable_rx_tx(sky2);
  
#line 2202 
  gm_phy_write(hw,port,(unsigned short)18,(unsigned short)25600);
  
#line 2204 
  netif_carrier_on(sky2->netdev);
  
#line 2206 
  ldv_mod_timer_87(& hw->watchdog_timer,jiffies + 1UL);
  
#line 2209 
  sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3132U,(unsigned char)22);
  
#line 2212 
  if ((sky2->msg_enable & 4U) != 0U) {
    char *tmp;
    
#line 2212 
    ;
    
#line 2212 
    if ((unsigned int)sky2->duplex == 1U) 
#line 2212 
                                          tmp = (char *)"full"; else 
                                                                  
#line 2212 
                                                                  tmp = (char *)"half";
    
#line 2212 
    ;
    
#line 2212 
    ;
    
#line 2212 
    netdev_info((struct net_device const *)sky2->netdev,"Link is up at %d Mbps, %s duplex, flow control %s\n",(int)sky2->speed,tmp,fc_name[(unsigned int)sky2->flow_status]);
  }
  else ;
  
#line 2213 
  return;
}


#line 2219  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_link_down(struct sky2_port *sky2)
{
  u16 reg;
  
#line 2221 
  struct sky2_hw *hw = sky2->hw;
  
#line 2222 
  unsigned int port = sky2->port;
  
#line 2225 
  gm_phy_write(hw,port,(unsigned short)18,(unsigned short)0);
  
#line 2227 
  reg = gma_read16((struct sky2_hw const *)hw,port,4U);
  
#line 2228 
  reg = (unsigned short)((unsigned int)reg & 59391U);
  
#line 2229 
  gma_write16((struct sky2_hw const *)hw,port,4,(unsigned short)((int)reg));
  
#line 2231 
  netif_carrier_off(sky2->netdev);
  
#line 2234 
  sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3132U,(unsigned char)1);
  
#line 2236 
  if ((sky2->msg_enable & 4U) != 0U) 
#line 2236 
                                     netdev_info((struct net_device const *)sky2->netdev,"Link is down\n"); else ;
  
#line 2238 
  sky2_phy_init(hw,port);
  
#line 2239 
  return;
}


#line 2241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static enum flow_control sky2_flow(int rx, int tx)
{
  enum flow_control __retres;
  
#line 2243 
  if (rx != 0) {
    int tmp;
    
#line 2244 
    if (tx != 0) 
#line 2244 
                 tmp = 3; else 
#line 2244 
                               tmp = 2;
    
#line 2244 
    __retres = (enum flow_control)tmp;
    
#line 2244 
    goto return_label;
  }
  else {
    
#line 2246 
    __retres = (enum flow_control)(tx != 0);
    
#line 2246 
    goto return_label;
  }
  return_label: 
#line 2243 
                return __retres;
}


#line 2249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_autoneg_done(struct sky2_port *sky2, u16 aux)
{
  int __retres;
  u16 advert;
  u16 lpa;
  
#line 2251 
  struct sky2_hw *hw = sky2->hw;
  
#line 2252 
  unsigned int port = sky2->port;
  
#line 2255 
  advert = gm_phy_read(hw,port,(unsigned short)4);
  
#line 2256 
  lpa = gm_phy_read(hw,port,(unsigned short)5);
  
#line 2257 
  if (((int)lpa & 8192) != 0) {
    
#line 2258 
    netdev_err((struct net_device const *)sky2->netdev,"remote fault\n");
    
#line 2259 
    __retres = -1;
    
#line 2259 
    goto return_label;
  }
  else ;
  
#line 2262 
  if (((int)aux & 2048) == 0) {
    
#line 2263 
    netdev_err((struct net_device const *)sky2->netdev,"speed/duplex mismatch\n");
    
#line 2264 
    __retres = -1;
    
#line 2264 
    goto return_label;
  }
  else ;
  
#line 2267 
  sky2->speed = sky2_phy_speed((struct sky2_hw const *)hw,(unsigned short)((int)aux));
  
#line 2268 
  sky2->duplex = (unsigned char)((unsigned int)((unsigned char)((int)aux >> 13)) & 1U);
  
#line 2273 
  if ((hw->flags & 2UL) != 0UL) {
    
#line 2275 
    advert = (unsigned short)((unsigned int)advert & 62463U);
    
#line 2276 
    lpa = (unsigned short)((unsigned int)lpa & 62463U);
    
#line 2278 
    if (((int)advert & 128) != 0) 
#line 2279 
                                  advert = (unsigned short)((unsigned int)advert | 1024U); else ;
    
#line 2280 
    if (((int)advert & 256) != 0) 
#line 2281 
                                  advert = (unsigned short)((unsigned int)advert | 2048U); else ;
    
#line 2282 
    if (((int)lpa & 128) != 0) 
#line 2283 
                               lpa = (unsigned short)((unsigned int)lpa | 1024U); else ;
    
#line 2284 
    if (((int)lpa & 256) != 0) 
#line 2285 
                               lpa = (unsigned short)((unsigned int)lpa | 2048U); else ;
  }
  else ;
  
#line 2288 
  sky2->flow_status = FC_NONE;
  
#line 2289 
  if (((int)advert & 1024) != 0) {
    
#line 2290 
    if (((int)lpa & 1024) != 0) 
#line 2291 
                                sky2->flow_status = FC_BOTH;
    else 
      
#line 2292 
      if (((int)advert & 2048) != 0) 
#line 2293 
                                     sky2->flow_status = FC_RX; else ;
  }
  else 
    
#line 2294 
    if (((int)advert & 2048) != 0) {
      
#line 2295 
      if (((int)lpa & 1024) != 0 && ((int)lpa & 2048) != 0) 
#line 2296 
                                                            sky2->flow_status = FC_TX; else ;
    }
    else ;
  
#line 2299 
  if (((unsigned int)sky2->duplex == 0U && (unsigned int)sky2->speed <= 999U) && (unsigned int)hw->chip_id + 76U > 1U) 
    
#line 2301 
    sky2->flow_status = FC_NONE; else ;
  
#line 2303 
  if (((unsigned int)sky2->flow_status & 1U) != 0U) 
#line 2304 
                                                    sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3840U,(unsigned char)8); else 
                                                                    
#line 2306 
                                                                    sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3840U,(unsigned char)4);
  
#line 2308 
  __retres = 0;
  return_label: 
#line 2308 
                return __retres;
}


#line 2312  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_phy_intr(struct sky2_hw *hw, unsigned int port)
{
  u16 istatus;
  u16 phystat;
  int tmp_1;
  bool tmp_0;
  
#line 2314 
  struct net_device *dev = hw->dev[port];
  
#line 2315 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 2318 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 2318 
  if (tmp_0) 
#line 2318 
             tmp_1 = 0; else 
#line 2318 
                             tmp_1 = 1;
  
#line 2318 
  if (tmp_1) 
#line 2319 
             goto return_label; else ;
  
#line 2321 
  ldv_spin_lock_88(& sky2->phy_lock);
  
#line 2322 
  istatus = gm_phy_read(hw,port,(unsigned short)19);
  
#line 2323 
  phystat = gm_phy_read(hw,port,(unsigned short)17);
  
#line 2325 
  if ((sky2->msg_enable & 512U) != 0U) 
#line 2325 
                                       netdev_info((struct net_device const *)sky2->netdev,"phy interrupt status 0x%x 0x%x\n",(int)istatus,(int)phystat); else ;
  
#line 2328 
  if (((int)istatus & 2048) != 0) {
    int tmp_2;
    
#line 2329 
    tmp_2 = sky2_autoneg_done(sky2,(unsigned short)((int)phystat));
    
#line 2329 
    if (tmp_2 == 0) {
      int tmp_4;
      bool tmp_3;
      
#line 2330 
      tmp_3 = netif_carrier_ok((struct net_device const *)dev);
      
#line 2330 
      if (tmp_3) 
#line 2330 
                 tmp_4 = 0; else 
#line 2330 
                                 tmp_4 = 1;
      
#line 2330 
      if (tmp_4) 
#line 2331 
                 sky2_link_up(sky2); else ;
    }
    else ;
    
#line 2332 
    goto out;
  }
  else ;
  
#line 2335 
  if (((int)istatus & 16384) != 0) 
#line 2336 
                                   sky2->speed = sky2_phy_speed((struct sky2_hw const *)hw,(unsigned short)((int)phystat)); else ;
  
#line 2338 
  if (((int)istatus & 8192) != 0) 
#line 2339 
                                  sky2->duplex = (unsigned char)((unsigned int)((unsigned char)((int)phystat >> 13)) & 1U); else ;
  
#line 2342 
  if (((int)istatus & 1024) != 0) 
    
#line 2343 
    if (((int)phystat & 1024) != 0) 
#line 2344 
                                    sky2_link_up(sky2); else 
#line 2346 
                                                             sky2_link_down(sky2);
  else ;
  out: 
#line 2348 
  ;
  
#line 2349 
  ldv_spin_unlock_89(& sky2->phy_lock);
  return_label: 
#line 2350 
                return;
}


#line 2353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_qlink_intr(struct sky2_hw *hw)
{
  u32 imask;
  u16 phy;
  
#line 2355 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)hw->dev[0]);
  
#line 2360 
  imask = sky2_read32((struct sky2_hw const *)hw,12U);
  
#line 2361 
  imask &= 4294967263U;
  
#line 2362 
  sky2_write32((struct sky2_hw const *)hw,12U,imask);
  
#line 2365 
  phy = sky2_pci_read16((struct sky2_hw const *)hw,360U);
  
#line 2366 
  sky2_write8((struct sky2_hw const *)hw,344U,(unsigned char)2);
  
#line 2367 
  sky2_pci_write16(hw,360U,(unsigned short)((int)((unsigned int)phy | 1U)));
  
#line 2368 
  sky2_write8((struct sky2_hw const *)hw,344U,(unsigned char)1);
  
#line 2370 
  sky2_link_up(sky2);
  
#line 2371 
  return;
}


#line 2376  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_tx_timeout(struct net_device *dev)
{
  u16 tmp_0;
  u16 tmp_2;
  int tmp_1;
  
#line 2378 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 2379 
  struct sky2_hw *hw = sky2->hw;
  
#line 2381 
  if ((sky2->msg_enable & 8U) != 0U) 
#line 2381 
                                     netdev_err((struct net_device const *)dev,"tx timeout\n"); else ;
  
#line 2386 
  tmp_0 = sky2_read16((struct sky2_hw const *)hw,txqaddr[sky2->port] + 1060U);
  
#line 2385 
  if (sky2->port == 0U) 
#line 2385 
                        tmp_1 = 3728; else 
#line 2385 
                                           tmp_1 = 3732;
  
#line 2385 
  ;
  
#line 2385 
  tmp_2 = sky2_read16((struct sky2_hw const *)hw,(unsigned int)tmp_1);
  
#line 2383 
  ;
  
#line 2383 
  ;
  
#line 2383 
  ;
  
#line 2383 
  netdev_printk("\001",(struct net_device const *)dev,"transmit ring %u .. %u report=%u done=%u\n",(int)sky2->tx_cons,(int)sky2->tx_prod,(int)tmp_2,(int)tmp_0);
  
#line 2389 
  ldv_schedule_work_90(& hw->restart_work);
  
#line 2390 
  return;
}


#line 2392  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_change_mtu(struct net_device *dev, int new_mtu)
{
  int __retres;
  int err;
  u16 ctl;
  u16 mode;
  u32 imask;
  int tmp_1;
  bool tmp_0;
  
#line 2394 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 2395 
  struct sky2_hw *hw = sky2->hw;
  
#line 2396 
  unsigned int port = sky2->port;
  
#line 2402 
  if ((unsigned int)new_mtu + 4294967236U > 8940U) {
    
#line 2403 
    __retres = -22;
    
#line 2403 
    goto return_label;
  }
  else ;
  
#line 2406 
  if (new_mtu > 1500 && (unsigned int)hw->chip_id + 73U <= 1U) {
    
#line 2409 
    __retres = -22;
    
#line 2409 
    goto return_label;
  }
  else ;
  
#line 2411 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 2411 
  if (tmp_0) 
#line 2411 
             tmp_1 = 0; else 
#line 2411 
                             tmp_1 = 1;
  
#line 2411 
  if (tmp_1) {
    
#line 2412 
    dev->mtu = (unsigned int)new_mtu;
    
#line 2413 
    netdev_update_features(dev);
    
#line 2414 
    __retres = 0;
    
#line 2414 
    goto return_label;
  }
  else ;
  
#line 2417 
  imask = sky2_read32((struct sky2_hw const *)hw,12U);
  
#line 2418 
  sky2_write32((struct sky2_hw const *)hw,12U,0U);
  
#line 2419 
  sky2_read32((struct sky2_hw const *)hw,12U);
  
#line 2421 
  dev->trans_start = jiffies;
  
#line 2422 
  napi_disable(& hw->napi);
  
#line 2423 
  netif_tx_disable(dev);
  
#line 2425 
  synchronize_irq((hw->pdev)->irq);
  
#line 2427 
  if ((hw->flags & 16UL) == 0UL) 
#line 2428 
                                 sky2_set_tx_stfwd(hw,port); else ;
  
#line 2430 
  ctl = gma_read16((struct sky2_hw const *)hw,port,4U);
  
#line 2431 
  gma_write16((struct sky2_hw const *)hw,port,4,(unsigned short)((int)ctl & 63487));
  
#line 2432 
  sky2_rx_stop(sky2);
  
#line 2433 
  sky2_rx_clean(sky2);
  
#line 2435 
  dev->mtu = (unsigned int)new_mtu;
  
#line 2436 
  netdev_update_features(dev);
  
#line 2438 
  mode = (unsigned short)8704U;
  
#line 2439 
  if ((unsigned int)sky2->speed > 100U) 
#line 2440 
                                        mode = (unsigned short)((unsigned int)mode | 30U); else 
                                                                    
#line 2442 
                                                                    mode = (unsigned short)((unsigned int)mode | 24U);
  
#line 2444 
  if (dev->mtu > 1500U) 
#line 2445 
                        mode = (unsigned short)((unsigned int)mode | 256U); else ;
  
#line 2447 
  gma_write16((struct sky2_hw const *)hw,port,24,(unsigned short)((int)mode));
  
#line 2449 
  sky2_write8((struct sky2_hw const *)hw,rxqaddr[port] + 2088U,(unsigned char)8);
  
#line 2451 
  err = sky2_alloc_rx_skbs(sky2);
  
#line 2452 
  if (err == 0) 
#line 2453 
                sky2_rx_start(sky2); else 
#line 2455 
                                          sky2_rx_clean(sky2);
  
#line 2456 
  sky2_write32((struct sky2_hw const *)hw,12U,imask);
  
#line 2458 
  sky2_read32((struct sky2_hw const *)hw,40U);
  
#line 2459 
  napi_enable(& hw->napi);
  
#line 2461 
  if (err != 0) 
#line 2462 
                dev_close(dev);
  else {
    
#line 2464 
    gma_write16((struct sky2_hw const *)hw,port,4,(unsigned short)((int)ctl));
    
#line 2466 
    netif_wake_queue(dev);
  }
  
#line 2469 
  __retres = err;
  return_label: 
#line 2469 
                return __retres;
}


#line 2472  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
__inline static bool needs_copy(struct rx_ring_info const *re, unsigned int length)
{
  bool __retres;
  
#line 2480 
  __retres = (_Bool)(length < (unsigned int)copybreak);
  
#line 2480 
  return __retres;
}


#line 2484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static struct sk_buff *receive_copy(struct sky2_port *sky2, struct rx_ring_info const *re, unsigned int length)
{
  struct sk_buff *skb;
  
#line 2490 
  skb = netdev_alloc_skb_ip_align(sky2->netdev,length);
  
#line 2491 
  if ((long)(skb != (struct sk_buff *)0) != 0L) {
    
#line 2492 
    pci_dma_sync_single_for_cpu((sky2->hw)->pdev,re->data_addr,(unsigned long)length,2);
    
#line 2494 
    skb_copy_from_linear_data((struct sk_buff const *)re->skb,(void *)skb->data,length);
    
#line 2495 
    skb->ip_summed = (re->skb)->ip_summed;
    
#line 2496 
    skb->__anonCompField_sk_buff_81.csum = (re->skb)->__anonCompField_sk_buff_81.csum;
    
#line 2497 
    skb_copy_hash(skb,(struct sk_buff const *)re->skb);
    
#line 2498 
    skb->vlan_proto = (re->skb)->vlan_proto;
    
#line 2499 
    skb->vlan_tci = (re->skb)->vlan_tci;
    
#line 2501 
    pci_dma_sync_single_for_device((sky2->hw)->pdev,re->data_addr,(unsigned long)length,2);
    
#line 2503 
    (re->skb)->vlan_proto = (unsigned short)0U;
    
#line 2504 
    (re->skb)->vlan_tci = (unsigned short)0U;
    
#line 2505 
    skb_clear_hash(re->skb);
    
#line 2506 
    (re->skb)->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))0U;
    
#line 2507 
    skb_put(skb,length);
  }
  else ;
  
#line 2509 
  return skb;
}


#line 2513  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void skb_put_frags(struct sk_buff *skb, unsigned int hdr_space, unsigned int length)
{
  int i;
  int num_frags;
  unsigned int size;
  unsigned int tmp_0;
  unsigned char *tmp_1;
  {
    unsigned int tmp;
    
#line 2520 
    unsigned int _min1 = length;
    
#line 2520 
    unsigned int _min2 = hdr_space;
    
#line 2520 
    if (_min1 < _min2) 
#line 2520 
                       tmp = _min1; else 
#line 2520 
                                         tmp = _min2;
    
#line 2520 
    tmp_0 = tmp;
  }
  
#line 2520 
  size = tmp_0;
  
#line 2521 
  skb->tail += size;
  
#line 2522 
  skb->len += size;
  
#line 2523 
  length -= size;
  
#line 2525 
  tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2525 
  num_frags = (int)((struct skb_shared_info *)tmp_1)->nr_frags;
  
#line 2526 
  i = 0;
  
#line 2526 
  goto ldv_56140;
  ldv_56139: 
#line 2527 
  ;
  {
    unsigned char *tmp_2;
    
#line 2527 
    tmp_2 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 2527 
    skb_frag_t *frag = & ((struct skb_shared_info *)tmp_2)->frags[i];
    
#line 2529 
    if (length == 0U) {
      unsigned char *tmp_3;
      
#line 2531 
      __skb_frag_unref(frag);
      
#line 2532 
      tmp_3 = skb_end_pointer((struct sk_buff const *)skb);
      
#line 2532 
      ((struct skb_shared_info *)tmp_3)->nr_frags = (unsigned char)((int)((struct skb_shared_info *)tmp_3)->nr_frags - 1);
    }
    else {
      unsigned int tmp_5;
      {
        unsigned int tmp_4;
        
#line 2534 
        unsigned int _min1_0 = length;
        
#line 2534 
        unsigned int _min2_0 = 4096U;
        
#line 2534 
        if (_min1_0 < _min2_0) 
#line 2534 
                               tmp_4 = _min1_0; else 
#line 2534 
                                                     tmp_4 = _min2_0;
        
#line 2534 
        tmp_5 = tmp_4;
      }
      
#line 2534 
      size = tmp_5;
      
#line 2536 
      skb_frag_size_set(frag,size);
      
#line 2537 
      skb->data_len += size;
      
#line 2538 
      skb->truesize += 4096U;
      
#line 2539 
      skb->len += size;
      
#line 2540 
      length -= size;
    }
  }
  
#line 2526 
  i += 1;
  ldv_56140: 
#line 2527 
  ;
  
#line 2526 
  if (i < num_frags) 
#line 2528 
                     goto ldv_56139; else 
#line 2531 
                                          goto ldv_56141;
  ldv_56141: 
#line 2532 
  ;
  
#line 2533 
  return;
}


#line 2546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static struct sk_buff *receive_new(struct sky2_port *sky2, struct rx_ring_info *re, unsigned int length)
{
  struct sk_buff *__retres;
  struct sk_buff *skb;
  struct rx_ring_info nre;
  int tmp;
  unsigned char *tmp_0;
  
#line 2552 
  unsigned int hdr_space = (unsigned int)sky2->rx_data_size;
  
#line 2554 
  nre.skb = sky2_rx_alloc(sky2,32U);
  
#line 2555 
  if ((long)(nre.skb == (struct sk_buff *)0) != 0L) 
#line 2556 
                                                    goto nobuf; else ;
  
#line 2558 
  tmp = sky2_rx_map_skb((sky2->hw)->pdev,& nre,hdr_space);
  
#line 2558 
  if (tmp != 0) 
#line 2559 
                goto nomap; else ;
  
#line 2561 
  skb = re->skb;
  
#line 2562 
  sky2_rx_unmap_skb((sky2->hw)->pdev,re);
  
#line 2563 
  __builtin_prefetch((void const *)skb->data);
  
#line 2564 
  *re = nre;
  
#line 2566 
  tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2566 
  ;
  
#line 2566 
  if ((unsigned int)((struct skb_shared_info *)tmp_0)->nr_frags != 0U) 
    
#line 2567 
    skb_put_frags(skb,hdr_space,length); else 
#line 2569 
                                              skb_put(skb,length);
  
#line 2570 
  __retres = skb;
  
#line 2570 
  goto return_label;
  nomap: 
#line 2572 
  ;
  
#line 2573 
  consume_skb(nre.skb);
  nobuf: 
#line 2574 
  ;
  
#line 2575 
  __retres = (struct sk_buff *)0;
  return_label: 
#line 2575 
                return __retres;
}


#line 2582  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static struct sk_buff *sky2_receive(struct net_device *dev, u16 length, u32 status)
{
  struct sk_buff *__retres;
  bool tmp_0;
  int tmp_1;
  
#line 2585 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 2586 
  struct rx_ring_info *re = sky2->rx_ring + (int)sky2->rx_next;
  
#line 2587 
  struct sk_buff *skb = (struct sk_buff *)0;
  
#line 2588 
  u16 count = (unsigned short)((unsigned int)((unsigned short)(status >> 16)) & 32767U);
  
#line 2590 
  if ((sky2->msg_enable & 2048U) != 0U) 
#line 2590 
                                        netdev_printk("\001",(struct net_device const *)dev,"rx slot %u status 0x%x len %d\n",(int)sky2->rx_next,status,(int)length); else ;
  
#line 2594 
  sky2->rx_next = (unsigned short)(((int)sky2->rx_next + 1) % (int)sky2->rx_pending);
  
#line 2595 
  __builtin_prefetch((void const *)(sky2->rx_ring + (int)sky2->rx_next));
  
#line 2597 
  if (((int)(re->skb)->vlan_tci & 4096) != 0) 
#line 2598 
                                              count = (unsigned short)((unsigned int)count + 65532U); else ;
  
#line 2604 
  if (((unsigned int)(sky2->hw)->chip_id == 184U && (unsigned int)(sky2->hw)->chip_rev == 0U) && (int)length != (int)count) 
    
#line 2607 
    goto okay; else ;
  
#line 2609 
  if ((status & 6267U) != 0U) 
#line 2610 
                              goto error; else ;
  
#line 2612 
  if ((status & 256U) == 0U) 
#line 2613 
                             goto resubmit; else ;
  
#line 2616 
  if ((int)length != (int)count) 
#line 2617 
                                 goto error; else ;
  okay: 
#line 2619 
  ;
  
#line 2620 
  tmp_0 = needs_copy((struct rx_ring_info const *)re,(unsigned int)length);
  
#line 2620 
  if ((int)tmp_0 != 0) 
#line 2621 
                       skb = receive_copy(sky2,(struct rx_ring_info const *)re,(unsigned int)length); else 
                                                                    
#line 2623 
                                                                    skb = receive_new(sky2,re,(unsigned int)length);
  
#line 2625 
  dev->stats.rx_dropped += (unsigned long)(skb == (struct sk_buff *)0);
  resubmit: 
#line 2627 
  ;
  
#line 2628 
  sky2_rx_submit(sky2,(struct rx_ring_info const *)re);
  
#line 2630 
  __retres = skb;
  
#line 2630 
  goto return_label;
  error: 
#line 2632 
  ;
  
#line 2633 
  dev->stats.rx_errors += 1UL;
  
#line 2635 
  tmp_1 = net_ratelimit();
  
#line 2635 
  if (tmp_1 != 0) {
    
#line 2636 
    if ((sky2->msg_enable & 64U) != 0U) 
#line 2636 
                                        netdev_info((struct net_device const *)dev,"rx error, status 0x%x length %d\n",status,(int)length); else ;
  }
  else ;
  
#line 2639 
  goto resubmit;
  return_label: 
#line 2639 
                return __retres;
}


#line 2643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
__inline static void sky2_tx_done(struct net_device *dev, u16 last)
{
  bool tmp_1;
  
#line 2645 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 2647 
  tmp_1 = netif_running((struct net_device const *)dev);
  
#line 2647 
  if ((int)tmp_1 != 0) {
    int tmp_0;
    
#line 2648 
    sky2_tx_complete(sky2,(unsigned short)((int)last));
    
#line 2651 
    tmp_0 = tx_avail((struct sky2_port const *)sky2);
    
#line 2651 
    if ((unsigned int)tmp_0 > 42U) 
#line 2652 
                                   netif_wake_queue(dev); else ;
  }
  else ;
  
#line 2654 
  return;
}


#line 2656  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
__inline static void sky2_skb_rx(struct sky2_port const *sky2, struct sk_buff *skb)
{
  
#line 2659 
  if ((unsigned int)*((unsigned char *)skb + 145UL) == 0U) 
#line 2660 
                                                           netif_receive_skb(skb); else 
                                                                    
#line 2662 
                                                                    napi_gro_receive(& (sky2->hw)->napi,skb);
  
#line 2663 
  return;
}


#line 2665  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
__inline static void sky2_rx_done(struct sky2_hw *hw, unsigned int port, unsigned int packets, unsigned int bytes)
{
  void *tmp_0;
  
#line 2668 
  struct net_device *dev = hw->dev[port];
  
#line 2669 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 2671 
  if (packets == 0U) 
#line 2672 
                     goto return_label; else ;
  
#line 2674 
  u64_stats_init(& sky2->rx_stats.syncp);
  
#line 2675 
  sky2->rx_stats.packets += (unsigned long long)packets;
  
#line 2676 
  sky2->rx_stats.bytes += (unsigned long long)bytes;
  
#line 2677 
  u64_stats_init(& sky2->rx_stats.syncp);
  
#line 2679 
  dev->last_rx = jiffies;
  
#line 2680 
  ;
  
#line 2680 
  tmp_0 = netdev_priv((struct net_device const *)dev);
  
#line 2680 
  sky2_rx_update((struct sky2_port *)tmp_0,rxqaddr[port]);
  return_label: 
#line 2681 
                return;
}


#line 2683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_rx_checksum(struct sky2_port *sky2, u32 status)
{
  
#line 2686 
  if ((long)(((sky2->hw)->flags & 32UL) != 0UL) != 0L) {
    
#line 2688 
    ldv_inline_asm();
    
#line 2686 
    ;
  }
  else ;
  
#line 2693 
  if ((long)((int)((unsigned short)(status >> 16)) == (int)((unsigned short)status)) != 0L) {
    
#line 2694 
    struct sk_buff *skb = (sky2->rx_ring + (int)sky2->rx_next)->skb;
    
#line 2695 
    skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))2U;
    
#line 2696 
    skb->__anonCompField_sk_buff_81.csum = (unsigned int)((unsigned short)status);
  }
  else {
    
#line 2698 
    dev_notice((struct device const *)(& ((sky2->hw)->pdev)->dev),"%s: receive checksum problem (status = %#x)\n",(char *)(& (sky2->netdev)->name),status);
    
#line 2706 
    (sky2->netdev)->features &= 18446744056529682431ULL;
    
#line 2707 
    sky2_write32((struct sky2_hw const *)sky2->hw,rxqaddr[sky2->port] + 1076U,4096U);
  }
  
#line 2709 
  return;
}


#line 2712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_rx_tag(struct sky2_port *sky2, u16 length)
{
  struct sk_buff *skb;
  int tmp_0;
  
#line 2716 
  skb = (sky2->rx_ring + (int)sky2->rx_next)->skb;
  
#line 2717 
  if (0 != 0) 
#line 2717 
              tmp_0 = (int)((unsigned short)(((int)length << 8) | ((int)length >> 8)));
  else {
    __u16 tmp;
    
#line 2717 
    tmp = __fswab16((unsigned short)((int)length));
    
#line 2717 
    tmp_0 = (int)tmp;
  }
  
#line 2717 
  ;
  
#line 2717 
  __vlan_hwaccel_put_tag(skb,(unsigned short)129,(unsigned short)tmp_0);
  
#line 2718 
  return;
}


#line 2720  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_rx_hash(struct sky2_port *sky2, u32 status)
{
  struct sk_buff *skb;
  
#line 2724 
  skb = (sky2->rx_ring + (int)sky2->rx_next)->skb;
  
#line 2725 
  skb_set_hash(skb,status,(enum pkt_hash_types)PKT_HASH_TYPE_L3);
  
#line 2726 
  return;
}


#line 2729  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_status_intr(struct sky2_hw *hw, int to_do, u16 idx)
{
  int __retres;
  
#line 2731 
  int work_done = 0;
  
#line 2732 
  unsigned int total_bytes[2U] = {0U};
  
#line 2733 
  unsigned int total_packets[2U] = {0U};
  
#line 2735 
  if (to_do <= 0) {
    
#line 2736 
    __retres = work_done;
    
#line 2736 
    goto return_label;
  }
  else ;
  
#line 2737 
  ldv_inline_asm();
  ldv_56222: 
#line 2738 
  ;
  {
    struct sky2_port *sky2;
    unsigned int port;
    struct net_device *dev;
    struct sk_buff *skb;
    u32 status;
    u16 length;
    
#line 2741 
    struct sky2_status_le *le = hw->st_le + hw->st_idx;
    
#line 2747 
    u8 opcode = le->opcode;
    
#line 2749 
    if ((int)opcode >= 0) 
#line 2750 
                          goto ldv_56212; else ;
    
#line 2752 
    hw->st_idx = (hw->st_idx + 1U) & (hw->st_size + 4294967295U);
    
#line 2754 
    port = (unsigned int)le->css & 1U;
    
#line 2755 
    dev = hw->dev[port];
    
#line 2756 
    sky2 = (struct sky2_port *)netdev_priv((struct net_device const *)dev);
    
#line 2757 
    length = le->length;
    
#line 2758 
    status = le->status;
    
#line 2760 
    le->opcode = (unsigned char)0U;
    
#line 2761 
    switch ((int)opcode & -129) {
      int tmp_0;
      case 96: 
#line 2762 
      ;
      
#line 2763 
      total_packets[port] += 1U;
      
#line 2764 
      total_bytes[port] += (unsigned int)length;
      
#line 2766 
      skb = sky2_receive(dev,(unsigned short)((int)length),status);
      
#line 2767 
      if (skb == (struct sk_buff *)0) 
#line 2768 
                                      goto ldv_56214; else ;
      
#line 2771 
      if ((hw->flags & 32UL) != 0UL) 
        
#line 2772 
        if (((dev->features & 17179869184ULL) != 0ULL && ((int)le->css & 10) != 0) && (int)le->css < 0) 
          
#line 2775 
          skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))1U; else 
                                                                    
#line 2777 
                                                                    skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))0U;
      else ;
      
#line 2780 
      skb->protocol = eth_type_trans(skb,dev);
      
#line 2781 
      sky2_skb_rx((struct sky2_port const *)sky2,skb);
      
#line 2784 
      work_done += 1;
      
#line 2784 
      ;
      
#line 2784 
      if (work_done >= to_do) 
#line 2785 
                              goto exit_loop; else ;
      
#line 2786 
      goto ldv_56214;
      case 98: 
#line 2788 
      ;
      
#line 2789 
      sky2_rx_tag(sky2,(unsigned short)((int)length));
      
#line 2790 
      goto ldv_56214;
      case 102: 
#line 2792 
      ;
      
#line 2793 
      sky2_rx_tag(sky2,(unsigned short)((int)length));
      case 100: 
#line 2795 
      ;
      
#line 2796 
      if ((long)((dev->features & 17179869184ULL) != 0ULL) != 0L) 
#line 2797 
                                                                  sky2_rx_checksum(sky2,status); else ;
      
#line 2798 
      goto ldv_56214;
      case 101: 
#line 2800 
      ;
      
#line 2801 
      sky2_rx_hash(sky2,status);
      
#line 2802 
      goto ldv_56214;
      case 104: 
#line 2804 
      ;
      
#line 2806 
      sky2_tx_done(hw->dev[0],(unsigned short)((int)((unsigned short)status) & 4095));
      
#line 2807 
      if (hw->dev[1] != (struct net_device *)0) 
#line 2808 
                                                sky2_tx_done(hw->dev[1],(unsigned short)((int)((unsigned int)((unsigned short)(status >> 24)) | ((unsigned int)((int)length << 8U) & 3840U)))); else ;
      
#line 2811 
      goto ldv_56214;
      default: 
#line 2813 
      ;
      
#line 2814 
      tmp_0 = net_ratelimit();
      
#line 2814 
      if (tmp_0 != 0) 
#line 2815 
                      printk("\001",(int)opcode); else ;
    }
    ldv_56214: 
#line 2817 
    ;
  }
  
#line 2817 
  if (hw->st_idx != (unsigned int)idx) 
#line 2819 
                                       goto ldv_56222; else 
#line 2822 
                                                            goto ldv_56212;
  ldv_56212: 
#line 2823 
  ;
  
#line 2820 
  sky2_write32((struct sky2_hw const *)hw,3712U,16U);
  exit_loop: 
#line 2822 
  ;
  
#line 2823 
  sky2_rx_done(hw,0U,total_packets[0],total_bytes[0]);
  
#line 2824 
  sky2_rx_done(hw,1U,total_packets[1],total_bytes[1]);
  
#line 2826 
  __retres = work_done;
  return_label: 
#line 2826 
                return __retres;
}


#line 2829  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_hw_error(struct sky2_hw *hw, unsigned int port, u32 status)
{
  int tmp;
  
#line 2831 
  struct net_device *dev = hw->dev[port];
  
#line 2833 
  tmp = net_ratelimit();
  
#line 2833 
  if (tmp != 0) 
#line 2834 
                netdev_info((struct net_device const *)dev,"hw error interrupt status 0x%x\n",status); else ;
  
#line 2836 
  if ((status & 32U) != 0U) {
    int tmp_0;
    
#line 2837 
    tmp_0 = net_ratelimit();
    
#line 2837 
    if (tmp_0 != 0) 
#line 2838 
                    netdev_err((struct net_device const *)dev,"ram data read parity error\n"); else ;
    
#line 2840 
    sky2_write16((struct sky2_hw const *)hw,(port << 6) | 416U,(unsigned short)512);
  }
  else ;
  
#line 2843 
  if ((status & 16U) != 0U) {
    int tmp_1;
    
#line 2844 
    tmp_1 = net_ratelimit();
    
#line 2844 
    if (tmp_1 != 0) 
#line 2845 
                    netdev_err((struct net_device const *)dev,"ram data write parity error\n"); else ;
    
#line 2847 
    sky2_write16((struct sky2_hw const *)hw,(port << 6) | 416U,(unsigned short)256);
  }
  else ;
  
#line 2850 
  if ((status & 8U) != 0U) {
    int tmp_2;
    
#line 2851 
    tmp_2 = net_ratelimit();
    
#line 2851 
    if (tmp_2 != 0) 
#line 2852 
                    netdev_err((struct net_device const *)dev,"MAC parity error\n"); else ;
    
#line 2853 
    sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3400U,(unsigned char)16);
  }
  else ;
  
#line 2856 
  if ((status & 4U) != 0U) {
    int tmp_3;
    
#line 2857 
    tmp_3 = net_ratelimit();
    
#line 2857 
    if (tmp_3 != 0) 
#line 2858 
                    netdev_err((struct net_device const *)dev,"RX parity error\n"); else ;
    
#line 2859 
    sky2_write32((struct sky2_hw const *)hw,rxqaddr[port] + 1076U,2048U);
  }
  else ;
  
#line 2862 
  if ((status & 1U) != 0U) {
    int tmp_4;
    
#line 2863 
    tmp_4 = net_ratelimit();
    
#line 2863 
    if (tmp_4 != 0) 
#line 2864 
                    netdev_err((struct net_device const *)dev,"TCP segmentation error\n"); else ;
    
#line 2865 
    sky2_write32((struct sky2_hw const *)hw,txqaddr[port] + 1076U,2048U);
  }
  else ;
  
#line 2867 
  return;
}


#line 2869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_hw_intr(struct sky2_hw *hw)
{
  
#line 2871 
  struct pci_dev *pdev = hw->pdev;
  
#line 2872 
  u32 status = sky2_read32((struct sky2_hw const *)hw,16U);
  
#line 2873 
  u32 hwmsk = sky2_read32((struct sky2_hw const *)hw,20U);
  
#line 2875 
  status &= hwmsk;
  
#line 2877 
  if ((status & 536870912U) != 0U) 
#line 2878 
                                   sky2_write8((struct sky2_hw const *)hw,3608U,(unsigned char)1); else ;
  
#line 2880 
  if ((status & 201326592U) != 0U) {
    u16 pci_err;
    int tmp_1;
    
#line 2883 
    sky2_write8((struct sky2_hw const *)hw,344U,(unsigned char)2);
    
#line 2884 
    pci_err = sky2_pci_read16((struct sky2_hw const *)hw,6U);
    
#line 2885 
    tmp_1 = net_ratelimit();
    
#line 2885 
    if (tmp_1 != 0) 
#line 2886 
                    dev_err((struct device const *)(& pdev->dev),"PCI hardware error (0x%x)\n",(int)pci_err); else ;
    
#line 2889 
    sky2_pci_write16(hw,6U,(unsigned short)((int)((unsigned int)pci_err | 61696U)));
    
#line 2891 
    sky2_write8((struct sky2_hw const *)hw,344U,(unsigned char)1);
  }
  else ;
  
#line 2894 
  if ((status & 33554432U) != 0U) {
    u32 err;
    int tmp_2;
    
#line 2898 
    sky2_write8((struct sky2_hw const *)hw,344U,(unsigned char)2);
    
#line 2899 
    err = sky2_read32((struct sky2_hw const *)hw,7428U);
    
#line 2900 
    sky2_write32((struct sky2_hw const *)hw,7428U,4294967295U);
    
#line 2902 
    tmp_2 = net_ratelimit();
    
#line 2902 
    if (tmp_2 != 0) 
#line 2903 
                    dev_err((struct device const *)(& pdev->dev),"PCI Express error (0x%x)\n",err); else ;
    
#line 2905 
    sky2_read32((struct sky2_hw const *)hw,7428U);
    
#line 2906 
    sky2_write8((struct sky2_hw const *)hw,344U,(unsigned char)1);
  }
  else ;
  
#line 2909 
  if ((status & 63U) != 0U) 
#line 2910 
                            sky2_hw_error(hw,0U,status); else ;
  
#line 2911 
  status >>= 8;
  
#line 2912 
  if ((status & 63U) != 0U) 
#line 2913 
                            sky2_hw_error(hw,1U,status); else ;
  
#line 2914 
  return;
}


#line 2916  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_mac_intr(struct sky2_hw *hw, unsigned int port)
{
  
#line 2918 
  struct net_device *dev = hw->dev[port];
  
#line 2919 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 2920 
  u8 status = sky2_read8((struct sky2_hw const *)hw,(port << 7) + 3848U);
  
#line 2922 
  if ((sky2->msg_enable & 512U) != 0U) 
#line 2922 
                                       netdev_info((struct net_device const *)dev,"mac interrupt status 0x%x\n",(int)status); else ;
  
#line 2924 
  if (((int)status & 16) != 0) 
#line 2925 
                               gma_read16((struct sky2_hw const *)hw,port,72U); else ;
  
#line 2927 
  if (((int)status & 32) != 0) 
#line 2928 
                               gma_read16((struct sky2_hw const *)hw,port,68U); else ;
  
#line 2930 
  if (((int)status & 2) != 0) {
    
#line 2931 
    dev->stats.rx_fifo_errors += 1UL;
    
#line 2932 
    sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3144U,(unsigned char)32);
  }
  else ;
  
#line 2935 
  if (((int)status & 8) != 0) {
    
#line 2936 
    dev->stats.tx_fifo_errors += 1UL;
    
#line 2937 
    sky2_write8((struct sky2_hw const *)hw,(port << 7) + 3400U,(unsigned char)64);
  }
  else ;
  
#line 2939 
  return;
}


#line 2942  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_le_error(struct sky2_hw *hw, unsigned int port, u16 q)
{
  u16 tmp_0;
  
#line 2944 
  struct net_device *dev = hw->dev[port];
  
#line 2945 
  u16 idx = sky2_read16((struct sky2_hw const *)hw,(unsigned int)((int)q + 1120));
  
#line 2949 
  tmp_0 = sky2_read16((struct sky2_hw const *)hw,(unsigned int)((int)q + 1124));
  
#line 2947 
  ;
  
#line 2947 
  ;
  
#line 2947 
  ;
  
#line 2947 
  ;
  
#line 2947 
  dev_err((struct device const *)(& (hw->pdev)->dev),"%s: descriptor error q=%#x get=%u put=%u\n",(char *)(& dev->name),(unsigned int)q,(unsigned int)idx,(unsigned int)tmp_0);
  
#line 2951 
  sky2_write32((struct sky2_hw const *)hw,(unsigned int)((int)q + 1076),1024U);
  
#line 2952 
  return;
}


#line 2954  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_rx_hung(struct net_device *dev)
{
  int __retres;
  
#line 2956 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 2957 
  struct sky2_hw *hw = sky2->hw;
  
#line 2958 
  unsigned int port = sky2->port;
  
#line 2959 
  unsigned int rxq = rxqaddr[port];
  
#line 2960 
  u32 mac_rp = sky2_read32((struct sky2_hw const *)hw,(port << 7) + 3184U);
  
#line 2961 
  u8 mac_lev = sky2_read8((struct sky2_hw const *)hw,(port << 7) + 3192U);
  
#line 2962 
  u8 fifo_rp = sky2_read8((struct sky2_hw const *)hw,rxq + 1096U);
  
#line 2963 
  u8 fifo_lev = sky2_read8((struct sky2_hw const *)hw,rxq + 1098U);
  
#line 2966 
  if (sky2->check.last == dev->last_rx && (((sky2->check.mac_rp == mac_rp && (unsigned int)mac_lev != 0U) && (int)sky2->check.mac_lev <= (int)mac_lev) || (((int)sky2->check.fifo_rp == (int)fifo_rp && (unsigned int)fifo_lev != 0U) && (int)sky2->check.fifo_lev <= (int)fifo_lev))) {
    u8 tmp_4;
    
#line 2975 
    tmp_4 = sky2_read8((struct sky2_hw const *)hw,rxq + 1100U);
    
#line 2972 
    ;
    
#line 2972 
    ;
    
#line 2972 
    ;
    
#line 2972 
    ;
    
#line 2972 
    ;
    
#line 2972 
    netdev_printk("\001",(struct net_device const *)dev,"hung mac %d:%d fifo %d (%d:%d)\n",(int)mac_lev,mac_rp,(int)fifo_lev,(int)fifo_rp,(int)tmp_4);
    
#line 2976 
    __retres = 1;
    
#line 2976 
    goto return_label;
  }
  else {
    
#line 2978 
    sky2->check.last = dev->last_rx;
    
#line 2979 
    sky2->check.mac_rp = mac_rp;
    
#line 2980 
    sky2->check.mac_lev = mac_lev;
    
#line 2981 
    sky2->check.fifo_rp = fifo_rp;
    
#line 2982 
    sky2->check.fifo_lev = fifo_lev;
    
#line 2983 
    __retres = 0;
    
#line 2983 
    goto return_label;
  }
  return_label: 
#line 2966 
                return __retres;
}


#line 2987  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_watchdog(unsigned long arg)
{
  u32 tmp_2;
  unsigned long tmp_3;
  
#line 2989 
  struct sky2_hw *hw = (struct sky2_hw *)arg;
  
#line 2992 
  tmp_2 = sky2_read32((struct sky2_hw const *)hw,8U);
  
#line 2992 
  if (tmp_2 != 0U) 
#line 2993 
                   napi_schedule(& hw->napi);
  else {
    int i;
    
#line 2995 
    int active = 0;
    
#line 2997 
    i = 0;
    
#line 2997 
    goto ldv_56271;
    ldv_56270: 
#line 2998 
    ;
    {
      int tmp_0;
      bool tmp;
      
#line 2998 
      struct net_device *dev = hw->dev[i];
      
#line 2999 
      tmp = netif_running((struct net_device const *)dev);
      
#line 2999 
      if (tmp) 
#line 2999 
               tmp_0 = 0; else 
#line 2999 
                               tmp_0 = 1;
      
#line 2999 
      if (tmp_0) 
#line 3000 
                 goto ldv_56269; else ;
      
#line 3001 
      active += 1;
      
#line 3004 
      if ((hw->flags & 16UL) != 0UL) {
        int tmp_1;
        
#line 3004 
        tmp_1 = sky2_rx_hung(dev);
        
#line 3004 
        if (tmp_1 != 0) {
          
#line 3006 
          netdev_info((struct net_device const *)dev,"receiver hang detected\n");
          
#line 3007 
          ldv_schedule_work_91(& hw->restart_work);
          
#line 3008 
          goto return_label;
        }
        else ;
      }
      else ;
    }
    ldv_56269: 
#line 3011 
    ;
    
#line 2997 
    i += 1;
    ldv_56271: 
#line 2998 
    ;
    
#line 2997 
    if ((int)hw->ports > i) 
#line 2999 
                            goto ldv_56270; else 
#line 3002 
                                                 goto ldv_56272;
    ldv_56272: 
#line 3003 
    ;
    
#line 3012 
    if (active == 0) 
#line 3013 
                     goto return_label; else ;
  }
  
#line 3016 
  tmp_3 = round_jiffies(jiffies + 250UL);
  
#line 3016 
  ;
  
#line 3016 
  ldv_mod_timer_92(& hw->watchdog_timer,tmp_3);
  return_label: 
#line 3017 
                return;
}


#line 3020  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_err_intr(struct sky2_hw *hw, u32 status)
{
  int tmp;
  
#line 3022 
  tmp = net_ratelimit();
  
#line 3022 
  if (tmp != 0) 
#line 3023 
                dev_warn((struct device const *)(& (hw->pdev)->dev),"error interrupt status=%#x\n",status); else ;
  
#line 3025 
  if (status < (u32)0) 
#line 3026 
                       sky2_hw_intr(hw); else ;
  
#line 3028 
  if ((status & 8U) != 0U) 
#line 3029 
                           sky2_mac_intr(hw,0U); else ;
  
#line 3031 
  if ((status & 2048U) != 0U) 
#line 3032 
                              sky2_mac_intr(hw,1U); else ;
  
#line 3034 
  if ((status & 4U) != 0U) 
#line 3035 
                           sky2_le_error(hw,0U,(unsigned short)0); else ;
  
#line 3037 
  if ((status & 1024U) != 0U) 
#line 3038 
                              sky2_le_error(hw,1U,(unsigned short)128); else ;
  
#line 3040 
  if ((status & 1U) != 0U) 
#line 3041 
                           sky2_le_error(hw,0U,(unsigned short)640); else ;
  
#line 3043 
  if ((status & 256U) != 0U) 
#line 3044 
                             sky2_le_error(hw,1U,(unsigned short)896); else ;
  
#line 3045 
  return;
}


#line 3047  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_poll(struct napi_struct *napi, int work_limit)
{
  struct sky2_hw *tmp;
  u16 idx;
  int tmp_1;
  {
    
#line 3049 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 3049 
    tmp = (struct sky2_hw *)__mptr + 18446744073709551600U;
  }
  
#line 3049 
  struct sky2_hw *hw = tmp;
  
#line 3050 
  u32 status = sky2_read32((struct sky2_hw const *)hw,36U);
  
#line 3051 
  int work_done = 0;
  
#line 3054 
  if ((long)((status & 2147486989U) != 0U) != 0L) 
#line 3055 
                                                  sky2_err_intr(hw,status); else ;
  
#line 3057 
  if ((status & 16U) != 0U) 
#line 3058 
                            sky2_phy_intr(hw,0U); else ;
  
#line 3060 
  if ((status & 4096U) != 0U) 
#line 3061 
                              sky2_phy_intr(hw,1U); else ;
  
#line 3063 
  if ((status & 32U) != 0U) 
#line 3064 
                            sky2_qlink_intr(hw); else ;
  
#line 3066 
  goto ldv_56289;
  ldv_56288: 
#line 3067 
  ;
  
#line 3067 
  tmp_1 = sky2_status_intr(hw,work_limit - work_done,(unsigned short)((int)idx));
  
#line 3067 
  work_done = tmp_1 + work_done;
  
#line 3069 
  if (work_done >= work_limit) 
#line 3070 
                               goto done; else ;
  ldv_56289: 
#line 3071 
  ;
  
#line 3066 
  idx = sky2_read16((struct sky2_hw const *)hw,3740U);
  
#line 3066 
  ;
  
#line 3066 
  if ((unsigned int)idx != hw->st_idx) 
#line 3068 
                                       goto ldv_56288; else 
#line 3071 
                                                            goto ldv_56290;
  ldv_56290: 
#line 3072 
  ;
  
#line 3073 
  napi_complete(napi);
  
#line 3074 
  sky2_read32((struct sky2_hw const *)hw,40U);
  done: 
#line 3075 
  ;
  
#line 3077 
  return work_done;
}


#line 3080  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static irqreturn_t sky2_intr(int irq, void *dev_id)
{
  irqreturn_t __retres;
  u32 status;
  
#line 3082 
  struct sky2_hw *hw = (struct sky2_hw *)dev_id;
  
#line 3086 
  status = sky2_read32((struct sky2_hw const *)hw,28U);
  
#line 3087 
  if (status + 4294967295U > 4294967293U) {
    
#line 3088 
    sky2_write32((struct sky2_hw const *)hw,44U,2U);
    
#line 3089 
    __retres = IRQ_NONE;
    
#line 3089 
    goto return_label;
  }
  else ;
  
#line 3092 
  __builtin_prefetch((void const *)(hw->st_le + hw->st_idx));
  
#line 3094 
  napi_schedule(& hw->napi);
  
#line 3096 
  __retres = IRQ_HANDLED;
  return_label: 
#line 3096 
                return __retres;
}


#line 3100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_netpoll(struct net_device *dev)
{
  
#line 3102 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 3104 
  napi_schedule(& (sky2->hw)->napi);
  
#line 3105 
  return;
}


#line 3109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static u32 sky2_mhz(struct sky2_hw const *hw)
{
  u32 __retres;
  
#line 3111 
  switch ((int)hw->chip_id) {
    case 182: 
#line 3112 
    ;
    case 180: 
#line 3113 
    ;
    case 181: 
#line 3114 
    ;
    case 185: 
#line 3115 
    ;
    case 186: 
#line 3116 
    ;
    case 188: 
#line 3117 
    ;
    case 189: 
#line 3118 
    ;
    case 190: 
#line 3119 
    ;
    
#line 3120 
    __retres = 125U;
    
#line 3120 
    goto return_label;
    case 183: 
#line 3122 
    ;
    
#line 3123 
    __retres = 100U;
    
#line 3123 
    goto return_label;
    case 184: 
#line 3125 
    ;
    
#line 3126 
    __retres = 50U;
    
#line 3126 
    goto return_label;
    case 179: 
#line 3128 
    ;
    
#line 3129 
    __retres = 156U;
    
#line 3129 
    goto return_label;
    default: 
#line 3131 
    ;
    
#line 3132 
    ldv_inline_asm();
    
#line 3132 
    ;
  }
  
#line 3134 
  ;
  
#line 3134 
  __retres = 0U;
  return_label: 
#line 3134 
                return __retres;
}


#line 3136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
__inline static u32 sky2_us2clk(struct sky2_hw const *hw, u32 us)
{
  u32 __retres;
  u32 tmp;
  
#line 3138 
  tmp = sky2_mhz(hw);
  
#line 3138 
  ;
  
#line 3138 
  __retres = tmp * us;
  
#line 3138 
  return __retres;
}


#line 3141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
__inline static u32 sky2_clk2us(struct sky2_hw const *hw, u32 clk)
{
  u32 __retres;
  u32 tmp;
  
#line 3143 
  tmp = sky2_mhz(hw);
  
#line 3143 
  ;
  
#line 3143 
  __retres = clk / tmp;
  
#line 3143 
  return __retres;
}


#line 3147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_init(struct sky2_hw *hw)
{
  int __retres;
  u8 t8;
  u8 tmp;
  u8 tmp_1;
  
#line 3152 
  sky2_pci_write32(hw,128U,0U);
  
#line 3154 
  sky2_write8((struct sky2_hw const *)hw,4U,(unsigned char)2);
  
#line 3156 
  hw->chip_id = sky2_read8((struct sky2_hw const *)hw,283U);
  
#line 3157 
  tmp = sky2_read8((struct sky2_hw const *)hw,282U);
  
#line 3157 
  hw->chip_rev = (unsigned char)((unsigned int)((unsigned char)((int)tmp >> 4)) & 15U);
  
#line 3159 
  switch ((int)hw->chip_id) {
    case 179: 
#line 3160 
    ;
    
#line 3161 
    hw->flags = 12UL;
    
#line 3162 
    if ((unsigned int)hw->chip_rev <= 1U) 
#line 3163 
                                          hw->flags |= 256UL; else ;
    
#line 3164 
    goto ldv_56329;
    case 180: 
#line 3166 
    ;
    
#line 3167 
    hw->flags = 140UL;
    
#line 3170 
    goto ldv_56329;
    case 181: 
#line 3172 
    ;
    
#line 3173 
    hw->flags = 1196UL;
    
#line 3180 
    if ((unsigned int)hw->chip_rev != 2U) 
#line 3181 
                                          hw->flags |= 64UL; else ;
    
#line 3182 
    goto ldv_56329;
    case 182: 
#line 3184 
    ;
    
#line 3186 
    if ((unsigned int)hw->chip_rev == 0U) {
      
#line 3187 
      dev_err((struct device const *)(& (hw->pdev)->dev),"unsupported revision Yukon-EC rev A1\n");
      
#line 3188 
      __retres = -95;
      
#line 3188 
      goto return_label;
    }
    else ;
    
#line 3190 
    hw->flags = 260UL;
    
#line 3191 
    goto ldv_56329;
    case 183: 
#line 3193 
    ;
    
#line 3194 
    hw->flags = 256UL;
    
#line 3195 
    goto ldv_56329;
    case 184: 
#line 3197 
    ;
    
#line 3198 
    hw->flags = 232UL;
    
#line 3204 
    if ((unsigned int)hw->chip_rev == 0U) 
#line 3205 
                                          hw->flags |= 1536UL; else ;
    
#line 3206 
    goto ldv_56329;
    case 185: 
#line 3208 
    ;
    
#line 3209 
    hw->flags = 236UL;
    
#line 3215 
    if ((unsigned int)hw->chip_rev == 0U) 
#line 3216 
                                          hw->flags |= 1024UL; else ;
    
#line 3217 
    goto ldv_56329;
    case 186: 
#line 3219 
    ;
    
#line 3220 
    hw->flags = 132UL;
    
#line 3222 
    goto ldv_56329;
    case 188: 
#line 3224 
    ;
    case 189: 
#line 3225 
    ;
    case 190: 
#line 3226 
    ;
    
#line 3227 
    hw->flags = 164UL;
    
#line 3230 
    goto ldv_56329;
    default: 
#line 3232 
    ;
    
#line 3233 
    dev_err((struct device const *)(& (hw->pdev)->dev),"unsupported chip type 0x%x\n",(int)hw->chip_id);
    
#line 3235 
    __retres = -95;
    
#line 3235 
    goto return_label;
  }
  ldv_56329: 
#line 3238 
  ;
  
#line 3238 
  hw->pmd_type = sky2_read8((struct sky2_hw const *)hw,281U);
  
#line 3239 
  if (((unsigned int)hw->pmd_type == 76U || (unsigned int)hw->pmd_type == 83U) || (unsigned int)hw->pmd_type == 80U) 
    
#line 3240 
    hw->flags |= 2UL; else ;
  
#line 3242 
  hw->ports = (unsigned char)1U;
  
#line 3243 
  t8 = sky2_read8((struct sky2_hw const *)hw,286U);
  
#line 3244 
  if (((int)t8 & 3) == 3) {
    u8 tmp_0;
    
#line 3245 
    tmp_0 = sky2_read8((struct sky2_hw const *)hw,285U);
    
#line 3245 
    if ((int)tmp_0 >= 0) 
#line 3246 
                         hw->ports = (u8)((int)hw->ports + 1); else ;
  }
  else ;
  
#line 3249 
  tmp_1 = sky2_read8((struct sky2_hw const *)hw,284U);
  
#line 3249 
  if ((unsigned int)tmp_1 != 0U) 
#line 3250 
                                 hw->flags |= 16UL; else ;
  
#line 3252 
  __retres = 0;
  return_label: 
#line 3252 
                return __retres;
}


#line 3255  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_reset(struct sky2_hw *hw)
{
  u16 status;
  int i;
  bool tmp_0;
  u32 tmp_1;
  u32 tmp_2;
  u32 tmp_3;
  
#line 3257 
  struct pci_dev *pdev = hw->pdev;
  
#line 3260 
  u32 hwe_mask = 738213695U;
  
#line 3263 
  if ((unsigned int)hw->chip_id == 181U || (unsigned int)hw->chip_id == 185U) {
    
#line 3265 
    sky2_write32((struct sky2_hw const *)hw,3656U,0U);
    
#line 3266 
    status = sky2_read16((struct sky2_hw const *)hw,3688U);
    
#line 3267 
    status = (unsigned short)((unsigned int)status & 64764U);
    
#line 3274 
    status = (unsigned short)((unsigned int)status & 65511U);
    
#line 3275 
    sky2_write16((struct sky2_hw const *)hw,3688U,(unsigned short)((int)status));
    
#line 3276 
    sky2_write32((struct sky2_hw const *)hw,3656U,0U);
  }
  else 
#line 3278 
       sky2_write8((struct sky2_hw const *)hw,3688U,(unsigned char)8);
  
#line 3279 
  sky2_write16((struct sky2_hw const *)hw,4U,(unsigned short)4096);
  
#line 3282 
  sky2_write8((struct sky2_hw const *)hw,4U,(unsigned char)1);
  
#line 3283 
  sky2_write8((struct sky2_hw const *)hw,4U,(unsigned char)2);
  
#line 3286 
  sky2_write8((struct sky2_hw const *)hw,344U,(unsigned char)2);
  
#line 3289 
  status = sky2_pci_read16((struct sky2_hw const *)hw,6U);
  
#line 3290 
  status = (unsigned short)((unsigned int)status | 61696U);
  
#line 3291 
  sky2_pci_write16(hw,6U,(unsigned short)((int)status));
  
#line 3293 
  sky2_write8((struct sky2_hw const *)hw,4U,(unsigned char)8);
  
#line 3295 
  tmp_0 = pci_is_pcie(pdev);
  
#line 3295 
  if ((int)tmp_0 != 0) {
    u32 tmp;
    
#line 3296 
    sky2_write32((struct sky2_hw const *)hw,7428U,4294967295U);
    
#line 3300 
    tmp = sky2_read32((struct sky2_hw const *)hw,16U);
    
#line 3300 
    if ((tmp & 33554432U) != 0U) 
#line 3301 
                                 _dev_info((struct device const *)(& pdev->dev),"ignoring stuck error report bit\n"); else 
                                                                    
#line 3303 
                                                                    hwe_mask |= 33554432U;
  }
  else ;
  
#line 3306 
  sky2_power_on(hw);
  
#line 3307 
  sky2_write8((struct sky2_hw const *)hw,344U,(unsigned char)1);
  
#line 3309 
  i = 0;
  
#line 3309 
  goto ldv_56349;
  ldv_56348: 
#line 3310 
  ;
  
#line 3310 
  sky2_write8((struct sky2_hw const *)hw,(unsigned int)((i << 7) + 3856),(unsigned char)1);
  
#line 3311 
  sky2_write8((struct sky2_hw const *)hw,(unsigned int)((i << 7) + 3856),(unsigned char)2);
  
#line 3313 
  if ((unsigned int)hw->chip_id == 181U || (unsigned int)hw->chip_id == 185U) 
    
#line 3315 
    sky2_write16((struct sky2_hw const *)hw,(unsigned int)((i << 7) + 3840),(unsigned short)10752); else ;
  
#line 3309 
  i += 1;
  ldv_56349: 
#line 3310 
  ;
  
#line 3309 
  if ((int)hw->ports > i) 
#line 3311 
                          goto ldv_56348; else 
#line 3314 
                                               goto ldv_56350;
  ldv_56350: 
#line 3315 
  ;
  
#line 3321 
  if ((unsigned int)hw->chip_id == 185U && (unsigned int)hw->chip_rev > 1U) 
    
#line 3323 
    sky2_pci_write32(hw,128U,131072U); else ;
  
#line 3326 
  if ((unsigned int)hw->chip_id + 68U <= 2U) {
    u16 reg;
    
#line 3331 
    if ((unsigned int)hw->chip_id == 188U && (unsigned int)hw->chip_rev == 0U) {
      
#line 3333 
      sky2_write32((struct sky2_hw const *)hw,368U,8388736U);
      
#line 3336 
      reg = (unsigned short)10U;
      
#line 3339 
      sky2_write32((struct sky2_hw const *)hw,368U,1074266112U);
    }
    else 
#line 3342 
         reg = (unsigned short)3U;
    
#line 3345 
    reg = (unsigned short)((int)reg << 4U);
    
#line 3346 
    reg = (unsigned short)((unsigned int)reg | 1U);
    
#line 3349 
    sky2_write8((struct sky2_hw const *)hw,344U,(unsigned char)2);
    
#line 3350 
    sky2_pci_write16(hw,360U,(unsigned short)((int)reg));
    
#line 3353 
    reg = sky2_pci_read16((struct sky2_hw const *)hw,356U);
    
#line 3354 
    if (((int)reg & 3) != 0) 
#line 3356 
                             sky2_pci_write16(hw,(unsigned int)((int)pdev->pcie_cap + 16),(unsigned short)((int)reg)); else ;
    
#line 3359 
    if ((unsigned int)hw->chip_id == 189U && (unsigned int)hw->chip_rev == 2U) {
      
#line 3362 
      reg = sky2_read16((struct sky2_hw const *)hw,3844U);
      
#line 3363 
      sky2_write16((struct sky2_hw const *)hw,3844U,(unsigned short)((int)((unsigned int)reg | 8192U)));
      
#line 3366 
      reg = sky2_read16((struct sky2_hw const *)hw,7356U);
      
#line 3367 
      sky2_write16((struct sky2_hw const *)hw,7356U,(unsigned short)((int)((unsigned int)reg | 128U)));
    }
    else ;
    
#line 3370 
    sky2_write8((struct sky2_hw const *)hw,344U,(unsigned char)1);
    
#line 3373 
    sky2_write32((struct sky2_hw const *)hw,368U,1074266112U);
  }
  else ;
  
#line 3377 
  sky2_write32((struct sky2_hw const *)hw,360U,1U);
  
#line 3380 
  sky2_write8((struct sky2_hw const *)hw,312U,(unsigned char)2);
  
#line 3381 
  sky2_write8((struct sky2_hw const *)hw,312U,(unsigned char)1);
  
#line 3384 
  sky2_write32((struct sky2_hw const *)hw,3592U,1U);
  
#line 3387 
  sky2_write8((struct sky2_hw const *)hw,3608U,(unsigned char)2);
  
#line 3388 
  sky2_write8((struct sky2_hw const *)hw,3608U,(unsigned char)1);
  
#line 3391 
  i = 0;
  
#line 3391 
  goto ldv_56353;
  ldv_56352: 
#line 3392 
  ;
  
#line 3392 
  sky2_write8((struct sky2_hw const *)hw,(unsigned int)((i << 7) + 528),(unsigned char)2);
  
#line 3391 
  i += 1;
  ldv_56353: 
#line 3392 
  ;
  
#line 3391 
  if ((int)hw->ports > i) 
#line 3393 
                          goto ldv_56352; else 
#line 3396 
                                               goto ldv_56354;
  ldv_56354: 
#line 3397 
  ;
  
#line 3395 
  i = 0;
  
#line 3395 
  goto ldv_56356;
  ldv_56355: 
#line 3396 
  ;
  
#line 3396 
  sky2_write8((struct sky2_hw const *)hw,(unsigned int)((i << 6) | 416),(unsigned char)2);
  
#line 3398 
  sky2_write8((struct sky2_hw const *)hw,(unsigned int)((i << 6) | 400),(unsigned char)36);
  
#line 3399 
  sky2_write8((struct sky2_hw const *)hw,(unsigned int)((i << 6) | 401),(unsigned char)36);
  
#line 3400 
  sky2_write8((struct sky2_hw const *)hw,(unsigned int)((i << 6) | 402),(unsigned char)36);
  
#line 3401 
  sky2_write8((struct sky2_hw const *)hw,(unsigned int)((i << 6) | 403),(unsigned char)36);
  
#line 3402 
  sky2_write8((struct sky2_hw const *)hw,(unsigned int)((i << 6) | 404),(unsigned char)36);
  
#line 3403 
  sky2_write8((struct sky2_hw const *)hw,(unsigned int)((i << 6) | 405),(unsigned char)36);
  
#line 3404 
  sky2_write8((struct sky2_hw const *)hw,(unsigned int)((i << 6) | 406),(unsigned char)36);
  
#line 3405 
  sky2_write8((struct sky2_hw const *)hw,(unsigned int)((i << 6) | 407),(unsigned char)36);
  
#line 3406 
  sky2_write8((struct sky2_hw const *)hw,(unsigned int)((i << 6) | 408),(unsigned char)36);
  
#line 3407 
  sky2_write8((struct sky2_hw const *)hw,(unsigned int)((i << 6) | 409),(unsigned char)36);
  
#line 3408 
  sky2_write8((struct sky2_hw const *)hw,(unsigned int)((i << 6) | 410),(unsigned char)36);
  
#line 3409 
  sky2_write8((struct sky2_hw const *)hw,(unsigned int)((i << 6) | 411),(unsigned char)36);
  
#line 3395 
  i += 1;
  ldv_56356: 
#line 3396 
  ;
  
#line 3395 
  if ((int)hw->ports > i) 
#line 3397 
                          goto ldv_56355; else 
#line 3400 
                                               goto ldv_56357;
  ldv_56357: 
#line 3401 
  ;
  
#line 3412 
  sky2_write32((struct sky2_hw const *)hw,20U,hwe_mask);
  
#line 3414 
  i = 0;
  
#line 3414 
  goto ldv_56359;
  ldv_56358: 
#line 3415 
  ;
  
#line 3415 
  sky2_gmac_reset(hw,(unsigned int)i);
  
#line 3414 
  i += 1;
  ldv_56359: 
#line 3415 
  ;
  
#line 3414 
  if ((int)hw->ports > i) 
#line 3416 
                          goto ldv_56358; else 
#line 3419 
                                               goto ldv_56360;
  ldv_56360: 
#line 3420 
  ;
  
#line 3417 
  memset((void *)hw->st_le,0,(unsigned long)hw->st_size * 8UL);
  
#line 3418 
  hw->st_idx = 0U;
  
#line 3420 
  sky2_write32((struct sky2_hw const *)hw,3712U,1U);
  
#line 3421 
  sky2_write32((struct sky2_hw const *)hw,3712U,2U);
  
#line 3423 
  sky2_write32((struct sky2_hw const *)hw,3720U,(unsigned int)hw->st_dma);
  
#line 3424 
  sky2_write32((struct sky2_hw const *)hw,3724U,(unsigned int)(hw->st_dma >> 32));
  
#line 3427 
  sky2_write16((struct sky2_hw const *)hw,3716U,(unsigned short)((int)((unsigned int)((unsigned short)hw->st_size) + 65535U)));
  
#line 3429 
  sky2_write16((struct sky2_hw const *)hw,3736U,(unsigned short)10);
  
#line 3430 
  sky2_write8((struct sky2_hw const *)hw,3756U,(unsigned char)16);
  
#line 3433 
  if ((unsigned int)hw->chip_id == 179U && (unsigned int)hw->chip_rev == 0U) 
    
#line 3434 
    sky2_write8((struct sky2_hw const *)hw,3757U,(unsigned char)4); else 
                                                                    
#line 3436 
                                                                    sky2_write8((struct sky2_hw const *)hw,3757U,(unsigned char)16);
  
#line 3438 
  tmp_1 = sky2_us2clk((struct sky2_hw const *)hw,1000U);
  
#line 3438 
  ;
  
#line 3438 
  sky2_write32((struct sky2_hw const *)hw,3776U,tmp_1);
  
#line 3439 
  tmp_2 = sky2_us2clk((struct sky2_hw const *)hw,20U);
  
#line 3439 
  ;
  
#line 3439 
  sky2_write32((struct sky2_hw const *)hw,3792U,tmp_2);
  
#line 3440 
  tmp_3 = sky2_us2clk((struct sky2_hw const *)hw,100U);
  
#line 3440 
  ;
  
#line 3440 
  sky2_write32((struct sky2_hw const *)hw,3760U,tmp_3);
  
#line 3443 
  sky2_write32((struct sky2_hw const *)hw,3712U,8U);
  
#line 3445 
  sky2_write8((struct sky2_hw const *)hw,3784U,(unsigned char)4);
  
#line 3446 
  sky2_write8((struct sky2_hw const *)hw,3768U,(unsigned char)4);
  
#line 3447 
  sky2_write8((struct sky2_hw const *)hw,3800U,(unsigned char)4);
  
#line 3448 
  return;
}


#line 3454  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_detach(struct net_device *dev)
{
  bool tmp;
  
#line 3456 
  tmp = netif_running((struct net_device const *)dev);
  
#line 3456 
  if ((int)tmp != 0) {
    
#line 3457 
    netif_tx_lock(dev);
    
#line 3458 
    netif_device_detach(dev);
    
#line 3459 
    netif_tx_unlock(dev);
    
#line 3460 
    sky2_close(dev);
  }
  else ;
  
#line 3462 
  return;
}


#line 3465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_reattach(struct net_device *dev)
{
  bool tmp;
  
#line 3467 
  int err = 0;
  
#line 3469 
  tmp = netif_running((struct net_device const *)dev);
  
#line 3469 
  if ((int)tmp != 0) {
    
#line 3470 
    err = sky2_open(dev);
    
#line 3471 
    if (err != 0) {
      
#line 3472 
      netdev_info((struct net_device const *)dev,"could not restart %d\n",err);
      
#line 3473 
      dev_close(dev);
    }
    else {
      
#line 3475 
      netif_device_attach(dev);
      
#line 3476 
      sky2_set_multicast(dev);
    }
  }
  else ;
  
#line 3480 
  return err;
}


#line 3483  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_all_down(struct sky2_hw *hw)
{
  int i;
  
#line 3487 
  if ((hw->flags & 2048UL) != 0UL) {
    
#line 3488 
    sky2_write32((struct sky2_hw const *)hw,12U,0U);
    
#line 3489 
    sky2_read32((struct sky2_hw const *)hw,12U);
    
#line 3491 
    synchronize_irq((hw->pdev)->irq);
    
#line 3492 
    napi_disable(& hw->napi);
  }
  else ;
  
#line 3495 
  i = 0;
  
#line 3495 
  goto ldv_56376;
  ldv_56375: 
#line 3496 
  ;
  {
    int tmp_1;
    bool tmp_0;
    
#line 3496 
    struct net_device *dev = hw->dev[i];
    
#line 3497 
    struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
    
#line 3499 
    tmp_0 = netif_running((struct net_device const *)dev);
    
#line 3499 
    if (tmp_0) 
#line 3499 
               tmp_1 = 0; else 
#line 3499 
                               tmp_1 = 1;
    
#line 3499 
    if (tmp_1) 
#line 3500 
               goto ldv_56374; else ;
    
#line 3502 
    netif_carrier_off(dev);
    
#line 3503 
    netif_tx_disable(dev);
    
#line 3504 
    sky2_hw_down(sky2);
  }
  ldv_56374: 
#line 3506 
  ;
  
#line 3495 
  i += 1;
  ldv_56376: 
#line 3496 
  ;
  
#line 3495 
  if ((int)hw->ports > i) 
#line 3497 
                          goto ldv_56375; else 
#line 3500 
                                               goto ldv_56377;
  ldv_56377: 
#line 3501 
  ;
  
#line 3502 
  return;
}


#line 3508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_all_up(struct sky2_hw *hw)
{
  int i;
  
#line 3510 
  u32 imask = 3221225472U;
  
#line 3513 
  i = 0;
  
#line 3513 
  goto ldv_56387;
  ldv_56386: 
#line 3514 
  ;
  {
    int tmp_1;
    bool tmp_0;
    
#line 3514 
    struct net_device *dev = hw->dev[i];
    
#line 3515 
    struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
    
#line 3517 
    tmp_0 = netif_running((struct net_device const *)dev);
    
#line 3517 
    if (tmp_0) 
#line 3517 
               tmp_1 = 0; else 
#line 3517 
                               tmp_1 = 1;
    
#line 3517 
    if (tmp_1) 
#line 3518 
               goto ldv_56385; else ;
    
#line 3520 
    sky2_hw_up(sky2);
    
#line 3521 
    sky2_set_multicast(dev);
    
#line 3522 
    imask = portirq_msk[i] | imask;
    
#line 3523 
    netif_wake_queue(dev);
  }
  ldv_56385: 
#line 3525 
  ;
  
#line 3513 
  i += 1;
  ldv_56387: 
#line 3514 
  ;
  
#line 3513 
  if ((int)hw->ports > i) 
#line 3515 
                          goto ldv_56386; else 
#line 3518 
                                               goto ldv_56388;
  ldv_56388: 
#line 3519 
  ;
  
#line 3526 
  if ((hw->flags & 2048UL) != 0UL) {
    
#line 3527 
    sky2_write32((struct sky2_hw const *)hw,12U,imask);
    
#line 3528 
    sky2_read32((struct sky2_hw const *)hw,12U);
    
#line 3529 
    sky2_read32((struct sky2_hw const *)hw,40U);
    
#line 3530 
    napi_enable(& hw->napi);
  }
  else ;
  
#line 3532 
  return;
}


#line 3534  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_restart(struct work_struct *work)
{
  struct sky2_hw *tmp;
  {
    
#line 3536 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 3536 
    tmp = (struct sky2_hw *)__mptr + 18446744073709551136U;
  }
  
#line 3536 
  struct sky2_hw *hw = tmp;
  
#line 3538 
  rtnl_lock();
  
#line 3540 
  sky2_all_down(hw);
  
#line 3541 
  sky2_reset(hw);
  
#line 3542 
  sky2_all_up(hw);
  
#line 3544 
  rtnl_unlock();
  
#line 3545 
  return;
}


#line 3547  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
__inline static u8 sky2_wol_supported(struct sky2_hw const *hw)
{
  u8 __retres;
  unsigned int tmp_0;
  int tmp;
  
#line 3549 
  tmp = sky2_is_copper(hw);
  
#line 3549 
  if (tmp != 0) 
#line 3549 
                tmp_0 = 33U; else 
#line 3549 
                                  tmp_0 = 0U;
  
#line 3549 
  __retres = (unsigned char)tmp_0;
  
#line 3549 
  return __retres;
}


#line 3552  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_get_wol(struct net_device *dev, struct ethtool_wolinfo *wol)
{
  u8 tmp_0;
  
#line 3554 
  struct sky2_port const *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 3556 
  tmp_0 = sky2_wol_supported((struct sky2_hw const *)sky2->hw);
  
#line 3556 
  wol->supported = (unsigned int)tmp_0;
  
#line 3557 
  wol->wolopts = (unsigned int)sky2->wol;
  
#line 3558 
  return;
}


#line 3560  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_set_wol(struct net_device *dev, struct ethtool_wolinfo *wol)
{
  int __retres;
  int i;
  u8 tmp_0;
  
#line 3562 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 3563 
  struct sky2_hw *hw = sky2->hw;
  
#line 3564 
  bool enable_wakeup = (_Bool)0;
  
#line 3567 
  tmp_0 = sky2_wol_supported((struct sky2_hw const *)sky2->hw);
  
#line 3567 
  ;
  
#line 3567 
  if ((wol->wolopts & (unsigned int)(~ ((int)tmp_0))) != 0U) {
    
#line 3569 
    __retres = -95;
    
#line 3569 
    goto return_label;
  }
  else {
    int tmp_2;
    bool tmp_1;
    
#line 3568 
    tmp_1 = device_can_wakeup(& (hw->pdev)->dev);
    
#line 3568 
    if (tmp_1) 
#line 3568 
               tmp_2 = 0; else 
#line 3568 
                               tmp_2 = 1;
    
#line 3568 
    if (tmp_2) {
      
#line 3569 
      __retres = -95;
      
#line 3569 
      goto return_label;
    }
    else ;
  }
  
#line 3571 
  sky2->wol = (unsigned char)wol->wolopts;
  
#line 3573 
  i = 0;
  
#line 3573 
  goto ldv_56414;
  ldv_56413: 
#line 3574 
  ;
  {
    
#line 3574 
    struct net_device *dev_0 = hw->dev[i];
    
#line 3575 
    struct sky2_port *sky2_0 = netdev_priv((struct net_device const *)dev_0);
    
#line 3577 
    if ((unsigned int)sky2_0->wol != 0U) 
#line 3578 
                                         enable_wakeup = (_Bool)1; else ;
  }
  
#line 3573 
  i += 1;
  ldv_56414: 
#line 3574 
  ;
  
#line 3573 
  if ((int)hw->ports > i) 
#line 3575 
                          goto ldv_56413; else 
#line 3578 
                                               goto ldv_56415;
  ldv_56415: 
#line 3579 
  ;
  
#line 3580 
  device_set_wakeup_enable(& (hw->pdev)->dev,(_Bool)((bool)((int)enable_wakeup) != 0));
  
#line 3582 
  __retres = 0;
  return_label: 
#line 3582 
                return __retres;
}


#line 3585  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static u32 sky2_supported_modes(struct sky2_hw const *hw)
{
  u32 __retres;
  int tmp;
  
#line 3587 
  tmp = sky2_is_copper(hw);
  
#line 3587 
  if (tmp != 0) {
    
#line 3588 
    u32 modes = 15U;
    
#line 3593 
    if ((hw->flags & 4UL) != 0UL) 
#line 3594 
                                  modes |= 48U; else ;
    
#line 3596 
    __retres = modes;
    
#line 3596 
    goto return_label;
  }
  else {
    
#line 3598 
    __retres = 48U;
    
#line 3598 
    goto return_label;
  }
  return_label: 
#line 3587 
                return __retres;
}


#line 3602  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_get_settings(struct net_device *dev, struct ethtool_cmd *ecmd)
{
  int __retres;
  int tmp_0;
  
#line 3604 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 3605 
  struct sky2_hw *hw = sky2->hw;
  
#line 3607 
  ecmd->transceiver = (unsigned char)0U;
  
#line 3608 
  ecmd->supported = sky2_supported_modes((struct sky2_hw const *)hw);
  
#line 3609 
  ecmd->phy_address = (unsigned char)0U;
  
#line 3610 
  tmp_0 = sky2_is_copper((struct sky2_hw const *)hw);
  
#line 3610 
  if (tmp_0 != 0) {
    
#line 3611 
    ecmd->port = (unsigned char)0U;
    
#line 3612 
    ethtool_cmd_speed_set(ecmd,(unsigned int)sky2->speed);
    
#line 3613 
    ecmd->supported |= 192U;
  }
  else {
    
#line 3615 
    ethtool_cmd_speed_set(ecmd,1000U);
    
#line 3616 
    ecmd->port = (unsigned char)3U;
    
#line 3617 
    ecmd->supported |= 1088U;
  }
  
#line 3620 
  ecmd->advertising = (unsigned int)sky2->advertising;
  
#line 3621 
  ecmd->autoneg = (unsigned char)((unsigned int)((unsigned char)((int)sky2->flags >> 1)) & 1U);
  
#line 3623 
  ecmd->duplex = sky2->duplex;
  
#line 3624 
  __retres = 0;
  
#line 3624 
  return __retres;
}


#line 3627  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_set_settings(struct net_device *dev, struct ethtool_cmd *ecmd)
{
  int __retres;
  bool tmp_3;
  
#line 3629 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 3630 
  struct sky2_hw const *hw = (struct sky2_hw const *)sky2->hw;
  
#line 3631 
  u32 supported = sky2_supported_modes(hw);
  
#line 3633 
  if ((unsigned int)ecmd->autoneg == 1U) {
    int tmp_1;
    
#line 3634 
    if ((ecmd->advertising & ~ supported) != 0U) {
      
#line 3635 
      __retres = -22;
      
#line 3635 
      goto return_label;
    }
    else ;
    
#line 3637 
    tmp_1 = sky2_is_copper(hw);
    
#line 3637 
    if (tmp_1 != 0) 
#line 3638 
                    sky2->advertising = (unsigned short)((unsigned int)((unsigned short)ecmd->advertising) | 192U); else 
                                                                    
#line 3642 
                                                                    sky2->advertising = (unsigned short)((unsigned int)((unsigned short)ecmd->advertising) | 1088U);
    
#line 3646 
    sky2->flags = (unsigned short)((unsigned int)sky2->flags | 2U);
    
#line 3647 
    sky2->duplex = (unsigned char)255U;
    
#line 3648 
    sky2->speed = (unsigned short)65535U;
  }
  else {
    u32 setting;
    
#line 3651 
    u32 speed = ethtool_cmd_speed((struct ethtool_cmd const *)ecmd);
    
#line 3653 
    switch (speed) {
      case (u32)1000: 
#line 3654 
      ;
      
#line 3655 
      if ((unsigned int)ecmd->duplex == 1U) 
#line 3656 
                                            setting = 32U;
      else 
        
#line 3657 
        if ((unsigned int)ecmd->duplex == 0U) 
#line 3658 
                                              setting = 16U;
        else {
          
#line 3660 
          __retres = -22;
          
#line 3660 
          goto return_label;
        }
      
#line 3661 
      goto ldv_56436;
      case (u32)100: 
#line 3662 
      ;
      
#line 3663 
      if ((unsigned int)ecmd->duplex == 1U) 
#line 3664 
                                            setting = 8U;
      else 
        
#line 3665 
        if ((unsigned int)ecmd->duplex == 0U) 
#line 3666 
                                              setting = 4U;
        else {
          
#line 3668 
          __retres = -22;
          
#line 3668 
          goto return_label;
        }
      
#line 3669 
      goto ldv_56436;
      case (u32)10: 
#line 3671 
      ;
      
#line 3672 
      if ((unsigned int)ecmd->duplex == 1U) 
#line 3673 
                                            setting = 2U;
      else 
        
#line 3674 
        if ((unsigned int)ecmd->duplex == 0U) 
#line 3675 
                                              setting = 1U;
        else {
          
#line 3677 
          __retres = -22;
          
#line 3677 
          goto return_label;
        }
      
#line 3678 
      goto ldv_56436;
      default: 
#line 3679 
      ;
      
#line 3680 
      __retres = -22;
      
#line 3680 
      goto return_label;
    }
    ldv_56436: 
#line 3683 
    ;
    
#line 3683 
    if ((setting & supported) == 0U) {
      
#line 3684 
      __retres = -22;
      
#line 3684 
      goto return_label;
    }
    else ;
    
#line 3686 
    sky2->speed = (unsigned short)speed;
    
#line 3687 
    sky2->duplex = ecmd->duplex;
    
#line 3688 
    sky2->flags = (unsigned short)((unsigned int)sky2->flags & 65533U);
  }
  
#line 3691 
  tmp_3 = netif_running((struct net_device const *)dev);
  
#line 3691 
  if ((int)tmp_3 != 0) {
    
#line 3692 
    sky2_phy_reinit(sky2);
    
#line 3693 
    sky2_set_multicast(dev);
  }
  else ;
  
#line 3696 
  __retres = 0;
  return_label: 
#line 3696 
                return __retres;
}


#line 3699  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
{
  char const *tmp_0;
  
#line 3702 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 3704 
  strlcpy((char *)(& info->driver),"sky2",32UL);
  
#line 3705 
  strlcpy((char *)(& info->version),"1.30",32UL);
  
#line 3706 
  tmp_0 = pci_name((struct pci_dev const *)(sky2->hw)->pdev);
  
#line 3706 
  ;
  
#line 3706 
  strlcpy((char *)(& info->bus_info),tmp_0,32UL);
  
#line 3707 
  return;
}


#line 3713  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static struct sky2_stat const sky2_stats[36U] = {{.name = {(char)'t', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, .offset = (unsigned short)488U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, .offset = (unsigned short)312U}, {.name = {(char)'t', (char)'x', (char)'_', (char)'b', (char)'r', (char)'o', (char)'a', (char)'d', (char)'c', (char)'a', (char)'s', (char)'t', (char)'\000'}, .offset = (unsigned short)456U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'b', (char)'r', (char)'o', (char)'a', (char)'d', (char)'c', (char)'a', (char)'s', (char)'t', (char)'\000'}, .offset = (unsigned short)264U}, {.name = {(char)'t', (char)'x', (char)'_', (char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'\000'}, .offset = (unsigned short)472U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'\000'}, .offset = (unsigned short)280U}, {.name = {(char)'t', (char)'x', (char)'_', (char)'u', (char)'n', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'\000'}, .offset = (unsigned short)448U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'u', (char)'n', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'\000'}, .offset = (unsigned short)256U}, {.name = {(char)'t', (char)'x', (char)'_', (char)'m', (char)'a', (char)'c', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'\000'}, .offset = (unsigned short)464U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'m', (char)'a', (char)'c', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'\000'}, .offset = (unsigned short)272U}, {.name = {(char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s', (char)'\000'}, .offset = (unsigned short)560U}, {.name = {(char)'l', (char)'a', (char)'t', (char)'e', (char)'_', (char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'\000'}, .offset = (unsigned short)568U}, {.name = {(char)'a', (char)'b', (char)'o', (char)'r', (char)'t', (char)'e', (char)'d', (char)'\000'}, .offset = (unsigned short)576U}, {.name = {(char)'s', (char)'i', (char)'n', (char)'g', (char)'l', (char)'e', (char)'_', (char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s', (char)'\000'}, .offset = (unsigned short)592U}, {.name = {(char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'_', (char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s', (char)'\000'}, .offset = (unsigned short)584U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'s', (char)'h', (char)'o', (char)'r', (char)'t', (char)'\000'}, .offset = (unsigned short)336U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'r', (char)'u', (char)'n', (char)'t', (char)'\000'}, .offset = (unsigned short)344U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'6', (char)'4', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .offset = (unsigned short)352U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'6', (char)'5', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'2', (char)'7', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .offset = (unsigned short)360U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'1', (char)'2', (char)'8', (char)'_', (char)'t', (char)'o', (char)'_', (char)'2', (char)'5', (char)'5', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .offset = (unsigned short)368U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'2', (char)'5', (char)'6', (char)'_', (char)'t', (char)'o', (char)'_', (char)'5', (char)'1', (char)'1', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .offset = (unsigned short)376U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'5', (char)'1', (char)'2', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'0', (char)'2', (char)'3', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .offset = (unsigned short)384U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'1', (char)'0', (char)'2', (char)'4', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'5', (char)'1', (char)'8', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .offset = (unsigned short)392U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'1', (char)'5', (char)'1', (char)'8', (char)'_', (char)'t', (char)'o', (char)'_', (char)'m', (char)'a', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .offset = (unsigned short)400U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'t', (char)'o', (char)'o', (char)'_', (char)'l', (char)'o', (char)'n', (char)'g', (char)'\000'}, .offset = (unsigned short)408U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'f', (char)'i', (char)'f', (char)'o', (char)'_', (char)'o', (char)'v', (char)'e', (char)'r', (char)'f', (char)'l', (char)'o', (char)'w', (char)'\000'}, .offset = (unsigned short)432U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'j', (char)'a', (char)'b', (char)'b', (char)'e', (char)'r', (char)'\000'}, .offset = (unsigned short)416U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'f', (char)'c', (char)'s', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'\000'}, .offset = (unsigned short)288U}, {.name = {(char)'t', (char)'x', (char)'_', (char)'6', (char)'4', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .offset = (unsigned short)496U}, {.name = {(char)'t', (char)'x', (char)'_', (char)'6', (char)'5', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'2', (char)'7', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .offset = (unsigned short)504U}, {.name = {(char)'t', (char)'x', (char)'_', (char)'1', (char)'2', (char)'8', (char)'_', (char)'t', (char)'o', (char)'_', (char)'2', (char)'5', (char)'5', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .offset = (unsigned short)512U}, {.name = {(char)'t', (char)'x', (char)'_', (char)'2', (char)'5', (char)'6', (char)'_', (char)'t', (char)'o', (char)'_', (char)'5', (char)'1', (char)'1', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .offset = (unsigned short)520U}, {.name = {(char)'t', (char)'x', (char)'_', (char)'5', (char)'1', (char)'2', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'0', (char)'2', (char)'3', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .offset = (unsigned short)528U}, {.name = {(char)'t', (char)'x', (char)'_', (char)'1', (char)'0', (char)'2', (char)'4', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'5', (char)'1', (char)'8', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .offset = (unsigned short)536U}, {.name = {(char)'t', (char)'x', (char)'_', (char)'1', (char)'5', (char)'1', (char)'9', (char)'_', (char)'t', (char)'o', (char)'_', (char)'m', (char)'a', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .offset = (unsigned short)544U}, {.name = {(char)'t', (char)'x', (char)'_', (char)'f', (char)'i', (char)'f', (char)'o', (char)'_', (char)'u', (char)'n', (char)'d', (char)'e', (char)'r', (char)'r', (char)'u', (char)'n', (char)'\000'}, .offset = (unsigned short)600U}};

#line 3754  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static u32 sky2_get_msglevel(struct net_device *netdev)
{
  u32 __retres;
  
#line 3756 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)netdev);
  
#line 3757 
  __retres = sky2->msg_enable;
  
#line 3757 
  return __retres;
}


#line 3760  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_nway_reset(struct net_device *dev)
{
  int __retres;
  int tmp_1;
  bool tmp_0;
  
#line 3762 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 3764 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 3764 
  if (tmp_0) 
#line 3764 
             tmp_1 = 0; else 
#line 3764 
                             tmp_1 = 1;
  
#line 3764 
  if (tmp_1) {
    
#line 3765 
    __retres = -22;
    
#line 3765 
    goto return_label;
  }
  else 
    
#line 3764 
    if (((int)sky2->flags & 2) == 0) {
      
#line 3765 
      __retres = -22;
      
#line 3765 
      goto return_label;
    }
    else ;
  
#line 3767 
  sky2_phy_reinit(sky2);
  
#line 3768 
  sky2_set_multicast(dev);
  
#line 3770 
  __retres = 0;
  return_label: 
#line 3770 
                return __retres;
}


#line 3773  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_phy_stats(struct sky2_port *sky2, u64 *data, unsigned int count)
{
  int i;
  u32 tmp;
  
#line 3775 
  struct sky2_hw *hw = sky2->hw;
  
#line 3776 
  unsigned int port = sky2->port;
  
#line 3779 
  *data = get_stats64(hw,port,480U);
  
#line 3780 
  *(data + 1U) = get_stats64(hw,port,304U);
  
#line 3782 
  i = 2;
  
#line 3782 
  goto ldv_56466;
  ldv_56465: 
#line 3783 
  ;
  
#line 3783 
  tmp = get_stats32(hw,port,(unsigned int)sky2_stats[i].offset);
  
#line 3783 
  *(data + i) = (unsigned long long)tmp;
  
#line 3782 
  i += 1;
  ldv_56466: 
#line 3783 
  ;
  
#line 3782 
  if ((unsigned int)i < count) 
#line 3784 
                               goto ldv_56465; else 
#line 3787 
                                                    goto ldv_56467;
  ldv_56467: 
#line 3788 
  ;
  
#line 3789 
  return;
}


#line 3786  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_set_msglevel(struct net_device *netdev, u32 value)
{
  
#line 3788 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)netdev);
  
#line 3789 
  sky2->msg_enable = value;
  
#line 3790 
  return;
}


#line 3792  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_get_sset_count(struct net_device *dev, int sset)
{
  int __retres;
  
#line 3794 
  switch (sset) {
    case 1: 
#line 3795 
    ;
    
#line 3796 
    __retres = 36;
    
#line 3796 
    goto return_label;
    default: 
#line 3797 
    ;
    
#line 3798 
    __retres = -95;
    
#line 3798 
    goto return_label;
  }
  return_label: 
#line 3794 
                return __retres;
}


#line 3802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_get_ethtool_stats(struct net_device *dev, struct ethtool_stats *stats, u64 *data)
{
  
#line 3805 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 3807 
  sky2_phy_stats(sky2,data,36U);
  
#line 3808 
  return;
}


#line 3810  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_get_strings(struct net_device *dev, u32 stringset, u8 *data)
{
  int i;
  
#line 3814 
  switch (stringset) {
    case (u32)1: 
#line 3815 
    ;
    
#line 3816 
    i = 0;
    
#line 3816 
    goto ldv_56502;
    ldv_56501: 
#line 3817 
    ;
    
#line 3817 
    memcpy((void *)(data + i * 32),(void const *)(& sky2_stats[i].name),32UL);
    
#line 3816 
    i += 1;
    ldv_56502: 
#line 3817 
    ;
    
#line 3816 
    if ((unsigned int)i <= 35U) 
#line 3818 
                                goto ldv_56501; else 
#line 3821 
                                                     goto ldv_56503;
    ldv_56503: 
#line 3822 
    ;
    
#line 3819 
    goto ldv_56504;
  }
  ldv_56504: 
#line 3821 
  ;
  
#line 3822 
  return;
}


#line 3823  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_set_mac_address(struct net_device *dev, void *p)
{
  int __retres;
  int tmp_1;
  bool tmp_0;
  
#line 3825 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 3826 
  struct sky2_hw *hw = sky2->hw;
  
#line 3827 
  unsigned int port = sky2->port;
  
#line 3828 
  struct sockaddr const *addr = (struct sockaddr const *)p;
  
#line 3830 
  tmp_0 = is_valid_ether_addr((u8 const *)(& addr->sa_data));
  
#line 3830 
  if (tmp_0) 
#line 3830 
             tmp_1 = 0; else 
#line 3830 
                             tmp_1 = 1;
  
#line 3830 
  if (tmp_1) {
    
#line 3831 
    __retres = -99;
    
#line 3831 
    goto return_label;
  }
  else ;
  
#line 3833 
  memcpy((void *)dev->dev_addr,(void const *)(& addr->sa_data),6UL);
  
#line 3834 
  memcpy_toio((void volatile *)(hw->regs + (port * 8U + 256U)),(void const *)dev->dev_addr,6UL);
  
#line 3836 
  memcpy_toio((void volatile *)(hw->regs + (port * 8U + 264U)),(void const *)dev->dev_addr,6UL);
  
#line 3840 
  gma_set_addr(hw,port,40U,(u8 const *)dev->dev_addr);
  
#line 3843 
  gma_set_addr(hw,port,28U,(u8 const *)dev->dev_addr);
  
#line 3845 
  __retres = 0;
  return_label: 
#line 3845 
                return __retres;
}


#line 3848  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
__inline static void sky2_add_filter(u8 *filter, u8 const *addr)
{
  u32 bit;
  u32 tmp_3;
  {
    u32 tmp_2;
    
#line 3852 
    u32 __x = crc32_le(4294967295U,addr,6UL);
    
#line 3852 
    if (0 != 0) {
      u32 tmp_0;
      {
        
#line 3852 
        u32 __x_0 = __x_0;
        
#line 3852 
        __x_0 = (__x_0 << 16) | (__x_0 >> ((unsigned long)8 * sizeof(__x_0) - (unsigned long)16));
        
#line 3852 
        __x_0 = ((__x_0 >> 8) & 16711935U) | ((__x_0 << 8) & 4278255360U);
        
#line 3852 
        __x_0 = ((__x_0 >> 4) & 252645135U) | ((__x_0 << 4) & 4042322160U);
        
#line 3852 
        __x_0 = ((__x_0 >> 2) & 858993459U) | ((__x_0 << 2) & 3435973836U);
        
#line 3852 
        __x_0 = ((__x_0 >> 1) & 1431655765U) | ((__x_0 << 1) & 2863311530U);
        
#line 3852 
        tmp_0 = __x_0;
      }
      
#line 3852 
      tmp_2 = tmp_0;
    }
    else 
#line 3852 
         tmp_2 = __bitrev32(__x);
    
#line 3852 
    tmp_3 = tmp_2;
  }
  
#line 3852 
  bit = tmp_3 & 63U;
  
#line 3853 
  *(filter + (bit >> 3)) = (unsigned char)((int)*(filter + (bit >> 3)) | (1 << (bit & 7U)));
  
#line 3854 
  return;
}


#line 3856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_set_multicast(struct net_device *dev)
{
  struct netdev_hw_addr *ha;
  u16 reg;
  u8 filter[8U];
  int rx_pause;
  
#line 3858 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 3859 
  struct sky2_hw *hw = sky2->hw;
  
#line 3860 
  unsigned int port = sky2->port;
  
#line 3865 
  u8 const pause_mc_addr[6U] = {(unsigned char)1U, (unsigned char)128U, (unsigned char)194U, (unsigned char)0U, (unsigned char)0U, (unsigned char)1U};
  
#line 3867 
  rx_pause = (unsigned int)sky2->flow_status + 4294967294U <= 1U;
  
#line 3868 
  memset((void *)(& filter),0,8UL);
  
#line 3870 
  reg = gma_read16((struct sky2_hw const *)hw,port,12U);
  
#line 3871 
  reg = (unsigned short)((unsigned int)reg | 32768U);
  
#line 3873 
  if ((dev->flags & 256U) != 0U) 
#line 3874 
                                 reg = (unsigned short)((unsigned int)reg & 16383U);
  else 
    
#line 3875 
    if ((dev->flags & 512U) != 0U) 
#line 3876 
                                   memset((void *)(& filter),255,8UL);
    else 
      
#line 3877 
      if (dev->mc.count == 0 && rx_pause == 0) 
#line 3878 
                                               reg = (unsigned short)((unsigned int)reg & 49151U);
      else {
        struct netdev_hw_addr *tmp_0;
        struct netdev_hw_addr *tmp_1;
        
#line 3880 
        reg = (unsigned short)((unsigned int)reg | 16384U);
        
#line 3882 
        if (rx_pause != 0) 
#line 3883 
                           sky2_add_filter((u8 *)(& filter),(u8 const *)(& pause_mc_addr)); else ;
        {
          
#line 3885 
          struct list_head const *__mptr = (struct list_head const *)dev->mc.list.next;
          
#line 3885 
          tmp_0 = (struct netdev_hw_addr *)__mptr;
        }
        
#line 3885 
        ha = tmp_0;
        
#line 3885 
        goto ldv_56538;
        ldv_56537: 
#line 3886 
        ;
        
#line 3886 
        sky2_add_filter((u8 *)(& filter),(u8 const *)(& ha->addr));
        {
          
#line 3885 
          struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
          
#line 3885 
          tmp_1 = (struct netdev_hw_addr *)__mptr_0;
        }
        
#line 3885 
        ha = tmp_1;
        ldv_56538: 
#line 3887 
        ;
        
#line 3885 
        if (& ha->list != & dev->mc.list) 
#line 3887 
                                          goto ldv_56537; else 
#line 3890 
                                                               goto ldv_56539;
        ldv_56539: 
#line 3891 
        ;
      }
  
#line 3889 
  gma_write16((struct sky2_hw const *)hw,port,52,(unsigned short)((int)((unsigned short)((int)filter[0] | ((int)filter[1] << 8)))));
  
#line 3891 
  gma_write16((struct sky2_hw const *)hw,port,56,(unsigned short)((int)((unsigned short)((int)filter[2] | ((int)filter[3] << 8)))));
  
#line 3893 
  gma_write16((struct sky2_hw const *)hw,port,60,(unsigned short)((int)((unsigned short)((int)filter[4] | ((int)filter[5] << 8)))));
  
#line 3895 
  gma_write16((struct sky2_hw const *)hw,port,64,(unsigned short)((int)((unsigned short)((int)filter[6] | ((int)filter[7] << 8)))));
  
#line 3898 
  gma_write16((struct sky2_hw const *)hw,port,12,(unsigned short)((int)reg));
  
#line 3899 
  return;
}


#line 3901  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static struct rtnl_link_stats64 *sky2_get_stats(struct net_device *dev, struct rtnl_link_stats64 *stats)
{
  unsigned int start;
  u64 _bytes;
  u64 _packets;
  bool tmp_0;
  bool tmp_1;
  u32 tmp_2;
  u32 tmp_3;
  u32 tmp_4;
  u32 tmp_5;
  u32 tmp_6;
  u32 tmp_7;
  u32 tmp_8;
  u32 tmp_9;
  
#line 3904 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 3905 
  struct sky2_hw *hw = sky2->hw;
  
#line 3906 
  unsigned int port = sky2->port;
  ldv_56550: 
#line 3909 
  ;
  
#line 3911 
  start = u64_stats_fetch_begin_irq((struct u64_stats_sync const *)(& sky2->rx_stats.syncp));
  
#line 3912 
  _bytes = sky2->rx_stats.bytes;
  
#line 3913 
  _packets = sky2->rx_stats.packets;
  
#line 3914 
  tmp_0 = u64_stats_fetch_retry_irq((struct u64_stats_sync const *)(& sky2->rx_stats.syncp),start);
  
#line 3914 
  if ((int)tmp_0 != 0) 
#line 3916 
                       goto ldv_56550; else 
#line 3919 
                                            goto ldv_56551;
  ldv_56551: 
#line 3920 
  ;
  
#line 3916 
  stats->rx_packets = _packets;
  
#line 3917 
  stats->rx_bytes = _bytes;
  ldv_56552: 
#line 3918 
  ;
  
#line 3920 
  start = u64_stats_fetch_begin_irq((struct u64_stats_sync const *)(& sky2->tx_stats.syncp));
  
#line 3921 
  _bytes = sky2->tx_stats.bytes;
  
#line 3922 
  _packets = sky2->tx_stats.packets;
  
#line 3923 
  tmp_1 = u64_stats_fetch_retry_irq((struct u64_stats_sync const *)(& sky2->tx_stats.syncp),start);
  
#line 3923 
  if ((int)tmp_1 != 0) 
#line 3925 
                       goto ldv_56552; else 
#line 3928 
                                            goto ldv_56553;
  ldv_56553: 
#line 3929 
  ;
  
#line 3925 
  stats->tx_packets = _packets;
  
#line 3926 
  stats->tx_bytes = _bytes;
  
#line 3929 
  tmp_2 = get_stats32(hw,port,280U);
  
#line 3929 
  tmp_3 = get_stats32(hw,port,264U);
  
#line 3928 
  stats->multicast = (unsigned long long)(tmp_2 + tmp_3);
  
#line 3931 
  tmp_4 = get_stats32(hw,port,560U);
  
#line 3931 
  stats->collisions = (unsigned long long)tmp_4;
  
#line 3933 
  tmp_5 = get_stats32(hw,port,408U);
  
#line 3933 
  stats->rx_length_errors = (unsigned long long)tmp_5;
  
#line 3934 
  tmp_6 = get_stats32(hw,port,288U);
  
#line 3934 
  stats->rx_crc_errors = (unsigned long long)tmp_6;
  
#line 3936 
  tmp_7 = get_stats32(hw,port,336U);
  
#line 3936 
  tmp_8 = get_stats32(hw,port,344U);
  
#line 3935 
  stats->rx_frame_errors = (unsigned long long)(tmp_7 + tmp_8);
  
#line 3937 
  tmp_9 = get_stats32(hw,port,432U);
  
#line 3937 
  stats->rx_over_errors = (unsigned long long)tmp_9;
  
#line 3939 
  stats->rx_dropped = (unsigned long long)dev->stats.rx_dropped;
  
#line 3940 
  stats->rx_fifo_errors = (unsigned long long)dev->stats.rx_fifo_errors;
  
#line 3941 
  stats->tx_fifo_errors = (unsigned long long)dev->stats.tx_fifo_errors;
  
#line 3943 
  return stats;
}


#line 3949  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_led(struct sky2_port *sky2, enum led_mode mode)
{
  
#line 3951 
  struct sky2_hw *hw = sky2->hw;
  
#line 3952 
  unsigned int port = sky2->port;
  
#line 3954 
  ldv_spin_lock_bh_93(& sky2->phy_lock);
  
#line 3955 
  if ((unsigned int)hw->chip_id + 76U <= 1U || (unsigned int)hw->chip_id == 185U) {
    u16 pg;
    
#line 3959 
    pg = gm_phy_read(hw,port,(unsigned short)22);
    
#line 3960 
    gm_phy_write(hw,port,(unsigned short)22,(unsigned short)3);
    
#line 3962 
    switch ((unsigned int)mode) {
      case (unsigned int)2: 
#line 3963 
      ;
      
#line 3964 
      gm_phy_write(hw,port,(unsigned short)16,(unsigned short)34952);
      
#line 3969 
      goto ldv_56562;
      case (unsigned int)3: 
#line 3970 
      ;
      
#line 3971 
      gm_phy_write(hw,port,(unsigned short)16,(unsigned short)39321);
      
#line 3976 
      goto ldv_56562;
      case (unsigned int)1: 
#line 3977 
      ;
      
#line 3978 
      gm_phy_write(hw,port,(unsigned short)16,(unsigned short)43690);
      
#line 3983 
      goto ldv_56562;
      case (unsigned int)0: 
#line 3984 
      ;
      
#line 3985 
      gm_phy_write(hw,port,(unsigned short)16,(unsigned short)6263);
    }
    ldv_56562: 
#line 3992 
    ;
    
#line 3992 
    gm_phy_write(hw,port,(unsigned short)22,(unsigned short)((int)pg));
  }
  else 
#line 3994 
       gm_phy_write(hw,port,(unsigned short)25,(unsigned short)(((((((int)((unsigned short)mode) << 10U) | ((int)((unsigned short)mode) << 8U)) | ((int)((unsigned short)mode) << 6U)) | ((int)((unsigned short)mode) << 4U)) | ((int)((unsigned short)mode) << 2U)) | (int)((unsigned short)mode)));
  
#line 4002 
  ldv_spin_unlock_bh_94(& sky2->phy_lock);
  
#line 4003 
  return;
}


#line 4006  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_set_phys_id(struct net_device *dev, enum ethtool_phys_id_state state)
{
  int __retres;
  
#line 4009 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 4011 
  switch ((unsigned int)state) {
    case (unsigned int)1: 
#line 4012 
    ;
    
#line 4013 
    __retres = 1;
    
#line 4013 
    goto return_label;
    case (unsigned int)0: 
#line 4014 
    ;
    
#line 4015 
    sky2_led(sky2,(enum led_mode)MO_LED_NORM);
    
#line 4016 
    goto ldv_56573;
    case (unsigned int)2: 
#line 4017 
    ;
    
#line 4018 
    sky2_led(sky2,(enum led_mode)MO_LED_ON);
    
#line 4019 
    goto ldv_56573;
    case (unsigned int)3: 
#line 4020 
    ;
    
#line 4021 
    sky2_led(sky2,(enum led_mode)MO_LED_OFF);
    
#line 4022 
    goto ldv_56573;
  }
  ldv_56573: 
#line 4025 
  ;
  
#line 4025 
  __retres = 0;
  return_label: 
#line 4025 
                return __retres;
}


#line 4028  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_get_pauseparam(struct net_device *dev, struct ethtool_pauseparam *ecmd)
{
  
#line 4031 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 4033 
  switch ((unsigned int)sky2->flow_mode) {
    __u32 tmp_0;
    __u32 tmp_1;
    case (unsigned int)0: 
#line 4034 
    ;
    
#line 4035 
    tmp_0 = 0U;
    
#line 4035 
    ecmd->rx_pause = tmp_0;
    
#line 4035 
    ecmd->tx_pause = tmp_0;
    
#line 4036 
    goto ldv_56582;
    case (unsigned int)1: 
#line 4037 
    ;
    
#line 4038 
    ecmd->tx_pause = 1U;
    
#line 4038 
    ecmd->rx_pause = 0U;
    
#line 4039 
    goto ldv_56582;
    case (unsigned int)2: 
#line 4040 
    ;
    
#line 4041 
    ecmd->tx_pause = 0U;
    
#line 4041 
    ecmd->rx_pause = 1U;
    
#line 4042 
    goto ldv_56582;
    case (unsigned int)3: 
#line 4043 
    ;
    
#line 4044 
    tmp_1 = 1U;
    
#line 4044 
    ecmd->rx_pause = tmp_1;
    
#line 4044 
    ecmd->tx_pause = tmp_1;
  }
  ldv_56582: 
#line 4047 
  ;
  
#line 4047 
  ecmd->autoneg = (unsigned int)((int)sky2->flags >> 2) & 1U;
  
#line 4049 
  return;
}


#line 4051  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_set_pauseparam(struct net_device *dev, struct ethtool_pauseparam *ecmd)
{
  int __retres;
  bool tmp_0;
  
#line 4054 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 4056 
  if (ecmd->autoneg == 1U) 
#line 4057 
                           sky2->flags = (unsigned short)((unsigned int)sky2->flags | 4U); else 
                                                                    
#line 4059 
                                                                    sky2->flags = (unsigned short)((unsigned int)sky2->flags & 65531U);
  
#line 4061 
  sky2->flow_mode = sky2_flow((int)ecmd->rx_pause,(int)ecmd->tx_pause);
  
#line 4063 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 4063 
  if ((int)tmp_0 != 0) 
#line 4064 
                       sky2_phy_reinit(sky2); else ;
  
#line 4066 
  __retres = 0;
  
#line 4066 
  return __retres;
}


#line 4069  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_get_coalesce(struct net_device *dev, struct ethtool_coalesce *ecmd)
{
  int __retres;
  u8 tmp_1;
  u16 tmp_2;
  u8 tmp_4;
  u8 tmp_5;
  u8 tmp_7;
  u8 tmp_8;
  
#line 4072 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 4073 
  struct sky2_hw *hw = sky2->hw;
  
#line 4075 
  tmp_1 = sky2_read8((struct sky2_hw const *)hw,3784U);
  
#line 4075 
  if ((unsigned int)tmp_1 == 2U) 
#line 4076 
                                 ecmd->tx_coalesce_usecs = 0U;
  else {
    
#line 4078 
    u32 clks = sky2_read32((struct sky2_hw const *)hw,3776U);
    
#line 4079 
    ecmd->tx_coalesce_usecs = sky2_clk2us((struct sky2_hw const *)hw,clks);
  }
  
#line 4081 
  tmp_2 = sky2_read16((struct sky2_hw const *)hw,3736U);
  
#line 4081 
  ecmd->tx_max_coalesced_frames = (unsigned int)tmp_2;
  
#line 4083 
  tmp_4 = sky2_read8((struct sky2_hw const *)hw,3768U);
  
#line 4083 
  if ((unsigned int)tmp_4 == 2U) 
#line 4084 
                                 ecmd->rx_coalesce_usecs = 0U;
  else {
    
#line 4086 
    u32 clks_0 = sky2_read32((struct sky2_hw const *)hw,3760U);
    
#line 4087 
    ecmd->rx_coalesce_usecs = sky2_clk2us((struct sky2_hw const *)hw,clks_0);
  }
  
#line 4089 
  tmp_5 = sky2_read8((struct sky2_hw const *)hw,3756U);
  
#line 4089 
  ecmd->rx_max_coalesced_frames = (unsigned int)tmp_5;
  
#line 4091 
  tmp_7 = sky2_read8((struct sky2_hw const *)hw,3800U);
  
#line 4091 
  if ((unsigned int)tmp_7 == 2U) 
#line 4092 
                                 ecmd->rx_coalesce_usecs_irq = 0U;
  else {
    
#line 4094 
    u32 clks_1 = sky2_read32((struct sky2_hw const *)hw,3792U);
    
#line 4095 
    ecmd->rx_coalesce_usecs_irq = sky2_clk2us((struct sky2_hw const *)hw,clks_1);
  }
  
#line 4098 
  tmp_8 = sky2_read8((struct sky2_hw const *)hw,3757U);
  
#line 4098 
  ecmd->rx_max_coalesced_frames_irq = (unsigned int)tmp_8;
  
#line 4100 
  __retres = 0;
  
#line 4100 
  return __retres;
}


#line 4104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_set_coalesce(struct net_device *dev, struct ethtool_coalesce *ecmd)
{
  int __retres;
  
#line 4107 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 4108 
  struct sky2_hw *hw = sky2->hw;
  
#line 4109 
  u32 const tmax = sky2_clk2us((struct sky2_hw const *)hw,16777215U);
  
#line 4111 
  if ((ecmd->tx_coalesce_usecs > tmax || ecmd->rx_coalesce_usecs > tmax) || ecmd->rx_coalesce_usecs_irq > tmax) {
    
#line 4114 
    __retres = -22;
    
#line 4114 
    goto return_label;
  }
  else ;
  
#line 4116 
  if (ecmd->tx_max_coalesced_frames >= (unsigned int)((int)sky2->tx_ring_size + -1)) {
    
#line 4117 
    __retres = -22;
    
#line 4117 
    goto return_label;
  }
  else ;
  
#line 4118 
  if (ecmd->rx_max_coalesced_frames > 168U) {
    
#line 4119 
    __retres = -22;
    
#line 4119 
    goto return_label;
  }
  else ;
  
#line 4120 
  if (ecmd->rx_max_coalesced_frames_irq > 168U) {
    
#line 4121 
    __retres = -22;
    
#line 4121 
    goto return_label;
  }
  else ;
  
#line 4123 
  if (ecmd->tx_coalesce_usecs == 0U) 
#line 4124 
                                     sky2_write8((struct sky2_hw const *)hw,3784U,(unsigned char)2);
  else {
    u32 tmp_1;
    
#line 4126 
    tmp_1 = sky2_us2clk((struct sky2_hw const *)hw,ecmd->tx_coalesce_usecs);
    
#line 4126 
    ;
    
#line 4126 
    sky2_write32((struct sky2_hw const *)hw,3776U,tmp_1);
    
#line 4128 
    sky2_write8((struct sky2_hw const *)hw,3784U,(unsigned char)4);
  }
  
#line 4130 
  sky2_write16((struct sky2_hw const *)hw,3736U,(unsigned short)((int)((unsigned short)ecmd->tx_max_coalesced_frames)));
  
#line 4132 
  if (ecmd->rx_coalesce_usecs == 0U) 
#line 4133 
                                     sky2_write8((struct sky2_hw const *)hw,3768U,(unsigned char)2);
  else {
    u32 tmp_2;
    
#line 4135 
    tmp_2 = sky2_us2clk((struct sky2_hw const *)hw,ecmd->rx_coalesce_usecs);
    
#line 4135 
    ;
    
#line 4135 
    sky2_write32((struct sky2_hw const *)hw,3760U,tmp_2);
    
#line 4137 
    sky2_write8((struct sky2_hw const *)hw,3768U,(unsigned char)4);
  }
  
#line 4139 
  sky2_write8((struct sky2_hw const *)hw,3756U,(unsigned char)((int)((unsigned char)ecmd->rx_max_coalesced_frames)));
  
#line 4141 
  if (ecmd->rx_coalesce_usecs_irq == 0U) 
#line 4142 
                                         sky2_write8((struct sky2_hw const *)hw,3800U,(unsigned char)2);
  else {
    u32 tmp_3;
    
#line 4144 
    tmp_3 = sky2_us2clk((struct sky2_hw const *)hw,ecmd->rx_coalesce_usecs_irq);
    
#line 4144 
    ;
    
#line 4144 
    sky2_write32((struct sky2_hw const *)hw,3792U,tmp_3);
    
#line 4146 
    sky2_write8((struct sky2_hw const *)hw,3800U,(unsigned char)4);
  }
  
#line 4148 
  sky2_write8((struct sky2_hw const *)hw,3757U,(unsigned char)((int)((unsigned char)ecmd->rx_max_coalesced_frames_irq)));
  
#line 4149 
  __retres = 0;
  return_label: 
#line 4149 
                return __retres;
}


#line 4157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static unsigned long roundup_ring_size(unsigned long pending)
{
  unsigned long tmp_72;
  {
    unsigned long tmp_70;
    unsigned long tmp_71;
    
#line 4159 
    unsigned long _max1 = 128UL;
    
#line 4159 
    if (0 != 0) {
      unsigned long tmp_68;
      
#line 4159 
      if (pending != 0UL) {
        unsigned long tmp_67;
        
#line 4159 
        if (0 != 0) {
          unsigned long tmp_65;
          
#line 4159 
          if (pending == 0UL) {
            int tmp;
            
#line 4159 
            tmp = ____ilog2_NaN();
            
#line 4159 
            tmp_65 = 1UL << (tmp + 1);
          }
          else {
            unsigned long tmp_64;
            
#line 4159 
            if (pending >= (unsigned long)0) {
              unsigned long tmp_63;
              
#line 4159 
              if (((unsigned long long)pending & 4611686018427387904ULL) == 0ULL) {
                unsigned long tmp_62;
                
#line 4159 
                if (((unsigned long long)pending & 2305843009213693952ULL) == 0ULL) {
                  unsigned long tmp_61;
                  
#line 4159 
                  if (((unsigned long long)pending & 1152921504606846976ULL) == 0ULL) {
                    unsigned long tmp_60;
                    
#line 4159 
                    if (((unsigned long long)pending & 576460752303423488ULL) == 0ULL) {
                      unsigned long tmp_59;
                      
#line 4159 
                      if (((unsigned long long)pending & 288230376151711744ULL) == 0ULL) {
                        unsigned long tmp_58;
                        
#line 4159 
                        if (((unsigned long long)pending & 144115188075855872ULL) == 0ULL) {
                          unsigned long tmp_57;
                          
#line 4159 
                          if (((unsigned long long)pending & 72057594037927936ULL) == 0ULL) {
                            unsigned long tmp_56;
                            
#line 4159 
                            if (((unsigned long long)pending & 36028797018963968ULL) == 0ULL) {
                              unsigned long tmp_55;
                              
#line 4159 
                              if (((unsigned long long)pending & 18014398509481984ULL) == 0ULL) {
                                unsigned long tmp_54;
                                
#line 4159 
                                if (((unsigned long long)pending & 9007199254740992ULL) == 0ULL) {
                                  unsigned long tmp_53;
                                  
#line 4159 
                                  if (((unsigned long long)pending & 4503599627370496ULL) == 0ULL) {
                                    unsigned long tmp_52;
                                    
#line 4159 
                                    if (((unsigned long long)pending & 2251799813685248ULL) == 0ULL) {
                                      unsigned long tmp_51;
                                      
#line 4159 
                                      if (((unsigned long long)pending & 1125899906842624ULL) == 0ULL) {
                                        unsigned long tmp_50;
                                        
#line 4159 
                                        if (((unsigned long long)pending & 562949953421312ULL) == 0ULL) {
                                          unsigned long tmp_49;
                                          
#line 4159 
                                          if (((unsigned long long)pending & 281474976710656ULL) == 0ULL) {
                                            unsigned long tmp_48;
                                            
#line 4159 
                                            if (((unsigned long long)pending & 140737488355328ULL) == 0ULL) {
                                              unsigned long tmp_47;
                                              
#line 4159 
                                              if (((unsigned long long)pending & 70368744177664ULL) == 0ULL) {
                                                unsigned long tmp_46;
                                                
#line 4159 
                                                if (((unsigned long long)pending & 35184372088832ULL) == 0ULL) {
                                                  unsigned long tmp_45;
                                                  
#line 4159 
                                                  if (((unsigned long long)pending & 17592186044416ULL) == 0ULL) {
                                                    unsigned long tmp_44;
                                                    
#line 4159 
                                                    if (((unsigned long long)pending & 8796093022208ULL) == 0ULL) {
                                                      unsigned long tmp_43;
                                                      
#line 4159 
                                                      if (((unsigned long long)pending & 4398046511104ULL) == 0ULL) {
                                                        unsigned long tmp_42;
                                                        
#line 4159 
                                                        if (((unsigned long long)pending & 2199023255552ULL) == 0ULL) {
                                                          unsigned long tmp_41;
                                                          
#line 4159 
                                                          if (((unsigned long long)pending & 1099511627776ULL) == 0ULL) {
                                                            unsigned long tmp_40;
                                                            
#line 4159 
                                                            if (((unsigned long long)pending & 549755813888ULL) == 0ULL) {
                                                              unsigned long tmp_39;
                                                              
#line 4159 
                                                              if (((unsigned long long)pending & 274877906944ULL) == 0ULL) {
                                                                unsigned long tmp_38;
                                                                
#line 4159 
                                                                if (((unsigned long long)pending & 137438953472ULL) == 0ULL) {
                                                                  unsigned long tmp_37;
                                                                  
#line 4159 
                                                                  if (
                                                                    ((unsigned long long)pending & 68719476736ULL) == 0ULL) {
                                                                    unsigned long tmp_36;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 34359738368ULL) == 0ULL) {
                                                                    unsigned long tmp_35;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 17179869184ULL) == 0ULL) {
                                                                    unsigned long tmp_34;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 8589934592ULL) == 0ULL) {
                                                                    unsigned long tmp_33;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 4294967296ULL) == 0ULL) {
                                                                    unsigned long tmp_32;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 2147483648ULL) == 0ULL) {
                                                                    unsigned long tmp_31;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 1073741824ULL) == 0ULL) {
                                                                    unsigned long tmp_30;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 536870912ULL) == 0ULL) {
                                                                    unsigned long tmp_29;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 268435456ULL) == 0ULL) {
                                                                    unsigned long tmp_28;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 134217728ULL) == 0ULL) {
                                                                    unsigned long tmp_27;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 67108864ULL) == 0ULL) {
                                                                    unsigned long tmp_26;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 33554432ULL) == 0ULL) {
                                                                    unsigned long tmp_25;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 16777216ULL) == 0ULL) {
                                                                    unsigned long tmp_24;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 8388608ULL) == 0ULL) {
                                                                    unsigned long tmp_23;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 4194304ULL) == 0ULL) {
                                                                    unsigned long tmp_22;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 2097152ULL) == 0ULL) {
                                                                    unsigned long tmp_21;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 1048576ULL) == 0ULL) {
                                                                    unsigned long tmp_20;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 524288ULL) == 0ULL) {
                                                                    unsigned long tmp_19;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 262144ULL) == 0ULL) {
                                                                    unsigned long tmp_18;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 131072ULL) == 0ULL) {
                                                                    unsigned long tmp_17;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 65536ULL) == 0ULL) {
                                                                    unsigned long tmp_16;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 32768ULL) == 0ULL) {
                                                                    unsigned long tmp_15;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 16384ULL) == 0ULL) {
                                                                    unsigned long tmp_14;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 8192ULL) == 0ULL) {
                                                                    unsigned long tmp_13;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 4096ULL) == 0ULL) {
                                                                    unsigned long tmp_12;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 2048ULL) == 0ULL) {
                                                                    unsigned long tmp_11;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 1024ULL) == 0ULL) {
                                                                    unsigned long tmp_10;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 512ULL) == 0ULL) {
                                                                    unsigned long tmp_9;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 256ULL) == 0ULL) {
                                                                    unsigned long tmp_8;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 128ULL) == 0ULL) {
                                                                    unsigned long tmp_7;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 64ULL) == 0ULL) {
                                                                    unsigned long tmp_6;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 32ULL) == 0ULL) {
                                                                    unsigned long tmp_5;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 16ULL) == 0ULL) {
                                                                    unsigned long tmp_4;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 8ULL) == 0ULL) {
                                                                    unsigned long tmp_3;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 4ULL) == 0ULL) {
                                                                    unsigned long tmp_2;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 2ULL) == 0ULL) {
                                                                    unsigned long tmp_1;
                                                                    
#line 4159 
                                                                    if (
                                                                    ((unsigned long long)pending & 1ULL) == 0ULL) {
                                                                    int tmp_0;
                                                                    
#line 4159 
                                                                    tmp_0 = ____ilog2_NaN();
                                                                    
#line 4159 
                                                                    tmp_1 = 1UL << (tmp_0 + 1);
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_1 = 2UL;
                                                                    
#line 4159 
                                                                    tmp_2 = tmp_1;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_2 = 4UL;
                                                                    
#line 4159 
                                                                    tmp_3 = tmp_2;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_3 = 8UL;
                                                                    
#line 4159 
                                                                    tmp_4 = tmp_3;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_4 = 16UL;
                                                                    
#line 4159 
                                                                    tmp_5 = tmp_4;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_5 = 32UL;
                                                                    
#line 4159 
                                                                    tmp_6 = tmp_5;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_6 = 64UL;
                                                                    
#line 4159 
                                                                    tmp_7 = tmp_6;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_7 = 128UL;
                                                                    
#line 4159 
                                                                    tmp_8 = tmp_7;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_8 = 256UL;
                                                                    
#line 4159 
                                                                    tmp_9 = tmp_8;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_9 = 512UL;
                                                                    
#line 4159 
                                                                    tmp_10 = tmp_9;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_10 = 1024UL;
                                                                    
#line 4159 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_11 = 2048UL;
                                                                    
#line 4159 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_12 = 4096UL;
                                                                    
#line 4159 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_13 = 8192UL;
                                                                    
#line 4159 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_14 = 16384UL;
                                                                    
#line 4159 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_15 = 32768UL;
                                                                    
#line 4159 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_16 = 65536UL;
                                                                    
#line 4159 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_17 = 131072UL;
                                                                    
#line 4159 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_18 = 262144UL;
                                                                    
#line 4159 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_19 = 524288UL;
                                                                    
#line 4159 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_20 = 1048576UL;
                                                                    
#line 4159 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_21 = 2097152UL;
                                                                    
#line 4159 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_22 = 4194304UL;
                                                                    
#line 4159 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_23 = 8388608UL;
                                                                    
#line 4159 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_24 = 16777216UL;
                                                                    
#line 4159 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_25 = 33554432UL;
                                                                    
#line 4159 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_26 = 67108864UL;
                                                                    
#line 4159 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_27 = 134217728UL;
                                                                    
#line 4159 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_28 = 268435456UL;
                                                                    
#line 4159 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_29 = 536870912UL;
                                                                    
#line 4159 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_30 = 1073741824UL;
                                                                    
#line 4159 
                                                                    tmp_31 = tmp_30;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_31 = 2147483648UL;
                                                                    
#line 4159 
                                                                    tmp_32 = tmp_31;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_32 = 4294967296UL;
                                                                    
#line 4159 
                                                                    tmp_33 = tmp_32;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_33 = 8589934592UL;
                                                                    
#line 4159 
                                                                    tmp_34 = tmp_33;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_34 = 17179869184UL;
                                                                    
#line 4159 
                                                                    tmp_35 = tmp_34;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_35 = 34359738368UL;
                                                                    
#line 4159 
                                                                    tmp_36 = tmp_35;
                                                                    }
                                                                    else 
                                                                    
#line 4159 
                                                                    tmp_36 = 68719476736UL;
                                                                    
#line 4159 
                                                                    tmp_37 = tmp_36;
                                                                  }
                                                                  else 
                                                                    
#line 4159 
                                                                    tmp_37 = 137438953472UL;
                                                                  
#line 4159 
                                                                  tmp_38 = tmp_37;
                                                                }
                                                                else 
                                                                  
#line 4159 
                                                                  tmp_38 = 274877906944UL;
                                                                
#line 4159 
                                                                tmp_39 = tmp_38;
                                                              }
                                                              else 
#line 4159 
                                                                   tmp_39 = 549755813888UL;
                                                              
#line 4159 
                                                              tmp_40 = tmp_39;
                                                            }
                                                            else 
#line 4159 
                                                                 tmp_40 = 1099511627776UL;
                                                            
#line 4159 
                                                            tmp_41 = tmp_40;
                                                          }
                                                          else 
#line 4159 
                                                               tmp_41 = 2199023255552UL;
                                                          
#line 4159 
                                                          tmp_42 = tmp_41;
                                                        }
                                                        else 
#line 4159 
                                                             tmp_42 = 4398046511104UL;
                                                        
#line 4159 
                                                        tmp_43 = tmp_42;
                                                      }
                                                      else 
#line 4159 
                                                           tmp_43 = 8796093022208UL;
                                                      
#line 4159 
                                                      tmp_44 = tmp_43;
                                                    }
                                                    else 
#line 4159 
                                                         tmp_44 = 17592186044416UL;
                                                    
#line 4159 
                                                    tmp_45 = tmp_44;
                                                  }
                                                  else 
#line 4159 
                                                       tmp_45 = 35184372088832UL;
                                                  
#line 4159 
                                                  tmp_46 = tmp_45;
                                                }
                                                else 
#line 4159 
                                                     tmp_46 = 70368744177664UL;
                                                
#line 4159 
                                                tmp_47 = tmp_46;
                                              }
                                              else 
#line 4159 
                                                   tmp_47 = 140737488355328UL;
                                              
#line 4159 
                                              tmp_48 = tmp_47;
                                            }
                                            else 
#line 4159 
                                                 tmp_48 = 281474976710656UL;
                                            
#line 4159 
                                            tmp_49 = tmp_48;
                                          }
                                          else 
#line 4159 
                                               tmp_49 = 562949953421312UL;
                                          
#line 4159 
                                          tmp_50 = tmp_49;
                                        }
                                        else 
#line 4159 
                                             tmp_50 = 1125899906842624UL;
                                        
#line 4159 
                                        tmp_51 = tmp_50;
                                      }
                                      else 
#line 4159 
                                           tmp_51 = 2251799813685248UL;
                                      
#line 4159 
                                      tmp_52 = tmp_51;
                                    }
                                    else 
#line 4159 
                                         tmp_52 = 4503599627370496UL;
                                    
#line 4159 
                                    tmp_53 = tmp_52;
                                  }
                                  else 
#line 4159 
                                       tmp_53 = 9007199254740992UL;
                                  
#line 4159 
                                  tmp_54 = tmp_53;
                                }
                                else 
#line 4159 
                                     tmp_54 = 18014398509481984UL;
                                
#line 4159 
                                tmp_55 = tmp_54;
                              }
                              else 
#line 4159 
                                   tmp_55 = 36028797018963968UL;
                              
#line 4159 
                              tmp_56 = tmp_55;
                            }
                            else 
#line 4159 
                                 tmp_56 = 72057594037927936UL;
                            
#line 4159 
                            tmp_57 = tmp_56;
                          }
                          else 
#line 4159 
                               tmp_57 = 144115188075855872UL;
                          
#line 4159 
                          tmp_58 = tmp_57;
                        }
                        else 
#line 4159 
                             tmp_58 = 288230376151711744UL;
                        
#line 4159 
                        tmp_59 = tmp_58;
                      }
                      else 
#line 4159 
                           tmp_59 = 576460752303423488UL;
                      
#line 4159 
                      tmp_60 = tmp_59;
                    }
                    else 
#line 4159 
                         tmp_60 = 1152921504606846976UL;
                    
#line 4159 
                    tmp_61 = tmp_60;
                  }
                  else 
#line 4159 
                       tmp_61 = 2305843009213693952UL;
                  
#line 4159 
                  tmp_62 = tmp_61;
                }
                else 
#line 4159 
                     tmp_62 = 4611686018427387904UL;
                
#line 4159 
                tmp_63 = tmp_62;
              }
              else 
#line 4159 
                   tmp_63 = 9223372036854775808UL;
              
#line 4159 
              tmp_64 = tmp_63;
            }
            else 
#line 4159 
                 tmp_64 = 0UL;
            
#line 4159 
            tmp_65 = tmp_64;
          }
          
#line 4159 
          tmp_67 = tmp_65;
        }
        else {
          int tmp_66;
          
#line 4159 
          tmp_66 = __ilog2_u64((unsigned long long)pending);
          
#line 4159 
          tmp_67 = 1UL << (tmp_66 + 1);
        }
        
#line 4159 
        tmp_68 = tmp_67;
      }
      else 
#line 4159 
           tmp_68 = 1UL;
      
#line 4159 
      tmp_70 = tmp_68;
    }
    else 
#line 4159 
         tmp_70 = __roundup_pow_of_two(pending + 1UL);
    
#line 4159 
    unsigned long _max2 = tmp_70;
    
#line 4159 
    if (_max1 > _max2) 
#line 4159 
                       tmp_71 = _max1; else 
#line 4159 
                                            tmp_71 = _max2;
    
#line 4159 
    tmp_72 = tmp_71;
  }
  
#line 4159 
  return tmp_72;
}


#line 4162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_get_ringparam(struct net_device *dev, struct ethtool_ringparam *ering)
{
  
#line 4165 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 4167 
  ering->rx_max_pending = 168U;
  
#line 4168 
  ering->tx_max_pending = 1024U;
  
#line 4170 
  ering->rx_pending = (unsigned int)sky2->rx_pending;
  
#line 4171 
  ering->tx_pending = (unsigned int)sky2->tx_pending;
  
#line 4172 
  return;
}


#line 4174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_set_ringparam(struct net_device *dev, struct ethtool_ringparam *ering)
{
  int __retres;
  unsigned long tmp_0;
  int tmp_1;
  
#line 4177 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 4179 
  if ((ering->rx_pending + 4294967288U > 160U || ering->tx_pending <= 38U) || ering->tx_pending > 1024U) {
    
#line 4183 
    __retres = -22;
    
#line 4183 
    goto return_label;
  }
  else ;
  
#line 4185 
  sky2_detach(dev);
  
#line 4187 
  sky2->rx_pending = (unsigned short)ering->rx_pending;
  
#line 4188 
  sky2->tx_pending = (unsigned short)ering->tx_pending;
  
#line 4189 
  tmp_0 = roundup_ring_size((unsigned long)sky2->tx_pending);
  
#line 4189 
  sky2->tx_ring_size = (unsigned short)tmp_0;
  
#line 4191 
  tmp_1 = sky2_reattach(dev);
  
#line 4191 
  __retres = tmp_1;
  return_label: 
#line 4191 
                return __retres;
}


#line 4194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_get_regs_len(struct net_device *dev)
{
  int __retres;
  
#line 4196 
  __retres = 16384;
  
#line 4196 
  return __retres;
}


#line 4199  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_reg_access_ok(struct sky2_hw *hw, unsigned int b)
{
  int __retres;
  
#line 4205 
  switch (b) {
    case (unsigned int)5: 
#line 4207 
    ;
    case (unsigned int)9: 
#line 4208 
    ;
    case 14U: case 15U: 
#line 4209 
    ;
    case (unsigned int)17: 
#line 4210 
    ;
    case (unsigned int)19: 
#line 4210 
    ;
    case 22U: case 23U: 
#line 4211 
    ;
    case (unsigned int)25: 
#line 4212 
    ;
    case (unsigned int)27: 
#line 4213 
    ;
    case (unsigned int)31: 
#line 4214 
    ;
    case 40U: case 41U: case 42U: case 43U: case 44U: case 45U: case 46U: case 47U: 
#line 4215 
    ;
    case (unsigned int)52: 
#line 4216 
    ;
    case (unsigned int)54: 
#line 4216 
    ;
    case 112U: case 113U: case 114U: case 115U: case 116U: 
#line 4217 
    ;
    
#line 4218 
    __retres = (unsigned int)hw->ports > 1U;
    
#line 4218 
    goto return_label;
    case (unsigned int)0: 
#line 4220 
    ;
    case (unsigned int)2: 
#line 4221 
    ;
    case (unsigned int)4: 
#line 4222 
    ;
    case (unsigned int)7: 
#line 4223 
    ;
    case (unsigned int)8: 
#line 4224 
    ;
    case 12U: case 13U: 
#line 4225 
    ;
    case (unsigned int)16: 
#line 4226 
    ;
    case (unsigned int)18: 
#line 4226 
    ;
    case 20U: case 21U: 
#line 4227 
    ;
    case (unsigned int)24: 
#line 4228 
    ;
    case (unsigned int)26: 
#line 4229 
    ;
    case 28U: case 29U: 
#line 4230 
    ;
    case (unsigned int)30: 
#line 4231 
    ;
    case 32U: case 33U: case 34U: case 35U: case 36U: case 37U: case 38U: case 39U: 
#line 4232 
    ;
    case (unsigned int)48: 
#line 4233 
    ;
    case (unsigned int)50: 
#line 4233 
    ;
    case 56U: case 57U: case 58U: case 59U: case 60U: 
#line 4234 
    ;
    case 80U: case 81U: case 82U: case 83U: case 84U: 
#line 4235 
    ;
    
#line 4236 
    __retres = 1;
    
#line 4236 
    goto return_label;
    default: 
#line 4238 
    ;
    
#line 4239 
    __retres = 0;
    
#line 4239 
    goto return_label;
  }
  return_label: 
#line 4205 
                return __retres;
}


#line 4247  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_get_regs(struct net_device *dev, struct ethtool_regs *regs, void *p)
{
  unsigned int b;
  
#line 4250 
  struct sky2_port const *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 4251 
  void const *io = (void const *)(sky2->hw)->regs;
  
#line 4254 
  regs->version = 1U;
  
#line 4256 
  b = 0U;
  
#line 4256 
  goto ldv_56671;
  ldv_56670: 
#line 4257 
  ;
  
#line 4258 
  if (b == 3U) 
#line 4259 
               memcpy_fromio(p + 16U,(void const volatile *)(io + 16U),112UL);
  else {
    int tmp_0;
    
#line 4260 
    tmp_0 = sky2_reg_access_ok(sky2->hw,b);
    
#line 4260 
    if (tmp_0 != 0) 
#line 4261 
                    memcpy_fromio(p,(void const volatile *)io,128UL); else 
                                                                    
#line 4263 
                                                                    memset(p,0,128UL);
  }
  
#line 4265 
  p += 128U;
  
#line 4266 
  io += 128U;
  
#line 4256 
  b += 1U;
  ldv_56671: 
#line 4257 
  ;
  
#line 4256 
  if (b <= 127U) 
#line 4258 
                 goto ldv_56670; else 
#line 4261 
                                      goto ldv_56672;
  ldv_56672: 
#line 4262 
  ;
  
#line 4263 
  return;
}


#line 4270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_get_eeprom_len(struct net_device *dev)
{
  int __retres;
  u16 reg2;
  
#line 4272 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 4273 
  struct sky2_hw *hw = sky2->hw;
  
#line 4276 
  reg2 = sky2_pci_read16((struct sky2_hw const *)hw,68U);
  
#line 4277 
  __retres = 1 << (((int)reg2 >> 14) + 8);
  
#line 4277 
  return __retres;
}


#line 4280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_vpd_wait(struct sky2_hw const *hw, int cap, u16 busy)
{
  int __retres;
  int tmp;
  u16 tmp_2;
  
#line 4282 
  unsigned long start = jiffies;
  
#line 4284 
  goto ldv_56696;
  ldv_56695: 
#line 4285 
  ;
  {
    unsigned long __dummy;
    unsigned long volatile __dummy2;
    
#line 4286 
    tmp = 1;
  }
  
#line 4286 
  if (tmp != 0) {
    int tmp_0;
    {
      unsigned long __dummy_0;
      unsigned long __dummy2_0;
      
#line 4286 
      tmp_0 = 1;
    }
    
#line 4286 
    if (tmp_0 != 0) {
      
#line 4286 
      if ((long)((start - jiffies) + 62UL) < 0L) {
        
#line 4287 
        dev_err((struct device const *)(& (hw->pdev)->dev),"VPD cycle timed out\n");
        
#line 4288 
        __retres = -110;
        
#line 4288 
        goto return_label;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 4290 
  if (1) 
#line 4290 
         __const_udelay(4295000UL);
  else {
    
#line 4290 
    unsigned long __ms = 1UL;
    {
      unsigned long tmp_1;
      
#line 4290 
      goto ldv_56693;
      ldv_56692: 
#line 4291 
      ;
      
#line 4290 
      __const_udelay(4295000UL);
      ldv_56693: 
#line 4292 
      ;
      
#line 4290 
      tmp_1 = __ms;
      
#line 4290 
      __ms -= 1UL;
      
#line 4290 
      ;
      
#line 4290 
      if (tmp_1 != 0UL) 
#line 4292 
                        goto ldv_56692; else 
#line 4295 
                                             goto ldv_56694;
      ldv_56694: 
#line 4296 
      ;
    }
  }
  ldv_56696: 
#line 4299 
  ;
  
#line 4284 
  tmp_2 = sky2_pci_read16(hw,(unsigned int)(cap + 2));
  
#line 4284 
  ;
  
#line 4284 
  if (((int)tmp_2 & 32768) == (int)busy) 
#line 4286 
                                         goto ldv_56695; else 
#line 4289 
                                                              goto ldv_56697;
  ldv_56697: 
#line 4290 
  ;
  
#line 4293 
  __retres = 0;
  return_label: 
#line 4293 
                return __retres;
}


#line 4296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_vpd_read(struct sky2_hw *hw, int cap, void *data, u16 offset, size_t length)
{
  
#line 4299 
  int rc = 0;
  
#line 4301 
  goto ldv_56712;
  ldv_56711: 
#line 4302 
  ;
  {
    u32 val;
    unsigned long tmp_0;
    
#line 4304 
    sky2_pci_write16(hw,(unsigned int)(cap + 2),(unsigned short)((int)offset));
    
#line 4305 
    rc = sky2_vpd_wait((struct sky2_hw const *)hw,cap,(unsigned short)0);
    
#line 4306 
    if (rc != 0) 
#line 4307 
                 goto ldv_56707; else ;
    
#line 4309 
    val = sky2_pci_read32((struct sky2_hw const *)hw,(unsigned int)(cap + 4));
    {
      unsigned long tmp;
      
#line 4311 
      unsigned long _min1 = 4UL;
      
#line 4311 
      size_t _min2 = length;
      
#line 4311 
      if (_min1 < _min2) 
#line 4311 
                         tmp = _min1; else 
#line 4311 
                                           tmp = _min2;
      
#line 4311 
      tmp_0 = tmp;
    }
    
#line 4311 
    ;
    
#line 4311 
    memcpy(data,(void const *)(& val),tmp_0);
    
#line 4312 
    offset = (unsigned short)((unsigned int)offset + 4U);
    
#line 4313 
    data += 4U;
    
#line 4314 
    length += 18446744073709551612UL;
  }
  ldv_56712: 
#line 4316 
  ;
  
#line 4301 
  if (length != 0UL) 
#line 4303 
                     goto ldv_56711; else 
#line 4306 
                                          goto ldv_56707;
  ldv_56707: 
#line 4307 
  ;
  
#line 4317 
  return rc;
}


#line 4320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_vpd_write(struct sky2_hw *hw, int cap, void const *data, u16 offset, unsigned int length)
{
  unsigned int i;
  
#line 4324 
  int rc = 0;
  
#line 4326 
  i = 0U;
  
#line 4326 
  goto ldv_56725;
  ldv_56724: 
#line 4327 
  ;
  {
    
#line 4327 
    u32 val = *((u32 *)(data + i));
    
#line 4329 
    sky2_pci_write32(hw,(unsigned int)(cap + 4),val);
    
#line 4330 
    sky2_pci_write32(hw,(unsigned int)(cap + 2),(unsigned int)offset | 32768U);
    
#line 4332 
    rc = sky2_vpd_wait((struct sky2_hw const *)hw,cap,(unsigned short)32768);
    
#line 4333 
    if (rc != 0) 
#line 4334 
                 goto ldv_56723; else ;
  }
  
#line 4326 
  i += 4U;
  ldv_56725: 
#line 4327 
  ;
  
#line 4326 
  if (i < length) 
#line 4328 
                  goto ldv_56724; else 
#line 4331 
                                       goto ldv_56723;
  ldv_56723: 
#line 4332 
  ;
  
#line 4336 
  return rc;
}


#line 4339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_get_eeprom(struct net_device *dev, struct ethtool_eeprom *eeprom, u8 *data)
{
  int __retres;
  int tmp_1;
  
#line 4342 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 4343 
  int cap = pci_find_capability((sky2->hw)->pdev,3);
  
#line 4345 
  if (cap == 0) {
    
#line 4346 
    __retres = -22;
    
#line 4346 
    goto return_label;
  }
  else ;
  
#line 4348 
  eeprom->magic = 2572528315U;
  
#line 4350 
  tmp_1 = sky2_vpd_read(sky2->hw,cap,(void *)data,(unsigned short)((int)((unsigned short)eeprom->offset)),(unsigned long)eeprom->len);
  
#line 4350 
  __retres = tmp_1;
  return_label: 
#line 4350 
                return __retres;
}


#line 4353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_set_eeprom(struct net_device *dev, struct ethtool_eeprom *eeprom, u8 *data)
{
  int __retres;
  int tmp_1;
  
#line 4356 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 4357 
  int cap = pci_find_capability((sky2->hw)->pdev,3);
  
#line 4359 
  if (cap == 0) {
    
#line 4360 
    __retres = -22;
    
#line 4360 
    goto return_label;
  }
  else ;
  
#line 4362 
  if (eeprom->magic != 2572528315U) {
    
#line 4363 
    __retres = -22;
    
#line 4363 
    goto return_label;
  }
  else ;
  
#line 4366 
  if ((eeprom->offset & 3U) != 0U || (eeprom->len & 3U) != 0U) {
    
#line 4367 
    __retres = -22;
    
#line 4367 
    goto return_label;
  }
  else ;
  
#line 4369 
  tmp_1 = sky2_vpd_write(sky2->hw,cap,(void const *)data,(unsigned short)((int)((unsigned short)eeprom->offset)),eeprom->len);
  
#line 4369 
  __retres = tmp_1;
  return_label: 
#line 4369 
                return __retres;
}


#line 4372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static netdev_features_t sky2_fix_features(struct net_device *dev, netdev_features_t features)
{
  
#line 4375 
  struct sky2_port const *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 4376 
  struct sky2_hw const *hw = (struct sky2_hw const *)sky2->hw;
  
#line 4381 
  if (dev->mtu > 1500U && (unsigned int)hw->chip_id == 180U) {
    
#line 4382 
    netdev_info((struct net_device const *)dev,"checksum offload not possible with jumbo frames\n");
    
#line 4383 
    features &= 18446744073709486052ULL;
  }
  else ;
  
#line 4387 
  if (((features & 8589934592ULL) != 0ULL && (features & 17179869184ULL) == 0ULL) && ((sky2->hw)->flags & 1024UL) != 0UL) {
    
#line 4390 
    netdev_info((struct net_device const *)dev,"receive hashing forces receive checksum\n");
    
#line 4391 
    features |= 17179869184ULL;
  }
  else ;
  
#line 4394 
  return features;
}


#line 4397  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_set_features(struct net_device *dev, netdev_features_t features)
{
  int __retres;
  
#line 4399 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 4400 
  netdev_features_t changed = dev->features ^ features;
  
#line 4402 
  if ((changed & 17179869184ULL) != 0ULL && ((sky2->hw)->flags & 32UL) == 0UL) {
    int tmp_0;
    
#line 4407 
    if ((features & 17179869184ULL) != 0ULL) 
#line 4407 
                                             tmp_0 = 8192; else 
#line 4407 
                                                                tmp_0 = 4096;
    
#line 4404 
    ;
    
#line 4404 
    ;
    
#line 4404 
    sky2_write32((struct sky2_hw const *)sky2->hw,rxqaddr[sky2->port] + 1076U,(unsigned int)tmp_0);
  }
  else ;
  
#line 4410 
  if ((changed & 8589934592ULL) != 0ULL) 
#line 4411 
                                         rx_set_rss(dev,features); else ;
  
#line 4413 
  if ((changed & 384ULL) != 0ULL) 
#line 4414 
                                  sky2_vlan_mode(dev,features); else ;
  
#line 4416 
  __retres = 0;
  
#line 4416 
  return __retres;
}


#line 4419  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static struct ethtool_ops const sky2_ethtool_ops = {.get_settings = & sky2_get_settings, .set_settings = & sky2_set_settings, .get_drvinfo = & sky2_get_drvinfo, .get_regs_len = & sky2_get_regs_len, .get_regs = & sky2_get_regs, .get_wol = & sky2_get_wol, .set_wol = & sky2_set_wol, .get_msglevel = & sky2_get_msglevel, .set_msglevel = & sky2_set_msglevel, .nway_reset = & sky2_nway_reset, .get_link = & ethtool_op_get_link, .get_eeprom_len = & sky2_get_eeprom_len, .get_eeprom = & sky2_get_eeprom, .set_eeprom = & sky2_set_eeprom, .get_coalesce = & sky2_get_coalesce, .set_coalesce = & sky2_set_coalesce, .get_ringparam = & sky2_get_ringparam, .set_ringparam = & sky2_set_ringparam, .get_pauseparam = & sky2_get_pauseparam, .set_pauseparam = & sky2_set_pauseparam, .self_test = (void (*)(struct net_device *, struct ethtool_test *, u64 *))0, .get_strings = & sky2_get_strings, .set_phys_id = & sky2_set_phys_id, .get_ethtool_stats = & sky2_get_ethtool_stats, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = & sky2_get_sset_count, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = (int (*)(struct net_device *, struct ethtool_ts_info *))0, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 4448  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static struct dentry *sky2_debug;

#line 4460  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static struct vpd_tag const vpd_tags[9U] = {{.tag = {(char)'P', (char)'N'}, .label = (char *)"Part Number"}, {.tag = {(char)'E', (char)'C'}, .label = (char *)"Engineering Level"}, {.tag = {(char)'M', (char)'N'}, .label = (char *)"Manufacturer"}, {.tag = {(char)'S', (char)'N'}, .label = (char *)"Serial Number"}, {.tag = {(char)'Y', (char)'A'}, .label = (char *)"Asset Tag"}, {.tag = {(char)'V', (char)'L'}, .label = (char *)"First Error Log Message"}, {.tag = {(char)'V', (char)'F'}, .label = (char *)"Second Error Log Message"}, {.tag = {(char)'V', (char)'B'}, .label = (char *)"Boot Agent ROM Configuration"}, {.tag = {(char)'V', (char)'E'}, .label = (char *)"EFI UNDI Configuration"}};

#line 4472  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_show_vpd(struct seq_file *seq, struct sky2_hw *hw)
{
  size_t vpd_size;
  loff_t offs;
  u8 len;
  unsigned char *buf;
  u16 reg2;
  char const *tmp;
  ssize_t tmp_1;
  
#line 4480 
  reg2 = sky2_pci_read16((struct sky2_hw const *)hw,68U);
  
#line 4481 
  vpd_size = (unsigned long)(1 << (((int)reg2 >> 14) + 8));
  
#line 4483 
  tmp = pci_name((struct pci_dev const *)hw->pdev);
  
#line 4483 
  ;
  
#line 4483 
  seq_printf(seq,"%s Product Data\n",tmp);
  
#line 4484 
  buf = (unsigned char *)kmalloc(vpd_size,208U);
  
#line 4485 
  if (buf == (unsigned char *)0U) {
    
#line 4486 
    seq_puts(seq,"no memory!\n");
    
#line 4487 
    goto return_label;
  }
  else ;
  
#line 4490 
  tmp_1 = pci_read_vpd(hw->pdev,0LL,vpd_size,(void *)buf);
  
#line 4490 
  if (tmp_1 < 0L) {
    
#line 4491 
    seq_puts(seq,"VPD read failed\n");
    
#line 4492 
    goto out;
  }
  else ;
  
#line 4495 
  if ((unsigned int)*buf != 130U) {
    
#line 4496 
    seq_printf(seq,"VPD tag mismatch: %#x\n",(int)*buf);
    
#line 4497 
    goto out;
  }
  else ;
  
#line 4499 
  len = *(buf + 1U);
  
#line 4500 
  if ((unsigned int)len == 0U || (unsigned long)len > vpd_size + 18446744073709551612UL) {
    
#line 4501 
    seq_printf(seq,"Invalid id length: %d\n",(int)len);
    
#line 4502 
    goto out;
  }
  else ;
  
#line 4505 
  seq_printf(seq,"%.*s\n",(int)len,buf + 3U);
  
#line 4506 
  offs = (long long)((int)len + 3);
  
#line 4508 
  goto ldv_56777;
  ldv_56776: 
#line 4509 
  ;
  {
    int i;
    int tmp_2;
    int tmp_3;
    
#line 4511 
    tmp_2 = memcmp((void const *)"RW",(void const *)(buf + offs),2UL);
    
#line 4511 
    if (tmp_2 == 0) 
#line 4512 
                    goto ldv_56769; else ;
    
#line 4513 
    len = *(buf + (offs + (loff_t)2U));
    
#line 4514 
    if ((unsigned long long)(((long long)len + offs) + 3LL) >= (unsigned long long)vpd_size) 
      
#line 4515 
      goto ldv_56769; else ;
    
#line 4517 
    i = 0;
    
#line 4517 
    goto ldv_56775;
    ldv_56774: 
#line 4518 
    ;
    
#line 4518 
    tmp_3 = memcmp((void const *)(& vpd_tags[i].tag),(void const *)(buf + offs),2UL);
    
#line 4518 
    if (tmp_3 == 0) {
      
#line 4519 
      seq_printf(seq," %s: %.*s\n",vpd_tags[i].label,(int)len,buf + (offs + (loff_t)3U));
      
#line 4521 
      goto ldv_56773;
    }
    else ;
    
#line 4517 
    i += 1;
    ldv_56775: 
#line 4518 
    ;
    
#line 4517 
    if ((unsigned int)i <= 8U) 
#line 4519 
                               goto ldv_56774; else 
#line 4522 
                                                    goto ldv_56773;
    ldv_56773: 
#line 4523 
    ;
    
#line 4524 
    offs = (long long)((int)len + 3) + offs;
  }
  ldv_56777: 
#line 4526 
  ;
  
#line 4508 
  if ((unsigned long long)(vpd_size + 18446744073709551612UL) > (unsigned long long)offs) 
    
#line 4510 
    goto ldv_56776; else 
#line 4513 
                         goto ldv_56769;
  ldv_56769: 
#line 4514 
  ;
  out: 
#line 4526 
  ;
  
#line 4527 
  kfree((void const *)buf);
  return_label: 
#line 4528 
                return;
}


#line 4530  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_debug_show(struct seq_file *seq, void *v)
{
  int __retres;
  unsigned int idx;
  unsigned int last;
  int sop;
  u32 tmp_0;
  u32 tmp_1;
  u32 tmp_2;
  int tmp_4;
  bool tmp_3;
  u16 tmp_5;
  u16 tmp_6;
  u16 tmp_8;
  int tmp_7;
  u16 tmp_11;
  u16 tmp_12;
  u16 tmp_13;
  
#line 4532 
  struct net_device *dev = (struct net_device *)seq->private;
  
#line 4533 
  struct sky2_port const *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 4534 
  struct sky2_hw *hw = sky2->hw;
  
#line 4535 
  unsigned int port = sky2->port;
  
#line 4539 
  sky2_show_vpd(seq,hw);
  
#line 4543 
  tmp_0 = sky2_read32((struct sky2_hw const *)hw,44U);
  
#line 4542 
  tmp_1 = sky2_read32((struct sky2_hw const *)hw,12U);
  
#line 4541 
  tmp_2 = sky2_read32((struct sky2_hw const *)hw,8U);
  
#line 4541 
  ;
  
#line 4541 
  seq_printf(seq,"\nIRQ src=%x mask=%x control=%x\n",tmp_2,tmp_1,tmp_0);
  
#line 4546 
  tmp_3 = netif_running((struct net_device const *)dev);
  
#line 4546 
  if (tmp_3) 
#line 4546 
             tmp_4 = 0; else 
#line 4546 
                             tmp_4 = 1;
  
#line 4546 
  if (tmp_4) {
    
#line 4547 
    seq_printf(seq,"network not running\n");
    
#line 4548 
    __retres = 0;
    
#line 4548 
    goto return_label;
  }
  else ;
  
#line 4551 
  napi_disable(& hw->napi);
  
#line 4552 
  tmp_5 = sky2_read16((struct sky2_hw const *)hw,3740U);
  
#line 4552 
  last = (unsigned int)tmp_5;
  
#line 4554 
  seq_printf(seq,"Status ring %u\n",hw->st_size);
  
#line 4555 
  if (hw->st_idx == last) 
#line 4556 
                          seq_puts(seq,"Status ring (empty)\n");
  else {
    
#line 4558 
    seq_puts(seq,"Status ring\n");
    
#line 4559 
    idx = hw->st_idx;
    
#line 4559 
    goto ldv_56791;
    ldv_56790: 
#line 4560 
    ;
    {
      
#line 4561 
      struct sky2_status_le const *le = (struct sky2_status_le const *)(hw->st_le + idx);
      
#line 4562 
      seq_printf(seq,"[%d] %#x %d %#x\n",idx,(int)le->opcode,(int)le->length,le->status);
    }
    
#line 4560 
    idx = (idx + 1U) & (hw->st_size + 4294967295U);
    ldv_56791: 
#line 4561 
    ;
    
#line 4559 
    if (idx != last && hw->st_size > idx) 
#line 4561 
                                          goto ldv_56790; else 
#line 4564 
                                                               goto ldv_56792;
    ldv_56792: 
#line 4565 
    ;
    
#line 4565 
    seq_puts(seq,"\n");
  }
  
#line 4571 
  tmp_6 = sky2_read16((struct sky2_hw const *)hw,txqaddr[port] + 1060U);
  
#line 4570 
  if (port == 0U) 
#line 4570 
                  tmp_7 = 3728; else 
#line 4570 
                                     tmp_7 = 3732;
  
#line 4570 
  ;
  
#line 4570 
  tmp_8 = sky2_read16((struct sky2_hw const *)hw,(unsigned int)tmp_7);
  
#line 4568 
  ;
  
#line 4568 
  ;
  
#line 4568 
  ;
  
#line 4568 
  seq_printf(seq,"Tx ring pending=%u...%u report=%d done=%d\n",(int)sky2->tx_cons,(int)sky2->tx_prod,(int)tmp_8,(int)tmp_6);
  
#line 4574 
  sop = 1;
  
#line 4575 
  idx = (unsigned int)sky2->tx_next;
  
#line 4575 
  goto ldv_56805;
  ldv_56804: 
#line 4576 
  ;
  {
    
#line 4577 
    struct sky2_tx_le const *le_0 = (struct sky2_tx_le const *)(sky2->tx_le + idx);
    
#line 4578 
    u32 a = le_0->addr;
    
#line 4580 
    if (sop != 0) 
#line 4581 
                  seq_printf(seq,"%u:",idx); else ;
    
#line 4582 
    sop = 0;
    
#line 4584 
    switch ((int)le_0->opcode & -129) {
      int tmp_10;
      case 33: 
#line 4585 
      ;
      
#line 4586 
      seq_printf(seq," %#x:",a);
      
#line 4587 
      goto ldv_56796;
      case 36: 
#line 4588 
      ;
      
#line 4589 
      seq_printf(seq," mtu=%d",a);
      
#line 4590 
      goto ldv_56796;
      case 34: 
#line 4591 
      ;
      
#line 4592 
      if (0 != 0) 
#line 4592 
                  tmp_10 = (int)((unsigned short)(((int)le_0->length << 8) | ((int)le_0->length >> 8)));
      else {
        __u16 tmp_9;
        
#line 4592 
        tmp_9 = __fswab16((unsigned short)((int)le_0->length));
        
#line 4592 
        tmp_10 = (int)tmp_9;
      }
      
#line 4592 
      ;
      
#line 4592 
      seq_printf(seq," vlan=%d",tmp_10);
      
#line 4593 
      goto ldv_56796;
      case 31: 
#line 4594 
      ;
      
#line 4595 
      seq_printf(seq," csum=%#x",a);
      
#line 4596 
      goto ldv_56796;
      case 67: 
#line 4597 
      ;
      
#line 4598 
      seq_printf(seq," tso=%#x(%d)",a,(int)le_0->length);
      
#line 4599 
      goto ldv_56796;
      case 65: 
#line 4600 
      ;
      
#line 4601 
      seq_printf(seq," %#x(%d)",a,(int)le_0->length);
      
#line 4602 
      goto ldv_56796;
      case 64: 
#line 4603 
      ;
      
#line 4604 
      seq_printf(seq," frag=%#x(%d)",a,(int)le_0->length);
      
#line 4605 
      goto ldv_56796;
      default: 
#line 4606 
      ;
      
#line 4607 
      seq_printf(seq," op=%#x,%#x(%d)",(int)le_0->opcode,a,(int)le_0->length);
    }
    ldv_56796: 
#line 4611 
    ;
    
#line 4611 
    if ((int)le_0->ctrl < 0) {
      
#line 4612 
      seq_putc(seq,(char)10);
      
#line 4613 
      sop = 1;
    }
    else ;
  }
  
#line 4576 
  idx = (idx + 1U) & (unsigned int)((int)sky2->tx_ring_size + -1);
  ldv_56805: 
#line 4577 
  ;
  
#line 4575 
  if ((unsigned int)sky2->tx_prod != idx && (unsigned int)sky2->tx_ring_size > idx) 
    
#line 4577 
    goto ldv_56804; else 
#line 4580 
                         goto ldv_56806;
  ldv_56806: 
#line 4581 
  ;
  
#line 4620 
  tmp_11 = sky2_read16((struct sky2_hw const *)hw,rxqaddr[port] + 1108U);
  
#line 4619 
  tmp_12 = sky2_read16((struct sky2_hw const *)hw,rxqaddr[port] + 1124U);
  
#line 4618 
  tmp_13 = sky2_read16((struct sky2_hw const *)hw,rxqaddr[port] + 1120U);
  
#line 4617 
  ;
  
#line 4617 
  seq_printf(seq,"\nRx ring hw get=%d put=%d last=%d\n",(int)tmp_13,(int)tmp_12,(int)tmp_11);
  
#line 4622 
  sky2_read32((struct sky2_hw const *)hw,40U);
  
#line 4623 
  napi_enable(& hw->napi);
  
#line 4624 
  __retres = 0;
  return_label: 
#line 4624 
                return __retres;
}


#line 4627  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_debug_open(struct inode *inode, struct file *file)
{
  int tmp;
  
#line 4629 
  tmp = single_open(file,& sky2_debug_show,inode->i_private);
  
#line 4629 
  return tmp;
}


#line 4632  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static struct file_operations const sky2_debug_fops = {.owner = & __this_module, .llseek = & seq_lseek, .read = & seq_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & sky2_debug_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & single_release, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 4644  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_device_event(struct notifier_block *unused, unsigned long event, void *ptr)
{
  int __retres;
  
#line 4647 
  struct net_device *dev = netdev_notifier_info_to_dev((struct netdev_notifier_info const *)ptr);
  
#line 4648 
  struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 4650 
  if ((dev->netdev_ops)->ndo_open != & sky2_open || sky2_debug == (struct dentry *)0) {
    
#line 4651 
    __retres = 0;
    
#line 4651 
    goto return_label;
  }
  else ;
  
#line 4653 
  switch (event) {
    bool tmp_1;
    case (unsigned long)10: 
#line 4654 
    ;
    
#line 4655 
    if (sky2->debugfs != (struct dentry *)0) 
#line 4656 
                                             sky2->debugfs = debugfs_rename(sky2_debug,sky2->debugfs,sky2_debug,(char const *)(& dev->name)); else ;
    
#line 4659 
    goto ldv_56820;
    case (unsigned long)9: 
#line 4661 
    ;
    
#line 4662 
    if (sky2->debugfs != (struct dentry *)0) {
      
#line 4663 
      netdev_printk("\001",(struct net_device const *)dev,"remove debugfs\n");
      
#line 4664 
      ldv_debugfs_remove_95(sky2->debugfs);
      
#line 4665 
      sky2->debugfs = (struct dentry *)0;
    }
    else ;
    
#line 4667 
    goto ldv_56820;
    case (unsigned long)1: 
#line 4669 
    ;
    
#line 4670 
    sky2->debugfs = ldv_debugfs_create_file_96((char const *)(& dev->name),(unsigned short)292,sky2_debug,(void *)dev,& sky2_debug_fops);
    
#line 4673 
    tmp_1 = IS_ERR((void const *)sky2->debugfs);
    
#line 4673 
    if ((int)tmp_1 != 0) 
#line 4674 
                         sky2->debugfs = (struct dentry *)0; else ;
  }
  ldv_56820: 
#line 4677 
  ;
  
#line 4677 
  __retres = 0;
  return_label: 
#line 4677 
                return __retres;
}


#line 4680  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static struct notifier_block sky2_notifier = {.notifier_call = & sky2_device_event, .next = (struct notifier_block *)0, .priority = 0};

#line 4685  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_debug_init(void)
{
  struct dentry *ent;
  
#line 4689 
  ent = debugfs_create_dir("sky2",(struct dentry *)0);
  
#line 4690 
  if (ent == (struct dentry *)0) 
#line 4691 
                                 goto return_label;
  else {
    bool tmp;
    
#line 4690 
    tmp = IS_ERR((void const *)ent);
    
#line 4690 
    if ((int)tmp != 0) 
#line 4691 
                       goto return_label; else ;
  }
  
#line 4693 
  sky2_debug = ent;
  
#line 4694 
  register_netdevice_notifier(& sky2_notifier);
  return_label: 
#line 4695 
                return;
}


#line 4697  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_debug_cleanup(void)
{
  
#line 4699 
  if (sky2_debug != (struct dentry *)0) {
    
#line 4700 
    unregister_netdevice_notifier(& sky2_notifier);
    
#line 4701 
    ldv_debugfs_remove_97(sky2_debug);
    
#line 4702 
    sky2_debug = (struct dentry *)0;
  }
  else ;
  
#line 4704 
  return;
}


#line 4713  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static struct net_device_ops const sky2_netdev_ops[2U] = {{.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & sky2_open, .ndo_stop = & sky2_close, .ndo_start_xmit = & sky2_xmit_frame, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & sky2_set_multicast, .ndo_set_mac_address = & sky2_set_mac_address, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & sky2_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & sky2_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & sky2_tx_timeout, .ndo_get_stats64 = & sky2_get_stats, .ndo_get_stats = (struct net_device_stats *(*)(struct net_device *))0, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = & sky2_netpoll, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = & sky2_fix_features, .ndo_set_features = & sky2_set_features, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0}, {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & sky2_open, .ndo_stop = & sky2_close, .ndo_start_xmit = & sky2_xmit_frame, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & sky2_set_multicast, .ndo_set_mac_address = & sky2_set_mac_address, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & sky2_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & sky2_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & sky2_tx_timeout, .ndo_get_stats64 = & sky2_get_stats, .ndo_get_stats = (struct net_device_stats *(*)(struct net_device *))0, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = (void (*)(struct net_device *))0, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = & sky2_fix_features, .ndo_set_features = & sky2_set_features, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0}};

#line 4748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static struct net_device *sky2_init_netdev(struct sky2_hw *hw, unsigned int port, int highmem, int wol)
{
  struct net_device *__retres;
  struct sky2_port *sky2;
  void const *iap;
  u32 tmp_1;
  unsigned long tmp_2;
  
#line 4752 
  struct net_device *dev = ldv_alloc_etherdev_mqs_98(320,1U,1U);
  
#line 4755 
  if (dev == (struct net_device *)0) {
    
#line 4756 
    __retres = (struct net_device *)0;
    
#line 4756 
    goto return_label;
  }
  else ;
  
#line 4758 
  dev->dev.parent = & (hw->pdev)->dev;
  
#line 4759 
  dev->irq = (int)(hw->pdev)->irq;
  
#line 4760 
  dev->ethtool_ops = & sky2_ethtool_ops;
  
#line 4761 
  dev->watchdog_timeo = 1250;
  
#line 4762 
  dev->netdev_ops = & sky2_netdev_ops[port];
  
#line 4764 
  sky2 = (struct sky2_port *)netdev_priv((struct net_device const *)dev);
  
#line 4765 
  sky2->netdev = dev;
  
#line 4766 
  sky2->hw = hw;
  
#line 4767 
  sky2->msg_enable = netif_msg_init(debug,(int)default_msg);
  
#line 4769 
  u64_stats_init(& sky2->tx_stats.syncp);
  
#line 4770 
  u64_stats_init(& sky2->rx_stats.syncp);
  
#line 4773 
  sky2->flags = (unsigned short)6U;
  
#line 4774 
  if ((unsigned int)hw->chip_id != 179U) 
#line 4775 
                                         dev->hw_features |= 17179869184ULL; else ;
  
#line 4777 
  sky2->flow_mode = FC_BOTH;
  
#line 4779 
  sky2->duplex = (unsigned char)255U;
  
#line 4780 
  sky2->speed = (unsigned short)65535U;
  
#line 4781 
  tmp_1 = sky2_supported_modes((struct sky2_hw const *)hw);
  
#line 4781 
  sky2->advertising = (unsigned short)tmp_1;
  
#line 4782 
  sky2->wol = (unsigned char)wol;
  
#line 4784 
  spinlock_check(& sky2->phy_lock);
  {
    struct lock_class_key __key;
    
#line 4784 
    __raw_spin_lock_init(& sky2->phy_lock.__anonCompField_spinlock_18.rlock,"&(&sky2->phy_lock)->rlock",& __key);
  }
  
#line 4786 
  sky2->tx_pending = (unsigned short)63U;
  
#line 4787 
  tmp_2 = roundup_ring_size(63UL);
  
#line 4787 
  sky2->tx_ring_size = (unsigned short)tmp_2;
  
#line 4788 
  sky2->rx_pending = (unsigned short)168U;
  
#line 4790 
  hw->dev[port] = dev;
  
#line 4792 
  sky2->port = port;
  
#line 4794 
  dev->hw_features |= 65539ULL;
  
#line 4796 
  if (highmem != 0) 
#line 4797 
                    dev->features |= 32ULL; else ;
  
#line 4800 
  if ((hw->flags & 256UL) == 0UL) 
#line 4801 
                                  dev->hw_features |= 8589934592ULL; else ;
  
#line 4803 
  if ((hw->flags & 512UL) == 0UL) {
    
#line 4804 
    dev->hw_features |= 384ULL;
    
#line 4806 
    dev->vlan_features |= 65539ULL;
  }
  else ;
  
#line 4809 
  dev->features |= dev->hw_features;
  
#line 4815 
  iap = of_get_mac_address((hw->pdev)->dev.of_node);
  
#line 4816 
  if (iap != (void const *)0) 
#line 4817 
                              memcpy((void *)dev->dev_addr,iap,6UL); else 
                                                                    
#line 4819 
                                                                    memcpy_fromio((void *)dev->dev_addr,(void const volatile *)(hw->regs + (port * 8U + 256U)),6UL);
  
#line 4822 
  __retres = dev;
  return_label: 
#line 4822 
                return __retres;
}


#line 4825  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_show_addr(struct net_device *dev)
{
  
#line 4827 
  struct sky2_port const *sky2 = netdev_priv((struct net_device const *)dev);
  
#line 4829 
  if ((sky2->msg_enable & 2U) != 0U) 
#line 4829 
                                     netdev_info((struct net_device const *)dev,"addr %pM\n",dev->dev_addr); else ;
  
#line 4830 
  return;
}


#line 4833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static irqreturn_t sky2_test_intr(int irq, void *dev_id)
{
  irqreturn_t __retres;
  
#line 4835 
  struct sky2_hw *hw = (struct sky2_hw *)dev_id;
  
#line 4836 
  u32 status = sky2_read32((struct sky2_hw const *)hw,28U);
  
#line 4838 
  if (status == 0U) {
    
#line 4839 
    __retres = IRQ_NONE;
    
#line 4839 
    goto return_label;
  }
  else ;
  
#line 4841 
  if ((status & 33554432U) != 0U) {
    
#line 4842 
    hw->flags |= 1UL;
    
#line 4843 
    __wake_up(& hw->msi_wait,3U,1,(void *)0);
    
#line 4844 
    sky2_write8((struct sky2_hw const *)hw,4U,(unsigned char)64);
  }
  else ;
  
#line 4846 
  sky2_write32((struct sky2_hw const *)hw,44U,2U);
  
#line 4848 
  __retres = IRQ_HANDLED;
  return_label: 
#line 4848 
                return __retres;
}


#line 4852  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_test_msi(struct sky2_hw *hw)
{
  int __retres;
  int err;
  
#line 4854 
  struct pci_dev *pdev = hw->pdev;
  {
    struct lock_class_key __key;
    
#line 4857 
    __init_waitqueue_head(& hw->msi_wait,"&hw->msi_wait",& __key);
  }
  
#line 4859 
  err = ldv_request_irq_99(pdev->irq,& sky2_test_intr,0UL,"sky2",(void *)hw);
  
#line 4860 
  if (err != 0) {
    
#line 4861 
    dev_err((struct device const *)(& pdev->dev),"cannot assign irq %d\n",pdev->irq);
    
#line 4862 
    __retres = err;
    
#line 4862 
    goto return_label;
  }
  else ;
  
#line 4865 
  sky2_write32((struct sky2_hw const *)hw,12U,33554432U);
  
#line 4867 
  sky2_write8((struct sky2_hw const *)hw,4U,(unsigned char)128);
  
#line 4868 
  sky2_read8((struct sky2_hw const *)hw,4U);
  {
    
#line 4870 
    long __ret = 25L;
    
#line 4870 
    __might_sleep("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c",4870,0);
    {
      int tmp_2;
      {
        
#line 4870 
        bool __cond_0 = (_Bool)((hw->flags & 1UL) != 0UL);
        
#line 4870 
        if ((int)__cond_0 != 0 && __ret == 0L) 
#line 4870 
                                               __ret = 1L; else ;
        
#line 4870 
        tmp_2 = ((int)__cond_0 != 0 || __ret == 0L) != 0;
      }
      
#line 4870 
      if (tmp_2 == 0) {
        long tmp_1;
        {
          wait_queue_t __wait;
          
#line 4870 
          long __ret_0 = 25L;
          
#line 4870 
          INIT_LIST_HEAD(& __wait.task_list);
          
#line 4870 
          __wait.flags = 0U;
          ldv_56868: 
#line 4873 
          ;
          {
            int tmp_0;
            
#line 4870 
            long __int = prepare_to_wait_event(& hw->msi_wait,& __wait,2);
            {
              
#line 4870 
              bool __cond = (_Bool)((hw->flags & 1UL) != 0UL);
              
#line 4870 
              if ((int)__cond != 0 && __ret_0 == 0L) 
#line 4870 
                                                     __ret_0 = 1L; else ;
              
#line 4870 
              tmp_0 = ((int)__cond != 0 || __ret_0 == 0L) != 0;
            }
            
#line 4870 
            if (tmp_0 != 0) 
#line 4870 
                            goto ldv_56867; else ;
            
#line 4870 
            __ret_0 = schedule_timeout(__ret_0);
          }
          
#line 4870 
          goto ldv_56868;
          ldv_56867: 
#line 4871 
          ;
          
#line 4870 
          finish_wait(& hw->msi_wait,& __wait);
          __out_0: 
#line 4870 
          ;
          
#line 4870 
          tmp_1 = __ret_0;
        }
        
#line 4870 
        __ret = tmp_1;
      }
      else ;
    }
    
#line 4870 
    long tmp_3 = __ret;
  }
  
#line 4872 
  if ((hw->flags & 1UL) == 0UL) {
    
#line 4874 
    _dev_info((struct device const *)(& pdev->dev),"No interrupt generated using MSI, ");
    
#line 4877 
    err = -95;
    
#line 4878 
    sky2_write8((struct sky2_hw const *)hw,4U,(unsigned char)64);
  }
  else ;
  
#line 4881 
  sky2_write32((struct sky2_hw const *)hw,12U,0U);
  
#line 4882 
  sky2_read32((struct sky2_hw const *)hw,12U);
  
#line 4884 
  ldv_free_irq_100(pdev->irq,(void *)hw);
  
#line 4886 
  __retres = err;
  return_label: 
#line 4886 
                return __retres;
}


#line 4890  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static char const *sky2_name(u8 chipid, char *buf, int sz)
{
  char const *__retres;
  
#line 4892 
  char const *name[12U] = {"XL", "EC Ultra", "Extreme", "EC", "FE", "FE+", "Supreme", "UL 2", "Unknown", "Optima", "OptimaEEE", "Optima 2"};
  
#line 4907 
  if ((unsigned int)chipid + 77U <= 11U) 
#line 4908 
                                         strncpy(buf,name[(int)chipid + -179],(unsigned long)sz); else 
                                                                    
#line 4910 
                                                                    snprintf(buf,(unsigned long)sz,"(chip %#x)",(int)chipid);
  
#line 4911 
  __retres = (char const *)buf;
  
#line 4911 
  return __retres;
}


#line 4914  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_probe(struct pci_dev *pdev, struct pci_device_id const *ent)
{
  int __retres;
  struct net_device *dev;
  struct net_device *dev1;
  struct sky2_hw *hw;
  int err;
  int wol_default;
  u32 reg;
  char buf1[16U];
  bool tmp;
  void *tmp_3;
  size_t tmp_0;
  size_t tmp_2;
  char const *tmp_1;
  char const *tmp_4;
  char const *tmp_6;
  
#line 4918 
  int using_dac = 0;
  
#line 4922 
  err = pci_enable_device(pdev);
  
#line 4923 
  if (err != 0) {
    
#line 4924 
    dev_err((struct device const *)(& pdev->dev),"cannot enable PCI device\n");
    
#line 4925 
    goto err_out;
  }
  else ;
  
#line 4933 
  err = pci_read_config_dword((struct pci_dev const *)pdev,68,& reg);
  
#line 4934 
  if (err != 0) {
    
#line 4935 
    dev_err((struct device const *)(& pdev->dev),"PCI read config failed\n");
    
#line 4936 
    goto err_out_disable;
  }
  else ;
  
#line 4939 
  if (reg == 4294967295U) {
    
#line 4940 
    dev_err((struct device const *)(& pdev->dev),"PCI configuration read error\n");
    
#line 4941 
    err = -5;
    
#line 4942 
    goto err_out_disable;
  }
  else ;
  
#line 4945 
  err = pci_request_regions(pdev,"sky2");
  
#line 4946 
  if (err != 0) {
    
#line 4947 
    dev_err((struct device const *)(& pdev->dev),"cannot obtain PCI resources\n");
    
#line 4948 
    goto err_out_disable;
  }
  else ;
  
#line 4951 
  pci_set_master(pdev);
  
#line 4954 
  err = pci_set_dma_mask(pdev,18446744073709551615ULL);
  
#line 4953 
  if (err == 0) {
    
#line 4955 
    using_dac = 1;
    
#line 4956 
    err = pci_set_consistent_dma_mask(pdev,18446744073709551615ULL);
    
#line 4957 
    if (err < 0) {
      
#line 4958 
      dev_err((struct device const *)(& pdev->dev),"unable to obtain 64 bit DMA ");
      
#line 4960 
      goto err_out_free_regions;
    }
    else ;
  }
  else {
    
#line 4963 
    err = pci_set_dma_mask(pdev,4294967295ULL);
    
#line 4964 
    if (err != 0) {
      
#line 4965 
      dev_err((struct device const *)(& pdev->dev),"no usable DMA configuration\n");
      
#line 4966 
      goto err_out_free_regions;
    }
    else ;
  }
  
#line 4983 
  tmp = device_may_wakeup(& pdev->dev);
  
#line 4983 
  if ((int)tmp != 0) 
#line 4983 
                     wol_default = 32; else 
#line 4983 
                                            wol_default = 0;
  
#line 4985 
  err = -12;
  
#line 4987 
  tmp_0 = strlen("sky2");
  
#line 4988 
  tmp_1 = pci_name((struct pci_dev const *)pdev);
  
#line 4988 
  tmp_2 = strlen(tmp_1);
  
#line 4987 
  tmp_3 = kzalloc((tmp_0 + tmp_2) + 649UL,208U);
  
#line 4987 
  hw = (struct sky2_hw *)tmp_3;
  
#line 4989 
  if (hw == (struct sky2_hw *)0) 
#line 4990 
                                 goto err_out_free_regions; else ;
  
#line 4992 
  hw->pdev = pdev;
  
#line 4993 
  tmp_4 = pci_name((struct pci_dev const *)pdev);
  
#line 4993 
  ;
  
#line 4993 
  sprintf((char *)(& hw->irq_name),"sky2",tmp_4);
  
#line 4995 
  hw->regs = ioremap_nocache(pdev->resource[0].start,16384UL);
  
#line 4996 
  if (hw->regs == (void *)0) {
    
#line 4997 
    dev_err((struct device const *)(& pdev->dev),"cannot map device registers\n");
    
#line 4998 
    goto err_out_free_hw;
  }
  else ;
  
#line 5001 
  err = sky2_init(hw);
  
#line 5002 
  if (err != 0) 
#line 5003 
                goto err_out_iounmap; else ;
  
#line 5006 
  hw->st_size = (unsigned int)hw->ports * 2048U;
  
#line 5007 
  hw->st_le = (struct sky2_status_le *)pci_alloc_consistent(pdev,(unsigned long)hw->st_size * 8UL,& hw->st_dma);
  
#line 5009 
  if (hw->st_le == (struct sky2_status_le *)0) {
    
#line 5010 
    err = -12;
    
#line 5011 
    goto err_out_reset;
  }
  else ;
  
#line 5014 
  ;
  
#line 5014 
  tmp_6 = sky2_name((unsigned char)((int)hw->chip_id),(char *)(& buf1),16);
  
#line 5014 
  ;
  
#line 5014 
  _dev_info((struct device const *)(& pdev->dev),"Yukon-2 %s chip revision %d\n",tmp_6,(int)hw->chip_rev);
  
#line 5017 
  sky2_reset(hw);
  
#line 5019 
  dev = sky2_init_netdev(hw,0U,using_dac,wol_default);
  
#line 5020 
  if (dev == (struct net_device *)0) {
    
#line 5021 
    err = -12;
    
#line 5022 
    goto err_out_free_pci;
  }
  else ;
  
#line 5025 
  if (disable_msi == 0) {
    int tmp_7;
    
#line 5025 
    tmp_7 = pci_enable_msi_exact(pdev,1);
    
#line 5025 
    if (tmp_7 == 0) {
      
#line 5026 
      err = sky2_test_msi(hw);
      
#line 5027 
      if (err != 0) {
        
#line 5028 
        pci_disable_msi(pdev);
        
#line 5029 
        if (err != -95) 
#line 5030 
                        goto err_out_free_netdev; else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 5034 
  netif_napi_add(dev,& hw->napi,& sky2_poll,64);
  
#line 5036 
  err = ldv_register_netdev_101(dev);
  
#line 5037 
  if (err != 0) {
    
#line 5038 
    dev_err((struct device const *)(& pdev->dev),"cannot register net device\n");
    
#line 5039 
    goto err_out_free_netdev;
  }
  else ;
  
#line 5042 
  netif_carrier_off(dev);
  
#line 5044 
  sky2_show_addr(dev);
  
#line 5046 
  if ((unsigned int)hw->ports > 1U) {
    
#line 5047 
    dev1 = sky2_init_netdev(hw,1U,using_dac,wol_default);
    
#line 5048 
    if (dev1 == (struct net_device *)0) {
      
#line 5049 
      err = -12;
      
#line 5050 
      goto err_out_unregister;
    }
    else ;
    
#line 5053 
    err = ldv_register_netdev_102(dev1);
    
#line 5054 
    if (err != 0) {
      
#line 5055 
      dev_err((struct device const *)(& pdev->dev),"cannot register second net device\n");
      
#line 5056 
      goto err_out_free_dev1;
    }
    else ;
    
#line 5059 
    err = sky2_setup_irq(hw,(char const *)(& hw->irq_name));
    
#line 5060 
    if (err != 0) 
#line 5061 
                  goto err_out_unregister_dev1; else ;
    
#line 5063 
    sky2_show_addr(dev1);
  }
  else ;
  {
    struct lock_class_key __key;
    
#line 5066 
    init_timer_key(& hw->watchdog_timer,0U,"((&hw->watchdog_timer))",& __key);
  }
  
#line 5066 
  hw->watchdog_timer.function = & sky2_watchdog;
  
#line 5066 
  hw->watchdog_timer.data = (unsigned long)hw;
  {
    struct lock_class_key __key_0;
    
#line 5067 
    __init_work(& hw->restart_work,0);
    
#line 5067 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 5067 
    hw->restart_work.data = __constr_expr_37;
    
#line 5067 
    lockdep_init_map(& hw->restart_work.lockdep_map,"(&hw->restart_work)",& __key_0,0);
    
#line 5067 
    INIT_LIST_HEAD(& hw->restart_work.entry);
    
#line 5067 
    hw->restart_work.func = & sky2_restart;
  }
  
#line 5069 
  pci_set_drvdata(pdev,(void *)hw);
  
#line 5070 
  pdev->d3_delay = 150U;
  
#line 5072 
  __retres = 0;
  
#line 5072 
  goto return_label;
  err_out_unregister_dev1: 
#line 5074 
  ;
  
#line 5075 
  ldv_unregister_netdev_103(dev1);
  err_out_free_dev1: 
#line 5076 
  ;
  
#line 5077 
  ldv_free_netdev_104(dev1);
  err_out_unregister: 
#line 5078 
  ;
  
#line 5079 
  ldv_unregister_netdev_105(dev);
  err_out_free_netdev: 
#line 5080 
  ;
  
#line 5081 
  if ((hw->flags & 1UL) != 0UL) 
#line 5082 
                                pci_disable_msi(pdev); else ;
  
#line 5083 
  ldv_free_netdev_106(dev);
  err_out_free_pci: 
#line 5084 
  ;
  
#line 5085 
  pci_free_consistent(pdev,(unsigned long)hw->st_size * 8UL,(void *)hw->st_le,hw->st_dma);
  err_out_reset: 
#line 5087 
  ;
  
#line 5088 
  sky2_write8((struct sky2_hw const *)hw,4U,(unsigned char)1);
  err_out_iounmap: 
#line 5089 
  ;
  
#line 5090 
  iounmap((void volatile *)hw->regs);
  err_out_free_hw: 
#line 5091 
  ;
  
#line 5092 
  kfree((void const *)hw);
  err_out_free_regions: 
#line 5093 
  ;
  
#line 5094 
  pci_release_regions(pdev);
  err_out_disable: 
#line 5095 
  ;
  
#line 5096 
  pci_disable_device(pdev);
  err_out: 
#line 5097 
  ;
  
#line 5098 
  __retres = err;
  return_label: 
#line 5098 
                return __retres;
}


#line 5101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_remove(struct pci_dev *pdev)
{
  int i;
  
#line 5103 
  struct sky2_hw *hw = pci_get_drvdata(pdev);
  
#line 5106 
  if (hw == (struct sky2_hw *)0) 
#line 5107 
                                 goto return_label; else ;
  
#line 5109 
  ldv_del_timer_sync_107(& hw->watchdog_timer);
  
#line 5110 
  cancel_work_sync(& hw->restart_work);
  
#line 5112 
  i = (int)hw->ports + -1;
  
#line 5112 
  goto ldv_56909;
  ldv_56908: 
#line 5113 
  ;
  
#line 5113 
  ldv_unregister_netdev_108(hw->dev[i]);
  
#line 5112 
  i -= 1;
  ldv_56909: 
#line 5113 
  ;
  
#line 5112 
  if (i >= 0) 
#line 5114 
              goto ldv_56908; else 
#line 5117 
                                   goto ldv_56910;
  ldv_56910: 
#line 5118 
  ;
  
#line 5115 
  sky2_write32((struct sky2_hw const *)hw,12U,0U);
  
#line 5116 
  sky2_read32((struct sky2_hw const *)hw,12U);
  
#line 5118 
  sky2_power_aux(hw);
  
#line 5120 
  sky2_write8((struct sky2_hw const *)hw,4U,(unsigned char)1);
  
#line 5121 
  sky2_read8((struct sky2_hw const *)hw,4U);
  
#line 5123 
  if ((unsigned int)hw->ports > 1U) {
    
#line 5124 
    napi_disable(& hw->napi);
    
#line 5125 
    ldv_free_irq_109(pdev->irq,(void *)hw);
  }
  else ;
  
#line 5128 
  if ((hw->flags & 1UL) != 0UL) 
#line 5129 
                                pci_disable_msi(pdev); else ;
  
#line 5130 
  pci_free_consistent(pdev,(unsigned long)hw->st_size * 8UL,(void *)hw->st_le,hw->st_dma);
  
#line 5132 
  pci_release_regions(pdev);
  
#line 5133 
  pci_disable_device(pdev);
  
#line 5135 
  i = (int)hw->ports + -1;
  
#line 5135 
  goto ldv_56912;
  ldv_56911: 
#line 5136 
  ;
  
#line 5136 
  ldv_free_netdev_110(hw->dev[i]);
  
#line 5135 
  i -= 1;
  ldv_56912: 
#line 5136 
  ;
  
#line 5135 
  if (i >= 0) 
#line 5137 
              goto ldv_56911; else 
#line 5140 
                                   goto ldv_56913;
  ldv_56913: 
#line 5141 
  ;
  
#line 5138 
  iounmap((void volatile *)hw->regs);
  
#line 5139 
  kfree((void const *)hw);
  return_label: 
#line 5140 
                return;
}


#line 5142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_suspend(struct device *dev)
{
  int __retres;
  struct pci_dev *tmp;
  int i;
  {
    
#line 5144 
    struct device const *__mptr = (struct device const *)dev;
    
#line 5144 
    tmp = (struct pci_dev *)__mptr + 18446744073709551464U;
  }
  
#line 5144 
  struct pci_dev *pdev = tmp;
  
#line 5145 
  struct sky2_hw *hw = pci_get_drvdata(pdev);
  
#line 5148 
  if (hw == (struct sky2_hw *)0) {
    
#line 5149 
    __retres = 0;
    
#line 5149 
    goto return_label;
  }
  else ;
  
#line 5151 
  ldv_del_timer_sync_111(& hw->watchdog_timer);
  
#line 5152 
  cancel_work_sync(& hw->restart_work);
  
#line 5154 
  rtnl_lock();
  
#line 5156 
  sky2_all_down(hw);
  
#line 5157 
  i = 0;
  
#line 5157 
  goto ldv_56925;
  ldv_56924: 
#line 5158 
  ;
  {
    
#line 5158 
    struct net_device *dev_0 = hw->dev[i];
    
#line 5159 
    struct sky2_port *sky2 = netdev_priv((struct net_device const *)dev_0);
    
#line 5161 
    if ((unsigned int)sky2->wol != 0U) 
#line 5162 
                                       sky2_wol_init(sky2); else ;
  }
  
#line 5157 
  i += 1;
  ldv_56925: 
#line 5158 
  ;
  
#line 5157 
  if ((int)hw->ports > i) 
#line 5159 
                          goto ldv_56924; else 
#line 5162 
                                               goto ldv_56926;
  ldv_56926: 
#line 5163 
  ;
  
#line 5165 
  sky2_power_aux(hw);
  
#line 5166 
  rtnl_unlock();
  
#line 5168 
  __retres = 0;
  return_label: 
#line 5168 
                return __retres;
}


#line 5172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_resume(struct device *dev)
{
  int __retres;
  struct pci_dev *tmp;
  int err;
  {
    
#line 5174 
    struct device const *__mptr = (struct device const *)dev;
    
#line 5174 
    tmp = (struct pci_dev *)__mptr + 18446744073709551464U;
  }
  
#line 5174 
  struct pci_dev *pdev = tmp;
  
#line 5175 
  struct sky2_hw *hw = pci_get_drvdata(pdev);
  
#line 5178 
  if (hw == (struct sky2_hw *)0) {
    
#line 5179 
    __retres = 0;
    
#line 5179 
    goto return_label;
  }
  else ;
  
#line 5182 
  err = pci_write_config_dword((struct pci_dev const *)pdev,128,0U);
  
#line 5183 
  if (err != 0) {
    
#line 5184 
    dev_err((struct device const *)(& pdev->dev),"PCI write config failed\n");
    
#line 5185 
    goto out;
  }
  else ;
  
#line 5188 
  rtnl_lock();
  
#line 5189 
  sky2_reset(hw);
  
#line 5190 
  sky2_all_up(hw);
  
#line 5191 
  rtnl_unlock();
  
#line 5193 
  __retres = 0;
  
#line 5193 
  goto return_label;
  out: 
#line 5194 
  ;
  
#line 5196 
  dev_err((struct device const *)(& pdev->dev),"resume failed (%d)\n",err);
  
#line 5197 
  pci_disable_device(pdev);
  
#line 5198 
  __retres = err;
  return_label: 
#line 5198 
                return __retres;
}


#line 5201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static struct dev_pm_ops const sky2_pm_ops = {.prepare = (int (*)(struct device *))0, .complete = (void (*)(struct device *))0, .suspend = & sky2_suspend, .resume = & sky2_resume, .freeze = & sky2_suspend, .thaw = & sky2_resume, .poweroff = & sky2_suspend, .restore = & sky2_resume, .suspend_late = (int (*)(struct device *))0, .resume_early = (int (*)(struct device *))0, .freeze_late = (int (*)(struct device *))0, .thaw_early = (int (*)(struct device *))0, .poweroff_late = (int (*)(struct device *))0, .restore_early = (int (*)(struct device *))0, .suspend_noirq = (int (*)(struct device *))0, .resume_noirq = (int (*)(struct device *))0, .freeze_noirq = (int (*)(struct device *))0, .thaw_noirq = (int (*)(struct device *))0, .poweroff_noirq = (int (*)(struct device *))0, .restore_noirq = (int (*)(struct device *))0, .runtime_suspend = (int (*)(struct device *))0, .runtime_resume = (int (*)(struct device *))0, .runtime_idle = (int (*)(struct device *))0};

#line 5209  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_shutdown(struct pci_dev *pdev)
{
  bool tmp;
  
#line 5211 
  sky2_suspend(& pdev->dev);
  
#line 5212 
  tmp = device_may_wakeup(& pdev->dev);
  
#line 5212 
  ;
  
#line 5212 
  pci_wake_from_d3(pdev,(_Bool)((bool)((int)tmp) != 0));
  
#line 5213 
  pci_set_power_state(pdev,3);
  
#line 5214 
  return;
}


#line 5216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static struct pci_driver sky2_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "sky2", .id_table = (struct pci_device_id const *)(& sky2_id_table), .probe = & sky2_probe, .remove = & sky2_remove, .suspend = (int (*)(struct pci_dev *, pm_message_t ))0, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = (int (*)(struct pci_dev *))0, .shutdown = & sky2_shutdown, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = (struct pci_error_handlers const *)0, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = & sky2_pm_ops, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 5225  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static int sky2_init_module(void)
{
  int tmp;
  
#line 5227 
  printk("\001");
  
#line 5229 
  sky2_debug_init();
  
#line 5230 
  tmp = ldv___pci_register_driver_112(& sky2_driver,& __this_module,"sky2");
  
#line 5230 
  return tmp;
}


#line 5233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/marvell/sky2.c"
static void sky2_cleanup_module(void)
{
  
#line 5235 
  ldv_pci_unregister_driver_113(& sky2_driver);
  
#line 5236 
  sky2_debug_cleanup();
  
#line 5237 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
struct dev_pm_ops *ldv_emg_alias_sky2_pm_ops_3 = (struct dev_pm_ops *)(& sky2_pm_ops);

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int (*ldv_emg_alias_eth_validate_addr_9)(struct net_device *) = & eth_validate_addr;

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
long long (*ldv_emg_alias_seq_lseek_2)(struct file *, long long , int ) = & seq_lseek;

#line 59  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
unsigned int (*ldv_emg_alias_ethtool_op_get_link_12)(struct net_device *) = & ethtool_op_get_link;

#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int (*ldv_emg_alias_single_release_4)(struct inode *, struct file *) = & single_release;

#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
struct file_operations *ldv_emg_alias_sky2_debug_fops_2 = (struct file_operations *)(& sky2_debug_fops);

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
long (*ldv_emg_alias_seq_read_3)(struct file *, char *, unsigned long , long long *) = & seq_read;

#line 63  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
struct pci_driver *ldv_emg_alias_sky2_driver_2 = & sky2_driver;

#line 66 
int ldv_emg_del_timer_sync(struct timer_list *arg0);


#line 67 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 68 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 69 
struct dentry *ldv_emg_debugfs_create_file(char *arg0, unsigned short arg1, struct dentry *arg2, void *arg3, struct file_operations *arg4);


#line 70 
void ldv_emg_debugfs_remove(struct dentry *arg0);


#line 71 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 72 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 73 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 74 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 75 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 76 
_Bool ldv_emg_schedule_work(struct work_struct *arg0);


#line 77 
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1);


#line 78 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int ldv_emg_wrapper_sky2_set_eeprom_17(struct net_device *arg0, struct ethtool_eeprom *arg1, unsigned char *arg2)
{
  int tmp;
  
#line 83 
  tmp = sky2_set_eeprom(arg0,arg1,arg2);
  
#line 83 
  return tmp;
}


#line 87  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int ldv_emg_wrapper_sky2_get_eeprom_len_36(struct net_device *arg0)
{
  int tmp;
  
#line 88 
  tmp = sky2_get_eeprom_len(arg0);
  
#line 88 
  return tmp;
}


#line 92  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int ldv_emg_wrapper_sky2_set_settings_4(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 93 
  tmp = sky2_set_settings(arg0,arg1);
  
#line 93 
  return tmp;
}


#line 97  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int ldv_emg_wrapper_sky2_close_2(struct net_device *arg0)
{
  int tmp;
  
#line 98 
  tmp = sky2_close(arg0);
  
#line 98 
  return tmp;
}


#line 102  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
void ldv_emg_wrapper_sky2_get_strings_6(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  
#line 103 
  sky2_get_strings(arg0,arg1,arg2);
  
#line 104 
  return;
}


#line 107  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
void ldv_emg_wrapper_sky2_get_ringparam_13(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  
#line 108 
  sky2_get_ringparam(arg0,arg1);
  
#line 109 
  return;
}


#line 112  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
enum netdev_tx ldv_emg_wrapper_sky2_xmit_frame_20(struct sk_buff *arg0, struct net_device *arg1)
{
  enum netdev_tx tmp;
  
#line 113 
  tmp = sky2_xmit_frame(arg0,arg1);
  
#line 113 
  return tmp;
}


#line 117  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
void ldv_emg_wrapper_sky2_get_drvinfo_15(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 118 
  sky2_get_drvinfo(arg0,arg1);
  
#line 119 
  return;
}


#line 122  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int ldv_emg_wrapper_sky2_set_coalesce_33(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 123 
  tmp = sky2_set_coalesce(arg0,arg1);
  
#line 123 
  return tmp;
}


#line 127  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int ldv_emg_wrapper_sky2_resume_4(struct device *arg0)
{
  int tmp;
  
#line 128 
  tmp = sky2_resume(arg0);
  
#line 128 
  return tmp;
}


#line 132  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
unsigned long long ldv_emg_wrapper_sky2_fix_features_16(struct net_device *arg0, unsigned long long arg1)
{
  unsigned long long tmp;
  
#line 133 
  tmp = sky2_fix_features(arg0,arg1);
  
#line 133 
  return tmp;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int ldv_emg_wrapper_sky2_get_sset_count_28(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 138 
  tmp = sky2_get_sset_count(arg0,arg1);
  
#line 138 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int ldv_emg_sky2_init_module(void)
{
  int tmp;
  
#line 143 
  tmp = sky2_init_module();
  
#line 143 
  return tmp;
}


#line 146  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
void ldv_emg_wrapper_sky2_set_multicast_7(struct net_device *arg0)
{
  
#line 147 
  sky2_set_multicast(arg0);
  
#line 148 
  return;
}


#line 151  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int ldv_emg_wrapper_sky2_get_regs_len_32(struct net_device *arg0)
{
  int tmp;
  
#line 152 
  tmp = sky2_get_regs_len(arg0);
  
#line 152 
  return tmp;
}


#line 156  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
enum irqreturn ldv_emg_wrapper_sky2_test_intr_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 157 
  tmp = sky2_test_intr(arg0,arg1);
  
#line 157 
  return tmp;
}


#line 161  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int ldv_emg_wrapper_sky2_set_pauseparam_34(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  int tmp;
  
#line 162 
  tmp = sky2_set_pauseparam(arg0,arg1);
  
#line 162 
  return tmp;
}


#line 166  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
struct rtnl_link_stats64 *ldv_emg_wrapper_sky2_get_stats_8(struct net_device *arg0, struct rtnl_link_stats64 *arg1)
{
  struct rtnl_link_stats64 *tmp;
  
#line 167 
  tmp = sky2_get_stats(arg0,arg1);
  
#line 167 
  return tmp;
}


#line 171  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int ldv_emg_wrapper_sky2_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 172 
  tmp = sky2_open(arg0);
  
#line 172 
  return tmp;
}


#line 176  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
void ldv_emg_wrapper_sky2_remove_4(struct pci_dev *arg0)
{
  
#line 177 
  sky2_remove(arg0);
  
#line 178 
  return;
}


#line 181  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
enum irqreturn ldv_emg_wrapper_sky2_intr_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 182 
  tmp = sky2_intr(arg0,arg1);
  
#line 182 
  return tmp;
}


#line 186  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int ldv_emg_wrapper_sky2_debug_open_5(struct inode *arg0, struct file *arg1)
{
  int tmp;
  
#line 187 
  tmp = sky2_debug_open(arg0,arg1);
  
#line 187 
  return tmp;
}


#line 191  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
unsigned int ldv_emg_wrapper_sky2_get_msglevel_19(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 192 
  tmp = sky2_get_msglevel(arg0);
  
#line 192 
  return tmp;
}


#line 196  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int ldv_emg_wrapper_sky2_set_mac_address_21(struct net_device *arg0, void *arg1)
{
  int tmp;
  
#line 197 
  tmp = sky2_set_mac_address(arg0,arg1);
  
#line 197 
  return tmp;
}


#line 201  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int ldv_emg_wrapper_sky2_set_ringparam_18(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  int tmp;
  
#line 202 
  tmp = sky2_set_ringparam(arg0,arg1);
  
#line 202 
  return tmp;
}


#line 206  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int ldv_emg_wrapper_sky2_suspend_2(struct device *arg0)
{
  int tmp;
  
#line 207 
  tmp = sky2_suspend(arg0);
  
#line 207 
  return tmp;
}


#line 211  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int ldv_emg_wrapper_sky2_change_mtu_11(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 212 
  tmp = sky2_change_mtu(arg0,arg1);
  
#line 212 
  return tmp;
}


#line 216  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
void ldv_emg_wrapper_sky2_shutdown_2(struct pci_dev *arg0)
{
  
#line 217 
  sky2_shutdown(arg0);
  
#line 218 
  return;
}


#line 221  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
void ldv_emg_wrapper_sky2_get_wol_24(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  
#line 222 
  sky2_get_wol(arg0,arg1);
  
#line 223 
  return;
}


#line 226  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
void ldv_emg_wrapper_sky2_get_ethtool_stats_10(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  
#line 227 
  sky2_get_ethtool_stats(arg0,arg1,arg2);
  
#line 228 
  return;
}


#line 231  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
void ldv_emg_wrapper_sky2_tx_timeout_23(struct net_device *arg0)
{
  
#line 232 
  sky2_tx_timeout(arg0);
  
#line 233 
  return;
}


#line 236  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
void ldv_emg_wrapper_sky2_get_pauseparam_2(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  
#line 237 
  sky2_get_pauseparam(arg0,arg1);
  
#line 238 
  return;
}


#line 241  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int ldv_emg_wrapper_sky2_nway_reset_29(struct net_device *arg0)
{
  int tmp;
  
#line 242 
  tmp = sky2_nway_reset(arg0);
  
#line 242 
  return tmp;
}


#line 246  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int ldv_emg_wrapper_sky2_set_features_14(struct net_device *arg0, unsigned long long arg1)
{
  int tmp;
  
#line 247 
  tmp = sky2_set_features(arg0,arg1);
  
#line 247 
  return tmp;
}


#line 251  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int ldv_emg_wrapper_sky2_ioctl_25(struct net_device *arg0, struct ifreq *arg1, int arg2)
{
  int tmp;
  
#line 252 
  tmp = sky2_ioctl(arg0,arg1,arg2);
  
#line 252 
  return tmp;
}


#line 256  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
void ldv_emg_sky2_cleanup_module(void)
{
  
#line 257 
  sky2_cleanup_module();
  
#line 258 
  return;
}


#line 260  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int ldv_emg_wrapper_sky2_get_eeprom_3(struct net_device *arg0, struct ethtool_eeprom *arg1, unsigned char *arg2)
{
  int tmp;
  
#line 261 
  tmp = sky2_get_eeprom(arg0,arg1,arg2);
  
#line 261 
  return tmp;
}


#line 265  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
void ldv_emg_wrapper_sky2_set_msglevel_30(struct net_device *arg0, unsigned int arg1)
{
  
#line 266 
  sky2_set_msglevel(arg0,arg1);
  
#line 267 
  return;
}


#line 270  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int ldv_emg_wrapper_sky2_get_settings_22(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 271 
  tmp = sky2_get_settings(arg0,arg1);
  
#line 271 
  return tmp;
}


#line 275  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int ldv_emg_wrapper_sky2_set_wol_26(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  int tmp;
  
#line 276 
  tmp = sky2_set_wol(arg0,arg1);
  
#line 276 
  return tmp;
}


#line 280  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
void ldv_emg_wrapper_sky2_netpoll_35(struct net_device *arg0)
{
  
#line 281 
  sky2_netpoll(arg0);
  
#line 282 
  return;
}


#line 285  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int ldv_emg_wrapper_sky2_set_phys_id_5(struct net_device *arg0, enum ethtool_phys_id_state arg1)
{
  int tmp;
  
#line 286 
  tmp = sky2_set_phys_id(arg0,arg1);
  
#line 286 
  return tmp;
}


#line 290  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
void ldv_emg_wrapper_sky2_get_regs_27(struct net_device *arg0, struct ethtool_regs *arg1, void *arg2)
{
  
#line 291 
  sky2_get_regs(arg0,arg1,arg2);
  
#line 292 
  return;
}


#line 295  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int ldv_emg_wrapper_sky2_probe_3(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 296 
  tmp = sky2_probe(arg0,(struct pci_device_id const *)arg1);
  
#line 296 
  return tmp;
}


#line 300  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
int ldv_emg_wrapper_sky2_get_coalesce_31(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 301 
  tmp = sky2_get_coalesce(arg0,arg1);
  
#line 301 
  return tmp;
}


#line 320  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static bool IS_ERR(void const *ptr)
{
  bool __retres;
  long ret;
  
#line 324 
  ret = ldv_is_err(ptr);
  
#line 325 
  __retres = (_Bool)(ret != 0L);
  
#line 325 
  return __retres;
}


#line 815  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 818 
  tmp = ldv_kmalloc(size,flags);
  
#line 818 
  return tmp;
}


#line 829  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 832 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 832 
  return tmp;
}


#line 836  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 839 
  tmp = ldv_kzalloc(size,flags);
  
#line 839 
  return tmp;
}


#line 843  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_spin_lock_60(spinlock_t *lock)
{
  
#line 847 
  ldv_spin_model_lock((char *)"_xmit_lock_of_netdev_queue");
  
#line 849 
  spin_lock(lock);
  
#line 850 
  return;
}


#line 886  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_spin_unlock_63(spinlock_t *lock)
{
  
#line 890 
  ldv_spin_model_unlock((char *)"_xmit_lock_of_netdev_queue");
  
#line 892 
  spin_unlock(lock);
  
#line 893 
  return;
}


#line 906  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_spin_lock_65(spinlock_t *lock)
{
  
#line 910 
  ldv_spin_model_lock((char *)"tx_global_lock_of_net_device");
  
#line 912 
  spin_lock(lock);
  
#line 913 
  return;
}


#line 916  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_spin_unlock_66(spinlock_t *lock)
{
  
#line 920 
  ldv_spin_model_unlock((char *)"tx_global_lock_of_net_device");
  
#line 922 
  spin_unlock(lock);
  
#line 923 
  return;
}


#line 986  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_spin_lock_bh_73(spinlock_t *lock)
{
  
#line 990 
  ldv_spin_model_lock((char *)"phy_lock_of_sky2_port");
  
#line 992 
  spin_lock_bh(lock);
  
#line 993 
  return;
}


#line 996  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_spin_unlock_bh_74(spinlock_t *lock)
{
  
#line 1000 
  ldv_spin_model_unlock((char *)"phy_lock_of_sky2_port");
  
#line 1002 
  spin_unlock_bh(lock);
  
#line 1003 
  return;
}


#line 1006  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_spin_lock_bh_75(spinlock_t *lock)
{
  
#line 1010 
  ldv_spin_model_lock((char *)"phy_lock_of_sky2_port");
  
#line 1012 
  spin_lock_bh(lock);
  
#line 1013 
  return;
}


#line 1016  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_spin_unlock_bh_76(spinlock_t *lock)
{
  
#line 1020 
  ldv_spin_model_unlock((char *)"phy_lock_of_sky2_port");
  
#line 1022 
  spin_unlock_bh(lock);
  
#line 1023 
  return;
}


#line 1026  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_spin_lock_bh_77(spinlock_t *lock)
{
  
#line 1030 
  ldv_spin_model_lock((char *)"phy_lock_of_sky2_port");
  
#line 1032 
  spin_lock_bh(lock);
  
#line 1033 
  return;
}


#line 1036  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_spin_unlock_bh_78(spinlock_t *lock)
{
  
#line 1040 
  ldv_spin_model_unlock((char *)"phy_lock_of_sky2_port");
  
#line 1042 
  spin_unlock_bh(lock);
  
#line 1043 
  return;
}


#line 1046  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_spin_lock_bh_79(spinlock_t *lock)
{
  
#line 1050 
  ldv_spin_model_lock((char *)"phy_lock_of_sky2_port");
  
#line 1052 
  spin_lock_bh(lock);
  
#line 1053 
  return;
}


#line 1056  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_spin_unlock_bh_80(spinlock_t *lock)
{
  
#line 1060 
  ldv_spin_model_unlock((char *)"phy_lock_of_sky2_port");
  
#line 1062 
  spin_unlock_bh(lock);
  
#line 1063 
  return;
}


#line 1066  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_spin_lock_bh_81(spinlock_t *lock)
{
  
#line 1070 
  ldv_spin_model_lock((char *)"phy_lock_of_sky2_port");
  
#line 1072 
  spin_lock_bh(lock);
  
#line 1073 
  return;
}


#line 1076  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_spin_unlock_bh_82(spinlock_t *lock)
{
  
#line 1080 
  ldv_spin_model_unlock((char *)"phy_lock_of_sky2_port");
  
#line 1082 
  spin_unlock_bh(lock);
  
#line 1083 
  return;
}


#line 1086  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static int ldv_request_irq_83(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1090 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1090 
  return tmp;
}


#line 1094  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_spin_lock_bh_84(spinlock_t *lock)
{
  
#line 1098 
  ldv_spin_model_lock((char *)"phy_lock_of_sky2_port");
  
#line 1100 
  spin_lock_bh(lock);
  
#line 1101 
  return;
}


#line 1104  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_spin_unlock_bh_85(spinlock_t *lock)
{
  
#line 1108 
  ldv_spin_model_unlock((char *)"phy_lock_of_sky2_port");
  
#line 1110 
  spin_unlock_bh(lock);
  
#line 1111 
  return;
}


#line 1114  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_free_irq_86(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1118 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1119 
  return;
}


#line 1122  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static int ldv_mod_timer_87(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1126 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1126 
  return tmp;
}


#line 1130  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_spin_lock_88(spinlock_t *lock)
{
  
#line 1134 
  ldv_spin_model_lock((char *)"phy_lock_of_sky2_port");
  
#line 1136 
  spin_lock(lock);
  
#line 1137 
  return;
}


#line 1140  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_spin_unlock_89(spinlock_t *lock)
{
  
#line 1144 
  ldv_spin_model_unlock((char *)"phy_lock_of_sky2_port");
  
#line 1146 
  spin_unlock(lock);
  
#line 1147 
  return;
}


#line 1150  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static bool ldv_schedule_work_90(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1154 
  tmp = ldv_emg_schedule_work(work);
  
#line 1154 
  __retres = tmp != 0;
  
#line 1154 
  return __retres;
}


#line 1158  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static bool ldv_schedule_work_91(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1162 
  tmp = ldv_emg_schedule_work(work);
  
#line 1162 
  __retres = tmp != 0;
  
#line 1162 
  return __retres;
}


#line 1166  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static int ldv_mod_timer_92(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1170 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1170 
  return tmp;
}


#line 1174  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_spin_lock_bh_93(spinlock_t *lock)
{
  
#line 1178 
  ldv_spin_model_lock((char *)"phy_lock_of_sky2_port");
  
#line 1180 
  spin_lock_bh(lock);
  
#line 1181 
  return;
}


#line 1184  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_spin_unlock_bh_94(spinlock_t *lock)
{
  
#line 1188 
  ldv_spin_model_unlock((char *)"phy_lock_of_sky2_port");
  
#line 1190 
  spin_unlock_bh(lock);
  
#line 1191 
  return;
}


#line 1194  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_debugfs_remove_95(struct dentry *ldv_func_arg1)
{
  
#line 1198 
  ldv_emg_debugfs_remove(ldv_func_arg1);
  
#line 1199 
  return;
}


#line 1202  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static struct dentry *ldv_debugfs_create_file_96(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1206 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1206 
  return tmp;
}


#line 1210  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_debugfs_remove_97(struct dentry *ldv_func_arg1)
{
  
#line 1214 
  ldv_emg_debugfs_remove(ldv_func_arg1);
  
#line 1215 
  return;
}


#line 1218  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_98(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 1222 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1222 
  return tmp;
}


#line 1226  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static int ldv_request_irq_99(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1230 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1230 
  return tmp;
}


#line 1234  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_free_irq_100(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1238 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1239 
  return;
}


#line 1242  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static int ldv_register_netdev_101(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 1246 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 1246 
  return tmp;
}


#line 1250  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static int ldv_register_netdev_102(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 1254 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 1254 
  return tmp;
}


#line 1258  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_unregister_netdev_103(struct net_device *ldv_func_arg1)
{
  
#line 1262 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1263 
  return;
}


#line 1266  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_free_netdev_104(struct net_device *ldv_func_arg1)
{
  
#line 1270 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1271 
  return;
}


#line 1274  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_unregister_netdev_105(struct net_device *ldv_func_arg1)
{
  
#line 1278 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1279 
  return;
}


#line 1282  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_free_netdev_106(struct net_device *ldv_func_arg1)
{
  
#line 1286 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1287 
  return;
}


#line 1290  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static int ldv_del_timer_sync_107(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 1294 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 1294 
  return tmp;
}


#line 1298  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_unregister_netdev_108(struct net_device *ldv_func_arg1)
{
  
#line 1302 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1303 
  return;
}


#line 1306  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_free_irq_109(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1310 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1311 
  return;
}


#line 1314  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_free_netdev_110(struct net_device *ldv_func_arg1)
{
  
#line 1318 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1319 
  return;
}


#line 1322  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static int ldv_del_timer_sync_111(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 1326 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 1326 
  return tmp;
}


#line 1330  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static int ldv___pci_register_driver_112(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 1334 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 1334 
  return tmp;
}


#line 1338  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/weaver/.tmp_sky2.c.aux"
static void ldv_pci_unregister_driver_113(struct pci_driver *ldv_func_arg1)
{
  
#line 1342 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 1343 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
__inline static void *ERR_PTR(long error)
{
  void *__retres;
  
#line 25 
  __retres = (void *)error;
  
#line 25 
  return __retres;
}


#line 108  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_5_1(struct net_device *arg0);


#line 110 
void *ldv_interrupt_scenario_18(void *arg0);


#line 111 
void ldv_dispatch_register_9_4(struct net_device *arg0);


#line 114 
void ldv_dispatch_irq_deregister_7_1(int arg0);


#line 115 
void ldv_dispatch_irq_register_14_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 116 
void *ldv_interrupt_scenario_21(void *arg0);


#line 118 
void ldv_dispatch_register_10_3(struct pci_driver *arg0);


#line 119 
void *ldv_character_driver_scenario_17(void *arg0);


#line 122 
void *ldv_random_allocationless_scenario_20(void *arg0);


#line 124 
void *ldv_initialization_1(void *arg0);


#line 125 
int main(void);


#line 126 
void ldv_dispatch_deregister_8_1(struct pci_driver *arg0);


#line 128 
void *ldv_pci_scenario_15(void *arg0);


#line 129 
void ldv_dispatch_register_13_3(struct file_operations *arg0);


#line 131 
void *ldv_timer_scenario_19(void *arg0);


#line 132 
void ldv_dispatch_instance_register_3_3(struct timer_list *arg0);


#line 134 
void *ldv_pm_ops_scenario_16(void *arg0);


#line 135 
void ldv_dispatch_instance_deregister_12_1(struct timer_list *arg0);


#line 137 
void ldv_dispatch_deregister_6_1(struct file_operations *arg0);


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_17;

#line 143  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_21;

#line 144  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_16;

#line 145  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_19;

#line 146  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_15;

#line 147  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_18;

#line 148  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_20;

#line 152  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_5_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_20 *cf_arg_20;
  int tmp;
  
#line 155 
  tmp = ldv_undef_int();
  
#line 155 
  switch (tmp) {
    case 0: 
#line 156 
    ;
    
#line 157 
    ret = pthread_join(ldv_thread_20,(void **)0);
    
#line 158 
    __VERIFIER_assume(ret == 0);
    
#line 159 
    goto ldv_45518;
    default: 
#line 161 
    ;
    
#line 161 
    __VERIFIER_assume(0);
  }
  ldv_45518: 
#line 162 
  ;
  
#line 163 
  return;
}


#line 167  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_del_timer_sync(struct timer_list *arg0)
{
  int __retres;
  struct timer_list *ldv_12_timer_list;
  
#line 173 
  ldv_12_timer_list = arg0;
  
#line 177 
  ldv_dispatch_instance_deregister_12_1(ldv_12_timer_list);
  
#line 178 
  ;
  
#line 178 
  __retres = 0;
  
#line 178 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_18(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_18_ret_val;
  int ldv_18_line;
  void *ldv_18_data;
  enum irqreturn (*ldv_18_thread)(int , void *);
  int tmp;
  
#line 192 
  enum irqreturn (*ldv_18_callback)(int , void *) = & ldv_emg_wrapper_sky2_test_intr_2;
  
#line 195 
  struct ldv_struct_interrupt_scenario_18 *data = (struct ldv_struct_interrupt_scenario_18 *)arg0;
  
#line 200 
  if (data != (struct ldv_struct_interrupt_scenario_18 *)0) {
    
#line 201 
    ldv_18_line = data->arg0;
    
#line 202 
    ldv_18_callback = data->arg1;
    
#line 203 
    ldv_18_thread = data->arg2;
    
#line 204 
    ldv_18_data = data->arg3;
    
#line 205 
    ldv_free((void *)data);
  }
  else ;
  
#line 211 
  ldv_switch_to_interrupt_context();
  
#line 213 
  ldv_18_ret_val = ldv_emg_wrapper_sky2_test_intr_2(ldv_18_line,ldv_18_data);
  
#line 215 
  ldv_switch_to_process_context();
  
#line 218 
  tmp = ldv_undef_int();
  
#line 218 
  if (tmp != 0) {
    
#line 220 
    __VERIFIER_assume(ldv_18_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 224 
    if (ldv_18_thread != (enum irqreturn (*)(int , void *))0) 
#line 226 
                                                              (*ldv_18_thread)(ldv_18_line,ldv_18_data); else ;
  }
  else 
#line 233 
       __VERIFIER_assume(ldv_18_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 242 
  __retres = (void *)0;
  
#line 242 
  goto return_label;
  
#line 244 
  __retres = (void *)0;
  return_label: 
#line 244 
                return __retres;
}


#line 249  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_9_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_20 *cf_arg_20;
  int tmp;
  
#line 252 
  tmp = ldv_undef_int();
  
#line 252 
  switch (tmp) {
    case 0: 
#line 253 
    ;
    
#line 254 
    cf_arg_20 = (struct ldv_struct_random_allocationless_scenario_20 *)ldv_xmalloc(16UL);
    
#line 255 
    cf_arg_20->arg0 = arg0;
    
#line 256 
    ret = pthread_create(& ldv_thread_20,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_20,(void *)cf_arg_20);
    
#line 257 
    __VERIFIER_assume(ret == 0);
    
#line 258 
    goto ldv_45543;
    default: 
#line 260 
    ;
    
#line 260 
    __VERIFIER_assume(0);
  }
  ldv_45543: 
#line 261 
  ;
  
#line 262 
  return;
}


#line 266  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 269 
  struct pci_driver *ldv_10_pci_driver = ldv_emg_alias_sky2_driver_2;
  
#line 273 
  tmp_0 = ldv_undef_int();
  
#line 273 
  if (tmp_0 != 0) {
    
#line 275 
    ldv_10_pci_driver = arg0;
    
#line 279 
    ldv_dispatch_register_10_3(ldv_10_pci_driver);
    
#line 283 
    __retres = 0;
    
#line 283 
    goto return_label;
  }
  else {
    int tmp;
    
#line 290 
    tmp = ldv_undef_int_negative();
    
#line 290 
    __retres = tmp;
    
#line 290 
    goto return_label;
  }
  return_label: 
#line 273 
                return __retres;
}


#line 300  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
struct dentry *ldv_emg_debugfs_create_file(char *arg0, unsigned short arg1, struct dentry *arg2, void *arg3, struct file_operations *arg4)
{
  struct dentry *__retres;
  struct dentry *ldv_13_dentry;
  int tmp_1;
  
#line 304 
  struct file_operations *ldv_13_file_operations = ldv_emg_alias_sky2_debug_fops_2;
  
#line 308 
  tmp_1 = ldv_undef_int();
  
#line 308 
  if (tmp_1 != 0) {
    
#line 310 
    ldv_13_dentry = (struct dentry *)ldv_xmalloc_unknown_size(0UL);
    
#line 311 
    ldv_13_file_operations = arg4;
    
#line 315 
    ldv_dispatch_register_13_3(ldv_13_file_operations);
    
#line 319 
    __retres = ldv_13_dentry;
    
#line 319 
    goto return_label;
  }
  else {
    struct dentry *tmp_0;
    
#line 326 
    tmp_0 = (struct dentry *)ERR_PTR(-19L);
    
#line 326 
    __retres = tmp_0;
    
#line 326 
    goto return_label;
  }
  return_label: 
#line 308 
                return __retres;
}


#line 336  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_7_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_7 *cf_arg_18;
  struct ldv_struct_free_irq_7 *cf_arg_21;
  int tmp;
  
#line 340 
  tmp = ldv_undef_int();
  
#line 340 
  switch (tmp) {
    case 0: 
#line 341 
    ;
    
#line 342 
    ret = pthread_join(ldv_thread_18,(void **)0);
    
#line 343 
    __VERIFIER_assume(ret == 0);
    
#line 344 
    goto ldv_45567;
    case 1: 
#line 346 
    ;
    
#line 347 
    ret = pthread_join(ldv_thread_21,(void **)0);
    
#line 348 
    __VERIFIER_assume(ret == 0);
    
#line 349 
    goto ldv_45567;
    default: 
#line 351 
    ;
    
#line 351 
    __VERIFIER_assume(0);
  }
  ldv_45567: 
#line 352 
  ;
  
#line 353 
  return;
}


#line 357  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_14_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_18 *cf_arg_18;
  struct ldv_struct_interrupt_scenario_18 *cf_arg_21;
  int tmp;
  
#line 361 
  tmp = ldv_undef_int();
  
#line 361 
  switch (tmp) {
    case 0: 
#line 362 
    ;
    
#line 363 
    cf_arg_18 = (struct ldv_struct_interrupt_scenario_18 *)ldv_xmalloc(32UL);
    
#line 364 
    cf_arg_18->arg0 = arg0;
    
#line 365 
    cf_arg_18->arg1 = arg1;
    
#line 366 
    cf_arg_18->arg2 = arg2;
    
#line 367 
    cf_arg_18->arg3 = arg3;
    
#line 368 
    ret = pthread_create(& ldv_thread_18,(pthread_attr_t const *)0,& ldv_interrupt_scenario_18,(void *)cf_arg_18);
    
#line 369 
    __VERIFIER_assume(ret == 0);
    
#line 370 
    goto ldv_45584;
    case 1: 
#line 372 
    ;
    
#line 373 
    cf_arg_21 = (struct ldv_struct_interrupt_scenario_18 *)ldv_xmalloc(32UL);
    
#line 374 
    cf_arg_21->arg0 = arg0;
    
#line 375 
    cf_arg_21->arg1 = arg1;
    
#line 376 
    cf_arg_21->arg2 = arg2;
    
#line 377 
    cf_arg_21->arg3 = arg3;
    
#line 378 
    ret = pthread_create(& ldv_thread_21,(pthread_attr_t const *)0,& ldv_interrupt_scenario_21,(void *)cf_arg_21);
    
#line 379 
    __VERIFIER_assume(ret == 0);
    
#line 380 
    goto ldv_45584;
    default: 
#line 382 
    ;
    
#line 382 
    __VERIFIER_assume(0);
  }
  ldv_45584: 
#line 383 
  ;
  
#line 384 
  return;
}


#line 388  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_21(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_21_ret_val;
  int ldv_21_line;
  void *ldv_21_data;
  enum irqreturn (*ldv_21_thread)(int , void *);
  int tmp;
  
#line 394 
  enum irqreturn (*ldv_21_callback)(int , void *) = & ldv_emg_wrapper_sky2_intr_2;
  
#line 397 
  struct ldv_struct_interrupt_scenario_18 *data = (struct ldv_struct_interrupt_scenario_18 *)arg0;
  
#line 402 
  if (data != (struct ldv_struct_interrupt_scenario_18 *)0) {
    
#line 403 
    ldv_21_line = data->arg0;
    
#line 404 
    ldv_21_callback = data->arg1;
    
#line 405 
    ldv_21_thread = data->arg2;
    
#line 406 
    ldv_21_data = data->arg3;
    
#line 407 
    ldv_free((void *)data);
  }
  else ;
  
#line 413 
  ldv_switch_to_interrupt_context();
  
#line 415 
  ldv_21_ret_val = ldv_emg_wrapper_sky2_intr_2(ldv_21_line,ldv_21_data);
  
#line 417 
  ldv_switch_to_process_context();
  
#line 420 
  tmp = ldv_undef_int();
  
#line 420 
  if (tmp != 0) {
    
#line 422 
    __VERIFIER_assume(ldv_21_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 426 
    if (ldv_21_thread != (enum irqreturn (*)(int , void *))0) 
#line 428 
                                                              (*ldv_21_thread)(ldv_21_line,ldv_21_data); else ;
  }
  else 
#line 435 
       __VERIFIER_assume(ldv_21_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 444 
  __retres = (void *)0;
  
#line 444 
  goto return_label;
  
#line 446 
  __retres = (void *)0;
  return_label: 
#line 446 
                return __retres;
}


#line 451  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_4_netdev;
  int tmp_0;
  
#line 458 
  tmp_0 = ldv_undef_int();
  
#line 458 
  if (tmp_0 != 0) {
    
#line 460 
    ldv_4_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 464 
    __retres = ldv_4_netdev;
    
#line 464 
    goto return_label;
  }
  else {
    
#line 471 
    __retres = (struct net_device *)0;
    
#line 471 
    goto return_label;
  }
  return_label: 
#line 458 
                return __retres;
}


#line 481  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_10_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_15 *cf_arg_15;
  int tmp;
  
#line 484 
  tmp = ldv_undef_int();
  
#line 484 
  switch (tmp) {
    case 0: 
#line 485 
    ;
    
#line 486 
    cf_arg_15 = (struct ldv_struct_pci_scenario_15 *)ldv_xmalloc(16UL);
    
#line 487 
    cf_arg_15->arg0 = arg0;
    
#line 488 
    ret = pthread_create(& ldv_thread_15,(pthread_attr_t const *)0,& ldv_pci_scenario_15,(void *)cf_arg_15);
    
#line 489 
    __VERIFIER_assume(ret == 0);
    
#line 490 
    goto ldv_45612;
    default: 
#line 492 
    ;
    
#line 492 
    __VERIFIER_assume(0);
  }
  ldv_45612: 
#line 493 
  ;
  
#line 494 
  return;
}


#line 498  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_17(void *arg0)
{
  void *__retres;
  struct file *ldv_17_resource_1;
  int ldv_17_ldv_param_2_3;
  long long ldv_17_ldv_param_1_2;
  char *ldv_17_ldv_param_1_4;
  struct inode *ldv_17_resource_0;
  unsigned long ldv_17_size_cnt;
  long long *ldv_17_ldv_param_3_5;
  char *ldv_17_ldv_param_1_6;
  long long *ldv_17_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 509 
  struct file_operations *ldv_17_container = ldv_emg_alias_sky2_debug_fops_2;
  
#line 510 
  int ldv_17_ret = ldv_undef_int();
  
#line 513 
  struct ldv_struct_character_driver_scenario_17 *data = (struct ldv_struct_character_driver_scenario_17 *)arg0;
  
#line 517 
  ldv_17_ret = ldv_undef_int();
  
#line 520 
  if (data != (struct ldv_struct_character_driver_scenario_17 *)0) {
    
#line 521 
    ldv_17_container = data->arg0;
    
#line 522 
    ldv_free((void *)data);
  }
  else ;
  
#line 527 
  ldv_17_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 528 
  tmp_1 = ldv_undef_int();
  
#line 528 
  ldv_17_size_cnt = (unsigned long)tmp_1;
  
#line 535 
  goto ldv_main_17;
  
#line 537 
  __retres = (void *)0;
  
#line 537 
  goto return_label;
  ldv_main_17: 
#line 540 
  ;
  
#line 543 
  tmp_3 = ldv_undef_int();
  
#line 543 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 546 
    ldv_17_ret = ldv_emg_wrapper_sky2_debug_open_5(ldv_17_resource_0,ldv_17_resource_1);
    
#line 548 
    ldv_17_ret = ldv_filter_err_code(ldv_17_ret);
    
#line 551 
    tmp_2 = ldv_undef_int();
    
#line 551 
    if (tmp_2 != 0) {
      
#line 553 
      __VERIFIER_assume(ldv_17_ret == 0);
      
#line 560 
      goto ldv_call_17;
    }
    else {
      
#line 564 
      __VERIFIER_assume(ldv_17_ret != 0);
      
#line 571 
      goto ldv_main_17;
    }
  }
  else {
    
#line 576 
    ldv_free((void *)ldv_17_resource_0);
    
#line 584 
    __retres = (void *)0;
    
#line 584 
    goto return_label;
  }
  
#line 587 
  __retres = (void *)0;
  
#line 587 
  goto return_label;
  ldv_call_17: 
#line 590 
  ;
  
#line 593 
  tmp_4 = ldv_undef_int();
  
#line 593 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 594 
    ;
    
#line 596 
    ldv_17_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 597 
    ldv_17_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 601 
    if (ldv_17_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 607 
      __VERIFIER_assume(ldv_17_size_cnt <= 2147479552UL);
      
#line 609 
      (*(ldv_17_container->write))(ldv_17_resource_1,(char const *)ldv_17_ldv_param_1_6,ldv_17_size_cnt,ldv_17_ldv_param_3_7);
    }
    else ;
    
#line 614 
    ldv_free((void *)ldv_17_ldv_param_3_7);
    
#line 615 
    ldv_free((void *)ldv_17_ldv_param_1_6);
    
#line 622 
    goto ldv_call_17;
    case 2: 
#line 625 
    ;
    
#line 628 
    (*ldv_emg_alias_single_release_4)(ldv_17_resource_0,ldv_17_resource_1);
    
#line 635 
    goto ldv_main_17;
    case 3: 
#line 638 
    ;
    
#line 642 
    tmp_9 = ldv_undef_int();
    
#line 642 
    if (tmp_9 != 0) 
#line 645 
                    (*ldv_emg_alias_seq_lseek_2)(ldv_17_resource_1,ldv_17_ldv_param_1_2,ldv_17_ldv_param_2_3);
    else {
      
#line 651 
      ldv_17_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 652 
      ldv_17_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 657 
      (*ldv_emg_alias_seq_read_3)(ldv_17_resource_1,ldv_17_ldv_param_1_4,ldv_17_size_cnt,ldv_17_ldv_param_3_5);
      
#line 661 
      ldv_free((void *)ldv_17_ldv_param_3_5);
      
#line 662 
      ldv_free((void *)ldv_17_ldv_param_1_4);
    }
    
#line 666 
    goto ldv_45634;
    default: 
#line 668 
    ;
    
#line 668 
    __VERIFIER_assume(0);
  }
  ldv_45634: 
#line 677 
  ;
  
#line 677 
  goto ldv_call_17;
  
#line 679 
  __retres = (void *)0;
  return_label: 
#line 679 
                return __retres;
}


#line 684  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_debugfs_remove(struct dentry *arg0)
{
  struct dentry *ldv_6_dentry;
  
#line 688 
  struct file_operations *ldv_6_file_operations = ldv_emg_alias_sky2_debug_fops_2;
  
#line 691 
  ldv_6_dentry = arg0;
  
#line 692 
  ldv_free((void *)ldv_6_dentry);
  
#line 696 
  ldv_dispatch_deregister_6_1(ldv_6_file_operations);
  
#line 700 
  goto return_label;
  return_label: 
#line 702 
                return;
}


#line 707  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_14_line;
  void *ldv_14_data;
  enum irqreturn (*ldv_14_thread)(int , void *);
  int tmp_0;
  
#line 712 
  enum irqreturn (*ldv_14_callback)(int , void *) = & ldv_emg_wrapper_sky2_intr_2;
  
#line 717 
  tmp_0 = ldv_undef_int();
  
#line 717 
  if (tmp_0 != 0) {
    
#line 719 
    ldv_14_line = (int)arg0;
    
#line 720 
    ldv_14_callback = arg1;
    
#line 721 
    ldv_14_thread = (enum irqreturn (*)(int , void *))0;
    
#line 722 
    ldv_14_data = arg4;
    
#line 726 
    ldv_dispatch_irq_register_14_3(ldv_14_line,ldv_14_callback,ldv_14_thread,ldv_14_data);
    
#line 730 
    __retres = 0;
    
#line 730 
    goto return_label;
  }
  else {
    int tmp;
    
#line 737 
    tmp = ldv_undef_int_negative();
    
#line 737 
    __retres = tmp;
    
#line 737 
    goto return_label;
  }
  return_label: 
#line 717 
                return __retres;
}


#line 747  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_20(void *arg0)
{
  void *__retres;
  struct ethtool_cmd *ldv_20_ldv_param_1_3;
  unsigned long long ldv_20_ldv_param_1_13;
  unsigned long long *ldv_20_ldv_param_2_10;
  struct ethtool_ringparam *ldv_20_ldv_param_1_16;
  void *ldv_20_ldv_param_2_28;
  unsigned char *ldv_20_ldv_param_2_15;
  struct ethtool_coalesce *ldv_20_ldv_param_1_25;
  int ldv_20_ldv_param_2_24;
  struct ethtool_eeprom *ldv_20_ldv_param_1_14;
  unsigned int ldv_20_ldv_param_1_29;
  struct ethtool_pauseparam *ldv_20_ldv_param_1_2;
  struct ethtool_cmd *ldv_20_ldv_param_1_4;
  enum ethtool_phys_id_state *ldv_20_ldv_param_1_5;
  unsigned long long ldv_20_ldv_param_1_11;
  struct ethtool_wolinfo *ldv_20_ldv_param_1_26;
  int ldv_20_ldv_param_1_8;
  struct net_device *ldv_20_container;
  unsigned char *ldv_20_ldv_param_2_20;
  struct ethtool_regs *ldv_20_ldv_param_1_27;
  struct ethtool_drvinfo *ldv_20_ldv_param_1_12;
  struct ifreq *ldv_20_ldv_param_1_23;
  void *ldv_20_ldv_param_1_18;
  struct ethtool_pauseparam *ldv_20_ldv_param_1_33;
  int ldv_20_ldv_param_1_21;
  unsigned int ldv_20_ldv_param_1_6;
  struct ethtool_ringparam *ldv_20_ldv_param_1_31;
  struct ethtool_stats *ldv_20_ldv_param_1_9;
  struct ethtool_coalesce *ldv_20_ldv_param_1_32;
  struct ethtool_eeprom *ldv_20_ldv_param_1_19;
  struct sk_buff *ldv_20_ldv_param_0_17;
  unsigned char *ldv_20_ldv_param_2_30;
  struct ethtool_wolinfo *ldv_20_ldv_param_1_22;
  struct rtnl_link_stats64 *ldv_20_ldv_param_1_7;
  int tmp_23;
  
#line 784 
  struct ldv_struct_random_allocationless_scenario_20 *data = (struct ldv_struct_random_allocationless_scenario_20 *)arg0;
  
#line 789 
  if (data != (struct ldv_struct_random_allocationless_scenario_20 *)0) {
    
#line 790 
    ldv_20_container = data->arg0;
    
#line 791 
    ldv_free((void *)data);
  }
  else ;
  
#line 799 
  goto ldv_call_20;
  
#line 801 
  __retres = (void *)0;
  
#line 801 
  goto return_label;
  ldv_call_20: 
#line 804 
  ;
  
#line 807 
  tmp_23 = ldv_undef_int();
  
#line 807 
  if (tmp_23 != 0) {
    int tmp_0;
    
#line 809 
    ldv_20_ldv_param_1_2 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
    
#line 812 
    tmp_0 = ldv_undef_int();
    
#line 812 
    switch (tmp_0) {
      case 1: 
#line 813 
      ;
      
#line 816 
      ldv_emg_wrapper_sky2_get_pauseparam_2(ldv_20_container,ldv_20_ldv_param_1_2);
      
#line 819 
      goto ldv_45697;
      case 2: 
#line 821 
      ;
      
#line 824 
      ldv_emg_wrapper_sky2_set_multicast_7(ldv_20_container);
      
#line 827 
      goto ldv_45697;
      case 3: 
#line 829 
      ;
      
#line 832 
      ldv_emg_wrapper_sky2_nway_reset_29(ldv_20_container);
      
#line 835 
      goto ldv_45697;
      case 4: 
#line 837 
      ;
      
#line 839 
      ldv_20_ldv_param_1_33 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 844 
      ldv_emg_wrapper_sky2_set_pauseparam_34(ldv_20_container,ldv_20_ldv_param_1_33);
      
#line 848 
      ldv_free((void *)ldv_20_ldv_param_1_33);
      
#line 851 
      goto ldv_45697;
      case 5: 
#line 853 
      ;
      
#line 855 
      ldv_20_ldv_param_1_32 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 860 
      ldv_emg_wrapper_sky2_set_coalesce_33(ldv_20_container,ldv_20_ldv_param_1_32);
      
#line 864 
      ldv_free((void *)ldv_20_ldv_param_1_32);
      
#line 867 
      goto ldv_45697;
      case 6: 
#line 869 
      ;
      
#line 872 
      ldv_emg_wrapper_sky2_get_regs_len_32(ldv_20_container);
      
#line 875 
      goto ldv_45697;
      case 7: 
#line 877 
      ;
      
#line 879 
      ldv_20_ldv_param_1_31 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 884 
      ldv_emg_wrapper_sky2_get_ringparam_13(ldv_20_container,ldv_20_ldv_param_1_31);
      
#line 888 
      ldv_free((void *)ldv_20_ldv_param_1_31);
      
#line 891 
      goto ldv_45697;
      case 8: 
#line 893 
      ;
      
#line 895 
      ldv_20_ldv_param_2_30 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 900 
      ldv_emg_wrapper_sky2_get_strings_6(ldv_20_container,ldv_20_ldv_param_1_29,ldv_20_ldv_param_2_30);
      
#line 904 
      ldv_free((void *)ldv_20_ldv_param_2_30);
      
#line 907 
      goto ldv_45697;
      case 9: 
#line 909 
      ;
      
#line 912 
      ldv_emg_wrapper_sky2_netpoll_35(ldv_20_container);
      
#line 915 
      goto ldv_45697;
      case 10: 
#line 917 
      ;
      
#line 920 
      ldv_emg_wrapper_sky2_tx_timeout_23(ldv_20_container);
      
#line 923 
      goto ldv_45697;
      case 11: 
#line 925 
      ;
      
#line 927 
      ldv_20_ldv_param_2_28 = ldv_xmalloc_unknown_size(0UL);
      
#line 928 
      ldv_20_ldv_param_1_27 = (struct ethtool_regs *)ldv_xmalloc_unknown_size(0UL);
      
#line 933 
      ldv_emg_wrapper_sky2_get_regs_27(ldv_20_container,ldv_20_ldv_param_1_27,ldv_20_ldv_param_2_28);
      
#line 937 
      ldv_free(ldv_20_ldv_param_2_28);
      
#line 938 
      ldv_free((void *)ldv_20_ldv_param_1_27);
      
#line 941 
      goto ldv_45697;
      case 12: 
#line 943 
      ;
      
#line 945 
      ldv_20_ldv_param_1_26 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 950 
      ldv_emg_wrapper_sky2_set_wol_26(ldv_20_container,ldv_20_ldv_param_1_26);
      
#line 954 
      ldv_free((void *)ldv_20_ldv_param_1_26);
      
#line 957 
      goto ldv_45697;
      case 13: 
#line 959 
      ;
      
#line 961 
      ldv_20_ldv_param_1_25 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 966 
      ldv_emg_wrapper_sky2_get_coalesce_31(ldv_20_container,ldv_20_ldv_param_1_25);
      
#line 970 
      ldv_free((void *)ldv_20_ldv_param_1_25);
      
#line 973 
      goto ldv_45697;
      case 14: 
#line 975 
      ;
      
#line 977 
      ldv_20_ldv_param_1_23 = (struct ifreq *)ldv_xmalloc_unknown_size(0UL);
      
#line 982 
      ldv_emg_wrapper_sky2_ioctl_25(ldv_20_container,ldv_20_ldv_param_1_23,ldv_20_ldv_param_2_24);
      
#line 986 
      ldv_free((void *)ldv_20_ldv_param_1_23);
      
#line 989 
      goto ldv_45697;
      case 15: 
#line 991 
      ;
      
#line 993 
      ldv_20_ldv_param_1_22 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 998 
      ldv_emg_wrapper_sky2_get_wol_24(ldv_20_container,ldv_20_ldv_param_1_22);
      
#line 1002 
      ldv_free((void *)ldv_20_ldv_param_1_22);
      
#line 1005 
      goto ldv_45697;
      case 16: 
#line 1007 
      ;
      
#line 1013 
      ldv_emg_wrapper_sky2_get_sset_count_28(ldv_20_container,ldv_20_ldv_param_1_21);
      
#line 1019 
      goto ldv_45697;
      case 17: 
#line 1021 
      ;
      
#line 1023 
      ldv_20_ldv_param_2_20 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1024 
      ldv_20_ldv_param_1_19 = (struct ethtool_eeprom *)ldv_xmalloc_unknown_size(0UL);
      
#line 1029 
      ldv_emg_wrapper_sky2_get_eeprom_3(ldv_20_container,ldv_20_ldv_param_1_19,ldv_20_ldv_param_2_20);
      
#line 1033 
      ldv_free((void *)ldv_20_ldv_param_2_20);
      
#line 1034 
      ldv_free((void *)ldv_20_ldv_param_1_19);
      
#line 1037 
      goto ldv_45697;
      case 18: 
#line 1039 
      ;
      
#line 1041 
      ldv_20_ldv_param_1_18 = ldv_xmalloc_unknown_size(0UL);
      
#line 1046 
      ldv_emg_wrapper_sky2_set_mac_address_21(ldv_20_container,ldv_20_ldv_param_1_18);
      
#line 1050 
      ldv_free(ldv_20_ldv_param_1_18);
      
#line 1053 
      goto ldv_45697;
      case 19: 
#line 1055 
      ;
      
#line 1057 
      ldv_20_ldv_param_0_17 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 1062 
      ldv_emg_wrapper_sky2_xmit_frame_20(ldv_20_ldv_param_0_17,ldv_20_container);
      
#line 1066 
      ldv_free((void *)ldv_20_ldv_param_0_17);
      
#line 1069 
      goto ldv_45697;
      case 20: 
#line 1071 
      ;
      
#line 1074 
      ldv_emg_wrapper_sky2_get_msglevel_19(ldv_20_container);
      
#line 1077 
      goto ldv_45697;
      case 21: 
#line 1079 
      ;
      
#line 1081 
      ldv_20_ldv_param_1_16 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 1086 
      ldv_emg_wrapper_sky2_set_ringparam_18(ldv_20_container,ldv_20_ldv_param_1_16);
      
#line 1090 
      ldv_free((void *)ldv_20_ldv_param_1_16);
      
#line 1093 
      goto ldv_45697;
      case 22: 
#line 1095 
      ;
      
#line 1097 
      ldv_20_ldv_param_1_14 = (struct ethtool_eeprom *)ldv_xmalloc_unknown_size(0UL);
      
#line 1098 
      ldv_20_ldv_param_2_15 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1103 
      ldv_emg_wrapper_sky2_set_eeprom_17(ldv_20_container,ldv_20_ldv_param_1_14,ldv_20_ldv_param_2_15);
      
#line 1107 
      ldv_free((void *)ldv_20_ldv_param_1_14);
      
#line 1108 
      ldv_free((void *)ldv_20_ldv_param_2_15);
      
#line 1111 
      goto ldv_45697;
      case 23: 
#line 1113 
      ;
      
#line 1116 
      ldv_emg_wrapper_sky2_get_eeprom_len_36(ldv_20_container);
      
#line 1119 
      goto ldv_45697;
      case 24: 
#line 1121 
      ;
      
#line 1127 
      ldv_emg_wrapper_sky2_fix_features_16(ldv_20_container,ldv_20_ldv_param_1_13);
      
#line 1133 
      goto ldv_45697;
      case 25: 
#line 1135 
      ;
      
#line 1137 
      ldv_20_ldv_param_1_12 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1142 
      ldv_emg_wrapper_sky2_get_drvinfo_15(ldv_20_container,ldv_20_ldv_param_1_12);
      
#line 1146 
      ldv_free((void *)ldv_20_ldv_param_1_12);
      
#line 1149 
      goto ldv_45697;
      case 26: 
#line 1151 
      ;
      
#line 1157 
      ldv_emg_wrapper_sky2_set_features_14(ldv_20_container,ldv_20_ldv_param_1_11);
      
#line 1163 
      goto ldv_45697;
      case 27: 
#line 1165 
      ;
      
#line 1168 
      (*ldv_emg_alias_ethtool_op_get_link_12)(ldv_20_container);
      
#line 1171 
      goto ldv_45697;
      case 28: 
#line 1173 
      ;
      
#line 1176 
      (*ldv_emg_alias_eth_validate_addr_9)(ldv_20_container);
      
#line 1179 
      goto ldv_45697;
      case 29: 
#line 1181 
      ;
      
#line 1183 
      ldv_20_ldv_param_1_9 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 1184 
      ldv_20_ldv_param_2_10 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1189 
      ldv_emg_wrapper_sky2_get_ethtool_stats_10(ldv_20_container,ldv_20_ldv_param_1_9,ldv_20_ldv_param_2_10);
      
#line 1193 
      ldv_free((void *)ldv_20_ldv_param_1_9);
      
#line 1194 
      ldv_free((void *)ldv_20_ldv_param_2_10);
      
#line 1197 
      goto ldv_45697;
      case 30: 
#line 1199 
      ;
      
#line 1205 
      ldv_emg_wrapper_sky2_change_mtu_11(ldv_20_container,ldv_20_ldv_param_1_8);
      
#line 1211 
      goto ldv_45697;
      case 31: 
#line 1213 
      ;
      
#line 1215 
      ldv_20_ldv_param_1_7 = (struct rtnl_link_stats64 *)ldv_xmalloc_unknown_size(0UL);
      
#line 1220 
      ldv_emg_wrapper_sky2_get_stats_8(ldv_20_container,ldv_20_ldv_param_1_7);
      
#line 1224 
      ldv_free((void *)ldv_20_ldv_param_1_7);
      
#line 1227 
      goto ldv_45697;
      case 32: 
#line 1229 
      ;
      
#line 1235 
      ldv_emg_wrapper_sky2_set_msglevel_30(ldv_20_container,ldv_20_ldv_param_1_6);
      
#line 1241 
      goto ldv_45697;
      case 33: 
#line 1243 
      ;
      
#line 1245 
      ldv_20_ldv_param_1_5 = (enum ethtool_phys_id_state *)ldv_xmalloc_unknown_size(0UL);
      
#line 1250 
      ldv_emg_wrapper_sky2_set_phys_id_5(ldv_20_container,*ldv_20_ldv_param_1_5);
      
#line 1254 
      ldv_free((void *)ldv_20_ldv_param_1_5);
      
#line 1257 
      goto ldv_45697;
      case 34: 
#line 1259 
      ;
      
#line 1261 
      ldv_20_ldv_param_1_4 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 1266 
      ldv_emg_wrapper_sky2_set_settings_4(ldv_20_container,ldv_20_ldv_param_1_4);
      
#line 1270 
      ldv_free((void *)ldv_20_ldv_param_1_4);
      
#line 1273 
      goto ldv_45697;
      case 35: 
#line 1275 
      ;
      
#line 1277 
      ldv_20_ldv_param_1_3 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 1282 
      ldv_emg_wrapper_sky2_get_settings_22(ldv_20_container,ldv_20_ldv_param_1_3);
      
#line 1286 
      ldv_free((void *)ldv_20_ldv_param_1_3);
      
#line 1289 
      goto ldv_45697;
      default: 
#line 1291 
      ;
      
#line 1291 
      __VERIFIER_assume(0);
    }
    ldv_45697: 
#line 1294 
    ;
    
#line 1294 
    ldv_free((void *)ldv_20_ldv_param_1_2);
    
#line 1301 
    goto ldv_call_20;
  }
  else {
    
#line 1309 
    __retres = (void *)0;
    
#line 1309 
    goto return_label;
  }
  
#line 1312 
  __retres = (void *)0;
  return_label: 
#line 1312 
                return __retres;
}


#line 1317  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_schedule_work(struct work_struct *arg0)
{
  _Bool __retres;
  struct work_struct *ldv_11_work_struct;
  int tmp;
  
#line 1324 
  tmp = ldv_undef_int();
  
#line 1324 
  if (tmp != 0) {
    
#line 1326 
    ldv_11_work_struct = arg0;
    
#line 1330 
    if (ldv_11_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 1332 
      (*(ldv_11_work_struct->func))(ldv_11_work_struct); else ;
    
#line 1337 
    __retres = (_Bool)1;
    
#line 1337 
    goto return_label;
  }
  else {
    
#line 1344 
    __retres = (_Bool)0;
    
#line 1344 
    goto return_label;
  }
  return_label: 
#line 1324 
                return __retres;
}


#line 1354  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 1361 
  ldv_1_ret = ldv_emg_sky2_init_module();
  
#line 1362 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 1365 
  tmp = ldv_undef_int();
  
#line 1365 
  if (tmp != 0) {
    
#line 1367 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 1371 
    __retres = (void *)0;
    
#line 1371 
    goto return_label;
  }
  else {
    
#line 1375 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 1380 
    ldv_emg_sky2_cleanup_module();
    
#line 1384 
    __retres = (void *)0;
    
#line 1384 
    goto return_label;
  }
  
#line 1387 
  __retres = (void *)0;
  return_label: 
#line 1387 
                return __retres;
}


#line 1392  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 1395 
  ldv_initialize();
  
#line 1398 
  ldv_initialization_1((void *)0);
  
#line 1400 
  __retres = 0;
  
#line 1400 
  return __retres;
}


#line 1405  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_8_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_15 *cf_arg_15;
  int tmp;
  
#line 1408 
  tmp = ldv_undef_int();
  
#line 1408 
  switch (tmp) {
    case 0: 
#line 1409 
    ;
    
#line 1410 
    ret = pthread_join(ldv_thread_15,(void **)0);
    
#line 1411 
    __VERIFIER_assume(ret == 0);
    
#line 1412 
    goto ldv_45750;
    default: 
#line 1414 
    ;
    
#line 1414 
    __VERIFIER_assume(0);
  }
  ldv_45750: 
#line 1415 
  ;
  
#line 1416 
  return;
}


#line 1420  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_7_line;
  
#line 1426 
  ldv_7_line = (int)arg0;
  
#line 1430 
  ldv_dispatch_irq_deregister_7_1(ldv_7_line);
  
#line 1434 
  goto return_label;
  return_label: 
#line 1436 
                return;
}


#line 1441  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_15(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_15_resource_1;
  struct pci_device_id *ldv_15_ldv_param_1_2;
  struct pm_message ldv_15_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 1446 
  struct pci_driver *ldv_15_container = ldv_emg_alias_sky2_driver_2;
  
#line 1447 
  int ldv_15_ret = ldv_undef_int();
  
#line 1450 
  struct ldv_struct_pci_scenario_15 *data = (struct ldv_struct_pci_scenario_15 *)arg0;
  
#line 1454 
  ldv_15_ret = ldv_undef_int();
  
#line 1457 
  if (data != (struct ldv_struct_pci_scenario_15 *)0) {
    
#line 1458 
    ldv_15_container = data->arg0;
    
#line 1459 
    ldv_free((void *)data);
  }
  else ;
  
#line 1470 
  goto ldv_main_15;
  
#line 1472 
  __retres = (void *)0;
  
#line 1472 
  goto return_label;
  ldv_main_15: 
#line 1475 
  ;
  
#line 1478 
  tmp_2 = ldv_undef_int();
  
#line 1478 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 1480 
    ldv_15_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 1485 
    ldv_pre_probe();
    
#line 1487 
    ldv_15_ret = ldv_emg_wrapper_sky2_probe_3(ldv_15_resource_1,ldv_15_ldv_param_1_2);
    
#line 1489 
    ldv_15_ret = ldv_post_probe(ldv_15_ret);
    
#line 1493 
    ldv_free((void *)ldv_15_ldv_param_1_2);
    
#line 1496 
    tmp_1 = ldv_undef_int();
    
#line 1496 
    if (tmp_1 != 0) {
      
#line 1498 
      __VERIFIER_assume(ldv_15_ret == 0);
      
#line 1505 
      goto ldv_call_15;
    }
    else {
      
#line 1509 
      __VERIFIER_assume(ldv_15_ret != 0);
      
#line 1516 
      goto ldv_main_15;
    }
  }
  else {
    
#line 1528 
    __retres = (void *)0;
    
#line 1528 
    goto return_label;
  }
  
#line 1531 
  __retres = (void *)0;
  
#line 1531 
  goto return_label;
  ldv_call_15: 
#line 1534 
  ;
  
#line 1537 
  tmp_3 = ldv_undef_int();
  
#line 1537 
  switch (tmp_3) {
    case 1: 
#line 1538 
    ;
    
#line 1547 
    goto ldv_call_15;
    case 2: 
#line 1550 
    ;
    
#line 1552 
    if (ldv_15_container->suspend != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 1554 
      ldv_15_ret = (*(ldv_15_container->suspend))(ldv_15_resource_1,ldv_15_resource_0);
      
#line 1556 
      ldv_15_ret = ldv_filter_err_code(ldv_15_ret);
    }
    else 
#line 1558 
         ldv_15_ret = ldv_undef_int();
    
#line 1563 
    if (ldv_15_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 1565 
      ldv_15_ret = (*(ldv_15_container->suspend_late))(ldv_15_resource_1,ldv_15_resource_0);
      
#line 1567 
      ldv_15_ret = ldv_filter_err_code(ldv_15_ret);
    }
    else 
#line 1569 
         ldv_15_ret = ldv_undef_int();
    
#line 1574 
    if (ldv_15_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 1576 
      (*(ldv_15_container->resume_early))(ldv_15_resource_1); else ;
    
#line 1581 
    if (ldv_15_container->resume != (int (*)(struct pci_dev *))0) 
#line 1583 
                                                                  (*(ldv_15_container->resume))(ldv_15_resource_1); else ;
    
#line 1591 
    goto ldv_call_15;
    case 3: 
#line 1594 
    ;
    
#line 1597 
    ldv_emg_wrapper_sky2_shutdown_2(ldv_15_resource_1);
    
#line 1602 
    ldv_emg_wrapper_sky2_remove_4(ldv_15_resource_1);
    
#line 1609 
    goto ldv_main_15;
    default: 
#line 1612 
    ;
    
#line 1612 
    __VERIFIER_assume(0);
  }
  
#line 1615 
  __retres = (void *)0;
  return_label: 
#line 1615 
                return __retres;
}


#line 1620  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_13_3(struct file_operations *arg0)
{
  int ret;
  struct ldv_struct_character_driver_scenario_17 *cf_arg_17;
  int tmp;
  
#line 1623 
  tmp = ldv_undef_int();
  
#line 1623 
  switch (tmp) {
    case 0: 
#line 1624 
    ;
    
#line 1625 
    cf_arg_17 = (struct ldv_struct_character_driver_scenario_17 *)ldv_xmalloc(16UL);
    
#line 1626 
    cf_arg_17->arg0 = arg0;
    
#line 1627 
    ret = pthread_create(& ldv_thread_17,(pthread_attr_t const *)0,& ldv_character_driver_scenario_17,(void *)cf_arg_17);
    
#line 1628 
    __VERIFIER_assume(ret == 0);
    
#line 1629 
    goto ldv_45778;
    default: 
#line 1631 
    ;
    
#line 1631 
    __VERIFIER_assume(0);
  }
  ldv_45778: 
#line 1632 
  ;
  
#line 1633 
  return;
}


#line 1637  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 1640 
  struct pci_driver *ldv_8_pci_driver = ldv_emg_alias_sky2_driver_2;
  
#line 1643 
  ldv_8_pci_driver = arg0;
  
#line 1647 
  ldv_dispatch_deregister_8_1(ldv_8_pci_driver);
  
#line 1651 
  goto return_label;
  return_label: 
#line 1653 
                return;
}


#line 1658  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_timer_scenario_19(void *arg0)
{
  void *__retres;
  struct timer_list *ldv_19_container;
  
#line 1663 
  struct ldv_struct_timer_scenario_19 *data = (struct ldv_struct_timer_scenario_19 *)arg0;
  
#line 1668 
  if (data != (struct ldv_struct_timer_scenario_19 *)0) {
    
#line 1669 
    ldv_19_container = data->arg0;
    
#line 1670 
    ldv_free((void *)data);
  }
  else ;
  
#line 1675 
  if (ldv_19_container->function != (void (*)(unsigned long ))0) {
    
#line 1677 
    ldv_switch_to_interrupt_context();
    
#line 1679 
    (*(ldv_19_container->function))(ldv_19_container->data);
    
#line 1681 
    ldv_switch_to_process_context();
  }
  else ;
  
#line 1690 
  __retres = (void *)0;
  
#line 1690 
  goto return_label;
  
#line 1692 
  __retres = (void *)0;
  return_label: 
#line 1692 
                return __retres;
}


#line 1697  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_register_3_3(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_19 *cf_arg_19;
  int tmp;
  
#line 1700 
  tmp = ldv_undef_int();
  
#line 1700 
  switch (tmp) {
    case 0: 
#line 1701 
    ;
    
#line 1702 
    cf_arg_19 = (struct ldv_struct_timer_scenario_19 *)ldv_xmalloc(16UL);
    
#line 1703 
    cf_arg_19->arg0 = arg0;
    
#line 1704 
    ret = pthread_create(& ldv_thread_19,(pthread_attr_t const *)0,& ldv_timer_scenario_19,(void *)cf_arg_19);
    
#line 1705 
    __VERIFIER_assume(ret == 0);
    
#line 1706 
    goto ldv_45795;
    default: 
#line 1708 
    ;
    
#line 1708 
    __VERIFIER_assume(0);
  }
  ldv_45795: 
#line 1709 
  ;
  
#line 1710 
  return;
}


#line 1714  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_5_netdev;
  
#line 1720 
  ldv_5_netdev = arg0;
  
#line 1725 
  ldv_emg_wrapper_sky2_close_2(ldv_5_netdev);
  
#line 1729 
  ldv_dispatch_deregister_5_1(ldv_5_netdev);
  
#line 1733 
  goto return_label;
  return_label: 
#line 1735 
                return;
}


#line 1740  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pm_ops_scenario_16(void *arg0)
{
  void *__retres;
  struct device *ldv_16_device;
  int tmp;
  
#line 1743 
  struct dev_pm_ops *ldv_16_pm_ops = ldv_emg_alias_sky2_pm_ops_3;
  
#line 1754 
  goto ldv_do_16;
  
#line 1756 
  __retres = (void *)0;
  
#line 1756 
  goto return_label;
  ldv_do_16: 
#line 1759 
  ;
  
#line 1762 
  tmp = ldv_undef_int();
  
#line 1762 
  switch (tmp) {
    int tmp_0;
    case 1: 
#line 1763 
    ;
    
#line 1765 
    if (ldv_16_pm_ops->runtime_idle != (int (*)(struct device *))0) 
#line 1767 
                                                                    (*(ldv_16_pm_ops->runtime_idle))(ldv_16_device); else ;
    
#line 1775 
    goto ldv_do_16;
    case 2: 
#line 1778 
    ;
    
#line 1780 
    if (ldv_16_pm_ops->runtime_suspend != (int (*)(struct device *))0) 
      
#line 1782 
      (*(ldv_16_pm_ops->runtime_suspend))(ldv_16_device); else ;
    
#line 1787 
    if (ldv_16_pm_ops->runtime_resume != (int (*)(struct device *))0) 
      
#line 1789 
      (*(ldv_16_pm_ops->runtime_resume))(ldv_16_device); else ;
    
#line 1797 
    goto ldv_do_16;
    case 3: 
#line 1800 
    ;
    
#line 1802 
    if (ldv_16_pm_ops->prepare != (int (*)(struct device *))0) 
#line 1804 
                                                               (*(ldv_16_pm_ops->prepare))(ldv_16_device); else ;
    
#line 1808 
    tmp_0 = ldv_undef_int();
    
#line 1808 
    switch (tmp_0) {
      int tmp_1;
      int tmp_2;
      int tmp_3;
      case 1: 
#line 1809 
      ;
      
#line 1812 
      ldv_emg_wrapper_sky2_suspend_2(ldv_16_device);
      
#line 1815 
      tmp_1 = ldv_undef_int();
      
#line 1815 
      if (tmp_1 != 0) {
        
#line 1817 
        if (ldv_16_pm_ops->suspend_noirq != (int (*)(struct device *))0) 
          
#line 1819 
          (*(ldv_16_pm_ops->suspend_noirq))(ldv_16_device); else ;
        
#line 1824 
        if (ldv_16_pm_ops->resume_noirq != (int (*)(struct device *))0) 
          
#line 1826 
          (*(ldv_16_pm_ops->resume_noirq))(ldv_16_device); else ;
      }
      else {
        
#line 1833 
        if (ldv_16_pm_ops->suspend_late != (int (*)(struct device *))0) 
          
#line 1835 
          (*(ldv_16_pm_ops->suspend_late))(ldv_16_device); else ;
        
#line 1840 
        if (ldv_16_pm_ops->resume_early != (int (*)(struct device *))0) 
          
#line 1842 
          (*(ldv_16_pm_ops->resume_early))(ldv_16_device); else ;
      }
      
#line 1849 
      ldv_emg_wrapper_sky2_resume_4(ldv_16_device);
      
#line 1852 
      goto ldv_45811;
      case 2: 
#line 1854 
      ;
      
#line 1857 
      ldv_emg_wrapper_sky2_suspend_2(ldv_16_device);
      
#line 1860 
      tmp_2 = ldv_undef_int();
      
#line 1860 
      if (tmp_2 != 0) {
        
#line 1862 
        if (ldv_16_pm_ops->freeze_late != (int (*)(struct device *))0) 
          
#line 1864 
          (*(ldv_16_pm_ops->freeze_late))(ldv_16_device); else ;
        
#line 1869 
        if (ldv_16_pm_ops->thaw_early != (int (*)(struct device *))0) 
          
#line 1871 
          (*(ldv_16_pm_ops->thaw_early))(ldv_16_device); else ;
      }
      else {
        
#line 1878 
        if (ldv_16_pm_ops->freeze_noirq != (int (*)(struct device *))0) 
          
#line 1880 
          (*(ldv_16_pm_ops->freeze_noirq))(ldv_16_device); else ;
        
#line 1885 
        if (ldv_16_pm_ops->thaw_noirq != (int (*)(struct device *))0) 
          
#line 1887 
          (*(ldv_16_pm_ops->thaw_noirq))(ldv_16_device); else ;
      }
      
#line 1894 
      ldv_emg_wrapper_sky2_resume_4(ldv_16_device);
      
#line 1897 
      goto ldv_45811;
      case 3: 
#line 1899 
      ;
      
#line 1902 
      ldv_emg_wrapper_sky2_suspend_2(ldv_16_device);
      
#line 1905 
      tmp_3 = ldv_undef_int();
      
#line 1905 
      if (tmp_3 != 0) {
        
#line 1907 
        if (ldv_16_pm_ops->poweroff_late != (int (*)(struct device *))0) 
          
#line 1909 
          (*(ldv_16_pm_ops->poweroff_late))(ldv_16_device); else ;
        
#line 1914 
        if (ldv_16_pm_ops->restore_early != (int (*)(struct device *))0) 
          
#line 1916 
          (*(ldv_16_pm_ops->restore_early))(ldv_16_device); else ;
      }
      else {
        
#line 1923 
        if (ldv_16_pm_ops->poweroff_noirq != (int (*)(struct device *))0) 
          
#line 1925 
          (*(ldv_16_pm_ops->poweroff_noirq))(ldv_16_device); else ;
        
#line 1930 
        if (ldv_16_pm_ops->restore_noirq != (int (*)(struct device *))0) 
          
#line 1932 
          (*(ldv_16_pm_ops->restore_noirq))(ldv_16_device); else ;
      }
      
#line 1939 
      ldv_emg_wrapper_sky2_resume_4(ldv_16_device);
      
#line 1942 
      goto ldv_45811;
      default: 
#line 1944 
      ;
      
#line 1944 
      __VERIFIER_assume(0);
    }
    ldv_45811: 
#line 1947 
    ;
    
#line 1947 
    if (ldv_16_pm_ops->complete != (void (*)(struct device *))0) 
#line 1949 
                                                                 (*(ldv_16_pm_ops->complete))(ldv_16_device); else ;
    
#line 1957 
    goto ldv_do_16;
    case 4: 
#line 1960 
    ;
    
#line 1966 
    __retres = (void *)0;
    
#line 1966 
    goto return_label;
    default: 
#line 1969 
    ;
    
#line 1969 
    __VERIFIER_assume(0);
  }
  
#line 1972 
  __retres = (void *)0;
  return_label: 
#line 1972 
                return __retres;
}


#line 1977  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_deregister_12_1(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_19 *cf_arg_19;
  int tmp;
  
#line 1980 
  tmp = ldv_undef_int();
  
#line 1980 
  switch (tmp) {
    case 0: 
#line 1981 
    ;
    
#line 1982 
    ret = pthread_join(ldv_thread_19,(void **)0);
    
#line 1983 
    __VERIFIER_assume(ret == 0);
    
#line 1984 
    goto ldv_45823;
    default: 
#line 1986 
    ;
    
#line 1986 
    __VERIFIER_assume(0);
  }
  ldv_45823: 
#line 1987 
  ;
  
#line 1988 
  return;
}


#line 1992  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_9_netdev;
  int tmp_3;
  
#line 1996 
  int ldv_9_ret = ldv_undef_int();
  
#line 1999 
  ldv_9_ret = ldv_undef_int();
  
#line 2002 
  tmp_3 = ldv_undef_int();
  
#line 2002 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 2004 
    ldv_9_netdev = arg0;
    
#line 2009 
    ldv_9_ret = ldv_emg_wrapper_sky2_open_2(ldv_9_netdev);
    
#line 2012 
    tmp_1 = ldv_undef_int();
    
#line 2012 
    if (tmp_1 != 0) {
      
#line 2014 
      __VERIFIER_assume(ldv_9_ret == 0);
      
#line 2018 
      ldv_dispatch_register_9_4(ldv_9_netdev);
      
#line 2022 
      __retres = 0;
      
#line 2022 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 2029 
      __VERIFIER_assume(ldv_9_ret != 0);
      
#line 2030 
      ldv_failed_register_netdev();
      
#line 2031 
      tmp_0 = ldv_undef_int_negative();
      
#line 2031 
      __retres = tmp_0;
      
#line 2031 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 2039 
    ldv_failed_register_netdev();
    
#line 2040 
    tmp_2 = ldv_undef_int_negative();
    
#line 2040 
    __retres = tmp_2;
    
#line 2040 
    goto return_label;
  }
  return_label: 
#line 2002 
                return __retres;
}


#line 2050  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_6_1(struct file_operations *arg0)
{
  int ret;
  struct ldv_struct_character_driver_scenario_17 *cf_arg_17;
  int tmp;
  
#line 2053 
  tmp = ldv_undef_int();
  
#line 2053 
  switch (tmp) {
    case 0: 
#line 2054 
    ;
    
#line 2055 
    ret = pthread_join(ldv_thread_17,(void **)0);
    
#line 2056 
    __VERIFIER_assume(ret == 0);
    
#line 2057 
    goto ldv_45836;
    default: 
#line 2059 
    ;
    
#line 2059 
    __VERIFIER_assume(0);
  }
  ldv_45836: 
#line 2060 
  ;
  
#line 2061 
  return;
}


#line 2065  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 2071 
  ldv_2_netdev = arg0;
  
#line 2072 
  ldv_free((void *)ldv_2_netdev);
  
#line 2076 
  goto return_label;
  return_label: 
#line 2078 
                return;
}


#line 2083  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/marvell/sky2.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1)
{
  int __retres;
  struct timer_list *ldv_3_timer_list;
  int tmp_0;
  
#line 2090 
  tmp_0 = ldv_undef_int();
  
#line 2090 
  if (tmp_0 != 0) {
    
#line 2092 
    ldv_3_timer_list = arg0;
    
#line 2096 
    ldv_dispatch_instance_register_3_3(ldv_3_timer_list);
    
#line 2100 
    __retres = 0;
    
#line 2100 
    goto return_label;
  }
  else {
    int tmp;
    
#line 2107 
    tmp = ldv_undef_int_negative();
    
#line 2107 
    __retres = tmp;
    
#line 2107 
    goto return_label;
  }
  return_label: 
#line 2090 
                return __retres;
}


