/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __le16;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __le32;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned char u_char;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue wait_queue_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue {
   unsigned int flags ;
   void *private ;
   int (*func)(wait_queue_t *, unsigned int , int , void *) ;
   struct list_head task_list ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 1170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugobjects.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39 
struct rw_semaphore;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct vm_area_struct;

#line 173 
struct inode;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 239 
enum hrtimer_restart;

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_47 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_46 {
   struct __anonstruct_47 __anonCompField___anonunion_46_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_46 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11688 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct blocking_notifier_head {
   struct rw_semaphore rwsem ;
   struct notifier_block *head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_53 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_54 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_52 {
   struct __anonstruct_53 __anonCompField___anonunion_52_23 ;
   struct __anonstruct_54 __anonCompField___anonunion_52_24 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_52 __anonCompField_uprobe_task_25 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_55 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_55 mm_context_t;

#line 27 
struct address_space;

#line 28 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_56 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_58 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_62 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_61 {
   atomic_t _mapcount ;
   struct __anonstruct_62 __anonCompField___anonunion_61_28 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_60 {
   union __anonunion_61 __anonCompField___anonstruct_60_29 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_59 {
   unsigned long counters ;
   struct __anonstruct_60 __anonCompField___anonunion_59_30 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_57 {
   union __anonunion_58 __anonCompField___anonstruct_57_27 ;
   union __anonunion_59 __anonCompField___anonstruct_57_31 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_64 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_65 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_63 {
   struct list_head lru ;
   struct __anonstruct_64 __anonCompField___anonunion_63_33 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_65 __anonCompField___anonunion_63_34 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_66 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_56 __anonCompField_page_26 ;
   struct __anonstruct_57 __anonCompField_page_32 ;
   union __anonunion_63 __anonCompField_page_35 ;
   union __anonunion_66 __anonCompField_page_36 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_67 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_67 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct bio_vec;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_69 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_69 __anonCompField_iov_iter_37 ;
   unsigned long nr_segs ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 18 
struct pid;

#line 19 
struct cred;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/fcntl.h"
enum ldv_12296 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_12296 socket_state;

#line 54 
struct poll_table_struct;

#line 55 
struct pipe_inode_info;

#line 56 
struct net;

#line 73 
struct fasync_struct;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct sock;

#line 93 
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_70 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_70 nodemask_t;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 33 
struct dentry;

#line 34 
struct user_namespace;

#line 250  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct plist_head {
   struct list_head node_list ;
};

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_162 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_162 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_163 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_163 kgid_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_164 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_164 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_166 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_167 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_168 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_169 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_171 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_170 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_171 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_172 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_173 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_165 {
   int _pad[28U] ;
   struct __anonstruct__kill_166 _kill ;
   struct __anonstruct__timer_167 _timer ;
   struct __anonstruct__rt_168 _rt ;
   struct __anonstruct__sigchld_169 _sigchld ;
   struct __anonstruct__sigfault_170 _sigfault ;
   struct __anonstruct__sigpoll_172 _sigpoll ;
   struct __anonstruct__sigsys_173 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_165 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_180 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_181 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_183 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_182 {
   struct keyring_index_key index_key ;
   struct __anonstruct_183 __anonCompField___anonunion_182_50 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_184 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_186 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_185 {
   union __anonunion_payload_186 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_180 __anonCompField_key_48 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_181 __anonCompField_key_49 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_182 __anonCompField_key_51 ;
   union __anonunion_type_data_184 type_data ;
   union __anonunion_185 __anonCompField_key_52 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
union __anonunion_187 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_187 __anonCompField_idr_layer_53 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 31 
struct kernfs_node;

#line 32 
struct kernfs_ops;

#line 33 
struct kernfs_open_file;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270 
struct kernfs_root;

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct uts_namespace;

#line 1173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 176 
struct iattr;

#line 177 
struct super_block;

#line 178 
struct file_system_type;

#line 179 
struct kernfs_open_node;

#line 180 
struct kernfs_iattrs;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_206 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_206 __anonCompField_kernfs_node_57 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct kobject;

#line 478 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/stat.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct bin_attribute;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203 
struct of_device_id;

#line 203 
struct acpi_device_id;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 292  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct driver_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device_driver *, char *) ;
   ssize_t (*store)(struct device_driver *, char const *, size_t ) ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 1283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_207 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_207 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_22628 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_212 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_213 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_22628 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_212 __anonCompField_nf_bridge_info_61 ;
   union __anonunion_213 __anonCompField_nf_bridge_info_62 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_216 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_215 {
   u64 v64 ;
   struct __anonstruct_216 __anonCompField___anonunion_215_63 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_215 __anonCompField_skb_mstamp_64 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_219 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_218 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_219 __anonCompField___anonstruct_218_65 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_217 {
   struct __anonstruct_218 __anonCompField___anonunion_217_66 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_221 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_220 {
   __wsum csum ;
   struct __anonstruct_221 __anonCompField___anonunion_220_68 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_222 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_223 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_224 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_217 __anonCompField_sk_buff_67 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_220 __anonCompField_sk_buff_69 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_222 __anonCompField_sk_buff_70 ;
   __u32 secmark ;
   union __anonunion_223 __anonCompField_sk_buff_71 ;
   union __anonunion_224 __anonCompField_sk_buff_72 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 767 
struct rtable;

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_226 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_226 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_227 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_227 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_228 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_228 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_229 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_229 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_230 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_230 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_231 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_231 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_232 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_232 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_233 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_233 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_234 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_235 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_234 ifr_ifrn ;
   union __anonunion_ifr_ifru_235 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_240 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_239 {
   struct __anonstruct_240 __anonCompField___anonunion_239_73 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_239 __anonCompField_lockref_74 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_242 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_241 {
   struct __anonstruct_242 __anonCompField___anonunion_241_75 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_241 __anonCompField_qstr_76 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_243 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_243 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_247 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_246 {
   struct __anonstruct_247 __anonCompField___anonunion_246_77 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_246 __anonCompField_radix_tree_node_78 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct kstatfs;

#line 63 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_251 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_251 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_252 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_252 __anonCompField_kqid_80 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_255 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_256 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_257 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_255 __anonCompField_inode_81 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_256 __anonCompField_inode_82 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_257 __anonCompField_inode_83 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_258 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_258 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_260 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_259 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_260 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_259 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118 
struct proc_dir_entry;

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_291 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_291 possible_net_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_28215 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_28215 phy_interface_t;

#line 126 
enum ldv_28268 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_28268 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct xfrm_policy;

#line 98 
struct xfrm_state;

#line 114 
struct request_sock;

#line 1628 
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_29980 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_29981 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_304 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_305 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_306 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_304 adj_list ;
   struct __anonstruct_all_adj_list_305 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_29980 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_29981 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_306 __anonCompField_net_device_93 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct kernel_param;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_315 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_315 __anonCompField_kernel_param_94 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_322 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_322 __anonCompField_pci_dev_95 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uaccess.h"
struct page_counter {
   atomic_long_t count ;
   unsigned long limit ;
   struct page_counter *parent ;
   unsigned long watermark ;
   unsigned long failcnt ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cacheflush.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/filter.h"
struct bpf_insn {
   __u8 code ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) dst_reg : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/bpf.h"
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4
};

#line 273 
struct bpf_prog_aux;

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
union __anonunion_329 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   bool jited ;
   bool gpl_compatible ;
   u32 len ;
   enum bpf_prog_type type ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(struct sk_buff const *, struct bpf_insn const *) ;
   union __anonunion_329 __anonCompField_bpf_prog_100 ;
};

#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sk_filter {
   atomic_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_nulls.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   unsigned long _key ;
};

#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
struct nla_policy {
   u16 type ;
   u16 len ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char const *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   int maxtype ;
   struct nla_policy const *policy ;
   int (*validate)(struct nlattr **, struct nlattr **) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device const *) ;
   int (*fill_info)(struct sk_buff *, struct net_device const *) ;
   size_t (*get_xstats_size)(struct net_device const *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device const *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   int slave_maxtype ;
   struct nla_policy const *slave_policy ;
   int (*slave_validate)(struct nlattr **, struct nlattr **) ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **) ;
   size_t (*get_slave_size)(struct net_device const *, struct net_device const *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device const *, struct net_device const *) ;
   struct net *(*get_link_net)(struct net_device const *) ;
};

#line 171 
struct neigh_table;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   void (*neigh_cleanup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   atomic_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
};

#line 129 
struct neigh_ops;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   atomic_t refcnt ;
   struct sk_buff_head arp_queue ;
   unsigned int arp_queue_len_bytes ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops const *ops ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 key[0U] ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_table {
   int family ;
   int entry_size ;
   int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void const *, struct net_device const *, __u32 *) ;
   bool (*key_eq)(struct neighbour const *, void const *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};

#line 519 
struct dn_route;

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
union __anonunion_340 {
   struct dst_entry *next ;
   struct rtable *rt_next ;
   struct rt6_info *rt6_next ;
   struct dn_route *dn_next ;
};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct dst_entry {
   struct callback_head callback_head ;
   struct dst_entry *child ;
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct dst_entry *path ;
   struct dst_entry *from ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   unsigned short pending_confirm ;
   short error ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   __u32 tclassid ;
   long __pad_to_align_refcnt[2U] ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   union __anonunion_340 __anonCompField_dst_entry_101 ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_socket_lock_t_341 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef struct __anonstruct_socket_lock_t_341 socket_lock_t;

#line 124 
struct proto;

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u32 __portpair;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u64 __addrpair;

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_343 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_342 {
   __addrpair skc_addrpair ;
   struct __anonstruct_343 __anonCompField___anonunion_342_102 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_344 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_346 {
   __be16 skc_dport ;
   __u16 skc_num ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_345 {
   __portpair skc_portpair ;
   struct __anonstruct_346 __anonCompField___anonunion_345_105 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_347 {
   struct hlist_node skc_bind_node ;
   struct hlist_nulls_node skc_portaddr_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_348 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock_common {
   union __anonunion_342 __anonCompField_sock_common_103 ;
   union __anonunion_344 __anonCompField_sock_common_104 ;
   union __anonunion_345 __anonCompField_sock_common_106 ;
   unsigned short skc_family ;
   unsigned char volatile skc_state ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) skc_reuse : 4 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_reuseport : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_ipv6only : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_347 __anonCompField_sock_common_107 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_348 __anonCompField_sock_common_108 ;
   int skc_tx_queue_mapping ;
   atomic_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
};

#line 219 
struct cg_proto;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_sk_backlog_349 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_349 sk_backlog ;
   int sk_forward_alloc ;
   __u32 sk_rxhash ;
   u16 sk_incoming_cpu ;
   __u32 sk_txhash ;
   unsigned int sk_napi_id ;
   unsigned int sk_ll_usec ;
   atomic_t sk_drops ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   struct socket_wq *sk_wq ;
   struct xfrm_policy *sk_policy[2U] ;
   unsigned long sk_flags ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   spinlock_t sk_dst_lock ;
   atomic_t sk_wmem_alloc ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   struct sk_buff_head sk_write_queue ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) sk_shutdown : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_tx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_rx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) sk_userlocks : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) sk_protocol : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) sk_type : 16 ;
   int sk_wmem_queued ;
   gfp_t sk_allocation ;
   u32 sk_pacing_rate ;
   u32 sk_max_pacing_rate ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   u16 sk_gso_max_segs ;
   int sk_rcvlowat ;
   unsigned long sk_lingertime ;
   struct sk_buff_head sk_error_queue ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   __u32 sk_priority ;
   __u32 sk_cgrp_prioidx ;
   struct pid *sk_peer_pid ;
   struct cred const *sk_peer_cred ;
   long sk_rcvtimeo ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u32 sk_tskey ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   struct page_frag sk_frag ;
   struct sk_buff *sk_send_head ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   void *sk_security ;
   __u32 sk_mark ;
   u32 sk_classid ;
   struct cg_proto *sk_cgrp ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
};

#line 914 
struct request_sock_ops;

#line 915 
struct timewait_sock_ops;

#line 916 
struct inet_hashinfo;

#line 917 
struct raw_hashinfo;

#line 932 
struct udp_table;

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_h_352 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
};

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   void (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   void (*clear_sk)(struct sock *, int ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock const *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   int *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   int slab_flags ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_352 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*init_cgroup)(struct mem_cgroup *, struct cgroup_subsys *) ;
   void (*destroy_cgroup)(struct mem_cgroup *) ;
   struct cg_proto *(*proto_cgroup)(struct mem_cgroup *) ;
};

#line 1054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct cg_proto {
   struct page_counter memory_allocated ;
   struct percpu_counter sockets_allocated ;
   int memory_pressure ;
   long sysctl_mem[3U] ;
   unsigned long flags ;
   struct mem_cgroup *memcg ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jhash.h"
struct request_sock_ops {
   int family ;
   int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock const *) ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   struct sock *rsk_listener ;
   u16 mss ;
   u8 num_retrans ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cookie_ts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) num_timeout : 7 ;
   u32 window_clamp ;
   u32 rcv_wnd ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops const *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};

#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_connection_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};

#line 410  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
struct firmware {
   size_t size ;
   u8 const *data ;
   struct page **pages ;
   void *priv ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/miscdevice.h"
struct pm_qos_request {
   struct plist_node node ;
   int pm_qos_class ;
   struct delayed_work work ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm_qos.h"
struct pm_qos_flags_request {
   struct list_head node ;
   s32 flags ;
};

#line 55 
enum dev_pm_qos_req_type {
    DEV_PM_QOS_RESUME_LATENCY = 1,
    DEV_PM_QOS_LATENCY_TOLERANCE = 2,
    DEV_PM_QOS_FLAGS = 3
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm_qos.h"
union __anonunion_data_377 {
   struct plist_node pnode ;
   struct pm_qos_flags_request flr ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm_qos.h"
struct dev_pm_qos_request {
   enum dev_pm_qos_req_type type ;
   union __anonunion_data_377 data ;
   struct device *dev ;
};

#line 70 
enum pm_qos_type {
    PM_QOS_UNITIALIZED = 0,
    PM_QOS_MAX = 1,
    PM_QOS_MIN = 2,
    PM_QOS_SUM = 3
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm_qos.h"
struct pm_qos_constraints {
   struct plist_head list ;
   s32 target_value ;
   s32 default_value ;
   s32 no_constraint_value ;
   enum pm_qos_type type ;
   struct blocking_notifier_head *notifiers ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm_qos.h"
struct pm_qos_flags {
   struct list_head list ;
   s32 effective_flags ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm_qos.h"
struct dev_pm_qos {
   struct pm_qos_constraints resume_latency ;
   struct pm_qos_constraints latency_tolerance ;
   struct pm_qos_flags flags ;
   struct dev_pm_qos_request *resume_latency_req ;
   struct dev_pm_qos_request *latency_tolerance_req ;
   struct dev_pm_qos_request *flags_req ;
};

#line 1204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_mcs_info {
   u8 rx_mask[10U] ;
   __le16 rx_highest ;
   u8 tx_params ;
   u8 reserved[3U] ;
};

#line 1229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_ht_cap {
   __le16 cap_info ;
   u8 ampdu_params_info ;
   struct ieee80211_mcs_info mcs ;
   __le16 extended_ht_cap_info ;
   __le32 tx_BF_cap_info ;
   u8 antenna_selection_info ;
};

#line 1354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_vht_mcs_info {
   __le16 rx_mcs_map ;
   __le16 rx_highest ;
   __le16 tx_mcs_map ;
   __le16 tx_highest ;
};

#line 1435  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_vht_cap {
   __le32 vht_cap_info ;
   struct ieee80211_vht_mcs_info supp_mcs ;
};

#line 2551  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct lib80211_crypto_ops {
   char const *name ;
   struct list_head list ;
   void *(*init)(int ) ;
   void (*deinit)(void *) ;
   int (*encrypt_mpdu)(struct sk_buff *, int , void *) ;
   int (*decrypt_mpdu)(struct sk_buff *, int , void *) ;
   int (*encrypt_msdu)(struct sk_buff *, int , void *) ;
   int (*decrypt_msdu)(struct sk_buff *, int , int , void *) ;
   int (*set_key)(void *, int , u8 *, void *) ;
   int (*get_key)(void *, int , u8 *, void *) ;
   void (*print_stats)(struct seq_file *, void *) ;
   unsigned long (*get_flags)(void *) ;
   unsigned long (*set_flags)(unsigned long , void *) ;
   int extra_mpdu_prefix_len ;
   int extra_mpdu_postfix_len ;
   int extra_msdu_prefix_len ;
   int extra_msdu_postfix_len ;
   struct module *owner ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/lib80211.h"
struct lib80211_crypt_data {
   struct list_head list ;
   struct lib80211_crypto_ops *ops ;
   void *priv ;
   atomic_t refcnt ;
};

#line 98  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/lib80211.h"
struct lib80211_crypt_info {
   char *name ;
   spinlock_t *lock ;
   struct lib80211_crypt_data *crypt[4U] ;
   int tx_keyidx ;
   struct list_head crypt_deinit_list ;
   struct timer_list crypt_deinit_timer ;
   int crypt_quiesced ;
};

#line 449  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
struct iw_param {
   __s32 value ;
   __u8 fixed ;
   __u8 disabled ;
   __u16 flags ;
};

#line 680  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_point {
   void *pointer ;
   __u16 length ;
   __u16 flags ;
};

#line 691  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_freq {
   __s32 m ;
   __s16 e ;
   __u8 i ;
   __u8 flags ;
};

#line 708  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_quality {
   __u8 qual ;
   __u8 level ;
   __u8 noise ;
   __u8 updated ;
};

#line 720  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_discarded {
   __u32 nwid ;
   __u32 code ;
   __u32 fragment ;
   __u32 retries ;
   __u32 misc ;
};

#line 736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_missed {
   __u32 beacon ;
};

#line 842  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_mlme {
   __u16 cmd ;
   __u16 reason_code ;
   struct sockaddr addr ;
};

#line 882  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_statistics {
   __u16 status ;
   struct iw_quality qual ;
   struct iw_discarded discard ;
   struct iw_missed miss ;
};

#line 897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
union iwreq_data {
   char name[16U] ;
   struct iw_point essid ;
   struct iw_param nwid ;
   struct iw_freq freq ;
   struct iw_param sens ;
   struct iw_param bitrate ;
   struct iw_param txpower ;
   struct iw_param rts ;
   struct iw_param frag ;
   __u32 mode ;
   struct iw_param retry ;
   struct iw_point encoding ;
   struct iw_param power ;
   struct iw_quality qual ;
   struct sockaddr ap_addr ;
   struct sockaddr addr ;
   struct iw_param param ;
   struct iw_point data ;
};

#line 957  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_range {
   __u32 throughput ;
   __u32 min_nwid ;
   __u32 max_nwid ;
   __u16 old_num_channels ;
   __u8 old_num_frequency ;
   __u8 scan_capa ;
   __u32 event_capa[6U] ;
   __s32 sensitivity ;
   struct iw_quality max_qual ;
   struct iw_quality avg_qual ;
   __u8 num_bitrates ;
   __s32 bitrate[32U] ;
   __s32 min_rts ;
   __s32 max_rts ;
   __s32 min_frag ;
   __s32 max_frag ;
   __s32 min_pmp ;
   __s32 max_pmp ;
   __s32 min_pmt ;
   __s32 max_pmt ;
   __u16 pmp_flags ;
   __u16 pmt_flags ;
   __u16 pm_capa ;
   __u16 encoding_size[8U] ;
   __u8 num_encoding_sizes ;
   __u8 max_encoding_tokens ;
   __u8 encoding_login_index ;
   __u16 txpower_capa ;
   __u8 num_txpower ;
   __s32 txpower[8U] ;
   __u8 we_version_compiled ;
   __u8 we_version_source ;
   __u16 retry_capa ;
   __u16 retry_flags ;
   __u16 r_time_flags ;
   __s32 min_retry ;
   __s32 max_retry ;
   __s32 min_r_time ;
   __s32 max_r_time ;
   __u16 num_channels ;
   __u8 num_frequency ;
   struct iw_freq freq[32U] ;
   __u32 enc_capa ;
};

#line 1068  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_priv_args {
   __u32 cmd ;
   __u16 set_args ;
   __u16 get_args ;
   char name[16U] ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wireless.h"
struct iw_request_info {
   __u16 cmd ;
   __u16 flags ;
};

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
typedef int (*iw_handler)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *);

#line 315  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
struct iw_handler_def {
   iw_handler (* const *standard)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *) ;
   __u16 num_standard ;
   __u16 num_private ;
   __u16 num_private_args ;
   iw_handler (* const *private)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *) ;
   struct iw_priv_args const *private_args ;
   struct iw_statistics *(*get_wireless_stats)(struct net_device *) ;
};

#line 381  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
struct iw_spy_data {
   int spy_number ;
   u_char spy_address[8U][6U] ;
   struct iw_quality spy_stat[8U] ;
   struct iw_quality spy_thr_low ;
   struct iw_quality spy_thr_high ;
   u_char spy_thr_under[8U] ;
};

#line 405 
struct libipw_device;

#line 406  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
struct iw_public_data {
   struct iw_spy_data *spy_data ;
   struct libipw_device *libipw ;
};

#line 596  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
struct ieee80211_radiotap_header {
   u8 it_version ;
   u8 it_pad ;
   __le16 it_len ;
   __le32 it_present ;
};

#line 470  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugfs.h"
enum nl80211_iftype {
    NL80211_IFTYPE_UNSPECIFIED = 0,
    NL80211_IFTYPE_ADHOC = 1,
    NL80211_IFTYPE_STATION = 2,
    NL80211_IFTYPE_AP = 3,
    NL80211_IFTYPE_AP_VLAN = 4,
    NL80211_IFTYPE_WDS = 5,
    NL80211_IFTYPE_MONITOR = 6,
    NL80211_IFTYPE_MESH_POINT = 7,
    NL80211_IFTYPE_P2P_CLIENT = 8,
    NL80211_IFTYPE_P2P_GO = 9,
    NL80211_IFTYPE_P2P_DEVICE = 10,
    NL80211_IFTYPE_OCB = 11,
    NUM_NL80211_IFTYPES = 12,
    NL80211_IFTYPE_MAX = 11
};

#line 2431  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
enum nl80211_reg_initiator {
    NL80211_REGDOM_SET_BY_CORE = 0,
    NL80211_REGDOM_SET_BY_USER = 1,
    NL80211_REGDOM_SET_BY_DRIVER = 2,
    NL80211_REGDOM_SET_BY_COUNTRY_IE = 3
};

#line 2484 
enum nl80211_dfs_regions {
    NL80211_DFS_UNSET = 0,
    NL80211_DFS_FCC = 1,
    NL80211_DFS_ETSI = 2,
    NL80211_DFS_JP = 3
};

#line 2491 
enum nl80211_user_reg_hint_type {
    NL80211_USER_REG_HINT_USER = 0,
    NL80211_USER_REG_HINT_CELL_BASE = 1,
    NL80211_USER_REG_HINT_INDOOR = 2
};

#line 2607 
enum nl80211_chan_width {
    NL80211_CHAN_WIDTH_20_NOHT = 0,
    NL80211_CHAN_WIDTH_20 = 1,
    NL80211_CHAN_WIDTH_40 = 2,
    NL80211_CHAN_WIDTH_80 = 3,
    NL80211_CHAN_WIDTH_80P80 = 4,
    NL80211_CHAN_WIDTH_160 = 5,
    NL80211_CHAN_WIDTH_5 = 6,
    NL80211_CHAN_WIDTH_10 = 7
};

#line 2618 
enum nl80211_bss_scan_width {
    NL80211_BSS_CHAN_WIDTH_20 = 0,
    NL80211_BSS_CHAN_WIDTH_10 = 1,
    NL80211_BSS_CHAN_WIDTH_5 = 2
};

#line 2650 
enum nl80211_auth_type {
    NL80211_AUTHTYPE_OPEN_SYSTEM = 0,
    NL80211_AUTHTYPE_SHARED_KEY = 1,
    NL80211_AUTHTYPE_FT = 2,
    NL80211_AUTHTYPE_NETWORK_EAP = 3,
    NL80211_AUTHTYPE_SAE = 4,
    __NL80211_AUTHTYPE_NUM = 5,
    NL80211_AUTHTYPE_MAX = 4,
    NL80211_AUTHTYPE_AUTOMATIC = 5
};

#line 2668 
enum nl80211_mfp {
    NL80211_MFP_NO = 0,
    NL80211_MFP_REQUIRED = 1
};

#line 3734  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_seq {
   __u32 start ;
   __u32 offset ;
   __u32 len ;
};

#line 3871  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token {
   __u32 offset ;
   __u32 len ;
   __u8 token_stream[] ;
};

#line 3883  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token_feature {
   __u32 min_len ;
   __u32 max_len ;
   __u32 bufsize ;
};

#line 4131 
enum nl80211_dfs_state {
    NL80211_DFS_USABLE = 0,
    NL80211_DFS_UNAVAILABLE = 1,
    NL80211_DFS_AVAILABLE = 2
};

#line 4153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_vendor_cmd_info {
   __u32 vendor_id ;
   __u32 subcmd ;
};

#line 4581 
enum environment_cap {
    ENVIRON_ANY = 0,
    ENVIRON_INDOOR = 1,
    ENVIRON_OUTDOOR = 2
};

#line 4587  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct regulatory_request {
   struct callback_head callback_head ;
   int wiphy_idx ;
   enum nl80211_reg_initiator initiator ;
   enum nl80211_user_reg_hint_type user_reg_hint_type ;
   char alpha2[2U] ;
   enum nl80211_dfs_regions dfs_region ;
   bool intersect ;
   bool processed ;
   enum environment_cap country_ie_env ;
   struct list_head list ;
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_freq_range {
   u32 start_freq_khz ;
   u32 end_freq_khz ;
   u32 max_bandwidth_khz ;
};

#line 185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_power_rule {
   u32 max_antenna_gain ;
   u32 max_eirp ;
};

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_reg_rule {
   struct ieee80211_freq_range freq_range ;
   struct ieee80211_power_rule power_rule ;
   u32 flags ;
   u32 dfs_cac_ms ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_regdomain {
   struct callback_head callback_head ;
   u32 n_reg_rules ;
   char alpha2[3U] ;
   enum nl80211_dfs_regions dfs_region ;
   struct ieee80211_reg_rule reg_rules[] ;
};

#line 205 
struct wiphy;

#line 206 
enum ieee80211_band {
    IEEE80211_BAND_2GHZ = 0,
    IEEE80211_BAND_5GHZ = 1,
    IEEE80211_BAND_60GHZ = 2,
    IEEE80211_NUM_BANDS = 3
};

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_channel {
   enum ieee80211_band band ;
   u16 center_freq ;
   u16 hw_value ;
   u32 flags ;
   int max_antenna_gain ;
   int max_power ;
   int max_reg_power ;
   bool beacon_found ;
   u32 orig_flags ;
   int orig_mag ;
   int orig_mpwr ;
   enum nl80211_dfs_state dfs_state ;
   unsigned long dfs_state_entered ;
   unsigned int dfs_cac_ms ;
};

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_rate {
   u32 flags ;
   u16 bitrate ;
   u16 hw_value ;
   u16 hw_value_short ;
};

#line 269  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_sta_ht_cap {
   u16 cap ;
   bool ht_supported ;
   u8 ampdu_factor ;
   u8 ampdu_density ;
   struct ieee80211_mcs_info mcs ;
};

#line 289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_sta_vht_cap {
   bool vht_supported ;
   u32 cap ;
   struct ieee80211_vht_mcs_info vht_mcs ;
};

#line 305  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_supported_band {
   struct ieee80211_channel *channels ;
   struct ieee80211_rate *bitrates ;
   enum ieee80211_band band ;
   int n_channels ;
   int n_bitrates ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
};

#line 387  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_chan_def {
   struct ieee80211_channel *chan ;
   enum nl80211_chan_width width ;
   u32 center_freq1 ;
   u32 center_freq2 ;
};

#line 608  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_crypto_settings {
   u32 wpa_versions ;
   u32 cipher_group ;
   int n_ciphers_pairwise ;
   u32 ciphers_pairwise[5U] ;
   int n_akm_suites ;
   u32 akm_suites[2U] ;
   bool control_port ;
   __be16 control_port_ethertype ;
   bool control_port_no_encrypt ;
};

#line 671  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct mac_address {
   u8 addr[6U] ;
};

#line 1395  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_ssid {
   u8 ssid[32U] ;
   u8 ssid_len ;
};

#line 1491  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_match_set {
   struct cfg80211_ssid ssid ;
   s32 rssi_thold ;
};

#line 1499  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_sched_scan_request {
   struct cfg80211_ssid *ssids ;
   int n_ssids ;
   u32 n_channels ;
   enum nl80211_bss_scan_width scan_width ;
   u32 interval ;
   u8 const *ie ;
   size_t ie_len ;
   u32 flags ;
   struct cfg80211_match_set *match_sets ;
   int n_match_sets ;
   s32 min_rssi_thold ;
   u32 delay ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   struct wiphy *wiphy ;
   struct net_device *dev ;
   unsigned long scan_start ;
   struct callback_head callback_head ;
   u32 owner_nlportid ;
   struct ieee80211_channel *channels[0U] ;
};

#line 1561 
enum cfg80211_signal_type {
    CFG80211_SIGNAL_TYPE_NONE = 0,
    CFG80211_SIGNAL_TYPE_MBM = 1,
    CFG80211_SIGNAL_TYPE_UNSPEC = 2
};

#line 1766  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_ibss_params {
   u8 const *ssid ;
   u8 const *bssid ;
   struct cfg80211_chan_def chandef ;
   u8 const *ie ;
   u8 ssid_len ;
   u8 ie_len ;
   u16 beacon_interval ;
   u32 basic_rates ;
   bool channel_fixed ;
   bool privacy ;
   bool control_port ;
   bool userspace_handles_dfs ;
   int mcast_rate[3U] ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
};

#line 1814  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_connect_params {
   struct ieee80211_channel *channel ;
   struct ieee80211_channel *channel_hint ;
   u8 const *bssid ;
   u8 const *bssid_hint ;
   u8 const *ssid ;
   size_t ssid_len ;
   enum nl80211_auth_type auth_type ;
   u8 const *ie ;
   size_t ie_len ;
   bool privacy ;
   enum nl80211_mfp mfp ;
   struct cfg80211_crypto_settings crypto ;
   u8 const *key ;
   u8 key_len ;
   u8 key_idx ;
   u32 flags ;
   int bg_scan_period ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
   struct ieee80211_vht_cap vht_capa ;
   struct ieee80211_vht_cap vht_capa_mask ;
};

#line 1916  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_pkt_pattern {
   u8 const *mask ;
   u8 const *pattern ;
   int pattern_len ;
   int pkt_offset ;
};

#line 1933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_wowlan_tcp {
   struct socket *sock ;
   __be32 src ;
   __be32 dst ;
   u16 src_port ;
   u16 dst_port ;
   u8 dst_mac[6U] ;
   int payload_len ;
   u8 const *payload ;
   struct nl80211_wowlan_tcp_data_seq payload_seq ;
   u32 data_interval ;
   u32 wake_len ;
   u8 const *wake_data ;
   u8 const *wake_mask ;
   u32 tokens_size ;
   struct nl80211_wowlan_tcp_data_token payload_tok ;
};

#line 1968  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_wowlan {
   bool any ;
   bool disconnect ;
   bool magic_pkt ;
   bool gtk_rekey_failure ;
   bool eap_identity_req ;
   bool four_way_handshake ;
   bool rfkill_release ;
   struct cfg80211_pkt_pattern *patterns ;
   struct cfg80211_wowlan_tcp *tcp ;
   int n_patterns ;
   struct cfg80211_sched_scan_request *nd_config ;
};

#line 2736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_iface_limit {
   u16 max ;
   u16 types ;
};

#line 2797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_iface_combination {
   struct ieee80211_iface_limit const *limits ;
   u32 num_different_channels ;
   u16 max_interfaces ;
   u8 n_limits ;
   bool beacon_int_infra_match ;
   u8 radar_detect_widths ;
   u8 radar_detect_regions ;
};

#line 2869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_txrx_stypes {
   u16 tx ;
   u16 rx ;
};

#line 2885  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_wowlan_tcp_support {
   struct nl80211_wowlan_tcp_data_token_feature const *tok ;
   u32 data_payload_max ;
   u32 data_interval_max ;
   u32 wake_payload_max ;
   bool seq ;
};

#line 2910  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_wowlan_support {
   u32 flags ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
   int max_nd_match_sets ;
   struct wiphy_wowlan_tcp_support const *tcp ;
};

#line 2935  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_coalesce_support {
   int n_rules ;
   int max_delay ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
};

#line 2960  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_vendor_command {
   struct nl80211_vendor_cmd_info info ;
   u32 flags ;
   int (*doit)(struct wiphy *, struct wireless_dev *, void const *, int ) ;
};

#line 2981  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy {
   u8 perm_addr[6U] ;
   u8 addr_mask[6U] ;
   struct mac_address *addresses ;
   struct ieee80211_txrx_stypes const *mgmt_stypes ;
   struct ieee80211_iface_combination const *iface_combinations ;
   int n_iface_combinations ;
   u16 software_iftypes ;
   u16 n_addresses ;
   u16 interface_modes ;
   u16 max_acl_mac_addrs ;
   u32 flags ;
   u32 regulatory_flags ;
   u32 features ;
   u8 ext_features[1U] ;
   u32 ap_sme_capa ;
   enum cfg80211_signal_type signal_type ;
   int bss_priv_size ;
   u8 max_scan_ssids ;
   u8 max_sched_scan_ssids ;
   u8 max_match_sets ;
   u16 max_scan_ie_len ;
   u16 max_sched_scan_ie_len ;
   int n_cipher_suites ;
   u32 const *cipher_suites ;
   u8 retry_short ;
   u8 retry_long ;
   u32 frag_threshold ;
   u32 rts_threshold ;
   u8 coverage_class ;
   char fw_version[32U] ;
   u32 hw_version ;
   struct wiphy_wowlan_support const *wowlan ;
   struct cfg80211_wowlan *wowlan_config ;
   u16 max_remain_on_channel_duration ;
   u8 max_num_pmkids ;
   u32 available_antennas_tx ;
   u32 available_antennas_rx ;
   u32 probe_resp_offload ;
   u8 const *extended_capabilities ;
   u8 const *extended_capabilities_mask ;
   u8 extended_capabilities_len ;
   void const *privid ;
   struct ieee80211_supported_band *bands[3U] ;
   void (*reg_notifier)(struct wiphy *, struct regulatory_request *) ;
   struct ieee80211_regdomain const *regd ;
   struct device dev ;
   bool registered ;
   struct dentry *debugfsdir ;
   struct ieee80211_ht_cap const *ht_capa_mod_mask ;
   struct ieee80211_vht_cap const *vht_capa_mod_mask ;
   possible_net_t _net ;
   struct iw_handler_def const *wext ;
   struct wiphy_coalesce_support const *coalesce ;
   struct wiphy_vendor_command const *vendor_commands ;
   struct nl80211_vendor_cmd_info const *vendor_events ;
   int n_vendor_commands ;
   int n_vendor_events ;
   u16 max_ap_assoc_sta ;
   u8 max_num_csa_counters ;
   u8 max_adj_channel_rssi_comp ;
   char priv[0U] ;
};

#line 3369 
struct cfg80211_conn;

#line 3370 
struct cfg80211_internal_bss;

#line 3371 
struct cfg80211_cached_keys;

#line 3372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct __anonstruct_wext_423 {
   struct cfg80211_ibss_params ibss ;
   struct cfg80211_connect_params connect ;
   struct cfg80211_cached_keys *keys ;
   u8 const *ie ;
   size_t ie_len ;
   u8 bssid[6U] ;
   u8 prev_bssid[6U] ;
   u8 ssid[32U] ;
   s8 default_key ;
   s8 default_mgmt_key ;
   bool prev_bssid_valid ;
};

#line 3372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wireless_dev {
   struct wiphy *wiphy ;
   enum nl80211_iftype iftype ;
   struct list_head list ;
   struct net_device *netdev ;
   u32 identifier ;
   struct list_head mgmt_registrations ;
   spinlock_t mgmt_registrations_lock ;
   struct mutex mtx ;
   bool use_4addr ;
   bool p2p_started ;
   u8 address[6U] ;
   u8 ssid[32U] ;
   u8 ssid_len ;
   u8 mesh_id_len ;
   u8 mesh_id_up_len ;
   struct cfg80211_conn *conn ;
   struct cfg80211_cached_keys *connect_keys ;
   struct list_head event_list ;
   spinlock_t event_lock ;
   struct cfg80211_internal_bss *current_bss ;
   struct cfg80211_chan_def preset_chandef ;
   struct cfg80211_chan_def chandef ;
   bool ibss_fixed ;
   bool ibss_dfs_possible ;
   bool ps ;
   int ps_timeout ;
   int beacon_interval ;
   u32 ap_unexpected_nlportid ;
   bool cac_started ;
   unsigned long cac_start_time ;
   unsigned int cac_time_ms ;
   u32 owner_nlportid ;
   struct __anonstruct_wext_423 wext ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_rx_stats {
   u32 mac_time ;
   s8 rssi ;
   u8 signal ;
   u8 noise ;
   u16 rate ;
   u8 received_channel ;
   u8 control ;
   u8 mask ;
   u8 freq ;
   u16 len ;
   u64 tsf ;
   u32 beacon_time ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_frag_entry {
   unsigned long first_frag_time ;
   unsigned int seq ;
   unsigned int last_frag ;
   struct sk_buff *skb ;
   u8 src_addr[6U] ;
   u8 dst_addr[6U] ;
};

#line 256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_stats {
   unsigned int tx_unicast_frames ;
   unsigned int tx_multicast_frames ;
   unsigned int tx_fragments ;
   unsigned int tx_unicast_octets ;
   unsigned int tx_multicast_octets ;
   unsigned int tx_deferred_transmissions ;
   unsigned int tx_single_retry_frames ;
   unsigned int tx_multiple_retry_frames ;
   unsigned int tx_retry_limit_exceeded ;
   unsigned int tx_discards ;
   unsigned int rx_unicast_frames ;
   unsigned int rx_multicast_frames ;
   unsigned int rx_fragments ;
   unsigned int rx_unicast_octets ;
   unsigned int rx_multicast_octets ;
   unsigned int rx_fcs_errors ;
   unsigned int rx_discards_no_buffer ;
   unsigned int tx_discards_wrong_sa ;
   unsigned int rx_discards_undecryptable ;
   unsigned int rx_message_in_msg_fragments ;
   unsigned int rx_message_in_bad_msg_fragments ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_security {
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) active_key : 2 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) enabled : 1 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) unicast_uses_group : 1 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encrypt : 1 ;
   u8 auth_mode ;
   u8 encode_alg[4U] ;
   u8 key_sizes[4U] ;
   u8 keys[4U][32U] ;
   u8 level ;
   u16 flags ;
};

#line 351  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_hdr_3addr {
   __le16 frame_ctl ;
   __le16 duration_id ;
   u8 addr1[6U] ;
   u8 addr2[6U] ;
   u8 addr3[6U] ;
   __le16 seq_ctl ;
   u8 payload[0U] ;
};

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_hdr_4addr {
   __le16 frame_ctl ;
   __le16 duration_id ;
   u8 addr1[6U] ;
   u8 addr2[6U] ;
   u8 addr3[6U] ;
   __le16 seq_ctl ;
   u8 addr4[6U] ;
   u8 payload[0U] ;
};

#line 383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_info_element {
   u8 id ;
   u8 len ;
   u8 data[0U] ;
};

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_auth {
   struct libipw_hdr_3addr header ;
   __le16 algorithm ;
   __le16 transaction ;
   __le16 status ;
   struct libipw_info_element info_element[0U] ;
};

#line 415  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_channel_switch {
   u8 id ;
   u8 len ;
   u8 mode ;
   u8 channel ;
   u8 count ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_action_exchange {
   u8 token ;
   struct libipw_info_element info_element[0U] ;
};

#line 433  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
union __anonunion_format_424 {
   struct libipw_action_exchange exchange ;
   struct libipw_channel_switch channel_switch ;
};

#line 433  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_action {
   struct libipw_hdr_3addr header ;
   u8 category ;
   u8 action ;
   union __anonunion_format_424 format ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_disassoc {
   struct libipw_hdr_3addr header ;
   __le16 reason ;
};

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_probe_request {
   struct libipw_hdr_3addr header ;
   struct libipw_info_element info_element[0U] ;
};

#line 451  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_probe_response {
   struct libipw_hdr_3addr header ;
   __le32 time_stamp[2U] ;
   __le16 beacon_interval ;
   __le16 capability ;
   struct libipw_info_element info_element[0U] ;
};

#line 472  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_reassoc_request {
   struct libipw_hdr_3addr header ;
   __le16 capability ;
   __le16 listen_interval ;
   u8 current_ap[6U] ;
   struct libipw_info_element info_element[0U] ;
};

#line 480  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_assoc_response {
   struct libipw_hdr_3addr header ;
   __le16 capability ;
   __le16 status ;
   __le16 aid ;
   struct libipw_info_element info_element[0U] ;
};

#line 489  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_txb {
   u8 nr_frags ;
   u8 encrypted ;
   u8 rts_included ;
   u8 reserved ;
   u16 frag_size ;
   u16 payload_size ;
   struct sk_buff *fragments[0U] ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_qos_parameters {
   __le16 cw_min[4U] ;
   __le16 cw_max[4U] ;
   u8 aifs[4U] ;
   u8 flag[4U] ;
   __le16 tx_op_limit[4U] ;
};

#line 571  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_qos_data {
   struct libipw_qos_parameters parameters ;
   int active ;
   int supported ;
   u8 param_count ;
   u8 old_param_count ;
};

#line 579  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_tim_parameters {
   u8 tim_count ;
   u8 tim_period ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_tpc_report {
   u8 transmit_power ;
   u8 link_margin ;
};

#line 603  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_csa {
   u8 mode ;
   u8 channel ;
   u8 count ;
};

#line 609  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_quiet {
   u8 count ;
   u8 period ;
   u8 duration ;
   u8 offset ;
};

#line 616  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_network {
   u8 bssid[6U] ;
   u8 channel ;
   u8 ssid[33U] ;
   u8 ssid_len ;
   struct libipw_qos_data qos_data ;
   struct libipw_rx_stats stats ;
   u16 capability ;
   u8 rates[12U] ;
   u8 rates_len ;
   u8 rates_ex[16U] ;
   u8 rates_ex_len ;
   unsigned long last_scanned ;
   u8 mode ;
   u32 flags ;
   u32 last_associate ;
   u32 time_stamp[2U] ;
   u16 beacon_interval ;
   u16 listen_interval ;
   u16 atim_window ;
   u8 erp_value ;
   u8 wpa_ie[64U] ;
   size_t wpa_ie_len ;
   u8 rsn_ie[64U] ;
   size_t rsn_ie_len ;
   struct libipw_tim_parameters tim ;
   u8 power_constraint ;
   struct libipw_tpc_report tpc_report ;
   struct libipw_csa csa ;
   struct libipw_quiet quiet ;
   struct list_head list ;
};

#line 665 
enum libipw_state {
    LIBIPW_UNINITIALIZED = 0,
    LIBIPW_INITIALIZED = 1,
    LIBIPW_ASSOCIATING = 2,
    LIBIPW_ASSOCIATED = 3,
    LIBIPW_AUTHENTICATING = 4,
    LIBIPW_AUTHENTICATED = 5,
    LIBIPW_SHUTDOWN = 6
};

#line 685  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_channel {
   u32 freq ;
   u8 channel ;
   u8 flags ;
   u8 max_power ;
};

#line 709  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_geo {
   u8 name[4U] ;
   u8 bg_channels ;
   u8 a_channels ;
   struct libipw_channel bg[14U] ;
   struct libipw_channel a[132U] ;
};

#line 717  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
struct libipw_device {
   struct net_device *dev ;
   struct wireless_dev wdev ;
   struct libipw_security sec ;
   struct libipw_stats ieee_stats ;
   struct libipw_geo geo ;
   struct ieee80211_supported_band bg_band ;
   struct ieee80211_supported_band a_band ;
   struct list_head network_free_list ;
   struct list_head network_list ;
   struct libipw_network *networks[128U] ;
   int scans ;
   int scan_age ;
   int iw_mode ;
   struct iw_spy_data spy_data ;
   spinlock_t lock ;
   int tx_headroom ;
   u32 config ;
   int open_wep ;
   int host_encrypt ;
   int host_encrypt_msdu ;
   int host_decrypt ;
   int host_mc_decrypt ;
   int host_strip_iv_icv ;
   int host_open_frag ;
   int ieee802_1x ;
   int wpa_enabled ;
   int drop_unencrypted ;
   int privacy_invoked ;
   size_t wpa_ie_len ;
   u8 *wpa_ie ;
   struct lib80211_crypt_info crypt_info ;
   int bcrx_sta_key ;
   struct libipw_frag_entry frag_cache[4U] ;
   unsigned int frag_next_idx ;
   u16 fts ;
   u16 rts ;
   u8 bssid[6U] ;
   enum libipw_state state ;
   int mode ;
   int modulation ;
   int freq_band ;
   int abg_true ;
   int perfect_rssi ;
   int worst_rssi ;
   u16 prev_seq_ctl ;
   void (*set_security)(struct net_device *, struct libipw_security *) ;
   netdev_tx_t (*hard_start_xmit)(struct libipw_txb *, struct net_device *, int ) ;
   int (*is_queue_full)(struct net_device *, int ) ;
   int (*handle_management)(struct net_device *, struct libipw_network *, u16 ) ;
   int (*is_qos_active)(struct net_device *, struct sk_buff *) ;
   int (*handle_auth)(struct net_device *, struct libipw_auth *) ;
   int (*handle_deauth)(struct net_device *, struct libipw_disassoc *) ;
   int (*handle_action)(struct net_device *, struct libipw_action *, struct libipw_rx_stats *) ;
   int (*handle_disassoc)(struct net_device *, struct libipw_disassoc *) ;
   int (*handle_beacon)(struct net_device *, struct libipw_probe_response *, struct libipw_network *) ;
   int (*handle_probe_response)(struct net_device *, struct libipw_probe_response *, struct libipw_network *) ;
   int (*handle_probe_request)(struct net_device *, struct libipw_probe_request *, struct libipw_rx_stats *) ;
   int (*handle_assoc_response)(struct net_device *, struct libipw_assoc_response *, struct libipw_network *) ;
   int (*handle_assoc_request)(struct net_device *) ;
   int (*handle_reassoc_request)(struct net_device *, struct libipw_reassoc_request *) ;
   u8 priv[0U] ;
};

#line 1007 
struct ipw2100_priv;

#line 1008 
struct ipw2100_tx_packet;

#line 1009 
struct ipw2100_rx_packet;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.h"
struct __anonstruct_fields_426 {
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nlf : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) txType : 2 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) intEnabled : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) reserved : 4 ;
};

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.h"
union __anonunion_info_425 {
   struct __anonstruct_fields_426 fields ;
   u8 field ;
};

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.h"
struct bd_status {
   union __anonunion_info_425 info ;
};

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.h"
struct ipw2100_bd {
   u32 host_addr ;
   u32 buf_length ;
   struct bd_status status ;
   u8 num_fragments ;
   u8 reserved[6U] ;
};

#line 169  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.h"
struct ipw2100_bd_queue {
   struct ipw2100_bd *drv ;
   dma_addr_t nic ;
   u32 size ;
   u32 entries ;
   u32 available ;
   u32 oldest ;
   u32 next ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.h"
struct ipw2100_status {
   u32 frame_size ;
   u16 status_fields ;
   u8 flags ;
   u8 rssi ;
};

#line 227  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.h"
struct ipw2100_status_queue {
   struct ipw2100_status *drv ;
   dma_addr_t nic ;
   u32 size ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.h"
struct __anonstruct_fixed_ies_427 {
   u16 capab_info ;
   u16 listen_interval ;
   u8 current_ap[6U] ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.h"
struct ipw2100_wpa_assoc_frame {
   u16 fixed_ie_mask ;
   struct __anonstruct_fixed_ies_427 fixed_ies ;
   u32 var_ie_len ;
   u8 var_ie[384U] ;
};

#line 258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.h"
struct ipw2100_cmd_header {
   u32 host_command_reg ;
   u32 host_command_reg1 ;
   u32 sequence ;
   u32 host_command_len_reg ;
   u32 host_command_params_reg[100U] ;
   u32 cmd_status_reg ;
   u32 cmd_status_params_reg[3U] ;
   u32 rxq_base_ptr ;
   u32 rxq_next_ptr ;
   u32 rxq_host_ptr ;
   u32 txq_base_ptr ;
   u32 txq_next_ptr ;
   u32 txq_host_ptr ;
   u32 tx_status_reg ;
   u32 reserved ;
   u32 status_change_reg ;
   u32 reserved1[3U] ;
   u32 *ordinal1_ptr ;
   u32 *ordinal2_ptr ;
};

#line 288  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.h"
struct ipw2100_data_header {
   u32 host_command_reg ;
   u32 host_command_reg1 ;
   u8 encrypted ;
   u8 needs_encryption ;
   u8 wep_index ;
   u8 key_size ;
   u8 key[16U] ;
   u8 reserved[10U] ;
   u8 src_addr[6U] ;
   u8 dst_addr[6U] ;
   u16 fragment_size ;
};

#line 302  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.h"
struct host_command {
   u32 host_command ;
   u32 host_command1 ;
   u32 host_command_sequence ;
   u32 host_command_length ;
   u32 host_command_parameters[100U] ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.h"
struct __anonstruct_c_struct_429 {
   struct ipw2100_cmd_header *cmd ;
   dma_addr_t cmd_phys ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.h"
struct __anonstruct_d_struct_430 {
   struct ipw2100_data_header *data ;
   dma_addr_t data_phys ;
   struct libipw_txb *txb ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.h"
union __anonunion_info_428 {
   struct __anonstruct_c_struct_429 c_struct ;
   struct __anonstruct_d_struct_430 d_struct ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.h"
struct ipw2100_tx_packet {
   int type ;
   int index ;
   union __anonunion_info_428 info ;
   int jiffy_start ;
   struct list_head list ;
};

#line 344 
struct ipw2100_rx;

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.h"
struct ipw2100_rx_packet {
   struct ipw2100_rx *rxp ;
   dma_addr_t dma_addr ;
   int jiffy_start ;
   struct sk_buff *skb ;
   struct list_head list ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.h"
struct ipw2100_ordinals {
   u32 table1_addr ;
   u32 table2_addr ;
   u32 table1_size ;
   u32 table2_size ;
};

#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.h"
struct ipw2100_notification {
   u32 hnhdr_subtype ;
   u32 hnhdr_size ;
};

#line 375  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.h"
struct statistic {
   int value ;
   int hi ;
   int lo ;
};

#line 406  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.h"
struct ipw2100_priv {
   void *ioaddr ;
   int stop_hang_check ;
   int stop_rf_kill ;
   struct libipw_device *ieee ;
   unsigned long status ;
   unsigned long config ;
   unsigned long capability ;
   int resets ;
   int reset_backoff ;
   u8 essid[32U] ;
   u8 essid_len ;
   u8 bssid[6U] ;
   u8 channel ;
   int last_mode ;
   unsigned long connect_start ;
   unsigned long last_reset ;
   u32 channel_mask ;
   u32 fatal_error ;
   u32 fatal_errors[5U] ;
   u32 fatal_index ;
   int eeprom_version ;
   int firmware_version ;
   unsigned long hw_features ;
   int hangs ;
   u32 last_rtc ;
   int dump_raw ;
   u8 *snapshot[48U] ;
   u8 mandatory_bssid_mac[6U] ;
   u8 mac_addr[6U] ;
   int power_mode ;
   int messages_sent ;
   int short_retry_limit ;
   int long_retry_limit ;
   u32 rts_threshold ;
   u32 frag_threshold ;
   int in_isr ;
   u32 tx_rates ;
   int tx_power ;
   u32 beacon_interval ;
   char nick[33U] ;
   struct ipw2100_status_queue status_queue ;
   struct statistic txq_stat ;
   struct statistic rxq_stat ;
   struct ipw2100_bd_queue rx_queue ;
   struct ipw2100_bd_queue tx_queue ;
   struct ipw2100_rx_packet *rx_buffers ;
   struct statistic fw_pend_stat ;
   struct list_head fw_pend_list ;
   struct statistic msg_free_stat ;
   struct statistic msg_pend_stat ;
   struct list_head msg_free_list ;
   struct list_head msg_pend_list ;
   struct ipw2100_tx_packet *msg_buffers ;
   struct statistic tx_free_stat ;
   struct statistic tx_pend_stat ;
   struct list_head tx_free_list ;
   struct list_head tx_pend_list ;
   struct ipw2100_tx_packet *tx_buffers ;
   struct ipw2100_ordinals ordinals ;
   struct pci_dev *pci_dev ;
   struct proc_dir_entry *dir_dev ;
   struct net_device *net_dev ;
   struct iw_statistics wstats ;
   struct iw_public_data wireless_data ;
   struct tasklet_struct irq_tasklet ;
   struct delayed_work reset_work ;
   struct delayed_work security_work ;
   struct delayed_work wx_event_work ;
   struct delayed_work hang_check ;
   struct delayed_work rf_kill ;
   struct delayed_work scan_event ;
   int user_requested_scan ;
   unsigned long suspend_at ;
   unsigned long suspend_time ;
   u32 interrupts ;
   int tx_interrupts ;
   int rx_interrupts ;
   int inta_other ;
   spinlock_t low_lock ;
   struct mutex action_mutex ;
   struct mutex adapter_mutex ;
   wait_queue_head_t wait_command_queue ;
};

#line 599  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.h"
union __anonunion_rx_data_431 {
   unsigned char payload[2340U] ;
   struct libipw_hdr_4addr header ;
   u32 status ;
   struct ipw2100_notification notification ;
   struct ipw2100_cmd_header command ;
};

#line 599  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.h"
struct ipw2100_rx {
   union __anonunion_rx_data_431 rx_data ;
};

#line 1141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.h"
struct ipw2100_fw_chunk_set {
   void const *data ;
   unsigned long size ;
};

#line 1146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.h"
struct ipw2100_fw {
   int version ;
   struct ipw2100_fw_chunk_set fw ;
   struct ipw2100_fw_chunk_set uc ;
   struct firmware const *fw_entry ;
};

#line 2206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
struct ipw2100_status_indicator {
   int status ;
   void (*cb)(struct ipw2100_priv *, u32 ) ;
   char *name ;
};

#line 2541  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
struct ipw_rt_hdr {
   struct ieee80211_radiotap_header rt_hdr ;
   s8 rt_dbmsignal ;
};

#line 3567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
struct __anonstruct_hw_data_436 {
   u32 addr ;
   char const *name ;
};

#line 3577  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
struct __anonstruct_nic_data_437 {
   u32 addr ;
   char const *name ;
   size_t size ;
};

#line 3585  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
struct __anonstruct_ord_data_438 {
   u8 index ;
   char const *name ;
   char const *desc ;
};

#line 5161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
struct security_info_params {
   u32 allowed_ciphers ;
   u16 version ;
   u8 auth_mode ;
   u8 replay_counters_number ;
   u8 unicast_using_group ;
};

#line 5358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
struct ipw2100_wep_key {
   u8 idx ;
   u8 len ;
   u8 key[13U] ;
};

#line 8330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
struct ipw2100_fw_header {
   short version ;
   short mode ;
   unsigned int fw_size ;
   unsigned int uc_size ;
};

#line 8514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
struct symbol_alive_response {
   u8 cmd_id ;
   u8 seq_num ;
   u8 ucode_rev ;
   u8 eeprom_valid ;
   u16 valid_flags ;
   u8 IEEE_addr[6U] ;
   u16 flags ;
   u16 pcb_rev ;
   u16 clock_settle_time ;
   u16 powerup_settle_time ;
   u16 hop_settle_time ;
   u8 date[3U] ;
   u8 time[2U] ;
   u8 ucode_valid ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_free_irq_9 {
   int arg0 ;
   int signal_pending ;
};

#line 18  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_11 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_12 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 31  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_13 {
   struct net_device *arg0 ;
   int signal_pending ;
};
void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/fvtp/.tmp_ipw2100.c"
void ldv_inline_asm(void);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
void __might_sleep(char const *, int, int);


#line 271 
int kstrtoull(char const *, unsigned int, unsigned long long *);


#line 290  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
__inline static int kstrtoul(char const *s, unsigned int base, unsigned long *res)
{
  int tmp;
  
#line 298 
  tmp = kstrtoull(s,base,(unsigned long long *)res);
  
#line 298 
  return tmp;
}


#line 332 
int kstrtouint(char const *, unsigned int, unsigned int *);


#line 345  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
__inline static int kstrtou32(char const *s, unsigned int base, u32 *res)
{
  int tmp;
  
#line 347 
  tmp = kstrtouint(s,base,res);
  
#line 347 
  return tmp;
}


#line 402 
int sprintf(char *, char const * , ...);


#line 405 
int snprintf(char *, size_t, char const * , ...);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 48 
void __list_add(struct list_head *, struct list_head *, struct list_head *);


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_add_tail(struct list_head *new, struct list_head *head)
{
  
#line 77 
  __list_add(new,head->prev,head);
  
#line 78 
  return;
}


#line 113 
void list_del(struct list_head *);


#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static int list_empty(struct list_head const *head)
{
  int __retres;
  
#line 189 
  __retres = (struct list_head const *)head->next == head;
  
#line 189 
  return __retres;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 60 
void *memmove(void *, void const *, size_t);


#line 63 
int memcmp(void const *, void const *, size_t);


#line 64 
size_t strlen(char const *);


#line 65 
char *strcpy(char *, char const *);


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
size_t strlcpy(char *, char const *, size_t);


#line 80 
__kernel_size_t strnlen(char const *, __kernel_size_t);


#line 121 
void *kmemdup(void const *, size_t, gfp_t);


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static int preempt_count(void)
{
  int __retres;
  int tmp;
  {
    int pfo_ret__;
    
#line 22 
    switch (4UL) {
      case (unsigned long)1: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)2: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)4: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)8: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      default: 
#line 22 
      ;
      
#line 22 
      __bad_percpu_size();
    }
    ldv_6320: 
#line 22 
    ;
    
#line 22 
    tmp = pfo_ret__;
  }
  
#line 22 
  __retres = tmp & 2147483647;
  
#line 22 
  return __retres;
}


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 45 
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_100(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 407 
static void ldv_spin_unlock_102(spinlock_t *lock);


#line 411 
static void ldv_spin_unlock_103(spinlock_t *lock);


#line 454  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 456 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 457 
  return;
}


#line 486 
static void ldv_spin_unlock_irqrestore_76(spinlock_t *lock, unsigned long flags);


#line 490 
static void ldv_spin_unlock_irqrestore_77(spinlock_t *lock, unsigned long flags);


#line 494 
static void ldv_spin_unlock_irqrestore_84(spinlock_t *lock, unsigned long flags);


#line 498 
static void ldv_spin_unlock_irqrestore_87(spinlock_t *lock, unsigned long flags);


#line 502 
static void ldv_spin_unlock_irqrestore_89(spinlock_t *lock, unsigned long flags);


#line 506 
static void ldv_spin_unlock_irqrestore_91(spinlock_t *lock, unsigned long flags);


#line 510 
static void ldv_spin_unlock_irqrestore_99(spinlock_t *lock, unsigned long flags);


#line 514 
static void ldv_spin_unlock_irqrestore_105(spinlock_t *lock, unsigned long flags);


#line 518 
static void ldv_spin_unlock_irqrestore_106(spinlock_t *lock, unsigned long flags);


#line 522 
static void ldv_spin_unlock_irqrestore_115(spinlock_t *lock, unsigned long flags);


#line 526 
static void ldv_spin_unlock_irqrestore_117(spinlock_t *lock, unsigned long flags);


#line 530 
static void ldv_spin_unlock_irqrestore_120(spinlock_t *lock, unsigned long flags);


#line 534 
static void ldv_spin_unlock_irqrestore_123(spinlock_t *lock, unsigned long flags);


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_78(struct mutex *ldv_func_arg1);


#line 41 
static void ldv_mutex_lock_81(struct mutex *ldv_func_arg1);


#line 45 
static void ldv_mutex_lock_92(struct mutex *ldv_func_arg1);


#line 49 
static void ldv_mutex_lock_107(struct mutex *ldv_func_arg1);


#line 53 
static void ldv_mutex_lock_109(struct mutex *ldv_func_arg1);


#line 57 
static void ldv_mutex_lock_111(struct mutex *ldv_func_arg1);


#line 61 
static void ldv_mutex_lock_127(struct mutex *ldv_func_arg1);


#line 65 
static void ldv_mutex_lock_132(struct mutex *ldv_func_arg1);


#line 69 
static void ldv_mutex_lock_136(struct mutex *ldv_func_arg1);


#line 73 
static void ldv_mutex_lock_138(struct mutex *ldv_func_arg1);


#line 77 
static void ldv_mutex_lock_143(struct mutex *ldv_func_arg1);


#line 81 
static void ldv_mutex_lock_145(struct mutex *ldv_func_arg1);


#line 85 
static void ldv_mutex_lock_147(struct mutex *ldv_func_arg1);


#line 89 
static void ldv_mutex_lock_149(struct mutex *ldv_func_arg1);


#line 93 
static void ldv_mutex_lock_151(struct mutex *ldv_func_arg1);


#line 97 
static void ldv_mutex_lock_153(struct mutex *ldv_func_arg1);


#line 101 
static void ldv_mutex_lock_155(struct mutex *ldv_func_arg1);


#line 105 
static void ldv_mutex_lock_157(struct mutex *ldv_func_arg1);


#line 109 
static void ldv_mutex_lock_159(struct mutex *ldv_func_arg1);


#line 113 
static void ldv_mutex_lock_161(struct mutex *ldv_func_arg1);


#line 117 
static void ldv_mutex_lock_163(struct mutex *ldv_func_arg1);


#line 121 
static void ldv_mutex_lock_165(struct mutex *ldv_func_arg1);


#line 125 
static void ldv_mutex_lock_167(struct mutex *ldv_func_arg1);


#line 129 
static void ldv_mutex_lock_169(struct mutex *ldv_func_arg1);


#line 133 
static void ldv_mutex_lock_171(struct mutex *ldv_func_arg1);


#line 137 
static void ldv_mutex_lock_173(struct mutex *ldv_func_arg1);


#line 141 
static void ldv_mutex_lock_175(struct mutex *ldv_func_arg1);


#line 147 
void ldv_mutex_model_lock(struct mutex *, char *);


#line 149 
void ldv_mutex_model_unlock(struct mutex *, char *);


#line 151 
void __ldv_spin_lock(spinlock_t *);


#line 178 
static void ldv___ldv_spin_lock_75(spinlock_t *ldv_func_arg1);


#line 182 
static void ldv___ldv_spin_lock_83(spinlock_t *ldv_func_arg1);


#line 186 
static void ldv___ldv_spin_lock_86(spinlock_t *ldv_func_arg1);


#line 190 
static void ldv___ldv_spin_lock_88(spinlock_t *ldv_func_arg1);


#line 194 
static void ldv___ldv_spin_lock_90(spinlock_t *ldv_func_arg1);


#line 198 
static void ldv___ldv_spin_lock_98(spinlock_t *ldv_func_arg1);


#line 202 
static void ldv___ldv_spin_lock_104(spinlock_t *ldv_func_arg1);


#line 206 
static void ldv___ldv_spin_lock_114(spinlock_t *ldv_func_arg1);


#line 210 
static void ldv___ldv_spin_lock_116(spinlock_t *ldv_func_arg1);


#line 214 
static void ldv___ldv_spin_lock_118(spinlock_t *ldv_func_arg1);


#line 218 
static void ldv___ldv_spin_lock_121(spinlock_t *ldv_func_arg1);


#line 226 
void ldv_spin_model_lock(char *);


#line 227 
void ldv_spin_model_unlock(char *);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
void __init_waitqueue_head(wait_queue_head_t *, char const *, struct lock_class_key *);


#line 149 
void __wake_up(wait_queue_head_t *, unsigned int, int, void *);


#line 926 
long prepare_to_wait_event(wait_queue_head_t *, wait_queue_t *, int);


#line 927 
void finish_wait(wait_queue_head_t *, wait_queue_t *);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 292 
unsigned long __msecs_to_jiffies(unsigned int const);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long _msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 301 
  __retres = (unsigned long)(((long)m + 3L) / 4L);
  
#line 301 
  return __retres;
}


#line 354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 356 
  if (0 != 0) {
    unsigned long tmp;
    
#line 357 
    if ((int)m < 0) {
      
#line 358 
      __retres = 4611686018427387902UL;
      
#line 358 
      goto return_label;
    }
    else ;
    
#line 359 
    tmp = _msecs_to_jiffies(m);
    
#line 359 
    __retres = tmp;
    
#line 359 
    goto return_label;
  }
  else {
    unsigned long tmp_0;
    
#line 361 
    tmp_0 = __msecs_to_jiffies(m);
    
#line 361 
    __retres = tmp_0;
    
#line 361 
    goto return_label;
  }
  return_label: 
#line 356 
                return __retres;
}


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timekeeping.h"
unsigned long get_seconds(void);


#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
void __mutex_init(struct mutex *, char const *, struct lock_class_key *);


#line 193 
static void ldv_mutex_unlock_80(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_unlock_82(struct mutex *ldv_func_arg1);


#line 201 
static void ldv_mutex_unlock_93(struct mutex *ldv_func_arg1);


#line 205 
static void ldv_mutex_unlock_108(struct mutex *ldv_func_arg1);


#line 209 
static void ldv_mutex_unlock_110(struct mutex *ldv_func_arg1);


#line 213 
static void ldv_mutex_unlock_112(struct mutex *ldv_func_arg1);


#line 217 
static void ldv_mutex_unlock_113(struct mutex *ldv_func_arg1);


#line 221 
static void ldv_mutex_unlock_128(struct mutex *ldv_func_arg1);


#line 225 
static void ldv_mutex_unlock_129(struct mutex *ldv_func_arg1);


#line 229 
static void ldv_mutex_unlock_133(struct mutex *ldv_func_arg1);


#line 233 
static void ldv_mutex_unlock_137(struct mutex *ldv_func_arg1);


#line 237 
static void ldv_mutex_unlock_139(struct mutex *ldv_func_arg1);


#line 241 
static void ldv_mutex_unlock_140(struct mutex *ldv_func_arg1);


#line 245 
static void ldv_mutex_unlock_144(struct mutex *ldv_func_arg1);


#line 249 
static void ldv_mutex_unlock_146(struct mutex *ldv_func_arg1);


#line 253 
static void ldv_mutex_unlock_148(struct mutex *ldv_func_arg1);


#line 257 
static void ldv_mutex_unlock_150(struct mutex *ldv_func_arg1);


#line 261 
static void ldv_mutex_unlock_152(struct mutex *ldv_func_arg1);


#line 265 
static void ldv_mutex_unlock_154(struct mutex *ldv_func_arg1);


#line 269 
static void ldv_mutex_unlock_156(struct mutex *ldv_func_arg1);


#line 273 
static void ldv_mutex_unlock_158(struct mutex *ldv_func_arg1);


#line 277 
static void ldv_mutex_unlock_160(struct mutex *ldv_func_arg1);


#line 281 
static void ldv_mutex_unlock_162(struct mutex *ldv_func_arg1);


#line 285 
static void ldv_mutex_unlock_164(struct mutex *ldv_func_arg1);


#line 289 
static void ldv_mutex_unlock_166(struct mutex *ldv_func_arg1);


#line 293 
static void ldv_mutex_unlock_168(struct mutex *ldv_func_arg1);


#line 297 
static void ldv_mutex_unlock_170(struct mutex *ldv_func_arg1);


#line 301 
static void ldv_mutex_unlock_172(struct mutex *ldv_func_arg1);


#line 305 
static void ldv_mutex_unlock_174(struct mutex *ldv_func_arg1);


#line 309 
static void ldv_mutex_unlock_176(struct mutex *ldv_func_arg1);


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 253 
unsigned long round_jiffies_relative(unsigned long);


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void delayed_work_timer_fn(unsigned long);


#line 181 
void __init_work(struct work_struct *, int);


#line 352 
extern struct workqueue_struct *system_wq;


#line 433 
bool mod_delayed_work_on(int, struct workqueue_struct *, struct delayed_work *, unsigned long);


#line 447 
bool cancel_delayed_work(struct delayed_work *);


#line 448 
bool cancel_delayed_work_sync(struct delayed_work *);


#line 498  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
__inline static bool mod_delayed_work(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay)
{
  bool tmp;
  
#line 502 
  tmp = mod_delayed_work_on(8192,wq,dwork,delay);
  
#line 502 
  return tmp;
}


#line 597 
static bool ldv_schedule_delayed_work_73(struct delayed_work *dwork, unsigned long delay);


#line 601 
static bool ldv_schedule_delayed_work_74(struct delayed_work *dwork, unsigned long delay);


#line 605 
static bool ldv_schedule_delayed_work_79(struct delayed_work *dwork, unsigned long delay);


#line 609 
static bool ldv_schedule_delayed_work_85(struct delayed_work *dwork, unsigned long delay);


#line 613 
static bool ldv_schedule_delayed_work_94(struct delayed_work *dwork, unsigned long delay);


#line 617 
static bool ldv_schedule_delayed_work_95(struct delayed_work *dwork, unsigned long delay);


#line 621 
static bool ldv_schedule_delayed_work_96(struct delayed_work *dwork, unsigned long delay);


#line 625 
static bool ldv_schedule_delayed_work_97(struct delayed_work *dwork, unsigned long delay);


#line 629 
static bool ldv_schedule_delayed_work_119(struct delayed_work *dwork, unsigned long delay);


#line 633 
static bool ldv_schedule_delayed_work_122(struct delayed_work *dwork, unsigned long delay);


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile *addr)
{
  unsigned int ret;
  
#line 59 
  ldv_inline_asm();
  
#line 58 
  return ret;
}


#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/iomap.h"
unsigned int ioread8(void *);


#line 29 
unsigned int ioread16(void *);


#line 31 
unsigned int ioread32(void *);


#line 34 
void iowrite8(u8, void *);


#line 35 
void iowrite16(u16, void *);


#line 37 
void iowrite32(u32, void *);


#line 76 
void pci_iounmap(struct pci_dev *, void *);


#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci_iomap.h"
void *pci_iomap(struct pci_dev *, int, unsigned long);


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
long schedule_timeout(long);


#line 424 
long schedule_timeout_uninterruptible(long);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 418 
static void *kmalloc(size_t size, gfp_t flags);


#line 525 
static void *kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 542 
static void *kcalloc(size_t n, size_t size, gfp_t flags);


#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
int sysfs_create_group(struct kobject *, struct attribute_group const *);


#line 255 
void sysfs_remove_group(struct kobject *, struct attribute_group const *);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 312  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
int driver_create_file(struct device_driver *, struct driver_attribute const *);


#line 314 
void driver_remove_file(struct device_driver *, struct driver_attribute const *);


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 59 
void debug_dma_sync_single_for_cpu(struct device *, dma_addr_t, size_t, int);


#line 63 
void debug_dma_sync_single_for_device(struct device *, dma_addr_t, size_t, int);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_for_cpu(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 106 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 108 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 108 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 110 
    ldv_inline_asm();
    
#line 108 
    ;
  }
  else ;
  
#line 109 
  if (ops->sync_single_for_cpu != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 110 
    (*(ops->sync_single_for_cpu))(dev,addr,size,dir); else ;
  
#line 111 
  debug_dma_sync_single_for_cpu(dev,addr,size,(int)dir);
  
#line 112 
  return;
}


#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_for_device(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 118 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 120 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 120 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 122 
    ldv_inline_asm();
    
#line 120 
    ;
  }
  else ;
  
#line 121 
  if (ops->sync_single_for_device != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 122 
    (*(ops->sync_single_for_device))(dev,addr,size,dir); else ;
  
#line 123 
  debug_dma_sync_single_for_device(dev,addr,size,(int)dir);
  
#line 124 
  return;
}


#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
int dma_set_mask(struct device *, u64);


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static void *dma_zalloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_handle, gfp_t flag)
{
  
#line 186 
  void *ret = dma_alloc_attrs(dev,size,dma_handle,flag | 32768U,(struct dma_attrs *)0);
  
#line 188 
  return ret;
}


#line 775  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
void consume_skb(struct sk_buff *);


#line 1567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_nonlinear(struct sk_buff const *skb)
{
  bool __retres;
  
#line 1569 
  __retres = (_Bool)(skb->data_len != 0U);
  
#line 1569 
  return __retres;
}


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1761  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_tailroom(struct sk_buff const *skb)
{
  int __retres;
  unsigned int tmp_0;
  bool tmp;
  
#line 1763 
  tmp = skb_is_nonlinear(skb);
  
#line 1763 
  if ((int)tmp == 0) 
#line 1763 
                     tmp_0 = skb->end - skb->tail; else 
#line 1763 
                                                        tmp_0 = 0U;
  
#line 1763 
  __retres = (int)tmp_0;
  
#line 1763 
  return __retres;
}


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2159 
  tmp = __netdev_alloc_skb(dev,length,32U);
  
#line 2159 
  return tmp;
}


#line 2170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *dev_alloc_skb(unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2172 
  tmp = netdev_alloc_skb((struct net_device *)0,length);
  
#line 2172 
  return tmp;
}


#line 2789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_copy_from_linear_data(struct sk_buff const *skb, void *to, unsigned int const len)
{
  
#line 2793 
  memcpy(to,(void const *)skb->data,(unsigned long)len);
  
#line 2794 
  return;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_125(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 153 
static void ldv_free_irq_131(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 157 
static void ldv_free_irq_135(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 540 
static void ldv_tasklet_schedule_101(struct tasklet_struct *t);


#line 589 
static void ldv_tasklet_init_124(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3);


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 2515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  
#line 2517 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2518 
  return;
}


#line 2526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_start_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2528 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2528 
  netif_tx_start_queue(tmp);
  
#line 2529 
  return;
}


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_wake_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2552 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2552 
  netif_tx_wake_queue(tmp);
  
#line 2553 
  return;
}


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 3047 
void netif_carrier_on(struct net_device *);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3117 
void netif_device_detach(struct net_device *);


#line 3119 
void netif_device_attach(struct net_device *);


#line 3355 
static int ldv_register_netdev_126(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_130(struct net_device *ldv_func_arg1);


#line 3364 
static void ldv_unregister_netdev_134(struct net_device *ldv_func_arg1);


#line 863  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
int pci_bus_read_config_dword(struct pci_bus *, unsigned int, int, u32 *);


#line 869 
int pci_bus_write_config_dword(struct pci_bus *, unsigned int, int, u32);


#line 891  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_dword(struct pci_dev const *dev, int where, u32 *val)
{
  int tmp;
  
#line 894 
  tmp = pci_bus_read_config_dword(dev->bus,dev->devfn,where,val);
  
#line 894 
  return tmp;
}


#line 904  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_write_config_dword(struct pci_dev const *dev, int where, u32 val)
{
  int tmp;
  
#line 907 
  tmp = pci_bus_write_config_dword(dev->bus,dev->devfn,where,val);
  
#line 907 
  return tmp;
}


#line 951 
int pci_enable_device(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 1026 
int pci_save_state(struct pci_dev *);


#line 1027 
void pci_restore_state(struct pci_dev *);


#line 1040 
int pci_set_power_state(struct pci_dev *, pci_power_t);


#line 1094 
int pci_request_regions(struct pci_dev *, char const *);


#line 1096 
void pci_release_regions(struct pci_dev *);


#line 1146 
static int ldv___pci_register_driver_141(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_142(struct pci_driver *ldv_func_arg1);


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void *pci_alloc_consistent(struct pci_dev *hwdev, size_t size, dma_addr_t *dma_handle)
{
  void *tmp_0;
  struct device *tmp;
  
#line 19 
  ;
  
#line 19 
  ;
  
#line 19 
  if (hwdev != (struct pci_dev *)0) 
#line 19 
                                    tmp = & hwdev->dev; else 
#line 19 
                                                             tmp = (struct device *)0;
  
#line 19 
  tmp_0 = dma_alloc_attrs(tmp,size,dma_handle,32U,(struct dma_attrs *)0);
  
#line 19 
  return tmp_0;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void *pci_zalloc_consistent(struct pci_dev *hwdev, size_t size, dma_addr_t *dma_handle)
{
  void *tmp_0;
  struct device *tmp;
  
#line 26 
  ;
  
#line 26 
  ;
  
#line 26 
  if (hwdev != (struct pci_dev *)0) 
#line 26 
                                    tmp = & hwdev->dev; else 
#line 26 
                                                             tmp = (struct device *)0;
  
#line 26 
  tmp_0 = dma_zalloc_coherent(tmp,size,dma_handle,32U);
  
#line 26 
  return tmp_0;
}


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_free_consistent(struct pci_dev *hwdev, size_t size, void *vaddr, dma_addr_t dma_handle)
{
  struct device *tmp;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  if (hwdev != (struct pci_dev *)0) 
#line 34 
                                    tmp = & hwdev->dev; else 
#line 34 
                                                             tmp = (struct device *)0;
  
#line 34 
  dma_free_attrs(tmp,size,vaddr,dma_handle,(struct dma_attrs *)0);
  
#line 35 
  return;
}


#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static dma_addr_t pci_map_single(struct pci_dev *hwdev, void *ptr, size_t size, int direction)
{
  dma_addr_t tmp_0;
  struct device *tmp;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  if (hwdev != (struct pci_dev *)0) 
#line 40 
                                    tmp = & hwdev->dev; else 
#line 40 
                                                             tmp = (struct device *)0;
  
#line 40 
  tmp_0 = dma_map_single_attrs(tmp,ptr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 40 
  return tmp_0;
}


#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_unmap_single(struct pci_dev *hwdev, dma_addr_t dma_addr, size_t size, int direction)
{
  struct device *tmp;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  if (hwdev != (struct pci_dev *)0) 
#line 47 
                                    tmp = & hwdev->dev; else 
#line 47 
                                                             tmp = (struct device *)0;
  
#line 47 
  dma_unmap_single_attrs(tmp,dma_addr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 48 
  return;
}


#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_dma_sync_single_for_cpu(struct pci_dev *hwdev, dma_addr_t dma_handle, size_t size, int direction)
{
  struct device *tmp;
  
#line 82 
  ;
  
#line 82 
  ;
  
#line 82 
  ;
  
#line 82 
  if (hwdev != (struct pci_dev *)0) 
#line 82 
                                    tmp = & hwdev->dev; else 
#line 82 
                                                             tmp = (struct device *)0;
  
#line 82 
  dma_sync_single_for_cpu(tmp,dma_handle,size,(enum dma_data_direction)direction);
  
#line 83 
  return;
}


#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_dma_sync_single_for_device(struct pci_dev *hwdev, dma_addr_t dma_handle, size_t size, int direction)
{
  struct device *tmp;
  
#line 89 
  ;
  
#line 89 
  ;
  
#line 89 
  ;
  
#line 89 
  if (hwdev != (struct pci_dev *)0) 
#line 89 
                                    tmp = & hwdev->dev; else 
#line 89 
                                                             tmp = (struct device *)0;
  
#line 89 
  dma_sync_single_for_device(tmp,dma_handle,size,(enum dma_data_direction)direction);
  
#line 90 
  return;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 115 
  tmp = dma_set_mask(& dev->dev,mask);
  
#line 115 
  return tmp;
}


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  
#line 1478 
  dev_set_drvdata(& pdev->dev,data);
  
#line 1479 
  return;
}


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static char const *pci_name(struct pci_dev const *pdev)
{
  char const *tmp;
  
#line 1486 
  tmp = dev_name(& pdev->dev);
  
#line 1486 
  return tmp;
}


#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/firmware.h"
int request_firmware(struct firmware const **, char const *, struct device *);


#line 51 
void release_firmware(struct firmware const *);


#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ctype.h"
extern unsigned char const _ctype[];


#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ctype.h"
__inline static unsigned char __tolower(unsigned char c)
{
  
#line 40 
  if (((int)_ctype[(int)c] & 1) != 0) 
#line 41 
                                      c = (unsigned char)((unsigned int)c + 32U); else ;
  
#line 42 
  return c;
}


#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm_qos.h"
void pm_qos_add_request(struct pm_qos_request *, int, s32);


#line 125 
void pm_qos_update_request(struct pm_qos_request *, s32);


#line 129 
void pm_qos_remove_request(struct pm_qos_request *);


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
int eth_validate_addr(struct net_device *);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_broadcast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 161 
  __retres = (_Bool)((unsigned int)(((int)*((u16 const *)addr) & (int)*((u16 const *)(addr + 2U))) & (int)*((u16 const *)(addr + 4U))) == 65535U);
  
#line 161 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 const *addr)
{
  bool __retres;
  int tmp_3;
  int tmp_0;
  bool tmp;
  
#line 190 
  tmp = is_multicast_ether_addr(addr);
  
#line 190 
  if (tmp) 
#line 190 
           tmp_0 = 0; else 
#line 190 
                           tmp_0 = 1;
  
#line 190 
  if (tmp_0) {
    int tmp_2;
    bool tmp_1;
    
#line 190 
    tmp_1 = is_zero_ether_addr(addr);
    
#line 190 
    if (tmp_1) 
#line 190 
               tmp_2 = 0; else 
#line 190 
                               tmp_2 = 1;
    
#line 190 
    if (tmp_2) 
#line 190 
               tmp_3 = 1; else 
#line 190 
                               tmp_3 = 0;
  }
  else 
#line 190 
       tmp_3 = 0;
  
#line 190 
  __retres = (_Bool)(tmp_3 != 0);
  
#line 190 
  return __retres;
}


#line 244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_zero_addr(u8 *addr)
{
  
#line 246 
  memset((void *)addr,0,6UL);
  
#line 247 
  return;
}


#line 440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
void wireless_send_event(struct net_device *, unsigned int, union iwreq_data *, char const *);


#line 3281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
__inline static void set_wiphy_dev(struct wiphy *wiphy, struct device *dev)
{
  
#line 3283 
  wiphy->dev.parent = dev;
  
#line 3284 
  return;
}


#line 3350 
int wiphy_register(struct wiphy *);


#line 3361 
void wiphy_unregister(struct wiphy *);


#line 4257 
void wiphy_rfkill_set_hw_state(struct wiphy *, bool);


#line 845  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/libipw.h"
__inline static void *libipw_priv(struct net_device *dev)
{
  void *__retres;
  void *tmp;
  
#line 847 
  tmp = netdev_priv((struct net_device const *)dev);
  
#line 847 
  __retres = (void *)(& ((struct libipw_device *)tmp)->priv);
  
#line 847 
  return __retres;
}


#line 949 
void free_libipw(struct net_device *, int);


#line 950 
struct net_device *alloc_libipw(int, int);


#line 951 
int libipw_change_mtu(struct net_device *, int);


#line 953 
void libipw_networks_age(struct libipw_device *, unsigned long);


#line 958 
netdev_tx_t libipw_xmit(struct sk_buff *, struct net_device *);


#line 959 
void libipw_txb_free(struct libipw_txb *);


#line 964 
int libipw_rx(struct libipw_device *, struct sk_buff *, struct libipw_rx_stats *);


#line 967 
void libipw_rx_mgt(struct libipw_device *, struct libipw_hdr_4addr *, struct libipw_rx_stats *);


#line 971 
struct libipw_geo const *libipw_get_geo(struct libipw_device *);


#line 972 
void libipw_set_geo(struct libipw_device *, struct libipw_geo const *);


#line 983 
int libipw_wx_get_scan(struct libipw_device *, struct iw_request_info *, union iwreq_data *, char *);


#line 985 
int libipw_wx_set_encode(struct libipw_device *, struct iw_request_info *, union iwreq_data *, char *);


#line 988 
int libipw_wx_get_encode(struct libipw_device *, struct iw_request_info *, union iwreq_data *, char *);


#line 991 
int libipw_wx_set_encodeext(struct libipw_device *, struct iw_request_info *, union iwreq_data *, char *);


#line 994 
int libipw_wx_get_encodeext(struct libipw_device *, struct iw_request_info *, union iwreq_data *, char *);


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw.h"
static u32 const ipw_cipher_suites[4U] = {1027073U, 1027077U, 1027074U, 1027076U};

#line 178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct pm_qos_request ipw2100_pm_qos_req;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int debug = 0;

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int network_mode = 0;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int channel = 0;

#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int associate = 0;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int disable = 0;

#line 196  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct ipw2100_fw ipw2100_firmware;

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static u32 ipw2100_debug_level = 0U;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static char const *command_types[70U] = {"undefined", "unused", "HOST_COMPLETE", "unused", "unused", "unused", "SYSTEM_CONFIG", "unused", "SSID", "MANDATORY_BSSID", "AUTHENTICATION_TYPE", "ADAPTER_ADDRESS", "PORT_TYPE", "INTERNATIONAL_MODE", "CHANNEL", "RTS_THRESHOLD", "FRAG_THRESHOLD", "POWER_MODE", "TX_RATES", "BASIC_TX_RATES", "WEP_KEY_INFO", "unused", "unused", "unused", "unused", "WEP_KEY_INDEX", "WEP_FLAGS", "ADD_MULTICAST", "CLEAR_ALL_MULTICAST", "BEACON_INTERVAL", "ATIM_WINDOW", "CLEAR_STATISTICS", "undefined", "undefined", "undefined", "undefined", "TX_POWER_INDEX", "undefined", "undefined", "undefined", "undefined", "undefined", "undefined", "BROADCAST_SCAN", "CARD_DISABLE", "PREFERRED_BSSID", "SET_SCAN_OPTIONS", "SCAN_DWELL_TIME", "SWEEP_TABLE", "AP_OR_STATION_TABLE", "GROUP_ORDINALS", "SHORT_RETRY_LIMIT", "LONG_RETRY_LIMIT", "unused", "unused", "undefined", "undefined", "undefined", "HOST_PRE_POWER_DOWN", "unused", "undefined", "CARD_DISABLE_PHY_OFF", "MSDU_TX_RATES", "undefined", "SET_STATION_STAT_BITS", "CLEAR_STATIONS_STAT_BITS", "LEAP_ROGUE_MODE", "SET_SECURITY_INFORMATION", "DISASSOCIATION_BSSID", "SET_WPA_ASS_IE"};

#line 302  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static long const ipw2100_frequencies[14U] = {2412L, 2417L, 2422L, 2427L, 2432L, 2437L, 2442L, 2447L, 2452L, 2457L, 2462L, 2467L, 2472L, 2484L};

#line 311  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct ieee80211_rate ipw2100_bg_rates[4U] = {{.flags = 0U, .bitrate = (unsigned short)10U, .hw_value = (unsigned short)0, .hw_value_short = (unsigned short)0}, {.flags = 1U, .bitrate = (unsigned short)20U, .hw_value = (unsigned short)0, .hw_value_short = (unsigned short)0}, {.flags = 1U, .bitrate = (unsigned short)55U, .hw_value = (unsigned short)0, .hw_value_short = (unsigned short)0}, {.flags = 1U, .bitrate = (unsigned short)110U, .hw_value = (unsigned short)0, .hw_value_short = (unsigned short)0}};

#line 321 
static void ipw2100_tx_send_commands(struct ipw2100_priv *priv);


#line 322 
static void ipw2100_tx_send_data(struct ipw2100_priv *priv);


#line 323 
static int ipw2100_adapter_setup(struct ipw2100_priv *priv);


#line 325 
static void ipw2100_queues_initialize(struct ipw2100_priv *priv);


#line 326 
static void ipw2100_queues_free(struct ipw2100_priv *priv);


#line 327 
static int ipw2100_queues_allocate(struct ipw2100_priv *priv);


#line 329 
static int ipw2100_fw_download(struct ipw2100_priv *priv, struct ipw2100_fw *fw);


#line 331 
static int ipw2100_get_firmware(struct ipw2100_priv *priv, struct ipw2100_fw *fw);


#line 333 
static int ipw2100_get_fwversion(struct ipw2100_priv *priv, char *buf, size_t max);


#line 335 
static int ipw2100_get_ucodeversion(struct ipw2100_priv *priv, char *buf, size_t max);


#line 337 
static void ipw2100_release_firmware(struct ipw2100_priv *priv, struct ipw2100_fw *fw);


#line 339 
static int ipw2100_ucode_download(struct ipw2100_priv *priv, struct ipw2100_fw *fw);


#line 341 
static void ipw2100_wx_event_work(struct work_struct *work);


#line 342 
static struct iw_statistics *ipw2100_wx_wireless_stats(struct net_device *dev);


#line 343 
static struct iw_handler_def ipw2100_wx_handler_def;


#line 345  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
__inline static void read_register(struct net_device *dev, u32 reg, u32 *val)
{
  
#line 347 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 349 
  *val = ioread32(priv->ioaddr + reg);
  
#line 350 
  if ((ipw2100_debug_level & 67108864U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 350 
    tmp_0 = preempt_count();
    
#line 350 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 350 
                                                   tmp_1 = 73; else 
#line 350 
                                                                    tmp_1 = 85;
    
#line 350 
    printk("\001",tmp_1,"read_register");
    
#line 350 
    printk("r: 0x%08X => 0x%08X\n",reg,*val);
  }
  else ;
  
#line 352 
  return;
}


#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
__inline static void write_register(struct net_device *dev, u32 reg, u32 val)
{
  
#line 355 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 357 
  iowrite32(val,priv->ioaddr + reg);
  
#line 358 
  if ((ipw2100_debug_level & 67108864U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 358 
    tmp_0 = preempt_count();
    
#line 358 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 358 
                                                   tmp_1 = 73; else 
#line 358 
                                                                    tmp_1 = 85;
    
#line 358 
    printk("\001",tmp_1,"write_register");
    
#line 358 
    printk("w: 0x%08X <= 0x%08X\n",reg,val);
  }
  else ;
  
#line 360 
  return;
}


#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
__inline static void read_register_word(struct net_device *dev, u32 reg, u16 *val)
{
  unsigned int tmp_0;
  
#line 364 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 366 
  tmp_0 = ioread16(priv->ioaddr + reg);
  
#line 366 
  *val = (unsigned short)tmp_0;
  
#line 367 
  if ((ipw2100_debug_level & 67108864U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 367 
    tmp_1 = preempt_count();
    
#line 367 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 367 
                                                   tmp_2 = 73; else 
#line 367 
                                                                    tmp_2 = 85;
    
#line 367 
    printk("\001",tmp_2,"read_register_word");
    
#line 367 
    printk("r: 0x%08X => %04X\n",reg,(int)*val);
  }
  else ;
  
#line 369 
  return;
}


#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
__inline static void read_register_byte(struct net_device *dev, u32 reg, u8 *val)
{
  unsigned int tmp_0;
  
#line 372 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 374 
  tmp_0 = ioread8(priv->ioaddr + reg);
  
#line 374 
  *val = (unsigned char)tmp_0;
  
#line 375 
  if ((ipw2100_debug_level & 67108864U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 375 
    tmp_1 = preempt_count();
    
#line 375 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 375 
                                                   tmp_2 = 73; else 
#line 375 
                                                                    tmp_2 = 85;
    
#line 375 
    printk("\001",tmp_2,"read_register_byte");
    
#line 375 
    printk("r: 0x%08X => %02X\n",reg,(int)*val);
  }
  else ;
  
#line 377 
  return;
}


#line 378  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
__inline static void write_register_word(struct net_device *dev, u32 reg, u16 val)
{
  
#line 380 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 382 
  iowrite16((unsigned short)((int)val),priv->ioaddr + reg);
  
#line 383 
  if ((ipw2100_debug_level & 67108864U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 383 
    tmp_0 = preempt_count();
    
#line 383 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 383 
                                                   tmp_1 = 73; else 
#line 383 
                                                                    tmp_1 = 85;
    
#line 383 
    printk("\001",tmp_1,"write_register_word");
    
#line 383 
    printk("w: 0x%08X <= %04X\n",reg,(int)val);
  }
  else ;
  
#line 385 
  return;
}


#line 386  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
__inline static void write_register_byte(struct net_device *dev, u32 reg, u8 val)
{
  
#line 388 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 390 
  iowrite8((unsigned char)((int)val),priv->ioaddr + reg);
  
#line 391 
  if ((ipw2100_debug_level & 67108864U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 391 
    tmp_0 = preempt_count();
    
#line 391 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 391 
                                                   tmp_1 = 73; else 
#line 391 
                                                                    tmp_1 = 85;
    
#line 391 
    printk("\001",tmp_1,"write_register_byte");
    
#line 391 
    printk("w: 0x%08X =< %02X\n",reg,(int)val);
  }
  else ;
  
#line 393 
  return;
}


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
__inline static void read_nic_dword(struct net_device *dev, u32 addr, u32 *val)
{
  
#line 396 
  write_register(dev,16U,addr & 16777212U);
  
#line 398 
  read_register(dev,20U,val);
  
#line 399 
  return;
}


#line 401  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
__inline static void write_nic_dword(struct net_device *dev, u32 addr, u32 val)
{
  
#line 403 
  write_register(dev,16U,addr & 16777212U);
  
#line 405 
  write_register(dev,20U,val);
  
#line 406 
  return;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
__inline static void read_nic_word(struct net_device *dev, u32 addr, u16 *val)
{
  
#line 410 
  write_register(dev,16U,addr & 16777212U);
  
#line 412 
  read_register_word(dev,20U,val);
  
#line 413 
  return;
}


#line 415  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
__inline static void write_nic_word(struct net_device *dev, u32 addr, u16 val)
{
  
#line 417 
  write_register(dev,16U,addr & 16777212U);
  
#line 419 
  write_register_word(dev,20U,(unsigned short)((int)val));
  
#line 420 
  return;
}


#line 422  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
__inline static void read_nic_byte(struct net_device *dev, u32 addr, u8 *val)
{
  
#line 424 
  write_register(dev,16U,addr & 16777212U);
  
#line 426 
  read_register_byte(dev,20U,val);
  
#line 427 
  return;
}


#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
__inline static void write_nic_byte(struct net_device *dev, u32 addr, u8 val)
{
  
#line 431 
  write_register(dev,16U,addr & 16777212U);
  
#line 433 
  write_register_byte(dev,20U,(unsigned char)((int)val));
  
#line 434 
  return;
}


#line 447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void write_nic_memory(struct net_device *dev, u32 addr, u32 len, u8 const *buf)
{
  u32 aligned_addr;
  u32 aligned_len;
  u32 dif_len;
  u32 i;
  
#line 456 
  aligned_addr = addr & 4294967292U;
  
#line 457 
  dif_len = addr - aligned_addr;
  
#line 458 
  if (dif_len != 0U) {
    
#line 460 
    write_register(dev,16U,aligned_addr);
    
#line 462 
    i = dif_len;
    
#line 462 
    goto ldv_61005;
    ldv_61004: 
#line 463 
    ;
    
#line 463 
    write_register_byte(dev,i + 20U,(unsigned char)((int)*buf));
    
#line 462 
    i += 1U;
    
#line 462 
    buf += 1;
    ldv_61005: 
#line 463 
    ;
    
#line 462 
    if (i <= 3U) 
#line 464 
                 goto ldv_61004; else 
#line 467 
                                      goto ldv_61006;
    ldv_61006: 
#line 468 
    ;
    
#line 467 
    len -= dif_len;
    
#line 468 
    aligned_addr += 4U;
  }
  else ;
  
#line 472 
  write_register(dev,24U,aligned_addr);
  
#line 473 
  aligned_len = len & 4294967292U;
  
#line 474 
  i = 0U;
  
#line 474 
  goto ldv_61008;
  ldv_61007: 
#line 475 
  ;
  
#line 475 
  write_register(dev,28U,*((u32 *)buf));
  
#line 474 
  i += 4U;
  
#line 474 
  buf += 4U;
  
#line 474 
  aligned_addr += 4U;
  ldv_61008: 
#line 475 
  ;
  
#line 474 
  if (i < aligned_len) 
#line 476 
                       goto ldv_61007; else 
#line 479 
                                            goto ldv_61009;
  ldv_61009: 
#line 480 
  ;
  
#line 478 
  dif_len = len - aligned_len;
  
#line 479 
  write_register(dev,16U,aligned_addr);
  
#line 480 
  i = 0U;
  
#line 480 
  goto ldv_61011;
  ldv_61010: 
#line 481 
  ;
  
#line 481 
  write_register_byte(dev,i + 20U,(unsigned char)((int)*buf));
  
#line 480 
  i += 1U;
  
#line 480 
  buf += 1;
  ldv_61011: 
#line 481 
  ;
  
#line 480 
  if (i < dif_len) 
#line 482 
                   goto ldv_61010; else 
#line 485 
                                        goto ldv_61012;
  ldv_61012: 
#line 486 
  ;
  
#line 487 
  return;
}


#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void read_nic_memory(struct net_device *dev, u32 addr, u32 len, u8 *buf)
{
  u32 aligned_addr;
  u32 aligned_len;
  u32 dif_len;
  u32 i;
  
#line 494 
  aligned_addr = addr & 4294967292U;
  
#line 495 
  dif_len = addr - aligned_addr;
  
#line 496 
  if (dif_len != 0U) {
    
#line 498 
    write_register(dev,16U,aligned_addr);
    
#line 500 
    i = dif_len;
    
#line 500 
    goto ldv_61024;
    ldv_61023: 
#line 501 
    ;
    
#line 501 
    read_register_byte(dev,i + 20U,buf);
    
#line 500 
    i += 1U;
    
#line 500 
    buf += 1;
    ldv_61024: 
#line 501 
    ;
    
#line 500 
    if (i <= 3U) 
#line 502 
                 goto ldv_61023; else 
#line 505 
                                      goto ldv_61025;
    ldv_61025: 
#line 506 
    ;
    
#line 505 
    len -= dif_len;
    
#line 506 
    aligned_addr += 4U;
  }
  else ;
  
#line 510 
  write_register(dev,24U,aligned_addr);
  
#line 511 
  aligned_len = len & 4294967292U;
  
#line 512 
  i = 0U;
  
#line 512 
  goto ldv_61027;
  ldv_61026: 
#line 513 
  ;
  
#line 513 
  read_register(dev,28U,(u32 *)buf);
  
#line 512 
  i += 4U;
  
#line 512 
  buf += 4U;
  
#line 512 
  aligned_addr += 4U;
  ldv_61027: 
#line 513 
  ;
  
#line 512 
  if (i < aligned_len) 
#line 514 
                       goto ldv_61026; else 
#line 517 
                                            goto ldv_61028;
  ldv_61028: 
#line 518 
  ;
  
#line 516 
  dif_len = len - aligned_len;
  
#line 517 
  write_register(dev,16U,aligned_addr);
  
#line 518 
  i = 0U;
  
#line 518 
  goto ldv_61030;
  ldv_61029: 
#line 519 
  ;
  
#line 519 
  read_register_byte(dev,i + 20U,buf);
  
#line 518 
  i += 1U;
  
#line 518 
  buf += 1;
  ldv_61030: 
#line 519 
  ;
  
#line 518 
  if (i < dif_len) 
#line 520 
                   goto ldv_61029; else 
#line 523 
                                        goto ldv_61031;
  ldv_61031: 
#line 524 
  ;
  
#line 525 
  return;
}


#line 522  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static bool ipw2100_hw_is_adapter_in_system(struct net_device *dev)
{
  bool __retres;
  u32 dbg;
  
#line 526 
  read_register(dev,144U,& dbg);
  
#line 528 
  __retres = (_Bool)(dbg == 3579139541U);
  
#line 528 
  return __retres;
}


#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_get_ordinal(struct ipw2100_priv *priv, u32 ord, void *val, u32 *len)
{
  int __retres;
  u32 addr;
  u32 field_info;
  u16 field_len;
  u16 field_count;
  u32 total_length;
  
#line 534 
  struct ipw2100_ordinals *ordinals = & priv->ordinals;
  
#line 541 
  if (ordinals->table1_addr == 0U) {
    
#line 542 
    printk("\001");
    
#line 544 
    __retres = -22;
    
#line 544 
    goto return_label;
  }
  else ;
  
#line 547 
  if (ord != 0U && ordinals->table1_size > ord) {
    
#line 548 
    if (*len <= 3U) {
      
#line 549 
      *len = 4U;
      
#line 551 
      printk("\001",4UL);
      
#line 555 
      __retres = -22;
      
#line 555 
      goto return_label;
    }
    else ;
    
#line 558 
    read_nic_dword(priv->net_dev,ordinals->table1_addr + (ord << 2),& addr);
    
#line 560 
    read_nic_dword(priv->net_dev,addr,(u32 *)val);
    
#line 562 
    *len = 4U;
    
#line 564 
    __retres = 0;
    
#line 564 
    goto return_label;
  }
  else ;
  
#line 567 
  if (ord > 999U && ordinals->table2_size + 1000U > ord) {
    
#line 569 
    ord += 4294966296U;
    
#line 572 
    read_nic_dword(priv->net_dev,ordinals->table2_addr + (ord << 3),& addr);
    
#line 577 
    read_nic_dword(priv->net_dev,(ordinals->table2_addr + (ord << 3)) + 4U,& field_info);
    
#line 582 
    field_len = *((u16 *)(& field_info));
    
#line 585 
    field_count = *((u16 *)(& field_info) + 1U);
    
#line 588 
    total_length = (unsigned int)((int)field_len * (int)field_count);
    
#line 589 
    if (*len < total_length) {
      
#line 590 
      *len = total_length;
      
#line 591 
      __retres = -22;
      
#line 591 
      goto return_label;
    }
    else ;
    
#line 594 
    *len = total_length;
    
#line 595 
    if (total_length == 0U) {
      
#line 596 
      __retres = 0;
      
#line 596 
      goto return_label;
    }
    else ;
    
#line 599 
    read_nic_memory(priv->net_dev,addr,total_length,(u8 *)val);
    
#line 601 
    __retres = 0;
    
#line 601 
    goto return_label;
  }
  else ;
  
#line 604 
  printk("\001",ord);
  
#line 607 
  __retres = -22;
  return_label: 
#line 607 
                return __retres;
}


#line 610  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_set_ordinal(struct ipw2100_priv *priv, u32 ord, u32 *val, u32 *len)
{
  int __retres;
  u32 addr;
  
#line 613 
  struct ipw2100_ordinals *ordinals = & priv->ordinals;
  
#line 616 
  if (ord != 0U && ordinals->table1_size > ord) {
    
#line 617 
    if (*len != 4U) {
      
#line 618 
      *len = 4U;
      
#line 619 
      if ((ipw2100_debug_level & 4U) != 0U) {
        int tmp_0;
        int tmp;
        
#line 619 
        tmp = preempt_count();
        
#line 619 
        if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 619 
                                                     tmp_0 = 73; else 
                                                                   
#line 619 
                                                                   tmp_0 = 85;
        
#line 619 
        printk("\001",tmp_0,"ipw2100_set_ordinal");
        
#line 619 
        printk("wrong size\n");
      }
      else ;
      
#line 620 
      __retres = -22;
      
#line 620 
      goto return_label;
    }
    else ;
    
#line 623 
    read_nic_dword(priv->net_dev,ordinals->table1_addr + (ord << 2),& addr);
    
#line 626 
    write_nic_dword(priv->net_dev,addr,*val);
    
#line 628 
    *len = 4U;
    
#line 630 
    __retres = 0;
    
#line 630 
    goto return_label;
  }
  else ;
  
#line 633 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 633 
    tmp_1 = preempt_count();
    
#line 633 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 633 
                                                   tmp_2 = 73; else 
#line 633 
                                                                    tmp_2 = 85;
    
#line 633 
    printk("\001",tmp_2,"ipw2100_set_ordinal");
    
#line 633 
    printk("wrong table\n");
  }
  else ;
  
#line 634 
  if (ord > 999U && ordinals->table2_size + 1000U > ord) {
    
#line 635 
    __retres = -22;
    
#line 635 
    goto return_label;
  }
  else ;
  
#line 637 
  __retres = -22;
  return_label: 
#line 637 
                return __retres;
}


#line 640  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static char *snprint_line(char *buf, size_t count, u8 const *data, u32 len, u32 ofs)
{
  int out;
  int i;
  int j;
  int l;
  char c;
  int tmp;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  int tmp_5;
  
#line 646 
  out = snprintf(buf,count,"%08X",ofs);
  
#line 648 
  l = 0;
  
#line 648 
  i = 0;
  
#line 648 
  goto ldv_61076;
  ldv_61075: 
#line 649 
  ;
  
#line 649 
  tmp = snprintf(buf + out,count - (unsigned long)out," ");
  
#line 649 
  out = tmp + out;
  
#line 650 
  j = 0;
  
#line 650 
  goto ldv_61070;
  ldv_61069: 
#line 651 
  ;
  
#line 651 
  tmp_0 = snprintf(buf + out,count - (unsigned long)out,"%02X ",(int)*(data + (i * 8 + j)));
  
#line 652 
  out = tmp_0 + out;
  
#line 650 
  j += 1;
  
#line 650 
  l += 1;
  ldv_61070: 
#line 651 
  ;
  
#line 650 
  if (j <= 7 && (unsigned int)l < len) 
#line 652 
                                       goto ldv_61069; else 
#line 655 
                                                            goto ldv_61071;
  ldv_61071: 
#line 656 
  ;
  
#line 653 
  goto ldv_61073;
  ldv_61072: 
#line 654 
  ;
  
#line 654 
  tmp_1 = snprintf(buf + out,count - (unsigned long)out,"   ");
  
#line 654 
  out = tmp_1 + out;
  
#line 653 
  j += 1;
  ldv_61073: 
#line 654 
  ;
  
#line 653 
  if (j <= 7) 
#line 655 
              goto ldv_61072; else 
#line 658 
                                   goto ldv_61074;
  ldv_61074: 
#line 659 
  ;
  
#line 648 
  i += 1;
  ldv_61076: 
#line 649 
  ;
  
#line 648 
  if (i <= 1) 
#line 650 
              goto ldv_61075; else 
#line 653 
                                   goto ldv_61077;
  ldv_61077: 
#line 654 
  ;
  
#line 657 
  tmp_2 = snprintf(buf + out,count - (unsigned long)out," ");
  
#line 657 
  out = tmp_2 + out;
  
#line 658 
  l = 0;
  
#line 658 
  i = 0;
  
#line 658 
  goto ldv_61085;
  ldv_61084: 
#line 659 
  ;
  
#line 659 
  tmp_3 = snprintf(buf + out,count - (unsigned long)out," ");
  
#line 659 
  out = tmp_3 + out;
  
#line 660 
  j = 0;
  
#line 660 
  goto ldv_61079;
  ldv_61078: 
#line 661 
  ;
  
#line 661 
  c = (char)*(data + (i * 8 + j));
  
#line 662 
  if ((int)c < 0 || ((int)_ctype[(int)((unsigned char)c)] & 151) == 0) 
    
#line 663 
    c = (char)46; else ;
  
#line 665 
  tmp_4 = snprintf(buf + out,count - (unsigned long)out,"%c",(int)c);
  
#line 665 
  out = tmp_4 + out;
  
#line 660 
  j += 1;
  
#line 660 
  l += 1;
  ldv_61079: 
#line 661 
  ;
  
#line 660 
  if (j <= 7 && (unsigned int)l < len) 
#line 662 
                                       goto ldv_61078; else 
#line 665 
                                                            goto ldv_61080;
  ldv_61080: 
#line 666 
  ;
  
#line 668 
  goto ldv_61082;
  ldv_61081: 
#line 669 
  ;
  
#line 669 
  tmp_5 = snprintf(buf + out,count - (unsigned long)out," ");
  
#line 669 
  out = tmp_5 + out;
  
#line 668 
  j += 1;
  ldv_61082: 
#line 669 
  ;
  
#line 668 
  if (j <= 7) 
#line 670 
              goto ldv_61081; else 
#line 673 
                                   goto ldv_61083;
  ldv_61083: 
#line 674 
  ;
  
#line 658 
  i += 1;
  ldv_61085: 
#line 659 
  ;
  
#line 658 
  if (i <= 1) 
#line 660 
              goto ldv_61084; else 
#line 663 
                                   goto ldv_61086;
  ldv_61086: 
#line 664 
  ;
  
#line 672 
  return buf;
}


#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void printk_buf(int level, u8 const *data, u32 len)
{
  char line[81U];
  char *tmp_1;
  unsigned int tmp_0;
  unsigned int tmp_3;
  
#line 678 
  u32 ofs = 0U;
  
#line 679 
  if ((ipw2100_debug_level & (unsigned int)level) == 0U) 
#line 680 
                                                         goto return_label; else ;
  
#line 682 
  goto ldv_61101;
  ldv_61100: 
#line 683 
  ;
  
#line 683 
  ;
  {
    u32 tmp;
    
#line 685 
    u32 _min1 = len;
    
#line 685 
    unsigned int _min2 = 16U;
    
#line 685 
    if (_min1 < _min2) 
#line 685 
                       tmp = _min1; else 
#line 685 
                                         tmp = _min2;
    
#line 685 
    tmp_0 = tmp;
  }
  
#line 683 
  ;
  
#line 683 
  tmp_1 = snprint_line((char *)(& line),81UL,data + ofs,tmp_0,ofs);
  
#line 683 
  printk("\001",tmp_1);
  
#line 686 
  ofs += 16U;
  {
    u32 tmp_2;
    
#line 687 
    u32 _min1_0 = len;
    
#line 687 
    unsigned int _min2_0 = 16U;
    
#line 687 
    if (_min1_0 < _min2_0) 
#line 687 
                           tmp_2 = _min1_0; else 
#line 687 
                                                 tmp_2 = _min2_0;
    
#line 687 
    tmp_3 = tmp_2;
  }
  
#line 687 
  len -= tmp_3;
  ldv_61101: 
#line 689 
  ;
  
#line 682 
  if (len != 0U) 
#line 684 
                 goto ldv_61100; else 
#line 687 
                                      goto ldv_61102;
  ldv_61102: 
#line 688 
  ;
  return_label: 
#line 689 
                return;
}


#line 693  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void schedule_reset(struct ipw2100_priv *priv)
{
  
#line 695 
  unsigned long now = get_seconds();
  
#line 700 
  if (priv->reset_backoff != 0 && now - priv->last_reset > (unsigned long)priv->reset_backoff) 
    
#line 702 
    priv->reset_backoff = 0; else ;
  
#line 704 
  priv->last_reset = get_seconds();
  
#line 706 
  if ((priv->status & 536870912UL) == 0UL) {
    
#line 707 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_1;
      int tmp_0;
      
#line 707 
      tmp_0 = preempt_count();
      
#line 707 
      if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 707 
                                                     tmp_1 = 73; else 
                                                                   
#line 707 
                                                                   tmp_1 = 85;
      
#line 707 
      printk("\001",tmp_1,"schedule_reset");
      
#line 707 
      printk("%s: Scheduling firmware restart (%ds).\n",(char *)(& (priv->net_dev)->name),priv->reset_backoff);
    }
    else ;
    
#line 709 
    netif_carrier_off(priv->net_dev);
    
#line 710 
    netif_start_queue(priv->net_dev);
    
#line 711 
    priv->status |= 536870912UL;
    
#line 712 
    if (priv->reset_backoff != 0) 
#line 713 
                                  ldv_schedule_delayed_work_73(& priv->reset_work,(unsigned long)(priv->reset_backoff * 250)); else 
                                                                    
#line 716 
                                                                    ldv_schedule_delayed_work_74(& priv->reset_work,0UL);
    
#line 718 
    if (priv->reset_backoff <= 9) 
#line 719 
                                  priv->reset_backoff += 1; else ;
    
#line 721 
    __wake_up(& priv->wait_command_queue,1U,1,(void *)0);
  }
  else 
    
#line 723 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_3;
      int tmp_2;
      
#line 723 
      tmp_2 = preempt_count();
      
#line 723 
      if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 723 
                                                     tmp_3 = 73; else 
                                                                   
#line 723 
                                                                   tmp_3 = 85;
      
#line 723 
      printk("\001",tmp_3,"schedule_reset");
      
#line 723 
      printk("%s: Firmware restart already in progress.\n",(char *)(& (priv->net_dev)->name));
    }
    else ;
  
#line 725 
  return;
}


#line 729  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_hw_send_command(struct ipw2100_priv *priv, struct host_command *cmd)
{
  int __retres;
  struct list_head *element;
  struct ipw2100_tx_packet *packet;
  unsigned long flags;
  int tmp_9;
  struct ipw2100_tx_packet *tmp_10;
  long tmp_15;
  unsigned long tmp_18;
  
#line 735 
  int err = 0;
  
#line 737 
  if ((ipw2100_debug_level & 32U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 737 
    tmp = preempt_count();
    
#line 737 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 737 
                                                 tmp_0 = 73; else 
#line 737 
                                                                  tmp_0 = 85;
    
#line 737 
    printk("\001",tmp_0,"ipw2100_hw_send_command");
    
#line 737 
    printk("Sending %s command (#%d), %d bytes\n",command_types[cmd->host_command],cmd->host_command,cmd->host_command_length);
  }
  else ;
  
#line 740 
  printk_buf(32,(u8 const *)(& cmd->host_command_parameters),cmd->host_command_length);
  
#line 743 
  ldv___ldv_spin_lock_75(& priv->low_lock);
  
#line 745 
  if (priv->fatal_error != 0U) {
    
#line 746 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 746 
      tmp_1 = preempt_count();
      
#line 746 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 746 
                                                     tmp_2 = 73; else 
                                                                   
#line 746 
                                                                   tmp_2 = 85;
      
#line 746 
      printk("\001",tmp_2,"ipw2100_hw_send_command");
      
#line 746 
      printk("Attempt to send command while hardware in fatal error condition.\n");
    }
    else ;
    
#line 748 
    err = -5;
    
#line 749 
    goto fail_unlock;
  }
  else ;
  
#line 752 
  if ((priv->status & 4UL) == 0UL) {
    
#line 753 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_4;
      int tmp_3;
      
#line 753 
      tmp_3 = preempt_count();
      
#line 753 
      if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 753 
                                                     tmp_4 = 73; else 
                                                                   
#line 753 
                                                                   tmp_4 = 85;
      
#line 753 
      printk("\001",tmp_4,"ipw2100_hw_send_command");
      
#line 753 
      printk("Attempt to send command while hardware is not running.\n");
    }
    else ;
    
#line 755 
    err = -5;
    
#line 756 
    goto fail_unlock;
  }
  else ;
  
#line 759 
  if ((priv->status & 2UL) != 0UL) {
    
#line 760 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_6;
      int tmp_5;
      
#line 760 
      tmp_5 = preempt_count();
      
#line 760 
      if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 760 
                                                     tmp_6 = 73; else 
                                                                   
#line 760 
                                                                   tmp_6 = 85;
      
#line 760 
      printk("\001",tmp_6,"ipw2100_hw_send_command");
      
#line 760 
      printk("Attempt to send command while another command is pending.\n");
    }
    else ;
    
#line 762 
    err = -16;
    
#line 763 
    goto fail_unlock;
  }
  else ;
  
#line 766 
  tmp_9 = list_empty((struct list_head const *)(& priv->msg_free_list));
  
#line 766 
  if (tmp_9 != 0) {
    
#line 767 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_8;
      int tmp_7;
      
#line 767 
      tmp_7 = preempt_count();
      
#line 767 
      if (((unsigned long)tmp_7 & 2096896UL) != 0UL) 
#line 767 
                                                     tmp_8 = 73; else 
                                                                   
#line 767 
                                                                   tmp_8 = 85;
      
#line 767 
      printk("\001",tmp_8,"ipw2100_hw_send_command");
      
#line 767 
      printk("no available msg buffers\n");
    }
    else ;
    
#line 768 
    goto fail_unlock;
  }
  else ;
  
#line 771 
  priv->status |= 2UL;
  
#line 772 
  priv->messages_sent += 1;
  
#line 774 
  element = priv->msg_free_list.next;
  {
    
#line 776 
    struct list_head const *__mptr = (struct list_head const *)element;
    
#line 776 
    tmp_10 = (struct ipw2100_tx_packet *)__mptr + 18446744073709551576U;
  }
  
#line 776 
  packet = tmp_10;
  
#line 777 
  packet->jiffy_start = (int)jiffies;
  
#line 780 
  (packet->info.c_struct.cmd)->host_command_reg = cmd->host_command;
  
#line 781 
  (packet->info.c_struct.cmd)->host_command_reg1 = cmd->host_command1;
  
#line 782 
  (packet->info.c_struct.cmd)->host_command_len_reg = cmd->host_command_length;
  
#line 784 
  (packet->info.c_struct.cmd)->sequence = cmd->host_command_sequence;
  
#line 786 
  memcpy((void *)(& (packet->info.c_struct.cmd)->host_command_params_reg),(void const *)(& cmd->host_command_parameters),400UL);
  
#line 790 
  list_del(element);
  
#line 791 
  priv->msg_free_stat.value -= 1;
  
#line 791 
  ;
  
#line 791 
  if (priv->msg_free_stat.value < priv->msg_free_stat.lo) 
#line 791 
                                                          priv->msg_free_stat.lo = priv->msg_free_stat.value; else ;
  
#line 793 
  list_add_tail(element,& priv->msg_pend_list);
  
#line 794 
  priv->msg_pend_stat.value += 1;
  
#line 794 
  ;
  
#line 794 
  if (priv->msg_pend_stat.value > priv->msg_pend_stat.hi) 
#line 794 
                                                          priv->msg_pend_stat.hi = priv->msg_pend_stat.value; else ;
  
#line 796 
  ipw2100_tx_send_commands(priv);
  
#line 797 
  ipw2100_tx_send_data(priv);
  
#line 799 
  ldv_spin_unlock_irqrestore_76(& priv->low_lock,flags);
  {
    
#line 808 
    long __ret = 500L;
    
#line 808 
    __might_sleep("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c",811,0);
    {
      int tmp_14;
      {
        
#line 808 
        bool __cond_0 = (_Bool)((priv->status & 2UL) == 0UL);
        
#line 808 
        if ((int)__cond_0 != 0 && __ret == 0L) 
#line 808 
                                               __ret = 1L; else ;
        
#line 808 
        tmp_14 = ((int)__cond_0 != 0 || __ret == 0L) != 0;
      }
      
#line 808 
      if (tmp_14 == 0) {
        long tmp_13;
        {
          wait_queue_t __wait;
          
#line 808 
          long __ret_0 = 500L;
          
#line 808 
          INIT_LIST_HEAD(& __wait.task_list);
          
#line 808 
          __wait.flags = 0U;
          ldv_61130: 
#line 811 
          ;
          {
            int tmp_12;
            
#line 808 
            long __int = prepare_to_wait_event(& priv->wait_command_queue,& __wait,1);
            {
              
#line 808 
              bool __cond = (_Bool)((priv->status & 2UL) == 0UL);
              
#line 808 
              if ((int)__cond != 0 && __ret_0 == 0L) 
#line 808 
                                                     __ret_0 = 1L; else ;
              
#line 808 
              tmp_12 = ((int)__cond != 0 || __ret_0 == 0L) != 0;
            }
            
#line 808 
            if (tmp_12 != 0) 
#line 808 
                             goto ldv_61129; else ;
            
#line 808 
            if (__int != 0L) {
              
#line 808 
              __ret_0 = __int;
              
#line 808 
              goto ldv_61129;
            }
            else ;
            
#line 808 
            __ret_0 = schedule_timeout(__ret_0);
          }
          
#line 808 
          goto ldv_61130;
          ldv_61129: 
#line 809 
          ;
          
#line 808 
          finish_wait(& priv->wait_command_queue,& __wait);
          __out_0: 
#line 808 
          ;
          
#line 808 
          tmp_13 = __ret_0;
        }
        
#line 808 
        __ret = tmp_13;
      }
      else ;
    }
    
#line 808 
    tmp_15 = __ret;
  }
  
#line 807 
  err = (int)tmp_15;
  
#line 813 
  if (err == 0) {
    
#line 814 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_17;
      int tmp_16;
      
#line 814 
      tmp_16 = preempt_count();
      
#line 814 
      if (((unsigned long)tmp_16 & 2096896UL) != 0UL) 
#line 814 
                                                      tmp_17 = 73; else 
                                                                    
#line 814 
                                                                    tmp_17 = 85;
      
#line 814 
      printk("\001",tmp_17,"ipw2100_hw_send_command");
      
#line 814 
      printk("Command completion failed out after %dms.\n",2000);
    }
    else ;
    
#line 816 
    priv->fatal_error = 285212672U;
    
#line 817 
    priv->status &= 18446744073709551613UL;
    
#line 818 
    schedule_reset(priv);
    
#line 819 
    __retres = -5;
    
#line 819 
    goto return_label;
  }
  else ;
  
#line 822 
  if (priv->fatal_error != 0U) {
    
#line 823 
    printk("\001",(char *)(& (priv->net_dev)->name));
    
#line 825 
    __retres = -5;
    
#line 825 
    goto return_label;
  }
  else ;
  
#line 833 
  tmp_18 = msecs_to_jiffies(10U);
  
#line 833 
  schedule_timeout_uninterruptible((long)tmp_18);
  
#line 835 
  __retres = 0;
  
#line 835 
  goto return_label;
  fail_unlock: 
#line 837 
  ;
  
#line 838 
  ldv_spin_unlock_irqrestore_77(& priv->low_lock,flags);
  
#line 840 
  __retres = err;
  return_label: 
#line 840 
                return __retres;
}


#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_verify(struct ipw2100_priv *priv)
{
  int __retres;
  u32 data1;
  u32 data2;
  u32 address;
  
#line 852 
  u32 val1 = 1985229328U;
  
#line 853 
  u32 val2 = 4275878552U;
  
#line 856 
  address = 144U;
  
#line 856 
  goto ldv_61142;
  ldv_61141: 
#line 857 
  ;
  
#line 858 
  read_register(priv->net_dev,address,& data1);
  
#line 859 
  if (data1 != 3579139541U) {
    
#line 860 
    __retres = -5;
    
#line 860 
    goto return_label;
  }
  else ;
  
#line 857 
  address += 4U;
  ldv_61142: 
#line 858 
  ;
  
#line 856 
  if (address <= 254U) 
#line 859 
                       goto ldv_61141; else 
#line 862 
                                            goto ldv_61143;
  ldv_61143: 
#line 863 
  ;
  
#line 864 
  address = 0U;
  
#line 864 
  goto ldv_61145;
  ldv_61144: 
#line 865 
  ;
  
#line 866 
  write_register(priv->net_dev,562U,val1);
  
#line 868 
  write_register(priv->net_dev,566U,val2);
  
#line 870 
  read_register(priv->net_dev,562U,& data1);
  
#line 872 
  read_register(priv->net_dev,566U,& data2);
  
#line 874 
  if (val1 == data1 && val2 == data2) {
    
#line 875 
    __retres = 0;
    
#line 875 
    goto return_label;
  }
  else ;
  
#line 864 
  address += 1U;
  ldv_61145: 
#line 865 
  ;
  
#line 864 
  if (address <= 4U) 
#line 866 
                     goto ldv_61144; else 
#line 869 
                                          goto ldv_61146;
  ldv_61146: 
#line 870 
  ;
  
#line 878 
  __retres = -5;
  return_label: 
#line 878 
                return __retres;
}


#line 891  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wait_for_card_state(struct ipw2100_priv *priv, int state)
{
  int __retres;
  int i;
  u32 card_state;
  int err;
  
#line 895 
  u32 len = 4U;
  
#line 898 
  i = 0;
  
#line 898 
  goto ldv_61157;
  ldv_61156: 
#line 899 
  ;
  
#line 899 
  err = ipw2100_get_ordinal(priv,157U,(void *)(& card_state),& len);
  
#line 901 
  if (err != 0) {
    
#line 902 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 902 
      tmp = preempt_count();
      
#line 902 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 902 
                                                   tmp_0 = 73; else 
#line 902 
                                                                    tmp_0 = 85;
      
#line 902 
      printk("\001",tmp_0,"ipw2100_wait_for_card_state");
      
#line 902 
      printk("Query of CARD_DISABLED ordinal ");
    }
    else ;
    
#line 904 
    __retres = 0;
    
#line 904 
    goto return_label;
  }
  else ;
  
#line 910 
  if (card_state == (unsigned int)state || ((priv->status & 8UL) == 0UL) == state) {
    
#line 913 
    if (state == 0) 
#line 914 
                    priv->status |= 8UL; else 
#line 916 
                                              priv->status &= 18446744073709551607UL;
    
#line 918 
    __retres = 0;
    
#line 918 
    goto return_label;
  }
  else ;
  
#line 921 
  __const_udelay(214750UL);
  
#line 898 
  i += 50;
  ldv_61157: 
#line 899 
  ;
  
#line 898 
  if (i <= 100000) 
#line 900 
                   goto ldv_61156; else 
#line 903 
                                        goto ldv_61158;
  ldv_61158: 
#line 904 
  ;
  
#line 924 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_2;
    int tmp_1;
    char *tmp_3;
    
#line 924 
    tmp_1 = preempt_count();
    
#line 924 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 924 
                                                   tmp_2 = 73; else 
#line 924 
                                                                    tmp_2 = 85;
    
#line 924 
    printk("\001",tmp_2,"ipw2100_wait_for_card_state");
    
#line 924 
    if (state != 0) 
#line 924 
                    tmp_3 = (char *)"DISABLED"; else 
#line 924 
                                                     tmp_3 = (char *)"ENABLED";
    
#line 924 
    printk("ipw2100_wait_for_card_state to %s state timed out\n",tmp_3);
  }
  else ;
  
#line 926 
  __retres = -5;
  return_label: 
#line 926 
                return __retres;
}


#line 934  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int sw_reset_and_clock(struct ipw2100_priv *priv)
{
  int __retres;
  int i;
  u32 r;
  
#line 940 
  write_register(priv->net_dev,32U,128U);
  
#line 944 
  i = 0;
  
#line 944 
  goto ldv_61166;
  ldv_61165: 
#line 945 
  ;
  
#line 945 
  __const_udelay(42950UL);
  
#line 948 
  read_register(priv->net_dev,32U,& r);
  
#line 949 
  if ((r & 1U) != 0U) 
#line 950 
                      goto ldv_61164; else ;
  
#line 944 
  i += 1;
  ldv_61166: 
#line 945 
  ;
  
#line 944 
  if (i <= 999) 
#line 946 
                goto ldv_61165; else 
#line 949 
                                     goto ldv_61164;
  ldv_61164: 
#line 950 
  ;
  
#line 953 
  if (i == 1000) {
    
#line 954 
    __retres = -5;
    
#line 954 
    goto return_label;
  }
  else ;
  
#line 958 
  write_register(priv->net_dev,36U,4U);
  
#line 962 
  i = 0;
  
#line 962 
  goto ldv_61169;
  ldv_61168: 
#line 963 
  ;
  
#line 963 
  __const_udelay(859000UL);
  
#line 966 
  read_register(priv->net_dev,36U,& r);
  
#line 967 
  if ((r & 1U) != 0U) 
#line 968 
                      goto ldv_61167; else ;
  
#line 962 
  i += 1;
  ldv_61169: 
#line 963 
  ;
  
#line 962 
  if (i <= 9999) 
#line 964 
                 goto ldv_61168; else 
#line 967 
                                      goto ldv_61167;
  ldv_61167: 
#line 968 
  ;
  
#line 971 
  if (i == 10000) {
    
#line 972 
    __retres = -5;
    
#line 972 
    goto return_label;
  }
  else ;
  
#line 975 
  read_register(priv->net_dev,36U,& r);
  
#line 976 
  write_register(priv->net_dev,36U,r | 2U);
  
#line 979 
  __retres = 0;
  return_label: 
#line 979 
                return __retres;
}


#line 993  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_download_firmware(struct ipw2100_priv *priv)
{
  int __retres;
  u32 address;
  int err;
  
#line 1003 
  if (priv->fatal_error != 0U) {
    
#line 1004 
    printk("\001",(char *)(& (priv->net_dev)->name),priv->fatal_error);
    
#line 1007 
    __retres = -22;
    
#line 1007 
    goto return_label;
  }
  else ;
  
#line 1010 
  if (ipw2100_firmware.version == 0) {
    
#line 1011 
    err = ipw2100_get_firmware(priv,& ipw2100_firmware);
    
#line 1012 
    if (err != 0) {
      
#line 1013 
      printk("\001",(char *)(& (priv->net_dev)->name),err);
      
#line 1015 
      priv->fatal_error = 301989888U;
      
#line 1016 
      goto fail;
    }
    else ;
  }
  else ;
  
#line 1028 
  priv->firmware_version = ipw2100_firmware.version;
  
#line 1031 
  err = sw_reset_and_clock(priv);
  
#line 1032 
  if (err != 0) {
    
#line 1033 
    printk("\001",(char *)(& (priv->net_dev)->name),err);
    
#line 1035 
    goto fail;
  }
  else ;
  
#line 1038 
  err = ipw2100_verify(priv);
  
#line 1039 
  if (err != 0) {
    
#line 1040 
    printk("\001",(char *)(& (priv->net_dev)->name),err);
    
#line 1042 
    goto fail;
  }
  else ;
  
#line 1046 
  write_nic_dword(priv->net_dev,3145952U,2147483648U);
  
#line 1050 
  write_register(priv->net_dev,32U,0U);
  
#line 1053 
  err = ipw2100_ucode_download(priv,& ipw2100_firmware);
  
#line 1054 
  if (err != 0) {
    
#line 1055 
    printk("\001",(char *)(& (priv->net_dev)->name),err);
    
#line 1057 
    goto fail;
  }
  else ;
  
#line 1061 
  write_nic_dword(priv->net_dev,3145952U,0U);
  
#line 1065 
  err = sw_reset_and_clock(priv);
  
#line 1066 
  if (err != 0) {
    
#line 1067 
    printk("\001",(char *)(& (priv->net_dev)->name),err);
    
#line 1070 
    goto fail;
  }
  else ;
  
#line 1074 
  err = ipw2100_fw_download(priv,& ipw2100_firmware);
  
#line 1075 
  if (err != 0) {
    
#line 1076 
    printk("\001",(char *)(& (priv->net_dev)->name),err);
    
#line 1078 
    goto fail;
  }
  else ;
  
#line 1093 
  address = 193024U;
  
#line 1093 
  goto ldv_61177;
  ldv_61176: 
#line 1094 
  ;
  
#line 1095 
  write_nic_dword(priv->net_dev,address,0U);
  
#line 1094 
  address += 4U;
  ldv_61177: 
#line 1095 
  ;
  
#line 1093 
  if (address <= 193807U) 
#line 1096 
                          goto ldv_61176; else 
#line 1099 
                                               goto ldv_61178;
  ldv_61178: 
#line 1100 
  ;
  
#line 1096 
  address = 194064U;
  
#line 1096 
  goto ldv_61180;
  ldv_61179: 
#line 1097 
  ;
  
#line 1098 
  write_nic_dword(priv->net_dev,address,0U);
  
#line 1097 
  address += 4U;
  ldv_61180: 
#line 1098 
  ;
  
#line 1096 
  if (address <= 194095U) 
#line 1099 
                          goto ldv_61179; else 
#line 1102 
                                               goto ldv_61181;
  ldv_61181: 
#line 1103 
  ;
  
#line 1099 
  address = 195072U;
  
#line 1099 
  goto ldv_61183;
  ldv_61182: 
#line 1100 
  ;
  
#line 1101 
  write_nic_dword(priv->net_dev,address,0U);
  
#line 1100 
  address += 4U;
  ldv_61183: 
#line 1101 
  ;
  
#line 1099 
  if (address <= 195103U) 
#line 1102 
                          goto ldv_61182; else 
#line 1105 
                                               goto ldv_61184;
  ldv_61184: 
#line 1106 
  ;
  
#line 1102 
  address = 195584U;
  
#line 1102 
  goto ldv_61186;
  ldv_61185: 
#line 1103 
  ;
  
#line 1104 
  write_nic_dword(priv->net_dev,address,0U);
  
#line 1103 
  address += 4U;
  ldv_61186: 
#line 1104 
  ;
  
#line 1102 
  if (address <= 195599U) 
#line 1105 
                          goto ldv_61185; else 
#line 1108 
                                               goto ldv_61187;
  ldv_61187: 
#line 1109 
  ;
  
#line 1105 
  address = 196480U;
  
#line 1105 
  goto ldv_61189;
  ldv_61188: 
#line 1106 
  ;
  
#line 1107 
  write_nic_dword(priv->net_dev,address,0U);
  
#line 1106 
  address += 4U;
  ldv_61189: 
#line 1107 
  ;
  
#line 1105 
  if (address <= 196607U) 
#line 1108 
                          goto ldv_61188; else 
#line 1111 
                                               goto ldv_61190;
  ldv_61190: 
#line 1112 
  ;
  
#line 1109 
  __retres = 0;
  
#line 1109 
  goto return_label;
  fail: 
#line 1111 
  ;
  
#line 1112 
  ipw2100_release_firmware(priv,& ipw2100_firmware);
  
#line 1113 
  __retres = err;
  return_label: 
#line 1113 
                return __retres;
}


#line 1116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
__inline static void ipw2100_enable_interrupts(struct ipw2100_priv *priv)
{
  
#line 1118 
  if ((priv->status & 2048UL) != 0UL) 
#line 1119 
                                      goto return_label; else ;
  
#line 1120 
  priv->status |= 2048UL;
  
#line 1121 
  write_register(priv->net_dev,12U,3238068243U);
  return_label: 
#line 1122 
                return;
}


#line 1124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
__inline static void ipw2100_disable_interrupts(struct ipw2100_priv *priv)
{
  
#line 1126 
  if ((priv->status & 2048UL) == 0UL) 
#line 1127 
                                      goto return_label; else ;
  
#line 1128 
  priv->status &= 18446744073709549567UL;
  
#line 1129 
  write_register(priv->net_dev,12U,0U);
  return_label: 
#line 1130 
                return;
}


#line 1132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_initialize_ordinals(struct ipw2100_priv *priv)
{
  
#line 1134 
  struct ipw2100_ordinals *ord = & priv->ordinals;
  
#line 1136 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 1136 
    tmp = preempt_count();
    
#line 1136 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 1136 
                                                 tmp_0 = 73; else 
#line 1136 
                                                                  tmp_0 = 85;
    
#line 1136 
    printk("\001",tmp_0,"ipw2100_initialize_ordinals");
    
#line 1136 
    printk("enter\n");
  }
  else ;
  
#line 1138 
  read_register(priv->net_dev,896U,& ord->table1_addr);
  
#line 1141 
  read_register(priv->net_dev,900U,& ord->table2_addr);
  
#line 1144 
  read_nic_dword(priv->net_dev,ord->table1_addr,& ord->table1_size);
  
#line 1145 
  read_nic_dword(priv->net_dev,ord->table2_addr,& ord->table2_size);
  
#line 1147 
  ord->table2_size &= 65535U;
  
#line 1149 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 1149 
    tmp_1 = preempt_count();
    
#line 1149 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 1149 
                                                   tmp_2 = 73; else 
#line 1149 
                                                                    tmp_2 = 85;
    
#line 1149 
    printk("\001",tmp_2,"ipw2100_initialize_ordinals");
    
#line 1149 
    printk("table 1 size: %d\n",ord->table1_size);
  }
  else ;
  
#line 1150 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_4;
    int tmp_3;
    
#line 1150 
    tmp_3 = preempt_count();
    
#line 1150 
    if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 1150 
                                                   tmp_4 = 73; else 
#line 1150 
                                                                    tmp_4 = 85;
    
#line 1150 
    printk("\001",tmp_4,"ipw2100_initialize_ordinals");
    
#line 1150 
    printk("table 2 size: %d\n",ord->table2_size);
  }
  else ;
  
#line 1151 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_6;
    int tmp_5;
    
#line 1151 
    tmp_5 = preempt_count();
    
#line 1151 
    if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 1151 
                                                   tmp_6 = 73; else 
#line 1151 
                                                                    tmp_6 = 85;
    
#line 1151 
    printk("\001",tmp_6,"ipw2100_initialize_ordinals");
    
#line 1151 
    printk("exit\n");
  }
  else ;
  
#line 1153 
  return;
}


#line 1154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
__inline static void ipw2100_hw_set_gpio(struct ipw2100_priv *priv)
{
  
#line 1156 
  u32 reg = 0U;
  
#line 1161 
  reg = 8392U;
  
#line 1163 
  write_register(priv->net_dev,48U,reg);
  
#line 1164 
  return;
}


#line 1166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int rf_kill_active(struct ipw2100_priv *priv)
{
  int __retres;
  int i;
  
#line 1171 
  unsigned short value = (unsigned short)0U;
  
#line 1172 
  u32 reg = 0U;
  
#line 1175 
  if ((priv->hw_features & 1UL) == 0UL) {
    
#line 1176 
    wiphy_rfkill_set_hw_state((priv->ieee)->wdev.wiphy,(_Bool)0);
    
#line 1177 
    priv->status &= 18446744073709547519UL;
    
#line 1178 
    __retres = 0;
    
#line 1178 
    goto return_label;
  }
  else ;
  
#line 1181 
  i = 0;
  
#line 1181 
  goto ldv_61213;
  ldv_61212: 
#line 1182 
  ;
  
#line 1182 
  __const_udelay(171800UL);
  
#line 1183 
  read_register(priv->net_dev,48U,& reg);
  
#line 1184 
  value = (unsigned short)(((int)value << 1) | ((reg & 65536U) == 0U));
  
#line 1181 
  i += 1;
  ldv_61213: 
#line 1182 
  ;
  
#line 1181 
  if (i <= 4) 
#line 1183 
              goto ldv_61212; else 
#line 1186 
                                   goto ldv_61214;
  ldv_61214: 
#line 1187 
  ;
  
#line 1187 
  if ((unsigned int)value == 0U) {
    
#line 1188 
    wiphy_rfkill_set_hw_state((priv->ieee)->wdev.wiphy,(_Bool)1);
    
#line 1189 
    priv->status |= 4096UL;
  }
  else {
    
#line 1191 
    wiphy_rfkill_set_hw_state((priv->ieee)->wdev.wiphy,(_Bool)0);
    
#line 1192 
    priv->status &= 18446744073709547519UL;
  }
  
#line 1195 
  __retres = (unsigned int)value == 0U;
  return_label: 
#line 1195 
                return __retres;
}


#line 1198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_get_hw_features(struct ipw2100_priv *priv)
{
  int __retres;
  u32 addr;
  u32 len;
  u32 val;
  int tmp_1;
  
#line 1206 
  len = 4U;
  
#line 1207 
  tmp_1 = ipw2100_get_ordinal(priv,204U,(void *)(& addr),& len);
  
#line 1207 
  if (tmp_1 != 0) {
    
#line 1209 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 1209 
      tmp = preempt_count();
      
#line 1209 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 1209 
                                                   tmp_0 = 73; else 
#line 1209 
                                                                    tmp_0 = 85;
      
#line 1209 
      printk("\001",tmp_0,"ipw2100_get_hw_features");
      
#line 1209 
      printk("failed querying ordinals at line %d\n",1210);
    }
    else ;
    
#line 1211 
    __retres = -5;
    
#line 1211 
    goto return_label;
  }
  else ;
  
#line 1214 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_3;
    int tmp_2;
    
#line 1214 
    tmp_2 = preempt_count();
    
#line 1214 
    if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 1214 
                                                   tmp_3 = 73; else 
#line 1214 
                                                                    tmp_3 = 85;
    
#line 1214 
    printk("\001",tmp_3,"ipw2100_get_hw_features");
    
#line 1214 
    printk("EEPROM address: %08X\n",addr);
  }
  else ;
  
#line 1219 
  read_nic_dword(priv->net_dev,addr + 252U,& val);
  
#line 1220 
  priv->eeprom_version = (int)(val >> 24);
  
#line 1221 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_5;
    int tmp_4;
    
#line 1221 
    tmp_4 = preempt_count();
    
#line 1221 
    if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
#line 1221 
                                                   tmp_5 = 73; else 
#line 1221 
                                                                    tmp_5 = 85;
    
#line 1221 
    printk("\001",tmp_5,"ipw2100_get_hw_features");
    
#line 1221 
    printk("EEPROM version: %d\n",priv->eeprom_version);
  }
  else ;
  
#line 1230 
  read_nic_dword(priv->net_dev,addr + 32U,& val);
  
#line 1231 
  if ((val & 16777216U) == 0U) 
#line 1232 
                               priv->hw_features |= 1UL; else ;
  
#line 1234 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_7;
    int tmp_6;
    char *tmp_8;
    
#line 1234 
    tmp_6 = preempt_count();
    
#line 1234 
    if (((unsigned long)tmp_6 & 2096896UL) != 0UL) 
#line 1234 
                                                   tmp_7 = 73; else 
#line 1234 
                                                                    tmp_7 = 85;
    
#line 1234 
    printk("\001",tmp_7,"ipw2100_get_hw_features");
    
#line 1234 
    if ((priv->hw_features & 1UL) != 0UL) 
#line 1234 
                                          tmp_8 = (char *)""; else 
#line 1234 
                                                                   tmp_8 = (char *)"not ";
    
#line 1234 
    printk("HW RF Kill: %ssupported.\n",tmp_8);
  }
  else ;
  
#line 1237 
  __retres = 0;
  return_label: 
#line 1237 
                return __retres;
}


#line 1246  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_start_adapter(struct ipw2100_priv *priv)
{
  int __retres;
  int i;
  u32 inta;
  u32 inta_mask;
  u32 gpio;
  int tmp_1;
  unsigned long tmp_4;
  
#line 1251 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 1251 
    tmp = preempt_count();
    
#line 1251 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 1251 
                                                 tmp_0 = 73; else 
#line 1251 
                                                                  tmp_0 = 85;
    
#line 1251 
    printk("\001",tmp_0,"ipw2100_start_adapter");
    
#line 1251 
    printk("enter\n");
  }
  else ;
  
#line 1253 
  if ((priv->status & 4UL) != 0UL) {
    
#line 1254 
    __retres = 0;
    
#line 1254 
    goto return_label;
  }
  else ;
  
#line 1261 
  tmp_1 = ipw2100_download_firmware(priv);
  
#line 1261 
  if (tmp_1 != 0) {
    
#line 1262 
    printk("\001",(char *)(& (priv->net_dev)->name));
    
#line 1265 
    __retres = -5;
    
#line 1265 
    goto return_label;
  }
  else ;
  
#line 1270 
  ipw2100_queues_initialize(priv);
  
#line 1272 
  ipw2100_hw_set_gpio(priv);
  
#line 1278 
  write_register(priv->net_dev,32U,0U);
  
#line 1281 
  if ((ipw2100_debug_level & 65536U) != 0U) {
    int tmp_3;
    int tmp_2;
    
#line 1281 
    tmp_2 = preempt_count();
    
#line 1281 
    if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 1281 
                                                   tmp_3 = 73; else 
#line 1281 
                                                                    tmp_3 = 85;
    
#line 1281 
    printk("\001",tmp_3,"ipw2100_start_adapter");
    
#line 1281 
    printk("Waiting for f/w initialization to complete...\n");
  }
  else ;
  
#line 1282 
  i = 5000;
  ldv_61231: 
#line 1283 
  ;
  
#line 1284 
  tmp_4 = msecs_to_jiffies(40U);
  
#line 1284 
  schedule_timeout_uninterruptible((long)tmp_4);
  
#line 1287 
  read_register(priv->net_dev,8U,& inta);
  
#line 1290 
  if ((inta & 16777216U) != 0U) {
    
#line 1292 
    write_register(priv->net_dev,8U,16777216U);
    
#line 1294 
    goto ldv_61230;
  }
  else ;
  
#line 1300 
  if ((inta & 3221225472U) != 0U) 
#line 1303 
                                  write_register(priv->net_dev,8U,3221225472U); else ;
  
#line 1307 
  i -= 1;
  
#line 1307 
  if (i != 0) 
#line 1309 
              goto ldv_61231; else 
#line 1312 
                                   goto ldv_61230;
  ldv_61230: 
#line 1313 
  ;
  
#line 1311 
  read_register(priv->net_dev,8U,& inta);
  
#line 1312 
  read_register(priv->net_dev,12U,& inta_mask);
  
#line 1313 
  inta &= 3238068243U;
  
#line 1315 
  if ((inta & inta_mask) != 0U) 
#line 1316 
                                write_register(priv->net_dev,8U,inta); else ;
  
#line 1318 
  if ((ipw2100_debug_level & 65536U) != 0U) {
    int tmp_6;
    int tmp_5;
    char *tmp_7;
    
#line 1318 
    tmp_5 = preempt_count();
    
#line 1318 
    if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 1318 
                                                   tmp_6 = 73; else 
#line 1318 
                                                                    tmp_6 = 85;
    
#line 1318 
    printk("\001",tmp_6,"ipw2100_start_adapter");
    
#line 1318 
    if (i != 0) 
#line 1318 
                tmp_7 = (char *)"SUCCESS"; else 
#line 1318 
                                                tmp_7 = (char *)"FAILED";
    
#line 1318 
    printk("f/w initialization complete: %s\n",tmp_7);
  }
  else ;
  
#line 1321 
  if (i == 0) {
    
#line 1322 
    printk("\001",(char *)(& (priv->net_dev)->name));
    
#line 1325 
    __retres = -5;
    
#line 1325 
    goto return_label;
  }
  else ;
  
#line 1329 
  read_register(priv->net_dev,48U,& gpio);
  
#line 1331 
  gpio |= 204U;
  
#line 1333 
  write_register(priv->net_dev,48U,gpio);
  
#line 1336 
  priv->status |= 4UL;
  
#line 1339 
  priv->status &= 18446744073709550079UL;
  
#line 1341 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_9;
    int tmp_8;
    
#line 1341 
    tmp_8 = preempt_count();
    
#line 1341 
    if (((unsigned long)tmp_8 & 2096896UL) != 0UL) 
#line 1341 
                                                   tmp_9 = 73; else 
#line 1341 
                                                                    tmp_9 = 85;
    
#line 1341 
    printk("\001",tmp_9,"ipw2100_start_adapter");
    
#line 1341 
    printk("exit\n");
  }
  else ;
  
#line 1343 
  __retres = 0;
  return_label: 
#line 1343 
                return __retres;
}


#line 1346  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
__inline static void ipw2100_reset_fatalerror(struct ipw2100_priv *priv)
{
  u32 tmp;
  
#line 1348 
  if (priv->fatal_error == 0U) 
#line 1349 
                               goto return_label; else ;
  
#line 1351 
  tmp = priv->fatal_index;
  
#line 1351 
  priv->fatal_index += 1U;
  
#line 1351 
  priv->fatal_errors[tmp] = priv->fatal_error;
  
#line 1352 
  priv->fatal_index %= 5U;
  
#line 1353 
  priv->fatal_error = 0U;
  return_label: 
#line 1354 
                return;
}


#line 1357  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_power_cycle_adapter(struct ipw2100_priv *priv)
{
  int __retres;
  u32 reg;
  int i;
  
#line 1362 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 1362 
    tmp = preempt_count();
    
#line 1362 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 1362 
                                                 tmp_0 = 73; else 
#line 1362 
                                                                  tmp_0 = 85;
    
#line 1362 
    printk("\001",tmp_0,"ipw2100_power_cycle_adapter");
    
#line 1362 
    printk("Power cycling the hardware.\n");
  }
  else ;
  
#line 1364 
  ipw2100_hw_set_gpio(priv);
  
#line 1367 
  write_register(priv->net_dev,32U,512U);
  
#line 1372 
  i = 5;
  ldv_61242: 
#line 1373 
  ;
  
#line 1374 
  __const_udelay(42950UL);
  
#line 1375 
  read_register(priv->net_dev,32U,& reg);
  
#line 1377 
  if ((reg & 256U) != 0U) 
#line 1378 
                          goto ldv_61241; else ;
  
#line 1379 
  i -= 1;
  
#line 1379 
  if (i != 0) 
#line 1381 
              goto ldv_61242; else 
#line 1384 
                                   goto ldv_61241;
  ldv_61241: 
#line 1385 
  ;
  
#line 1381 
  priv->status &= 18446744073172680703UL;
  
#line 1383 
  if (i == 0) {
    
#line 1384 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 1384 
      tmp_1 = preempt_count();
      
#line 1384 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 1384 
                                                     tmp_2 = 73; else 
                                                                   
#line 1384 
                                                                   tmp_2 = 85;
      
#line 1384 
      printk("\001",tmp_2,"ipw2100_power_cycle_adapter");
      
#line 1384 
      printk("exit - waited too long for master assert stop\n");
    }
    else ;
    
#line 1386 
    __retres = -5;
    
#line 1386 
    goto return_label;
  }
  else ;
  
#line 1389 
  write_register(priv->net_dev,32U,128U);
  
#line 1393 
  ipw2100_reset_fatalerror(priv);
  
#line 1396 
  priv->status &= 18446744073709550067UL;
  
#line 1399 
  __retres = 0;
  return_label: 
#line 1399 
                return __retres;
}


#line 1410  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_hw_phy_off(struct ipw2100_priv *priv)
{
  int __retres;
  int err;
  int i;
  u32 val1;
  u32 val2;
  
#line 1415 
  struct host_command cmd = {.host_command = 61U, .host_command1 = 0U, .host_command_sequence = 0U, .host_command_length = 0U, .host_command_parameters = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U}};
  
#line 1423 
  if ((ipw2100_debug_level & 32U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 1423 
    tmp = preempt_count();
    
#line 1423 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 1423 
                                                 tmp_0 = 73; else 
#line 1423 
                                                                  tmp_0 = 85;
    
#line 1423 
    printk("\001",tmp_0,"ipw2100_hw_phy_off");
    
#line 1423 
    printk("CARD_DISABLE_PHY_OFF\n");
  }
  else ;
  
#line 1426 
  err = ipw2100_hw_send_command(priv,& cmd);
  
#line 1427 
  if (err != 0) {
    
#line 1428 
    __retres = err;
    
#line 1428 
    goto return_label;
  }
  else ;
  
#line 1430 
  i = 0;
  
#line 1430 
  goto ldv_61253;
  ldv_61252: 
#line 1431 
  ;
  
#line 1431 
  read_nic_dword(priv->net_dev,2228224U,& val1);
  
#line 1432 
  read_nic_dword(priv->net_dev,3145732U,& val2);
  
#line 1434 
  if ((val1 & 8U) != 0U && (val2 & 1U) != 0U) {
    
#line 1436 
    __retres = 0;
    
#line 1436 
    goto return_label;
  }
  else ;
  
#line 1438 
  schedule_timeout_uninterruptible(0L);
  
#line 1430 
  i += 1;
  ldv_61253: 
#line 1431 
  ;
  
#line 1430 
  if (i <= 2499) 
#line 1432 
                 goto ldv_61252; else 
#line 1435 
                                      goto ldv_61254;
  ldv_61254: 
#line 1436 
  ;
  
#line 1441 
  __retres = -5;
  return_label: 
#line 1441 
                return __retres;
}


#line 1444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_enable_adapter(struct ipw2100_priv *priv)
{
  int __retres;
  int tmp_3;
  
#line 1446 
  struct host_command cmd = {.host_command = 2U, .host_command1 = 0U, .host_command_sequence = 0U, .host_command_length = 0U, .host_command_parameters = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U}};
  
#line 1451 
  int err = 0;
  
#line 1453 
  if ((ipw2100_debug_level & 32U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 1453 
    tmp = preempt_count();
    
#line 1453 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 1453 
                                                 tmp_0 = 73; else 
#line 1453 
                                                                  tmp_0 = 85;
    
#line 1453 
    printk("\001",tmp_0,"ipw2100_enable_adapter");
    
#line 1453 
    printk("HOST_COMPLETE\n");
  }
  else ;
  
#line 1455 
  if ((priv->status & 8UL) != 0UL) {
    
#line 1456 
    __retres = 0;
    
#line 1456 
    goto return_label;
  }
  else ;
  
#line 1458 
  ldv_mutex_lock_78(& priv->adapter_mutex);
  
#line 1460 
  tmp_3 = rf_kill_active(priv);
  
#line 1460 
  if (tmp_3 != 0) {
    
#line 1461 
    if ((ipw2100_debug_level & 32U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 1461 
      tmp_1 = preempt_count();
      
#line 1461 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 1461 
                                                     tmp_2 = 73; else 
                                                                   
#line 1461 
                                                                   tmp_2 = 85;
      
#line 1461 
      printk("\001",tmp_2,"ipw2100_enable_adapter");
      
#line 1461 
      printk("Command aborted due to RF kill active.\n");
    }
    else ;
    
#line 1462 
    goto fail_up;
  }
  else ;
  
#line 1465 
  err = ipw2100_hw_send_command(priv,& cmd);
  
#line 1466 
  if (err != 0) {
    
#line 1467 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_5;
      int tmp_4;
      
#line 1467 
      tmp_4 = preempt_count();
      
#line 1467 
      if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
#line 1467 
                                                     tmp_5 = 73; else 
                                                                   
#line 1467 
                                                                   tmp_5 = 85;
      
#line 1467 
      printk("\001",tmp_5,"ipw2100_enable_adapter");
      
#line 1467 
      printk("Failed to send HOST_COMPLETE command\n");
    }
    else ;
    
#line 1468 
    goto fail_up;
  }
  else ;
  
#line 1471 
  err = ipw2100_wait_for_card_state(priv,0);
  
#line 1472 
  if (err != 0) {
    
#line 1473 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_7;
      int tmp_6;
      
#line 1473 
      tmp_6 = preempt_count();
      
#line 1473 
      if (((unsigned long)tmp_6 & 2096896UL) != 0UL) 
#line 1473 
                                                     tmp_7 = 73; else 
                                                                   
#line 1473 
                                                                   tmp_7 = 85;
      
#line 1473 
      printk("\001",tmp_7,"ipw2100_enable_adapter");
      
#line 1473 
      printk("%s: card not responding to init command.\n",(char *)(& (priv->net_dev)->name));
    }
    else ;
    
#line 1475 
    goto fail_up;
  }
  else ;
  
#line 1478 
  if (priv->stop_hang_check != 0) {
    
#line 1479 
    priv->stop_hang_check = 0;
    
#line 1480 
    ldv_schedule_delayed_work_79(& priv->hang_check,125UL);
  }
  else ;
  fail_up: 
#line 1483 
  ;
  
#line 1484 
  ldv_mutex_unlock_80(& priv->adapter_mutex);
  
#line 1485 
  __retres = err;
  return_label: 
#line 1485 
                return __retres;
}


#line 1488  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_hw_stop_adapter(struct ipw2100_priv *priv)
{
  int __retres;
  int err;
  int i;
  u32 reg;
  
#line 1492 
  struct host_command cmd = {.host_command = 58U, .host_command1 = 0U, .host_command_sequence = 0U, .host_command_length = 0U, .host_command_parameters = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U}};
  
#line 1500 
  if ((priv->status & 4UL) == 0UL) {
    
#line 1501 
    __retres = 0;
    
#line 1501 
    goto return_label;
  }
  else ;
  
#line 1503 
  priv->status |= 16UL;
  
#line 1508 
  if (priv->fatal_error == 0U) {
    
#line 1511 
    ipw2100_enable_adapter(priv);
    
#line 1513 
    err = ipw2100_hw_phy_off(priv);
    
#line 1514 
    if (err != 0) 
#line 1515 
                  printk("\001",err); else ;
    
#line 1538 
    if ((ipw2100_debug_level & 32U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 1538 
      tmp = preempt_count();
      
#line 1538 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 1538 
                                                   tmp_0 = 73; else 
#line 1538 
                                                                    tmp_0 = 85;
      
#line 1538 
      printk("\001",tmp_0,"ipw2100_hw_stop_adapter");
      
#line 1538 
      printk("HOST_PRE_POWER_DOWN\n");
    }
    else ;
    
#line 1540 
    err = ipw2100_hw_send_command(priv,& cmd);
    
#line 1541 
    if (err != 0) 
#line 1542 
                  printk("\001",(char *)(& (priv->net_dev)->name),err);
    else {
      unsigned long tmp_1;
      
#line 1546 
      tmp_1 = msecs_to_jiffies(100U);
      
#line 1546 
      schedule_timeout_uninterruptible((long)tmp_1);
    }
  }
  else ;
  
#line 1549 
  priv->status &= 18446744073709551607UL;
  
#line 1555 
  ipw2100_hw_set_gpio(priv);
  
#line 1565 
  write_register(priv->net_dev,32U,512U);
  
#line 1570 
  i = 5;
  
#line 1570 
  goto ldv_61272;
  ldv_61271: 
#line 1571 
  ;
  
#line 1571 
  __const_udelay(42950UL);
  
#line 1574 
  read_register(priv->net_dev,32U,& reg);
  
#line 1576 
  if ((reg & 256U) != 0U) 
#line 1577 
                          goto ldv_61270; else ;
  
#line 1570 
  i -= 1;
  ldv_61272: 
#line 1571 
  ;
  
#line 1570 
  if (i > 0) 
#line 1572 
             goto ldv_61271; else 
#line 1575 
                                  goto ldv_61270;
  ldv_61270: 
#line 1576 
  ;
  
#line 1580 
  if (i == 0) 
#line 1581 
              printk("\001",(char *)(& (priv->net_dev)->name)); else ;
  
#line 1586 
  write_register(priv->net_dev,32U,128U);
  
#line 1589 
  priv->status &= 18446744073709551595UL;
  
#line 1591 
  __retres = 0;
  return_label: 
#line 1591 
                return __retres;
}


#line 1594  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_disable_adapter(struct ipw2100_priv *priv)
{
  int __retres;
  
#line 1596 
  struct host_command cmd = {.host_command = 44U, .host_command1 = 0U, .host_command_sequence = 0U, .host_command_length = 0U, .host_command_parameters = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U}};
  
#line 1601 
  int err = 0;
  
#line 1603 
  if ((ipw2100_debug_level & 32U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 1603 
    tmp = preempt_count();
    
#line 1603 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 1603 
                                                 tmp_0 = 73; else 
#line 1603 
                                                                  tmp_0 = 85;
    
#line 1603 
    printk("\001",tmp_0,"ipw2100_disable_adapter");
    
#line 1603 
    printk("CARD_DISABLE\n");
  }
  else ;
  
#line 1605 
  if ((priv->status & 8UL) == 0UL) {
    
#line 1606 
    __retres = 0;
    
#line 1606 
    goto return_label;
  }
  else ;
  
#line 1609 
  priv->status &= 18446744073709550079UL;
  
#line 1611 
  if (priv->stop_hang_check == 0) {
    
#line 1612 
    priv->stop_hang_check = 1;
    
#line 1613 
    cancel_delayed_work(& priv->hang_check);
  }
  else ;
  
#line 1616 
  ldv_mutex_lock_81(& priv->adapter_mutex);
  
#line 1618 
  err = ipw2100_hw_send_command(priv,& cmd);
  
#line 1619 
  if (err != 0) {
    
#line 1620 
    printk("\001");
    
#line 1622 
    goto fail_up;
  }
  else ;
  
#line 1625 
  err = ipw2100_wait_for_card_state(priv,1);
  
#line 1626 
  if (err != 0) {
    
#line 1627 
    printk("\001");
    
#line 1629 
    goto fail_up;
  }
  else ;
  
#line 1632 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 1632 
    tmp_1 = preempt_count();
    
#line 1632 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 1632 
                                                   tmp_2 = 73; else 
#line 1632 
                                                                    tmp_2 = 85;
    
#line 1632 
    printk("\001",tmp_2,"ipw2100_disable_adapter");
    
#line 1632 
    printk("TODO: implement scan state machine\n");
  }
  else ;
  fail_up: 
#line 1634 
  ;
  
#line 1635 
  ldv_mutex_unlock_82(& priv->adapter_mutex);
  
#line 1636 
  __retres = err;
  return_label: 
#line 1636 
                return __retres;
}


#line 1639  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_set_scan_options(struct ipw2100_priv *priv)
{
  int err;
  
#line 1641 
  struct host_command cmd = {.host_command = 46U, .host_command1 = 0U, .host_command_sequence = 0U, .host_command_length = 8U, .host_command_parameters = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U}};
  
#line 1648 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 1648 
    tmp = preempt_count();
    
#line 1648 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 1648 
                                                 tmp_0 = 73; else 
#line 1648 
                                                                  tmp_0 = 85;
    
#line 1648 
    printk("\001",tmp_0,"ipw2100_set_scan_options");
    
#line 1648 
    printk("enter\n");
  }
  else ;
  
#line 1650 
  if ((ipw2100_debug_level & 2048U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 1650 
    tmp_1 = preempt_count();
    
#line 1650 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 1650 
                                                   tmp_2 = 73; else 
#line 1650 
                                                                    tmp_2 = 85;
    
#line 1650 
    printk("\001",tmp_2,"ipw2100_set_scan_options");
    
#line 1650 
    printk("setting scan options\n");
  }
  else ;
  
#line 1652 
  cmd.host_command_parameters[0] = 0U;
  
#line 1654 
  if ((priv->config & 64UL) == 0UL) 
#line 1655 
                                    cmd.host_command_parameters[0] |= 1U; else ;
  
#line 1656 
  if (((int)(priv->ieee)->sec.flags & 256) != 0 && (unsigned int)*((unsigned char *)(& (priv->ieee)->sec) + 0UL) != 0U) 
    
#line 1657 
    cmd.host_command_parameters[0] |= 2U; else ;
  
#line 1658 
  if ((priv->config & 1024UL) != 0UL) 
#line 1659 
                                      cmd.host_command_parameters[0] |= 8U; else ;
  
#line 1661 
  cmd.host_command_parameters[1] = priv->channel_mask;
  
#line 1663 
  err = ipw2100_hw_send_command(priv,& cmd);
  
#line 1665 
  if ((ipw2100_debug_level & 32U) != 0U) {
    int tmp_4;
    int tmp_3;
    
#line 1665 
    tmp_3 = preempt_count();
    
#line 1665 
    if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 1665 
                                                   tmp_4 = 73; else 
#line 1665 
                                                                    tmp_4 = 85;
    
#line 1665 
    printk("\001",tmp_4,"ipw2100_set_scan_options");
    
#line 1665 
    printk("SET_SCAN_OPTIONS 0x%04X\n",cmd.host_command_parameters[0]);
  }
  else ;
  
#line 1668 
  return err;
}


#line 1671  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_start_scan(struct ipw2100_priv *priv)
{
  int __retres;
  int err;
  
#line 1673 
  struct host_command cmd = {.host_command = 43U, .host_command1 = 0U, .host_command_sequence = 0U, .host_command_length = 4U, .host_command_parameters = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U}};
  
#line 1680 
  if ((ipw2100_debug_level & 32U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 1680 
    tmp = preempt_count();
    
#line 1680 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 1680 
                                                 tmp_0 = 73; else 
#line 1680 
                                                                  tmp_0 = 85;
    
#line 1680 
    printk("\001",tmp_0,"ipw2100_start_scan");
    
#line 1680 
    printk("START_SCAN\n");
  }
  else ;
  
#line 1682 
  cmd.host_command_parameters[0] = 0U;
  
#line 1685 
  if ((priv->ieee)->iw_mode == 6) {
    
#line 1686 
    __retres = 1;
    
#line 1686 
    goto return_label;
  }
  else ;
  
#line 1688 
  if ((priv->status & 16777216UL) != 0UL) {
    
#line 1689 
    if ((ipw2100_debug_level & 2048U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 1689 
      tmp_1 = preempt_count();
      
#line 1689 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 1689 
                                                     tmp_2 = 73; else 
                                                                   
#line 1689 
                                                                   tmp_2 = 85;
      
#line 1689 
      printk("\001",tmp_2,"ipw2100_start_scan");
      
#line 1689 
      printk("Scan requested while already in scan...\n");
    }
    else ;
    
#line 1690 
    __retres = 0;
    
#line 1690 
    goto return_label;
  }
  else ;
  
#line 1693 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_4;
    int tmp_3;
    
#line 1693 
    tmp_3 = preempt_count();
    
#line 1693 
    if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 1693 
                                                   tmp_4 = 73; else 
#line 1693 
                                                                    tmp_4 = 85;
    
#line 1693 
    printk("\001",tmp_4,"ipw2100_start_scan");
    
#line 1693 
    printk("enter\n");
  }
  else ;
  
#line 1700 
  if ((ipw2100_debug_level & 2048U) != 0U) {
    int tmp_6;
    int tmp_5;
    
#line 1700 
    tmp_5 = preempt_count();
    
#line 1700 
    if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 1700 
                                                   tmp_6 = 73; else 
#line 1700 
                                                                    tmp_6 = 85;
    
#line 1700 
    printk("\001",tmp_6,"ipw2100_start_scan");
    
#line 1700 
    printk("starting scan\n");
  }
  else ;
  
#line 1702 
  priv->status |= 16777216UL;
  
#line 1703 
  err = ipw2100_hw_send_command(priv,& cmd);
  
#line 1704 
  if (err != 0) 
#line 1705 
                priv->status &= 18446744073692774399UL; else ;
  
#line 1707 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_8;
    int tmp_7;
    
#line 1707 
    tmp_7 = preempt_count();
    
#line 1707 
    if (((unsigned long)tmp_7 & 2096896UL) != 0UL) 
#line 1707 
                                                   tmp_8 = 73; else 
#line 1707 
                                                                    tmp_8 = 85;
    
#line 1707 
    printk("\001",tmp_8,"ipw2100_start_scan");
    
#line 1707 
    printk("exit\n");
  }
  else ;
  
#line 1709 
  __retres = err;
  return_label: 
#line 1709 
                return __retres;
}


#line 1712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct libipw_geo const ipw_geos[1U] = {{.name = {(unsigned char)'-', (unsigned char)'-', (unsigned char)'-', (unsigned char)'\000'}, .bg_channels = (unsigned char)14U, .a_channels = (unsigned char)0, .bg = {{.freq = 2412U, .channel = (unsigned char)1U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2417U, .channel = (unsigned char)2U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2422U, .channel = (unsigned char)3U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2427U, .channel = (unsigned char)4U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2432U, .channel = (unsigned char)5U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2437U, .channel = (unsigned char)6U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2442U, .channel = (unsigned char)7U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2447U, .channel = (unsigned char)8U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2452U, .channel = (unsigned char)9U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2457U, .channel = (unsigned char)10U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2462U, .channel = (unsigned char)11U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2467U, .channel = (unsigned char)12U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2472U, .channel = (unsigned char)13U, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 2484U, .channel = (unsigned char)14U, .flags = (unsigned char)0, .max_power = (unsigned char)0}}, .a = {{.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}, {.freq = 0U, .channel = (unsigned char)0, .flags = (unsigned char)0, .max_power = (unsigned char)0}}}};

#line 1724  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_up(struct ipw2100_priv *priv, int deferred)
{
  int __retres;
  unsigned long flags;
  u32 lock;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  int tmp_6;
  int tmp_7;
  
#line 1727 
  int rc = 0;
  
#line 1729 
  u32 ord_len = 4U;
  
#line 1732 
  if (priv->suspend_time != 0UL) {
    
#line 1733 
    libipw_networks_age(priv->ieee,priv->suspend_time);
    
#line 1734 
    priv->suspend_time = 0UL;
  }
  else ;
  
#line 1738 
  if ((priv->status & 8192UL) != 0UL) {
    
#line 1739 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 1739 
      tmp = preempt_count();
      
#line 1739 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 1739 
                                                   tmp_0 = 73; else 
#line 1739 
                                                                    tmp_0 = 85;
      
#line 1739 
      printk("\001",tmp_0,"ipw2100_up");
      
#line 1739 
      printk("%s: Radio is disabled by Manual Disable ",(char *)(& (priv->net_dev)->name));
    }
    else ;
    
#line 1741 
    __retres = 0;
    
#line 1741 
    goto return_label;
  }
  else ;
  
#line 1747 
  pm_qos_update_request(& ipw2100_pm_qos_req,175);
  
#line 1750 
  ldv___ldv_spin_lock_83(& priv->low_lock);
  
#line 1751 
  ipw2100_disable_interrupts(priv);
  
#line 1754 
  ipw2100_reset_fatalerror(priv);
  
#line 1755 
  ldv_spin_unlock_irqrestore_84(& priv->low_lock,flags);
  
#line 1757 
  if ((priv->status & 1UL) != 0UL || (priv->status & 536870912UL) != 0UL) {
    int tmp_1;
    
#line 1760 
    tmp_1 = ipw2100_power_cycle_adapter(priv);
    
#line 1760 
    if (tmp_1 != 0) {
      
#line 1761 
      printk("\001",(char *)(& (priv->net_dev)->name));
      
#line 1764 
      rc = 1;
      
#line 1765 
      goto exit;
    }
    else ;
  }
  else 
#line 1768 
       priv->status |= 1UL;
  
#line 1771 
  tmp_2 = ipw2100_start_adapter(priv);
  
#line 1771 
  if (tmp_2 != 0) {
    
#line 1772 
    printk("\001",(char *)(& (priv->net_dev)->name));
    
#line 1775 
    rc = 1;
    
#line 1776 
    goto exit;
  }
  else ;
  
#line 1779 
  ipw2100_initialize_ordinals(priv);
  
#line 1782 
  tmp_3 = ipw2100_get_hw_features(priv);
  
#line 1782 
  if (tmp_3 != 0) {
    
#line 1783 
    printk("\001",(char *)(& (priv->net_dev)->name));
    
#line 1786 
    rc = 1;
    
#line 1787 
    goto exit;
  }
  else ;
  
#line 1791 
  libipw_set_geo(priv->ieee,&(ipw_geos[0]));
  
#line 1792 
  (priv->ieee)->freq_band = 1;
  
#line 1794 
  lock = 0U;
  
#line 1795 
  tmp_4 = ipw2100_set_ordinal(priv,120U,& lock,& ord_len);
  
#line 1795 
  if (tmp_4 != 0) {
    
#line 1796 
    printk("\001",(char *)(& (priv->net_dev)->name));
    
#line 1799 
    rc = 1;
    
#line 1800 
    goto exit;
  }
  else ;
  
#line 1803 
  priv->status &= 18446744073692774399UL;
  
#line 1805 
  tmp_6 = rf_kill_active(priv);
  
#line 1805 
  if (tmp_6 != 0) {
    
#line 1806 
    printk("\001",(char *)(& (priv->net_dev)->name));
    
#line 1809 
    if (priv->stop_rf_kill != 0) {
      unsigned long tmp_5;
      
#line 1810 
      priv->stop_rf_kill = 0;
      
#line 1811 
      tmp_5 = round_jiffies_relative(250UL);
      
#line 1811 
      ;
      
#line 1811 
      ldv_schedule_delayed_work_85(& priv->rf_kill,tmp_5);
    }
    else ;
    
#line 1815 
    deferred = 1;
  }
  else ;
  
#line 1819 
  ipw2100_enable_interrupts(priv);
  
#line 1823 
  tmp_7 = ipw2100_adapter_setup(priv);
  
#line 1823 
  if (tmp_7 != 0) {
    
#line 1824 
    printk("\001",(char *)(& (priv->net_dev)->name));
    
#line 1826 
    rc = 1;
    
#line 1827 
    goto exit;
  }
  else ;
  
#line 1830 
  if (deferred == 0) {
    int tmp_8;
    
#line 1832 
    tmp_8 = ipw2100_enable_adapter(priv);
    
#line 1832 
    if (tmp_8 != 0) {
      
#line 1833 
      printk("\001",(char *)(& (priv->net_dev)->name));
      
#line 1836 
      ipw2100_hw_stop_adapter(priv);
      
#line 1837 
      rc = 1;
      
#line 1838 
      goto exit;
    }
    else ;
    
#line 1842 
    ipw2100_set_scan_options(priv);
    
#line 1843 
    ipw2100_start_scan(priv);
  }
  else ;
  exit: 
#line 1846 
  ;
  
#line 1847 
  __retres = rc;
  return_label: 
#line 1847 
                return __retres;
}


#line 1850  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_down(struct ipw2100_priv *priv)
{
  unsigned long flags;
  int tmp;
  
#line 1853 
  union iwreq_data wrqu = {.ap_addr = {.sa_family = (unsigned short)1U, .sa_data = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}}};
  
#line 1857 
  int associated = (int)priv->status & 1024;
  
#line 1860 
  if (priv->stop_rf_kill == 0) {
    
#line 1861 
    priv->stop_rf_kill = 1;
    
#line 1862 
    cancel_delayed_work(& priv->rf_kill);
  }
  else ;
  
#line 1866 
  if (priv->stop_hang_check == 0) {
    
#line 1867 
    priv->stop_hang_check = 1;
    
#line 1868 
    cancel_delayed_work(& priv->hang_check);
  }
  else ;
  
#line 1872 
  if ((priv->status & 536870912UL) != 0UL) 
#line 1873 
                                           cancel_delayed_work(& priv->reset_work); else ;
  
#line 1877 
  ldv___ldv_spin_lock_86(& priv->low_lock);
  
#line 1878 
  ipw2100_enable_interrupts(priv);
  
#line 1879 
  ldv_spin_unlock_irqrestore_87(& priv->low_lock,flags);
  
#line 1881 
  tmp = ipw2100_hw_stop_adapter(priv);
  
#line 1881 
  if (tmp != 0) 
#line 1882 
                printk("\001",(char *)(& (priv->net_dev)->name)); else ;
  
#line 1888 
  ldv___ldv_spin_lock_88(& priv->low_lock);
  
#line 1889 
  ipw2100_disable_interrupts(priv);
  
#line 1890 
  ldv_spin_unlock_irqrestore_89(& priv->low_lock,flags);
  
#line 1892 
  pm_qos_update_request(& ipw2100_pm_qos_req,-1);
  
#line 1895 
  if (associated != 0) 
#line 1896 
                       wireless_send_event(priv->net_dev,35605U,& wrqu,(char const *)0); else ;
  
#line 1898 
  priv->status &= 18446744073709550079UL;
  
#line 1899 
  netif_carrier_off(priv->net_dev);
  
#line 1900 
  netif_start_queue(priv->net_dev);
  
#line 1901 
  return;
}


#line 1903  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wdev_init(struct net_device *dev)
{
  int __retres;
  int i;
  int tmp_2;
  
#line 1905 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 1906 
  struct libipw_geo const *geo = libipw_get_geo(priv->ieee);
  
#line 1907 
  struct wireless_dev *wdev = & (priv->ieee)->wdev;
  
#line 1910 
  memcpy((void *)(& (wdev->wiphy)->perm_addr),(void const *)(& priv->mac_addr),6UL);
  
#line 1913 
  if ((unsigned int)geo->bg_channels != 0U) {
    
#line 1914 
    struct ieee80211_supported_band *bg_band = & (priv->ieee)->bg_band;
    
#line 1916 
    bg_band->band = IEEE80211_BAND_2GHZ;
    
#line 1917 
    bg_band->n_channels = (int)geo->bg_channels;
    
#line 1918 
    bg_band->channels = (struct ieee80211_channel *)kcalloc((unsigned long)geo->bg_channels,64UL,208U);
    
#line 1921 
    if (bg_band->channels == (struct ieee80211_channel *)0) {
      
#line 1922 
      ipw2100_down(priv);
      
#line 1923 
      __retres = -12;
      
#line 1923 
      goto return_label;
    }
    else ;
    
#line 1926 
    i = 0;
    
#line 1926 
    goto ldv_61318;
    ldv_61317: 
#line 1927 
    ;
    
#line 1927 
    (bg_band->channels + i)->band = IEEE80211_BAND_2GHZ;
    
#line 1928 
    (bg_band->channels + i)->center_freq = (unsigned short)geo->bg[i].freq;
    
#line 1929 
    (bg_band->channels + i)->hw_value = (unsigned short)geo->bg[i].channel;
    
#line 1930 
    (bg_band->channels + i)->max_power = (int)geo->bg[i].max_power;
    
#line 1931 
    if (((int)geo->bg[i].flags & 1) != 0) 
#line 1932 
                                          (bg_band->channels + i)->flags |= 2U; else ;
    
#line 1934 
    if (((int)geo->bg[i].flags & 8) != 0) 
#line 1935 
                                          (bg_band->channels + i)->flags |= 2U; else ;
    
#line 1937 
    if (((int)geo->bg[i].flags & 32) != 0) 
#line 1938 
                                           (bg_band->channels + i)->flags |= 8U; else ;
    
#line 1926 
    i += 1;
    ldv_61318: 
#line 1927 
    ;
    
#line 1926 
    if ((int)geo->bg_channels > i) 
#line 1928 
                                   goto ldv_61317; else 
#line 1931 
                                                        goto ldv_61319;
    ldv_61319: 
#line 1932 
    ;
    
#line 1945 
    bg_band->bitrates = (struct ieee80211_rate *)(& ipw2100_bg_rates);
    
#line 1946 
    bg_band->n_bitrates = 4;
    
#line 1948 
    (wdev->wiphy)->bands[0] = bg_band;
  }
  else ;
  
#line 1951 
  (wdev->wiphy)->cipher_suites = (u32 const *)(& ipw_cipher_suites);
  
#line 1952 
  (wdev->wiphy)->n_cipher_suites = 4;
  
#line 1954 
  set_wiphy_dev(wdev->wiphy,& (priv->pci_dev)->dev);
  
#line 1955 
  tmp_2 = wiphy_register(wdev->wiphy);
  
#line 1955 
  if (tmp_2 != 0) {
    
#line 1956 
    __retres = -5;
    
#line 1956 
    goto return_label;
  }
  else ;
  
#line 1957 
  __retres = 0;
  return_label: 
#line 1957 
                return __retres;
}


#line 1960  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_reset_adapter(struct work_struct *work)
{
  struct ipw2100_priv *tmp;
  unsigned long flags;
  {
    
#line 1963 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 1963 
    tmp = (struct ipw2100_priv *)__mptr + 18446744073709550536U;
  }
  
#line 1962 
  struct ipw2100_priv *priv = tmp;
  
#line 1965 
  union iwreq_data wrqu = {.ap_addr = {.sa_family = (unsigned short)1U, .sa_data = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0}}};
  
#line 1969 
  int associated = (int)priv->status & 1024;
  
#line 1971 
  ldv___ldv_spin_lock_90(& priv->low_lock);
  
#line 1972 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 1972 
    tmp_0 = preempt_count();
    
#line 1972 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 1972 
                                                   tmp_1 = 73; else 
#line 1972 
                                                                    tmp_1 = 85;
    
#line 1972 
    printk("\001",tmp_1,"ipw2100_reset_adapter");
    
#line 1972 
    printk(": %s: Restarting adapter.\n",(char *)(& (priv->net_dev)->name));
  }
  else ;
  
#line 1973 
  priv->resets += 1;
  
#line 1974 
  priv->status &= 18446744073709550079UL;
  
#line 1975 
  priv->status |= 1073741824UL;
  
#line 1979 
  cancel_delayed_work(& priv->reset_work);
  
#line 1980 
  priv->status |= 536870912UL;
  
#line 1981 
  ldv_spin_unlock_irqrestore_91(& priv->low_lock,flags);
  
#line 1983 
  ldv_mutex_lock_92(& priv->action_mutex);
  
#line 1985 
  priv->stop_hang_check = 1;
  
#line 1986 
  cancel_delayed_work(& priv->hang_check);
  
#line 1989 
  if (associated != 0) 
#line 1990 
                       wireless_send_event(priv->net_dev,35605U,& wrqu,(char const *)0); else ;
  
#line 1992 
  ipw2100_up(priv,0);
  
#line 1993 
  ldv_mutex_unlock_93(& priv->action_mutex);
  
#line 1994 
  return;
}


#line 1997  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void isr_indicate_associated(struct ipw2100_priv *priv, u32 status)
{
  int ret;
  unsigned int len;
  unsigned int essid_len;
  char essid[32U];
  u32 txrate;
  u32 chan;
  char *txratename;
  u8 bssid[6U];
  
#line 2016 
  essid_len = 32U;
  
#line 2017 
  ret = ipw2100_get_ordinal(priv,1006U,(void *)(& essid),& essid_len);
  
#line 2019 
  if (ret != 0) {
    
#line 2020 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 2020 
      tmp = preempt_count();
      
#line 2020 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 2020 
                                                   tmp_0 = 73; else 
#line 2020 
                                                                    tmp_0 = 85;
      
#line 2020 
      printk("\001",tmp_0,"isr_indicate_associated");
      
#line 2020 
      printk("failed querying ordinals at line %d\n",2021);
    }
    else ;
    
#line 2022 
    goto return_label;
  }
  else ;
  
#line 2025 
  len = 4U;
  
#line 2026 
  ret = ipw2100_get_ordinal(priv,192U,(void *)(& txrate),& len);
  
#line 2027 
  if (ret != 0) {
    
#line 2028 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 2028 
      tmp_1 = preempt_count();
      
#line 2028 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 2028 
                                                     tmp_2 = 73; else 
                                                                   
#line 2028 
                                                                   tmp_2 = 85;
      
#line 2028 
      printk("\001",tmp_2,"isr_indicate_associated");
      
#line 2028 
      printk("failed querying ordinals at line %d\n",2029);
    }
    else ;
    
#line 2030 
    goto return_label;
  }
  else ;
  
#line 2033 
  len = 4U;
  
#line 2034 
  ret = ipw2100_get_ordinal(priv,189U,(void *)(& chan),& len);
  
#line 2035 
  if (ret != 0) {
    
#line 2036 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_4;
      int tmp_3;
      
#line 2036 
      tmp_3 = preempt_count();
      
#line 2036 
      if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 2036 
                                                     tmp_4 = 73; else 
                                                                   
#line 2036 
                                                                   tmp_4 = 85;
      
#line 2036 
      printk("\001",tmp_4,"isr_indicate_associated");
      
#line 2036 
      printk("failed querying ordinals at line %d\n",2037);
    }
    else ;
    
#line 2038 
    goto return_label;
  }
  else ;
  
#line 2040 
  len = 6U;
  
#line 2041 
  ret = ipw2100_get_ordinal(priv,1014U,(void *)(& bssid),& len);
  
#line 2043 
  if (ret != 0) {
    
#line 2044 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_6;
      int tmp_5;
      
#line 2044 
      tmp_5 = preempt_count();
      
#line 2044 
      if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 2044 
                                                     tmp_6 = 73; else 
                                                                   
#line 2044 
                                                                   tmp_6 = 85;
      
#line 2044 
      printk("\001",tmp_6,"isr_indicate_associated");
      
#line 2044 
      printk("failed querying ordinals at line %d\n",2045);
    }
    else ;
    
#line 2046 
    goto return_label;
  }
  else ;
  
#line 2048 
  memcpy((void *)(& (priv->ieee)->bssid),(void const *)(& bssid),6UL);
  
#line 2050 
  switch (txrate) {
    case (u32)1: 
#line 2051 
    ;
    
#line 2052 
    txratename = (char *)"1Mbps";
    
#line 2053 
    goto ldv_61350;
    case (u32)2: 
#line 2054 
    ;
    
#line 2055 
    txratename = (char *)"2Mbsp";
    
#line 2056 
    goto ldv_61350;
    case (u32)4: 
#line 2057 
    ;
    
#line 2058 
    txratename = (char *)"5.5Mbps";
    
#line 2059 
    goto ldv_61350;
    case (u32)8: 
#line 2060 
    ;
    
#line 2061 
    txratename = (char *)"11Mbps";
    
#line 2062 
    goto ldv_61350;
    default: 
#line 2063 
    ;
    
#line 2064 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_8;
      int tmp_7;
      
#line 2064 
      tmp_7 = preempt_count();
      
#line 2064 
      if (((unsigned long)tmp_7 & 2096896UL) != 0UL) 
#line 2064 
                                                     tmp_8 = 73; else 
                                                                   
#line 2064 
                                                                   tmp_8 = 85;
      
#line 2064 
      printk("\001",tmp_8,"isr_indicate_associated");
      
#line 2064 
      printk("Unknown rate: %d\n",txrate);
    }
    else ;
    
#line 2065 
    txratename = (char *)"unknown rate";
    
#line 2066 
    goto ldv_61350;
  }
  ldv_61350: 
#line 2069 
  ;
  
#line 2069 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_10;
    int tmp_9;
    
#line 2069 
    tmp_9 = preempt_count();
    
#line 2069 
    if (((unsigned long)tmp_9 & 2096896UL) != 0UL) 
#line 2069 
                                                   tmp_10 = 73; else 
                                                                  
#line 2069 
                                                                  tmp_10 = 85;
    
#line 2069 
    printk("\001",tmp_10,"isr_indicate_associated");
    
#line 2069 
    printk("%s: Associated with \'%*pE\' at %s, channel %d (BSSID=%pM)\n",(char *)(& (priv->net_dev)->name),essid_len,(char *)(& essid),txratename,chan,(u8 *)(& bssid));
  }
  else ;
  
#line 2074 
  if ((priv->config & 2UL) == 0UL) {
    int tmp_12;
    {
      int tmp_11;
      
#line 2075 
      unsigned char _min1 = (unsigned char)essid_len;
      
#line 2075 
      unsigned char _min2 = (unsigned char)32U;
      
#line 2075 
      if ((int)_min1 < (int)_min2) 
#line 2075 
                                   tmp_11 = (int)_min1; else 
#line 2075 
                                                             tmp_11 = (int)_min2;
      
#line 2075 
      tmp_12 = tmp_11;
    }
    
#line 2075 
    priv->essid_len = (unsigned char)tmp_12;
    
#line 2076 
    memcpy((void *)(& priv->essid),(void const *)(& essid),(unsigned long)priv->essid_len);
  }
  else ;
  
#line 2078 
  priv->channel = (unsigned char)chan;
  
#line 2079 
  memcpy((void *)(& priv->bssid),(void const *)(& bssid),6UL);
  
#line 2081 
  priv->status |= 512UL;
  
#line 2082 
  priv->connect_start = get_seconds();
  
#line 2084 
  ldv_schedule_delayed_work_94(& priv->wx_event_work,25UL);
  return_label: 
#line 2085 
                return;
}


#line 2087  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_set_essid(struct ipw2100_priv *priv, char *essid, int length, int batch_mode)
{
  int __retres;
  int tmp_0;
  int err;
  {
    int tmp;
    
#line 2090 
    int _min1 = length;
    
#line 2090 
    int _min2 = 32;
    
#line 2090 
    if (_min1 < _min2) 
#line 2090 
                       tmp = _min1; else 
#line 2090 
                                         tmp = _min2;
    
#line 2090 
    tmp_0 = tmp;
  }
  
#line 2090 
  int ssid_len = tmp_0;
  
#line 2091 
  struct host_command cmd = {.host_command = 8U, .host_command1 = 0U, .host_command_sequence = 0U, .host_command_length = (unsigned int)ssid_len, .host_command_parameters = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U}};
  
#line 2098 
  if ((ipw2100_debug_level & 32U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 2098 
    tmp_1 = preempt_count();
    
#line 2098 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 2098 
                                                   tmp_2 = 73; else 
#line 2098 
                                                                    tmp_2 = 85;
    
#line 2098 
    printk("\001",tmp_2,"ipw2100_set_essid");
    
#line 2098 
    printk("SSID: \'%*pE\'\n",ssid_len,essid);
  }
  else ;
  
#line 2100 
  if (ssid_len != 0) 
#line 2101 
                     memcpy((void *)(& cmd.host_command_parameters),(void const *)essid,(unsigned long)ssid_len); else ;
  
#line 2103 
  if (batch_mode == 0) {
    
#line 2104 
    err = ipw2100_disable_adapter(priv);
    
#line 2105 
    if (err != 0) {
      
#line 2106 
      __retres = err;
      
#line 2106 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2111 
  if (ssid_len == 0 && (priv->config & 64UL) == 0UL) {
    int i;
    
#line 2113 
    u8 *bogus = (u8 *)(& cmd.host_command_parameters);
    
#line 2114 
    i = 0;
    
#line 2114 
    goto ldv_61374;
    ldv_61373: 
#line 2115 
    ;
    
#line 2115 
    *(bogus + i) = (unsigned char)((unsigned int)((unsigned char)i) + 24U);
    
#line 2114 
    i += 1;
    ldv_61374: 
#line 2115 
    ;
    
#line 2114 
    if (i <= 31) 
#line 2116 
                 goto ldv_61373; else 
#line 2119 
                                      goto ldv_61375;
    ldv_61375: 
#line 2120 
    ;
    
#line 2116 
    cmd.host_command_length = 32U;
  }
  else ;
  
#line 2122 
  err = ipw2100_hw_send_command(priv,& cmd);
  
#line 2123 
  if (err == 0) {
    
#line 2124 
    memset((void *)(& priv->essid) + ssid_len,0,(unsigned long)(32 - ssid_len));
    
#line 2125 
    memcpy((void *)(& priv->essid),(void const *)essid,(unsigned long)ssid_len);
    
#line 2126 
    priv->essid_len = (unsigned char)ssid_len;
  }
  else ;
  
#line 2129 
  if (batch_mode == 0) {
    int tmp_3;
    
#line 2130 
    tmp_3 = ipw2100_enable_adapter(priv);
    
#line 2130 
    if (tmp_3 != 0) 
#line 2131 
                    err = -5; else ;
  }
  else ;
  
#line 2134 
  __retres = err;
  return_label: 
#line 2134 
                return __retres;
}


#line 2137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void isr_indicate_association_lost(struct ipw2100_priv *priv, u32 status)
{
  
#line 2139 
  if ((ipw2100_debug_level & 5184U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 2139 
    tmp = preempt_count();
    
#line 2139 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 2139 
                                                 tmp_0 = 73; else 
#line 2139 
                                                                  tmp_0 = 85;
    
#line 2139 
    printk("\001",tmp_0,"isr_indicate_association_lost");
    
#line 2139 
    printk("disassociated: \'%*pE\' %pM\n",(int)priv->essid_len,(u8 *)(& priv->essid),(u8 *)(& priv->bssid));
  }
  else ;
  
#line 2143 
  priv->status &= 18446744073709550079UL;
  
#line 2145 
  if ((priv->status & 16UL) != 0UL) {
    
#line 2146 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 2146 
      tmp_1 = preempt_count();
      
#line 2146 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 2146 
                                                     tmp_2 = 73; else 
                                                                   
#line 2146 
                                                                   tmp_2 = 85;
      
#line 2146 
      printk("\001",tmp_2,"isr_indicate_association_lost");
      
#line 2146 
      printk("Card is stopping itself, discard ASSN_LOST.\n");
    }
    else ;
    
#line 2147 
    goto return_label;
  }
  else ;
  
#line 2150 
  eth_zero_addr((u8 *)(& priv->bssid));
  
#line 2151 
  eth_zero_addr((u8 *)(& (priv->ieee)->bssid));
  
#line 2153 
  netif_carrier_off(priv->net_dev);
  
#line 2154 
  netif_start_queue(priv->net_dev);
  
#line 2156 
  if ((priv->status & 4UL) == 0UL) 
#line 2157 
                                   goto return_label; else ;
  
#line 2159 
  if ((priv->status & 1073741824UL) != 0UL) 
#line 2160 
                                            ldv_schedule_delayed_work_95(& priv->security_work,0UL); else ;
  
#line 2162 
  ldv_schedule_delayed_work_96(& priv->wx_event_work,0UL);
  return_label: 
#line 2163 
                return;
}


#line 2165  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void isr_indicate_rf_kill(struct ipw2100_priv *priv, u32 status)
{
  unsigned long tmp_1;
  
#line 2167 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 2167 
    tmp = preempt_count();
    
#line 2167 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 2167 
                                                 tmp_0 = 73; else 
#line 2167 
                                                                  tmp_0 = 85;
    
#line 2167 
    printk("\001",tmp_0,"isr_indicate_rf_kill");
    
#line 2167 
    printk("%s: RF Kill state changed to radio OFF.\n",(char *)(& (priv->net_dev)->name));
  }
  else ;
  
#line 2171 
  wiphy_rfkill_set_hw_state((priv->ieee)->wdev.wiphy,(_Bool)1);
  
#line 2172 
  priv->status |= 4096UL;
  
#line 2175 
  priv->stop_rf_kill = 0;
  
#line 2176 
  tmp_1 = round_jiffies_relative(250UL);
  
#line 2176 
  ;
  
#line 2176 
  ;
  
#line 2176 
  mod_delayed_work(system_wq,& priv->rf_kill,tmp_1);
  
#line 2177 
  return;
}


#line 2179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_scan_event(struct work_struct *work)
{
  struct ipw2100_priv *tmp;
  union iwreq_data wrqu;
  {
    
#line 2181 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 2181 
    tmp = (struct ipw2100_priv *)__mptr + 18446744073709549416U;
  }
  
#line 2181 
  struct ipw2100_priv *priv = tmp;
  
#line 2185 
  wrqu.data.length = (unsigned short)0U;
  
#line 2186 
  wrqu.data.flags = (unsigned short)0U;
  
#line 2187 
  wireless_send_event(priv->net_dev,35609U,& wrqu,(char const *)0);
  
#line 2188 
  return;
}


#line 2190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void isr_scan_complete(struct ipw2100_priv *priv, u32 status)
{
  
#line 2192 
  if ((ipw2100_debug_level & 2048U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 2192 
    tmp = preempt_count();
    
#line 2192 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 2192 
                                                 tmp_0 = 73; else 
#line 2192 
                                                                  tmp_0 = 85;
    
#line 2192 
    printk("\001",tmp_0,"isr_scan_complete");
    
#line 2192 
    printk("scan complete\n");
  }
  else ;
  
#line 2194 
  (priv->ieee)->scans += 1;
  
#line 2195 
  priv->status &= 18446744073692774399UL;
  
#line 2198 
  if (priv->user_requested_scan == 0) {
    unsigned long tmp_2;
    unsigned long tmp_1;
    
#line 2200 
    tmp_1 = msecs_to_jiffies(4000U);
    
#line 2199 
    tmp_2 = round_jiffies_relative(tmp_1);
    
#line 2199 
    ;
    
#line 2199 
    ldv_schedule_delayed_work_97(& priv->scan_event,tmp_2);
  }
  else {
    
#line 2202 
    priv->user_requested_scan = 0;
    
#line 2203 
    mod_delayed_work(system_wq,& priv->scan_event,0UL);
  }
  
#line 2205 
  return;
}


#line 2222  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void isr_indicate_scanning(struct ipw2100_priv *priv, u32 status)
{
  
#line 2224 
  if ((ipw2100_debug_level & 2048U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 2224 
    tmp = preempt_count();
    
#line 2224 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 2224 
                                                 tmp_0 = 73; else 
#line 2224 
                                                                  tmp_0 = 85;
    
#line 2224 
    printk("\001",tmp_0,"isr_indicate_scanning");
    
#line 2224 
    printk("Scanning...\n");
  }
  else ;
  
#line 2225 
  priv->status |= 16777216UL;
  
#line 2226 
  return;
}


#line 2228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct ipw2100_status_indicator const status_handlers[13U] = {{.status = 1, .cb = (void (*)(struct ipw2100_priv *, u32 ))0, .name = (char *)"IPW_STATE_INITIALIZED"}, {.status = 2, .cb = (void (*)(struct ipw2100_priv *, u32 ))0, .name = (char *)"IPW_STATE_COUNTRY_FOUND"}, {.status = 4, .cb = & isr_indicate_associated, .name = (char *)"IPW_STATE_ASSOCIATED"}, {.status = 8, .cb = & isr_indicate_association_lost, .name = (char *)"IPW_STATE_ASSN_LOST"}, {.status = 16, .cb = (void (*)(struct ipw2100_priv *, u32 ))0, .name = (char *)"IPW_STATE_ASSN_CHANGED"}, {.status = 32, .cb = & isr_scan_complete, .name = (char *)"IPW_STATE_SCAN_COMPLETE"}, {.status = 64, .cb = (void (*)(struct ipw2100_priv *, u32 ))0, .name = (char *)"IPW_STATE_ENTERED_PSP"}, {.status = 128, .cb = (void (*)(struct ipw2100_priv *, u32 ))0, .name = (char *)"IPW_STATE_LEFT_PSP"}, {.status = 256, .cb = & isr_indicate_rf_kill, .name = (char *)"IPW_STATE_RF_KILL"}, {.status = 512, .cb = (void (*)(struct ipw2100_priv *, u32 ))0, .name = (char *)"IPW_STATE_DISABLED"}, {.status = 1024, .cb = (void (*)(struct ipw2100_priv *, u32 ))0, .name = (char *)"IPW_STATE_POWER_DOWN"}, {.status = 2048, .cb = & isr_indicate_scanning, .name = (char *)"IPW_STATE_SCANNING"}, {.status = -1, .cb = (void (*)(struct ipw2100_priv *, u32 ))0, .name = (char *)"-1"}};

#line 2244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void isr_status_change(struct ipw2100_priv *priv, int status)
{
  int i;
  
#line 2248 
  if ((status == 2048 && (priv->status & 1024UL) != 0UL) && (priv->status & 16777216UL) == 0UL) {
    
#line 2251 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 2251 
      tmp = preempt_count();
      
#line 2251 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 2251 
                                                   tmp_0 = 73; else 
#line 2251 
                                                                    tmp_0 = 85;
      
#line 2251 
      printk("\001",tmp_0,"isr_status_change");
      
#line 2251 
      printk("Scan detected while associated, with ");
    }
    else ;
    
#line 2255 
    schedule_reset(priv);
  }
  else ;
  
#line 2258 
  i = 0;
  
#line 2258 
  goto ldv_61417;
  ldv_61416: 
#line 2259 
  ;
  
#line 2259 
  if (status_handlers[i].status == status) {
    
#line 2260 
    if ((ipw2100_debug_level & 1024U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 2260 
      tmp_1 = preempt_count();
      
#line 2260 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 2260 
                                                     tmp_2 = 73; else 
                                                                   
#line 2260 
                                                                   tmp_2 = 85;
      
#line 2260 
      printk("\001",tmp_2,"isr_status_change");
      
#line 2260 
      printk("Status change: %s\n",status_handlers[i].name);
    }
    else ;
    
#line 2262 
    if (status_handlers[i].cb != (void (*)(struct ipw2100_priv *, u32 ))0) 
      
#line 2263 
      (*(status_handlers[i].cb))(priv,(unsigned int)status); else ;
    
#line 2264 
    priv->wstats.status = (unsigned short)status;
    
#line 2265 
    goto return_label;
  }
  else ;
  
#line 2258 
  i += 1;
  ldv_61417: 
#line 2259 
  ;
  
#line 2258 
  if (status_handlers[i].status != -1) 
#line 2260 
                                       goto ldv_61416; else 
#line 2263 
                                                            goto ldv_61418;
  ldv_61418: 
#line 2264 
  ;
  
#line 2269 
  if ((ipw2100_debug_level & 1024U) != 0U) {
    int tmp_4;
    int tmp_3;
    
#line 2269 
    tmp_3 = preempt_count();
    
#line 2269 
    if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 2269 
                                                   tmp_4 = 73; else 
#line 2269 
                                                                    tmp_4 = 85;
    
#line 2269 
    printk("\001",tmp_4,"isr_status_change");
    
#line 2269 
    printk("unknown status received: %04x\n",status);
  }
  else ;
  return_label: 
#line 2271 
                return;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void isr_rx_complete_command(struct ipw2100_priv *priv, struct ipw2100_cmd_header *cmd)
{
  
#line 2276 
  if (cmd->host_command_reg <= 69U) {
    
#line 2277 
    if ((ipw2100_debug_level & 32U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 2277 
      tmp = preempt_count();
      
#line 2277 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 2277 
                                                   tmp_0 = 73; else 
#line 2277 
                                                                    tmp_0 = 85;
      
#line 2277 
      printk("\001",tmp_0,"isr_rx_complete_command");
      
#line 2277 
      printk("Command completed \'%s (%d)\'\n",command_types[cmd->host_command_reg],cmd->host_command_reg);
    }
    else ;
  }
  else ;
  
#line 2282 
  if (cmd->host_command_reg == 2U) 
#line 2283 
                                   priv->status |= 8UL; else ;
  
#line 2285 
  if (cmd->host_command_reg == 44U) 
#line 2286 
                                    priv->status &= 18446744073709551607UL; else ;
  
#line 2288 
  priv->status &= 18446744073709551613UL;
  
#line 2290 
  __wake_up(& priv->wait_command_queue,1U,1,(void *)0);
  
#line 2291 
  return;
}


#line 2294  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static char const *frame_types[5U] = {"COMMAND_STATUS_VAL", "STATUS_CHANGE_VAL", "P80211_DATA_VAL", "P8023_DATA_VAL", "HOST_NOTIFICATION_VAL"};

#line 2303  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_alloc_skb(struct ipw2100_priv *priv, struct ipw2100_rx_packet *packet)
{
  int __retres;
  
#line 2306 
  packet->skb = dev_alloc_skb(2340U);
  
#line 2307 
  if (packet->skb == (struct sk_buff *)0) {
    
#line 2308 
    __retres = -12;
    
#line 2308 
    goto return_label;
  }
  else ;
  
#line 2310 
  packet->rxp = (struct ipw2100_rx *)(packet->skb)->data;
  
#line 2311 
  packet->dma_addr = pci_map_single(priv->pci_dev,(void *)(packet->skb)->data,2340UL,2);
  
#line 2317 
  __retres = 0;
  return_label: 
#line 2317 
                return __retres;
}


#line 2327  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_snapshot_free(struct ipw2100_priv *priv)
{
  int i;
  
#line 2330 
  if (priv->snapshot[0] == (u8 *)0U) 
#line 2331 
                                     goto return_label; else ;
  
#line 2332 
  i = 0;
  
#line 2332 
  goto ldv_61437;
  ldv_61436: 
#line 2333 
  ;
  
#line 2333 
  kfree((void const *)priv->snapshot[i]);
  
#line 2332 
  i += 1;
  ldv_61437: 
#line 2333 
  ;
  
#line 2332 
  if (i <= 47) 
#line 2334 
               goto ldv_61436; else 
#line 2337 
                                    goto ldv_61438;
  ldv_61438: 
#line 2338 
  ;
  
#line 2334 
  priv->snapshot[0] = (u8 *)0U;
  return_label: 
#line 2335 
                return;
}


#line 2413  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static u8 packet_data[2340U];

#line 2416  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_corruption_detected(struct ipw2100_priv *priv, int i)
{
  
#line 2424 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 2424 
    tmp = preempt_count();
    
#line 2424 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 2424 
                                                 tmp_0 = 73; else 
#line 2424 
                                                                  tmp_0 = 85;
    
#line 2424 
    printk("\001",tmp_0,"ipw2100_corruption_detected");
    
#line 2424 
    printk(": PCI latency error detected at 0x%04zX.\n",(unsigned long)i * 8UL);
  }
  else ;
  
#line 2456 
  priv->fatal_error = 268435456U;
  
#line 2457 
  (priv->net_dev)->stats.rx_errors += 1UL;
  
#line 2458 
  schedule_reset(priv);
  
#line 2459 
  return;
}


#line 2461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void isr_rx(struct ipw2100_priv *priv, int i, struct libipw_rx_stats *stats)
{
  int tmp_4;
  int tmp_8;
  bool tmp_7;
  u32 tmp_12;
  int tmp_15;
  int tmp_18;
  
#line 2464 
  struct net_device *dev = priv->net_dev;
  
#line 2465 
  struct ipw2100_status *status = priv->status_queue.drv + i;
  
#line 2466 
  struct ipw2100_rx_packet *packet = priv->rx_buffers + i;
  
#line 2468 
  if ((ipw2100_debug_level & 16777216U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 2468 
    tmp = preempt_count();
    
#line 2468 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 2468 
                                                 tmp_0 = 73; else 
#line 2468 
                                                                  tmp_0 = 85;
    
#line 2468 
    printk("\001",tmp_0,"isr_rx");
    
#line 2468 
    printk("Handler...\n");
  }
  else ;
  
#line 2470 
  tmp_4 = skb_tailroom((struct sk_buff const *)packet->skb);
  
#line 2470 
  ;
  
#line 2470 
  if ((long)(status->frame_size > (unsigned int)tmp_4) != 0L) {
    
#line 2471 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_2;
      int tmp_1;
      int tmp_3;
      
#line 2471 
      tmp_1 = preempt_count();
      
#line 2471 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 2471 
                                                     tmp_2 = 73; else 
                                                                   
#line 2471 
                                                                   tmp_2 = 85;
      
#line 2471 
      printk("\001",tmp_2,"isr_rx");
      
#line 2471 
      tmp_3 = skb_tailroom((struct sk_buff const *)packet->skb);
      
#line 2471 
      ;
      
#line 2471 
      ;
      
#line 2471 
      printk("%s: frame_size (%u) > skb_tailroom (%u)!",(char *)(& dev->name),status->frame_size,tmp_3);
    }
    else ;
    
#line 2475 
    dev->stats.rx_errors += 1UL;
    
#line 2476 
    goto return_label;
  }
  else ;
  
#line 2479 
  tmp_7 = netif_running((struct net_device const *)dev);
  
#line 2479 
  if (tmp_7) 
#line 2479 
             tmp_8 = 0; else 
#line 2479 
                             tmp_8 = 1;
  
#line 2479 
  if ((long)tmp_8 != 0L) {
    
#line 2480 
    dev->stats.rx_errors += 1UL;
    
#line 2481 
    priv->wstats.discard.misc += 1U;
    
#line 2482 
    if ((ipw2100_debug_level & 8192U) != 0U) {
      int tmp_6;
      int tmp_5;
      
#line 2482 
      tmp_5 = preempt_count();
      
#line 2482 
      if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 2482 
                                                     tmp_6 = 73; else 
                                                                   
#line 2482 
                                                                   tmp_6 = 85;
      
#line 2482 
      printk("\001",tmp_6,"isr_rx");
      
#line 2482 
      printk("Dropping packet while interface is not up.\n");
    }
    else ;
    
#line 2483 
    goto return_label;
  }
  else ;
  
#line 2486 
  if ((long)((priv->ieee)->iw_mode != 6) != 0L && (long)((priv->status & 1024UL) == 0UL) != 0L) {
    
#line 2488 
    if ((ipw2100_debug_level & 8192U) != 0U) {
      int tmp_10;
      int tmp_9;
      
#line 2488 
      tmp_9 = preempt_count();
      
#line 2488 
      if (((unsigned long)tmp_9 & 2096896UL) != 0UL) 
#line 2488 
                                                     tmp_10 = 73; else 
                                                                    
#line 2488 
                                                                    tmp_10 = 85;
      
#line 2488 
      printk("\001",tmp_10,"isr_rx");
      
#line 2488 
      printk("Dropping packet while not associated.\n");
    }
    else ;
    
#line 2489 
    priv->wstats.discard.misc += 1U;
    
#line 2490 
    goto return_label;
  }
  else ;
  
#line 2493 
  pci_unmap_single(priv->pci_dev,packet->dma_addr,2340UL,2);
  
#line 2497 
  skb_put(packet->skb,status->frame_size);
  {
    u32 tmp_11;
    
#line 2503 
    u32 __min1 = status->frame_size;
    
#line 2503 
    u32 __min2 = 2340U;
    
#line 2503 
    if (__min1 < __min2) 
#line 2503 
                         tmp_11 = __min1; else 
#line 2503 
                                               tmp_11 = __min2;
    
#line 2503 
    tmp_12 = tmp_11;
  }
  
#line 2502 
  ;
  
#line 2502 
  skb_copy_from_linear_data((struct sk_buff const *)packet->skb,(void *)(& packet_data),tmp_12);
  
#line 2507 
  tmp_15 = libipw_rx(priv->ieee,packet->skb,stats);
  
#line 2507 
  if (tmp_15 == 0) {
    
#line 2509 
    if ((ipw2100_debug_level & 8192U) != 0U) {
      int tmp_14;
      int tmp_13;
      
#line 2509 
      tmp_13 = preempt_count();
      
#line 2509 
      if (((unsigned long)tmp_13 & 2096896UL) != 0UL) 
#line 2509 
                                                      tmp_14 = 73; else 
                                                                    
#line 2509 
                                                                    tmp_14 = 85;
      
#line 2509 
      printk("\001",tmp_14,"isr_rx");
      
#line 2509 
      printk("%s: Non consumed packet:\n",(char *)(& dev->name));
    }
    else ;
    
#line 2511 
    printk_buf(8192,(u8 const *)(& packet_data),status->frame_size);
    
#line 2513 
    dev->stats.rx_errors += 1UL;
    
#line 2516 
    dev_kfree_skb_any(packet->skb);
    
#line 2517 
    packet->skb = (struct sk_buff *)0;
  }
  else ;
  
#line 2521 
  tmp_18 = ipw2100_alloc_skb(priv,packet);
  
#line 2521 
  if ((long)(tmp_18 != 0) != 0L) {
    
#line 2522 
    printk("\001",(char *)(& dev->name));
    
#line 2526 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_17;
      int tmp_16;
      
#line 2526 
      tmp_16 = preempt_count();
      
#line 2526 
      if (((unsigned long)tmp_16 & 2096896UL) != 0UL) 
#line 2526 
                                                      tmp_17 = 73; else 
                                                                    
#line 2526 
                                                                    tmp_17 = 85;
      
#line 2526 
      printk("\001",tmp_17,"isr_rx");
      
#line 2526 
      printk("TODO: Shutdown adapter...\n");
    }
    else ;
  }
  else ;
  
#line 2530 
  (priv->rx_queue.drv + i)->host_addr = (unsigned int)packet->dma_addr;
  return_label: 
#line 2531 
                return;
}


#line 2535  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void isr_rx_monitor(struct ipw2100_priv *priv, int i, struct libipw_rx_stats *stats)
{
  struct ipw_rt_hdr *ipw_rt;
  int tmp_4;
  int tmp_8;
  bool tmp_7;
  int tmp_11;
  int tmp_14;
  
#line 2538 
  struct net_device *dev = priv->net_dev;
  
#line 2539 
  struct ipw2100_status *status = priv->status_queue.drv + i;
  
#line 2540 
  struct ipw2100_rx_packet *packet = priv->rx_buffers + i;
  
#line 2550 
  if ((ipw2100_debug_level & 16777216U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 2550 
    tmp = preempt_count();
    
#line 2550 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 2550 
                                                 tmp_0 = 73; else 
#line 2550 
                                                                  tmp_0 = 85;
    
#line 2550 
    printk("\001",tmp_0,"isr_rx_monitor");
    
#line 2550 
    printk("Handler...\n");
  }
  else ;
  
#line 2552 
  tmp_4 = skb_tailroom((struct sk_buff const *)packet->skb);
  
#line 2552 
  ;
  
#line 2552 
  if ((long)((unsigned long)status->frame_size > (unsigned long)tmp_4 + 18446744073709551607UL) != 0L) {
    
#line 2554 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_2;
      int tmp_1;
      int tmp_3;
      
#line 2554 
      tmp_1 = preempt_count();
      
#line 2554 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 2554 
                                                     tmp_2 = 73; else 
                                                                   
#line 2554 
                                                                   tmp_2 = 85;
      
#line 2554 
      printk("\001",tmp_2,"isr_rx_monitor");
      
#line 2554 
      tmp_3 = skb_tailroom((struct sk_buff const *)packet->skb);
      
#line 2554 
      ;
      
#line 2554 
      ;
      
#line 2554 
      printk("%s: frame_size (%u) > skb_tailroom (%u)!",(char *)(& dev->name),status->frame_size,tmp_3);
    }
    else ;
    
#line 2559 
    dev->stats.rx_errors += 1UL;
    
#line 2560 
    goto return_label;
  }
  else ;
  
#line 2563 
  tmp_7 = netif_running((struct net_device const *)dev);
  
#line 2563 
  if (tmp_7) 
#line 2563 
             tmp_8 = 0; else 
#line 2563 
                             tmp_8 = 1;
  
#line 2563 
  if ((long)tmp_8 != 0L) {
    
#line 2564 
    dev->stats.rx_errors += 1UL;
    
#line 2565 
    priv->wstats.discard.misc += 1U;
    
#line 2566 
    if ((ipw2100_debug_level & 8192U) != 0U) {
      int tmp_6;
      int tmp_5;
      
#line 2566 
      tmp_5 = preempt_count();
      
#line 2566 
      if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 2566 
                                                     tmp_6 = 73; else 
                                                                   
#line 2566 
                                                                   tmp_6 = 85;
      
#line 2566 
      printk("\001",tmp_6,"isr_rx_monitor");
      
#line 2566 
      printk("Dropping packet while interface is not up.\n");
    }
    else ;
    
#line 2567 
    goto return_label;
  }
  else ;
  
#line 2570 
  if ((long)((priv->config & 2048UL) != 0UL) != 0L && (long)(((int)status->flags & 4) != 0) != 0L) {
    
#line 2572 
    if ((ipw2100_debug_level & 16777216U) != 0U) {
      int tmp_10;
      int tmp_9;
      
#line 2572 
      tmp_9 = preempt_count();
      
#line 2572 
      if (((unsigned long)tmp_9 & 2096896UL) != 0UL) 
#line 2572 
                                                     tmp_10 = 73; else 
                                                                    
#line 2572 
                                                                    tmp_10 = 85;
      
#line 2572 
      printk("\001",tmp_10,"isr_rx_monitor");
      
#line 2572 
      printk("CRC error in packet.  Dropping.\n");
    }
    else ;
    
#line 2573 
    dev->stats.rx_errors += 1UL;
    
#line 2574 
    goto return_label;
  }
  else ;
  
#line 2577 
  pci_unmap_single(priv->pci_dev,packet->dma_addr,2340UL,2);
  
#line 2579 
  memmove((void *)((packet->skb)->data + 9U),(void const *)(packet->skb)->data,(unsigned long)status->frame_size);
  
#line 2582 
  ipw_rt = (struct ipw_rt_hdr *)(packet->skb)->data;
  
#line 2584 
  ipw_rt->rt_hdr.it_version = (unsigned char)0U;
  
#line 2585 
  ipw_rt->rt_hdr.it_pad = (unsigned char)0U;
  
#line 2586 
  ipw_rt->rt_hdr.it_len = (unsigned short)9U;
  
#line 2588 
  ipw_rt->rt_hdr.it_present = 32U;
  
#line 2590 
  ipw_rt->rt_dbmsignal = (signed char)((unsigned int)status->rssi + 158U);
  
#line 2592 
  skb_put(packet->skb,status->frame_size + 9U);
  
#line 2594 
  tmp_11 = libipw_rx(priv->ieee,packet->skb,stats);
  
#line 2594 
  if (tmp_11 == 0) {
    
#line 2595 
    dev->stats.rx_errors += 1UL;
    
#line 2598 
    dev_kfree_skb_any(packet->skb);
    
#line 2599 
    packet->skb = (struct sk_buff *)0;
  }
  else ;
  
#line 2603 
  tmp_14 = ipw2100_alloc_skb(priv,packet);
  
#line 2603 
  if ((long)(tmp_14 != 0) != 0L) {
    
#line 2604 
    printk("\001",(char *)(& dev->name));
    
#line 2608 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_13;
      int tmp_12;
      
#line 2608 
      tmp_12 = preempt_count();
      
#line 2608 
      if (((unsigned long)tmp_12 & 2096896UL) != 0UL) 
#line 2608 
                                                      tmp_13 = 73; else 
                                                                    
#line 2608 
                                                                    tmp_13 = 85;
      
#line 2608 
      printk("\001",tmp_13,"isr_rx_monitor");
      
#line 2608 
      printk("TODO: Shutdown adapter...\n");
    }
    else ;
  }
  else ;
  
#line 2612 
  (priv->rx_queue.drv + i)->host_addr = (unsigned int)packet->dma_addr;
  return_label: 
#line 2613 
                return;
}


#line 2617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_corruption_check(struct ipw2100_priv *priv, int i)
{
  int __retres;
  
#line 2619 
  struct ipw2100_status *status = priv->status_queue.drv + i;
  
#line 2620 
  struct ipw2100_rx *u = (priv->rx_buffers + i)->rxp;
  
#line 2621 
  u16 frame_type = (unsigned short)((unsigned int)status->status_fields & 15U);
  
#line 2623 
  switch ((int)frame_type) {
    case 0: 
#line 2624 
    ;
    
#line 2625 
    __retres = status->frame_size != 496U;
    
#line 2625 
    goto return_label;
    case 1: 
#line 2626 
    ;
    
#line 2627 
    __retres = status->frame_size != 4U;
    
#line 2627 
    goto return_label;
    case 4: 
#line 2628 
    ;
    
#line 2629 
    __retres = status->frame_size <= 7U;
    
#line 2629 
    goto return_label;
    case 2: 
#line 2630 
    ;
    case 3: 
#line 2631 
    ;
    
#line 2633 
    __retres = 0;
    
#line 2633 
    goto return_label;
  }
  
#line 2646 
  __retres = 1;
  return_label: 
#line 2646 
                return __retres;
}


#line 2673  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void __ipw2100_rx_process(struct ipw2100_priv *priv)
{
  struct ipw2100_rx_packet *packet;
  u16 frame_type;
  u32 r;
  u32 w;
  u32 i;
  u32 s;
  struct ipw2100_rx *u;
  int tmp_1;
  
#line 2675 
  struct ipw2100_bd_queue *rxq = & priv->rx_queue;
  
#line 2676 
  struct ipw2100_status_queue *sq = & priv->status_queue;
  
#line 2681 
  struct libipw_rx_stats stats = {.mac_time = (unsigned int)jiffies, .rssi = (signed char)0, .signal = (unsigned char)0, .noise = (unsigned char)0, .rate = (unsigned short)0, .received_channel = (unsigned char)0, .control = (unsigned char)0, .mask = (unsigned char)0, .freq = (unsigned char)0, .len = (unsigned short)0, .tsf = 0ULL, .beacon_time = 0U};
  
#line 2685 
  read_register(priv->net_dev,672U,& r);
  
#line 2686 
  read_register(priv->net_dev,4000U,& w);
  
#line 2688 
  if (rxq->entries <= r) {
    
#line 2689 
    if ((ipw2100_debug_level & 16777216U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 2689 
      tmp = preempt_count();
      
#line 2689 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 2689 
                                                   tmp_0 = 73; else 
#line 2689 
                                                                    tmp_0 = 85;
      
#line 2689 
      printk("\001",tmp_0,"__ipw2100_rx_process");
      
#line 2689 
      printk("exit - bad read index\n");
    }
    else ;
    
#line 2690 
    goto return_label;
  }
  else ;
  
#line 2693 
  i = (rxq->next + 1U) % rxq->entries;
  
#line 2694 
  s = i;
  
#line 2695 
  goto ldv_61507;
  ldv_61506: 
#line 2696 
  ;
  
#line 2699 
  packet = priv->rx_buffers + i;
  
#line 2703 
  pci_dma_sync_single_for_cpu(priv->pci_dev,packet->dma_addr,2340UL,2);
  
#line 2707 
  tmp_1 = ipw2100_corruption_check(priv,(int)i);
  
#line 2707 
  if ((long)(tmp_1 != 0) != 0L) {
    
#line 2708 
    ipw2100_corruption_detected(priv,(int)i);
    
#line 2709 
    goto increment;
  }
  else ;
  
#line 2712 
  u = packet->rxp;
  
#line 2713 
  frame_type = (unsigned short)((unsigned int)(sq->drv + i)->status_fields & 15U);
  
#line 2714 
  stats.rssi = (signed char)((unsigned int)(sq->drv + i)->rssi + 158U);
  
#line 2715 
  stats.len = (unsigned short)(sq->drv + i)->frame_size;
  
#line 2717 
  stats.mask = (unsigned char)0U;
  
#line 2718 
  if ((int)stats.rssi != 0) 
#line 2719 
                            stats.mask = (unsigned char)((unsigned int)stats.mask | 2U); else ;
  
#line 2720 
  stats.freq = (unsigned char)1U;
  
#line 2722 
  if ((ipw2100_debug_level & 16777216U) != 0U) {
    int tmp_3;
    int tmp_2;
    
#line 2722 
    tmp_2 = preempt_count();
    
#line 2722 
    if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 2722 
                                                   tmp_3 = 73; else 
#line 2722 
                                                                    tmp_3 = 85;
    
#line 2722 
    printk("\001",tmp_3,"__ipw2100_rx_process");
    
#line 2722 
    printk("%s: \'%s\' frame type received (%d).\n",(char *)(& (priv->net_dev)->name),frame_types[(int)frame_type],(int)stats.len);
  }
  else ;
  
#line 2726 
  switch ((int)frame_type) {
    case 0: 
#line 2727 
    ;
    
#line 2729 
    isr_rx_complete_command(priv,& u->rx_data.command);
    
#line 2730 
    goto ldv_61498;
    case 1: 
#line 2732 
    ;
    
#line 2733 
    isr_status_change(priv,(int)u->rx_data.status);
    
#line 2734 
    goto ldv_61498;
    case 2: 
#line 2736 
    ;
    case 3: 
#line 2737 
    ;
    
#line 2739 
    if ((priv->ieee)->iw_mode == 6) {
      
#line 2740 
      isr_rx_monitor(priv,(int)i,& stats);
      
#line 2741 
      goto ldv_61498;
    }
    else ;
    
#line 2744 
    if ((unsigned int)stats.len <= 23U) 
#line 2745 
                                        goto ldv_61498; else ;
    
#line 2746 
    switch ((int)u->rx_data.header.frame_ctl & 12) {
      case 0: 
#line 2747 
      ;
      
#line 2748 
      libipw_rx_mgt(priv->ieee,& u->rx_data.header,& stats);
      
#line 2750 
      goto ldv_61503;
      case 4: 
#line 2752 
      ;
      
#line 2753 
      goto ldv_61503;
      case 8: 
#line 2755 
      ;
      
#line 2756 
      isr_rx(priv,(int)i,& stats);
      
#line 2757 
      goto ldv_61503;
    }
    ldv_61503: 
#line 2760 
    ;
    
#line 2760 
    goto ldv_61498;
  }
  ldv_61498: 
#line 2763 
  ;
  increment: 
#line 2763 
  ;
  
#line 2765 
  (rxq->drv + i)->status.info.field = (unsigned char)0U;
  
#line 2767 
  i = (i + 1U) % rxq->entries;
  ldv_61507: 
#line 2768 
  ;
  
#line 2695 
  if (i != r) 
#line 2697 
              goto ldv_61506; else 
#line 2700 
                                   goto ldv_61508;
  ldv_61508: 
#line 2701 
  ;
  
#line 2770 
  if (i != s) {
    
#line 2772 
    if (i == 0U) 
#line 2772 
                 rxq->next = rxq->entries + 4294967295U; else 
#line 2772 
                                                              rxq->next = i + 4294967295U;
    
#line 2774 
    write_register(priv->net_dev,4000U,rxq->next);
  }
  else ;
  return_label: 
#line 2777 
                return;
}


#line 2818  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int __ipw2100_tx_process(struct ipw2100_priv *priv)
{
  int __retres;
  struct ipw2100_bd *tbd;
  struct list_head *element;
  struct ipw2100_tx_packet *packet;
  int descriptors_used;
  int e;
  int i;
  u32 r;
  u32 w;
  int tmp;
  struct ipw2100_tx_packet *tmp_0;
  int tmp_13;
  
#line 2820 
  struct ipw2100_bd_queue *txq = & priv->tx_queue;
  
#line 2826 
  u32 frag_num = 0U;
  
#line 2828 
  tmp = list_empty((struct list_head const *)(& priv->fw_pend_list));
  
#line 2828 
  if (tmp != 0) {
    
#line 2829 
    __retres = 0;
    
#line 2829 
    goto return_label;
  }
  else ;
  
#line 2831 
  element = priv->fw_pend_list.next;
  {
    
#line 2833 
    struct list_head const *__mptr = (struct list_head const *)element;
    
#line 2833 
    tmp_0 = (struct ipw2100_tx_packet *)__mptr + 18446744073709551576U;
  }
  
#line 2833 
  packet = tmp_0;
  
#line 2834 
  tbd = txq->drv + packet->index;
  
#line 2837 
  switch (packet->type) {
    case 51966: 
#line 2838 
    ;
    
#line 2840 
    descriptors_used = 1;
    
#line 2841 
    e = (int)txq->oldest;
    
#line 2842 
    goto ldv_61525;
    case 51967: 
#line 2844 
    ;
    
#line 2846 
    descriptors_used = (int)tbd->num_fragments;
    
#line 2847 
    frag_num = (unsigned int)((int)tbd->num_fragments + -1);
    
#line 2848 
    e = (int)(txq->oldest + frag_num);
    
#line 2849 
    e = (int)((unsigned int)e % txq->entries);
    
#line 2850 
    goto ldv_61525;
    default: 
#line 2852 
    ;
    
#line 2853 
    printk("\001",(char *)(& (priv->net_dev)->name));
    
#line 2855 
    __retres = 0;
    
#line 2855 
    goto return_label;
  }
  ldv_61525: 
#line 2862 
  ;
  
#line 2862 
  read_register(priv->net_dev,640U,& r);
  
#line 2864 
  read_register(priv->net_dev,3968U,& w);
  
#line 2866 
  if (txq->next != w) 
#line 2867 
                      printk("\001",(char *)(& (priv->net_dev)->name)); else ;
  
#line 2892 
  if ((r > w || ((unsigned int)e >= r && (unsigned int)e < w)) && ((unsigned int)e >= r || (unsigned int)e < w)) {
    
#line 2893 
    if ((ipw2100_debug_level & 8388608U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 2893 
      tmp_1 = preempt_count();
      
#line 2893 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 2893 
                                                     tmp_2 = 73; else 
                                                                   
#line 2893 
                                                                   tmp_2 = 85;
      
#line 2893 
      printk("\001",tmp_2,"__ipw2100_tx_process");
      
#line 2893 
      printk("exit - no processed packets ready to release.\n");
    }
    else ;
    
#line 2894 
    __retres = 0;
    
#line 2894 
    goto return_label;
  }
  else ;
  
#line 2897 
  list_del(element);
  
#line 2898 
  priv->fw_pend_stat.value -= 1;
  
#line 2898 
  ;
  
#line 2898 
  if (priv->fw_pend_stat.value < priv->fw_pend_stat.lo) 
#line 2898 
                                                        priv->fw_pend_stat.lo = priv->fw_pend_stat.value; else ;
  
#line 2902 
  i = (int)txq->oldest;
  
#line 2903 
  if ((ipw2100_debug_level & 8388608U) != 0U) {
    int tmp_4;
    int tmp_3;
    
#line 2903 
    tmp_3 = preempt_count();
    
#line 2903 
    if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 2903 
                                                   tmp_4 = 73; else 
#line 2903 
                                                                    tmp_4 = 85;
    
#line 2903 
    printk("\001",tmp_4,"__ipw2100_tx_process");
    
#line 2903 
    printk("TX%d V=%p P=%04X T=%04X L=%d\n",i,txq->drv + i,(unsigned int)txq->nic + (unsigned int)((unsigned long)i) * 16U,(txq->drv + i)->host_addr,(txq->drv + i)->buf_length);
  }
  else ;
  
#line 2908 
  if (packet->type == 51967) {
    
#line 2909 
    i = (int)((unsigned int)(i + 1) % txq->entries);
    
#line 2911 
    if ((ipw2100_debug_level & 8388608U) != 0U) {
      int tmp_6;
      int tmp_5;
      
#line 2911 
      tmp_5 = preempt_count();
      
#line 2911 
      if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 2911 
                                                     tmp_6 = 73; else 
                                                                   
#line 2911 
                                                                   tmp_6 = 85;
      
#line 2911 
      printk("\001",tmp_6,"__ipw2100_tx_process");
      
#line 2911 
      printk("TX%d V=%p P=%04X T=%04X L=%d\n",i,txq->drv + i,(unsigned int)txq->nic + (unsigned int)((unsigned long)i) * 16U,(txq->drv + i)->host_addr,(txq->drv + i)->buf_length);
    }
    else ;
  }
  else ;
  
#line 2921 
  switch (packet->type) {
    case 51967: 
#line 2922 
    ;
    
#line 2923 
    if ((unsigned int)*((unsigned char *)(& (txq->drv + txq->oldest)->status.info.fields) + 0UL) != 0U) 
      
#line 2924 
      printk("\001",(char *)(& (priv->net_dev)->name),txq->oldest,packet->index); else ;
    
#line 2930 
    i = 0;
    
#line 2930 
    goto ldv_61531;
    ldv_61530: 
#line 2931 
    ;
    
#line 2931 
    tbd = txq->drv + (unsigned int)((packet->index + 1) + i) % txq->entries;
    
#line 2933 
    if ((ipw2100_debug_level & 8388608U) != 0U) {
      int tmp_8;
      int tmp_7;
      
#line 2933 
      tmp_7 = preempt_count();
      
#line 2933 
      if (((unsigned long)tmp_7 & 2096896UL) != 0UL) 
#line 2933 
                                                     tmp_8 = 73; else 
                                                                   
#line 2933 
                                                                   tmp_8 = 85;
      
#line 2933 
      printk("\001",tmp_8,"__ipw2100_tx_process");
      
#line 2933 
      printk("TX%d P=%08x L=%d\n",(unsigned int)((packet->index + 1) + i) % txq->entries,tbd->host_addr,tbd->buf_length);
    }
    else ;
    
#line 2937 
    pci_unmap_single(priv->pci_dev,(unsigned long long)tbd->host_addr,(unsigned long)tbd->buf_length,1);
    
#line 2930 
    i += 1;
    ldv_61531: 
#line 2931 
    ;
    
#line 2930 
    if ((unsigned int)i < frag_num) 
#line 2932 
                                    goto ldv_61530; else 
#line 2935 
                                                         goto ldv_61532;
    ldv_61532: 
#line 2936 
    ;
    
#line 2942 
    libipw_txb_free(packet->info.d_struct.txb);
    
#line 2943 
    packet->info.d_struct.txb = (struct libipw_txb *)0;
    
#line 2945 
    list_add_tail(element,& priv->tx_free_list);
    
#line 2946 
    priv->tx_free_stat.value += 1;
    
#line 2946 
    ;
    
#line 2946 
    if (priv->tx_free_stat.value > priv->tx_free_stat.hi) 
#line 2946 
                                                          priv->tx_free_stat.hi = priv->tx_free_stat.value; else ;
    
#line 2950 
    if ((priv->status & 1024UL) != 0UL) 
#line 2951 
                                        netif_wake_queue(priv->net_dev); else ;
    
#line 2955 
    (priv->net_dev)->trans_start = jiffies;
    
#line 2957 
    goto ldv_61533;
    case 51966: 
#line 2959 
    ;
    
#line 2960 
    if ((unsigned int)*((unsigned char *)(& (txq->drv + txq->oldest)->status.info.fields) + 0UL) != 2U) 
      
#line 2961 
      printk("\001",(char *)(& (priv->net_dev)->name),txq->oldest,packet->index); else ;
    
#line 2967 
    if ((packet->info.c_struct.cmd)->host_command_reg <= 69U) {
      
#line 2969 
      if ((ipw2100_debug_level & 8388608U) != 0U) {
        int tmp_10;
        int tmp_9;
        
#line 2969 
        tmp_9 = preempt_count();
        
#line 2969 
        if (((unsigned long)tmp_9 & 2096896UL) != 0UL) 
#line 2969 
                                                       tmp_10 = 73; else 
                                                                    
#line 2969 
                                                                    tmp_10 = 85;
        
#line 2969 
        printk("\001",tmp_10,"__ipw2100_tx_process");
        
#line 2969 
        printk("Command \'%s (%d)\' processed: %d.\n",command_types[(packet->info.c_struct.cmd)->host_command_reg],(packet->info.c_struct.cmd)->host_command_reg,(packet->info.c_struct.cmd)->cmd_status_reg);
      }
      else ;
    }
    else ;
    
#line 2977 
    list_add_tail(element,& priv->msg_free_list);
    
#line 2978 
    priv->msg_free_stat.value += 1;
    
#line 2978 
    ;
    
#line 2978 
    if (priv->msg_free_stat.value > priv->msg_free_stat.hi) 
#line 2978 
                                                            priv->msg_free_stat.hi = priv->msg_free_stat.value; else ;
    
#line 2979 
    goto ldv_61533;
  }
  ldv_61533: 
#line 2983 
  ;
  
#line 2983 
  txq->oldest = (unsigned int)(e + 1) % txq->entries;
  
#line 2985 
  txq->available += (unsigned int)descriptors_used;
  
#line 2986 
  priv->txq_stat.value = (int)txq->available;
  
#line 2986 
  if (priv->txq_stat.value > priv->txq_stat.hi) 
#line 2986 
                                                priv->txq_stat.hi = priv->txq_stat.value; else ;
  
#line 2986 
  if (priv->txq_stat.value < priv->txq_stat.lo) 
#line 2986 
                                                priv->txq_stat.lo = priv->txq_stat.value; else ;
  
#line 2988 
  if ((ipw2100_debug_level & 8388608U) != 0U) {
    int tmp_12;
    int tmp_11;
    
#line 2988 
    tmp_11 = preempt_count();
    
#line 2988 
    if (((unsigned long)tmp_11 & 2096896UL) != 0UL) 
#line 2988 
                                                    tmp_12 = 73; else 
                                                                   
#line 2988 
                                                                   tmp_12 = 85;
    
#line 2988 
    printk("\001",tmp_12,"__ipw2100_tx_process");
    
#line 2988 
    printk("packet latency (send to process)  %ld jiffies\n",jiffies - (unsigned long)packet->jiffy_start);
  }
  else ;
  
#line 2991 
  tmp_13 = list_empty((struct list_head const *)(& priv->fw_pend_list));
  
#line 2991 
  __retres = tmp_13 == 0;
  return_label: 
#line 2991 
                return __retres;
}


#line 2994  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
__inline static void __ipw2100_tx_complete(struct ipw2100_priv *priv)
{
  int tmp;
  
#line 2996 
  int i = 0;
  
#line 2998 
  goto ldv_61543;
  ldv_61542: 
#line 2999 
  ;
  
#line 2999 
  i += 1;
  ldv_61543: 
#line 3000 
  ;
  
#line 2998 
  tmp = __ipw2100_tx_process(priv);
  
#line 2998 
  if (tmp != 0) {
    
#line 2998 
    if (i <= 199) 
#line 3000 
                  goto ldv_61542; else 
#line 3003 
                                       goto ldv_61544;
  }
  else 
#line 3003 
       goto ldv_61544;
  ldv_61544: 
#line 3004 
  ;
  
#line 3001 
  if (i == 200) 
#line 3002 
                printk("\001",(char *)(& (priv->net_dev)->name),i); else ;
  
#line 3005 
  return;
}


#line 3008  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_tx_send_commands(struct ipw2100_priv *priv)
{
  struct list_head *element;
  struct ipw2100_tx_packet *packet;
  struct ipw2100_bd *tbd;
  struct ipw2100_tx_packet *tmp_1;
  int tmp_4;
  
#line 3012 
  struct ipw2100_bd_queue *txq = & priv->tx_queue;
  
#line 3014 
  int next = (int)txq->next;
  
#line 3016 
  goto ldv_61558;
  ldv_61557: 
#line 3017 
  ;
  
#line 3023 
  if (txq->available <= 3U) {
    
#line 3024 
    if ((ipw2100_debug_level & 8388608U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 3024 
      tmp = preempt_count();
      
#line 3024 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 3024 
                                                   tmp_0 = 73; else 
#line 3024 
                                                                    tmp_0 = 85;
      
#line 3024 
      printk("\001",tmp_0,"ipw2100_tx_send_commands");
      
#line 3024 
      printk("no room in tx_queue\n");
    }
    else ;
    
#line 3025 
    goto ldv_61554;
  }
  else ;
  
#line 3028 
  element = priv->msg_pend_list.next;
  
#line 3029 
  list_del(element);
  
#line 3030 
  priv->msg_pend_stat.value -= 1;
  
#line 3030 
  ;
  
#line 3030 
  if (priv->msg_pend_stat.value < priv->msg_pend_stat.lo) 
#line 3030 
                                                          priv->msg_pend_stat.lo = priv->msg_pend_stat.value; else ;
  {
    
#line 3032 
    struct list_head const *__mptr = (struct list_head const *)element;
    
#line 3032 
    tmp_1 = (struct ipw2100_tx_packet *)__mptr + 18446744073709551576U;
  }
  
#line 3032 
  packet = tmp_1;
  
#line 3034 
  if ((ipw2100_debug_level & 8388608U) != 0U) {
    int tmp_3;
    int tmp_2;
    
#line 3034 
    tmp_2 = preempt_count();
    
#line 3034 
    if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 3034 
                                                   tmp_3 = 73; else 
#line 3034 
                                                                    tmp_3 = 85;
    
#line 3034 
    printk("\001",tmp_3,"ipw2100_tx_send_commands");
    
#line 3034 
    printk("using TBD at virt=%p, phys=%04X\n",txq->drv + txq->next,(unsigned int)txq->nic + txq->next * 16U);
  }
  else ;
  
#line 3039 
  packet->index = (int)txq->next;
  
#line 3041 
  tbd = txq->drv + txq->next;
  
#line 3044 
  tbd->host_addr = (unsigned int)packet->info.c_struct.cmd_phys;
  
#line 3045 
  tbd->buf_length = 496U;
  
#line 3048 
  tbd->num_fragments = (unsigned char)1U;
  
#line 3049 
  tbd->status.info.field = (unsigned char)10U;
  
#line 3054 
  txq->next += 1U;
  
#line 3055 
  txq->next %= txq->entries;
  
#line 3056 
  txq->available -= 1U;
  
#line 3057 
  priv->txq_stat.value -= 1;
  
#line 3057 
  ;
  
#line 3057 
  if (priv->txq_stat.value < priv->txq_stat.lo) 
#line 3057 
                                                priv->txq_stat.lo = priv->txq_stat.value; else ;
  
#line 3059 
  list_add_tail(element,& priv->fw_pend_list);
  
#line 3060 
  priv->fw_pend_stat.value += 1;
  
#line 3060 
  ;
  
#line 3060 
  if (priv->fw_pend_stat.value > priv->fw_pend_stat.hi) 
#line 3060 
                                                        priv->fw_pend_stat.hi = priv->fw_pend_stat.value; else ;
  ldv_61558: 
#line 3061 
  ;
  
#line 3016 
  tmp_4 = list_empty((struct list_head const *)(& priv->msg_pend_list));
  
#line 3016 
  if (tmp_4 == 0) 
#line 3018 
                  goto ldv_61557; else 
#line 3021 
                                       goto ldv_61554;
  ldv_61554: 
#line 3022 
  ;
  
#line 3063 
  if (txq->next != (unsigned int)next) {
    
#line 3065 
    ldv_inline_asm();
    
#line 3067 
    write_register(priv->net_dev,3968U,txq->next);
  }
  else ;
  
#line 3071 
  return;
}


#line 3077  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_tx_send_data(struct ipw2100_priv *priv)
{
  struct list_head *element;
  struct ipw2100_tx_packet *packet;
  struct ipw2100_bd *tbd;
  struct ipw2100_data_header *ipw_hdr;
  struct libipw_hdr_3addr *hdr;
  struct ipw2100_tx_packet *tmp;
  dma_addr_t tmp_8;
  int tmp_11;
  
#line 3081 
  struct ipw2100_bd_queue *txq = & priv->tx_queue;
  
#line 3083 
  int next = (int)txq->next;
  
#line 3084 
  int i = 0;
  
#line 3088 
  goto ldv_61578;
  ldv_61577: 
#line 3089 
  ;
  
#line 3095 
  element = priv->tx_pend_list.next;
  {
    
#line 3096 
    struct list_head const *__mptr = (struct list_head const *)element;
    
#line 3096 
    tmp = (struct ipw2100_tx_packet *)__mptr + 18446744073709551576U;
  }
  
#line 3096 
  packet = tmp;
  
#line 3098 
  if ((long)((int)(packet->info.d_struct.txb)->nr_frags + 1 > 6) != 0L) {
    
#line 3102 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_1;
      int tmp_0;
      
#line 3102 
      tmp_0 = preempt_count();
      
#line 3102 
      if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 3102 
                                                     tmp_1 = 73; else 
                                                                   
#line 3102 
                                                                   tmp_1 = 85;
      
#line 3102 
      printk("\001",tmp_1,"ipw2100_tx_send_data");
      
#line 3102 
      printk("%s: Maximum BD threshold exceeded.  ",(char *)(& (priv->net_dev)->name));
    }
    else ;
  }
  else ;
  
#line 3107 
  if (txq->available <= (unsigned int)((int)(packet->info.d_struct.txb)->nr_frags + 3)) {
    
#line 3108 
    if ((ipw2100_debug_level & 8388608U) != 0U) {
      int tmp_3;
      int tmp_2;
      
#line 3108 
      tmp_2 = preempt_count();
      
#line 3108 
      if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 3108 
                                                     tmp_3 = 73; else 
                                                                   
#line 3108 
                                                                   tmp_3 = 85;
      
#line 3108 
      printk("\001",tmp_3,"ipw2100_tx_send_data");
      
#line 3108 
      printk("no room in tx_queue\n");
    }
    else ;
    
#line 3109 
    goto ldv_61573;
  }
  else ;
  
#line 3112 
  list_del(element);
  
#line 3113 
  priv->tx_pend_stat.value -= 1;
  
#line 3113 
  ;
  
#line 3113 
  if (priv->tx_pend_stat.value < priv->tx_pend_stat.lo) 
#line 3113 
                                                        priv->tx_pend_stat.lo = priv->tx_pend_stat.value; else ;
  
#line 3115 
  tbd = txq->drv + txq->next;
  
#line 3117 
  packet->index = (int)txq->next;
  
#line 3119 
  ipw_hdr = packet->info.d_struct.data;
  
#line 3120 
  hdr = (struct libipw_hdr_3addr *)((packet->info.d_struct.txb)->fragments[0])->data;
  
#line 3123 
  if ((priv->ieee)->iw_mode == 2) {
    
#line 3126 
    memcpy((void *)(& ipw_hdr->src_addr),(void const *)(& hdr->addr2),6UL);
    
#line 3127 
    memcpy((void *)(& ipw_hdr->dst_addr),(void const *)(& hdr->addr3),6UL);
  }
  else 
    
#line 3128 
    if ((priv->ieee)->iw_mode == 1) {
      
#line 3131 
      memcpy((void *)(& ipw_hdr->src_addr),(void const *)(& hdr->addr2),6UL);
      
#line 3132 
      memcpy((void *)(& ipw_hdr->dst_addr),(void const *)(& hdr->addr1),6UL);
    }
    else ;
  
#line 3135 
  ipw_hdr->host_command_reg = 33U;
  
#line 3136 
  ipw_hdr->host_command_reg1 = 0U;
  
#line 3139 
  ipw_hdr->needs_encryption = (unsigned char)0U;
  
#line 3140 
  ipw_hdr->encrypted = (packet->info.d_struct.txb)->encrypted;
  
#line 3141 
  if ((unsigned int)(packet->info.d_struct.txb)->nr_frags > 1U) 
#line 3142 
                                                                ipw_hdr->fragment_size = (unsigned short)((unsigned int)(packet->info.d_struct.txb)->frag_size + 65512U); else 
                                                                    
#line 3146 
                                                                    ipw_hdr->fragment_size = (unsigned short)0U;
  
#line 3148 
  tbd->host_addr = (unsigned int)packet->info.d_struct.data_phys;
  
#line 3149 
  tbd->buf_length = 52U;
  
#line 3150 
  tbd->num_fragments = (unsigned char)((unsigned int)(packet->info.d_struct.txb)->nr_frags + 1U);
  
#line 3151 
  tbd->status.info.field = (unsigned char)1U;
  
#line 3154 
  txq->next += 1U;
  
#line 3155 
  txq->next %= txq->entries;
  
#line 3157 
  if ((ipw2100_debug_level & 8388608U) != 0U) {
    int tmp_5;
    int tmp_4;
    
#line 3157 
    tmp_4 = preempt_count();
    
#line 3157 
    if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
#line 3157 
                                                   tmp_5 = 73; else 
#line 3157 
                                                                    tmp_5 = 85;
    
#line 3157 
    printk("\001",tmp_5,"ipw2100_tx_send_data");
    
#line 3157 
    printk("data header tbd TX%d P=%08x L=%d\n",packet->index,tbd->host_addr,tbd->buf_length);
  }
  else ;
  
#line 3160 
  if ((unsigned int)(packet->info.d_struct.txb)->nr_frags > 1U) {
    
#line 3161 
    if ((ipw2100_debug_level & 2097152U) != 0U) {
      int tmp_7;
      int tmp_6;
      
#line 3161 
      tmp_6 = preempt_count();
      
#line 3161 
      if (((unsigned long)tmp_6 & 2096896UL) != 0UL) 
#line 3161 
                                                     tmp_7 = 73; else 
                                                                   
#line 3161 
                                                                   tmp_7 = 85;
      
#line 3161 
      printk("\001",tmp_7,"ipw2100_tx_send_data");
      
#line 3161 
      printk("fragment Tx: %d frames\n",(int)(packet->info.d_struct.txb)->nr_frags);
    }
    else ;
  }
  else ;
  
#line 3165 
  i = 0;
  
#line 3165 
  goto ldv_61575;
  ldv_61574: 
#line 3166 
  ;
  
#line 3166 
  tbd = txq->drv + txq->next;
  
#line 3167 
  if ((int)(packet->info.d_struct.txb)->nr_frags + -1 == i) 
#line 3168 
                                                            tbd->status.info.field = (unsigned char)8U; else 
                                                                    
#line 3172 
                                                                    tbd->status.info.field = (unsigned char)1U;
  
#line 3176 
  tbd->buf_length = ((packet->info.d_struct.txb)->fragments[i])->len + 4294967272U;
  
#line 3179 
  tmp_8 = pci_map_single(priv->pci_dev,(void *)(((packet->info.d_struct.txb)->fragments[i])->data + 24U),(unsigned long)tbd->buf_length,1);
  
#line 3179 
  tbd->host_addr = (unsigned int)tmp_8;
  
#line 3187 
  if ((ipw2100_debug_level & 8388608U) != 0U) {
    int tmp_10;
    int tmp_9;
    
#line 3187 
    tmp_9 = preempt_count();
    
#line 3187 
    if (((unsigned long)tmp_9 & 2096896UL) != 0UL) 
#line 3187 
                                                   tmp_10 = 73; else 
                                                                  
#line 3187 
                                                                  tmp_10 = 85;
    
#line 3187 
    printk("\001",tmp_10,"ipw2100_tx_send_data");
    
#line 3187 
    printk("data frag tbd TX%d P=%08x L=%d\n",txq->next,tbd->host_addr,tbd->buf_length);
  }
  else ;
  
#line 3191 
  pci_dma_sync_single_for_device(priv->pci_dev,(unsigned long long)tbd->host_addr,(unsigned long)tbd->buf_length,1);
  
#line 3196 
  txq->next += 1U;
  
#line 3197 
  txq->next %= txq->entries;
  
#line 3165 
  i += 1;
  ldv_61575: 
#line 3166 
  ;
  
#line 3165 
  if ((int)(packet->info.d_struct.txb)->nr_frags > i) 
#line 3167 
                                                      goto ldv_61574; else 
                                                                    
#line 3170 
                                                                    goto ldv_61576;
  ldv_61576: 
#line 3171 
  ;
  
#line 3200 
  txq->available = (txq->available - (unsigned int)(packet->info.d_struct.txb)->nr_frags) - 1U;
  
#line 3201 
  priv->txq_stat.value = (int)txq->available;
  
#line 3201 
  if (priv->txq_stat.value > priv->txq_stat.hi) 
#line 3201 
                                                priv->txq_stat.hi = priv->txq_stat.value; else ;
  
#line 3201 
  if (priv->txq_stat.value < priv->txq_stat.lo) 
#line 3201 
                                                priv->txq_stat.lo = priv->txq_stat.value; else ;
  
#line 3203 
  list_add_tail(element,& priv->fw_pend_list);
  
#line 3204 
  priv->fw_pend_stat.value += 1;
  
#line 3204 
  ;
  
#line 3204 
  if (priv->fw_pend_stat.value > priv->fw_pend_stat.hi) 
#line 3204 
                                                        priv->fw_pend_stat.hi = priv->fw_pend_stat.value; else ;
  ldv_61578: 
#line 3205 
  ;
  
#line 3088 
  tmp_11 = list_empty((struct list_head const *)(& priv->tx_pend_list));
  
#line 3088 
  if (tmp_11 == 0) 
#line 3090 
                   goto ldv_61577; else 
#line 3093 
                                        goto ldv_61573;
  ldv_61573: 
#line 3094 
  ;
  
#line 3207 
  if (txq->next != (unsigned int)next) 
#line 3210 
                                       write_register(priv->net_dev,3968U,txq->next); else ;
  
#line 3213 
  return;
}


#line 3216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_irq_tasklet(struct ipw2100_priv *priv)
{
  unsigned long flags;
  u32 inta;
  u32 tmp;
  
#line 3218 
  struct net_device *dev = priv->net_dev;
  
#line 3222 
  ldv___ldv_spin_lock_98(& priv->low_lock);
  
#line 3223 
  ipw2100_disable_interrupts(priv);
  
#line 3225 
  read_register(dev,8U,& inta);
  
#line 3227 
  if ((ipw2100_debug_level & 33554432U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 3227 
    tmp_0 = preempt_count();
    
#line 3227 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 3227 
                                                   tmp_1 = 73; else 
#line 3227 
                                                                    tmp_1 = 85;
    
#line 3227 
    printk("\001",tmp_1,"ipw2100_irq_tasklet");
    
#line 3227 
    printk("enter - INTA: 0x%08lX\n",(unsigned long)inta & 3238068243UL);
  }
  else ;
  
#line 3230 
  priv->in_isr += 1;
  
#line 3231 
  priv->interrupts += 1U;
  
#line 3236 
  if ((ipw2100_debug_level & 33554432U) != 0U) {
    int tmp_3;
    int tmp_2;
    
#line 3236 
    tmp_2 = preempt_count();
    
#line 3236 
    if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 3236 
                                                   tmp_3 = 73; else 
#line 3236 
                                                                    tmp_3 = 85;
    
#line 3236 
    printk("\001",tmp_3,"ipw2100_irq_tasklet");
    
#line 3236 
    printk("INTA: 0x%08lX\n",(unsigned long)inta & 3238068243UL);
  }
  else ;
  
#line 3239 
  if ((inta & 1073741824U) != 0U) {
    
#line 3240 
    printk("\001");
    
#line 3242 
    priv->inta_other += 1;
    
#line 3243 
    write_register(dev,8U,1073741824U);
    
#line 3245 
    read_nic_dword(dev,174064U,& priv->fatal_error);
    
#line 3246 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_5;
      int tmp_4;
      
#line 3246 
      tmp_4 = preempt_count();
      
#line 3246 
      if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
#line 3246 
                                                     tmp_5 = 73; else 
                                                                   
#line 3246 
                                                                   tmp_5 = 85;
      
#line 3246 
      printk("\001",tmp_5,"ipw2100_irq_tasklet");
      
#line 3246 
      printk("%s: Fatal error value: 0x%08X\n",(char *)(& (priv->net_dev)->name),priv->fatal_error);
    }
    else ;
    
#line 3249 
    read_nic_dword(dev,priv->fatal_error & 262143U,& tmp);
    
#line 3250 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_7;
      int tmp_6;
      
#line 3250 
      tmp_6 = preempt_count();
      
#line 3250 
      if (((unsigned long)tmp_6 & 2096896UL) != 0UL) 
#line 3250 
                                                     tmp_7 = 73; else 
                                                                   
#line 3250 
                                                                   tmp_7 = 85;
      
#line 3250 
      printk("\001",tmp_7,"ipw2100_irq_tasklet");
      
#line 3250 
      printk("%s: Fatal error address value: 0x%08X\n",(char *)(& (priv->net_dev)->name),tmp);
    }
    else ;
    
#line 3254 
    schedule_reset(priv);
  }
  else ;
  
#line 3257 
  if (inta < (u32)0) {
    
#line 3258 
    printk("\001");
    
#line 3260 
    priv->inta_other += 1;
    
#line 3261 
    write_register(dev,8U,2147483648U);
  }
  else ;
  
#line 3264 
  if ((inta & 2U) != 0U) {
    
#line 3265 
    if ((ipw2100_debug_level & 33554432U) != 0U) {
      int tmp_9;
      int tmp_8;
      
#line 3265 
      tmp_8 = preempt_count();
      
#line 3265 
      if (((unsigned long)tmp_8 & 2096896UL) != 0UL) 
#line 3265 
                                                     tmp_9 = 73; else 
                                                                   
#line 3265 
                                                                   tmp_9 = 85;
      
#line 3265 
      printk("\001",tmp_9,"ipw2100_irq_tasklet");
      
#line 3265 
      printk("RX interrupt\n");
    }
    else ;
    
#line 3267 
    priv->rx_interrupts += 1;
    
#line 3269 
    write_register(dev,8U,2U);
    
#line 3271 
    __ipw2100_rx_process(priv);
    
#line 3272 
    __ipw2100_tx_complete(priv);
  }
  else ;
  
#line 3275 
  if ((inta & 1U) != 0U) {
    
#line 3276 
    if ((ipw2100_debug_level & 33554432U) != 0U) {
      int tmp_11;
      int tmp_10;
      
#line 3276 
      tmp_10 = preempt_count();
      
#line 3276 
      if (((unsigned long)tmp_10 & 2096896UL) != 0UL) 
#line 3276 
                                                      tmp_11 = 73; else 
                                                                    
#line 3276 
                                                                    tmp_11 = 85;
      
#line 3276 
      printk("\001",tmp_11,"ipw2100_irq_tasklet");
      
#line 3276 
      printk("TX interrupt\n");
    }
    else ;
    
#line 3278 
    priv->tx_interrupts += 1;
    
#line 3280 
    write_register(dev,8U,1U);
    
#line 3282 
    __ipw2100_tx_complete(priv);
    
#line 3283 
    ipw2100_tx_send_commands(priv);
    
#line 3284 
    ipw2100_tx_send_data(priv);
  }
  else ;
  
#line 3287 
  if ((inta & 4U) != 0U) {
    
#line 3288 
    if ((ipw2100_debug_level & 33554432U) != 0U) {
      int tmp_13;
      int tmp_12;
      
#line 3288 
      tmp_12 = preempt_count();
      
#line 3288 
      if (((unsigned long)tmp_12 & 2096896UL) != 0UL) 
#line 3288 
                                                      tmp_13 = 73; else 
                                                                    
#line 3288 
                                                                    tmp_13 = 85;
      
#line 3288 
      printk("\001",tmp_13,"ipw2100_irq_tasklet");
      
#line 3288 
      printk("TX complete\n");
    }
    else ;
    
#line 3289 
    priv->inta_other += 1;
    
#line 3290 
    write_register(dev,8U,4U);
    
#line 3292 
    __ipw2100_tx_complete(priv);
  }
  else ;
  
#line 3295 
  if ((inta & 8U) != 0U) {
    
#line 3297 
    priv->inta_other += 1;
    
#line 3298 
    write_register(dev,8U,8U);
  }
  else ;
  
#line 3301 
  if ((inta & 16777216U) != 0U) {
    
#line 3302 
    if ((ipw2100_debug_level & 33554432U) != 0U) {
      int tmp_15;
      int tmp_14;
      
#line 3302 
      tmp_14 = preempt_count();
      
#line 3302 
      if (((unsigned long)tmp_14 & 2096896UL) != 0UL) 
#line 3302 
                                                      tmp_15 = 73; else 
                                                                    
#line 3302 
                                                                    tmp_15 = 85;
      
#line 3302 
      printk("\001",tmp_15,"ipw2100_irq_tasklet");
      
#line 3302 
      printk("FW init done interrupt\n");
    }
    else ;
    
#line 3303 
    priv->inta_other += 1;
    
#line 3305 
    read_register(dev,8U,& tmp);
    
#line 3306 
    if ((tmp & 3221225472U) != 0U) 
#line 3308 
                                   write_register(dev,8U,3221225472U); else ;
    
#line 3313 
    write_register(dev,8U,16777216U);
  }
  else ;
  
#line 3316 
  if ((inta & 16U) != 0U) {
    
#line 3317 
    if ((ipw2100_debug_level & 33554432U) != 0U) {
      int tmp_17;
      int tmp_16;
      
#line 3317 
      tmp_16 = preempt_count();
      
#line 3317 
      if (((unsigned long)tmp_16 & 2096896UL) != 0UL) 
#line 3317 
                                                      tmp_17 = 73; else 
                                                                    
#line 3317 
                                                                    tmp_17 = 85;
      
#line 3317 
      printk("\001",tmp_17,"ipw2100_irq_tasklet");
      
#line 3317 
      printk("Status change interrupt\n");
    }
    else ;
    
#line 3318 
    priv->inta_other += 1;
    
#line 3319 
    write_register(dev,8U,16U);
  }
  else ;
  
#line 3322 
  if ((inta & 65536U) != 0U) {
    
#line 3323 
    if ((ipw2100_debug_level & 33554432U) != 0U) {
      int tmp_19;
      int tmp_18;
      
#line 3323 
      tmp_18 = preempt_count();
      
#line 3323 
      if (((unsigned long)tmp_18 & 2096896UL) != 0UL) 
#line 3323 
                                                      tmp_19 = 73; else 
                                                                    
#line 3323 
                                                                    tmp_19 = 85;
      
#line 3323 
      printk("\001",tmp_19,"ipw2100_irq_tasklet");
      
#line 3323 
      printk("slave host mode interrupt\n");
    }
    else ;
    
#line 3324 
    priv->inta_other += 1;
    
#line 3325 
    write_register(dev,8U,65536U);
  }
  else ;
  
#line 3329 
  priv->in_isr -= 1;
  
#line 3330 
  ipw2100_enable_interrupts(priv);
  
#line 3332 
  ldv_spin_unlock_irqrestore_99(& priv->low_lock,flags);
  
#line 3334 
  if ((ipw2100_debug_level & 33554432U) != 0U) {
    int tmp_21;
    int tmp_20;
    
#line 3334 
    tmp_20 = preempt_count();
    
#line 3334 
    if (((unsigned long)tmp_20 & 2096896UL) != 0UL) 
#line 3334 
                                                    tmp_21 = 73; else 
                                                                   
#line 3334 
                                                                   tmp_21 = 85;
    
#line 3334 
    printk("\001",tmp_21,"ipw2100_irq_tasklet");
    
#line 3334 
    printk("exit\n");
  }
  else ;
  
#line 3336 
  return;
}


#line 3337  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static irqreturn_t ipw2100_interrupt(int irq, void *data)
{
  irqreturn_t __retres;
  u32 inta;
  u32 inta_mask;
  
#line 3339 
  struct ipw2100_priv *priv = (struct ipw2100_priv *)data;
  
#line 3342 
  if (data == (void *)0) {
    
#line 3343 
    __retres = IRQ_NONE;
    
#line 3343 
    goto return_label;
  }
  else ;
  
#line 3345 
  ldv_spin_lock_100(& priv->low_lock);
  
#line 3351 
  if ((priv->status & 2048UL) == 0UL) 
#line 3353 
                                      goto none; else ;
  
#line 3356 
  read_register(priv->net_dev,12U,& inta_mask);
  
#line 3357 
  read_register(priv->net_dev,8U,& inta);
  
#line 3359 
  if (inta == 4294967295U) {
    
#line 3361 
    printk("\001");
    
#line 3362 
    goto none;
  }
  else ;
  
#line 3365 
  inta &= 3238068243U;
  
#line 3367 
  if ((inta & inta_mask) == 0U) 
#line 3369 
                                goto none; else ;
  
#line 3376 
  ipw2100_disable_interrupts(priv);
  
#line 3378 
  ldv_tasklet_schedule_101(& priv->irq_tasklet);
  
#line 3379 
  ldv_spin_unlock_102(& priv->low_lock);
  
#line 3381 
  __retres = IRQ_HANDLED;
  
#line 3381 
  goto return_label;
  none: 
#line 3382 
  ;
  
#line 3383 
  ldv_spin_unlock_103(& priv->low_lock);
  
#line 3384 
  __retres = IRQ_NONE;
  return_label: 
#line 3384 
                return __retres;
}


#line 3387  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static netdev_tx_t ipw2100_tx(struct libipw_txb *txb, struct net_device *dev, int pri)
{
  netdev_tx_t __retres;
  struct list_head *element;
  struct ipw2100_tx_packet *packet;
  unsigned long flags;
  int tmp_2;
  struct ipw2100_tx_packet *tmp_3;
  
#line 3390 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 3395 
  ldv___ldv_spin_lock_104(& priv->low_lock);
  
#line 3397 
  if ((priv->status & 1024UL) == 0UL) {
    
#line 3398 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_1;
      int tmp_0;
      
#line 3398 
      tmp_0 = preempt_count();
      
#line 3398 
      if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 3398 
                                                     tmp_1 = 73; else 
                                                                   
#line 3398 
                                                                   tmp_1 = 85;
      
#line 3398 
      printk("\001",tmp_1,"ipw2100_tx");
      
#line 3398 
      printk("Can not transmit when not connected.\n");
    }
    else ;
    
#line 3399 
    (priv->net_dev)->stats.tx_carrier_errors += 1UL;
    
#line 3400 
    netif_start_queue(dev);
    
#line 3401 
    goto fail_unlock;
  }
  else ;
  
#line 3404 
  tmp_2 = list_empty((struct list_head const *)(& priv->tx_free_list));
  
#line 3404 
  if (tmp_2 != 0) 
#line 3405 
                  goto fail_unlock; else ;
  
#line 3407 
  element = priv->tx_free_list.next;
  {
    
#line 3408 
    struct list_head const *__mptr = (struct list_head const *)element;
    
#line 3408 
    tmp_3 = (struct ipw2100_tx_packet *)__mptr + 18446744073709551576U;
  }
  
#line 3408 
  packet = tmp_3;
  
#line 3410 
  packet->info.d_struct.txb = txb;
  
#line 3412 
  if ((ipw2100_debug_level & 8388608U) != 0U) {
    int tmp_5;
    int tmp_4;
    
#line 3412 
    tmp_4 = preempt_count();
    
#line 3412 
    if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
#line 3412 
                                                   tmp_5 = 73; else 
#line 3412 
                                                                    tmp_5 = 85;
    
#line 3412 
    printk("\001",tmp_5,"ipw2100_tx");
    
#line 3412 
    printk("Sending fragment (%d bytes):\n",(txb->fragments[0])->len);
  }
  else ;
  
#line 3413 
  printk_buf(8388608,(u8 const *)(txb->fragments[0])->data,(txb->fragments[0])->len);
  
#line 3415 
  packet->jiffy_start = (int)jiffies;
  
#line 3417 
  list_del(element);
  
#line 3418 
  priv->tx_free_stat.value -= 1;
  
#line 3418 
  ;
  
#line 3418 
  if (priv->tx_free_stat.value < priv->tx_free_stat.lo) 
#line 3418 
                                                        priv->tx_free_stat.lo = priv->tx_free_stat.value; else ;
  
#line 3420 
  list_add_tail(element,& priv->tx_pend_list);
  
#line 3421 
  priv->tx_pend_stat.value += 1;
  
#line 3421 
  ;
  
#line 3421 
  if (priv->tx_pend_stat.value > priv->tx_pend_stat.hi) 
#line 3421 
                                                        priv->tx_pend_stat.hi = priv->tx_pend_stat.value; else ;
  
#line 3423 
  ipw2100_tx_send_data(priv);
  
#line 3425 
  ldv_spin_unlock_irqrestore_105(& priv->low_lock,flags);
  
#line 3426 
  __retres = NETDEV_TX_OK;
  
#line 3426 
  goto return_label;
  fail_unlock: 
#line 3428 
  ;
  
#line 3429 
  netif_start_queue(dev);
  
#line 3430 
  ldv_spin_unlock_irqrestore_106(& priv->low_lock,flags);
  
#line 3431 
  __retres = NETDEV_TX_BUSY;
  return_label: 
#line 3431 
                return __retres;
}


#line 3434  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_msg_allocate(struct ipw2100_priv *priv)
{
  int __retres;
  int i;
  int j;
  void *v;
  dma_addr_t p;
  
#line 3436 
  int err = -22;
  
#line 3441 
  priv->msg_buffers = (struct ipw2100_tx_packet *)kmalloc(2240UL,208U);
  
#line 3443 
  if (priv->msg_buffers == (struct ipw2100_tx_packet *)0) {
    
#line 3444 
    __retres = -12;
    
#line 3444 
    goto return_label;
  }
  else ;
  
#line 3446 
  i = 0;
  
#line 3446 
  goto ldv_61618;
  ldv_61617: 
#line 3447 
  ;
  
#line 3447 
  v = pci_zalloc_consistent(priv->pci_dev,496UL,& p);
  
#line 3450 
  if (v == (void *)0) {
    
#line 3451 
    printk("\001",(char *)(& (priv->net_dev)->name));
    
#line 3454 
    err = -12;
    
#line 3455 
    goto ldv_61616;
  }
  else ;
  
#line 3458 
  (priv->msg_buffers + i)->type = 51966;
  
#line 3459 
  (priv->msg_buffers + i)->info.c_struct.cmd = (struct ipw2100_cmd_header *)v;
  
#line 3461 
  (priv->msg_buffers + i)->info.c_struct.cmd_phys = p;
  
#line 3446 
  i += 1;
  ldv_61618: 
#line 3447 
  ;
  
#line 3446 
  if (i <= 39) 
#line 3448 
               goto ldv_61617; else 
#line 3451 
                                    goto ldv_61616;
  ldv_61616: 
#line 3452 
  ;
  
#line 3464 
  if (i == 40) {
    
#line 3465 
    __retres = 0;
    
#line 3465 
    goto return_label;
  }
  else ;
  
#line 3467 
  j = 0;
  
#line 3467 
  goto ldv_61620;
  ldv_61619: 
#line 3468 
  ;
  
#line 3468 
  pci_free_consistent(priv->pci_dev,496UL,(void *)(priv->msg_buffers + j)->info.c_struct.cmd,(priv->msg_buffers + j)->info.c_struct.cmd_phys);
  
#line 3467 
  j += 1;
  ldv_61620: 
#line 3468 
  ;
  
#line 3467 
  if (j < i) 
#line 3469 
             goto ldv_61619; else 
#line 3472 
                                  goto ldv_61621;
  ldv_61621: 
#line 3473 
  ;
  
#line 3475 
  kfree((void const *)priv->msg_buffers);
  
#line 3476 
  priv->msg_buffers = (struct ipw2100_tx_packet *)0;
  
#line 3478 
  __retres = err;
  return_label: 
#line 3478 
                return __retres;
}


#line 3481  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_msg_initialize(struct ipw2100_priv *priv)
{
  int __retres;
  int i;
  
#line 3485 
  INIT_LIST_HEAD(& priv->msg_free_list);
  
#line 3486 
  INIT_LIST_HEAD(& priv->msg_pend_list);
  
#line 3488 
  i = 0;
  
#line 3488 
  goto ldv_61627;
  ldv_61626: 
#line 3489 
  ;
  
#line 3489 
  list_add_tail(& (priv->msg_buffers + i)->list,& priv->msg_free_list);
  
#line 3488 
  i += 1;
  ldv_61627: 
#line 3489 
  ;
  
#line 3488 
  if (i <= 39) 
#line 3490 
               goto ldv_61626; else 
#line 3493 
                                    goto ldv_61628;
  ldv_61628: 
#line 3494 
  ;
  
#line 3490 
  priv->msg_free_stat.value = i;
  
#line 3490 
  if (priv->msg_free_stat.value > priv->msg_free_stat.hi) 
#line 3490 
                                                          priv->msg_free_stat.hi = priv->msg_free_stat.value; else ;
  
#line 3490 
  if (priv->msg_free_stat.value < priv->msg_free_stat.lo) 
#line 3490 
                                                          priv->msg_free_stat.lo = priv->msg_free_stat.value; else ;
  
#line 3492 
  __retres = 0;
  
#line 3492 
  return __retres;
}


#line 3495  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_msg_free(struct ipw2100_priv *priv)
{
  int i;
  
#line 3499 
  if (priv->msg_buffers == (struct ipw2100_tx_packet *)0) 
#line 3500 
                                                          goto return_label; else ;
  
#line 3502 
  i = 0;
  
#line 3502 
  goto ldv_61634;
  ldv_61633: 
#line 3503 
  ;
  
#line 3503 
  pci_free_consistent(priv->pci_dev,496UL,(void *)(priv->msg_buffers + i)->info.c_struct.cmd,(priv->msg_buffers + i)->info.c_struct.cmd_phys);
  
#line 3502 
  i += 1;
  ldv_61634: 
#line 3503 
  ;
  
#line 3502 
  if (i <= 39) 
#line 3504 
               goto ldv_61633; else 
#line 3507 
                                    goto ldv_61635;
  ldv_61635: 
#line 3508 
  ;
  
#line 3510 
  kfree((void const *)priv->msg_buffers);
  
#line 3511 
  priv->msg_buffers = (struct ipw2100_tx_packet *)0;
  return_label: 
#line 3512 
                return;
}


#line 3514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static ssize_t show_pci(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  struct pci_dev *tmp;
  int i;
  int j;
  u32 val;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  {
    
#line 3517 
    struct device const *__mptr = (struct device const *)d;
    
#line 3517 
    tmp = (struct pci_dev *)__mptr + 18446744073709551464U;
  }
  
#line 3517 
  struct pci_dev *pci_dev = tmp;
  
#line 3518 
  char *out = buf;
  
#line 3522 
  i = 0;
  
#line 3522 
  goto ldv_61652;
  ldv_61651: 
#line 3523 
  ;
  
#line 3523 
  tmp_0 = sprintf(out,"[%08X] ",i * 16);
  
#line 3523 
  out += tmp_0;
  
#line 3524 
  j = 0;
  
#line 3524 
  goto ldv_61649;
  ldv_61648: 
#line 3525 
  ;
  
#line 3525 
  pci_read_config_dword((struct pci_dev const *)pci_dev,i * 16 + j,& val);
  
#line 3526 
  tmp_1 = sprintf(out,"%08X ",val);
  
#line 3526 
  out += tmp_1;
  
#line 3524 
  j += 4;
  ldv_61649: 
#line 3525 
  ;
  
#line 3524 
  if (j <= 15) 
#line 3526 
               goto ldv_61648; else 
#line 3529 
                                    goto ldv_61650;
  ldv_61650: 
#line 3530 
  ;
  
#line 3528 
  tmp_2 = sprintf(out,"\n");
  
#line 3528 
  out += tmp_2;
  
#line 3522 
  i += 1;
  ldv_61652: 
#line 3523 
  ;
  
#line 3522 
  if (i <= 15) 
#line 3524 
               goto ldv_61651; else 
#line 3527 
                                    goto ldv_61653;
  ldv_61653: 
#line 3528 
  ;
  
#line 3531 
  __retres = (long)out - (long)buf;
  
#line 3531 
  return __retres;
}


#line 3534  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct device_attribute dev_attr_pci = {.attr = {.name = "pci", .mode = (unsigned short)292U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_pci, .store = (ssize_t (*)(struct device *, struct device_attribute *, char const *, size_t ))0};

#line 3536  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static ssize_t show_cfg(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_0;
  
#line 3539 
  struct ipw2100_priv *p = dev_get_drvdata((struct device const *)d);
  
#line 3540 
  tmp_0 = sprintf(buf,"0x%08x\n",(int)p->config);
  
#line 3540 
  __retres = (long)tmp_0;
  
#line 3540 
  return __retres;
}


#line 3543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct device_attribute dev_attr_cfg = {.attr = {.name = "cfg", .mode = (unsigned short)292U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_cfg, .store = (ssize_t (*)(struct device *, struct device_attribute *, char const *, size_t ))0};

#line 3545  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static ssize_t show_status(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_0;
  
#line 3548 
  struct ipw2100_priv *p = dev_get_drvdata((struct device const *)d);
  
#line 3549 
  tmp_0 = sprintf(buf,"0x%08x\n",(int)p->status);
  
#line 3549 
  __retres = (long)tmp_0;
  
#line 3549 
  return __retres;
}


#line 3552  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct device_attribute dev_attr_status = {.attr = {.name = "status", .mode = (unsigned short)292U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_status, .store = (ssize_t (*)(struct device *, struct device_attribute *, char const *, size_t ))0};

#line 3554  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static ssize_t show_capability(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_0;
  
#line 3557 
  struct ipw2100_priv *p = dev_get_drvdata((struct device const *)d);
  
#line 3558 
  tmp_0 = sprintf(buf,"0x%08x\n",(int)p->capability);
  
#line 3558 
  __retres = (long)tmp_0;
  
#line 3558 
  return __retres;
}


#line 3561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct device_attribute dev_attr_capability = {.attr = {.name = "capability", .mode = (unsigned short)292U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_capability, .store = (ssize_t (*)(struct device *, struct device_attribute *, char const *, size_t ))0};

#line 3567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct __anonstruct_hw_data_436 const hw_data[5U] = {{.addr = 36U, .name = "REG_GP_CNTRL"}, {.addr = 48U, .name = "REG_GPIO"}, {.addr = 8U, .name = "REG_INTA"}, {.addr = 12U, .name = "REG_INTA_MASK"}, {.addr = 32U, .name = "REG_RESET_REG"}};

#line 3577  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct __anonstruct_nic_data_437 const nic_data[3U] = {{.addr = 2228224U, .name = "IPW2100_CONTROL_REG", .size = 2UL}, {.addr = 2162708U, .name = "0x210014", .size = 1UL}, {.addr = 2162688U, .name = "0x210000", .size = 1UL}};

#line 3585  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct __anonstruct_ord_data_438 const ord_data[147U] = {{.index = (unsigned char)1U, .name = "STAT_TX_HOST_REQUESTS", .desc = "requested Host Tx\'s (MSDU)"}, {.index = (unsigned char)2U, .name = "STAT_TX_HOST_COMPLETE", .desc = "successful Host Tx\'s (MSDU)"}, {.index = (unsigned char)3U, .name = "STAT_TX_DIR_DATA", .desc = "successful Directed Tx\'s (MSDU)"}, {.index = (unsigned char)4U, .name = "STAT_TX_DIR_DATA1", .desc = "successful Directed Tx\'s (MSDU) @ 1MB"}, {.index = (unsigned char)5U, .name = "STAT_TX_DIR_DATA2", .desc = "successful Directed Tx\'s (MSDU) @ 2MB"}, {.index = (unsigned char)6U, .name = "STAT_TX_DIR_DATA5_5", .desc = "successful Directed Tx\'s (MSDU) @ 5_5MB"}, {.index = (unsigned char)7U, .name = "STAT_TX_DIR_DATA11", .desc = "successful Directed Tx\'s (MSDU) @ 11MB"}, {.index = (unsigned char)13U, .name = "STAT_TX_NODIR_DATA1", .desc = "successful Non_Directed Tx\'s (MSDU) @ 1MB"}, {.index = (unsigned char)14U, .name = "STAT_TX_NODIR_DATA2", .desc = "successful Non_Directed Tx\'s (MSDU) @ 2MB"}, {.index = (unsigned char)15U, .name = "STAT_TX_NODIR_DATA5_5", .desc = "successful Non_Directed Tx\'s (MSDU) @ 5.5MB"}, {.index = (unsigned char)16U, .name = "STAT_TX_NODIR_DATA11", .desc = "successful Non_Directed Tx\'s (MSDU) @ 11MB"}, {.index = (unsigned char)21U, .name = "STAT_NULL_DATA", .desc = "successful NULL data Tx\'s"}, {.index = (unsigned char)22U, .name = "STAT_TX_RTS", .desc = "successful Tx RTS"}, {.index = (unsigned char)23U, .name = "STAT_TX_CTS", .desc = "successful Tx CTS"}, {.index = (unsigned char)24U, .name = "STAT_TX_ACK", .desc = "successful Tx ACK"}, {.index = (unsigned char)25U, .name = "STAT_TX_ASSN", .desc = "successful Association Tx\'s"}, {.index = (unsigned char)26U, .name = "STAT_TX_ASSN_RESP", .desc = "successful Association response Tx\'s"}, {.index = (unsigned char)27U, .name = "STAT_TX_REASSN", .desc = "successful Reassociation Tx\'s"}, {.index = (unsigned char)28U, .name = "STAT_TX_REASSN_RESP", .desc = "successful Reassociation response Tx\'s"}, {.index = (unsigned char)29U, .name = "STAT_TX_PROBE", .desc = "probes successfully transmitted"}, {.index = (unsigned char)30U, .name = "STAT_TX_PROBE_RESP", .desc = "probe responses successfully transmitted"}, {.index = (unsigned char)31U, .name = "STAT_TX_BEACON", .desc = "tx beacon"}, {.index = (unsigned char)32U, .name = "STAT_TX_ATIM", .desc = "Tx ATIM"}, {.index = (unsigned char)33U, .name = "STAT_TX_DISASSN", .desc = "successful Disassociation TX"}, {.index = (unsigned char)34U, .name = "STAT_TX_AUTH", .desc = "successful Authentication Tx"}, {.index = (unsigned char)35U, .name = "STAT_TX_DEAUTH", .desc = "successful Deauthentication TX"}, {.index = (unsigned char)41U, .name = "STAT_TX_TOTAL_BYTES", .desc = "Total successful Tx data bytes"}, {.index = (unsigned char)42U, .name = "STAT_TX_RETRIES", .desc = "Tx retries"}, {.index = (unsigned char)43U, .name = "STAT_TX_RETRY1", .desc = "Tx retries at 1MBPS"}, {.index = (unsigned char)44U, .name = "STAT_TX_RETRY2", .desc = "Tx retries at 2MBPS"}, {.index = (unsigned char)45U, .name = "STAT_TX_RETRY5_5", .desc = "Tx retries at 5.5MBPS"}, {.index = (unsigned char)46U, .name = "STAT_TX_RETRY11", .desc = "Tx retries at 11MBPS"}, {.index = (unsigned char)51U, .name = "STAT_TX_FAILURES", .desc = "Tx Failures"}, {.index = (unsigned char)53U, .name = "STAT_TX_MAX_TRIES_IN_HOP", .desc = "times max tries in a hop failed"}, {.index = (unsigned char)56U, .name = "STAT_TX_DISASSN_FAIL", .desc = "times disassociation failed"}, {.index = (unsigned char)57U, .name = "STAT_TX_ERR_CTS", .desc = "missed/bad CTS frames"}, {.index = (unsigned char)59U, .name = "STAT_TX_ERR_ACK", .desc = "tx err due to acks"}, {.index = (unsigned char)61U, .name = "STAT_RX_HOST", .desc = "packets passed to host"}, {.index = (unsigned char)62U, .name = "STAT_RX_DIR_DATA", .desc = "directed packets"}, {.index = (unsigned char)63U, .name = "STAT_RX_DIR_DATA1", .desc = "directed packets at 1MB"}, {.index = (unsigned char)64U, .name = "STAT_RX_DIR_DATA2", .desc = "directed packets at 2MB"}, {.index = (unsigned char)65U, .name = "STAT_RX_DIR_DATA5_5", .desc = "directed packets at 5.5MB"}, {.index = (unsigned char)66U, .name = "STAT_RX_DIR_DATA11", .desc = "directed packets at 11MB"}, {.index = (unsigned char)71U, .name = "STAT_RX_NODIR_DATA", .desc = "nondirected packets"}, {.index = (unsigned char)72U, .name = "STAT_RX_NODIR_DATA1", .desc = "nondirected packets at 1MB"}, {.index = (unsigned char)73U, .name = "STAT_RX_NODIR_DATA2", .desc = "nondirected packets at 2MB"}, {.index = (unsigned char)74U, .name = "STAT_RX_NODIR_DATA5_5", .desc = "nondirected packets at 5.5MB"}, {.index = (unsigned char)75U, .name = "STAT_RX_NODIR_DATA11", .desc = "nondirected packets at 11MB"}, {.index = (unsigned char)80U, .name = "STAT_RX_NULL_DATA", .desc = "null data rx\'s"}, {.index = (unsigned char)82U, .name = "STAT_RX_RTS", .desc = "Rx RTS"}, {.index = (unsigned char)83U, .name = "STAT_RX_CTS", .desc = "Rx CTS"}, {.index = (unsigned char)84U, .name = "STAT_RX_ACK", .desc = "Rx ACK"}, {.index = (unsigned char)85U, .name = "STAT_RX_CFEND", .desc = "Rx CF End"}, {.index = (unsigned char)86U, .name = "STAT_RX_CFEND_ACK", .desc = "Rx CF End + CF Ack"}, {.index = (unsigned char)87U, .name = "STAT_RX_ASSN", .desc = "Association Rx\'s"}, {.index = (unsigned char)88U, .name = "STAT_RX_ASSN_RESP", .desc = "Association response Rx\'s"}, {.index = (unsigned char)89U, .name = "STAT_RX_REASSN", .desc = "Reassociation Rx\'s"}, {.index = (unsigned char)90U, .name = "STAT_RX_REASSN_RESP", .desc = "Reassociation response Rx\'s"}, {.index = (unsigned char)91U, .name = "STAT_RX_PROBE", .desc = "probe Rx\'s"}, {.index = (unsigned char)92U, .name = "STAT_RX_PROBE_RESP", .desc = "probe response Rx\'s"}, {.index = (unsigned char)93U, .name = "STAT_RX_BEACON", .desc = "Rx beacon"}, {.index = (unsigned char)94U, .name = "STAT_RX_ATIM", .desc = "Rx ATIM"}, {.index = (unsigned char)95U, .name = "STAT_RX_DISASSN", .desc = "disassociation Rx"}, {.index = (unsigned char)96U, .name = "STAT_RX_AUTH", .desc = "authentication Rx"}, {.index = (unsigned char)97U, .name = "STAT_RX_DEAUTH", .desc = "deauthentication Rx"}, {.index = (unsigned char)101U, .name = "STAT_RX_TOTAL_BYTES", .desc = "Total rx data bytes received"}, {.index = (unsigned char)102U, .name = "STAT_RX_ERR_CRC", .desc = "packets with Rx CRC error"}, {.index = (unsigned char)103U, .name = "STAT_RX_ERR_CRC1", .desc = "Rx CRC errors at 1MB"}, {.index = (unsigned char)104U, .name = "STAT_RX_ERR_CRC2", .desc = "Rx CRC errors at 2MB"}, {.index = (unsigned char)105U, .name = "STAT_RX_ERR_CRC5_5", .desc = "Rx CRC errors at 5.5MB"}, {.index = (unsigned char)106U, .name = "STAT_RX_ERR_CRC11", .desc = "Rx CRC errors at 11MB"}, {.index = (unsigned char)112U, .name = "STAT_RX_DUPLICATE1", .desc = "duplicate rx packets at 1MB"}, {.index = (unsigned char)113U, .name = "STAT_RX_DUPLICATE2", .desc = "duplicate rx packets at 2MB"}, {.index = (unsigned char)114U, .name = "STAT_RX_DUPLICATE5_5", .desc = "duplicate rx packets at 5.5MB"}, {.index = (unsigned char)115U, .name = "STAT_RX_DUPLICATE11", .desc = "duplicate rx packets at 11MB"}, {.index = (unsigned char)119U, .name = "STAT_RX_DUPLICATE", .desc = "duplicate rx packets"}, {.index = (unsigned char)120U, .name = "PERS_DB_LOCK", .desc = "locking fw permanent  db"}, {.index = (unsigned char)121U, .name = "PERS_DB_SIZE", .desc = "size of fw permanent  db"}, {.index = (unsigned char)122U, .name = "PERS_DB_ADDR", .desc = "address of fw permanent  db"}, {.index = (unsigned char)123U, .name = "STAT_RX_INVALID_PROTOCOL", .desc = "rx frames with invalid protocol"}, {.index = (unsigned char)124U, .name = "SYS_BOOT_TIME", .desc = "Boot time"}, {.index = (unsigned char)125U, .name = "STAT_RX_NO_BUFFER", .desc = "rx frames rejected due to no buffer"}, {.index = (unsigned char)128U, .name = "STAT_RX_MISSING_FRAG", .desc = "rx frames dropped due to missing fragment"}, {.index = (unsigned char)129U, .name = "STAT_RX_ORPHAN_FRAG", .desc = "rx frames dropped due to non-sequential fragment"}, {.index = (unsigned char)130U, .name = "STAT_RX_ORPHAN_FRAME", .desc = "rx frames dropped due to unmatched 1st frame"}, {.index = (unsigned char)131U, .name = "STAT_RX_FRAG_AGEOUT", .desc = "rx frames dropped due to uncompleted frame"}, {.index = (unsigned char)133U, .name = "STAT_RX_ICV_ERRORS", .desc = "ICV errors during decryption"}, {.index = (unsigned char)137U, .name = "STAT_PSP_SUSPENSION", .desc = "times adapter suspended"}, {.index = (unsigned char)138U, .name = "STAT_PSP_BCN_TIMEOUT", .desc = "beacon timeout"}, {.index = (unsigned char)139U, .name = "STAT_PSP_POLL_TIMEOUT", .desc = "poll response timeouts"}, {.index = (unsigned char)140U, .name = "STAT_PSP_NONDIR_TIMEOUT", .desc = "timeouts waiting for last {broad,multi}cast pkt"}, {.index = (unsigned char)141U, .name = "STAT_PSP_RX_DTIMS", .desc = "PSP DTIMs received"}, {.index = (unsigned char)142U, .name = "STAT_PSP_RX_TIMS", .desc = "PSP TIMs received"}, {.index = (unsigned char)143U, .name = "STAT_PSP_STATION_ID", .desc = "PSP Station ID"}, {.index = (unsigned char)147U, .name = "LAST_ASSN_TIME", .desc = "RTC time of last association"}, {.index = (unsigned char)148U, .name = "STAT_PERCENT_MISSED_BCNS", .desc = "current calculation of % missed beacons"}, {.index = (unsigned char)149U, .name = "STAT_PERCENT_RETRIES", .desc = "current calculation of % missed tx retries"}, {.index = (unsigned char)150U, .name = "ASSOCIATED_AP_PTR", .desc = "0 if not associated, else pointer to AP table entry"}, {.index = (unsigned char)151U, .name = "AVAILABLE_AP_CNT", .desc = "AP\'s decsribed in the AP table"}, {.index = (unsigned char)152U, .name = "AP_LIST_PTR", .desc = "Ptr to list of available APs"}, {.index = (unsigned char)153U, .name = "STAT_AP_ASSNS", .desc = "associations"}, {.index = (unsigned char)154U, .name = "STAT_ASSN_FAIL", .desc = "association failures"}, {.index = (unsigned char)155U, .name = "STAT_ASSN_RESP_FAIL", .desc = "failures due to response fail"}, {.index = (unsigned char)156U, .name = "STAT_FULL_SCANS", .desc = "full scans"}, {.index = (unsigned char)157U, .name = "CARD_DISABLED", .desc = "Card Disabled"}, {.index = (unsigned char)158U, .name = "STAT_ROAM_INHIBIT", .desc = "times roaming was inhibited due to activity"}, {.index = (unsigned char)160U, .name = "RSSI_AT_ASSN", .desc = "RSSI of associated AP at time of association"}, {.index = (unsigned char)161U, .name = "STAT_ASSN_CAUSE1", .desc = "reassociation: no probe response or TX on hop"}, {.index = (unsigned char)162U, .name = "STAT_ASSN_CAUSE2", .desc = "reassociation: poor tx/rx quality"}, {.index = (unsigned char)163U, .name = "STAT_ASSN_CAUSE3", .desc = "reassociation: tx/rx quality (excessive AP load"}, {.index = (unsigned char)164U, .name = "STAT_ASSN_CAUSE4", .desc = "reassociation: AP RSSI level"}, {.index = (unsigned char)165U, .name = "STAT_ASSN_CAUSE5", .desc = "reassociations due to load leveling"}, {.index = (unsigned char)170U, .name = "STAT_AUTH_FAIL", .desc = "times authentication failed"}, {.index = (unsigned char)171U, .name = "STAT_AUTH_RESP_FAIL", .desc = "times authentication response failed"}, {.index = (unsigned char)172U, .name = "STATION_TABLE_CNT", .desc = "entries in association table"}, {.index = (unsigned char)173U, .name = "RSSI_AVG_CURR", .desc = "Current avg RSSI"}, {.index = (unsigned char)177U, .name = "POWER_MGMT_MODE", .desc = "Power mode - 0=CAM, 1=PSP"}, {.index = (unsigned char)179U, .name = "COUNTRY_CODE", .desc = "IEEE country code as recv\'d from beacon"}, {.index = (unsigned char)180U, .name = "COUNTRY_CHANNELS", .desc = "channels supported by country"}, {.index = (unsigned char)181U, .name = "RESET_CNT", .desc = "adapter resets (warm)"}, {.index = (unsigned char)182U, .name = "BEACON_INTERVAL", .desc = "Beacon interval"}, {.index = (unsigned char)185U, .name = "ANTENNA_DIVERSITY", .desc = "TRUE if antenna diversity is disabled"}, {.index = (unsigned char)188U, .name = "DTIM_PERIOD", .desc = "beacon intervals between DTIMs"}, {.index = (unsigned char)189U, .name = "OUR_FREQ", .desc = "current radio freq lower digits - channel ID"}, {.index = (unsigned char)190U, .name = "RTC_TIME", .desc = "current RTC time"}, {.index = (unsigned char)191U, .name = "PORT_TYPE", .desc = "operating mode"}, {.index = (unsigned char)192U, .name = "CURRENT_TX_RATE", .desc = "current tx rate"}, {.index = (unsigned char)193U, .name = "SUPPORTED_RATES", .desc = "supported tx rates"}, {.index = (unsigned char)194U, .name = "ATIM_WINDOW", .desc = "current ATIM Window"}, {.index = (unsigned char)195U, .name = "BASIC_RATES", .desc = "basic tx rates"}, {.index = (unsigned char)196U, .name = "NIC_HIGHEST_RATE", .desc = "NIC highest tx rate"}, {.index = (unsigned char)197U, .name = "AP_HIGHEST_RATE", .desc = "AP highest tx rate"}, {.index = (unsigned char)198U, .name = "CAPABILITIES", .desc = "Management frame capability field"}, {.index = (unsigned char)199U, .name = "AUTH_TYPE", .desc = "Type of authentication"}, {.index = (unsigned char)200U, .name = "RADIO_TYPE", .desc = "Adapter card platform type"}, {.index = (unsigned char)201U, .name = "RTS_THRESHOLD", .desc = "Min packet length for RTS handshaking"}, {.index = (unsigned char)202U, .name = "INT_MODE", .desc = "International mode"}, {.index = (unsigned char)203U, .name = "FRAGMENTATION_THRESHOLD", .desc = "protocol frag threshold"}, {.index = (unsigned char)204U, .name = "EEPROM_SRAM_DB_BLOCK_START_ADDRESS", .desc = "EEPROM offset in SRAM"}, {.index = (unsigned char)205U, .name = "EEPROM_SRAM_DB_BLOCK_SIZE", .desc = "EEPROM size in SRAM"}, {.index = (unsigned char)206U, .name = "EEPROM_SKU_CAPABILITY", .desc = "EEPROM SKU Capability"}, {.index = (unsigned char)207U, .name = "EEPROM_IBSS_11B_CHANNELS", .desc = "EEPROM IBSS 11b channel set"}, {.index = (unsigned char)209U, .name = "MAC_VERSION", .desc = "MAC Version"}, {.index = (unsigned char)210U, .name = "MAC_REVISION", .desc = "MAC Revision"}, {.index = (unsigned char)211U, .name = "RADIO_VERSION", .desc = "Radio Version"}, {.index = (unsigned char)212U, .name = "NIC_MANF_DATE_TIME", .desc = "MANF Date/Time STAMP"}, {.index = (unsigned char)213U, .name = "UCODE_VERSION", .desc = "Ucode Version"}};

#line 3798  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static ssize_t show_registers(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int i;
  int tmp_0;
  int tmp_1;
  
#line 3802 
  struct ipw2100_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 3803 
  struct net_device *dev = priv->net_dev;
  
#line 3804 
  char *out = buf;
  
#line 3805 
  u32 val = 0U;
  
#line 3807 
  tmp_0 = sprintf(out,"%30s [Address ] : Hex\n",(char *)"Register");
  
#line 3807 
  out += tmp_0;
  
#line 3809 
  i = 0;
  
#line 3809 
  goto ldv_61776;
  ldv_61775: 
#line 3810 
  ;
  
#line 3810 
  read_register(dev,hw_data[i].addr,& val);
  
#line 3811 
  tmp_1 = sprintf(out,"%30s [%08X] : %08X\n",hw_data[i].name,hw_data[i].addr,val);
  
#line 3812 
  out += tmp_1;
  
#line 3809 
  i += 1;
  ldv_61776: 
#line 3810 
  ;
  
#line 3809 
  if ((unsigned int)i <= 4U) 
#line 3811 
                             goto ldv_61775; else 
#line 3814 
                                                  goto ldv_61777;
  ldv_61777: 
#line 3815 
  ;
  
#line 3815 
  __retres = (long)out - (long)buf;
  
#line 3815 
  return __retres;
}


#line 3818  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct device_attribute dev_attr_registers = {.attr = {.name = "registers", .mode = (unsigned short)292U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_registers, .store = (ssize_t (*)(struct device *, struct device_attribute *, char const *, size_t ))0};

#line 3820  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static ssize_t show_hardware(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int i;
  int tmp_0;
  
#line 3823 
  struct ipw2100_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 3824 
  struct net_device *dev = priv->net_dev;
  
#line 3825 
  char *out = buf;
  
#line 3828 
  tmp_0 = sprintf(out,"%30s [Address ] : Hex\n",(char *)"NIC entry");
  
#line 3828 
  out += tmp_0;
  
#line 3830 
  i = 0;
  
#line 3830 
  goto ldv_61817;
  ldv_61816: 
#line 3831 
  ;
  {
    u8 tmp8;
    u16 tmp16;
    u32 tmp32;
    
#line 3835 
    switch (nic_data[i].size) {
      int tmp_1;
      int tmp_2;
      int tmp_3;
      case (size_t)1: 
#line 3836 
      ;
      
#line 3837 
      read_nic_byte(dev,nic_data[i].addr,& tmp8);
      
#line 3838 
      tmp_1 = sprintf(out,"%30s [%08X] : %02X\n",nic_data[i].name,nic_data[i].addr,(int)tmp8);
      
#line 3840 
      out += tmp_1;
      
#line 3841 
      goto ldv_61813;
      case (size_t)2: 
#line 3842 
      ;
      
#line 3843 
      read_nic_word(dev,nic_data[i].addr,& tmp16);
      
#line 3844 
      tmp_2 = sprintf(out,"%30s [%08X] : %04X\n",nic_data[i].name,nic_data[i].addr,(int)tmp16);
      
#line 3846 
      out += tmp_2;
      
#line 3847 
      goto ldv_61813;
      case (size_t)4: 
#line 3848 
      ;
      
#line 3849 
      read_nic_dword(dev,nic_data[i].addr,& tmp32);
      
#line 3850 
      tmp_3 = sprintf(out,"%30s [%08X] : %08X\n",nic_data[i].name,nic_data[i].addr,tmp32);
      
#line 3852 
      out += tmp_3;
      
#line 3853 
      goto ldv_61813;
    }
    ldv_61813: 
#line 3855 
    ;
  }
  
#line 3830 
  i += 1;
  ldv_61817: 
#line 3831 
  ;
  
#line 3830 
  if ((unsigned int)i <= 2U) 
#line 3832 
                             goto ldv_61816; else 
#line 3835 
                                                  goto ldv_61818;
  ldv_61818: 
#line 3836 
  ;
  
#line 3856 
  __retres = (long)out - (long)buf;
  
#line 3856 
  return __retres;
}


#line 3859  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct device_attribute dev_attr_hardware = {.attr = {.name = "hardware", .mode = (unsigned short)292U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_hardware, .store = (ssize_t (*)(struct device *, struct device_attribute *, char const *, size_t ))0};

#line 3861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static ssize_t show_memory(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  u32 buffer[4U];
  int i;
  char line[81U];
  
#line 3864 
  struct ipw2100_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 3865 
  struct net_device *dev = priv->net_dev;
  
#line 3866 
  unsigned long loop = 0UL;
  
#line 3867 
  int len = 0;
  
#line 3872 
  if (loop > 196607UL) 
#line 3873 
                       loop = 0UL; else ;
  
#line 3876 
  goto ldv_61857;
  ldv_61856: 
#line 3877 
  ;
  
#line 3878 
  if (priv->snapshot[0] != (u8 *)0U) {
    
#line 3879 
    i = 0;
    
#line 3879 
    goto ldv_61851;
    ldv_61850: 
#line 3880 
    ;
    
#line 3880 
    buffer[i] = *((u32 *)(priv->snapshot[(((unsigned long)(i * 4) + loop) >> 12) & 255UL] + (((unsigned long)(i * 4) + loop) & (unsigned long)4095U)));
    
#line 3879 
    i += 1;
    ldv_61851: 
#line 3880 
    ;
    
#line 3879 
    if (i <= 3) 
#line 3881 
                goto ldv_61850; else 
#line 3884 
                                     goto ldv_61852;
    ldv_61852: 
#line 3885 
    ;
  }
  else {
    
#line 3883 
    i = 0;
    
#line 3883 
    goto ldv_61854;
    ldv_61853: 
#line 3884 
    ;
    
#line 3884 
    read_nic_dword(dev,(unsigned int)(i * 4) + (unsigned int)loop,& buffer[i]);
    
#line 3883 
    i += 1;
    ldv_61854: 
#line 3884 
    ;
    
#line 3883 
    if (i <= 3) 
#line 3885 
                goto ldv_61853; else 
#line 3888 
                                     goto ldv_61855;
    ldv_61855: 
#line 3889 
    ;
  }
  
#line 3886 
  if (priv->dump_raw != 0) {
    int tmp_0;
    
#line 3887 
    tmp_0 = sprintf(buf + len,"%c%c%c%c",(int)*((u8 *)(& buffer)),(int)*((u8 *)(& buffer) + 1U),(int)*((u8 *)(& buffer) + 2U),(int)*((u8 *)(& buffer) + 3U),(int)*((u8 *)(& buffer) + 4U),(int)*((u8 *)(& buffer) + 5U),(int)*((u8 *)(& buffer) + 6U),(int)*((u8 *)(& buffer) + 7U),(int)*((u8 *)(& buffer) + 8U),(int)*((u8 *)(& buffer) + 9U),(int)*((u8 *)(& buffer) + 10U),(int)*((u8 *)(& buffer) + 11U),(int)*((u8 *)(& buffer) + 12U),(int)*((u8 *)(& buffer) + 13U),(int)*((u8 *)(& buffer) + 14U),(int)*((u8 *)(& buffer) + 15U));
    
#line 3907 
    len = tmp_0 + len;
  }
  else {
    int tmp_2;
    char *tmp_1;
    
#line 3909 
    tmp_1 = snprint_line((char *)(& line),81UL,(u8 const *)(& buffer),16U,(unsigned int)loop);
    
#line 3909 
    ;
    
#line 3909 
    tmp_2 = sprintf(buf + len,"%s\n",tmp_1);
    
#line 3911 
    len = tmp_2 + len;
  }
  
#line 3912 
  loop += 16UL;
  ldv_61857: 
#line 3913 
  ;
  
#line 3876 
  if ((unsigned int)len <= 3967U && loop <= 196607UL) 
#line 3878 
                                                      goto ldv_61856; else 
                                                                    
#line 3881 
                                                                    goto ldv_61858;
  ldv_61858: 
#line 3882 
  ;
  
#line 3915 
  __retres = (long)len;
  
#line 3915 
  return __retres;
}


#line 3918  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static ssize_t store_memory(struct device *d, struct device_attribute *attr, char const *buf, size_t count)
{
  ssize_t __retres;
  
#line 3921 
  struct ipw2100_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 3922 
  struct net_device *dev = priv->net_dev;
  
#line 3923 
  char const *p = buf;
  
#line 3925 
  struct net_device *tmp_2 = dev;
  
#line 3927 
  if (count == 0UL) {
    
#line 3928 
    __retres = (long)count;
    
#line 3928 
    goto return_label;
  }
  else ;
  
#line 3930 
  if ((int)*p == 49) 
#line 3930 
                     goto _LOR_0;
  else 
    
#line 3930 
    if (count > 1UL) {
      unsigned char tmp_11;
      
#line 3931 
      tmp_11 = __tolower((unsigned char)((int)((unsigned char)*p)));
      
#line 3931 
      if ((unsigned int)tmp_11 == 111U) {
        unsigned char tmp_12;
        
#line 3931 
        tmp_12 = __tolower((unsigned char)((int)((unsigned char)*(p + 1U))));
        
#line 3931 
        if ((unsigned int)tmp_12 == 110U) {
          _LOR_0: {
                    
#line 3932 
                    if ((ipw2100_debug_level & 4U) != 0U) {
                      int tmp_1;
                      int tmp_0;
                      
#line 3932 
                      tmp_0 = preempt_count();
                      
#line 3932 
                      if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
                        
#line 3932 
                        tmp_1 = 73; else 
#line 3932 
                                         tmp_1 = 85;
                      
#line 3932 
                      printk("\001",tmp_1,"store_memory");
                      
#line 3932 
                      printk("%s: Setting memory dump to RAW mode.\n",(char *)(& dev->name));
                    }
                    else ;
                    
#line 3934 
                    priv->dump_raw = 1;
                  }
        }
        else 
#line 3930 
             goto _LAND_2;
      }
      else 
#line 3930 
           goto _LAND_2;
    }
    else {
      _LAND_2: 
#line 3936 
      ;
      
#line 3936 
      if ((int)*p == 48) 
#line 3936 
                         goto _LOR;
      else 
        
#line 3936 
        if (count > 1UL) {
          unsigned char tmp_9;
          
#line 3936 
          tmp_9 = __tolower((unsigned char)((int)((unsigned char)*p)));
          
#line 3936 
          if ((unsigned int)tmp_9 == 111U) {
            unsigned char tmp_10;
            
#line 3936 
            tmp_10 = __tolower((unsigned char)((int)((unsigned char)*(p + 1U))));
            
#line 3936 
            if ((unsigned int)tmp_10 == 102U) {
              _LOR: {
                      
#line 3938 
                      if ((ipw2100_debug_level & 4U) != 0U) {
                        int tmp_3;
                        int tmp_2_0;
                        
#line 3938 
                        tmp_2_0 = preempt_count();
                        
#line 3938 
                        if (((unsigned long)tmp_2_0 & 2096896UL) != 0UL) 
                          
#line 3938 
                          tmp_3 = 73; else 
#line 3938 
                                           tmp_3 = 85;
                        
#line 3938 
                        printk("\001",tmp_3,"store_memory");
                        
#line 3938 
                        printk("%s: Setting memory dump to HEX mode.\n",(char *)(& dev->name));
                      }
                      else ;
                      
#line 3940 
                      priv->dump_raw = 0;
                    }
            }
            else 
#line 3936 
                 goto _LAND_0;
          }
          else 
#line 3936 
               goto _LAND_0;
        }
        else {
          unsigned char tmp_8;
          _LAND_0: 
#line 3942 
          tmp_8 = __tolower((unsigned char)((int)((unsigned char)*p)));
          
#line 3942 
          if ((unsigned int)tmp_8 == 114U) {
            
#line 3943 
            if ((ipw2100_debug_level & 4U) != 0U) {
              int tmp_5;
              int tmp_4;
              
#line 3943 
              tmp_4 = preempt_count();
              
#line 3943 
              if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
#line 3943 
                                                             tmp_5 = 73; else 
                                                                    
#line 3943 
                                                                    tmp_5 = 85;
              
#line 3943 
              printk("\001",tmp_5,"store_memory");
              
#line 3943 
              printk("%s: Resetting firmware snapshot.\n",(char *)(& dev->name));
            }
            else ;
            
#line 3944 
            ipw2100_snapshot_free(priv);
          }
          else 
            
#line 3947 
            if ((ipw2100_debug_level & 4U) != 0U) {
              int tmp_7;
              int tmp_6;
              
#line 3947 
              tmp_6 = preempt_count();
              
#line 3947 
              if (((unsigned long)tmp_6 & 2096896UL) != 0UL) 
#line 3947 
                                                             tmp_7 = 73; else 
                                                                    
#line 3947 
                                                                    tmp_7 = 85;
              
#line 3947 
              printk("\001",tmp_7,"store_memory");
              
#line 3947 
              printk("%s: Usage: 0|on = HEX, 1|off = RAW, ",(char *)(& dev->name));
            }
            else ;
        }
    }
  
#line 3950 
  __retres = (long)count;
  return_label: 
#line 3950 
                return __retres;
}


#line 3953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct device_attribute dev_attr_memory = {.attr = {.name = "memory", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_memory, .store = & store_memory};

#line 3955  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static ssize_t show_ordinals(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  u32 val_len;
  int tmp_2;
  
#line 3958 
  struct ipw2100_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 3959 
  u32 val = 0U;
  
#line 3960 
  int len = 0;
  
#line 3962 
  int loop = 0;
  
#line 3964 
  if ((priv->status & 12288UL) != 0UL) {
    
#line 3965 
    __retres = 0L;
    
#line 3965 
    goto return_label;
  }
  else ;
  
#line 3967 
  if ((unsigned int)loop > 146U) 
#line 3968 
                                 loop = 0; else ;
  
#line 3971 
  goto ldv_61905;
  ldv_61904: 
#line 3972 
  ;
  
#line 3972 
  val_len = 4U;
  
#line 3974 
  tmp_2 = ipw2100_get_ordinal(priv,(unsigned int)ord_data[loop].index,(void *)(& val),& val_len);
  
#line 3974 
  if (tmp_2 != 0) {
    int tmp_0;
    
#line 3976 
    tmp_0 = sprintf(buf + len,"[0x%02X] = ERROR    %s\n",(int)ord_data[loop].index,ord_data[loop].desc);
    
#line 3978 
    len = tmp_0 + len;
  }
  else {
    int tmp_1;
    
#line 3980 
    tmp_1 = sprintf(buf + len,"[0x%02X] = 0x%08X %s\n",(int)ord_data[loop].index,val,ord_data[loop].desc);
    
#line 3982 
    len = tmp_1 + len;
  }
  
#line 3983 
  loop += 1;
  ldv_61905: 
#line 3984 
  ;
  
#line 3971 
  if ((unsigned int)len <= 3967U && (unsigned int)loop <= 146U) 
#line 3973 
                                                                goto ldv_61904; else 
                                                                    
#line 3976 
                                                                    goto ldv_61906;
  ldv_61906: 
#line 3977 
  ;
  
#line 3986 
  __retres = (long)len;
  return_label: 
#line 3986 
                return __retres;
}


#line 3989  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct device_attribute dev_attr_ordinals = {.attr = {.name = "ordinals", .mode = (unsigned short)292U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_ordinals, .store = (ssize_t (*)(struct device *, struct device_attribute *, char const *, size_t ))0};

#line 3991  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static ssize_t show_stats(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_4;
  char *tmp_3;
  
#line 3994 
  struct ipw2100_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 3995 
  char *out = buf;
  
#line 3997 
  tmp_0 = sprintf(out,"interrupts: %d {tx: %d, rx: %d, other: %d}\n",priv->interrupts,priv->tx_interrupts,priv->rx_interrupts,priv->inta_other);
  
#line 3999 
  out += tmp_0;
  
#line 4000 
  tmp_1 = sprintf(out,"firmware resets: %d\n",priv->resets);
  
#line 4000 
  out += tmp_1;
  
#line 4001 
  tmp_2 = sprintf(out,"firmware hangs: %d\n",priv->hangs);
  
#line 4001 
  out += tmp_2;
  
#line 4003 
  if (priv->snapshot[0] != (u8 *)0U) 
#line 4003 
                                     tmp_3 = (char *)"YES"; else 
#line 4003 
                                                                 tmp_3 = (char *)"NO";
  
#line 4003 
  tmp_4 = sprintf(out,"packet mismatch image: %s\n",tmp_3);
  
#line 4004 
  out += tmp_4;
  
#line 4007 
  __retres = (long)out - (long)buf;
  
#line 4007 
  return __retres;
}


#line 4010  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct device_attribute dev_attr_stats = {.attr = {.name = "stats", .mode = (unsigned short)292U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_stats, .store = (ssize_t (*)(struct device *, struct device_attribute *, char const *, size_t ))0};

#line 4012  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_switch_mode(struct ipw2100_priv *priv, u32 mode)
{
  int __retres;
  int err;
  
#line 4016 
  if ((unsigned int)(priv->ieee)->iw_mode == mode) {
    
#line 4017 
    __retres = 0;
    
#line 4017 
    goto return_label;
  }
  else ;
  
#line 4019 
  err = ipw2100_disable_adapter(priv);
  
#line 4020 
  if (err != 0) {
    
#line 4021 
    printk("\001",(char *)(& (priv->net_dev)->name),err);
    
#line 4023 
    __retres = err;
    
#line 4023 
    goto return_label;
  }
  else ;
  
#line 4026 
  switch (mode) {
    case (u32)2: 
#line 4027 
    ;
    
#line 4028 
    (priv->net_dev)->type = (unsigned short)1U;
    
#line 4029 
    goto ldv_61958;
    case (u32)1: 
#line 4030 
    ;
    
#line 4031 
    (priv->net_dev)->type = (unsigned short)1U;
    
#line 4032 
    goto ldv_61958;
    case (u32)6: 
#line 4034 
    ;
    
#line 4035 
    priv->last_mode = (priv->ieee)->iw_mode;
    
#line 4036 
    (priv->net_dev)->type = (unsigned short)803U;
    
#line 4037 
    goto ldv_61958;
  }
  ldv_61958: 
#line 4041 
  ;
  
#line 4041 
  (priv->ieee)->iw_mode = (int)mode;
  
#line 4046 
  ipw2100_firmware.version = 0;
  
#line 4049 
  printk("\001",(char *)(& (priv->net_dev)->name));
  
#line 4050 
  priv->reset_backoff = 0;
  
#line 4051 
  schedule_reset(priv);
  
#line 4053 
  __retres = 0;
  return_label: 
#line 4053 
                return __retres;
}


#line 4056  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static ssize_t show_internals(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_3;
  int tmp_4;
  int tmp_5;
  int tmp_6;
  int tmp_7;
  int tmp_8;
  int tmp_9;
  int tmp_10;
  int tmp_11;
  int tmp_12;
  int tmp_13;
  int tmp_14;
  int tmp_15;
  int tmp_16;
  int tmp_17;
  int tmp_18;
  int tmp_19;
  int tmp_20;
  int tmp_21;
  int tmp_22;
  int tmp_23;
  int tmp_24;
  int tmp_25;
  
#line 4059 
  struct ipw2100_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 4060 
  int len = 0;
  
#line 4064 
  if ((priv->status & 1024UL) != 0UL) {
    int tmp_1;
    unsigned long tmp_0;
    
#line 4065 
    tmp_0 = get_seconds();
    
#line 4065 
    ;
    
#line 4065 
    ;
    
#line 4065 
    tmp_1 = sprintf(buf + len,"connected: %lu\n",tmp_0 - priv->connect_start);
    
#line 4066 
    len = tmp_1 + len;
  }
  else {
    int tmp_2;
    
#line 4068 
    tmp_2 = sprintf(buf + len,"not connected\n");
    
#line 4068 
    len = tmp_2 + len;
  }
  
#line 4070 
  tmp_3 = sprintf(buf + len,"ieee->crypt_info.crypt[priv->ieee->crypt_info.tx_keyidx]",(priv->ieee)->crypt_info.crypt[(priv->ieee)->crypt_info.tx_keyidx]);
  
#line 4070 
  len = tmp_3 + len;
  
#line 4071 
  tmp_4 = sprintf(buf + len,"status",priv->status);
  
#line 4071 
  len = tmp_4 + len;
  
#line 4072 
  tmp_5 = sprintf(buf + len,"config",priv->config);
  
#line 4072 
  len = tmp_5 + len;
  
#line 4073 
  tmp_6 = sprintf(buf + len,"capability",priv->capability);
  
#line 4073 
  len = tmp_6 + len;
  
#line 4075 
  tmp_7 = sprintf(buf + len,"last_rtc: %lu\n",(unsigned long)priv->last_rtc);
  
#line 4077 
  len = tmp_7 + len;
  
#line 4079 
  tmp_8 = sprintf(buf + len,"fatal_error",priv->fatal_error);
  
#line 4079 
  len = tmp_8 + len;
  
#line 4080 
  tmp_9 = sprintf(buf + len,"stop_hang_check",priv->stop_hang_check);
  
#line 4080 
  len = tmp_9 + len;
  
#line 4081 
  tmp_10 = sprintf(buf + len,"stop_rf_kill",priv->stop_rf_kill);
  
#line 4081 
  len = tmp_10 + len;
  
#line 4082 
  tmp_11 = sprintf(buf + len,"messages_sent",priv->messages_sent);
  
#line 4082 
  len = tmp_11 + len;
  
#line 4084 
  tmp_12 = sprintf(buf + len,"tx_pend_stat.value",priv->tx_pend_stat.value);
  
#line 4084 
  len = tmp_12 + len;
  
#line 4085 
  tmp_13 = sprintf(buf + len,"tx_pend_stat.hi",priv->tx_pend_stat.hi);
  
#line 4085 
  len = tmp_13 + len;
  
#line 4087 
  tmp_14 = sprintf(buf + len,"tx_free_stat.value",priv->tx_free_stat.value);
  
#line 4087 
  len = tmp_14 + len;
  
#line 4088 
  tmp_15 = sprintf(buf + len,"tx_free_stat.lo",priv->tx_free_stat.lo);
  
#line 4088 
  len = tmp_15 + len;
  
#line 4090 
  tmp_16 = sprintf(buf + len,"msg_free_stat.value",priv->msg_free_stat.value);
  
#line 4090 
  len = tmp_16 + len;
  
#line 4091 
  tmp_17 = sprintf(buf + len,"msg_free_stat.lo",priv->msg_free_stat.lo);
  
#line 4091 
  len = tmp_17 + len;
  
#line 4093 
  tmp_18 = sprintf(buf + len,"msg_pend_stat.value",priv->msg_pend_stat.value);
  
#line 4093 
  len = tmp_18 + len;
  
#line 4094 
  tmp_19 = sprintf(buf + len,"msg_pend_stat.hi",priv->msg_pend_stat.hi);
  
#line 4094 
  len = tmp_19 + len;
  
#line 4096 
  tmp_20 = sprintf(buf + len,"fw_pend_stat.value",priv->fw_pend_stat.value);
  
#line 4096 
  len = tmp_20 + len;
  
#line 4097 
  tmp_21 = sprintf(buf + len,"fw_pend_stat.hi",priv->fw_pend_stat.hi);
  
#line 4097 
  len = tmp_21 + len;
  
#line 4099 
  tmp_22 = sprintf(buf + len,"txq_stat.value",priv->txq_stat.value);
  
#line 4099 
  len = tmp_22 + len;
  
#line 4100 
  tmp_23 = sprintf(buf + len,"txq_stat.lo",priv->txq_stat.lo);
  
#line 4100 
  len = tmp_23 + len;
  
#line 4102 
  tmp_24 = sprintf(buf + len,"ieee->scans",(priv->ieee)->scans);
  
#line 4102 
  len = tmp_24 + len;
  
#line 4103 
  tmp_25 = sprintf(buf + len,"reset_backoff",priv->reset_backoff);
  
#line 4103 
  len = tmp_25 + len;
  
#line 4105 
  __retres = (long)len;
  
#line 4105 
  return __retres;
}


#line 4108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct device_attribute dev_attr_internals = {.attr = {.name = "internals", .mode = (unsigned short)292U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_internals, .store = (ssize_t (*)(struct device *, struct device_attribute *, char const *, size_t ))0};

#line 4110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static ssize_t show_bssinfo(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  char essid[33U];
  u8 bssid[6U];
  unsigned int length;
  int ret;
  int tmp_6;
  int tmp_7;
  int tmp_8;
  
#line 4113 
  struct ipw2100_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 4116 
  u32 chan = 0U;
  
#line 4117 
  char *out = buf;
  
#line 4121 
  if ((priv->status & 12288UL) != 0UL) {
    
#line 4122 
    __retres = 0L;
    
#line 4122 
    goto return_label;
  }
  else ;
  
#line 4124 
  memset((void *)(& essid),0,33UL);
  
#line 4125 
  memset((void *)(& bssid),0,6UL);
  
#line 4127 
  length = 32U;
  
#line 4128 
  ret = ipw2100_get_ordinal(priv,1006U,(void *)(& essid),& length);
  
#line 4129 
  if (ret != 0) {
    
#line 4130 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_1;
      int tmp_0;
      
#line 4130 
      tmp_0 = preempt_count();
      
#line 4130 
      if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 4130 
                                                     tmp_1 = 73; else 
                                                                   
#line 4130 
                                                                   tmp_1 = 85;
      
#line 4130 
      printk("\001",tmp_1,"show_bssinfo");
      
#line 4130 
      printk("failed querying ordinals at line %d\n",4131);
    }
    else ;
  }
  else ;
  
#line 4133 
  length = 6U;
  
#line 4134 
  ret = ipw2100_get_ordinal(priv,1014U,(void *)(& bssid),& length);
  
#line 4136 
  if (ret != 0) {
    
#line 4137 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_3;
      int tmp_2;
      
#line 4137 
      tmp_2 = preempt_count();
      
#line 4137 
      if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 4137 
                                                     tmp_3 = 73; else 
                                                                   
#line 4137 
                                                                   tmp_3 = 85;
      
#line 4137 
      printk("\001",tmp_3,"show_bssinfo");
      
#line 4137 
      printk("failed querying ordinals at line %d\n",4138);
    }
    else ;
  }
  else ;
  
#line 4140 
  length = 4U;
  
#line 4141 
  ret = ipw2100_get_ordinal(priv,189U,(void *)(& chan),& length);
  
#line 4142 
  if (ret != 0) {
    
#line 4143 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_5;
      int tmp_4;
      
#line 4143 
      tmp_4 = preempt_count();
      
#line 4143 
      if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
#line 4143 
                                                     tmp_5 = 73; else 
                                                                   
#line 4143 
                                                                   tmp_5 = 85;
      
#line 4143 
      printk("\001",tmp_5,"show_bssinfo");
      
#line 4143 
      printk("failed querying ordinals at line %d\n",4144);
    }
    else ;
  }
  else ;
  
#line 4146 
  tmp_6 = sprintf(out,"ESSID: %s\n",(char *)(& essid));
  
#line 4146 
  out += tmp_6;
  
#line 4147 
  tmp_7 = sprintf(out,"BSSID:   %pM\n",(u8 *)(& bssid));
  
#line 4147 
  out += tmp_7;
  
#line 4148 
  tmp_8 = sprintf(out,"Channel: %d\n",chan);
  
#line 4148 
  out += tmp_8;
  
#line 4150 
  __retres = (long)out - (long)buf;
  return_label: 
#line 4150 
                return __retres;
}


#line 4153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct device_attribute dev_attr_bssinfo = {.attr = {.name = "bssinfo", .mode = (unsigned short)292U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_bssinfo, .store = (ssize_t (*)(struct device *, struct device_attribute *, char const *, size_t ))0};

#line 4156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static ssize_t show_debug_level(struct device_driver *d, char *buf)
{
  ssize_t __retres;
  int tmp;
  
#line 4158 
  tmp = sprintf(buf,"0x%08X\n",ipw2100_debug_level);
  
#line 4158 
  __retres = (long)tmp;
  
#line 4158 
  return __retres;
}


#line 4161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static ssize_t store_debug_level(struct device_driver *d, char const *buf, size_t count)
{
  ssize_t __retres;
  u32 val;
  int ret;
  __kernel_size_t tmp_1;
  
#line 4167 
  ret = kstrtou32(buf,0U,& val);
  
#line 4168 
  if (ret != 0) {
    
#line 4169 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 4169 
      tmp = preempt_count();
      
#line 4169 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 4169 
                                                   tmp_0 = 73; else 
#line 4169 
                                                                    tmp_0 = 85;
      
#line 4169 
      printk("\001",tmp_0,"store_debug_level");
      
#line 4169 
      printk(": %s is not in hex or decimal form.\n",buf);
    }
    else ;
  }
  else 
#line 4171 
       ipw2100_debug_level = val;
  
#line 4173 
  tmp_1 = strnlen(buf,count);
  
#line 4173 
  __retres = (long)tmp_1;
  
#line 4173 
  return __retres;
}


#line 4176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct driver_attribute driver_attr_debug_level = {.attr = {.name = "debug_level", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_debug_level, .store = & store_debug_level};

#line 4180  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static ssize_t show_fatal_error(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int i;
  int tmp_2;
  
#line 4183 
  struct ipw2100_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 4184 
  char *out = buf;
  
#line 4187 
  if (priv->fatal_error != 0U) {
    int tmp_0;
    
#line 4188 
    tmp_0 = sprintf(out,"0x%08X\n",priv->fatal_error);
    
#line 4188 
    out += tmp_0;
  }
  else {
    int tmp_1;
    
#line 4190 
    tmp_1 = sprintf(out,"0\n");
    
#line 4190 
    out += tmp_1;
  }
  
#line 4192 
  i = 1;
  
#line 4192 
  goto ldv_62060;
  ldv_62059: 
#line 4193 
  ;
  
#line 4193 
  if (priv->fatal_errors[(priv->fatal_index - (unsigned int)i) % 5U] == 0U) 
    
#line 4195 
    goto ldv_62058; else ;
  
#line 4197 
  tmp_2 = sprintf(out,"%d. 0x%08X\n",i,priv->fatal_errors[(priv->fatal_index - (unsigned int)i) % 5U]);
  
#line 4199 
  out += tmp_2;
  ldv_62058: 
#line 4199 
  ;
  
#line 4192 
  i += 1;
  ldv_62060: 
#line 4193 
  ;
  
#line 4192 
  if (i <= 5) 
#line 4194 
              goto ldv_62059; else 
#line 4197 
                                   goto ldv_62061;
  ldv_62061: 
#line 4198 
  ;
  
#line 4202 
  __retres = (long)out - (long)buf;
  
#line 4202 
  return __retres;
}


#line 4205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static ssize_t store_fatal_error(struct device *d, struct device_attribute *attr, char const *buf, size_t count)
{
  ssize_t __retres;
  
#line 4209 
  struct ipw2100_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 4210 
  schedule_reset(priv);
  
#line 4211 
  __retres = (long)count;
  
#line 4211 
  return __retres;
}


#line 4214  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct device_attribute dev_attr_fatal_error = {.attr = {.name = "fatal_error", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_fatal_error, .store = & store_fatal_error};

#line 4217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static ssize_t show_scan_age(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_0;
  
#line 4220 
  struct ipw2100_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 4221 
  tmp_0 = sprintf(buf,"%d\n",(priv->ieee)->scan_age);
  
#line 4221 
  __retres = (long)tmp_0;
  
#line 4221 
  return __retres;
}


#line 4224  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static ssize_t store_scan_age(struct device *d, struct device_attribute *attr, char const *buf, size_t count)
{
  ssize_t __retres;
  unsigned long val;
  int ret;
  __kernel_size_t tmp_8;
  
#line 4227 
  struct ipw2100_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 4228 
  struct net_device *dev = priv->net_dev;
  
#line 4232 
  struct net_device *tmp_2 = dev;
  
#line 4234 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 4234 
    tmp_0 = preempt_count();
    
#line 4234 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 4234 
                                                   tmp_1 = 73; else 
#line 4234 
                                                                    tmp_1 = 85;
    
#line 4234 
    printk("\001",tmp_1,"store_scan_age");
    
#line 4234 
    printk("enter\n");
  }
  else ;
  
#line 4236 
  ret = kstrtoul(buf,0U,& val);
  
#line 4237 
  if (ret != 0) {
    
#line 4238 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_3;
      int tmp_2_0;
      
#line 4238 
      tmp_2_0 = preempt_count();
      
#line 4238 
      if (((unsigned long)tmp_2_0 & 2096896UL) != 0UL) 
#line 4238 
                                                       tmp_3 = 73; else 
                                                                    
#line 4238 
                                                                    tmp_3 = 85;
      
#line 4238 
      printk("\001",tmp_3,"store_scan_age");
      
#line 4238 
      printk("%s: user supplied invalid value.\n",(char *)(& dev->name));
    }
    else ;
  }
  else {
    
#line 4240 
    (priv->ieee)->scan_age = (int)val;
    
#line 4241 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_5;
      int tmp_4;
      
#line 4241 
      tmp_4 = preempt_count();
      
#line 4241 
      if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
#line 4241 
                                                     tmp_5 = 73; else 
                                                                   
#line 4241 
                                                                   tmp_5 = 85;
      
#line 4241 
      printk("\001",tmp_5,"store_scan_age");
      
#line 4241 
      printk("set scan_age = %u\n",(priv->ieee)->scan_age);
    }
    else ;
  }
  
#line 4244 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_7;
    int tmp_6;
    
#line 4244 
    tmp_6 = preempt_count();
    
#line 4244 
    if (((unsigned long)tmp_6 & 2096896UL) != 0UL) 
#line 4244 
                                                   tmp_7 = 73; else 
#line 4244 
                                                                    tmp_7 = 85;
    
#line 4244 
    printk("\001",tmp_7,"store_scan_age");
    
#line 4244 
    printk("exit\n");
  }
  else ;
  
#line 4245 
  tmp_8 = strnlen(buf,count);
  
#line 4245 
  __retres = (long)tmp_8;
  
#line 4245 
  return __retres;
}


#line 4248  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct device_attribute dev_attr_scan_age = {.attr = {.name = "scan_age", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_scan_age, .store = & store_scan_age};

#line 4250  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static ssize_t show_rf_kill(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_1;
  int tmp_0;
  int tmp_2;
  
#line 4257 
  struct ipw2100_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 4258 
  tmp_0 = rf_kill_active(priv);
  
#line 4258 
  if (tmp_0 != 0) 
#line 4258 
                  tmp_1 = 2; else 
#line 4258 
                                  tmp_1 = 0;
  
#line 4258 
  int val = ((int)(priv->status >> 13) & 1) | tmp_1;
  
#line 4260 
  tmp_2 = sprintf(buf,"%i\n",val);
  
#line 4260 
  __retres = (long)tmp_2;
  
#line 4260 
  return __retres;
}


#line 4263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw_radio_kill_sw(struct ipw2100_priv *priv, int disable_radio)
{
  int __retres;
  
#line 4265 
  if ((disable_radio == 0) ^ (int)((_Bool)(priv->status >> 13 != 0))) {
    
#line 4267 
    __retres = 0;
    
#line 4267 
    goto return_label;
  }
  else ;
  
#line 4269 
  if ((ipw2100_debug_level & 131072U) != 0U) {
    int tmp_0;
    int tmp;
    char *tmp_1;
    
#line 4269 
    tmp = preempt_count();
    
#line 4269 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 4269 
                                                 tmp_0 = 73; else 
#line 4269 
                                                                  tmp_0 = 85;
    
#line 4269 
    printk("\001",tmp_0,"ipw_radio_kill_sw");
    
#line 4269 
    if (disable_radio != 0) 
#line 4269 
                            tmp_1 = (char *)"OFF"; else 
#line 4269 
                                                        tmp_1 = (char *)"ON";
    
#line 4269 
    printk("Manual SW RF Kill set to: RADIO  %s\n",tmp_1);
  }
  else ;
  
#line 4272 
  ldv_mutex_lock_107(& priv->action_mutex);
  
#line 4274 
  if (disable_radio != 0) {
    
#line 4275 
    priv->status |= 8192UL;
    
#line 4276 
    ipw2100_down(priv);
  }
  else {
    int tmp_5;
    
#line 4278 
    priv->status &= 18446744073709543423UL;
    
#line 4279 
    tmp_5 = rf_kill_active(priv);
    
#line 4279 
    if (tmp_5 != 0) {
      unsigned long tmp_4;
      
#line 4280 
      if ((ipw2100_debug_level & 131072U) != 0U) {
        int tmp_3;
        int tmp_2;
        
#line 4280 
        tmp_2 = preempt_count();
        
#line 4280 
        if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 4280 
                                                       tmp_3 = 73; else 
                                                                    
#line 4280 
                                                                    tmp_3 = 85;
        
#line 4280 
        printk("\001",tmp_3,"ipw_radio_kill_sw");
        
#line 4280 
        printk("Can not turn radio back on - ");
      }
      else ;
      
#line 4283 
      priv->stop_rf_kill = 0;
      
#line 4284 
      tmp_4 = round_jiffies_relative(250UL);
      
#line 4284 
      ;
      
#line 4284 
      ;
      
#line 4284 
      mod_delayed_work(system_wq,& priv->rf_kill,tmp_4);
    }
    else 
#line 4287 
         schedule_reset(priv);
  }
  
#line 4290 
  ldv_mutex_unlock_108(& priv->action_mutex);
  
#line 4291 
  __retres = 1;
  return_label: 
#line 4291 
                return __retres;
}


#line 4294  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static ssize_t store_rf_kill(struct device *d, struct device_attribute *attr, char const *buf, size_t count)
{
  ssize_t __retres;
  
#line 4297 
  struct ipw2100_priv *priv = dev_get_drvdata((struct device const *)d);
  
#line 4298 
  ipw_radio_kill_sw(priv,(int)*buf == 49);
  
#line 4299 
  __retres = (long)count;
  
#line 4299 
  return __retres;
}


#line 4302  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct device_attribute dev_attr_rf_kill = {.attr = {.name = "rf_kill", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_rf_kill, .store = & store_rf_kill};

#line 4304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct attribute *ipw2100_sysfs_entries[15U] = {& dev_attr_hardware.attr, & dev_attr_registers.attr, & dev_attr_ordinals.attr, & dev_attr_pci.attr, & dev_attr_stats.attr, & dev_attr_internals.attr, & dev_attr_bssinfo.attr, & dev_attr_memory.attr, & dev_attr_scan_age.attr, & dev_attr_fatal_error.attr, & dev_attr_rf_kill.attr, & dev_attr_cfg.attr, & dev_attr_status.attr, & dev_attr_capability.attr, (struct attribute *)0};

#line 4322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct attribute_group ipw2100_attribute_group = {.name = (char const *)0, .is_visible = (umode_t (*)(struct kobject *, struct attribute *, int ))0, .attrs = (struct attribute **)(& ipw2100_sysfs_entries), .bin_attrs = (struct bin_attribute **)0};

#line 4326  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int status_queue_allocate(struct ipw2100_priv *priv, int entries)
{
  int __retres;
  
#line 4328 
  struct ipw2100_status_queue *q = & priv->status_queue;
  
#line 4330 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 4330 
    tmp = preempt_count();
    
#line 4330 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 4330 
                                                 tmp_0 = 73; else 
#line 4330 
                                                                  tmp_0 = 85;
    
#line 4330 
    printk("\001",tmp_0,"status_queue_allocate");
    
#line 4330 
    printk("enter\n");
  }
  else ;
  
#line 4332 
  q->size = (unsigned int)((unsigned long)entries) * 8U;
  
#line 4333 
  q->drv = (struct ipw2100_status *)pci_zalloc_consistent(priv->pci_dev,(unsigned long)q->size,& q->nic);
  
#line 4334 
  if (q->drv == (struct ipw2100_status *)0) {
    
#line 4335 
    printk("\001");
    
#line 4336 
    __retres = -12;
    
#line 4336 
    goto return_label;
  }
  else ;
  
#line 4339 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_3;
    int tmp_2;
    
#line 4339 
    tmp_2 = preempt_count();
    
#line 4339 
    if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 4339 
                                                   tmp_3 = 73; else 
#line 4339 
                                                                    tmp_3 = 85;
    
#line 4339 
    printk("\001",tmp_3,"status_queue_allocate");
    
#line 4339 
    printk("exit\n");
  }
  else ;
  
#line 4341 
  __retres = 0;
  return_label: 
#line 4341 
                return __retres;
}


#line 4344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void status_queue_free(struct ipw2100_priv *priv)
{
  
#line 4346 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 4346 
    tmp = preempt_count();
    
#line 4346 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 4346 
                                                 tmp_0 = 73; else 
#line 4346 
                                                                  tmp_0 = 85;
    
#line 4346 
    printk("\001",tmp_0,"status_queue_free");
    
#line 4346 
    printk("enter\n");
  }
  else ;
  
#line 4348 
  if (priv->status_queue.drv != (struct ipw2100_status *)0) {
    
#line 4349 
    pci_free_consistent(priv->pci_dev,(unsigned long)priv->status_queue.size,(void *)priv->status_queue.drv,priv->status_queue.nic);
    
#line 4352 
    priv->status_queue.drv = (struct ipw2100_status *)0;
  }
  else ;
  
#line 4355 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 4355 
    tmp_1 = preempt_count();
    
#line 4355 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 4355 
                                                   tmp_2 = 73; else 
#line 4355 
                                                                    tmp_2 = 85;
    
#line 4355 
    printk("\001",tmp_2,"status_queue_free");
    
#line 4355 
    printk("exit\n");
  }
  else ;
  
#line 4357 
  return;
}


#line 4358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int bd_queue_allocate(struct ipw2100_priv *priv, struct ipw2100_bd_queue *q, int entries)
{
  int __retres;
  
#line 4361 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 4361 
    tmp = preempt_count();
    
#line 4361 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 4361 
                                                 tmp_0 = 73; else 
#line 4361 
                                                                  tmp_0 = 85;
    
#line 4361 
    printk("\001",tmp_0,"bd_queue_allocate");
    
#line 4361 
    printk("enter\n");
  }
  else ;
  
#line 4363 
  memset((void *)q,0,40UL);
  
#line 4365 
  q->entries = (unsigned int)entries;
  
#line 4366 
  q->size = (unsigned int)((unsigned long)entries) * 16U;
  
#line 4367 
  q->drv = (struct ipw2100_bd *)pci_zalloc_consistent(priv->pci_dev,(unsigned long)q->size,& q->nic);
  
#line 4368 
  if (q->drv == (struct ipw2100_bd *)0) {
    
#line 4369 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_3;
      int tmp_2;
      
#line 4369 
      tmp_2 = preempt_count();
      
#line 4369 
      if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 4369 
                                                     tmp_3 = 73; else 
                                                                   
#line 4369 
                                                                   tmp_3 = 85;
      
#line 4369 
      printk("\001",tmp_3,"bd_queue_allocate");
      
#line 4369 
      printk("can\'t allocate shared memory for buffer descriptors\n");
    }
    else ;
    
#line 4371 
    __retres = -12;
    
#line 4371 
    goto return_label;
  }
  else ;
  
#line 4374 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_5;
    int tmp_4;
    
#line 4374 
    tmp_4 = preempt_count();
    
#line 4374 
    if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
#line 4374 
                                                   tmp_5 = 73; else 
#line 4374 
                                                                    tmp_5 = 85;
    
#line 4374 
    printk("\001",tmp_5,"bd_queue_allocate");
    
#line 4374 
    printk("exit\n");
  }
  else ;
  
#line 4376 
  __retres = 0;
  return_label: 
#line 4376 
                return __retres;
}


#line 4379  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void bd_queue_free(struct ipw2100_priv *priv, struct ipw2100_bd_queue *q)
{
  
#line 4381 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 4381 
    tmp = preempt_count();
    
#line 4381 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 4381 
                                                 tmp_0 = 73; else 
#line 4381 
                                                                  tmp_0 = 85;
    
#line 4381 
    printk("\001",tmp_0,"bd_queue_free");
    
#line 4381 
    printk("enter\n");
  }
  else ;
  
#line 4383 
  if (q == (struct ipw2100_bd_queue *)0) 
#line 4384 
                                         goto return_label; else ;
  
#line 4386 
  if (q->drv != (struct ipw2100_bd *)0) {
    
#line 4387 
    pci_free_consistent(priv->pci_dev,(unsigned long)q->size,(void *)q->drv,q->nic);
    
#line 4388 
    q->drv = (struct ipw2100_bd *)0;
  }
  else ;
  
#line 4391 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 4391 
    tmp_1 = preempt_count();
    
#line 4391 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 4391 
                                                   tmp_2 = 73; else 
#line 4391 
                                                                    tmp_2 = 85;
    
#line 4391 
    printk("\001",tmp_2,"bd_queue_free");
    
#line 4391 
    printk("exit\n");
  }
  else ;
  return_label: 
#line 4393 
                return;
}


#line 4394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void bd_queue_initialize(struct ipw2100_priv *priv, struct ipw2100_bd_queue *q, u32 base, u32 size, u32 r, u32 w)
{
  
#line 4398 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 4398 
    tmp = preempt_count();
    
#line 4398 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 4398 
                                                 tmp_0 = 73; else 
#line 4398 
                                                                  tmp_0 = 85;
    
#line 4398 
    printk("\001",tmp_0,"bd_queue_initialize");
    
#line 4398 
    printk("enter\n");
  }
  else ;
  
#line 4400 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 4400 
    tmp_1 = preempt_count();
    
#line 4400 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 4400 
                                                   tmp_2 = 73; else 
#line 4400 
                                                                    tmp_2 = 85;
    
#line 4400 
    printk("\001",tmp_2,"bd_queue_initialize");
    
#line 4400 
    printk("initializing bd queue at virt=%p, phys=%08x\n",q->drv,(unsigned int)q->nic);
  }
  else ;
  
#line 4403 
  write_register(priv->net_dev,base,(unsigned int)q->nic);
  
#line 4404 
  write_register(priv->net_dev,size,q->entries);
  
#line 4405 
  write_register(priv->net_dev,r,q->oldest);
  
#line 4406 
  write_register(priv->net_dev,w,q->next);
  
#line 4408 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_4;
    int tmp_3;
    
#line 4408 
    tmp_3 = preempt_count();
    
#line 4408 
    if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 4408 
                                                   tmp_4 = 73; else 
#line 4408 
                                                                    tmp_4 = 85;
    
#line 4408 
    printk("\001",tmp_4,"bd_queue_initialize");
    
#line 4408 
    printk("exit\n");
  }
  else ;
  
#line 4410 
  return;
}


#line 4411  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_kill_works(struct ipw2100_priv *priv)
{
  
#line 4413 
  priv->stop_rf_kill = 1;
  
#line 4414 
  priv->stop_hang_check = 1;
  
#line 4415 
  cancel_delayed_work_sync(& priv->reset_work);
  
#line 4416 
  cancel_delayed_work_sync(& priv->security_work);
  
#line 4417 
  cancel_delayed_work_sync(& priv->wx_event_work);
  
#line 4418 
  cancel_delayed_work_sync(& priv->hang_check);
  
#line 4419 
  cancel_delayed_work_sync(& priv->rf_kill);
  
#line 4420 
  cancel_delayed_work_sync(& priv->scan_event);
  
#line 4421 
  return;
}


#line 4423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_tx_allocate(struct ipw2100_priv *priv)
{
  int __retres;
  int i;
  int j;
  void *v;
  dma_addr_t p;
  
#line 4425 
  int err = -22;
  
#line 4429 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 4429 
    tmp = preempt_count();
    
#line 4429 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 4429 
                                                 tmp_0 = 73; else 
#line 4429 
                                                                  tmp_0 = 85;
    
#line 4429 
    printk("\001",tmp_0,"ipw2100_tx_allocate");
    
#line 4429 
    printk("enter\n");
  }
  else ;
  
#line 4431 
  err = bd_queue_allocate(priv,& priv->tx_queue,256);
  
#line 4432 
  if (err != 0) {
    
#line 4433 
    printk("\001",(char *)(& (priv->net_dev)->name));
    
#line 4435 
    __retres = err;
    
#line 4435 
    goto return_label;
  }
  else ;
  
#line 4438 
  priv->tx_buffers = (struct ipw2100_tx_packet *)kmalloc_array(128UL,56UL,32U);
  
#line 4441 
  if (priv->tx_buffers == (struct ipw2100_tx_packet *)0) {
    
#line 4442 
    bd_queue_free(priv,& priv->tx_queue);
    
#line 4443 
    __retres = -12;
    
#line 4443 
    goto return_label;
  }
  else ;
  
#line 4446 
  i = 0;
  
#line 4446 
  goto ldv_62208;
  ldv_62207: 
#line 4447 
  ;
  
#line 4447 
  v = pci_alloc_consistent(priv->pci_dev,52UL,& p);
  
#line 4450 
  if (v == (void *)0) {
    
#line 4451 
    printk("\001",(char *)(& (priv->net_dev)->name));
    
#line 4454 
    err = -12;
    
#line 4455 
    goto ldv_62206;
  }
  else ;
  
#line 4458 
  (priv->tx_buffers + i)->type = 51967;
  
#line 4459 
  (priv->tx_buffers + i)->info.d_struct.data = (struct ipw2100_data_header *)v;
  
#line 4461 
  (priv->tx_buffers + i)->info.d_struct.data_phys = p;
  
#line 4462 
  (priv->tx_buffers + i)->info.d_struct.txb = (struct libipw_txb *)0;
  
#line 4446 
  i += 1;
  ldv_62208: 
#line 4447 
  ;
  
#line 4446 
  if (i <= 127) 
#line 4448 
                goto ldv_62207; else 
#line 4451 
                                     goto ldv_62206;
  ldv_62206: 
#line 4452 
  ;
  
#line 4465 
  if (i == 128) {
    
#line 4466 
    __retres = 0;
    
#line 4466 
    goto return_label;
  }
  else ;
  
#line 4468 
  j = 0;
  
#line 4468 
  goto ldv_62210;
  ldv_62209: 
#line 4469 
  ;
  
#line 4469 
  pci_free_consistent(priv->pci_dev,52UL,(void *)(priv->tx_buffers + j)->info.d_struct.data,(priv->tx_buffers + j)->info.d_struct.data_phys);
  
#line 4468 
  j += 1;
  ldv_62210: 
#line 4469 
  ;
  
#line 4468 
  if (j < i) 
#line 4470 
             goto ldv_62209; else 
#line 4473 
                                  goto ldv_62211;
  ldv_62211: 
#line 4474 
  ;
  
#line 4476 
  kfree((void const *)priv->tx_buffers);
  
#line 4477 
  priv->tx_buffers = (struct ipw2100_tx_packet *)0;
  
#line 4479 
  __retres = err;
  return_label: 
#line 4479 
                return __retres;
}


#line 4482  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_tx_initialize(struct ipw2100_priv *priv)
{
  int i;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  
#line 4486 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 4486 
    tmp = preempt_count();
    
#line 4486 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 4486 
                                                 tmp_0 = 73; else 
#line 4486 
                                                                  tmp_0 = 85;
    
#line 4486 
    printk("\001",tmp_0,"ipw2100_tx_initialize");
    
#line 4486 
    printk("enter\n");
  }
  else ;
  
#line 4491 
  INIT_LIST_HEAD(& priv->fw_pend_list);
  
#line 4492 
  tmp_1 = 0;
  
#line 4492 
  priv->fw_pend_stat.hi = tmp_1;
  
#line 4492 
  priv->fw_pend_stat.value = tmp_1;
  
#line 4492 
  priv->fw_pend_stat.lo = 2147483647;
  
#line 4497 
  INIT_LIST_HEAD(& priv->tx_pend_list);
  
#line 4498 
  INIT_LIST_HEAD(& priv->tx_free_list);
  
#line 4499 
  tmp_2 = 0;
  
#line 4499 
  priv->tx_pend_stat.hi = tmp_2;
  
#line 4499 
  priv->tx_pend_stat.value = tmp_2;
  
#line 4499 
  priv->tx_pend_stat.lo = 2147483647;
  
#line 4500 
  tmp_3 = 0;
  
#line 4500 
  priv->tx_free_stat.hi = tmp_3;
  
#line 4500 
  priv->tx_free_stat.value = tmp_3;
  
#line 4500 
  priv->tx_free_stat.lo = 2147483647;
  
#line 4502 
  i = 0;
  
#line 4502 
  goto ldv_62218;
  ldv_62217: 
#line 4503 
  ;
  
#line 4505 
  if ((priv->tx_buffers + i)->info.d_struct.txb != (struct libipw_txb *)0) {
    
#line 4506 
    libipw_txb_free((priv->tx_buffers + i)->info.d_struct.txb);
    
#line 4508 
    (priv->tx_buffers + i)->info.d_struct.txb = (struct libipw_txb *)0;
  }
  else ;
  
#line 4511 
  list_add_tail(& (priv->tx_buffers + i)->list,& priv->tx_free_list);
  
#line 4502 
  i += 1;
  ldv_62218: 
#line 4503 
  ;
  
#line 4502 
  if (i <= 127) 
#line 4504 
                goto ldv_62217; else 
#line 4507 
                                     goto ldv_62219;
  ldv_62219: 
#line 4508 
  ;
  
#line 4514 
  priv->tx_free_stat.value = i;
  
#line 4514 
  if (priv->tx_free_stat.value > priv->tx_free_stat.hi) 
#line 4514 
                                                        priv->tx_free_stat.hi = priv->tx_free_stat.value; else ;
  
#line 4514 
  if (priv->tx_free_stat.value < priv->tx_free_stat.lo) 
#line 4514 
                                                        priv->tx_free_stat.lo = priv->tx_free_stat.value; else ;
  
#line 4516 
  priv->tx_queue.oldest = 0U;
  
#line 4517 
  priv->tx_queue.available = priv->tx_queue.entries;
  
#line 4518 
  priv->tx_queue.next = 0U;
  
#line 4519 
  tmp_4 = 0;
  
#line 4519 
  priv->txq_stat.hi = tmp_4;
  
#line 4519 
  priv->txq_stat.value = tmp_4;
  
#line 4519 
  priv->txq_stat.lo = 2147483647;
  
#line 4520 
  priv->txq_stat.value = (int)priv->tx_queue.available;
  
#line 4520 
  if (priv->txq_stat.value > priv->txq_stat.hi) 
#line 4520 
                                                priv->txq_stat.hi = priv->txq_stat.value; else ;
  
#line 4520 
  if (priv->txq_stat.value < priv->txq_stat.lo) 
#line 4520 
                                                priv->txq_stat.lo = priv->txq_stat.value; else ;
  
#line 4522 
  bd_queue_initialize(priv,& priv->tx_queue,512U,516U,640U,3968U);
  
#line 4528 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_6;
    int tmp_5;
    
#line 4528 
    tmp_5 = preempt_count();
    
#line 4528 
    if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 4528 
                                                   tmp_6 = 73; else 
#line 4528 
                                                                    tmp_6 = 85;
    
#line 4528 
    printk("\001",tmp_6,"ipw2100_tx_initialize");
    
#line 4528 
    printk("exit\n");
  }
  else ;
  
#line 4530 
  return;
}


#line 4532  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_tx_free(struct ipw2100_priv *priv)
{
  int i;
  
#line 4536 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 4536 
    tmp = preempt_count();
    
#line 4536 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 4536 
                                                 tmp_0 = 73; else 
#line 4536 
                                                                  tmp_0 = 85;
    
#line 4536 
    printk("\001",tmp_0,"ipw2100_tx_free");
    
#line 4536 
    printk("enter\n");
  }
  else ;
  
#line 4538 
  bd_queue_free(priv,& priv->tx_queue);
  
#line 4540 
  if (priv->tx_buffers == (struct ipw2100_tx_packet *)0) 
#line 4541 
                                                         goto return_label; else ;
  
#line 4543 
  i = 0;
  
#line 4543 
  goto ldv_62226;
  ldv_62225: 
#line 4544 
  ;
  
#line 4544 
  if ((priv->tx_buffers + i)->info.d_struct.txb != (struct libipw_txb *)0) {
    
#line 4545 
    libipw_txb_free((priv->tx_buffers + i)->info.d_struct.txb);
    
#line 4547 
    (priv->tx_buffers + i)->info.d_struct.txb = (struct libipw_txb *)0;
  }
  else ;
  
#line 4549 
  if ((priv->tx_buffers + i)->info.d_struct.data != (struct ipw2100_data_header *)0) 
    
#line 4550 
    pci_free_consistent(priv->pci_dev,52UL,(void *)(priv->tx_buffers + i)->info.d_struct.data,(priv->tx_buffers + i)->info.d_struct.data_phys); else ;
  
#line 4543 
  i += 1;
  ldv_62226: 
#line 4544 
  ;
  
#line 4543 
  if (i <= 127) 
#line 4545 
                goto ldv_62225; else 
#line 4548 
                                     goto ldv_62227;
  ldv_62227: 
#line 4549 
  ;
  
#line 4558 
  kfree((void const *)priv->tx_buffers);
  
#line 4559 
  priv->tx_buffers = (struct ipw2100_tx_packet *)0;
  
#line 4561 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 4561 
    tmp_1 = preempt_count();
    
#line 4561 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 4561 
                                                   tmp_2 = 73; else 
#line 4561 
                                                                    tmp_2 = 85;
    
#line 4561 
    printk("\001",tmp_2,"ipw2100_tx_free");
    
#line 4561 
    printk("exit\n");
  }
  else ;
  return_label: 
#line 4563 
                return;
}


#line 4564  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_rx_allocate(struct ipw2100_priv *priv)
{
  int __retres;
  int i;
  int j;
  
#line 4566 
  int err = -22;
  
#line 4568 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 4568 
    tmp = preempt_count();
    
#line 4568 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 4568 
                                                 tmp_0 = 73; else 
#line 4568 
                                                                  tmp_0 = 85;
    
#line 4568 
    printk("\001",tmp_0,"ipw2100_rx_allocate");
    
#line 4568 
    printk("enter\n");
  }
  else ;
  
#line 4570 
  err = bd_queue_allocate(priv,& priv->rx_queue,256);
  
#line 4571 
  if (err != 0) {
    
#line 4572 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 4572 
      tmp_1 = preempt_count();
      
#line 4572 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 4572 
                                                     tmp_2 = 73; else 
                                                                   
#line 4572 
                                                                   tmp_2 = 85;
      
#line 4572 
      printk("\001",tmp_2,"ipw2100_rx_allocate");
      
#line 4572 
      printk("failed bd_queue_allocate\n");
    }
    else ;
    
#line 4573 
    __retres = err;
    
#line 4573 
    goto return_label;
  }
  else ;
  
#line 4576 
  err = status_queue_allocate(priv,256);
  
#line 4577 
  if (err != 0) {
    
#line 4578 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_4;
      int tmp_3;
      
#line 4578 
      tmp_3 = preempt_count();
      
#line 4578 
      if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 4578 
                                                     tmp_4 = 73; else 
                                                                   
#line 4578 
                                                                   tmp_4 = 85;
      
#line 4578 
      printk("\001",tmp_4,"ipw2100_rx_allocate");
      
#line 4578 
      printk("failed status_queue_allocate\n");
    }
    else ;
    
#line 4579 
    bd_queue_free(priv,& priv->rx_queue);
    
#line 4580 
    __retres = err;
    
#line 4580 
    goto return_label;
  }
  else ;
  
#line 4586 
  priv->rx_buffers = (struct ipw2100_rx_packet *)kmalloc(12288UL,208U);
  
#line 4589 
  if (priv->rx_buffers == (struct ipw2100_rx_packet *)0) {
    
#line 4590 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_7;
      int tmp_6;
      
#line 4590 
      tmp_6 = preempt_count();
      
#line 4590 
      if (((unsigned long)tmp_6 & 2096896UL) != 0UL) 
#line 4590 
                                                     tmp_7 = 73; else 
                                                                   
#line 4590 
                                                                   tmp_7 = 85;
      
#line 4590 
      printk("\001",tmp_7,"ipw2100_rx_allocate");
      
#line 4590 
      printk("can\'t allocate rx packet buffer table\n");
    }
    else ;
    
#line 4592 
    bd_queue_free(priv,& priv->rx_queue);
    
#line 4594 
    status_queue_free(priv);
    
#line 4596 
    __retres = -12;
    
#line 4596 
    goto return_label;
  }
  else ;
  
#line 4599 
  i = 0;
  
#line 4599 
  goto ldv_62238;
  ldv_62237: 
#line 4600 
  ;
  {
    
#line 4600 
    struct ipw2100_rx_packet *packet = priv->rx_buffers + i;
    
#line 4602 
    err = ipw2100_alloc_skb(priv,packet);
    
#line 4603 
    if ((long)(err != 0) != 0L) {
      
#line 4604 
      err = -12;
      
#line 4605 
      goto ldv_62236;
    }
    else ;
    
#line 4609 
    (priv->rx_queue.drv + i)->host_addr = (unsigned int)packet->dma_addr;
    
#line 4610 
    (priv->rx_queue.drv + i)->buf_length = 2340U;
    
#line 4611 
    (priv->status_queue.drv + i)->status_fields = (unsigned short)0U;
  }
  
#line 4599 
  i += 1;
  ldv_62238: 
#line 4600 
  ;
  
#line 4599 
  if (i <= 255) 
#line 4601 
                goto ldv_62237; else 
#line 4604 
                                     goto ldv_62236;
  ldv_62236: 
#line 4605 
  ;
  
#line 4614 
  if (i == 256) {
    
#line 4615 
    __retres = 0;
    
#line 4615 
    goto return_label;
  }
  else ;
  
#line 4617 
  j = 0;
  
#line 4617 
  goto ldv_62240;
  ldv_62239: 
#line 4618 
  ;
  
#line 4618 
  pci_unmap_single(priv->pci_dev,(priv->rx_buffers + j)->dma_addr,48UL,2);
  
#line 4621 
  consume_skb((priv->rx_buffers + j)->skb);
  
#line 4617 
  j += 1;
  ldv_62240: 
#line 4618 
  ;
  
#line 4617 
  if (j < i) 
#line 4619 
             goto ldv_62239; else 
#line 4622 
                                  goto ldv_62241;
  ldv_62241: 
#line 4623 
  ;
  
#line 4624 
  kfree((void const *)priv->rx_buffers);
  
#line 4625 
  priv->rx_buffers = (struct ipw2100_rx_packet *)0;
  
#line 4627 
  bd_queue_free(priv,& priv->rx_queue);
  
#line 4629 
  status_queue_free(priv);
  
#line 4631 
  __retres = err;
  return_label: 
#line 4631 
                return __retres;
}


#line 4634  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_rx_initialize(struct ipw2100_priv *priv)
{
  int tmp_1;
  
#line 4636 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 4636 
    tmp = preempt_count();
    
#line 4636 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 4636 
                                                 tmp_0 = 73; else 
#line 4636 
                                                                  tmp_0 = 85;
    
#line 4636 
    printk("\001",tmp_0,"ipw2100_rx_initialize");
    
#line 4636 
    printk("enter\n");
  }
  else ;
  
#line 4638 
  priv->rx_queue.oldest = 0U;
  
#line 4639 
  priv->rx_queue.available = priv->rx_queue.entries + 4294967295U;
  
#line 4640 
  priv->rx_queue.next = priv->rx_queue.entries + 4294967295U;
  
#line 4642 
  tmp_1 = 0;
  
#line 4642 
  priv->rxq_stat.hi = tmp_1;
  
#line 4642 
  priv->rxq_stat.value = tmp_1;
  
#line 4642 
  priv->rxq_stat.lo = 2147483647;
  
#line 4643 
  priv->rxq_stat.value = (int)priv->rx_queue.available;
  
#line 4643 
  if (priv->rxq_stat.value > priv->rxq_stat.hi) 
#line 4643 
                                                priv->rxq_stat.hi = priv->rxq_stat.value; else ;
  
#line 4643 
  if (priv->rxq_stat.value < priv->rxq_stat.lo) 
#line 4643 
                                                priv->rxq_stat.lo = priv->rxq_stat.value; else ;
  
#line 4645 
  bd_queue_initialize(priv,& priv->rx_queue,576U,584U,672U,4000U);
  
#line 4652 
  write_register(priv->net_dev,580U,(unsigned int)priv->status_queue.nic);
  
#line 4655 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_3;
    int tmp_2;
    
#line 4655 
    tmp_2 = preempt_count();
    
#line 4655 
    if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 4655 
                                                   tmp_3 = 73; else 
#line 4655 
                                                                    tmp_3 = 85;
    
#line 4655 
    printk("\001",tmp_3,"ipw2100_rx_initialize");
    
#line 4655 
    printk("exit\n");
  }
  else ;
  
#line 4657 
  return;
}


#line 4658  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_rx_free(struct ipw2100_priv *priv)
{
  int i;
  
#line 4662 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 4662 
    tmp = preempt_count();
    
#line 4662 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 4662 
                                                 tmp_0 = 73; else 
#line 4662 
                                                                  tmp_0 = 85;
    
#line 4662 
    printk("\001",tmp_0,"ipw2100_rx_free");
    
#line 4662 
    printk("enter\n");
  }
  else ;
  
#line 4664 
  bd_queue_free(priv,& priv->rx_queue);
  
#line 4665 
  status_queue_free(priv);
  
#line 4667 
  if (priv->rx_buffers == (struct ipw2100_rx_packet *)0) 
#line 4668 
                                                         goto return_label; else ;
  
#line 4670 
  i = 0;
  
#line 4670 
  goto ldv_62252;
  ldv_62251: 
#line 4671 
  ;
  
#line 4671 
  if ((priv->rx_buffers + i)->rxp != (struct ipw2100_rx *)0) {
    
#line 4672 
    pci_unmap_single(priv->pci_dev,(priv->rx_buffers + i)->dma_addr,2340UL,2);
    
#line 4676 
    consume_skb((priv->rx_buffers + i)->skb);
  }
  else ;
  
#line 4670 
  i += 1;
  ldv_62252: 
#line 4671 
  ;
  
#line 4670 
  if (i <= 255) 
#line 4672 
                goto ldv_62251; else 
#line 4675 
                                     goto ldv_62253;
  ldv_62253: 
#line 4676 
  ;
  
#line 4680 
  kfree((void const *)priv->rx_buffers);
  
#line 4681 
  priv->rx_buffers = (struct ipw2100_rx_packet *)0;
  
#line 4683 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 4683 
    tmp_1 = preempt_count();
    
#line 4683 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 4683 
                                                   tmp_2 = 73; else 
#line 4683 
                                                                    tmp_2 = 85;
    
#line 4683 
    printk("\001",tmp_2,"ipw2100_rx_free");
    
#line 4683 
    printk("exit\n");
  }
  else ;
  return_label: 
#line 4685 
                return;
}


#line 4686  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_read_mac_address(struct ipw2100_priv *priv)
{
  int __retres;
  u8 addr[6U];
  int err;
  
#line 4688 
  u32 length = 6U;
  
#line 4693 
  err = ipw2100_get_ordinal(priv,1001U,(void *)(& addr),& length);
  
#line 4694 
  if (err != 0) {
    
#line 4695 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_0;
      int tmp;
      
#line 4695 
      tmp = preempt_count();
      
#line 4695 
      if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 4695 
                                                   tmp_0 = 73; else 
#line 4695 
                                                                    tmp_0 = 85;
      
#line 4695 
      printk("\001",tmp_0,"ipw2100_read_mac_address");
      
#line 4695 
      printk("MAC address read failed\n");
    }
    else ;
    
#line 4696 
    __retres = -5;
    
#line 4696 
    goto return_label;
  }
  else ;
  
#line 4699 
  memcpy((void *)(priv->net_dev)->dev_addr,(void const *)(& addr),6UL);
  
#line 4700 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 4700 
    tmp_1 = preempt_count();
    
#line 4700 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 4700 
                                                   tmp_2 = 73; else 
#line 4700 
                                                                    tmp_2 = 85;
    
#line 4700 
    printk("\001",tmp_2,"ipw2100_read_mac_address");
    
#line 4700 
    printk("card MAC is %pM\n",(priv->net_dev)->dev_addr);
  }
  else ;
  
#line 4702 
  __retres = 0;
  return_label: 
#line 4702 
                return __retres;
}


#line 4711  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_set_mac_address(struct ipw2100_priv *priv, int batch_mode)
{
  int err;
  
#line 4713 
  struct host_command cmd = {.host_command = 11U, .host_command1 = 0U, .host_command_sequence = 0U, .host_command_length = 6U, .host_command_parameters = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U}};
  
#line 4720 
  if ((ipw2100_debug_level & 32U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 4720 
    tmp = preempt_count();
    
#line 4720 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 4720 
                                                 tmp_0 = 73; else 
#line 4720 
                                                                  tmp_0 = 85;
    
#line 4720 
    printk("\001",tmp_0,"ipw2100_set_mac_address");
    
#line 4720 
    printk("SET_MAC_ADDRESS\n");
  }
  else ;
  
#line 4722 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 4722 
    tmp_1 = preempt_count();
    
#line 4722 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 4722 
                                                   tmp_2 = 73; else 
#line 4722 
                                                                    tmp_2 = 85;
    
#line 4722 
    printk("\001",tmp_2,"ipw2100_set_mac_address");
    
#line 4722 
    printk("enter\n");
  }
  else ;
  
#line 4724 
  if ((priv->config & 8UL) != 0UL) {
    
#line 4725 
    memcpy((void *)(& cmd.host_command_parameters),(void const *)(& priv->mac_addr),6UL);
    
#line 4726 
    memcpy((void *)(priv->net_dev)->dev_addr,(void const *)(& priv->mac_addr),6UL);
  }
  else 
#line 4728 
       memcpy((void *)(& cmd.host_command_parameters),(void const *)(priv->net_dev)->dev_addr,6UL);
  
#line 4731 
  err = ipw2100_hw_send_command(priv,& cmd);
  
#line 4733 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_4;
    int tmp_3;
    
#line 4733 
    tmp_3 = preempt_count();
    
#line 4733 
    if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 4733 
                                                   tmp_4 = 73; else 
#line 4733 
                                                                    tmp_4 = 85;
    
#line 4733 
    printk("\001",tmp_4,"ipw2100_set_mac_address");
    
#line 4733 
    printk("exit\n");
  }
  else ;
  
#line 4734 
  return err;
}


#line 4737  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_set_port_type(struct ipw2100_priv *priv, u32 port_type, int batch_mode)
{
  int __retres;
  int err;
  
#line 4740 
  struct host_command cmd = {.host_command = 12U, .host_command1 = 0U, .host_command_sequence = 0U, .host_command_length = 4U, .host_command_parameters = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U}};
  
#line 4747 
  switch (port_type) {
    case (u32)2: 
#line 4748 
    ;
    
#line 4749 
    cmd.host_command_parameters[0] = 1U;
    
#line 4750 
    goto ldv_62276;
    case (u32)1: 
#line 4751 
    ;
    
#line 4752 
    cmd.host_command_parameters[0] = 3U;
    
#line 4753 
    goto ldv_62276;
  }
  ldv_62276: 
#line 4756 
  ;
  
#line 4756 
  if ((ipw2100_debug_level & 32U) != 0U) {
    int tmp_0;
    int tmp;
    char *tmp_1;
    
#line 4756 
    tmp = preempt_count();
    
#line 4756 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 4756 
                                                 tmp_0 = 73; else 
#line 4756 
                                                                  tmp_0 = 85;
    
#line 4756 
    printk("\001",tmp_0,"ipw2100_set_port_type");
    
#line 4756 
    if (port_type == 3U) 
#line 4756 
                         tmp_1 = (char *)"Ad-Hoc"; else 
#line 4756 
                                                        tmp_1 = (char *)"Managed";
    
#line 4756 
    printk("PORT_TYPE: %s\n",tmp_1);
  }
  else ;
  
#line 4759 
  if (batch_mode == 0) {
    
#line 4760 
    err = ipw2100_disable_adapter(priv);
    
#line 4761 
    if (err != 0) {
      
#line 4762 
      printk("\001",(char *)(& (priv->net_dev)->name),err);
      
#line 4765 
      __retres = err;
      
#line 4765 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 4770 
  err = ipw2100_hw_send_command(priv,& cmd);
  
#line 4772 
  if (batch_mode == 0) 
#line 4773 
                       ipw2100_enable_adapter(priv); else ;
  
#line 4775 
  __retres = err;
  return_label: 
#line 4775 
                return __retres;
}


#line 4778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_set_channel(struct ipw2100_priv *priv, u32 channel_0, int batch_mode)
{
  int __retres;
  int err;
  
#line 4781 
  struct host_command cmd = {.host_command = 14U, .host_command1 = 0U, .host_command_sequence = 0U, .host_command_length = 4U, .host_command_parameters = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U}};
  
#line 4788 
  cmd.host_command_parameters[0] = channel_0;
  
#line 4790 
  if ((ipw2100_debug_level & 32U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 4790 
    tmp = preempt_count();
    
#line 4790 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 4790 
                                                 tmp_0 = 73; else 
#line 4790 
                                                                  tmp_0 = 85;
    
#line 4790 
    printk("\001",tmp_0,"ipw2100_set_channel");
    
#line 4790 
    printk("CHANNEL: %d\n",channel_0);
  }
  else ;
  
#line 4793 
  if ((priv->ieee)->iw_mode == 2) {
    
#line 4794 
    __retres = 0;
    
#line 4794 
    goto return_label;
  }
  else ;
  
#line 4796 
  if (channel_0 > 14U) {
    
#line 4798 
    __retres = -22;
    
#line 4798 
    goto return_label;
  }
  else ;
  
#line 4800 
  if (batch_mode == 0) {
    
#line 4801 
    err = ipw2100_disable_adapter(priv);
    
#line 4802 
    if (err != 0) {
      
#line 4803 
      __retres = err;
      
#line 4803 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 4806 
  err = ipw2100_hw_send_command(priv,& cmd);
  
#line 4807 
  if (err != 0) {
    
#line 4808 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 4808 
      tmp_1 = preempt_count();
      
#line 4808 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 4808 
                                                     tmp_2 = 73; else 
                                                                   
#line 4808 
                                                                   tmp_2 = 85;
      
#line 4808 
      printk("\001",tmp_2,"ipw2100_set_channel");
      
#line 4808 
      printk("Failed to set channel to %d",channel_0);
    }
    else ;
    
#line 4809 
    __retres = err;
    
#line 4809 
    goto return_label;
  }
  else ;
  
#line 4812 
  if (channel_0 != 0U) 
#line 4813 
                       priv->config |= 1UL; else 
#line 4815 
                                                 priv->config &= 18446744073709551614UL;
  
#line 4817 
  priv->channel = (unsigned char)channel_0;
  
#line 4819 
  if (batch_mode == 0) {
    
#line 4820 
    err = ipw2100_enable_adapter(priv);
    
#line 4821 
    if (err != 0) {
      
#line 4822 
      __retres = err;
      
#line 4822 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 4825 
  __retres = 0;
  return_label: 
#line 4825 
                return __retres;
}


#line 4828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_system_config(struct ipw2100_priv *priv, int batch_mode)
{
  int __retres;
  u32 ibss_mask;
  int err;
  
#line 4830 
  struct host_command cmd = {.host_command = 6U, .host_command1 = 0U, .host_command_sequence = 0U, .host_command_length = 12U, .host_command_parameters = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U}};
  
#line 4835 
  u32 len = 4U;
  
#line 4840 
  if (batch_mode == 0) {
    
#line 4841 
    err = ipw2100_disable_adapter(priv);
    
#line 4842 
    if (err != 0) {
      
#line 4843 
      __retres = err;
      
#line 4843 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 4846 
  if ((priv->ieee)->iw_mode == 1) 
#line 4847 
                                  cmd.host_command_parameters[0] |= 32U; else ;
  
#line 4849 
  cmd.host_command_parameters[0] |= 114688U;
  
#line 4852 
  if ((priv->config & 16UL) == 0UL) 
#line 4853 
                                    cmd.host_command_parameters[0] |= 16U; else ;
  
#line 4855 
  err = ipw2100_get_ordinal(priv,207U,(void *)(& ibss_mask),& len);
  
#line 4858 
  if (err != 0) 
#line 4859 
                ibss_mask = 34815U; else ;
  
#line 4861 
  cmd.host_command_parameters[1] = 16383U;
  
#line 4862 
  cmd.host_command_parameters[2] = ibss_mask & 16383U;
  
#line 4867 
  err = ipw2100_hw_send_command(priv,& cmd);
  
#line 4868 
  if (err != 0) {
    
#line 4869 
    __retres = err;
    
#line 4869 
    goto return_label;
  }
  else ;
  
#line 4880 
  if (batch_mode == 0) {
    
#line 4881 
    err = ipw2100_enable_adapter(priv);
    
#line 4882 
    if (err != 0) {
      
#line 4883 
      __retres = err;
      
#line 4883 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 4886 
  __retres = 0;
  return_label: 
#line 4886 
                return __retres;
}


#line 4889  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_set_tx_rates(struct ipw2100_priv *priv, u32 rate, int batch_mode)
{
  int __retres;
  int err;
  
#line 4892 
  struct host_command cmd = {.host_command = 19U, .host_command1 = 0U, .host_command_sequence = 0U, .host_command_length = 4U, .host_command_parameters = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U}};
  
#line 4899 
  cmd.host_command_parameters[0] = rate & 15U;
  
#line 4901 
  if (batch_mode == 0) {
    
#line 4902 
    err = ipw2100_disable_adapter(priv);
    
#line 4903 
    if (err != 0) {
      
#line 4904 
      __retres = err;
      
#line 4904 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 4908 
  ipw2100_hw_send_command(priv,& cmd);
  
#line 4911 
  cmd.host_command = 18U;
  
#line 4912 
  ipw2100_hw_send_command(priv,& cmd);
  
#line 4915 
  cmd.host_command = 62U;
  
#line 4916 
  ipw2100_hw_send_command(priv,& cmd);
  
#line 4918 
  if (batch_mode == 0) {
    
#line 4919 
    err = ipw2100_enable_adapter(priv);
    
#line 4920 
    if (err != 0) {
      
#line 4921 
      __retres = err;
      
#line 4921 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 4924 
  priv->tx_rates = rate;
  
#line 4926 
  __retres = 0;
  return_label: 
#line 4926 
                return __retres;
}


#line 4929  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_set_power_mode(struct ipw2100_priv *priv, int power_level)
{
  int __retres;
  int err;
  
#line 4931 
  struct host_command cmd = {.host_command = 17U, .host_command1 = 0U, .host_command_sequence = 0U, .host_command_length = 4U, .host_command_parameters = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U}};
  
#line 4938 
  cmd.host_command_parameters[0] = (unsigned int)power_level;
  
#line 4940 
  err = ipw2100_hw_send_command(priv,& cmd);
  
#line 4941 
  if (err != 0) {
    
#line 4942 
    __retres = err;
    
#line 4942 
    goto return_label;
  }
  else ;
  
#line 4944 
  if (power_level == 0) 
#line 4945 
                        priv->power_mode &= 15; else 
#line 4947 
                                                     priv->power_mode = power_level | 16;
  
#line 4961 
  __retres = 0;
  return_label: 
#line 4961 
                return __retres;
}


#line 4964  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_set_rts_threshold(struct ipw2100_priv *priv, u32 threshold)
{
  int __retres;
  int err;
  
#line 4966 
  struct host_command cmd = {.host_command = 15U, .host_command1 = 0U, .host_command_sequence = 0U, .host_command_length = 4U, .host_command_parameters = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U}};
  
#line 4973 
  if (threshold < (u32)0) 
#line 4974 
                          cmd.host_command_parameters[0] = 2304U; else 
                                                                    
#line 4976 
                                                                    cmd.host_command_parameters[0] = threshold & 2147483647U;
  
#line 4978 
  err = ipw2100_hw_send_command(priv,& cmd);
  
#line 4979 
  if (err != 0) {
    
#line 4980 
    __retres = err;
    
#line 4980 
    goto return_label;
  }
  else ;
  
#line 4982 
  priv->rts_threshold = threshold;
  
#line 4984 
  __retres = 0;
  return_label: 
#line 4984 
                return __retres;
}


#line 5028  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_set_short_retry(struct ipw2100_priv *priv, u32 retry)
{
  int __retres;
  int err;
  
#line 5030 
  struct host_command cmd = {.host_command = 51U, .host_command1 = 0U, .host_command_sequence = 0U, .host_command_length = 4U, .host_command_parameters = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U}};
  
#line 5037 
  cmd.host_command_parameters[0] = retry;
  
#line 5039 
  err = ipw2100_hw_send_command(priv,& cmd);
  
#line 5040 
  if (err != 0) {
    
#line 5041 
    __retres = err;
    
#line 5041 
    goto return_label;
  }
  else ;
  
#line 5043 
  priv->short_retry_limit = (int)retry;
  
#line 5045 
  __retres = 0;
  return_label: 
#line 5045 
                return __retres;
}


#line 5048  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_set_long_retry(struct ipw2100_priv *priv, u32 retry)
{
  int __retres;
  int err;
  
#line 5050 
  struct host_command cmd = {.host_command = 52U, .host_command1 = 0U, .host_command_sequence = 0U, .host_command_length = 4U, .host_command_parameters = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U}};
  
#line 5057 
  cmd.host_command_parameters[0] = retry;
  
#line 5059 
  err = ipw2100_hw_send_command(priv,& cmd);
  
#line 5060 
  if (err != 0) {
    
#line 5061 
    __retres = err;
    
#line 5061 
    goto return_label;
  }
  else ;
  
#line 5063 
  priv->long_retry_limit = (int)retry;
  
#line 5065 
  __retres = 0;
  return_label: 
#line 5065 
                return __retres;
}


#line 5068  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_set_mandatory_bssid(struct ipw2100_priv *priv, u8 *bssid, int batch_mode)
{
  int __retres;
  int tmp;
  int err;
  
#line 5074 
  if (bssid == (u8 *)0U) 
#line 5074 
                         tmp = 0; else 
#line 5074 
                                       tmp = 6;
  
#line 5071 
  struct host_command cmd = {.host_command = 9U, .host_command1 = 0U, .host_command_sequence = 0U, .host_command_length = (unsigned int)tmp, .host_command_parameters = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U}};
  
#line 5079 
  if (bssid != (u8 *)0U) {
    
#line 5080 
    if ((ipw2100_debug_level & 32U) != 0U) {
      int tmp_1;
      int tmp_0;
      
#line 5080 
      tmp_0 = preempt_count();
      
#line 5080 
      if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 5080 
                                                     tmp_1 = 73; else 
                                                                   
#line 5080 
                                                                   tmp_1 = 85;
      
#line 5080 
      printk("\001",tmp_1,"ipw2100_set_mandatory_bssid");
      
#line 5080 
      printk("MANDATORY_BSSID: %pM\n",bssid);
    }
    else ;
  }
  else 
    
#line 5082 
    if ((ipw2100_debug_level & 32U) != 0U) {
      int tmp_3;
      int tmp_2;
      
#line 5082 
      tmp_2 = preempt_count();
      
#line 5082 
      if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 5082 
                                                     tmp_3 = 73; else 
                                                                   
#line 5082 
                                                                   tmp_3 = 85;
      
#line 5082 
      printk("\001",tmp_3,"ipw2100_set_mandatory_bssid");
      
#line 5082 
      printk("MANDATORY_BSSID: <clear>\n");
    }
    else ;
  
#line 5085 
  if (bssid != (u8 *)0U) 
#line 5086 
                         memcpy((void *)(& cmd.host_command_parameters),(void const *)bssid,6UL); else ;
  
#line 5088 
  if (batch_mode == 0) {
    
#line 5089 
    err = ipw2100_disable_adapter(priv);
    
#line 5090 
    if (err != 0) {
      
#line 5091 
      __retres = err;
      
#line 5091 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 5094 
  err = ipw2100_hw_send_command(priv,& cmd);
  
#line 5096 
  if (batch_mode == 0) 
#line 5097 
                       ipw2100_enable_adapter(priv); else ;
  
#line 5099 
  __retres = err;
  return_label: 
#line 5099 
                return __retres;
}


#line 5102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_disassociate_bssid(struct ipw2100_priv *priv)
{
  int err;
  int len;
  
#line 5104 
  struct host_command cmd = {.host_command = 68U, .host_command1 = 0U, .host_command_sequence = 0U, .host_command_length = 6U, .host_command_parameters = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U}};
  
#line 5112 
  if ((ipw2100_debug_level & 32U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 5112 
    tmp = preempt_count();
    
#line 5112 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 5112 
                                                 tmp_0 = 73; else 
#line 5112 
                                                                  tmp_0 = 85;
    
#line 5112 
    printk("\001",tmp_0,"ipw2100_disassociate_bssid");
    
#line 5112 
    printk("DISASSOCIATION_BSSID\n");
  }
  else ;
  
#line 5114 
  len = 6;
  
#line 5119 
  memcpy((void *)(& cmd.host_command_parameters),(void const *)(& priv->bssid),6UL);
  
#line 5121 
  err = ipw2100_hw_send_command(priv,& cmd);
  
#line 5123 
  return err;
}


#line 5126 
static int ipw2100_set_wpa_ie(struct ipw2100_priv *priv, struct ipw2100_wpa_assoc_frame *wpa_frame, int batch_mode);


#line 5130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_set_wpa_ie(struct ipw2100_priv *priv, struct ipw2100_wpa_assoc_frame *wpa_frame, int batch_mode)
{
  int __retres;
  int err;
  
#line 5134 
  struct host_command cmd = {.host_command = 69U, .host_command1 = 0U, .host_command_sequence = 0U, .host_command_length = 400U, .host_command_parameters = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U}};
  
#line 5141 
  if ((ipw2100_debug_level & 32U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 5141 
    tmp = preempt_count();
    
#line 5141 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 5141 
                                                 tmp_0 = 73; else 
#line 5141 
                                                                  tmp_0 = 85;
    
#line 5141 
    printk("\001",tmp_0,"ipw2100_set_wpa_ie");
    
#line 5141 
    printk("SET_WPA_IE\n");
  }
  else ;
  
#line 5143 
  if (batch_mode == 0) {
    
#line 5144 
    err = ipw2100_disable_adapter(priv);
    
#line 5145 
    if (err != 0) {
      
#line 5146 
      __retres = err;
      
#line 5146 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 5149 
  memcpy((void *)(& cmd.host_command_parameters),(void const *)wpa_frame,400UL);
  
#line 5152 
  err = ipw2100_hw_send_command(priv,& cmd);
  
#line 5154 
  if (batch_mode == 0) {
    int tmp_1;
    
#line 5155 
    tmp_1 = ipw2100_enable_adapter(priv);
    
#line 5155 
    if (tmp_1 != 0) 
#line 5156 
                    err = -5; else ;
  }
  else ;
  
#line 5159 
  __retres = err;
  return_label: 
#line 5159 
                return __retres;
}


#line 5170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_set_security_information(struct ipw2100_priv *priv, int auth_mode, int security_level, int unicast_using_group, int batch_mode)
{
  int __retres;
  int err;
  
#line 5176 
  struct host_command cmd = {.host_command = 67U, .host_command1 = 0U, .host_command_sequence = 0U, .host_command_length = 9U, .host_command_parameters = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U}};
  
#line 5181 
  struct security_info_params *security = (struct security_info_params *)(& cmd.host_command_parameters);
  
#line 5184 
  memset((void *)security,0,9UL);
  
#line 5190 
  security->auth_mode = (unsigned char)auth_mode;
  
#line 5191 
  security->unicast_using_group = (unsigned char)unicast_using_group;
  
#line 5193 
  switch (security_level) {
    default: 
#line 5194 
    ;
    case 0: 
#line 5195 
    ;
    
#line 5196 
    security->allowed_ciphers = 1U;
    
#line 5197 
    goto ldv_62371;
    case 1: 
#line 5198 
    ;
    
#line 5199 
    security->allowed_ciphers = 34U;
    
#line 5201 
    goto ldv_62371;
    case 2: 
#line 5202 
    ;
    
#line 5203 
    security->allowed_ciphers = 38U;
    
#line 5205 
    goto ldv_62371;
    case 3: 
#line 5206 
    ;
    
#line 5207 
    security->allowed_ciphers = 98U;
    
#line 5209 
    goto ldv_62371;
    case 4: 
#line 5210 
    ;
    
#line 5211 
    security->allowed_ciphers = 54U;
    
#line 5213 
    goto ldv_62371;
  }
  ldv_62371: 
#line 5216 
  ;
  
#line 5216 
  if ((ipw2100_debug_level & 32U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 5216 
    tmp = preempt_count();
    
#line 5216 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 5216 
                                                 tmp_0 = 73; else 
#line 5216 
                                                                  tmp_0 = 85;
    
#line 5216 
    printk("\001",tmp_0,"ipw2100_set_security_information");
    
#line 5216 
    printk("SET_SECURITY_INFORMATION: auth:%d cipher:0x%02X (level %d)\n",(int)security->auth_mode,security->allowed_ciphers,security_level);
  }
  else ;
  
#line 5220 
  security->replay_counters_number = (unsigned char)0U;
  
#line 5222 
  if (batch_mode == 0) {
    
#line 5223 
    err = ipw2100_disable_adapter(priv);
    
#line 5224 
    if (err != 0) {
      
#line 5225 
      __retres = err;
      
#line 5225 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 5228 
  err = ipw2100_hw_send_command(priv,& cmd);
  
#line 5230 
  if (batch_mode == 0) 
#line 5231 
                       ipw2100_enable_adapter(priv); else ;
  
#line 5233 
  __retres = err;
  return_label: 
#line 5233 
                return __retres;
}


#line 5236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_set_tx_power(struct ipw2100_priv *priv, u32 tx_power)
{
  int __retres;
  
#line 5238 
  struct host_command cmd = {.host_command = 36U, .host_command1 = 0U, .host_command_sequence = 0U, .host_command_length = 4U, .host_command_parameters = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U}};
  
#line 5243 
  int err = 0;
  
#line 5244 
  u32 tmp = tx_power;
  
#line 5246 
  if (tx_power != 32U) 
#line 5247 
                       tmp = ((tx_power + 12U) * 16U) / 28U; else ;
  
#line 5250 
  cmd.host_command_parameters[0] = tmp;
  
#line 5252 
  if ((priv->ieee)->iw_mode == 1) 
#line 5253 
                                  err = ipw2100_hw_send_command(priv,& cmd); else ;
  
#line 5254 
  if (err == 0) 
#line 5255 
                priv->tx_power = (int)tx_power; else ;
  
#line 5257 
  __retres = 0;
  
#line 5257 
  return __retres;
}


#line 5260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_set_ibss_beacon_interval(struct ipw2100_priv *priv, u32 interval, int batch_mode)
{
  int __retres;
  int err;
  
#line 5263 
  struct host_command cmd = {.host_command = 29U, .host_command1 = 0U, .host_command_sequence = 0U, .host_command_length = 4U, .host_command_parameters = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U}};
  
#line 5270 
  cmd.host_command_parameters[0] = interval;
  
#line 5272 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 5272 
    tmp = preempt_count();
    
#line 5272 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 5272 
                                                 tmp_0 = 73; else 
#line 5272 
                                                                  tmp_0 = 85;
    
#line 5272 
    printk("\001",tmp_0,"ipw2100_set_ibss_beacon_interval");
    
#line 5272 
    printk("enter\n");
  }
  else ;
  
#line 5274 
  if ((priv->ieee)->iw_mode == 1) {
    
#line 5275 
    if (batch_mode == 0) {
      
#line 5276 
      err = ipw2100_disable_adapter(priv);
      
#line 5277 
      if (err != 0) {
        
#line 5278 
        __retres = err;
        
#line 5278 
        goto return_label;
      }
      else ;
    }
    else ;
    
#line 5281 
    ipw2100_hw_send_command(priv,& cmd);
    
#line 5283 
    if (batch_mode == 0) {
      
#line 5284 
      err = ipw2100_enable_adapter(priv);
      
#line 5285 
      if (err != 0) {
        
#line 5286 
        __retres = err;
        
#line 5286 
        goto return_label;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 5290 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 5290 
    tmp_1 = preempt_count();
    
#line 5290 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 5290 
                                                   tmp_2 = 73; else 
#line 5290 
                                                                    tmp_2 = 85;
    
#line 5290 
    printk("\001",tmp_2,"ipw2100_set_ibss_beacon_interval");
    
#line 5290 
    printk("exit\n");
  }
  else ;
  
#line 5292 
  __retres = 0;
  return_label: 
#line 5292 
                return __retres;
}


#line 5295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_queues_initialize(struct ipw2100_priv *priv)
{
  
#line 5297 
  ipw2100_tx_initialize(priv);
  
#line 5298 
  ipw2100_rx_initialize(priv);
  
#line 5299 
  ipw2100_msg_initialize(priv);
  
#line 5300 
  return;
}


#line 5302  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_queues_free(struct ipw2100_priv *priv)
{
  
#line 5304 
  ipw2100_tx_free(priv);
  
#line 5305 
  ipw2100_rx_free(priv);
  
#line 5306 
  ipw2100_msg_free(priv);
  
#line 5307 
  return;
}


#line 5309  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_queues_allocate(struct ipw2100_priv *priv)
{
  int __retres;
  int tmp;
  
#line 5311 
  tmp = ipw2100_tx_allocate(priv);
  
#line 5311 
  if (tmp != 0) 
#line 5313 
                goto fail;
  else {
    int tmp_0;
    
#line 5311 
    tmp_0 = ipw2100_rx_allocate(priv);
    
#line 5311 
    if (tmp_0 != 0) 
#line 5313 
                    goto fail;
    else {
      int tmp_1;
      
#line 5312 
      tmp_1 = ipw2100_msg_allocate(priv);
      
#line 5312 
      if (tmp_1 != 0) 
#line 5313 
                      goto fail; else ;
    }
  }
  
#line 5315 
  __retres = 0;
  
#line 5315 
  goto return_label;
  fail: 
#line 5317 
  ;
  
#line 5318 
  ipw2100_tx_free(priv);
  
#line 5319 
  ipw2100_rx_free(priv);
  
#line 5320 
  ipw2100_msg_free(priv);
  
#line 5321 
  __retres = -12;
  return_label: 
#line 5321 
                return __retres;
}


#line 5326  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_set_wep_flags(struct ipw2100_priv *priv, u32 flags, int batch_mode)
{
  int __retres;
  int err;
  
#line 5329 
  struct host_command cmd = {.host_command = 26U, .host_command1 = 0U, .host_command_sequence = 0U, .host_command_length = 4U, .host_command_parameters = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U}};
  
#line 5336 
  cmd.host_command_parameters[0] = flags;
  
#line 5338 
  if ((ipw2100_debug_level & 32U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 5338 
    tmp = preempt_count();
    
#line 5338 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 5338 
                                                 tmp_0 = 73; else 
#line 5338 
                                                                  tmp_0 = 85;
    
#line 5338 
    printk("\001",tmp_0,"ipw2100_set_wep_flags");
    
#line 5338 
    printk("WEP_FLAGS: flags = 0x%08X\n",flags);
  }
  else ;
  
#line 5340 
  if (batch_mode == 0) {
    
#line 5341 
    err = ipw2100_disable_adapter(priv);
    
#line 5342 
    if (err != 0) {
      
#line 5343 
      printk("\001",(char *)(& (priv->net_dev)->name),err);
      
#line 5346 
      __retres = err;
      
#line 5346 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 5351 
  err = ipw2100_hw_send_command(priv,& cmd);
  
#line 5353 
  if (batch_mode == 0) 
#line 5354 
                       ipw2100_enable_adapter(priv); else ;
  
#line 5356 
  __retres = err;
  return_label: 
#line 5356 
                return __retres;
}


#line 5386  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_set_key(struct ipw2100_priv *priv, int idx, char *key, int len, int batch_mode)
{
  int __retres;
  int tmp_0;
  int err;
  
#line 5389 
  if (len != 0) {
    int tmp;
    
#line 5389 
    if (len <= 5) 
#line 5389 
                  tmp = 5; else 
#line 5389 
                                tmp = 13;
    
#line 5389 
    tmp_0 = tmp;
  }
  else 
#line 5389 
       tmp_0 = 0;
  
#line 5389 
  int keylen = tmp_0;
  
#line 5390 
  struct host_command cmd = {.host_command = 20U, .host_command1 = 0U, .host_command_sequence = 0U, .host_command_length = 15U, .host_command_parameters = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U}};
  
#line 5395 
  struct ipw2100_wep_key *wep_key = (struct ipw2100_wep_key *)(& cmd.host_command_parameters);
  
#line 5398 
  if ((ipw2100_debug_level & 32U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 5398 
    tmp_1 = preempt_count();
    
#line 5398 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 5398 
                                                   tmp_2 = 73; else 
#line 5398 
                                                                    tmp_2 = 85;
    
#line 5398 
    printk("\001",tmp_2,"ipw2100_set_key");
    
#line 5398 
    printk("WEP_KEY_INFO: index = %d, len = %d/%d\n",idx,keylen,len);
  }
  else ;
  
#line 5405 
  wep_key->idx = (unsigned char)idx;
  
#line 5406 
  wep_key->len = (unsigned char)keylen;
  
#line 5408 
  if (keylen != 0) {
    
#line 5409 
    memcpy((void *)(& wep_key->key),(void const *)key,(unsigned long)len);
    
#line 5410 
    memset((void *)(& wep_key->key) + len,0,(unsigned long)(keylen - len));
  }
  else ;
  
#line 5414 
  if (keylen == 0) {
    
#line 5415 
    if ((ipw2100_debug_level & 4194304U) != 0U) {
      int tmp_4;
      int tmp_3;
      
#line 5415 
      tmp_3 = preempt_count();
      
#line 5415 
      if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 5415 
                                                     tmp_4 = 73; else 
                                                                   
#line 5415 
                                                                   tmp_4 = 85;
      
#line 5415 
      printk("\001",tmp_4,"ipw2100_set_key");
      
#line 5415 
      printk("%s: Clearing key %d\n",(char *)(& (priv->net_dev)->name),(int)wep_key->idx);
    }
    else ;
  }
  else 
    
#line 5417 
    if (keylen == 5) {
      
#line 5418 
      if ((ipw2100_debug_level & 4194304U) != 0U) {
        int tmp_6;
        int tmp_5;
        
#line 5418 
        tmp_5 = preempt_count();
        
#line 5418 
        if (((unsigned long)tmp_5 & 2096896UL) != 0UL) 
#line 5418 
                                                       tmp_6 = 73; else 
                                                                    
#line 5418 
                                                                    tmp_6 = 85;
        
#line 5418 
        printk("\001",tmp_6,"ipw2100_set_key");
        
#line 5418 
        printk("%s: idx: %d, len: %d key: ",(char *)(& (priv->net_dev)->name),(int)wep_key->idx,(int)wep_key->len,(int)wep_key->key[0],(int)wep_key->key[1],(int)wep_key->key[2],(int)wep_key->key[3],(int)wep_key->key[4]);
      }
      else ;
    }
    else 
      
#line 5422 
      if ((ipw2100_debug_level & 4194304U) != 0U) {
        int tmp_8;
        int tmp_7;
        
#line 5422 
        tmp_7 = preempt_count();
        
#line 5422 
        if (((unsigned long)tmp_7 & 2096896UL) != 0UL) 
#line 5422 
                                                       tmp_8 = 73; else 
                                                                    
#line 5422 
                                                                    tmp_8 = 85;
        
#line 5422 
        printk("\001",tmp_8,"ipw2100_set_key");
        
#line 5422 
        printk("%s: idx: %d, len: %d key: ",(char *)(& (priv->net_dev)->name),(int)wep_key->idx,(int)wep_key->len,(int)wep_key->key[0],(int)wep_key->key[1],(int)wep_key->key[2],(int)wep_key->key[3],(int)wep_key->key[4],(int)wep_key->key[5],(int)wep_key->key[6],(int)wep_key->key[7],(int)wep_key->key[8],(int)wep_key->key[9],(int)wep_key->key[10]);
      }
      else ;
  
#line 5427 
  if (batch_mode == 0) {
    
#line 5428 
    err = ipw2100_disable_adapter(priv);
    
#line 5430 
    if (err != 0) {
      
#line 5431 
      printk("\001",(char *)(& (priv->net_dev)->name),err);
      
#line 5434 
      __retres = err;
      
#line 5434 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 5439 
  err = ipw2100_hw_send_command(priv,& cmd);
  
#line 5441 
  if (batch_mode == 0) {
    
#line 5442 
    int err2 = ipw2100_enable_adapter(priv);
    
#line 5443 
    if (err == 0) 
#line 5444 
                  err = err2; else ;
  }
  else ;
  
#line 5446 
  __retres = err;
  return_label: 
#line 5446 
                return __retres;
}


#line 5449  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_set_key_index(struct ipw2100_priv *priv, int idx, int batch_mode)
{
  int __retres;
  int err;
  
#line 5452 
  struct host_command cmd = {.host_command = 25U, .host_command1 = 0U, .host_command_sequence = 0U, .host_command_length = 4U, .host_command_parameters = {(unsigned int)idx}};
  
#line 5460 
  if ((ipw2100_debug_level & 32U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 5460 
    tmp = preempt_count();
    
#line 5460 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 5460 
                                                 tmp_0 = 73; else 
#line 5460 
                                                                  tmp_0 = 85;
    
#line 5460 
    printk("\001",tmp_0,"ipw2100_set_key_index");
    
#line 5460 
    printk("WEP_KEY_INDEX: index = %d\n",idx);
  }
  else ;
  
#line 5462 
  if ((unsigned int)idx > 3U) {
    
#line 5463 
    __retres = -22;
    
#line 5463 
    goto return_label;
  }
  else ;
  
#line 5465 
  if (batch_mode == 0) {
    
#line 5466 
    err = ipw2100_disable_adapter(priv);
    
#line 5467 
    if (err != 0) {
      
#line 5468 
      printk("\001",(char *)(& (priv->net_dev)->name),err);
      
#line 5471 
      __retres = err;
      
#line 5471 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 5476 
  err = ipw2100_hw_send_command(priv,& cmd);
  
#line 5478 
  if (batch_mode == 0) 
#line 5479 
                       ipw2100_enable_adapter(priv); else ;
  
#line 5481 
  __retres = err;
  return_label: 
#line 5481 
                return __retres;
}


#line 5484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_configure_security(struct ipw2100_priv *priv, int batch_mode)
{
  int __retres;
  int i;
  int err;
  int auth_mode;
  int sec_level;
  int use_group;
  
#line 5488 
  if ((priv->status & 4UL) == 0UL) {
    
#line 5489 
    __retres = 0;
    
#line 5489 
    goto return_label;
  }
  else ;
  
#line 5491 
  if (batch_mode == 0) {
    
#line 5492 
    err = ipw2100_disable_adapter(priv);
    
#line 5493 
    if (err != 0) {
      
#line 5494 
      __retres = err;
      
#line 5494 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 5497 
  if ((unsigned int)*((unsigned char *)(& (priv->ieee)->sec) + 0UL) == 0U) 
    
#line 5498 
    err = ipw2100_set_security_information(priv,0,0,0,1);
  else {
    
#line 5502 
    auth_mode = 0;
    
#line 5503 
    if (((int)(priv->ieee)->sec.flags & 32) != 0) {
      
#line 5504 
      if ((unsigned int)(priv->ieee)->sec.auth_mode == 1U) 
#line 5505 
                                                           auth_mode = 1;
      else 
        
#line 5506 
        if ((unsigned int)(priv->ieee)->sec.auth_mode == 128U) 
#line 5507 
                                                               auth_mode = 128; else ;
    }
    else ;
    
#line 5510 
    sec_level = 0;
    
#line 5511 
    if (((int)(priv->ieee)->sec.flags & 128) != 0) 
#line 5512 
                                                   sec_level = (int)(priv->ieee)->sec.level; else ;
    
#line 5514 
    use_group = 0;
    
#line 5515 
    if (((int)(priv->ieee)->sec.flags & 64) != 0) 
#line 5516 
                                                  use_group = (int)(priv->ieee)->sec.unicast_uses_group; else ;
    
#line 5518 
    err = ipw2100_set_security_information(priv,auth_mode,sec_level,use_group,1);
  }
  
#line 5523 
  if (err != 0) 
#line 5524 
                goto exit; else ;
  
#line 5526 
  if ((unsigned int)*((unsigned char *)(& (priv->ieee)->sec) + 0UL) != 0U) {
    
#line 5527 
    i = 0;
    
#line 5527 
    goto ldv_62446;
    ldv_62445: 
#line 5528 
    ;
    
#line 5528 
    if ((((int)(priv->ieee)->sec.flags >> i) & 1) == 0) {
      
#line 5529 
      memset((void *)(& (priv->ieee)->sec.keys[i]),0,13UL);
      
#line 5530 
      (priv->ieee)->sec.key_sizes[i] = (unsigned char)0U;
    }
    else {
      
#line 5532 
      err = ipw2100_set_key(priv,i,(char *)(& (priv->ieee)->sec.keys[i]),(int)(priv->ieee)->sec.key_sizes[i],1);
      
#line 5536 
      if (err != 0) 
#line 5537 
                    goto exit; else ;
    }
    
#line 5527 
    i += 1;
    ldv_62446: 
#line 5528 
    ;
    
#line 5527 
    if (i <= 3) 
#line 5529 
                goto ldv_62445; else 
#line 5532 
                                     goto ldv_62447;
    ldv_62447: 
#line 5533 
    ;
    
#line 5541 
    ipw2100_set_key_index(priv,(priv->ieee)->crypt_info.tx_keyidx,1);
  }
  else ;
  
#line 5546 
  err = ipw2100_set_wep_flags(priv,(unsigned int)((int)*((unsigned char *)(& (priv->ieee)->sec) + 0UL) << 1) & 8U,1);
  
#line 5550 
  if (err != 0) 
#line 5551 
                goto exit; else ;
  
#line 5553 
  priv->status &= 18446744072635809791UL;
  exit: 
#line 5555 
  ;
  
#line 5556 
  if (batch_mode == 0) 
#line 5557 
                       ipw2100_enable_adapter(priv); else ;
  
#line 5559 
  __retres = err;
  return_label: 
#line 5559 
                return __retres;
}


#line 5562  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_security_work(struct work_struct *work)
{
  struct ipw2100_priv *tmp;
  {
    
#line 5565 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 5565 
    tmp = (struct ipw2100_priv *)__mptr + 18446744073709550312U;
  }
  
#line 5564 
  struct ipw2100_priv *priv = tmp;
  
#line 5570 
  if ((priv->status & 1024UL) == 0UL && (priv->status & 1073741824UL) != 0UL) 
    
#line 5572 
    ipw2100_configure_security(priv,0); else ;
  
#line 5573 
  return;
}


#line 5575  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void shim__set_security(struct net_device *dev, struct libipw_security *sec)
{
  int i;
  
#line 5578 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 5579 
  int force_update = 0;
  
#line 5581 
  ldv_mutex_lock_109(& priv->action_mutex);
  
#line 5582 
  if ((priv->status & 32UL) == 0UL) 
#line 5583 
                                    goto done; else ;
  
#line 5585 
  i = 0;
  
#line 5585 
  goto ldv_62463;
  ldv_62462: 
#line 5586 
  ;
  
#line 5586 
  if ((((int)sec->flags >> i) & 1) != 0) {
    
#line 5587 
    (priv->ieee)->sec.key_sizes[i] = sec->key_sizes[i];
    
#line 5588 
    if ((unsigned int)sec->key_sizes[i] == 0U) 
#line 5589 
                                               (priv->ieee)->sec.flags = (unsigned short)((int)(priv->ieee)->sec.flags & ~ (1 << i)); else 
                                                                    
#line 5591 
                                                                    memcpy((void *)(& (priv->ieee)->sec.keys[i]),(void const *)(& sec->keys[i]),(unsigned long)sec->key_sizes[i]);
    
#line 5593 
    if ((unsigned int)sec->level == 1U) {
      
#line 5594 
      (priv->ieee)->sec.flags = (unsigned short)((int)(priv->ieee)->sec.flags | (1 << i));
      
#line 5595 
      priv->status |= 1073741824UL;
    }
    else 
#line 5597 
         (priv->ieee)->sec.flags = (unsigned short)((int)(priv->ieee)->sec.flags & ~ (1 << i));
  }
  else ;
  
#line 5585 
  i += 1;
  ldv_62463: 
#line 5586 
  ;
  
#line 5585 
  if (i <= 3) 
#line 5587 
              goto ldv_62462; else 
#line 5590 
                                   goto ldv_62464;
  ldv_62464: 
#line 5591 
  ;
  
#line 5601 
  if (((int)sec->flags & 16) != 0 && (int)(priv->ieee)->sec.active_key != (int)sec->active_key) {
    
#line 5604 
    (priv->ieee)->sec.active_key = sec->active_key;
    
#line 5605 
    (priv->ieee)->sec.flags = (unsigned short)((unsigned int)(priv->ieee)->sec.flags | 16U);
    
#line 5609 
    priv->status |= 1073741824UL;
  }
  else ;
  
#line 5612 
  if (((int)sec->flags & 32) != 0 && (int)(priv->ieee)->sec.auth_mode != (int)sec->auth_mode) {
    
#line 5614 
    (priv->ieee)->sec.auth_mode = sec->auth_mode;
    
#line 5615 
    (priv->ieee)->sec.flags = (unsigned short)((unsigned int)(priv->ieee)->sec.flags | 32U);
    
#line 5616 
    priv->status |= 1073741824UL;
  }
  else ;
  
#line 5619 
  if (((int)sec->flags & 256) != 0 && (int)(priv->ieee)->sec.enabled != (int)sec->enabled) {
    
#line 5620 
    (priv->ieee)->sec.flags = (unsigned short)((unsigned int)(priv->ieee)->sec.flags | 256U);
    
#line 5621 
    (priv->ieee)->sec.enabled = sec->enabled;
    
#line 5622 
    priv->status |= 1073741824UL;
    
#line 5623 
    force_update = 1;
  }
  else ;
  
#line 5626 
  if (((int)sec->flags & 512) != 0) 
#line 5627 
                                    (priv->ieee)->sec.encrypt = sec->encrypt; else ;
  
#line 5629 
  if (((int)sec->flags & 128) != 0 && (int)(priv->ieee)->sec.level != (int)sec->level) {
    
#line 5630 
    (priv->ieee)->sec.level = sec->level;
    
#line 5631 
    (priv->ieee)->sec.flags = (unsigned short)((unsigned int)(priv->ieee)->sec.flags | 128U);
    
#line 5632 
    priv->status |= 1073741824UL;
  }
  else ;
  
#line 5635 
  if ((ipw2100_debug_level & 4194304U) != 0U) {
    int tmp_1;
    int tmp_0;
    int tmp_2;
    int tmp_3;
    int tmp_4;
    int tmp_5;
    int tmp_6;
    int tmp_7;
    int tmp_8;
    int tmp_9;
    int tmp_10;
    
#line 5635 
    tmp_0 = preempt_count();
    
#line 5635 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 5635 
                                                   tmp_1 = 73; else 
#line 5635 
                                                                    tmp_1 = 85;
    
#line 5635 
    printk("\001",tmp_1,"shim__set_security");
    
#line 5635 
    if (((int)(priv->ieee)->sec.flags & 1) != 0) 
#line 5635 
                                                 tmp_2 = 49; else 
#line 5635 
                                                                  tmp_2 = 48;
    
#line 5635 
    if (((int)(priv->ieee)->sec.flags & 2) != 0) 
#line 5635 
                                                 tmp_3 = 49; else 
#line 5635 
                                                                  tmp_3 = 48;
    
#line 5635 
    if (((int)(priv->ieee)->sec.flags & 4) != 0) 
#line 5635 
                                                 tmp_4 = 49; else 
#line 5635 
                                                                  tmp_4 = 48;
    
#line 5635 
    if (((int)(priv->ieee)->sec.flags & 8) != 0) 
#line 5635 
                                                 tmp_5 = 49; else 
#line 5635 
                                                                  tmp_5 = 48;
    
#line 5635 
    if (((int)(priv->ieee)->sec.flags & 16) != 0) 
#line 5635 
                                                  tmp_6 = 49; else 
#line 5635 
                                                                   tmp_6 = 48;
    
#line 5635 
    if (((int)(priv->ieee)->sec.flags & 32) != 0) 
#line 5635 
                                                  tmp_7 = 49; else 
#line 5635 
                                                                   tmp_7 = 48;
    
#line 5635 
    if (((int)(priv->ieee)->sec.flags & 64) != 0) 
#line 5635 
                                                  tmp_8 = 49; else 
#line 5635 
                                                                   tmp_8 = 48;
    
#line 5635 
    if (((int)(priv->ieee)->sec.flags & 128) != 0) 
#line 5635 
                                                   tmp_9 = 49; else 
#line 5635 
                                                                    tmp_9 = 48;
    
#line 5635 
    if (((int)(priv->ieee)->sec.flags & 256) != 0) 
#line 5635 
                                                   tmp_10 = 49; else 
                                                                  
#line 5635 
                                                                  tmp_10 = 48;
    
#line 5635 
    printk("Security flags: %c %c%c%c%c %c%c%c%c\n",tmp_10,tmp_9,tmp_8,tmp_7,tmp_6,tmp_5,tmp_4,tmp_3,tmp_2);
  }
  else ;
  
#line 5651 
  if ((priv->status & 1536UL) == 0UL) 
#line 5652 
                                      ipw2100_configure_security(priv,0); else ;
  done: 
#line 5653 
  ;
  
#line 5654 
  ldv_mutex_unlock_110(& priv->action_mutex);
  
#line 5655 
  return;
}


#line 5657  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_adapter_setup(struct ipw2100_priv *priv)
{
  int __retres;
  int err;
  u8 *bssid;
  
#line 5660 
  int batch_mode = 1;
  
#line 5663 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 5663 
    tmp = preempt_count();
    
#line 5663 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 5663 
                                                 tmp_0 = 73; else 
#line 5663 
                                                                  tmp_0 = 85;
    
#line 5663 
    printk("\001",tmp_0,"ipw2100_adapter_setup");
    
#line 5663 
    printk("enter\n");
  }
  else ;
  
#line 5665 
  err = ipw2100_disable_adapter(priv);
  
#line 5666 
  if (err != 0) {
    
#line 5667 
    __retres = err;
    
#line 5667 
    goto return_label;
  }
  else ;
  
#line 5669 
  if ((priv->ieee)->iw_mode == 6) {
    
#line 5670 
    err = ipw2100_set_channel(priv,(unsigned int)priv->channel,batch_mode);
    
#line 5671 
    if (err != 0) {
      
#line 5672 
      __retres = err;
      
#line 5672 
      goto return_label;
    }
    else ;
    
#line 5674 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 5674 
      tmp_1 = preempt_count();
      
#line 5674 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 5674 
                                                     tmp_2 = 73; else 
                                                                   
#line 5674 
                                                                   tmp_2 = 85;
      
#line 5674 
      printk("\001",tmp_2,"ipw2100_adapter_setup");
      
#line 5674 
      printk("exit\n");
    }
    else ;
    
#line 5676 
    __retres = 0;
    
#line 5676 
    goto return_label;
  }
  else ;
  
#line 5680 
  err = ipw2100_read_mac_address(priv);
  
#line 5681 
  if (err != 0) {
    
#line 5682 
    __retres = -5;
    
#line 5682 
    goto return_label;
  }
  else ;
  
#line 5684 
  err = ipw2100_set_mac_address(priv,batch_mode);
  
#line 5685 
  if (err != 0) {
    
#line 5686 
    __retres = err;
    
#line 5686 
    goto return_label;
  }
  else ;
  
#line 5688 
  err = ipw2100_set_port_type(priv,(unsigned int)(priv->ieee)->iw_mode,batch_mode);
  
#line 5689 
  if (err != 0) {
    
#line 5690 
    __retres = err;
    
#line 5690 
    goto return_label;
  }
  else ;
  
#line 5692 
  if ((priv->ieee)->iw_mode == 1) {
    
#line 5693 
    err = ipw2100_set_channel(priv,(unsigned int)priv->channel,batch_mode);
    
#line 5694 
    if (err != 0) {
      
#line 5695 
      __retres = err;
      
#line 5695 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 5698 
  err = ipw2100_system_config(priv,batch_mode);
  
#line 5699 
  if (err != 0) {
    
#line 5700 
    __retres = err;
    
#line 5700 
    goto return_label;
  }
  else ;
  
#line 5702 
  err = ipw2100_set_tx_rates(priv,priv->tx_rates,batch_mode);
  
#line 5703 
  if (err != 0) {
    
#line 5704 
    __retres = err;
    
#line 5704 
    goto return_label;
  }
  else ;
  
#line 5707 
  err = ipw2100_set_power_mode(priv,0);
  
#line 5708 
  if (err != 0) {
    
#line 5709 
    __retres = err;
    
#line 5709 
    goto return_label;
  }
  else ;
  
#line 5711 
  err = ipw2100_set_rts_threshold(priv,priv->rts_threshold);
  
#line 5712 
  if (err != 0) {
    
#line 5713 
    __retres = err;
    
#line 5713 
    goto return_label;
  }
  else ;
  
#line 5715 
  if ((priv->config & 4UL) != 0UL) 
#line 5716 
                                   bssid = (u8 *)(& priv->bssid); else 
                                                                    
#line 5718 
                                                                    bssid = (u8 *)0U;
  
#line 5719 
  err = ipw2100_set_mandatory_bssid(priv,bssid,batch_mode);
  
#line 5720 
  if (err != 0) {
    
#line 5721 
    __retres = err;
    
#line 5721 
    goto return_label;
  }
  else ;
  
#line 5723 
  if ((priv->config & 2UL) != 0UL) 
#line 5724 
                                   err = ipw2100_set_essid(priv,(char *)(& priv->essid),(int)priv->essid_len,batch_mode); else 
                                                                    
#line 5727 
                                                                    err = ipw2100_set_essid(priv,(char *)0,0,batch_mode);
  
#line 5728 
  if (err != 0) {
    
#line 5729 
    __retres = err;
    
#line 5729 
    goto return_label;
  }
  else ;
  
#line 5731 
  err = ipw2100_configure_security(priv,batch_mode);
  
#line 5732 
  if (err != 0) {
    
#line 5733 
    __retres = err;
    
#line 5733 
    goto return_label;
  }
  else ;
  
#line 5735 
  if ((priv->ieee)->iw_mode == 1) {
    
#line 5736 
    err = ipw2100_set_ibss_beacon_interval(priv,priv->beacon_interval,batch_mode);
    
#line 5740 
    if (err != 0) {
      
#line 5741 
      __retres = err;
      
#line 5741 
      goto return_label;
    }
    else ;
    
#line 5743 
    err = ipw2100_set_tx_power(priv,(unsigned int)priv->tx_power);
    
#line 5744 
    if (err != 0) {
      
#line 5745 
      __retres = err;
      
#line 5745 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 5755 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_4;
    int tmp_3;
    
#line 5755 
    tmp_3 = preempt_count();
    
#line 5755 
    if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 5755 
                                                   tmp_4 = 73; else 
#line 5755 
                                                                    tmp_4 = 85;
    
#line 5755 
    printk("\001",tmp_4,"ipw2100_adapter_setup");
    
#line 5755 
    printk("exit\n");
  }
  else ;
  
#line 5757 
  __retres = 0;
  return_label: 
#line 5757 
                return __retres;
}


#line 5769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_set_address(struct net_device *dev, void *p)
{
  int __retres;
  int tmp_1;
  bool tmp_0;
  
#line 5771 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 5772 
  struct sockaddr *addr = (struct sockaddr *)p;
  
#line 5773 
  int err = 0;
  
#line 5775 
  tmp_0 = is_valid_ether_addr((u8 const *)(& addr->sa_data));
  
#line 5775 
  if (tmp_0) 
#line 5775 
             tmp_1 = 0; else 
#line 5775 
                             tmp_1 = 1;
  
#line 5775 
  if (tmp_1) {
    
#line 5776 
    __retres = -99;
    
#line 5776 
    goto return_label;
  }
  else ;
  
#line 5778 
  ldv_mutex_lock_111(& priv->action_mutex);
  
#line 5780 
  priv->config |= 8UL;
  
#line 5781 
  memcpy((void *)(& priv->mac_addr),(void const *)(& addr->sa_data),6UL);
  
#line 5783 
  err = ipw2100_set_mac_address(priv,0);
  
#line 5784 
  if (err != 0) 
#line 5785 
                goto done; else ;
  
#line 5787 
  priv->reset_backoff = 0;
  
#line 5788 
  ldv_mutex_unlock_112(& priv->action_mutex);
  
#line 5789 
  ipw2100_reset_adapter(& priv->reset_work.work);
  
#line 5790 
  __retres = 0;
  
#line 5790 
  goto return_label;
  done: 
#line 5792 
  ;
  
#line 5793 
  ldv_mutex_unlock_113(& priv->action_mutex);
  
#line 5794 
  __retres = err;
  return_label: 
#line 5794 
                return __retres;
}


#line 5797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_open(struct net_device *dev)
{
  int __retres;
  unsigned long flags;
  
#line 5799 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 5801 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 5801 
    tmp_0 = preempt_count();
    
#line 5801 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 5801 
                                                   tmp_1 = 73; else 
#line 5801 
                                                                    tmp_1 = 85;
    
#line 5801 
    printk("\001",tmp_1,"ipw2100_open");
    
#line 5801 
    printk("dev->open\n");
  }
  else ;
  
#line 5803 
  ldv___ldv_spin_lock_114(& priv->low_lock);
  
#line 5804 
  if ((priv->status & 1024UL) != 0UL) {
    
#line 5805 
    netif_carrier_on(dev);
    
#line 5806 
    netif_start_queue(dev);
  }
  else ;
  
#line 5808 
  ldv_spin_unlock_irqrestore_115(& priv->low_lock,flags);
  
#line 5810 
  __retres = 0;
  
#line 5810 
  return __retres;
}


#line 5813  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_close(struct net_device *dev)
{
  int __retres;
  unsigned long flags;
  struct list_head *element;
  struct ipw2100_tx_packet *packet;
  struct ipw2100_tx_packet *tmp_2;
  int tmp_3;
  
#line 5815 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 5820 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 5820 
    tmp_0 = preempt_count();
    
#line 5820 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 5820 
                                                   tmp_1 = 73; else 
#line 5820 
                                                                    tmp_1 = 85;
    
#line 5820 
    printk("\001",tmp_1,"ipw2100_close");
    
#line 5820 
    printk("enter\n");
  }
  else ;
  
#line 5822 
  ldv___ldv_spin_lock_116(& priv->low_lock);
  
#line 5824 
  if ((priv->status & 1024UL) != 0UL) 
#line 5825 
                                      netif_carrier_off(dev); else ;
  
#line 5826 
  netif_start_queue(dev);
  
#line 5829 
  goto ldv_62498;
  ldv_62497: 
#line 5830 
  ;
  
#line 5830 
  element = priv->tx_pend_list.next;
  {
    
#line 5831 
    struct list_head const *__mptr = (struct list_head const *)element;
    
#line 5831 
    tmp_2 = (struct ipw2100_tx_packet *)__mptr + 18446744073709551576U;
  }
  
#line 5831 
  packet = tmp_2;
  
#line 5833 
  list_del(element);
  
#line 5834 
  priv->tx_pend_stat.value -= 1;
  
#line 5834 
  ;
  
#line 5834 
  if (priv->tx_pend_stat.value < priv->tx_pend_stat.lo) 
#line 5834 
                                                        priv->tx_pend_stat.lo = priv->tx_pend_stat.value; else ;
  
#line 5836 
  libipw_txb_free(packet->info.d_struct.txb);
  
#line 5837 
  packet->info.d_struct.txb = (struct libipw_txb *)0;
  
#line 5839 
  list_add_tail(element,& priv->tx_free_list);
  
#line 5840 
  priv->tx_free_stat.value += 1;
  
#line 5840 
  ;
  
#line 5840 
  if (priv->tx_free_stat.value > priv->tx_free_stat.hi) 
#line 5840 
                                                        priv->tx_free_stat.hi = priv->tx_free_stat.value; else ;
  ldv_62498: 
#line 5841 
  ;
  
#line 5829 
  tmp_3 = list_empty((struct list_head const *)(& priv->tx_pend_list));
  
#line 5829 
  if (tmp_3 == 0) 
#line 5831 
                  goto ldv_62497; else 
#line 5834 
                                       goto ldv_62499;
  ldv_62499: 
#line 5835 
  ;
  
#line 5842 
  ldv_spin_unlock_irqrestore_117(& priv->low_lock,flags);
  
#line 5844 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_5;
    int tmp_4;
    
#line 5844 
    tmp_4 = preempt_count();
    
#line 5844 
    if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
#line 5844 
                                                   tmp_5 = 73; else 
#line 5844 
                                                                    tmp_5 = 85;
    
#line 5844 
    printk("\001",tmp_5,"ipw2100_close");
    
#line 5844 
    printk("exit\n");
  }
  else ;
  
#line 5846 
  __retres = 0;
  
#line 5846 
  return __retres;
}


#line 5852  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_tx_timeout(struct net_device *dev)
{
  
#line 5854 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 5856 
  dev->stats.tx_errors += 1UL;
  
#line 5859 
  if ((priv->ieee)->iw_mode == 6) 
#line 5860 
                                  goto return_label; else ;
  
#line 5863 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 5863 
    tmp_0 = preempt_count();
    
#line 5863 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 5863 
                                                   tmp_1 = 73; else 
#line 5863 
                                                                    tmp_1 = 85;
    
#line 5863 
    printk("\001",tmp_1,"ipw2100_tx_timeout");
    
#line 5863 
    printk("%s: TX timed out.  Scheduling firmware restart.\n",(char *)(& dev->name));
  }
  else ;
  
#line 5865 
  schedule_reset(priv);
  return_label: 
#line 5866 
                return;
}


#line 5868  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wpa_enable(struct ipw2100_priv *priv, int value)
{
  int __retres;
  
#line 5872 
  (priv->ieee)->wpa_enabled = value;
  
#line 5873 
  __retres = 0;
  
#line 5873 
  return __retres;
}


#line 5876  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wpa_set_auth_algs(struct ipw2100_priv *priv, int value)
{
  int __retres;
  
#line 5879 
  struct libipw_device *ieee = priv->ieee;
  
#line 5880 
  struct libipw_security sec = {.active_key = (unsigned short)0, .enabled = (unsigned short)0, .unicast_uses_group = (unsigned short)0, .encrypt = (unsigned short)0, .auth_mode = (unsigned char)0, .encode_alg = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .key_sizes = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .keys = {{(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}}, .level = (unsigned char)0, .flags = (unsigned short)32U};
  
#line 5883 
  int ret = 0;
  
#line 5885 
  if ((value & 2) != 0) {
    
#line 5886 
    sec.auth_mode = (unsigned char)1U;
    
#line 5887 
    ieee->open_wep = 0;
  }
  else 
    
#line 5888 
    if ((value & 1) != 0) {
      
#line 5889 
      sec.auth_mode = (unsigned char)0U;
      
#line 5890 
      ieee->open_wep = 1;
    }
    else 
      
#line 5891 
      if ((value & 4) != 0) {
        
#line 5892 
        sec.auth_mode = (unsigned char)128U;
        
#line 5893 
        ieee->open_wep = 1;
      }
      else {
        
#line 5895 
        __retres = -22;
        
#line 5895 
        goto return_label;
      }
  
#line 5897 
  if (ieee->set_security != (void (*)(struct net_device *, struct libipw_security *))0) 
    
#line 5898 
    (*(ieee->set_security))(ieee->dev,& sec); else 
#line 5900 
                                                   ret = -95;
  
#line 5902 
  __retres = ret;
  return_label: 
#line 5902 
                return __retres;
}


#line 5905  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_wpa_assoc_frame(struct ipw2100_priv *priv, char *wpa_ie, int wpa_ie_len)
{
  struct ipw2100_wpa_assoc_frame frame;
  
#line 5911 
  frame.fixed_ie_mask = (unsigned short)0U;
  
#line 5914 
  memcpy((void *)(& frame.var_ie),(void const *)wpa_ie,(unsigned long)wpa_ie_len);
  
#line 5915 
  frame.var_ie_len = (unsigned int)wpa_ie_len;
  
#line 5918 
  ipw2100_wpa_enable(priv,1);
  
#line 5919 
  ipw2100_set_wpa_ie(priv,& frame,0);
  
#line 5920 
  return;
}


#line 5922  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw_ethtool_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
{
  char fw_ver[64U];
  char ucode_ver[64U];
  char const *tmp_0;
  
#line 5925 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 5928 
  strlcpy((char *)(& info->driver),"ipw2100",32UL);
  
#line 5929 
  strlcpy((char *)(& info->version),"git-1.2.2",32UL);
  
#line 5931 
  ipw2100_get_fwversion(priv,(char *)(& fw_ver),64UL);
  
#line 5932 
  ipw2100_get_ucodeversion(priv,(char *)(& ucode_ver),64UL);
  
#line 5934 
  snprintf((char *)(& info->fw_version),32UL,"%s:%d:%s",(char *)(& fw_ver),priv->eeprom_version,(char *)(& ucode_ver));
  
#line 5937 
  tmp_0 = pci_name((struct pci_dev const *)priv->pci_dev);
  
#line 5937 
  ;
  
#line 5937 
  strlcpy((char *)(& info->bus_info),tmp_0,32UL);
  
#line 5938 
  return;
}


#line 5941  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static u32 ipw2100_ethtool_get_link(struct net_device *dev)
{
  u32 __retres;
  
#line 5943 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 5944 
  __retres = (unsigned int)(priv->status >> 10) & 1U;
  
#line 5944 
  return __retres;
}


#line 5947  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct ethtool_ops const ipw2100_ethtool_ops = {.get_settings = (int (*)(struct net_device *, struct ethtool_cmd *))0, .set_settings = (int (*)(struct net_device *, struct ethtool_cmd *))0, .get_drvinfo = & ipw_ethtool_get_drvinfo, .get_regs_len = (int (*)(struct net_device *))0, .get_regs = (void (*)(struct net_device *, struct ethtool_regs *, void *))0, .get_wol = (void (*)(struct net_device *, struct ethtool_wolinfo *))0, .set_wol = (int (*)(struct net_device *, struct ethtool_wolinfo *))0, .get_msglevel = (u32 (*)(struct net_device *))0, .set_msglevel = (void (*)(struct net_device *, u32 ))0, .nway_reset = (int (*)(struct net_device *))0, .get_link = & ipw2100_ethtool_get_link, .get_eeprom_len = (int (*)(struct net_device *))0, .get_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .set_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .set_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .get_ringparam = (void (*)(struct net_device *, struct ethtool_ringparam *))0, .set_ringparam = (int (*)(struct net_device *, struct ethtool_ringparam *))0, .get_pauseparam = (void (*)(struct net_device *, struct ethtool_pauseparam *))0, .set_pauseparam = (int (*)(struct net_device *, struct ethtool_pauseparam *))0, .self_test = (void (*)(struct net_device *, struct ethtool_test *, u64 *))0, .get_strings = (void (*)(struct net_device *, u32 , u8 *))0, .set_phys_id = (int (*)(struct net_device *, enum ethtool_phys_id_state ))0, .get_ethtool_stats = (void (*)(struct net_device *, struct ethtool_stats *, u64 *))0, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = (int (*)(struct net_device *, int ))0, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = (int (*)(struct net_device *, struct ethtool_ts_info *))0, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 5952  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_hang_check(struct work_struct *work)
{
  struct ipw2100_priv *tmp;
  unsigned long flags;
  {
    
#line 5955 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 5955 
    tmp = (struct ipw2100_priv *)__mptr + 18446744073709549864U;
  }
  
#line 5954 
  struct ipw2100_priv *priv = tmp;
  
#line 5957 
  u32 rtc = 2779096485U;
  
#line 5958 
  u32 len = 4U;
  
#line 5959 
  int restart = 0;
  
#line 5961 
  ldv___ldv_spin_lock_118(& priv->low_lock);
  
#line 5963 
  if (priv->fatal_error != 0U) {
    
#line 5965 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_1;
      int tmp_0;
      
#line 5965 
      tmp_0 = preempt_count();
      
#line 5965 
      if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 5965 
                                                     tmp_1 = 73; else 
                                                                   
#line 5965 
                                                                   tmp_1 = 85;
      
#line 5965 
      printk("\001",tmp_1,"ipw2100_hang_check");
      
#line 5965 
      printk("%s: Hardware fatal error detected.\n",(char *)(& (priv->net_dev)->name));
    }
    else ;
    
#line 5968 
    restart = 1;
  }
  else {
    int tmp_4;
    
#line 5969 
    tmp_4 = ipw2100_get_ordinal(priv,190U,(void *)(& rtc),& len);
    
#line 5969 
    if (tmp_4 != 0) 
#line 5969 
                    goto _LOR;
    else 
      
#line 5969 
      if (priv->last_rtc == rtc) {
        _LOR: {
                
#line 5972 
                if ((ipw2100_debug_level & 4U) != 0U) {
                  int tmp_3;
                  int tmp_2;
                  
#line 5972 
                  tmp_2 = preempt_count();
                  
#line 5972 
                  if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 5972 
                                                                 tmp_3 = 73; else 
                                                                    
#line 5972 
                                                                    tmp_3 = 85;
                  
#line 5972 
                  printk("\001",tmp_3,"ipw2100_hang_check");
                  
#line 5972 
                  printk("%s: Firmware RTC stalled.\n",(char *)(& (priv->net_dev)->name));
                }
                else ;
                
#line 5975 
                restart = 1;
              }
      }
      else ;
  }
  
#line 5978 
  if (restart != 0) {
    
#line 5980 
    priv->stop_hang_check = 1;
    
#line 5981 
    priv->hangs += 1;
    
#line 5984 
    schedule_reset(priv);
  }
  else ;
  
#line 5987 
  priv->last_rtc = rtc;
  
#line 5989 
  if (priv->stop_hang_check == 0) 
#line 5990 
                                  ldv_schedule_delayed_work_119(& priv->hang_check,125UL); else ;
  
#line 5992 
  ldv_spin_unlock_irqrestore_120(& priv->low_lock,flags);
  
#line 5993 
  return;
}


#line 5995  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_rf_kill(struct work_struct *work)
{
  struct ipw2100_priv *tmp;
  unsigned long flags;
  int tmp_3;
  {
    
#line 5998 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 5998 
    tmp = (struct ipw2100_priv *)__mptr + 18446744073709549640U;
  }
  
#line 5997 
  struct ipw2100_priv *priv = tmp;
  
#line 6001 
  ldv___ldv_spin_lock_121(& priv->low_lock);
  
#line 6003 
  tmp_3 = rf_kill_active(priv);
  
#line 6003 
  if (tmp_3 != 0) {
    
#line 6004 
    if ((ipw2100_debug_level & 131072U) != 0U) {
      int tmp_1;
      int tmp_0;
      
#line 6004 
      tmp_0 = preempt_count();
      
#line 6004 
      if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 6004 
                                                     tmp_1 = 73; else 
                                                                   
#line 6004 
                                                                   tmp_1 = 85;
      
#line 6004 
      printk("\001",tmp_1,"ipw2100_rf_kill");
      
#line 6004 
      printk("RF Kill active, rescheduling GPIO check\n");
    }
    else ;
    
#line 6005 
    if (priv->stop_rf_kill == 0) {
      unsigned long tmp_2;
      
#line 6006 
      tmp_2 = round_jiffies_relative(250UL);
      
#line 6006 
      ;
      
#line 6006 
      ldv_schedule_delayed_work_122(& priv->rf_kill,tmp_2);
    }
    else ;
    
#line 6008 
    goto exit_unlock;
  }
  else ;
  
#line 6013 
  if ((priv->status & 12288UL) == 0UL) {
    
#line 6014 
    if ((ipw2100_debug_level & 131072U) != 0U) {
      int tmp_5;
      int tmp_4;
      
#line 6014 
      tmp_4 = preempt_count();
      
#line 6014 
      if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
#line 6014 
                                                     tmp_5 = 73; else 
                                                                   
#line 6014 
                                                                   tmp_5 = 85;
      
#line 6014 
      printk("\001",tmp_5,"ipw2100_rf_kill");
      
#line 6014 
      printk("HW RF Kill no longer active, restarting ");
    }
    else ;
    
#line 6016 
    schedule_reset(priv);
  }
  else 
    
#line 6018 
    if ((ipw2100_debug_level & 131072U) != 0U) {
      int tmp_7;
      int tmp_6;
      
#line 6018 
      tmp_6 = preempt_count();
      
#line 6018 
      if (((unsigned long)tmp_6 & 2096896UL) != 0UL) 
#line 6018 
                                                     tmp_7 = 73; else 
                                                                   
#line 6018 
                                                                   tmp_7 = 85;
      
#line 6018 
      printk("\001",tmp_7,"ipw2100_rf_kill");
      
#line 6018 
      printk("HW RF Kill deactivated.  SW RF Kill still ");
    }
    else ;
  exit_unlock: 
#line 6021 
  ;
  
#line 6022 
  ldv_spin_unlock_irqrestore_123(& priv->low_lock,flags);
  
#line 6023 
  return;
}


#line 6027  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct net_device_ops const ipw2100_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & ipw2100_open, .ndo_stop = & ipw2100_close, .ndo_start_xmit = & libipw_xmit, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = (void (*)(struct net_device *))0, .ndo_set_mac_address = & ipw2100_set_address, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = (int (*)(struct net_device *, struct ifreq *, int ))0, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & libipw_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & ipw2100_tx_timeout, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = (struct net_device_stats *(*)(struct net_device *))0, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = (void (*)(struct net_device *))0, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = (int (*)(struct net_device *, netdev_features_t ))0, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 6039  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct net_device *ipw2100_alloc_device(struct pci_dev *pci_dev, void *ioaddr)
{
  struct net_device *__retres;
  struct ipw2100_priv *priv;
  struct net_device *dev;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  int tmp_5;
  
#line 6045 
  dev = alloc_libipw(2944,0);
  
#line 6046 
  if (dev == (struct net_device *)0) {
    
#line 6047 
    __retres = (struct net_device *)0;
    
#line 6047 
    goto return_label;
  }
  else ;
  
#line 6048 
  priv = (struct ipw2100_priv *)libipw_priv(dev);
  
#line 6049 
  priv->ieee = (struct libipw_device *)netdev_priv((struct net_device const *)dev);
  
#line 6050 
  priv->pci_dev = pci_dev;
  
#line 6051 
  priv->net_dev = dev;
  
#line 6052 
  priv->ioaddr = ioaddr;
  
#line 6054 
  (priv->ieee)->hard_start_xmit = & ipw2100_tx;
  
#line 6055 
  (priv->ieee)->set_security = & shim__set_security;
  
#line 6057 
  (priv->ieee)->perfect_rssi = -20;
  
#line 6058 
  (priv->ieee)->worst_rssi = -85;
  
#line 6060 
  dev->netdev_ops = & ipw2100_netdev_ops;
  
#line 6061 
  dev->ethtool_ops = & ipw2100_ethtool_ops;
  
#line 6062 
  dev->wireless_handlers = (struct iw_handler_def const *)(& ipw2100_wx_handler_def);
  
#line 6063 
  priv->wireless_data.libipw = priv->ieee;
  
#line 6064 
  dev->wireless_data = & priv->wireless_data;
  
#line 6065 
  dev->watchdog_timeo = 750;
  
#line 6066 
  dev->irq = 0;
  
#line 6078 
  priv->power_mode = 6;
  
#line 6081 
  priv->config |= 2048UL;
  
#line 6083 
  (priv->ieee)->wpa_enabled = 0;
  
#line 6084 
  (priv->ieee)->drop_unencrypted = 0;
  
#line 6085 
  (priv->ieee)->privacy_invoked = 0;
  
#line 6086 
  (priv->ieee)->ieee802_1x = 1;
  
#line 6089 
  switch (network_mode) {
    case 1: 
#line 6090 
    ;
    
#line 6091 
    (priv->ieee)->iw_mode = 1;
    
#line 6092 
    goto ldv_62565;
    case 2: 
#line 6094 
    ;
    
#line 6095 
    (priv->ieee)->iw_mode = 6;
    
#line 6096 
    goto ldv_62565;
    default: 
#line 6098 
    ;
    case 0: 
#line 6099 
    ;
    
#line 6100 
    (priv->ieee)->iw_mode = 2;
    
#line 6101 
    goto ldv_62565;
  }
  ldv_62565: 
#line 6104 
  ;
  
#line 6104 
  if (disable == 1) 
#line 6105 
                    priv->status |= 8192UL; else ;
  
#line 6107 
  if ((unsigned int)channel + 4294967295U <= 13U) {
    
#line 6109 
    priv->config |= 1UL;
    
#line 6110 
    priv->channel = (unsigned char)channel;
  }
  else ;
  
#line 6113 
  if (associate != 0) 
#line 6114 
                      priv->config |= 64UL; else ;
  
#line 6116 
  priv->beacon_interval = 100U;
  
#line 6117 
  priv->short_retry_limit = 7;
  
#line 6118 
  priv->long_retry_limit = 4;
  
#line 6119 
  priv->rts_threshold = 2147484648U;
  
#line 6120 
  priv->frag_threshold = 2147485994U;
  
#line 6121 
  priv->tx_power = 32;
  
#line 6122 
  priv->tx_rates = 15U;
  
#line 6124 
  strcpy((char *)(& priv->nick),"ipw2100");
  
#line 6126 
  spinlock_check(& priv->low_lock);
  {
    struct lock_class_key __key;
    
#line 6126 
    __raw_spin_lock_init(& priv->low_lock.__anonCompField_spinlock_18.rlock,"&(&priv->low_lock)->rlock",& __key);
  }
  {
    struct lock_class_key __key_0;
    
#line 6127 
    __mutex_init(& priv->action_mutex,"&priv->action_mutex",& __key_0);
  }
  {
    struct lock_class_key __key_1;
    
#line 6128 
    __mutex_init(& priv->adapter_mutex,"&priv->adapter_mutex",& __key_1);
  }
  {
    struct lock_class_key __key_2;
    
#line 6130 
    __init_waitqueue_head(& priv->wait_command_queue,"&priv->wait_command_queue",& __key_2);
  }
  
#line 6132 
  netif_carrier_off(dev);
  
#line 6134 
  INIT_LIST_HEAD(& priv->msg_free_list);
  
#line 6135 
  INIT_LIST_HEAD(& priv->msg_pend_list);
  
#line 6136 
  tmp_1 = 0;
  
#line 6136 
  priv->msg_free_stat.hi = tmp_1;
  
#line 6136 
  priv->msg_free_stat.value = tmp_1;
  
#line 6136 
  priv->msg_free_stat.lo = 2147483647;
  
#line 6137 
  tmp_2 = 0;
  
#line 6137 
  priv->msg_pend_stat.hi = tmp_2;
  
#line 6137 
  priv->msg_pend_stat.value = tmp_2;
  
#line 6137 
  priv->msg_pend_stat.lo = 2147483647;
  
#line 6139 
  INIT_LIST_HEAD(& priv->tx_free_list);
  
#line 6140 
  INIT_LIST_HEAD(& priv->tx_pend_list);
  
#line 6141 
  tmp_3 = 0;
  
#line 6141 
  priv->tx_free_stat.hi = tmp_3;
  
#line 6141 
  priv->tx_free_stat.value = tmp_3;
  
#line 6141 
  priv->tx_free_stat.lo = 2147483647;
  
#line 6142 
  tmp_4 = 0;
  
#line 6142 
  priv->tx_pend_stat.hi = tmp_4;
  
#line 6142 
  priv->tx_pend_stat.value = tmp_4;
  
#line 6142 
  priv->tx_pend_stat.lo = 2147483647;
  
#line 6144 
  INIT_LIST_HEAD(& priv->fw_pend_list);
  
#line 6145 
  tmp_5 = 0;
  
#line 6145 
  priv->fw_pend_stat.hi = tmp_5;
  
#line 6145 
  priv->fw_pend_stat.value = tmp_5;
  
#line 6145 
  priv->fw_pend_stat.lo = 2147483647;
  {
    struct lock_class_key __key_3;
    
#line 6147 
    __init_work(& priv->reset_work.work,0);
    
#line 6147 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 6147 
    priv->reset_work.work.data = __constr_expr_37;
    
#line 6147 
    lockdep_init_map(& priv->reset_work.work.lockdep_map,"(&(&priv->reset_work)->work)",& __key_3,0);
    
#line 6147 
    INIT_LIST_HEAD(& priv->reset_work.work.entry);
    
#line 6147 
    priv->reset_work.work.func = & ipw2100_reset_adapter;
  }
  {
    struct lock_class_key __key_4;
    
#line 6147 
    init_timer_key(& priv->reset_work.timer,2097152U,"(&(&priv->reset_work)->timer)",& __key_4);
  }
  
#line 6147 
  priv->reset_work.timer.function = & delayed_work_timer_fn;
  
#line 6147 
  priv->reset_work.timer.data = (unsigned long)(& priv->reset_work);
  {
    struct lock_class_key __key_5;
    
#line 6148 
    __init_work(& priv->security_work.work,0);
    
#line 6148 
    atomic_long_t __constr_expr_38 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 6148 
    priv->security_work.work.data = __constr_expr_38;
    
#line 6148 
    lockdep_init_map(& priv->security_work.work.lockdep_map,"(&(&priv->security_work)->work)",& __key_5,0);
    
#line 6148 
    INIT_LIST_HEAD(& priv->security_work.work.entry);
    
#line 6148 
    priv->security_work.work.func = & ipw2100_security_work;
  }
  {
    struct lock_class_key __key_6;
    
#line 6148 
    init_timer_key(& priv->security_work.timer,2097152U,"(&(&priv->security_work)->timer)",& __key_6);
  }
  
#line 6148 
  priv->security_work.timer.function = & delayed_work_timer_fn;
  
#line 6148 
  priv->security_work.timer.data = (unsigned long)(& priv->security_work);
  {
    struct lock_class_key __key_7;
    
#line 6149 
    __init_work(& priv->wx_event_work.work,0);
    
#line 6149 
    atomic_long_t __constr_expr_39 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 6149 
    priv->wx_event_work.work.data = __constr_expr_39;
    
#line 6149 
    lockdep_init_map(& priv->wx_event_work.work.lockdep_map,"(&(&priv->wx_event_work)->work)",& __key_7,0);
    
#line 6149 
    INIT_LIST_HEAD(& priv->wx_event_work.work.entry);
    
#line 6149 
    priv->wx_event_work.work.func = & ipw2100_wx_event_work;
  }
  {
    struct lock_class_key __key_8;
    
#line 6149 
    init_timer_key(& priv->wx_event_work.timer,2097152U,"(&(&priv->wx_event_work)->timer)",& __key_8);
  }
  
#line 6149 
  priv->wx_event_work.timer.function = & delayed_work_timer_fn;
  
#line 6149 
  priv->wx_event_work.timer.data = (unsigned long)(& priv->wx_event_work);
  {
    struct lock_class_key __key_9;
    
#line 6150 
    __init_work(& priv->hang_check.work,0);
    
#line 6150 
    atomic_long_t __constr_expr_40 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 6150 
    priv->hang_check.work.data = __constr_expr_40;
    
#line 6150 
    lockdep_init_map(& priv->hang_check.work.lockdep_map,"(&(&priv->hang_check)->work)",& __key_9,0);
    
#line 6150 
    INIT_LIST_HEAD(& priv->hang_check.work.entry);
    
#line 6150 
    priv->hang_check.work.func = & ipw2100_hang_check;
  }
  {
    struct lock_class_key __key_10;
    
#line 6150 
    init_timer_key(& priv->hang_check.timer,2097152U,"(&(&priv->hang_check)->timer)",& __key_10);
  }
  
#line 6150 
  priv->hang_check.timer.function = & delayed_work_timer_fn;
  
#line 6150 
  priv->hang_check.timer.data = (unsigned long)(& priv->hang_check);
  {
    struct lock_class_key __key_11;
    
#line 6151 
    __init_work(& priv->rf_kill.work,0);
    
#line 6151 
    atomic_long_t __constr_expr_41 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 6151 
    priv->rf_kill.work.data = __constr_expr_41;
    
#line 6151 
    lockdep_init_map(& priv->rf_kill.work.lockdep_map,"(&(&priv->rf_kill)->work)",& __key_11,0);
    
#line 6151 
    INIT_LIST_HEAD(& priv->rf_kill.work.entry);
    
#line 6151 
    priv->rf_kill.work.func = & ipw2100_rf_kill;
  }
  {
    struct lock_class_key __key_12;
    
#line 6151 
    init_timer_key(& priv->rf_kill.timer,2097152U,"(&(&priv->rf_kill)->timer)",& __key_12);
  }
  
#line 6151 
  priv->rf_kill.timer.function = & delayed_work_timer_fn;
  
#line 6151 
  priv->rf_kill.timer.data = (unsigned long)(& priv->rf_kill);
  {
    struct lock_class_key __key_13;
    
#line 6152 
    __init_work(& priv->scan_event.work,0);
    
#line 6152 
    atomic_long_t __constr_expr_42 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 6152 
    priv->scan_event.work.data = __constr_expr_42;
    
#line 6152 
    lockdep_init_map(& priv->scan_event.work.lockdep_map,"(&(&priv->scan_event)->work)",& __key_13,0);
    
#line 6152 
    INIT_LIST_HEAD(& priv->scan_event.work.entry);
    
#line 6152 
    priv->scan_event.work.func = & ipw2100_scan_event;
  }
  {
    struct lock_class_key __key_14;
    
#line 6152 
    init_timer_key(& priv->scan_event.timer,2097152U,"(&(&priv->scan_event)->timer)",& __key_14);
  }
  
#line 6152 
  priv->scan_event.timer.function = & delayed_work_timer_fn;
  
#line 6152 
  priv->scan_event.timer.data = (unsigned long)(& priv->scan_event);
  
#line 6154 
  ldv_tasklet_init_124(& priv->irq_tasklet,(void (*)(unsigned long ))(& ipw2100_irq_tasklet),(unsigned long)priv);
  
#line 6158 
  priv->stop_rf_kill = 1;
  
#line 6159 
  priv->stop_hang_check = 1;
  
#line 6161 
  __retres = dev;
  return_label: 
#line 6161 
                return __retres;
}


#line 6164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_pci_init_one(struct pci_dev *pci_dev, struct pci_device_id const *ent)
{
  int __retres;
  void *ioaddr;
  u32 val;
  int tmp_5;
  bool tmp_4;
  int tmp_6;
  
#line 6168 
  struct net_device *dev = (struct net_device *)0;
  
#line 6169 
  struct ipw2100_priv *priv = (struct ipw2100_priv *)0;
  
#line 6170 
  int err = 0;
  
#line 6171 
  int registered = 0;
  
#line 6174 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 6174 
    tmp = preempt_count();
    
#line 6174 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 6174 
                                                 tmp_0 = 73; else 
#line 6174 
                                                                  tmp_0 = 85;
    
#line 6174 
    printk("\001",tmp_0,"ipw2100_pci_init_one");
    
#line 6174 
    printk("enter\n");
  }
  else ;
  
#line 6176 
  if ((pci_dev->resource[0].flags & 512UL) == 0UL) {
    
#line 6177 
    if ((ipw2100_debug_level & 4U) != 0U) {
      int tmp_2;
      int tmp_1;
      
#line 6177 
      tmp_1 = preempt_count();
      
#line 6177 
      if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 6177 
                                                     tmp_2 = 73; else 
                                                                   
#line 6177 
                                                                   tmp_2 = 85;
      
#line 6177 
      printk("\001",tmp_2,"ipw2100_pci_init_one");
      
#line 6177 
      printk("weird - resource type is not memory\n");
    }
    else ;
    
#line 6178 
    err = -19;
    
#line 6179 
    goto out;
  }
  else ;
  
#line 6182 
  ioaddr = pci_iomap(pci_dev,0,0UL);
  
#line 6183 
  if (ioaddr == (void *)0) {
    
#line 6184 
    printk("\001");
    
#line 6186 
    err = -5;
    
#line 6187 
    goto fail;
  }
  else ;
  
#line 6191 
  dev = ipw2100_alloc_device(pci_dev,ioaddr);
  
#line 6192 
  if (dev == (struct net_device *)0) {
    
#line 6193 
    printk("\001");
    
#line 6195 
    err = -12;
    
#line 6196 
    goto fail;
  }
  else ;
  
#line 6200 
  err = pci_enable_device(pci_dev);
  
#line 6201 
  if (err != 0) {
    
#line 6202 
    printk("\001");
    
#line 6204 
    __retres = err;
    
#line 6204 
    goto return_label;
  }
  else ;
  
#line 6207 
  priv = (struct ipw2100_priv *)libipw_priv(dev);
  
#line 6209 
  pci_set_master(pci_dev);
  
#line 6210 
  pci_set_drvdata(pci_dev,(void *)priv);
  
#line 6212 
  err = pci_set_dma_mask(pci_dev,4294967295ULL);
  
#line 6213 
  if (err != 0) {
    
#line 6214 
    printk("\001");
    
#line 6216 
    pci_disable_device(pci_dev);
    
#line 6217 
    __retres = err;
    
#line 6217 
    goto return_label;
  }
  else ;
  
#line 6220 
  err = pci_request_regions(pci_dev,"ipw2100");
  
#line 6221 
  if (err != 0) {
    
#line 6222 
    printk("\001");
    
#line 6224 
    pci_disable_device(pci_dev);
    
#line 6225 
    __retres = err;
    
#line 6225 
    goto return_label;
  }
  else ;
  
#line 6230 
  pci_read_config_dword((struct pci_dev const *)pci_dev,64,& val);
  
#line 6231 
  if ((val & 65280U) != 0U) 
#line 6232 
                            pci_write_config_dword((struct pci_dev const *)pci_dev,64,val & 4294902015U); else ;
  
#line 6234 
  tmp_4 = ipw2100_hw_is_adapter_in_system(dev);
  
#line 6234 
  if (tmp_4) 
#line 6234 
             tmp_5 = 0; else 
#line 6234 
                             tmp_5 = 1;
  
#line 6234 
  if (tmp_5) {
    
#line 6235 
    printk("\001");
    
#line 6237 
    err = -19;
    
#line 6238 
    goto fail;
  }
  else ;
  
#line 6241 
  dev->dev.parent = & pci_dev->dev;
  
#line 6244 
  priv->status |= 2048UL;
  
#line 6245 
  ipw2100_disable_interrupts(priv);
  
#line 6248 
  tmp_6 = ipw2100_queues_allocate(priv);
  
#line 6248 
  if (tmp_6 != 0) {
    
#line 6249 
    printk("\001");
    
#line 6251 
    err = -12;
    
#line 6252 
    goto fail;
  }
  else ;
  
#line 6254 
  ipw2100_queues_initialize(priv);
  
#line 6256 
  err = ldv_request_irq_125(pci_dev->irq,& ipw2100_interrupt,128UL,(char const *)(& dev->name),(void *)priv);
  
#line 6258 
  if (err != 0) {
    
#line 6259 
    printk("\001",pci_dev->irq);
    
#line 6261 
    goto fail;
  }
  else ;
  
#line 6263 
  dev->irq = (int)pci_dev->irq;
  
#line 6265 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_8;
    int tmp_7;
    
#line 6265 
    tmp_7 = preempt_count();
    
#line 6265 
    if (((unsigned long)tmp_7 & 2096896UL) != 0UL) 
#line 6265 
                                                   tmp_8 = 73; else 
#line 6265 
                                                                    tmp_8 = 85;
    
#line 6265 
    printk("\001",tmp_8,"ipw2100_pci_init_one");
    
#line 6265 
    printk("Attempting to register device...\n");
  }
  else ;
  
#line 6267 
  printk("\001");
  
#line 6270 
  err = ipw2100_up(priv,1);
  
#line 6271 
  if (err != 0) 
#line 6272 
                goto fail; else ;
  
#line 6274 
  err = ipw2100_wdev_init(dev);
  
#line 6275 
  if (err != 0) 
#line 6276 
                goto fail; else ;
  
#line 6277 
  registered = 1;
  
#line 6284 
  err = ldv_register_netdev_126(dev);
  
#line 6285 
  if (err != 0) {
    
#line 6286 
    printk("\001");
    
#line 6288 
    goto fail;
  }
  else ;
  
#line 6290 
  registered = 2;
  
#line 6292 
  ldv_mutex_lock_127(& priv->action_mutex);
  
#line 6294 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_10;
    int tmp_9;
    char const *tmp_11;
    
#line 6294 
    tmp_9 = preempt_count();
    
#line 6294 
    if (((unsigned long)tmp_9 & 2096896UL) != 0UL) 
#line 6294 
                                                   tmp_10 = 73; else 
                                                                  
#line 6294 
                                                                  tmp_10 = 85;
    
#line 6294 
    printk("\001",tmp_10,"ipw2100_pci_init_one");
    
#line 6294 
    tmp_11 = pci_name((struct pci_dev const *)pci_dev);
    
#line 6294 
    ;
    
#line 6294 
    printk("%s: Bound to %s\n",(char *)(& dev->name),tmp_11);
  }
  else ;
  
#line 6297 
  err = sysfs_create_group(& pci_dev->dev.kobj,(struct attribute_group const *)(& ipw2100_attribute_group));
  
#line 6298 
  if (err != 0) 
#line 6299 
                goto fail_unlock; else ;
  
#line 6303 
  if ((priv->status & 12288UL) == 0UL) {
    int tmp_12;
    
#line 6305 
    tmp_12 = ipw2100_enable_adapter(priv);
    
#line 6305 
    if (tmp_12 != 0) {
      
#line 6306 
      printk("\001",(char *)(& (priv->net_dev)->name));
      
#line 6309 
      ipw2100_hw_stop_adapter(priv);
      
#line 6310 
      err = -5;
      
#line 6311 
      goto fail_unlock;
    }
    else ;
    
#line 6315 
    ipw2100_set_scan_options(priv);
    
#line 6316 
    ipw2100_start_scan(priv);
  }
  else ;
  
#line 6319 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_14;
    int tmp_13;
    
#line 6319 
    tmp_13 = preempt_count();
    
#line 6319 
    if (((unsigned long)tmp_13 & 2096896UL) != 0UL) 
#line 6319 
                                                    tmp_14 = 73; else 
                                                                   
#line 6319 
                                                                   tmp_14 = 85;
    
#line 6319 
    printk("\001",tmp_14,"ipw2100_pci_init_one");
    
#line 6319 
    printk("exit\n");
  }
  else ;
  
#line 6321 
  priv->status |= 32UL;
  
#line 6323 
  ldv_mutex_unlock_128(& priv->action_mutex);
  out: 
#line 6324 
  ;
  
#line 6325 
  __retres = err;
  
#line 6325 
  goto return_label;
  fail_unlock: 
#line 6327 
  ;
  
#line 6328 
  ldv_mutex_unlock_129(& priv->action_mutex);
  fail: 
#line 6329 
  ;
  
#line 6330 
  if (dev != (struct net_device *)0) {
    
#line 6331 
    if (registered > 1) 
#line 6332 
                        ldv_unregister_netdev_130(dev); else ;
    
#line 6334 
    if (registered != 0) {
      
#line 6335 
      wiphy_unregister((priv->ieee)->wdev.wiphy);
      
#line 6336 
      kfree((void const *)(priv->ieee)->bg_band.channels);
    }
    else ;
    
#line 6339 
    ipw2100_hw_stop_adapter(priv);
    
#line 6341 
    ipw2100_disable_interrupts(priv);
    
#line 6343 
    if (dev->irq != 0) 
#line 6344 
                       ldv_free_irq_131((unsigned int)dev->irq,(void *)priv); else ;
    
#line 6346 
    ipw2100_kill_works(priv);
    
#line 6349 
    ipw2100_queues_free(priv);
    
#line 6350 
    sysfs_remove_group(& pci_dev->dev.kobj,(struct attribute_group const *)(& ipw2100_attribute_group));
    
#line 6353 
    free_libipw(dev,0);
  }
  else ;
  
#line 6356 
  pci_iounmap(pci_dev,ioaddr);
  
#line 6358 
  pci_release_regions(pci_dev);
  
#line 6359 
  pci_disable_device(pci_dev);
  
#line 6360 
  goto out;
  return_label: 
#line 6360 
                return __retres;
}


#line 6363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_pci_remove_one(struct pci_dev *pci_dev)
{
  
#line 6365 
  struct ipw2100_priv *priv = pci_get_drvdata(pci_dev);
  
#line 6366 
  struct net_device *dev = priv->net_dev;
  
#line 6368 
  ldv_mutex_lock_132(& priv->action_mutex);
  
#line 6370 
  priv->status &= 18446744073709551583UL;
  
#line 6372 
  sysfs_remove_group(& pci_dev->dev.kobj,(struct attribute_group const *)(& ipw2100_attribute_group));
  
#line 6375 
  if (ipw2100_firmware.version != 0) 
#line 6376 
                                     ipw2100_release_firmware(priv,& ipw2100_firmware); else ;
  
#line 6379 
  ipw2100_down(priv);
  
#line 6383 
  ldv_mutex_unlock_133(& priv->action_mutex);
  
#line 6389 
  ldv_unregister_netdev_134(dev);
  
#line 6391 
  ipw2100_kill_works(priv);
  
#line 6393 
  ipw2100_queues_free(priv);
  
#line 6396 
  ipw2100_snapshot_free(priv);
  
#line 6398 
  ldv_free_irq_135((unsigned int)dev->irq,(void *)priv);
  
#line 6400 
  pci_iounmap(pci_dev,priv->ioaddr);
  
#line 6403 
  wiphy_unregister((priv->ieee)->wdev.wiphy);
  
#line 6404 
  kfree((void const *)(priv->ieee)->bg_band.channels);
  
#line 6405 
  free_libipw(dev,0);
  
#line 6407 
  pci_release_regions(pci_dev);
  
#line 6408 
  pci_disable_device(pci_dev);
  
#line 6410 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 6410 
    tmp_0 = preempt_count();
    
#line 6410 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 6410 
                                                   tmp_1 = 73; else 
#line 6410 
                                                                    tmp_1 = 85;
    
#line 6410 
    printk("\001",tmp_1,"ipw2100_pci_remove_one");
    
#line 6410 
    printk("exit\n");
  }
  else ;
  
#line 6412 
  return;
}


#line 6414  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_suspend(struct pci_dev *pci_dev, pm_message_t state)
{
  int __retres;
  
#line 6416 
  struct ipw2100_priv *priv = pci_get_drvdata(pci_dev);
  
#line 6417 
  struct net_device *dev = priv->net_dev;
  
#line 6419 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 6419 
    tmp_0 = preempt_count();
    
#line 6419 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 6419 
                                                   tmp_1 = 73; else 
#line 6419 
                                                                    tmp_1 = 85;
    
#line 6419 
    printk("\001",tmp_1,"ipw2100_suspend");
    
#line 6419 
    printk("%s: Going into suspend...\n",(char *)(& dev->name));
  }
  else ;
  
#line 6421 
  ldv_mutex_lock_136(& priv->action_mutex);
  
#line 6422 
  if ((priv->status & 32UL) != 0UL) 
#line 6424 
                                    ipw2100_down(priv); else ;
  
#line 6428 
  netif_device_detach(dev);
  
#line 6430 
  pci_save_state(pci_dev);
  
#line 6431 
  pci_disable_device(pci_dev);
  
#line 6432 
  pci_set_power_state(pci_dev,3);
  
#line 6434 
  priv->suspend_at = get_seconds();
  
#line 6436 
  ldv_mutex_unlock_137(& priv->action_mutex);
  
#line 6438 
  __retres = 0;
  
#line 6438 
  return __retres;
}


#line 6441  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_resume(struct pci_dev *pci_dev)
{
  int __retres;
  int err;
  u32 val;
  unsigned long tmp_2;
  
#line 6443 
  struct ipw2100_priv *priv = pci_get_drvdata(pci_dev);
  
#line 6444 
  struct net_device *dev = priv->net_dev;
  
#line 6451 
  ldv_mutex_lock_138(& priv->action_mutex);
  
#line 6453 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 6453 
    tmp_0 = preempt_count();
    
#line 6453 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 6453 
                                                   tmp_1 = 73; else 
#line 6453 
                                                                    tmp_1 = 85;
    
#line 6453 
    printk("\001",tmp_1,"ipw2100_resume");
    
#line 6453 
    printk("%s: Coming out of suspend...\n",(char *)(& dev->name));
  }
  else ;
  
#line 6455 
  pci_set_power_state(pci_dev,0);
  
#line 6456 
  err = pci_enable_device(pci_dev);
  
#line 6457 
  if (err != 0) {
    
#line 6458 
    printk("\001",(char *)(& dev->name));
    
#line 6460 
    ldv_mutex_unlock_139(& priv->action_mutex);
    
#line 6461 
    __retres = err;
    
#line 6461 
    goto return_label;
  }
  else ;
  
#line 6463 
  pci_restore_state(pci_dev);
  
#line 6471 
  pci_read_config_dword((struct pci_dev const *)pci_dev,64,& val);
  
#line 6472 
  if ((val & 65280U) != 0U) 
#line 6473 
                            pci_write_config_dword((struct pci_dev const *)pci_dev,64,val & 4294902015U); else ;
  
#line 6477 
  netif_device_attach(dev);
  
#line 6479 
  tmp_2 = get_seconds();
  
#line 6479 
  priv->suspend_time = tmp_2 - priv->suspend_at;
  
#line 6482 
  if ((priv->status & 8192UL) == 0UL) 
#line 6483 
                                      ipw2100_up(priv,0); else ;
  
#line 6485 
  ldv_mutex_unlock_140(& priv->action_mutex);
  
#line 6487 
  __retres = 0;
  return_label: 
#line 6487 
                return __retres;
}


#line 6491  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_shutdown(struct pci_dev *pci_dev)
{
  
#line 6493 
  struct ipw2100_priv *priv = pci_get_drvdata(pci_dev);
  
#line 6496 
  ipw2100_down(priv);
  
#line 6498 
  pci_disable_device(pci_dev);
  
#line 6499 
  return;
}


#line 6503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct pci_device_id const ipw2100_pci_id_table[41U] = {{.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9504U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9505U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9508U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9509U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9510U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9506U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9507U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9511U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9512U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9513U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9515U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9516U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9517U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9552U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9553U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9555U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9556U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9557U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9568U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9570U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9571U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9569U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9573U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9574U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9575U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9584U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9600U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9602U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9603U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9601U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9605U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9606U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9607U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9616U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9618U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9617U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9619U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9622U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9624U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4163U, .subvendor = 32902U, .subdevice = 9632U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 6553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
struct pci_device_id const __mod_pci__ipw2100_pci_id_table_device_table[41U];

#line 6555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct pci_driver ipw2100_pci_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "ipw2100", .id_table = (struct pci_device_id const *)(& ipw2100_pci_id_table), .probe = & ipw2100_pci_init_one, .remove = & ipw2100_pci_remove_one, .suspend = & ipw2100_suspend, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = & ipw2100_resume, .shutdown = & ipw2100_shutdown, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = (struct pci_error_handlers const *)0, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = (struct dev_pm_ops const *)0, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 6576  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_init(void)
{
  int ret;
  
#line 6580 
  printk("\001",(char *)"Intel(R) PRO/Wireless 2100 Network Driver",(char *)"git-1.2.2");
  
#line 6581 
  printk("\001",(char *)"Copyright(c) 2003-2006 Intel Corporation");
  
#line 6583 
  pm_qos_add_request(& ipw2100_pm_qos_req,1,-1);
  
#line 6586 
  ret = ldv___pci_register_driver_141(& ipw2100_pci_driver,& __this_module,"ipw2100");
  
#line 6587 
  if (ret != 0) 
#line 6588 
                goto out; else ;
  
#line 6591 
  ipw2100_debug_level = (unsigned int)debug;
  
#line 6592 
  ret = driver_create_file(& ipw2100_pci_driver.driver,(struct driver_attribute const *)(& driver_attr_debug_level));
  out: 
#line 6596 
  ;
  
#line 6597 
  return ret;
}


#line 6603  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_exit(void)
{
  
#line 6607 
  driver_remove_file(& ipw2100_pci_driver.driver,(struct driver_attribute const *)(& driver_attr_debug_level));
  
#line 6610 
  ldv_pci_unregister_driver_142(& ipw2100_pci_driver);
  
#line 6611 
  pm_qos_remove_request(& ipw2100_pm_qos_req);
  
#line 6612 
  return;
}


#line 6617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_get_name(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 6625 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 6626 
  if ((priv->status & 1024UL) == 0UL) 
#line 6627 
                                      strcpy((char *)(& wrqu->name),"unassociated"); else 
                                                                    
#line 6629 
                                                                    snprintf((char *)(& wrqu->name),16UL,"IEEE 802.11b");
  
#line 6631 
  if ((ipw2100_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 6631 
    tmp_0 = preempt_count();
    
#line 6631 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 6631 
                                                   tmp_1 = 73; else 
#line 6631 
                                                                    tmp_1 = 85;
    
#line 6631 
    printk("\001",tmp_1,"ipw2100_wx_get_name");
    
#line 6631 
    printk("Name: %s\n",(char *)(& wrqu->name));
  }
  else ;
  
#line 6632 
  __retres = 0;
  
#line 6632 
  return __retres;
}


#line 6635  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_set_freq(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 6639 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 6640 
  struct iw_freq *fwrq = & wrqu->freq;
  
#line 6641 
  int err = 0;
  
#line 6643 
  if ((priv->ieee)->iw_mode == 2) {
    
#line 6644 
    __retres = -95;
    
#line 6644 
    goto return_label;
  }
  else ;
  
#line 6646 
  ldv_mutex_lock_143(& priv->action_mutex);
  
#line 6647 
  if ((priv->status & 32UL) == 0UL) {
    
#line 6648 
    err = -5;
    
#line 6649 
    goto done;
  }
  else ;
  
#line 6653 
  if ((int)fwrq->e == 1) {
    
#line 6654 
    if ((unsigned int)fwrq->m + 4053767296U <= 7500000U) {
      
#line 6655 
      int f = fwrq->m / 100000;
      
#line 6656 
      int c = 0;
      
#line 6658 
      goto ldv_62673;
      ldv_62672: 
#line 6659 
      ;
      
#line 6660 
      c += 1;
      ldv_62673: 
#line 6661 
      ;
      
#line 6658 
      if (c <= 13 && (long)f != ipw2100_frequencies[c]) 
#line 6661 
                                                        goto ldv_62672; else 
                                                                    
#line 6664 
                                                                    goto ldv_62674;
      ldv_62674: 
#line 6665 
      ;
      
#line 6663 
      fwrq->e = (short)0;
      
#line 6664 
      fwrq->m = c + 1;
    }
    else ;
  }
  else ;
  
#line 6668 
  if ((int)fwrq->e > 0 || fwrq->m > 1000) {
    
#line 6669 
    err = -95;
    
#line 6670 
    goto done;
  }
  else {
    
#line 6672 
    if ((ipw2100_debug_level & 8U) != 0U) {
      int tmp_1;
      int tmp_0;
      
#line 6672 
      tmp_0 = preempt_count();
      
#line 6672 
      if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 6672 
                                                     tmp_1 = 73; else 
                                                                   
#line 6672 
                                                                   tmp_1 = 85;
      
#line 6672 
      printk("\001",tmp_1,"ipw2100_wx_set_freq");
      
#line 6672 
      printk("SET Freq/Channel -> %d\n",fwrq->m);
    }
    else ;
    
#line 6673 
    err = ipw2100_set_channel(priv,(unsigned int)fwrq->m,0);
  }
  done: 
#line 6676 
  ;
  
#line 6677 
  ldv_mutex_unlock_144(& priv->action_mutex);
  
#line 6678 
  __retres = err;
  return_label: 
#line 6678 
                return __retres;
}


#line 6681  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_get_freq(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 6689 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 6691 
  wrqu->freq.e = (short)0;
  
#line 6695 
  if ((priv->config & 1UL) != 0UL || (priv->status & 1024UL) != 0UL) 
    
#line 6697 
    wrqu->freq.m = (int)priv->channel; else 
#line 6699 
                                            wrqu->freq.m = 0;
  
#line 6701 
  if ((ipw2100_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 6701 
    tmp_0 = preempt_count();
    
#line 6701 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 6701 
                                                   tmp_1 = 73; else 
#line 6701 
                                                                    tmp_1 = 85;
    
#line 6701 
    printk("\001",tmp_1,"ipw2100_wx_get_freq");
    
#line 6701 
    printk("GET Freq/Channel -> %d\n",(int)priv->channel);
  }
  else ;
  
#line 6702 
  __retres = 0;
  
#line 6702 
  return __retres;
}


#line 6706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_set_mode(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 6710 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 6711 
  int err = 0;
  
#line 6713 
  if ((ipw2100_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 6713 
    tmp_0 = preempt_count();
    
#line 6713 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 6713 
                                                   tmp_1 = 73; else 
#line 6713 
                                                                    tmp_1 = 85;
    
#line 6713 
    printk("\001",tmp_1,"ipw2100_wx_set_mode");
    
#line 6713 
    printk("SET Mode -> %d\n",wrqu->mode);
  }
  else ;
  
#line 6715 
  if (wrqu->mode == (unsigned int)(priv->ieee)->iw_mode) {
    
#line 6716 
    __retres = 0;
    
#line 6716 
    goto return_label;
  }
  else ;
  
#line 6718 
  ldv_mutex_lock_145(& priv->action_mutex);
  
#line 6719 
  if ((priv->status & 32UL) == 0UL) {
    
#line 6720 
    err = -5;
    
#line 6721 
    goto done;
  }
  else ;
  
#line 6724 
  switch (wrqu->mode) {
    case (__u32)6: 
#line 6726 
    ;
    
#line 6727 
    err = ipw2100_switch_mode(priv,6U);
    
#line 6728 
    goto ldv_62695;
    case (__u32)1: 
#line 6730 
    ;
    
#line 6731 
    err = ipw2100_switch_mode(priv,1U);
    
#line 6732 
    goto ldv_62695;
    case (__u32)2: 
#line 6733 
    ;
    case (__u32)0: 
#line 6734 
    ;
    default: 
#line 6735 
    ;
    
#line 6736 
    err = ipw2100_switch_mode(priv,2U);
    
#line 6737 
    goto ldv_62695;
  }
  ldv_62695: 
#line 6740 
  ;
  done: 
#line 6740 
  ;
  
#line 6741 
  ldv_mutex_unlock_146(& priv->action_mutex);
  
#line 6742 
  __retres = err;
  return_label: 
#line 6742 
                return __retres;
}


#line 6745  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_get_mode(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 6753 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 6755 
  wrqu->mode = (unsigned int)(priv->ieee)->iw_mode;
  
#line 6756 
  if ((ipw2100_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 6756 
    tmp_0 = preempt_count();
    
#line 6756 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 6756 
                                                   tmp_1 = 73; else 
#line 6756 
                                                                    tmp_1 = 85;
    
#line 6756 
    printk("\001",tmp_1,"ipw2100_wx_get_mode");
    
#line 6756 
    printk("GET Mode -> %d\n",wrqu->mode);
  }
  else ;
  
#line 6758 
  __retres = 0;
  
#line 6758 
  return __retres;
}


#line 6764  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static s32 const timeout_duration[5U] = {350000, 250000, 75000, 37000, 25000};

#line 6772  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static s32 const period_duration[5U] = {400000, 700000, 1000000, 1000000, 1000000};

#line 6780  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_get_range(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  u16 val;
  int i;
  int level;
  
#line 6788 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 6789 
  struct iw_range *range = (struct iw_range *)extra;
  
#line 6793 
  wrqu->data.length = (unsigned short)568U;
  
#line 6794 
  memset((void *)range,0,568UL);
  
#line 6805 
  range->throughput = 5000000U;
  
#line 6809 
  range->max_qual.qual = (unsigned char)100U;
  
#line 6811 
  range->max_qual.level = (unsigned char)0U;
  
#line 6812 
  range->max_qual.noise = (unsigned char)0U;
  
#line 6813 
  range->max_qual.updated = (unsigned char)7U;
  
#line 6815 
  range->avg_qual.qual = (unsigned char)70U;
  
#line 6817 
  range->avg_qual.level = (unsigned char)178U;
  
#line 6818 
  range->avg_qual.noise = (unsigned char)0U;
  
#line 6819 
  range->avg_qual.updated = (unsigned char)7U;
  
#line 6821 
  range->num_bitrates = (unsigned char)4U;
  
#line 6823 
  i = 0;
  
#line 6823 
  goto ldv_62728;
  ldv_62727: 
#line 6824 
  ;
  
#line 6824 
  range->bitrate[i] = (int)ipw2100_bg_rates[i].bitrate * 100000;
  
#line 6823 
  i += 1;
  ldv_62728: 
#line 6824 
  ;
  
#line 6823 
  if ((unsigned int)i <= 3U) 
#line 6825 
                             goto ldv_62727; else 
#line 6828 
                                                  goto ldv_62729;
  ldv_62729: 
#line 6829 
  ;
  
#line 6827 
  range->min_rts = 1;
  
#line 6828 
  range->max_rts = 2304;
  
#line 6829 
  range->min_frag = 256;
  
#line 6830 
  range->max_frag = 2346;
  
#line 6832 
  range->min_pmp = period_duration[0];
  
#line 6833 
  range->max_pmp = period_duration[4];
  
#line 6834 
  range->min_pmt = timeout_duration[4];
  
#line 6835 
  range->max_pmt = timeout_duration[0];
  
#line 6838 
  range->pmp_flags = (unsigned short)4096U;
  
#line 6840 
  range->pmt_flags = (unsigned short)8192U;
  
#line 6842 
  range->pm_capa = (unsigned short)12288U;
  
#line 6844 
  range->encoding_size[0] = (unsigned short)5U;
  
#line 6845 
  range->encoding_size[1] = (unsigned short)13U;
  
#line 6846 
  range->num_encoding_sizes = (unsigned char)2U;
  
#line 6847 
  range->max_encoding_tokens = (unsigned char)4U;
  
#line 6850 
  if ((priv->ieee)->iw_mode == 1) {
    
#line 6851 
    range->txpower_capa = (unsigned short)0U;
    
#line 6852 
    range->num_txpower = (unsigned char)8U;
    
#line 6853 
    i = 0;
    
#line 6853 
    level = 256;
    
#line 6853 
    goto ldv_62731;
    ldv_62730: 
#line 6854 
    ;
    
#line 6858 
    range->txpower[i] = level / 16;
    
#line 6855 
    i += 1;
    
#line 6855 
    level += -64;
    ldv_62731: 
#line 6856 
    ;
    
#line 6853 
    if (i <= 7) 
#line 6856 
                goto ldv_62730; else 
#line 6859 
                                     goto ldv_62732;
    ldv_62732: 
#line 6860 
    ;
  }
  else {
    
#line 6860 
    range->txpower_capa = (unsigned short)0U;
    
#line 6861 
    range->num_txpower = (unsigned char)0U;
  }
  
#line 6865 
  range->we_version_compiled = (unsigned char)22U;
  
#line 6866 
  range->we_version_source = (unsigned char)18U;
  
#line 6876 
  range->num_channels = (unsigned short)14U;
  
#line 6878 
  val = (unsigned short)0U;
  
#line 6879 
  i = 0;
  
#line 6879 
  goto ldv_62741;
  ldv_62740: 
#line 6880 
  ;
  
#line 6882 
  range->freq[(int)val].i = (unsigned char)((unsigned int)((unsigned char)i) + 1U);
  
#line 6883 
  range->freq[(int)val].m = (int)(ipw2100_frequencies[i] * (long)100000U);
  
#line 6884 
  range->freq[(int)val].e = (short)1;
  
#line 6885 
  val = (u16)((int)val + 1);
  
#line 6887 
  if ((unsigned int)val == 32U) 
#line 6888 
                                goto ldv_62739; else ;
  
#line 6879 
  i += 1;
  ldv_62741: 
#line 6880 
  ;
  
#line 6879 
  if ((unsigned int)i <= 13U) 
#line 6881 
                              goto ldv_62740; else 
#line 6884 
                                                   goto ldv_62739;
  ldv_62739: 
#line 6885 
  ;
  
#line 6890 
  range->num_frequency = (unsigned char)val;
  
#line 6893 
  range->event_capa[0] = 69206096U;
  
#line 6895 
  range->event_capa[1] = 1024U;
  
#line 6897 
  range->enc_capa = 15U;
  
#line 6900 
  if ((ipw2100_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 6900 
    tmp_0 = preempt_count();
    
#line 6900 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 6900 
                                                   tmp_1 = 73; else 
#line 6900 
                                                                    tmp_1 = 85;
    
#line 6900 
    printk("\001",tmp_1,"ipw2100_wx_get_range");
    
#line 6900 
    printk("GET Range\n");
  }
  else ;
  
#line 6902 
  __retres = 0;
  
#line 6902 
  return __retres;
}


#line 6905  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_set_wap(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  bool tmp_2;
  
#line 6909 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 6910 
  int err = 0;
  
#line 6913 
  if ((unsigned int)wrqu->ap_addr.sa_family != 1U) {
    
#line 6914 
    __retres = -22;
    
#line 6914 
    goto return_label;
  }
  else ;
  
#line 6916 
  ldv_mutex_lock_147(& priv->action_mutex);
  
#line 6917 
  if ((priv->status & 32UL) == 0UL) {
    
#line 6918 
    err = -5;
    
#line 6919 
    goto done;
  }
  else ;
  
#line 6922 
  tmp_2 = is_broadcast_ether_addr((u8 const *)(& wrqu->ap_addr.sa_data));
  
#line 6922 
  if ((int)tmp_2 != 0) 
#line 6922 
                       goto _LOR;
  else {
    bool tmp_3;
    
#line 6922 
    tmp_3 = is_zero_ether_addr((u8 const *)(& wrqu->ap_addr.sa_data));
    
#line 6922 
    if ((int)tmp_3 != 0) {
      _LOR: {
              
#line 6925 
              if ((ipw2100_debug_level & 8U) != 0U) {
                int tmp_1;
                int tmp_0;
                
#line 6925 
                tmp_0 = preempt_count();
                
#line 6925 
                if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 6925 
                                                               tmp_1 = 73; else 
                                                                    
#line 6925 
                                                                    tmp_1 = 85;
                
#line 6925 
                printk("\001",tmp_1,"ipw2100_wx_set_wap");
                
#line 6925 
                printk("exit - disable mandatory BSSID\n");
              }
              else ;
              
#line 6926 
              priv->config &= 18446744073709551611UL;
              
#line 6927 
              err = ipw2100_set_mandatory_bssid(priv,(u8 *)0U,0);
              
#line 6928 
              goto done;
            }
    }
    else ;
  }
  
#line 6931 
  priv->config |= 4UL;
  
#line 6932 
  memcpy((void *)(& priv->mandatory_bssid_mac),(void const *)(& wrqu->ap_addr.sa_data),6UL);
  
#line 6934 
  err = ipw2100_set_mandatory_bssid(priv,(u8 *)(& wrqu->ap_addr.sa_data),0);
  
#line 6936 
  if ((ipw2100_debug_level & 8U) != 0U) {
    int tmp_5;
    int tmp_4;
    
#line 6936 
    tmp_4 = preempt_count();
    
#line 6936 
    if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
#line 6936 
                                                   tmp_5 = 73; else 
#line 6936 
                                                                    tmp_5 = 85;
    
#line 6936 
    printk("\001",tmp_5,"ipw2100_wx_set_wap");
    
#line 6936 
    printk("SET BSSID -> %pM\n",(char *)(& wrqu->ap_addr.sa_data));
  }
  else ;
  done: 
#line 6938 
  ;
  
#line 6939 
  ldv_mutex_unlock_148(& priv->action_mutex);
  
#line 6940 
  __retres = err;
  return_label: 
#line 6940 
                return __retres;
}


#line 6943  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_get_wap(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 6951 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 6955 
  if ((priv->config & 4UL) != 0UL || (priv->status & 1024UL) != 0UL) {
    
#line 6956 
    wrqu->ap_addr.sa_family = (unsigned short)1U;
    
#line 6957 
    memcpy((void *)(& wrqu->ap_addr.sa_data),(void const *)(& priv->bssid),6UL);
  }
  else 
#line 6959 
       eth_zero_addr((u8 *)(& wrqu->ap_addr.sa_data));
  
#line 6961 
  if ((ipw2100_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 6961 
    tmp_0 = preempt_count();
    
#line 6961 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 6961 
                                                   tmp_1 = 73; else 
#line 6961 
                                                                    tmp_1 = 85;
    
#line 6961 
    printk("\001",tmp_1,"ipw2100_wx_get_wap");
    
#line 6961 
    printk("Getting WAP BSSID: %pM\n",(char *)(& wrqu->ap_addr.sa_data));
  }
  else ;
  
#line 6962 
  __retres = 0;
  
#line 6962 
  return __retres;
}


#line 6965  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_set_essid(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int tmp_3;
  
#line 6969 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 6970 
  char *essid = (char *)"";
  
#line 6971 
  int length = 0;
  
#line 6972 
  int err = 0;
  
#line 6974 
  ldv_mutex_lock_149(& priv->action_mutex);
  
#line 6975 
  if ((priv->status & 32UL) == 0UL) {
    
#line 6976 
    err = -5;
    
#line 6977 
    goto done;
  }
  else ;
  
#line 6980 
  if ((unsigned int)wrqu->essid.flags != 0U && (unsigned int)wrqu->essid.length != 0U) {
    
#line 6981 
    length = (int)wrqu->essid.length;
    
#line 6982 
    essid = extra;
  }
  else ;
  
#line 6985 
  if (length == 0) {
    
#line 6986 
    if ((ipw2100_debug_level & 8U) != 0U) {
      int tmp_1;
      int tmp_0;
      
#line 6986 
      tmp_0 = preempt_count();
      
#line 6986 
      if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 6986 
                                                     tmp_1 = 73; else 
                                                                   
#line 6986 
                                                                   tmp_1 = 85;
      
#line 6986 
      printk("\001",tmp_1,"ipw2100_wx_set_essid");
      
#line 6986 
      printk("Setting ESSID to ANY\n");
    }
    else ;
    
#line 6987 
    priv->config &= 18446744073709551613UL;
    
#line 6988 
    err = ipw2100_set_essid(priv,(char *)0,0,0);
    
#line 6989 
    goto done;
  }
  else ;
  {
    int tmp_2;
    
#line 6992 
    int _min1 = length;
    
#line 6992 
    int _min2 = 32;
    
#line 6992 
    if (_min1 < _min2) 
#line 6992 
                       tmp_2 = _min1; else 
#line 6992 
                                           tmp_2 = _min2;
    
#line 6992 
    tmp_3 = tmp_2;
  }
  
#line 6992 
  length = tmp_3;
  
#line 6994 
  priv->config |= 2UL;
  
#line 6996 
  if ((int)priv->essid_len == length) {
    int tmp_6;
    
#line 6996 
    tmp_6 = memcmp((void const *)(& priv->essid),(void const *)extra,(unsigned long)length);
    
#line 6996 
    if (tmp_6 == 0) {
      
#line 6997 
      if ((ipw2100_debug_level & 8U) != 0U) {
        int tmp_5;
        int tmp_4;
        
#line 6997 
        tmp_4 = preempt_count();
        
#line 6997 
        if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
#line 6997 
                                                       tmp_5 = 73; else 
                                                                    
#line 6997 
                                                                    tmp_5 = 85;
        
#line 6997 
        printk("\001",tmp_5,"ipw2100_wx_set_essid");
        
#line 6997 
        printk("ESSID set to current ESSID.\n");
      }
      else ;
      
#line 6998 
      err = 0;
      
#line 6999 
      goto done;
    }
    else ;
  }
  else ;
  
#line 7002 
  if ((ipw2100_debug_level & 8U) != 0U) {
    int tmp_8;
    int tmp_7;
    
#line 7002 
    tmp_7 = preempt_count();
    
#line 7002 
    if (((unsigned long)tmp_7 & 2096896UL) != 0UL) 
#line 7002 
                                                   tmp_8 = 73; else 
#line 7002 
                                                                    tmp_8 = 85;
    
#line 7002 
    printk("\001",tmp_8,"ipw2100_wx_set_essid");
    
#line 7002 
    printk("Setting ESSID: \'%*pE\' (%d)\n",length,essid,length);
  }
  else ;
  
#line 7004 
  priv->essid_len = (unsigned char)length;
  
#line 7005 
  memcpy((void *)(& priv->essid),(void const *)essid,(unsigned long)priv->essid_len);
  
#line 7007 
  err = ipw2100_set_essid(priv,essid,length,0);
  done: 
#line 7009 
  ;
  
#line 7010 
  ldv_mutex_unlock_150(& priv->action_mutex);
  
#line 7011 
  return err;
}


#line 7014  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_get_essid(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 7022 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7026 
  if ((priv->config & 2UL) != 0UL || (priv->status & 1024UL) != 0UL) {
    
#line 7027 
    if ((ipw2100_debug_level & 8U) != 0U) {
      int tmp_1;
      int tmp_0;
      
#line 7027 
      tmp_0 = preempt_count();
      
#line 7027 
      if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 7027 
                                                     tmp_1 = 73; else 
                                                                   
#line 7027 
                                                                   tmp_1 = 85;
      
#line 7027 
      printk("\001",tmp_1,"ipw2100_wx_get_essid");
      
#line 7027 
      printk("Getting essid: \'%*pE\'\n",(int)priv->essid_len,(u8 *)(& priv->essid));
    }
    else ;
    
#line 7029 
    memcpy((void *)extra,(void const *)(& priv->essid),(unsigned long)priv->essid_len);
    
#line 7030 
    wrqu->essid.length = (unsigned short)priv->essid_len;
    
#line 7031 
    wrqu->essid.flags = (unsigned short)1U;
  }
  else {
    
#line 7033 
    if ((ipw2100_debug_level & 8U) != 0U) {
      int tmp_3;
      int tmp_2;
      
#line 7033 
      tmp_2 = preempt_count();
      
#line 7033 
      if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 7033 
                                                     tmp_3 = 73; else 
                                                                   
#line 7033 
                                                                   tmp_3 = 85;
      
#line 7033 
      printk("\001",tmp_3,"ipw2100_wx_get_essid");
      
#line 7033 
      printk("Getting essid: ANY\n");
    }
    else ;
    
#line 7034 
    wrqu->essid.length = (unsigned short)0U;
    
#line 7035 
    wrqu->essid.flags = (unsigned short)0U;
  }
  
#line 7038 
  __retres = 0;
  
#line 7038 
  return __retres;
}


#line 7041  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_set_nick(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  size_t tmp_1;
  
#line 7049 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7051 
  if ((unsigned int)wrqu->data.length > 32U) {
    
#line 7052 
    __retres = -7;
    
#line 7052 
    goto return_label;
  }
  else ;
  {
    size_t tmp_0;
    
#line 7054 
    size_t __min1 = (unsigned long)wrqu->data.length;
    
#line 7054 
    size_t __min2 = 33UL;
    
#line 7054 
    if (__min1 < __min2) 
#line 7054 
                         tmp_0 = __min1; else 
#line 7054 
                                              tmp_0 = __min2;
    
#line 7054 
    tmp_1 = tmp_0;
  }
  
#line 7054 
  wrqu->data.length = (unsigned short)tmp_1;
  
#line 7055 
  memset((void *)(& priv->nick),0,33UL);
  
#line 7056 
  memcpy((void *)(& priv->nick),(void const *)extra,(unsigned long)wrqu->data.length);
  
#line 7058 
  if ((ipw2100_debug_level & 8U) != 0U) {
    int tmp_3;
    int tmp_2;
    
#line 7058 
    tmp_2 = preempt_count();
    
#line 7058 
    if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 7058 
                                                   tmp_3 = 73; else 
#line 7058 
                                                                    tmp_3 = 85;
    
#line 7058 
    printk("\001",tmp_3,"ipw2100_wx_set_nick");
    
#line 7058 
    printk("SET Nickname -> %s\n",(char *)(& priv->nick));
  }
  else ;
  
#line 7060 
  __retres = 0;
  return_label: 
#line 7060 
                return __retres;
}


#line 7063  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_get_nick(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  size_t tmp_0;
  
#line 7071 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7073 
  tmp_0 = strlen((char const *)(& priv->nick));
  
#line 7073 
  wrqu->data.length = (unsigned short)tmp_0;
  
#line 7074 
  memcpy((void *)extra,(void const *)(& priv->nick),(unsigned long)wrqu->data.length);
  
#line 7075 
  wrqu->data.flags = (unsigned short)1U;
  
#line 7077 
  if ((ipw2100_debug_level & 8U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 7077 
    tmp_1 = preempt_count();
    
#line 7077 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 7077 
                                                   tmp_2 = 73; else 
#line 7077 
                                                                    tmp_2 = 85;
    
#line 7077 
    printk("\001",tmp_2,"ipw2100_wx_get_nick");
    
#line 7077 
    printk("GET Nickname -> %s\n",extra);
  }
  else ;
  
#line 7079 
  __retres = 0;
  
#line 7079 
  return __retres;
}


#line 7082  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_set_rate(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  u32 rate;
  
#line 7086 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7087 
  u32 target_rate = (unsigned int)wrqu->bitrate.value;
  
#line 7089 
  int err = 0;
  
#line 7091 
  ldv_mutex_lock_151(& priv->action_mutex);
  
#line 7092 
  if ((priv->status & 32UL) == 0UL) {
    
#line 7093 
    err = -5;
    
#line 7094 
    goto done;
  }
  else ;
  
#line 7097 
  rate = 0U;
  
#line 7099 
  if (target_rate == 1000000U || ((unsigned int)wrqu->bitrate.fixed == 0U && target_rate > 1000000U)) 
    
#line 7101 
    rate |= 1U; else ;
  
#line 7102 
  if (target_rate == 2000000U || ((unsigned int)wrqu->bitrate.fixed == 0U && target_rate > 2000000U)) 
    
#line 7104 
    rate |= 2U; else ;
  
#line 7105 
  if (target_rate == 5500000U || ((unsigned int)wrqu->bitrate.fixed == 0U && target_rate > 5500000U)) 
    
#line 7107 
    rate |= 4U; else ;
  
#line 7108 
  if (target_rate == 11000000U || ((unsigned int)wrqu->bitrate.fixed == 0U && target_rate > 11000000U)) 
    
#line 7110 
    rate |= 8U; else ;
  
#line 7111 
  if (rate == 0U) 
#line 7112 
                  rate = 15U; else ;
  
#line 7114 
  err = ipw2100_set_tx_rates(priv,rate,0);
  
#line 7116 
  if ((ipw2100_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 7116 
    tmp_0 = preempt_count();
    
#line 7116 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 7116 
                                                   tmp_1 = 73; else 
#line 7116 
                                                                    tmp_1 = 85;
    
#line 7116 
    printk("\001",tmp_1,"ipw2100_wx_set_rate");
    
#line 7116 
    printk("SET Rate -> %04X\n",rate);
  }
  else ;
  done: 
#line 7117 
  ;
  
#line 7118 
  ldv_mutex_unlock_152(& priv->action_mutex);
  
#line 7119 
  return err;
}


#line 7122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_get_rate(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  int val;
  
#line 7126 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7128 
  unsigned int len = 4U;
  
#line 7129 
  int err = 0;
  
#line 7131 
  if (((priv->status & 8UL) == 0UL || (priv->status & 12288UL) != 0UL) || (priv->status & 1024UL) == 0UL) {
    
#line 7134 
    wrqu->bitrate.value = 0;
    
#line 7135 
    __retres = 0;
    
#line 7135 
    goto return_label;
  }
  else ;
  
#line 7138 
  ldv_mutex_lock_153(& priv->action_mutex);
  
#line 7139 
  if ((priv->status & 32UL) == 0UL) {
    
#line 7140 
    err = -5;
    
#line 7141 
    goto done;
  }
  else ;
  
#line 7144 
  err = ipw2100_get_ordinal(priv,192U,(void *)(& val),& len);
  
#line 7145 
  if (err != 0) {
    
#line 7146 
    if ((ipw2100_debug_level & 8U) != 0U) {
      int tmp_1;
      int tmp_0;
      
#line 7146 
      tmp_0 = preempt_count();
      
#line 7146 
      if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 7146 
                                                     tmp_1 = 73; else 
                                                                   
#line 7146 
                                                                   tmp_1 = 85;
      
#line 7146 
      printk("\001",tmp_1,"ipw2100_wx_get_rate");
      
#line 7146 
      printk("failed querying ordinals.\n");
    }
    else ;
    
#line 7147 
    goto done;
  }
  else ;
  
#line 7150 
  switch (val & 15) {
    case 1: 
#line 7151 
    ;
    
#line 7152 
    wrqu->bitrate.value = 1000000;
    
#line 7153 
    goto ldv_62828;
    case 2: 
#line 7154 
    ;
    
#line 7155 
    wrqu->bitrate.value = 2000000;
    
#line 7156 
    goto ldv_62828;
    case 4: 
#line 7157 
    ;
    
#line 7158 
    wrqu->bitrate.value = 5500000;
    
#line 7159 
    goto ldv_62828;
    case 8: 
#line 7160 
    ;
    
#line 7161 
    wrqu->bitrate.value = 11000000;
    
#line 7162 
    goto ldv_62828;
    default: 
#line 7163 
    ;
    
#line 7164 
    wrqu->bitrate.value = 0;
  }
  ldv_62828: 
#line 7167 
  ;
  
#line 7167 
  if ((ipw2100_debug_level & 8U) != 0U) {
    int tmp_3;
    int tmp_2;
    
#line 7167 
    tmp_2 = preempt_count();
    
#line 7167 
    if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 7167 
                                                   tmp_3 = 73; else 
#line 7167 
                                                                    tmp_3 = 85;
    
#line 7167 
    printk("\001",tmp_3,"ipw2100_wx_get_rate");
    
#line 7167 
    printk("GET Rate -> %d\n",wrqu->bitrate.value);
  }
  else ;
  done: 
#line 7169 
  ;
  
#line 7170 
  ldv_mutex_unlock_154(& priv->action_mutex);
  
#line 7171 
  __retres = err;
  return_label: 
#line 7171 
                return __retres;
}


#line 7174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_set_rts(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  int value;
  int err;
  
#line 7178 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7182 
  if ((unsigned int)wrqu->rts.fixed == 0U) {
    
#line 7183 
    __retres = -22;
    
#line 7183 
    goto return_label;
  }
  else ;
  
#line 7185 
  ldv_mutex_lock_155(& priv->action_mutex);
  
#line 7186 
  if ((priv->status & 32UL) == 0UL) {
    
#line 7187 
    err = -5;
    
#line 7188 
    goto done;
  }
  else ;
  
#line 7191 
  if ((unsigned int)wrqu->rts.disabled != 0U) 
#line 7192 
                                              value = (int)(priv->rts_threshold | 2147483648U);
  else {
    
#line 7194 
    if ((unsigned int)wrqu->rts.value + 4294967295U > 2303U) {
      
#line 7195 
      err = -22;
      
#line 7196 
      goto done;
    }
    else ;
    
#line 7198 
    value = wrqu->rts.value;
  }
  
#line 7201 
  err = ipw2100_set_rts_threshold(priv,(unsigned int)value);
  
#line 7203 
  if ((ipw2100_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 7203 
    tmp_0 = preempt_count();
    
#line 7203 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 7203 
                                                   tmp_1 = 73; else 
#line 7203 
                                                                    tmp_1 = 85;
    
#line 7203 
    printk("\001",tmp_1,"ipw2100_wx_set_rts");
    
#line 7203 
    printk("SET RTS Threshold -> 0x%08X\n",value);
  }
  else ;
  done: 
#line 7204 
  ;
  
#line 7205 
  ldv_mutex_unlock_156(& priv->action_mutex);
  
#line 7206 
  __retres = err;
  return_label: 
#line 7206 
                return __retres;
}


#line 7209  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_get_rts(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 7217 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7219 
  wrqu->rts.value = (int)priv->rts_threshold & 2147483647;
  
#line 7220 
  wrqu->rts.fixed = (unsigned char)1U;
  
#line 7223 
  wrqu->rts.disabled = (unsigned char)(priv->rts_threshold >> 31);
  
#line 7225 
  if ((ipw2100_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 7225 
    tmp_0 = preempt_count();
    
#line 7225 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 7225 
                                                   tmp_1 = 73; else 
#line 7225 
                                                                    tmp_1 = 85;
    
#line 7225 
    printk("\001",tmp_1,"ipw2100_wx_get_rts");
    
#line 7225 
    printk("GET RTS Threshold -> 0x%08X\n",wrqu->rts.value);
  }
  else ;
  
#line 7227 
  __retres = 0;
  
#line 7227 
  return __retres;
}


#line 7230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_set_txpow(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  int value;
  int tmp_0;
  
#line 7234 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7235 
  int err = 0;
  
#line 7237 
  tmp_0 = ipw_radio_kill_sw(priv,(int)wrqu->txpower.disabled);
  
#line 7237 
  if (tmp_0 != 0) {
    
#line 7238 
    __retres = -115;
    
#line 7238 
    goto return_label;
  }
  else ;
  
#line 7240 
  if ((priv->ieee)->iw_mode != 1) {
    
#line 7241 
    __retres = 0;
    
#line 7241 
    goto return_label;
  }
  else ;
  
#line 7243 
  if (((int)wrqu->txpower.flags & 255) != 0) {
    
#line 7244 
    __retres = -22;
    
#line 7244 
    goto return_label;
  }
  else ;
  
#line 7246 
  if ((unsigned int)wrqu->txpower.fixed == 0U) 
#line 7247 
                                               value = 32;
  else {
    
#line 7249 
    if ((unsigned int)wrqu->txpower.value + 12U > 28U) {
      
#line 7251 
      __retres = -22;
      
#line 7251 
      goto return_label;
    }
    else ;
    
#line 7253 
    value = wrqu->txpower.value;
  }
  
#line 7256 
  ldv_mutex_lock_157(& priv->action_mutex);
  
#line 7257 
  if ((priv->status & 32UL) == 0UL) {
    
#line 7258 
    err = -5;
    
#line 7259 
    goto done;
  }
  else ;
  
#line 7262 
  err = ipw2100_set_tx_power(priv,(unsigned int)value);
  
#line 7264 
  if ((ipw2100_debug_level & 8U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 7264 
    tmp_1 = preempt_count();
    
#line 7264 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 7264 
                                                   tmp_2 = 73; else 
#line 7264 
                                                                    tmp_2 = 85;
    
#line 7264 
    printk("\001",tmp_2,"ipw2100_wx_set_txpow");
    
#line 7264 
    printk("SET TX Power -> %d\n",value);
  }
  else ;
  done: 
#line 7266 
  ;
  
#line 7267 
  ldv_mutex_unlock_158(& priv->action_mutex);
  
#line 7268 
  __retres = err;
  return_label: 
#line 7268 
                return __retres;
}


#line 7271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_get_txpow(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 7279 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7281 
  wrqu->txpower.disabled = (unsigned char)((priv->status & 12288UL) != 0UL);
  
#line 7283 
  if (priv->tx_power == 32) {
    
#line 7284 
    wrqu->txpower.fixed = (unsigned char)0U;
    
#line 7285 
    wrqu->txpower.value = 16;
  }
  else {
    
#line 7287 
    wrqu->txpower.fixed = (unsigned char)1U;
    
#line 7288 
    wrqu->txpower.value = priv->tx_power;
  }
  
#line 7291 
  wrqu->txpower.flags = (unsigned short)0U;
  
#line 7293 
  if ((ipw2100_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 7293 
    tmp_0 = preempt_count();
    
#line 7293 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 7293 
                                                   tmp_1 = 73; else 
#line 7293 
                                                                    tmp_1 = 85;
    
#line 7293 
    printk("\001",tmp_1,"ipw2100_wx_get_txpow");
    
#line 7293 
    printk("GET TX Power -> %d\n",wrqu->txpower.value);
  }
  else ;
  
#line 7295 
  __retres = 0;
  
#line 7295 
  return __retres;
}


#line 7298  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_set_frag(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 7306 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7308 
  if ((unsigned int)wrqu->frag.fixed == 0U) {
    
#line 7309 
    __retres = -22;
    
#line 7309 
    goto return_label;
  }
  else ;
  
#line 7311 
  if ((unsigned int)wrqu->frag.disabled != 0U) {
    
#line 7312 
    priv->frag_threshold |= 2147483648U;
    
#line 7313 
    (priv->ieee)->fts = (unsigned short)2346U;
  }
  else {
    
#line 7315 
    if ((unsigned int)wrqu->frag.value + 4294967040U > 2090U) {
      
#line 7317 
      __retres = -22;
      
#line 7317 
      goto return_label;
    }
    else ;
    
#line 7319 
    (priv->ieee)->fts = (unsigned short)((unsigned int)((unsigned short)wrqu->frag.value) & 65534U);
    
#line 7320 
    priv->frag_threshold = (unsigned int)(priv->ieee)->fts;
  }
  
#line 7323 
  if ((ipw2100_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 7323 
    tmp_0 = preempt_count();
    
#line 7323 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 7323 
                                                   tmp_1 = 73; else 
#line 7323 
                                                                    tmp_1 = 85;
    
#line 7323 
    printk("\001",tmp_1,"ipw2100_wx_set_frag");
    
#line 7323 
    printk("SET Frag Threshold -> %d\n",(int)(priv->ieee)->fts);
  }
  else ;
  
#line 7325 
  __retres = 0;
  return_label: 
#line 7325 
                return __retres;
}


#line 7328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_get_frag(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 7336 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7337 
  wrqu->frag.value = (int)priv->frag_threshold & 2147483647;
  
#line 7338 
  wrqu->frag.fixed = (unsigned char)0U;
  
#line 7339 
  wrqu->frag.disabled = (unsigned char)(priv->frag_threshold >> 31);
  
#line 7341 
  if ((ipw2100_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 7341 
    tmp_0 = preempt_count();
    
#line 7341 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 7341 
                                                   tmp_1 = 73; else 
#line 7341 
                                                                    tmp_1 = 85;
    
#line 7341 
    printk("\001",tmp_1,"ipw2100_wx_get_frag");
    
#line 7341 
    printk("GET Frag Threshold -> %d\n",wrqu->frag.value);
  }
  else ;
  
#line 7343 
  __retres = 0;
  
#line 7343 
  return __retres;
}


#line 7346  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_set_retry(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 7350 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7351 
  int err = 0;
  
#line 7353 
  if (((int)wrqu->retry.flags & 8192) != 0 || (unsigned int)wrqu->retry.disabled != 0U) {
    
#line 7354 
    __retres = -22;
    
#line 7354 
    goto return_label;
  }
  else ;
  
#line 7356 
  if (((int)wrqu->retry.flags & 4096) == 0) {
    
#line 7357 
    __retres = 0;
    
#line 7357 
    goto return_label;
  }
  else ;
  
#line 7359 
  ldv_mutex_lock_159(& priv->action_mutex);
  
#line 7360 
  if ((priv->status & 32UL) == 0UL) {
    
#line 7361 
    err = -5;
    
#line 7362 
    goto done;
  }
  else ;
  
#line 7365 
  if (((int)wrqu->retry.flags & 16) != 0) {
    
#line 7366 
    err = ipw2100_set_short_retry(priv,(unsigned int)wrqu->retry.value);
    
#line 7367 
    if ((ipw2100_debug_level & 8U) != 0U) {
      int tmp_1;
      int tmp_0;
      
#line 7367 
      tmp_0 = preempt_count();
      
#line 7367 
      if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 7367 
                                                     tmp_1 = 73; else 
                                                                   
#line 7367 
                                                                   tmp_1 = 85;
      
#line 7367 
      printk("\001",tmp_1,"ipw2100_wx_set_retry");
      
#line 7367 
      printk("SET Short Retry Limit -> %d\n",wrqu->retry.value);
    }
    else ;
    
#line 7369 
    goto done;
  }
  else ;
  
#line 7372 
  if (((int)wrqu->retry.flags & 32) != 0) {
    
#line 7373 
    err = ipw2100_set_long_retry(priv,(unsigned int)wrqu->retry.value);
    
#line 7374 
    if ((ipw2100_debug_level & 8U) != 0U) {
      int tmp_3;
      int tmp_2;
      
#line 7374 
      tmp_2 = preempt_count();
      
#line 7374 
      if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 7374 
                                                     tmp_3 = 73; else 
                                                                   
#line 7374 
                                                                   tmp_3 = 85;
      
#line 7374 
      printk("\001",tmp_3,"ipw2100_wx_set_retry");
      
#line 7374 
      printk("SET Long Retry Limit -> %d\n",wrqu->retry.value);
    }
    else ;
    
#line 7376 
    goto done;
  }
  else ;
  
#line 7379 
  err = ipw2100_set_short_retry(priv,(unsigned int)wrqu->retry.value);
  
#line 7380 
  if (err == 0) 
#line 7381 
                err = ipw2100_set_long_retry(priv,(unsigned int)wrqu->retry.value); else ;
  
#line 7383 
  if ((ipw2100_debug_level & 8U) != 0U) {
    int tmp_5;
    int tmp_4;
    
#line 7383 
    tmp_4 = preempt_count();
    
#line 7383 
    if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
#line 7383 
                                                   tmp_5 = 73; else 
#line 7383 
                                                                    tmp_5 = 85;
    
#line 7383 
    printk("\001",tmp_5,"ipw2100_wx_set_retry");
    
#line 7383 
    printk("SET Both Retry Limits -> %d\n",wrqu->retry.value);
  }
  else ;
  done: 
#line 7385 
  ;
  
#line 7386 
  ldv_mutex_unlock_160(& priv->action_mutex);
  
#line 7387 
  __retres = err;
  return_label: 
#line 7387 
                return __retres;
}


#line 7390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_get_retry(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 7398 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7400 
  wrqu->retry.disabled = (unsigned char)0U;
  
#line 7402 
  if (((int)wrqu->retry.flags & 61440) == 8192) {
    
#line 7403 
    __retres = -22;
    
#line 7403 
    goto return_label;
  }
  else ;
  
#line 7405 
  if (((int)wrqu->retry.flags & 32) != 0) {
    
#line 7406 
    wrqu->retry.flags = (unsigned short)4128U;
    
#line 7407 
    wrqu->retry.value = priv->long_retry_limit;
  }
  else {
    
#line 7409 
    if (priv->short_retry_limit != priv->long_retry_limit) 
#line 7409 
                                                           wrqu->retry.flags = (unsigned short)4112U; else 
                                                                    
#line 7409 
                                                                    wrqu->retry.flags = (unsigned short)4096U;
    
#line 7414 
    wrqu->retry.value = priv->short_retry_limit;
  }
  
#line 7417 
  if ((ipw2100_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 7417 
    tmp_0 = preempt_count();
    
#line 7417 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 7417 
                                                   tmp_1 = 73; else 
#line 7417 
                                                                    tmp_1 = 85;
    
#line 7417 
    printk("\001",tmp_1,"ipw2100_wx_get_retry");
    
#line 7417 
    printk("GET Retry -> %d\n",wrqu->retry.value);
  }
  else ;
  
#line 7419 
  __retres = 0;
  return_label: 
#line 7419 
                return __retres;
}


#line 7422  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_set_scan(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int tmp_4;
  
#line 7426 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7427 
  int err = 0;
  
#line 7429 
  ldv_mutex_lock_161(& priv->action_mutex);
  
#line 7430 
  if ((priv->status & 32UL) == 0UL) {
    
#line 7431 
    err = -5;
    
#line 7432 
    goto done;
  }
  else ;
  
#line 7435 
  if ((ipw2100_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 7435 
    tmp_0 = preempt_count();
    
#line 7435 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 7435 
                                                   tmp_1 = 73; else 
#line 7435 
                                                                    tmp_1 = 85;
    
#line 7435 
    printk("\001",tmp_1,"ipw2100_wx_set_scan");
    
#line 7435 
    printk("Initiating scan...\n");
  }
  else ;
  
#line 7437 
  priv->user_requested_scan = 1;
  
#line 7438 
  tmp_4 = ipw2100_set_scan_options(priv);
  
#line 7438 
  if (tmp_4 != 0) 
#line 7438 
                  goto _LOR;
  else {
    int tmp_5;
    
#line 7438 
    tmp_5 = ipw2100_start_scan(priv);
    
#line 7438 
    if (tmp_5 != 0) {
      _LOR: 
#line 7439 
      ;
      
#line 7439 
      if ((ipw2100_debug_level & 8U) != 0U) {
        int tmp_3;
        int tmp_2;
        
#line 7439 
        tmp_2 = preempt_count();
        
#line 7439 
        if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 7439 
                                                       tmp_3 = 73; else 
                                                                    
#line 7439 
                                                                    tmp_3 = 85;
        
#line 7439 
        printk("\001",tmp_3,"ipw2100_wx_set_scan");
        
#line 7439 
        printk("Start scan failed.\n");
      }
      else ;
    }
    else ;
  }
  done: 
#line 7445 
  ;
  
#line 7446 
  ldv_mutex_unlock_162(& priv->action_mutex);
  
#line 7447 
  return err;
}


#line 7450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_get_scan(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int tmp_0;
  
#line 7458 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7459 
  tmp_0 = libipw_wx_get_scan(priv->ieee,info,wrqu,extra);
  
#line 7459 
  return tmp_0;
}


#line 7465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_set_encode(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *key)
{
  int tmp_0;
  
#line 7473 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7474 
  tmp_0 = libipw_wx_set_encode(priv->ieee,info,wrqu,key);
  
#line 7474 
  return tmp_0;
}


#line 7477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_get_encode(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *key)
{
  int tmp_0;
  
#line 7485 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7486 
  tmp_0 = libipw_wx_get_encode(priv->ieee,info,wrqu,key);
  
#line 7486 
  return tmp_0;
}


#line 7489  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_set_power(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  
#line 7493 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7494 
  int err = 0;
  
#line 7496 
  ldv_mutex_lock_163(& priv->action_mutex);
  
#line 7497 
  if ((priv->status & 32UL) == 0UL) {
    
#line 7498 
    err = -5;
    
#line 7499 
    goto done;
  }
  else ;
  
#line 7502 
  if ((unsigned int)wrqu->power.disabled != 0U) {
    
#line 7503 
    priv->power_mode &= 15;
    
#line 7504 
    err = ipw2100_set_power_mode(priv,0);
    
#line 7505 
    if ((ipw2100_debug_level & 8U) != 0U) {
      int tmp_1;
      int tmp_0;
      
#line 7505 
      tmp_0 = preempt_count();
      
#line 7505 
      if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 7505 
                                                     tmp_1 = 73; else 
                                                                   
#line 7505 
                                                                   tmp_1 = 85;
      
#line 7505 
      printk("\001",tmp_1,"ipw2100_wx_set_power");
      
#line 7505 
      printk("SET Power Management Mode -> off\n");
    }
    else ;
    
#line 7506 
    goto done;
  }
  else ;
  
#line 7509 
  switch ((int)wrqu->power.flags & 3840) {
    case 0: 
#line 7510 
    ;
    case 3840: 
#line 7511 
    ;
    case 768: 
#line 7512 
    ;
    
#line 7513 
    goto ldv_62949;
    default: 
#line 7514 
    ;
    
#line 7515 
    if ((ipw2100_debug_level & 8U) != 0U) {
      int tmp_3;
      int tmp_2;
      
#line 7515 
      tmp_2 = preempt_count();
      
#line 7515 
      if (((unsigned long)tmp_2 & 2096896UL) != 0UL) 
#line 7515 
                                                     tmp_3 = 73; else 
                                                                   
#line 7515 
                                                                   tmp_3 = 85;
      
#line 7515 
      printk("\001",tmp_3,"ipw2100_wx_set_power");
      
#line 7515 
      printk("SET PM Mode: %X not supported.\n",(int)wrqu->power.flags);
    }
    else ;
    
#line 7517 
    err = -95;
    
#line 7518 
    goto done;
  }
  ldv_62949: 
#line 7523 
  ;
  
#line 7523 
  priv->power_mode |= 16;
  
#line 7524 
  err = ipw2100_set_power_mode(priv,priv->power_mode & 15);
  
#line 7526 
  if ((ipw2100_debug_level & 8U) != 0U) {
    int tmp_5;
    int tmp_4;
    
#line 7526 
    tmp_4 = preempt_count();
    
#line 7526 
    if (((unsigned long)tmp_4 & 2096896UL) != 0UL) 
#line 7526 
                                                   tmp_5 = 73; else 
#line 7526 
                                                                    tmp_5 = 85;
    
#line 7526 
    printk("\001",tmp_5,"ipw2100_wx_set_power");
    
#line 7526 
    printk("SET Power Management Mode -> 0x%02X\n",priv->power_mode);
  }
  else ;
  done: 
#line 7528 
  ;
  
#line 7529 
  ldv_mutex_unlock_164(& priv->action_mutex);
  
#line 7530 
  return err;
}


#line 7534  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_get_power(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 7542 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7544 
  if ((priv->power_mode & 16) == 0) 
#line 7545 
                                    wrqu->power.disabled = (unsigned char)1U;
  else {
    
#line 7547 
    wrqu->power.disabled = (unsigned char)0U;
    
#line 7548 
    wrqu->power.flags = (unsigned short)0U;
  }
  
#line 7551 
  if ((ipw2100_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 7551 
    tmp_0 = preempt_count();
    
#line 7551 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 7551 
                                                   tmp_1 = 73; else 
#line 7551 
                                                                    tmp_1 = 85;
    
#line 7551 
    printk("\001",tmp_1,"ipw2100_wx_get_power");
    
#line 7551 
    printk("GET Power Management Mode -> %02X\n",priv->power_mode);
  }
  else ;
  
#line 7553 
  __retres = 0;
  
#line 7553 
  return __retres;
}


#line 7561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_set_genie(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  u8 *buf;
  
#line 7566 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7567 
  struct libipw_device *ieee = priv->ieee;
  
#line 7570 
  if (ieee->wpa_enabled == 0) {
    
#line 7571 
    __retres = -95;
    
#line 7571 
    goto return_label;
  }
  else ;
  
#line 7573 
  if ((unsigned int)wrqu->data.length > 64U || ((unsigned int)wrqu->data.length != 0U && extra == (char *)0)) {
    
#line 7575 
    __retres = -22;
    
#line 7575 
    goto return_label;
  }
  else ;
  
#line 7577 
  if ((unsigned int)wrqu->data.length != 0U) {
    
#line 7578 
    buf = (u8 *)kmemdup((void const *)extra,(unsigned long)wrqu->data.length,208U);
    
#line 7579 
    if (buf == (u8 *)0U) {
      
#line 7580 
      __retres = -12;
      
#line 7580 
      goto return_label;
    }
    else ;
    
#line 7582 
    kfree((void const *)ieee->wpa_ie);
    
#line 7583 
    ieee->wpa_ie = buf;
    
#line 7584 
    ieee->wpa_ie_len = (unsigned long)wrqu->data.length;
  }
  else {
    
#line 7586 
    kfree((void const *)ieee->wpa_ie);
    
#line 7587 
    ieee->wpa_ie = (u8 *)0U;
    
#line 7588 
    ieee->wpa_ie_len = 0UL;
  }
  
#line 7591 
  ipw2100_wpa_assoc_frame(priv,(char *)ieee->wpa_ie,(int)ieee->wpa_ie_len);
  
#line 7593 
  __retres = 0;
  return_label: 
#line 7593 
                return __retres;
}


#line 7597  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_get_genie(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 7601 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7602 
  struct libipw_device *ieee = priv->ieee;
  
#line 7604 
  if (ieee->wpa_ie_len == 0UL || ieee->wpa_ie == (u8 *)0U) {
    
#line 7605 
    wrqu->data.length = (unsigned short)0U;
    
#line 7606 
    __retres = 0;
    
#line 7606 
    goto return_label;
  }
  else ;
  
#line 7609 
  if ((unsigned long)wrqu->data.length < ieee->wpa_ie_len) {
    
#line 7610 
    __retres = -7;
    
#line 7610 
    goto return_label;
  }
  else ;
  
#line 7612 
  wrqu->data.length = (unsigned short)ieee->wpa_ie_len;
  
#line 7613 
  memcpy((void *)extra,(void const *)ieee->wpa_ie,ieee->wpa_ie_len);
  
#line 7615 
  __retres = 0;
  return_label: 
#line 7615 
                return __retres;
}


#line 7619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_set_auth(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  struct lib80211_crypt_data *crypt;
  unsigned long flags;
  
#line 7623 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7624 
  struct libipw_device *ieee = priv->ieee;
  
#line 7625 
  struct iw_param *param = & wrqu->param;
  
#line 7628 
  int ret = 0;
  
#line 7630 
  switch ((int)param->flags & 4095) {
    case 0: 
#line 7631 
    ;
    case 1: 
#line 7632 
    ;
    case 2: 
#line 7633 
    ;
    case 3: 
#line 7634 
    ;
    
#line 7638 
    goto ldv_62992;
    case 4: 
#line 7640 
    ;
    
#line 7641 
    crypt = (priv->ieee)->crypt_info.crypt[(priv->ieee)->crypt_info.tx_keyidx];
    
#line 7642 
    if ((crypt == (struct lib80211_crypt_data *)0 || (crypt->ops)->set_flags == (unsigned long (*)(unsigned long , void *))0) || (crypt->ops)->get_flags == (unsigned long (*)(void *))0) 
      
#line 7643 
      goto ldv_62992; else ;
    
#line 7645 
    flags = (*((crypt->ops)->get_flags))(crypt->priv);
    
#line 7647 
    if (param->value != 0) 
#line 7648 
                           flags |= 1UL; else 
#line 7650 
                                              flags &= 18446744073709551614UL;
    
#line 7652 
    (*((crypt->ops)->set_flags))(flags,crypt->priv);
    
#line 7654 
    goto ldv_62992;
    case 5: 
#line 7656 
    ;
    {
      
#line 7668 
      struct libipw_security sec = {.active_key = (unsigned short)0, .enabled = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))param->value, .unicast_uses_group = (unsigned short)0, .encrypt = (unsigned short)0, .auth_mode = (unsigned char)0, .encode_alg = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .key_sizes = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, .keys = {{(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}, {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}}, .level = (unsigned char)0, .flags = (unsigned short)256U};
      
#line 7672 
      (priv->ieee)->drop_unencrypted = param->value;
      
#line 7676 
      if (param->value == 0) {
        
#line 7677 
        sec.flags = (unsigned short)((unsigned int)sec.flags | 128U);
        
#line 7678 
        sec.level = (unsigned char)0U;
      }
      else {
        
#line 7680 
        sec.flags = (unsigned short)((unsigned int)sec.flags | 128U);
        
#line 7681 
        sec.level = (unsigned char)1U;
      }
      
#line 7683 
      if ((priv->ieee)->set_security != (void (*)(struct net_device *, struct libipw_security *))0) 
        
#line 7684 
        (*((priv->ieee)->set_security))((priv->ieee)->dev,& sec); else ;
      
#line 7685 
      goto ldv_62992;
    }
    case 6: 
#line 7688 
    ;
    
#line 7689 
    ret = ipw2100_wpa_set_auth_algs(priv,param->value);
    
#line 7690 
    goto ldv_62992;
    case 7: 
#line 7692 
    ;
    
#line 7693 
    ret = ipw2100_wpa_enable(priv,param->value);
    
#line 7694 
    goto ldv_62992;
    case 8: 
#line 7696 
    ;
    
#line 7697 
    ieee->ieee802_1x = param->value;
    
#line 7698 
    goto ldv_62992;
    case 10: 
#line 7701 
    ;
    
#line 7702 
    ieee->privacy_invoked = param->value;
    
#line 7703 
    goto ldv_62992;
    default: 
#line 7705 
    ;
    
#line 7706 
    __retres = -95;
    
#line 7706 
    goto return_label;
  }
  ldv_62992: 
#line 7708 
  ;
  
#line 7708 
  __retres = ret;
  return_label: 
#line 7708 
                return __retres;
}


#line 7712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_get_auth(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  struct lib80211_crypt_data *crypt;
  
#line 7716 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7717 
  struct libipw_device *ieee = priv->ieee;
  
#line 7719 
  struct iw_param *param = & wrqu->param;
  
#line 7720 
  int ret = 0;
  
#line 7722 
  switch ((int)param->flags & 4095) {
    unsigned long tmp_0;
    case 0: 
#line 7723 
    ;
    case 1: 
#line 7724 
    ;
    case 2: 
#line 7725 
    ;
    case 3: 
#line 7726 
    ;
    
#line 7730 
    ret = -95;
    
#line 7731 
    goto ldv_63016;
    case 4: 
#line 7733 
    ;
    
#line 7734 
    crypt = (priv->ieee)->crypt_info.crypt[(priv->ieee)->crypt_info.tx_keyidx];
    
#line 7735 
    if (crypt == (struct lib80211_crypt_data *)0 || (crypt->ops)->get_flags == (unsigned long (*)(void *))0) {
      
#line 7736 
      printk("\001");
      
#line 7738 
      goto ldv_63016;
    }
    else ;
    
#line 7741 
    tmp_0 = (*((crypt->ops)->get_flags))(crypt->priv);
    
#line 7741 
    param->value = (tmp_0 & 1UL) != 0UL;
    
#line 7744 
    goto ldv_63016;
    case 5: 
#line 7746 
    ;
    
#line 7747 
    param->value = ieee->drop_unencrypted;
    
#line 7748 
    goto ldv_63016;
    case 6: 
#line 7750 
    ;
    
#line 7751 
    param->value = (int)(priv->ieee)->sec.auth_mode;
    
#line 7752 
    goto ldv_63016;
    case 7: 
#line 7754 
    ;
    
#line 7755 
    param->value = ieee->wpa_enabled;
    
#line 7756 
    goto ldv_63016;
    case 8: 
#line 7758 
    ;
    
#line 7759 
    param->value = ieee->ieee802_1x;
    
#line 7760 
    goto ldv_63016;
    case 9: 
#line 7762 
    ;
    case 10: 
#line 7763 
    ;
    
#line 7764 
    param->value = ieee->privacy_invoked;
    
#line 7765 
    goto ldv_63016;
    default: 
#line 7767 
    ;
    
#line 7768 
    __retres = -95;
    
#line 7768 
    goto return_label;
  }
  ldv_63016: 
#line 7770 
  ;
  
#line 7770 
  __retres = 0;
  return_label: 
#line 7770 
                return __retres;
}


#line 7774  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_set_encodeext(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int tmp_0;
  
#line 7778 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7779 
  tmp_0 = libipw_wx_set_encodeext(priv->ieee,info,wrqu,extra);
  
#line 7779 
  return tmp_0;
}


#line 7783  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_get_encodeext(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int tmp_0;
  
#line 7787 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7788 
  tmp_0 = libipw_wx_get_encodeext(priv->ieee,info,wrqu,extra);
  
#line 7788 
  return tmp_0;
}


#line 7792  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_set_mlme(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  __le16 reason;
  
#line 7796 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7797 
  struct iw_mlme *mlme = (struct iw_mlme *)extra;
  
#line 7800 
  reason = mlme->reason_code;
  
#line 7802 
  switch ((int)mlme->cmd) {
    case 0: 
#line 7803 
    ;
    
#line 7805 
    goto ldv_63049;
    case 1: 
#line 7807 
    ;
    
#line 7808 
    ipw2100_disassociate_bssid(priv);
    
#line 7809 
    goto ldv_63049;
    default: 
#line 7811 
    ;
    
#line 7812 
    __retres = -95;
    
#line 7812 
    goto return_label;
  }
  ldv_63049: 
#line 7814 
  ;
  
#line 7814 
  __retres = 0;
  return_label: 
#line 7814 
                return __retres;
}


#line 7823  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_set_promisc(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  
#line 7827 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7828 
  int *parms = (int *)extra;
  
#line 7829 
  int enable = *parms > 0;
  
#line 7830 
  int err = 0;
  
#line 7832 
  ldv_mutex_lock_165(& priv->action_mutex);
  
#line 7833 
  if ((priv->status & 32UL) == 0UL) {
    
#line 7834 
    err = -5;
    
#line 7835 
    goto done;
  }
  else ;
  
#line 7838 
  if (enable != 0) {
    
#line 7839 
    if ((priv->ieee)->iw_mode == 6) {
      
#line 7840 
      err = ipw2100_set_channel(priv,(unsigned int)*(parms + 1U),0);
      
#line 7841 
      goto done;
    }
    else ;
    
#line 7843 
    priv->channel = (unsigned char)*(parms + 1U);
    
#line 7844 
    err = ipw2100_switch_mode(priv,6U);
  }
  else 
    
#line 7846 
    if ((priv->ieee)->iw_mode == 6) 
#line 7847 
                                    err = ipw2100_switch_mode(priv,(unsigned int)priv->last_mode); else ;
  done: 
#line 7849 
  ;
  
#line 7850 
  ldv_mutex_unlock_166(& priv->action_mutex);
  
#line 7851 
  return err;
}


#line 7854  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_reset(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 7858 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7859 
  if ((priv->status & 32UL) != 0UL) 
#line 7860 
                                    schedule_reset(priv); else ;
  
#line 7861 
  __retres = 0;
  
#line 7861 
  return __retres;
}


#line 7866  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_set_powermode(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  
#line 7870 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7871 
  int err = 0;
  
#line 7871 
  int mode = *((int *)extra);
  
#line 7873 
  ldv_mutex_lock_167(& priv->action_mutex);
  
#line 7874 
  if ((priv->status & 32UL) == 0UL) {
    
#line 7875 
    err = -5;
    
#line 7876 
    goto done;
  }
  else ;
  
#line 7879 
  if ((unsigned int)mode > 5U) 
#line 7880 
                               mode = 6; else ;
  
#line 7882 
  if ((priv->power_mode & 15) != mode) 
#line 7883 
                                       err = ipw2100_set_power_mode(priv,mode); else ;
  done: 
#line 7884 
  ;
  
#line 7885 
  ldv_mutex_unlock_168(& priv->action_mutex);
  
#line 7886 
  return err;
}


#line 7890  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_get_powermode(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  s32 timeout;
  s32 period;
  size_t tmp_0;
  
#line 7898 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7899 
  int level = priv->power_mode & 15;
  
#line 7902 
  if ((priv->power_mode & 16) == 0) 
#line 7903 
                                    snprintf(extra,80UL,"Power save level: %d (Off)",level);
  else {
    
#line 7906 
    switch (level) {
      case 0: 
#line 7907 
      ;
      
#line 7908 
      snprintf(extra,80UL,"Power save level: %d (None)",level);
      
#line 7910 
      goto ldv_63091;
      case 6: 
#line 7911 
      ;
      
#line 7912 
      snprintf(extra,80UL,"Power save level: %d (Auto)",level);
      
#line 7914 
      goto ldv_63091;
      default: 
#line 7915 
      ;
      
#line 7916 
      timeout = timeout_duration[level + -1] / 1000;
      
#line 7917 
      period = period_duration[level + -1] / 1000;
      
#line 7918 
      snprintf(extra,80UL,"Power save level: %d ",level,timeout,period);
    }
    ldv_63091: 
#line 7923 
    ;
  }
  
#line 7925 
  tmp_0 = strlen((char const *)extra);
  
#line 7925 
  wrqu->data.length = (unsigned short)((unsigned int)((unsigned short)tmp_0) + 1U);
  
#line 7927 
  __retres = 0;
  
#line 7927 
  return __retres;
}


#line 7930  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_set_preamble(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int err;
  
#line 7934 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7935 
  int mode = *((int *)extra);
  
#line 7937 
  ldv_mutex_lock_169(& priv->action_mutex);
  
#line 7938 
  if ((priv->status & 32UL) == 0UL) {
    
#line 7939 
    err = -5;
    
#line 7940 
    goto done;
  }
  else ;
  
#line 7943 
  if (mode == 1) 
#line 7944 
                 priv->config |= 16UL;
  else 
    
#line 7945 
    if (mode == 0) 
#line 7946 
                   priv->config &= 18446744073709551599UL;
    else {
      
#line 7948 
      err = -22;
      
#line 7949 
      goto done;
    }
  
#line 7952 
  err = ipw2100_system_config(priv,0);
  done: 
#line 7954 
  ;
  
#line 7955 
  ldv_mutex_unlock_170(& priv->action_mutex);
  
#line 7956 
  return err;
}


#line 7959  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_get_preamble(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 7967 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7969 
  if ((priv->config & 16UL) != 0UL) 
#line 7970 
                                    snprintf((char *)(& wrqu->name),16UL,"long (1)"); else 
                                                                    
#line 7972 
                                                                    snprintf((char *)(& wrqu->name),16UL,"auto (0)");
  
#line 7974 
  __retres = 0;
  
#line 7974 
  return __retres;
}


#line 7978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_set_crc_check(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int err;
  
#line 7982 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 7983 
  int mode = *((int *)extra);
  
#line 7985 
  ldv_mutex_lock_171(& priv->action_mutex);
  
#line 7986 
  if ((priv->status & 32UL) == 0UL) {
    
#line 7987 
    err = -5;
    
#line 7988 
    goto done;
  }
  else ;
  
#line 7991 
  if (mode == 1) 
#line 7992 
                 priv->config |= 2048UL;
  else 
    
#line 7993 
    if (mode == 0) 
#line 7994 
                   priv->config &= 18446744073709549567UL;
    else {
      
#line 7996 
      err = -22;
      
#line 7997 
      goto done;
    }
  
#line 7999 
  err = 0;
  done: 
#line 8001 
  ;
  
#line 8002 
  ldv_mutex_unlock_172(& priv->action_mutex);
  
#line 8003 
  return err;
}


#line 8006  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_wx_get_crc_check(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 8014 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 8016 
  if ((priv->config & 2048UL) != 0UL) 
#line 8017 
                                      snprintf((char *)(& wrqu->name),16UL,"CRC checked (1)"); else 
                                                                    
#line 8019 
                                                                    snprintf((char *)(& wrqu->name),16UL,"CRC ignored (0)");
  
#line 8021 
  __retres = 0;
  
#line 8021 
  return __retres;
}


#line 8025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static iw_handler ipw2100_wx_handlers[54U] = {[1] = & ipw2100_wx_get_name, [4] = & ipw2100_wx_set_freq, & ipw2100_wx_get_freq, & ipw2100_wx_set_mode, & ipw2100_wx_get_mode, [11] = & ipw2100_wx_get_range, [20] = & ipw2100_wx_set_wap, & ipw2100_wx_get_wap, & ipw2100_wx_set_mlme, [24] = & ipw2100_wx_set_scan, & ipw2100_wx_get_scan, & ipw2100_wx_set_essid, & ipw2100_wx_get_essid, & ipw2100_wx_set_nick, & ipw2100_wx_get_nick, [32] = & ipw2100_wx_set_rate, & ipw2100_wx_get_rate, & ipw2100_wx_set_rts, & ipw2100_wx_get_rts, & ipw2100_wx_set_frag, & ipw2100_wx_get_frag, & ipw2100_wx_set_txpow, & ipw2100_wx_get_txpow, & ipw2100_wx_set_retry, & ipw2100_wx_get_retry, & ipw2100_wx_set_encode, & ipw2100_wx_get_encode, & ipw2100_wx_set_power, & ipw2100_wx_get_power, [48] = & ipw2100_wx_set_genie, & ipw2100_wx_get_genie, & ipw2100_wx_set_auth, & ipw2100_wx_get_auth, & ipw2100_wx_set_encodeext, & ipw2100_wx_get_encodeext};

#line 8072  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct iw_priv_args const ipw2100_private_args[8U] = {{.cmd = 35808U, .set_args = (unsigned short)18434U, .get_args = (unsigned short)0U, .name = {(char)'m', (char)'o', (char)'n', (char)'i', (char)'t', (char)'o', (char)'r', (char)'\000'}}, {.cmd = 35809U, .set_args = (unsigned short)18432U, .get_args = (unsigned short)0U, .name = {(char)'r', (char)'e', (char)'s', (char)'e', (char)'t', (char)'\000'}}, {.cmd = 35810U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'s', (char)'e', (char)'t', (char)'_', (char)'p', (char)'o', (char)'w', (char)'e', (char)'r', (char)'\000'}}, {.cmd = 35811U, .set_args = (unsigned short)0U, .get_args = (unsigned short)10320U, .name = {(char)'g', (char)'e', (char)'t', (char)'_', (char)'p', (char)'o', (char)'w', (char)'e', (char)'r', (char)'\000'}}, {.cmd = 35812U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'s', (char)'e', (char)'t', (char)'_', (char)'p', (char)'r', (char)'e', (char)'a', (char)'m', (char)'b', (char)'l', (char)'e', (char)'\000'}}, {.cmd = 35813U, .set_args = (unsigned short)0U, .get_args = (unsigned short)10256U, .name = {(char)'g', (char)'e', (char)'t', (char)'_', (char)'p', (char)'r', (char)'e', (char)'a', (char)'m', (char)'b', (char)'l', (char)'e', (char)'\000'}}, {.cmd = 35814U, .set_args = (unsigned short)18433U, .get_args = (unsigned short)0U, .name = {(char)'s', (char)'e', (char)'t', (char)'_', (char)'c', (char)'r', (char)'c', (char)'_', (char)'c', (char)'h', (char)'e', (char)'c', (char)'k', (char)'\000'}}, {.cmd = 35815U, .set_args = (unsigned short)0U, .get_args = (unsigned short)10256U, .name = {(char)'g', (char)'e', (char)'t', (char)'_', (char)'c', (char)'r', (char)'c', (char)'_', (char)'c', (char)'h', (char)'e', (char)'c', (char)'k', (char)'\000'}}};

#line 8106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static iw_handler ipw2100_private_handler[8U] = {& ipw2100_wx_set_promisc, & ipw2100_wx_reset, & ipw2100_wx_set_powermode, & ipw2100_wx_get_powermode, & ipw2100_wx_set_preamble, & ipw2100_wx_get_preamble, & ipw2100_wx_set_crc_check, & ipw2100_wx_get_crc_check};

#line 8132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct iw_statistics *ipw2100_wx_wireless_stats(struct net_device *dev)
{
  struct iw_statistics *__retres;
  int rssi_qual;
  int tx_qual;
  int beacon_qual;
  int quality;
  struct iw_statistics *wstats;
  u32 rssi;
  u32 tx_retries;
  u32 missed_beacons;
  u32 tx_failures;
  int tmp_0;
  int tmp_15;
  
#line 8147 
  struct ipw2100_priv *priv = libipw_priv(dev);
  
#line 8150 
  u32 ord_len = 4U;
  
#line 8152 
  if (priv == (struct ipw2100_priv *)0) {
    
#line 8153 
    __retres = (struct iw_statistics *)0;
    
#line 8153 
    goto return_label;
  }
  else ;
  
#line 8155 
  wstats = & priv->wstats;
  
#line 8162 
  if ((priv->status & 1024UL) == 0UL) {
    
#line 8163 
    wstats->miss.beacon = 0U;
    
#line 8164 
    wstats->discard.retries = 0U;
    
#line 8165 
    wstats->qual.qual = (unsigned char)0U;
    
#line 8166 
    wstats->qual.level = (unsigned char)0U;
    
#line 8167 
    wstats->qual.noise = (unsigned char)0U;
    
#line 8168 
    wstats->qual.updated = (unsigned char)7U;
    
#line 8169 
    wstats->qual.updated = (unsigned char)((unsigned int)wstats->qual.updated | 112U);
    
#line 8171 
    __retres = wstats;
    
#line 8171 
    goto return_label;
  }
  else ;
  
#line 8174 
  tmp_0 = ipw2100_get_ordinal(priv,148U,(void *)(& missed_beacons),& ord_len);
  
#line 8174 
  if (tmp_0 != 0) 
#line 8176 
                  goto fail_get_ordinal; else ;
  
#line 8179 
  if ((priv->status & 1024UL) == 0UL) {
    
#line 8180 
    wstats->qual.qual = (unsigned char)0U;
    
#line 8181 
    wstats->qual.level = (unsigned char)0U;
  }
  else {
    int tmp_1;
    int tmp_2;
    int tmp_4;
    int tmp_6;
    
#line 8183 
    tmp_1 = ipw2100_get_ordinal(priv,173U,(void *)(& rssi),& ord_len);
    
#line 8183 
    if (tmp_1 != 0) 
#line 8185 
                    goto fail_get_ordinal; else ;
    
#line 8186 
    wstats->qual.level = (unsigned char)((unsigned int)((unsigned char)rssi) + 158U);
    
#line 8187 
    if (rssi <= 9U) 
#line 8188 
                    rssi_qual = (int)((rssi * 30U) / 10U);
    else 
      
#line 8189 
      if (rssi <= 14U) 
#line 8190 
                       rssi_qual = (int)((rssi * 30U + 4294966996U) / 5U + 30U);
      else 
        
#line 8191 
        if (rssi <= 19U) 
#line 8192 
                         rssi_qual = (int)((rssi * 20U + 4294966996U) / 5U + 60U);
        else 
          
#line 8193 
          if (rssi <= 29U) 
#line 8194 
                           rssi_qual = (int)((rssi * 10U + 4294967096U) / 10U + 80U); else 
                                                                    
#line 8197 
                                                                    rssi_qual = (int)((rssi * 10U + 4294966996U) / 10U + 90U);
    
#line 8200 
    tmp_2 = ipw2100_get_ordinal(priv,149U,(void *)(& tx_retries),& ord_len);
    
#line 8200 
    if (tmp_2 != 0) 
#line 8202 
                    goto fail_get_ordinal; else ;
    
#line 8204 
    if (tx_retries > 75U) 
#line 8205 
                          tx_qual = (int)((tx_retries * 4294967266U + 2700U) / 15U);
    else 
      
#line 8206 
      if (tx_retries > 70U) 
#line 8207 
                            tx_qual = (int)((tx_retries * 4294967266U + 2250U) / 5U + 30U);
      else 
        
#line 8208 
        if (tx_retries > 65U) 
#line 8209 
                              tx_qual = (int)((tx_retries * 4294967276U + 1400U) / 5U + 60U);
        else 
          
#line 8210 
          if (tx_retries > 50U) 
#line 8211 
                                tx_qual = (int)((tx_retries * 4294967286U + 650U) / 15U + 80U); else 
                                                                    
#line 8214 
                                                                    tx_qual = (int)((tx_retries * 4294967286U + 500U) / 50U + 90U);
    
#line 8217 
    if (missed_beacons > 50U) 
#line 8218 
                              beacon_qual = (int)((missed_beacons * 4294967266U + 1800U) / 10U);
    else 
      
#line 8219 
      if (missed_beacons > 40U) 
#line 8220 
                                beacon_qual = (int)((missed_beacons * 4294967266U + 1500U) / 10U + 30U);
      else 
        
#line 8222 
        if (missed_beacons > 32U) 
#line 8223 
                                  beacon_qual = (int)((missed_beacons * 4294967276U + 800U) / 18U + 60U);
        else 
          
#line 8225 
          if (missed_beacons > 20U) 
#line 8226 
                                    beacon_qual = (int)((missed_beacons * 4294967286U + 320U) / 20U + 80U); else 
                                                                    
#line 8229 
                                                                    beacon_qual = (int)((missed_beacons * 4294967286U + 200U) / 20U + 90U);
    {
      int tmp_3;
      
#line 8232 
      int _min1 = tx_qual;
      
#line 8232 
      int _min2 = rssi_qual;
      
#line 8232 
      if (_min1 < _min2) 
#line 8232 
                         tmp_3 = _min1; else 
#line 8232 
                                             tmp_3 = _min2;
      
#line 8232 
      tmp_4 = tmp_3;
    }
    
#line 8232 
    quality = tmp_4;
    {
      int tmp_5;
      
#line 8233 
      int _min1_0 = beacon_qual;
      
#line 8233 
      int _min2_0 = quality;
      
#line 8233 
      if (_min1_0 < _min2_0) 
#line 8233 
                             tmp_5 = _min1_0; else 
#line 8233 
                                                   tmp_5 = _min2_0;
      
#line 8233 
      tmp_6 = tmp_5;
    }
    
#line 8233 
    quality = tmp_6;
    
#line 8236 
    if (beacon_qual == quality) {
      
#line 8237 
      if ((ipw2100_debug_level & 8U) != 0U) {
        int tmp_8;
        int tmp_7;
        
#line 8237 
        tmp_7 = preempt_count();
        
#line 8237 
        if (((unsigned long)tmp_7 & 2096896UL) != 0UL) 
#line 8237 
                                                       tmp_8 = 73; else 
                                                                    
#line 8237 
                                                                    tmp_8 = 85;
        
#line 8237 
        printk("\001",tmp_8,"ipw2100_wx_wireless_stats");
        
#line 8237 
        printk("Quality clamped by Missed Beacons\n");
      }
      else ;
    }
    else 
      
#line 8238 
      if (tx_qual == quality) {
        
#line 8239 
        if ((ipw2100_debug_level & 8U) != 0U) {
          int tmp_10;
          int tmp_9;
          
#line 8239 
          tmp_9 = preempt_count();
          
#line 8239 
          if (((unsigned long)tmp_9 & 2096896UL) != 0UL) 
#line 8239 
                                                         tmp_10 = 73; else 
                                                                    
#line 8239 
                                                                    tmp_10 = 85;
          
#line 8239 
          printk("\001",tmp_10,"ipw2100_wx_wireless_stats");
          
#line 8239 
          printk("Quality clamped by Tx Retries\n");
        }
        else ;
      }
      else 
        
#line 8240 
        if (quality != 100) {
          
#line 8241 
          if ((ipw2100_debug_level & 8U) != 0U) {
            int tmp_12;
            int tmp_11;
            
#line 8241 
            tmp_11 = preempt_count();
            
#line 8241 
            if (((unsigned long)tmp_11 & 2096896UL) != 0UL) 
#line 8241 
                                                            tmp_12 = 73; else 
                                                                    
#line 8241 
                                                                    tmp_12 = 85;
            
#line 8241 
            printk("\001",tmp_12,"ipw2100_wx_wireless_stats");
            
#line 8241 
            printk("Quality clamped by Signal Strength\n");
          }
          else ;
        }
        else 
          
#line 8243 
          if ((ipw2100_debug_level & 8U) != 0U) {
            int tmp_14;
            int tmp_13;
            
#line 8243 
            tmp_13 = preempt_count();
            
#line 8243 
            if (((unsigned long)tmp_13 & 2096896UL) != 0UL) 
#line 8243 
                                                            tmp_14 = 73; else 
                                                                    
#line 8243 
                                                                    tmp_14 = 85;
            
#line 8243 
            printk("\001",tmp_14,"ipw2100_wx_wireless_stats");
            
#line 8243 
            printk("Quality not clamped.\n");
          }
          else ;
    
#line 8246 
    wstats->qual.qual = (unsigned char)quality;
    
#line 8247 
    wstats->qual.level = (unsigned char)((unsigned int)((unsigned char)rssi) + 158U);
  }
  
#line 8250 
  wstats->qual.noise = (unsigned char)0U;
  
#line 8251 
  wstats->qual.updated = (unsigned char)7U;
  
#line 8252 
  wstats->qual.updated = (unsigned char)((unsigned int)wstats->qual.updated | 64U);
  
#line 8255 
  wstats->miss.beacon = missed_beacons;
  
#line 8257 
  tmp_15 = ipw2100_get_ordinal(priv,51U,(void *)(& tx_failures),& ord_len);
  
#line 8257 
  if (tmp_15 != 0) 
#line 8259 
                   goto fail_get_ordinal; else ;
  
#line 8260 
  wstats->discard.retries = tx_failures;
  
#line 8262 
  __retres = wstats;
  
#line 8262 
  goto return_label;
  fail_get_ordinal: 
#line 8264 
  ;
  
#line 8265 
  if ((ipw2100_debug_level & 8U) != 0U) {
    int tmp_17;
    int tmp_16;
    
#line 8265 
    tmp_16 = preempt_count();
    
#line 8265 
    if (((unsigned long)tmp_16 & 2096896UL) != 0UL) 
#line 8265 
                                                    tmp_17 = 73; else 
                                                                   
#line 8265 
                                                                   tmp_17 = 85;
    
#line 8265 
    printk("\001",tmp_17,"ipw2100_wx_wireless_stats");
    
#line 8265 
    printk("failed querying ordinals.\n");
  }
  else ;
  
#line 8267 
  __retres = (struct iw_statistics *)0;
  return_label: 
#line 8267 
                return __retres;
}


#line 8270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static struct iw_handler_def ipw2100_wx_handler_def = {.standard = (iw_handler (* const *)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& ipw2100_wx_handlers), .num_standard = (unsigned short)54U, .num_private = (unsigned short)8U, .num_private_args = (unsigned short)8U, .private = (iw_handler (* const *)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& ipw2100_private_handler), .private_args = (struct iw_priv_args const *)(& ipw2100_private_args), .get_wireless_stats = & ipw2100_wx_wireless_stats};

#line 8280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_wx_event_work(struct work_struct *work)
{
  struct ipw2100_priv *tmp;
  union iwreq_data wrqu;
  {
    
#line 8283 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 8283 
    tmp = (struct ipw2100_priv *)__mptr + 18446744073709550088U;
  }
  
#line 8282 
  struct ipw2100_priv *priv = tmp;
  
#line 8285 
  unsigned int len = 6U;
  
#line 8287 
  if ((priv->status & 16UL) != 0UL) 
#line 8288 
                                    goto return_label; else ;
  
#line 8290 
  ldv_mutex_lock_173(& priv->action_mutex);
  
#line 8292 
  if ((ipw2100_debug_level & 8U) != 0U) {
    int tmp_1;
    int tmp_0;
    
#line 8292 
    tmp_0 = preempt_count();
    
#line 8292 
    if (((unsigned long)tmp_0 & 2096896UL) != 0UL) 
#line 8292 
                                                   tmp_1 = 73; else 
#line 8292 
                                                                    tmp_1 = 85;
    
#line 8292 
    printk("\001",tmp_1,"ipw2100_wx_event_work");
    
#line 8292 
    printk("enter\n");
  }
  else ;
  
#line 8294 
  ldv_mutex_unlock_174(& priv->action_mutex);
  
#line 8296 
  wrqu.ap_addr.sa_family = (unsigned short)1U;
  
#line 8299 
  if ((priv->status & 1536UL) == 0UL || (priv->status & 12288UL) != 0UL) 
    
#line 8299 
    goto _LOR;
  else {
    int tmp_2;
    
#line 8300 
    tmp_2 = ipw2100_get_ordinal(priv,1014U,(void *)(& priv->bssid),& len);
    
#line 8300 
    if (tmp_2 != 0) _LOR: 
#line 8303 
                          eth_zero_addr((u8 *)(& wrqu.ap_addr.sa_data));
    else {
      
#line 8307 
      memcpy((void *)(& wrqu.ap_addr.sa_data),(void const *)(& priv->bssid),6UL);
      
#line 8308 
      memcpy((void *)(& (priv->ieee)->bssid),(void const *)(& priv->bssid),6UL);
      
#line 8309 
      priv->status &= 18446744073709551103UL;
      
#line 8310 
      priv->status |= 1024UL;
      
#line 8311 
      netif_carrier_on(priv->net_dev);
      
#line 8312 
      netif_wake_queue(priv->net_dev);
    }
  }
  
#line 8315 
  if ((priv->status & 1024UL) == 0UL) {
    
#line 8316 
    if ((ipw2100_debug_level & 8U) != 0U) {
      int tmp_4;
      int tmp_3;
      
#line 8316 
      tmp_3 = preempt_count();
      
#line 8316 
      if (((unsigned long)tmp_3 & 2096896UL) != 0UL) 
#line 8316 
                                                     tmp_4 = 73; else 
                                                                   
#line 8316 
                                                                   tmp_4 = 85;
      
#line 8316 
      printk("\001",tmp_4,"ipw2100_wx_event_work");
      
#line 8316 
      printk("Configuring ESSID\n");
    }
    else ;
    
#line 8317 
    ldv_mutex_lock_175(& priv->action_mutex);
    
#line 8320 
    if ((priv->config & 2UL) != 0UL) 
#line 8321 
                                     ipw2100_set_essid(priv,(char *)(& priv->essid),(int)priv->essid_len,0); else 
                                                                    
#line 8324 
                                                                    ipw2100_set_essid(priv,(char *)0,0,0);
    
#line 8325 
    ldv_mutex_unlock_176(& priv->action_mutex);
  }
  else ;
  
#line 8328 
  wireless_send_event(priv->net_dev,35605U,& wrqu,(char const *)0);
  return_label: 
#line 8329 
                return;
}


#line 8366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_mod_firmware_load(struct ipw2100_fw *fw)
{
  int __retres;
  
#line 8368 
  struct ipw2100_fw_header *h = (struct ipw2100_fw_header *)(fw->fw_entry)->data;
  
#line 8371 
  if (((int)h->version & 255) != 1) {
    
#line 8372 
    printk("\001",(int)h->version);
    
#line 8376 
    __retres = 1;
    
#line 8376 
    goto return_label;
  }
  else ;
  
#line 8379 
  fw->version = (int)h->version;
  
#line 8380 
  fw->fw.data = (void const *)((fw->fw_entry)->data + 12U);
  
#line 8381 
  fw->fw.size = (unsigned long)h->fw_size;
  
#line 8382 
  fw->uc.data = fw->fw.data + h->fw_size;
  
#line 8383 
  fw->uc.size = (unsigned long)h->uc_size;
  
#line 8385 
  __retres = 0;
  return_label: 
#line 8385 
                return __retres;
}


#line 8388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_get_firmware(struct ipw2100_priv *priv, struct ipw2100_fw *fw)
{
  int __retres;
  char *fw_name;
  int rc;
  
#line 8394 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_0;
    int tmp;
    
#line 8394 
    tmp = preempt_count();
    
#line 8394 
    if (((unsigned long)tmp & 2096896UL) != 0UL) 
#line 8394 
                                                 tmp_0 = 73; else 
#line 8394 
                                                                  tmp_0 = 85;
    
#line 8394 
    printk("\001",tmp_0,"ipw2100_get_firmware");
    
#line 8394 
    printk("%s: Using hotplug firmware load.\n",(char *)(& (priv->net_dev)->name));
  }
  else ;
  
#line 8397 
  switch ((priv->ieee)->iw_mode) {
    case 1: 
#line 8398 
    ;
    
#line 8399 
    fw_name = (char *)"ipw2100-";
    
#line 8400 
    goto ldv_63196;
    case 6: 
#line 8402 
    ;
    
#line 8403 
    fw_name = (char *)"ipw2100-";
    
#line 8404 
    goto ldv_63196;
    case 2: 
#line 8406 
    ;
    default: 
#line 8407 
    ;
    
#line 8408 
    fw_name = (char *)"ipw2100-";
    
#line 8409 
    goto ldv_63196;
  }
  ldv_63196: 
#line 8412 
  ;
  
#line 8412 
  rc = request_firmware(& fw->fw_entry,(char const *)fw_name,& (priv->pci_dev)->dev);
  
#line 8414 
  if (rc < 0) {
    
#line 8415 
    printk("\001",(char *)(& (priv->net_dev)->name),fw_name);
    
#line 8418 
    __retres = rc;
    
#line 8418 
    goto return_label;
  }
  else ;
  
#line 8420 
  if ((ipw2100_debug_level & 4U) != 0U) {
    int tmp_2;
    int tmp_1;
    
#line 8420 
    tmp_1 = preempt_count();
    
#line 8420 
    if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
#line 8420 
                                                   tmp_2 = 73; else 
#line 8420 
                                                                    tmp_2 = 85;
    
#line 8420 
    printk("\001",tmp_2,"ipw2100_get_firmware");
    
#line 8420 
    printk("firmware data %p size %zd\n",(fw->fw_entry)->data,(fw->fw_entry)->size);
  }
  else ;
  
#line 8423 
  ipw2100_mod_firmware_load(fw);
  
#line 8425 
  __retres = 0;
  return_label: 
#line 8425 
                return __retres;
}


#line 8434  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static void ipw2100_release_firmware(struct ipw2100_priv *priv, struct ipw2100_fw *fw)
{
  
#line 8437 
  fw->version = 0;
  
#line 8438 
  release_firmware(fw->fw_entry);
  
#line 8439 
  fw->fw_entry = (struct firmware const *)0;
  
#line 8440 
  return;
}


#line 8442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_get_fwversion(struct ipw2100_priv *priv, char *buf, size_t max)
{
  int __retres;
  char ver[14U];
  u32 tmp;
  int i;
  int tmp_0;
  
#line 8446 
  u32 len = 14U;
  
#line 8450 
  tmp_0 = ipw2100_get_ordinal(priv,1012U,(void *)(& ver),& len);
  
#line 8450 
  if (tmp_0 != 0) {
    
#line 8451 
    __retres = -5;
    
#line 8451 
    goto return_label;
  }
  else ;
  
#line 8452 
  tmp = (unsigned int)max;
  
#line 8453 
  if ((unsigned long)len >= max) 
#line 8454 
                                 len = (unsigned int)max + 4294967295U; else ;
  
#line 8455 
  i = 0;
  
#line 8455 
  goto ldv_63217;
  ldv_63216: 
#line 8456 
  ;
  
#line 8456 
  *(buf + i) = ver[i];
  
#line 8455 
  i += 1;
  ldv_63217: 
#line 8456 
  ;
  
#line 8455 
  if ((unsigned int)i < len) 
#line 8457 
                             goto ldv_63216; else 
#line 8460 
                                                  goto ldv_63218;
  ldv_63218: 
#line 8461 
  ;
  
#line 8457 
  *(buf + i) = (char)0;
  
#line 8458 
  __retres = (int)tmp;
  return_label: 
#line 8458 
                return __retres;
}


#line 8461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_get_ucodeversion(struct ipw2100_priv *priv, char *buf, size_t max)
{
  int __retres;
  u32 ver;
  int tmp;
  int tmp_0;
  
#line 8465 
  u32 len = 4U;
  
#line 8467 
  tmp = ipw2100_get_ordinal(priv,213U,(void *)(& ver),& len);
  
#line 8467 
  if (tmp != 0) {
    
#line 8468 
    __retres = -5;
    
#line 8468 
    goto return_label;
  }
  else ;
  
#line 8469 
  tmp_0 = snprintf(buf,max,"%08X",ver);
  
#line 8469 
  __retres = tmp_0;
  return_label: 
#line 8469 
                return __retres;
}


#line 8475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_fw_download(struct ipw2100_priv *priv, struct ipw2100_fw *fw)
{
  int __retres;
  unsigned int addr;
  unsigned short len;
  
#line 8488 
  unsigned char const *firmware_data = (unsigned char const *)fw->fw.data;
  
#line 8489 
  unsigned int firmware_data_left = (unsigned int)fw->fw.size;
  
#line 8491 
  goto ldv_63235;
  ldv_63234: 
#line 8492 
  ;
  
#line 8492 
  addr = *((u32 *)firmware_data);
  
#line 8493 
  firmware_data += 4U;
  
#line 8494 
  firmware_data_left += 4294967292U;
  
#line 8496 
  len = *((u16 *)firmware_data);
  
#line 8497 
  firmware_data += 2U;
  
#line 8498 
  firmware_data_left += 4294967294U;
  
#line 8500 
  if ((unsigned int)len > 32U) {
    
#line 8501 
    printk("\001",(int)len);
    
#line 8504 
    __retres = -22;
    
#line 8504 
    goto return_label;
  }
  else ;
  
#line 8507 
  write_nic_memory(priv->net_dev,addr,(unsigned int)len,firmware_data);
  
#line 8508 
  firmware_data += (int)len;
  
#line 8509 
  firmware_data_left -= (unsigned int)len;
  ldv_63235: 
#line 8510 
  ;
  
#line 8491 
  if (firmware_data_left != 0U) 
#line 8493 
                                goto ldv_63234; else 
#line 8496 
                                                     goto ldv_63236;
  ldv_63236: 
#line 8497 
  ;
  
#line 8512 
  __retres = 0;
  return_label: 
#line 8512 
                return __retres;
}


#line 8532  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ipw2x00/ipw2100.c"
static int ipw2100_ucode_download(struct ipw2100_priv *priv, struct ipw2100_fw *fw)
{
  int __retres;
  struct symbol_alive_response response;
  int i;
  int j;
  u8 data;
  unsigned char const *tmp;
  unsigned char const *tmp_0;
  
#line 8535 
  struct net_device *dev = priv->net_dev;
  
#line 8536 
  unsigned char const *microcode_data = (unsigned char const *)fw->uc.data;
  
#line 8537 
  unsigned int microcode_data_left = (unsigned int)fw->uc.size;
  
#line 8538 
  void *reg = priv->ioaddr;
  
#line 8545 
  write_nic_word(dev,2228224U,(unsigned short)1795);
  
#line 8546 
  readl((void const volatile *)reg);
  
#line 8547 
  write_nic_word(dev,2228224U,(unsigned short)1799);
  
#line 8548 
  readl((void const volatile *)reg);
  
#line 8551 
  write_nic_byte(dev,2162708U,(unsigned char)114);
  
#line 8552 
  readl((void const volatile *)reg);
  
#line 8553 
  write_nic_byte(dev,2162708U,(unsigned char)114);
  
#line 8554 
  readl((void const volatile *)reg);
  
#line 8557 
  write_nic_byte(dev,2162688U,(unsigned char)64);
  
#line 8558 
  readl((void const volatile *)reg);
  
#line 8559 
  write_nic_byte(dev,2162688U,(unsigned char)0);
  
#line 8560 
  readl((void const volatile *)reg);
  
#line 8561 
  write_nic_byte(dev,2162688U,(unsigned char)64);
  
#line 8562 
  readl((void const volatile *)reg);
  
#line 8566 
  goto ldv_63265;
  ldv_63264: 
#line 8567 
  ;
  
#line 8567 
  tmp = microcode_data;
  
#line 8567 
  microcode_data += 1;
  
#line 8567 
  ;
  
#line 8567 
  ;
  
#line 8567 
  write_nic_byte(dev,2162704U,(unsigned char)((int)*tmp));
  
#line 8568 
  tmp_0 = microcode_data;
  
#line 8568 
  microcode_data += 1;
  
#line 8568 
  ;
  
#line 8568 
  ;
  
#line 8568 
  write_nic_byte(dev,2162704U,(unsigned char)((int)*tmp_0));
  
#line 8569 
  microcode_data_left += 4294967294U;
  ldv_63265: 
#line 8570 
  ;
  
#line 8566 
  if (microcode_data_left != 0U) 
#line 8568 
                                 goto ldv_63264; else 
#line 8571 
                                                      goto ldv_63266;
  ldv_63266: 
#line 8572 
  ;
  
#line 8573 
  write_nic_byte(dev,2162688U,(unsigned char)0);
  
#line 8574 
  readl((void const volatile *)reg);
  
#line 8578 
  write_nic_byte(dev,2162688U,(unsigned char)0);
  
#line 8579 
  readl((void const volatile *)reg);
  
#line 8580 
  write_nic_byte(dev,2162688U,(unsigned char)128);
  
#line 8581 
  readl((void const volatile *)reg);
  
#line 8584 
  write_nic_word(dev,2228224U,(unsigned short)1795);
  
#line 8585 
  readl((void const volatile *)reg);
  
#line 8586 
  write_nic_word(dev,2228224U,(unsigned short)1799);
  
#line 8587 
  readl((void const volatile *)reg);
  
#line 8590 
  write_nic_byte(dev,2162708U,(unsigned char)114);
  
#line 8591 
  readl((void const volatile *)reg);
  
#line 8592 
  write_nic_byte(dev,2162708U,(unsigned char)114);
  
#line 8593 
  readl((void const volatile *)reg);
  
#line 8597 
  write_nic_byte(dev,2162688U,(unsigned char)0);
  
#line 8598 
  readl((void const volatile *)reg);
  
#line 8599 
  write_nic_byte(dev,2162688U,(unsigned char)128);
  
#line 8603 
  i = 0;
  
#line 8603 
  goto ldv_63269;
  ldv_63268: 
#line 8604 
  ;
  
#line 8604 
  __const_udelay(42950UL);
  
#line 8607 
  read_nic_byte(dev,2162688U,& data);
  
#line 8608 
  if (((int)data & 1) != 0) 
#line 8609 
                            goto ldv_63267; else ;
  
#line 8603 
  i += 1;
  ldv_63269: 
#line 8604 
  ;
  
#line 8603 
  if (i <= 9) 
#line 8605 
              goto ldv_63268; else 
#line 8608 
                                   goto ldv_63267;
  ldv_63267: 
#line 8609 
  ;
  
#line 8612 
  if (i == 10) {
    
#line 8613 
    printk("\001",(char *)(& dev->name));
    
#line 8615 
    __retres = -5;
    
#line 8615 
    goto return_label;
  }
  else ;
  
#line 8619 
  i = 0;
  
#line 8619 
  goto ldv_63275;
  ldv_63274: 
#line 8620 
  ;
  
#line 8621 
  j = 0;
  
#line 8621 
  goto ldv_63271;
  ldv_63270: 
#line 8622 
  ;
  
#line 8623 
  read_nic_word(dev,2162692U,(u16 *)(& response) + j);
  
#line 8622 
  j += 1;
  ldv_63271: 
#line 8623 
  ;
  
#line 8621 
  if ((unsigned int)j <= 13U) 
#line 8624 
                              goto ldv_63270; else 
#line 8627 
                                                   goto ldv_63272;
  ldv_63272: 
#line 8628 
  ;
  
#line 8625 
  if ((unsigned int)response.cmd_id == 1U && (unsigned int)response.ucode_valid == 1U) 
    
#line 8626 
    goto ldv_63273; else ;
  
#line 8627 
  __const_udelay(42950UL);
  
#line 8619 
  i += 1;
  ldv_63275: 
#line 8620 
  ;
  
#line 8619 
  if (i <= 29) 
#line 8621 
               goto ldv_63274; else 
#line 8624 
                                    goto ldv_63273;
  ldv_63273: 
#line 8625 
  ;
  
#line 8630 
  if (i == 30) {
    
#line 8631 
    printk("\001",(char *)(& dev->name));
    
#line 8634 
    printk_buf(1,(u8 const *)(& response),28U);
    
#line 8635 
    __retres = -5;
    
#line 8635 
    goto return_label;
  }
  else ;
  
#line 8638 
  __retres = 0;
  return_label: 
#line 8638 
                return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
struct pci_driver *ldv_emg_alias_ipw2100_pci_driver_2 = & ipw2100_pci_driver;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
void (*ldv_emg_alias_None_2)(unsigned long ) = (void (*)(unsigned long ))(& ipw2100_irq_tasklet);

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
int (*ldv_emg_alias_libipw_change_mtu_5)(struct net_device *, int ) = & libipw_change_mtu;

#line 59  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
enum netdev_tx (*ldv_emg_alias_libipw_xmit_7)(struct sk_buff *, struct net_device *) = & libipw_xmit;

#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
int (*ldv_emg_alias_eth_validate_addr_6)(struct net_device *) = & eth_validate_addr;

#line 63 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 64 
_Bool ldv_emg_schedule_delayed_work(struct delayed_work *arg0, unsigned long arg1);


#line 65 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 66 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 67 
void ldv_emg_tasklet_init(struct tasklet_struct *arg0, void (*arg1)(unsigned long ), unsigned long arg2);


#line 68 
void ldv_emg_tasklet_schedule(struct tasklet_struct *arg0);


#line 69 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 70 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 71 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
void ldv_emg_wrapper_ipw_ethtool_get_drvinfo_3(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 76 
  ipw_ethtool_get_drvinfo(arg0,arg1);
  
#line 77 
  return;
}


#line 80  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
void ldv_emg_wrapper_ipw2100_pci_remove_one_5(struct pci_dev *arg0)
{
  
#line 81 
  ipw2100_pci_remove_one(arg0);
  
#line 82 
  return;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
int ldv_emg_wrapper_ipw2100_close_2(struct net_device *arg0)
{
  int tmp;
  
#line 86 
  tmp = ipw2100_close(arg0);
  
#line 86 
  return tmp;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
void ldv_emg_wrapper_ipw2100_tx_timeout_2(struct net_device *arg0)
{
  
#line 91 
  ipw2100_tx_timeout(arg0);
  
#line 92 
  return;
}


#line 95  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
int ldv_emg_wrapper_ipw2100_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 96 
  tmp = ipw2100_open(arg0);
  
#line 96 
  return tmp;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
int ldv_emg_wrapper_ipw2100_resume_6(struct pci_dev *arg0)
{
  int tmp;
  
#line 101 
  tmp = ipw2100_resume(arg0);
  
#line 101 
  return tmp;
}


#line 105  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
int ldv_emg_wrapper_ipw2100_suspend_4(struct pci_dev *arg0, struct pm_message arg1)
{
  int tmp;
  
#line 106 
  tmp = ipw2100_suspend(arg0,arg1);
  
#line 106 
  return tmp;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
int ldv_emg_wrapper_ipw2100_pci_init_one_3(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 111 
  tmp = ipw2100_pci_init_one(arg0,(struct pci_device_id const *)arg1);
  
#line 111 
  return tmp;
}


#line 115  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
void ldv_emg_wrapper_ipw2100_shutdown_2(struct pci_dev *arg0)
{
  
#line 116 
  ipw2100_shutdown(arg0);
  
#line 117 
  return;
}


#line 120  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
int ldv_emg_ipw2100_init(void)
{
  int tmp;
  
#line 121 
  tmp = ipw2100_init();
  
#line 121 
  return tmp;
}


#line 124  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
unsigned int ldv_emg_wrapper_ipw2100_ethtool_get_link_4(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 125 
  tmp = ipw2100_ethtool_get_link(arg0);
  
#line 125 
  return tmp;
}


#line 129  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
int ldv_emg_wrapper_ipw2100_set_address_8(struct net_device *arg0, void *arg1)
{
  int tmp;
  
#line 130 
  tmp = ipw2100_set_address(arg0,arg1);
  
#line 130 
  return tmp;
}


#line 134  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
enum irqreturn ldv_emg_wrapper_ipw2100_interrupt_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 135 
  tmp = ipw2100_interrupt(arg0,arg1);
  
#line 135 
  return tmp;
}


#line 139  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
void ldv_emg_ipw2100_exit(void)
{
  
#line 140 
  ipw2100_exit();
  
#line 141 
  return;
}


#line 476  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 479 
  tmp = ldv_kmalloc(size,flags);
  
#line 479 
  return tmp;
}


#line 483  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void *kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 486 
  tmp = ldv_kmalloc_array(n,size,flags);
  
#line 486 
  return tmp;
}


#line 490  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 493 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 493 
  return tmp;
}


#line 824  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static bool ldv_schedule_delayed_work_73(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 828 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 828 
  __retres = tmp != 0;
  
#line 828 
  return __retres;
}


#line 832  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static bool ldv_schedule_delayed_work_74(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 836 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 836 
  __retres = tmp != 0;
  
#line 836 
  return __retres;
}


#line 840  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv___ldv_spin_lock_75(spinlock_t *ldv_func_arg1)
{
  
#line 844 
  ldv_spin_model_lock((char *)"low_lock_of_ipw2100_priv");
  
#line 846 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 847 
  return;
}


#line 850  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_spin_unlock_irqrestore_76(spinlock_t *lock, unsigned long flags)
{
  
#line 854 
  ldv_spin_model_unlock((char *)"low_lock_of_ipw2100_priv");
  
#line 856 
  spin_unlock_irqrestore(lock,flags);
  
#line 857 
  return;
}


#line 860  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_spin_unlock_irqrestore_77(spinlock_t *lock, unsigned long flags)
{
  
#line 864 
  ldv_spin_model_unlock((char *)"low_lock_of_ipw2100_priv");
  
#line 866 
  spin_unlock_irqrestore(lock,flags);
  
#line 867 
  return;
}


#line 870  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_78(struct mutex *ldv_func_arg1)
{
  
#line 874 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"adapter_mutex_of_ipw2100_priv");
  
#line 875 
  return;
}


#line 878  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static bool ldv_schedule_delayed_work_79(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 882 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 882 
  __retres = tmp != 0;
  
#line 882 
  return __retres;
}


#line 886  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_80(struct mutex *ldv_func_arg1)
{
  
#line 890 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"adapter_mutex_of_ipw2100_priv");
  
#line 891 
  return;
}


#line 894  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_81(struct mutex *ldv_func_arg1)
{
  
#line 898 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"adapter_mutex_of_ipw2100_priv");
  
#line 899 
  return;
}


#line 902  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_82(struct mutex *ldv_func_arg1)
{
  
#line 906 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"adapter_mutex_of_ipw2100_priv");
  
#line 907 
  return;
}


#line 910  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv___ldv_spin_lock_83(spinlock_t *ldv_func_arg1)
{
  
#line 914 
  ldv_spin_model_lock((char *)"low_lock_of_ipw2100_priv");
  
#line 916 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 917 
  return;
}


#line 920  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_spin_unlock_irqrestore_84(spinlock_t *lock, unsigned long flags)
{
  
#line 924 
  ldv_spin_model_unlock((char *)"low_lock_of_ipw2100_priv");
  
#line 926 
  spin_unlock_irqrestore(lock,flags);
  
#line 927 
  return;
}


#line 930  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static bool ldv_schedule_delayed_work_85(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 934 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 934 
  __retres = tmp != 0;
  
#line 934 
  return __retres;
}


#line 938  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv___ldv_spin_lock_86(spinlock_t *ldv_func_arg1)
{
  
#line 942 
  ldv_spin_model_lock((char *)"low_lock_of_ipw2100_priv");
  
#line 944 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 945 
  return;
}


#line 948  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_spin_unlock_irqrestore_87(spinlock_t *lock, unsigned long flags)
{
  
#line 952 
  ldv_spin_model_unlock((char *)"low_lock_of_ipw2100_priv");
  
#line 954 
  spin_unlock_irqrestore(lock,flags);
  
#line 955 
  return;
}


#line 958  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv___ldv_spin_lock_88(spinlock_t *ldv_func_arg1)
{
  
#line 962 
  ldv_spin_model_lock((char *)"low_lock_of_ipw2100_priv");
  
#line 964 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 965 
  return;
}


#line 968  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_spin_unlock_irqrestore_89(spinlock_t *lock, unsigned long flags)
{
  
#line 972 
  ldv_spin_model_unlock((char *)"low_lock_of_ipw2100_priv");
  
#line 974 
  spin_unlock_irqrestore(lock,flags);
  
#line 975 
  return;
}


#line 978  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv___ldv_spin_lock_90(spinlock_t *ldv_func_arg1)
{
  
#line 982 
  ldv_spin_model_lock((char *)"low_lock_of_ipw2100_priv");
  
#line 984 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 985 
  return;
}


#line 988  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_spin_unlock_irqrestore_91(spinlock_t *lock, unsigned long flags)
{
  
#line 992 
  ldv_spin_model_unlock((char *)"low_lock_of_ipw2100_priv");
  
#line 994 
  spin_unlock_irqrestore(lock,flags);
  
#line 995 
  return;
}


#line 998  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_92(struct mutex *ldv_func_arg1)
{
  
#line 1002 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1003 
  return;
}


#line 1006  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_93(struct mutex *ldv_func_arg1)
{
  
#line 1010 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1011 
  return;
}


#line 1014  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static bool ldv_schedule_delayed_work_94(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1018 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 1018 
  __retres = tmp != 0;
  
#line 1018 
  return __retres;
}


#line 1022  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static bool ldv_schedule_delayed_work_95(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1026 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 1026 
  __retres = tmp != 0;
  
#line 1026 
  return __retres;
}


#line 1030  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static bool ldv_schedule_delayed_work_96(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1034 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 1034 
  __retres = tmp != 0;
  
#line 1034 
  return __retres;
}


#line 1038  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static bool ldv_schedule_delayed_work_97(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1042 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 1042 
  __retres = tmp != 0;
  
#line 1042 
  return __retres;
}


#line 1046  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv___ldv_spin_lock_98(spinlock_t *ldv_func_arg1)
{
  
#line 1050 
  ldv_spin_model_lock((char *)"low_lock_of_ipw2100_priv");
  
#line 1052 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1053 
  return;
}


#line 1056  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_spin_unlock_irqrestore_99(spinlock_t *lock, unsigned long flags)
{
  
#line 1060 
  ldv_spin_model_unlock((char *)"low_lock_of_ipw2100_priv");
  
#line 1062 
  spin_unlock_irqrestore(lock,flags);
  
#line 1063 
  return;
}


#line 1066  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_spin_lock_100(spinlock_t *lock)
{
  
#line 1070 
  ldv_spin_model_lock((char *)"low_lock_of_ipw2100_priv");
  
#line 1072 
  spin_lock(lock);
  
#line 1073 
  return;
}


#line 1076  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_tasklet_schedule_101(struct tasklet_struct *t)
{
  
#line 1080 
  ldv_emg_tasklet_schedule(t);
  
#line 1081 
  return;
}


#line 1084  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_spin_unlock_102(spinlock_t *lock)
{
  
#line 1088 
  ldv_spin_model_unlock((char *)"low_lock_of_ipw2100_priv");
  
#line 1090 
  spin_unlock(lock);
  
#line 1091 
  return;
}


#line 1094  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_spin_unlock_103(spinlock_t *lock)
{
  
#line 1098 
  ldv_spin_model_unlock((char *)"low_lock_of_ipw2100_priv");
  
#line 1100 
  spin_unlock(lock);
  
#line 1101 
  return;
}


#line 1104  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv___ldv_spin_lock_104(spinlock_t *ldv_func_arg1)
{
  
#line 1108 
  ldv_spin_model_lock((char *)"low_lock_of_ipw2100_priv");
  
#line 1110 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1111 
  return;
}


#line 1114  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_spin_unlock_irqrestore_105(spinlock_t *lock, unsigned long flags)
{
  
#line 1118 
  ldv_spin_model_unlock((char *)"low_lock_of_ipw2100_priv");
  
#line 1120 
  spin_unlock_irqrestore(lock,flags);
  
#line 1121 
  return;
}


#line 1124  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_spin_unlock_irqrestore_106(spinlock_t *lock, unsigned long flags)
{
  
#line 1128 
  ldv_spin_model_unlock((char *)"low_lock_of_ipw2100_priv");
  
#line 1130 
  spin_unlock_irqrestore(lock,flags);
  
#line 1131 
  return;
}


#line 1134  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_107(struct mutex *ldv_func_arg1)
{
  
#line 1138 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1139 
  return;
}


#line 1142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_108(struct mutex *ldv_func_arg1)
{
  
#line 1146 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1147 
  return;
}


#line 1150  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_109(struct mutex *ldv_func_arg1)
{
  
#line 1154 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1155 
  return;
}


#line 1158  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_110(struct mutex *ldv_func_arg1)
{
  
#line 1162 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1163 
  return;
}


#line 1166  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_111(struct mutex *ldv_func_arg1)
{
  
#line 1170 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1171 
  return;
}


#line 1174  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_112(struct mutex *ldv_func_arg1)
{
  
#line 1178 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1179 
  return;
}


#line 1182  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_113(struct mutex *ldv_func_arg1)
{
  
#line 1186 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1187 
  return;
}


#line 1190  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv___ldv_spin_lock_114(spinlock_t *ldv_func_arg1)
{
  
#line 1194 
  ldv_spin_model_lock((char *)"low_lock_of_ipw2100_priv");
  
#line 1196 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1197 
  return;
}


#line 1200  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_spin_unlock_irqrestore_115(spinlock_t *lock, unsigned long flags)
{
  
#line 1204 
  ldv_spin_model_unlock((char *)"low_lock_of_ipw2100_priv");
  
#line 1206 
  spin_unlock_irqrestore(lock,flags);
  
#line 1207 
  return;
}


#line 1210  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv___ldv_spin_lock_116(spinlock_t *ldv_func_arg1)
{
  
#line 1214 
  ldv_spin_model_lock((char *)"low_lock_of_ipw2100_priv");
  
#line 1216 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1217 
  return;
}


#line 1220  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_spin_unlock_irqrestore_117(spinlock_t *lock, unsigned long flags)
{
  
#line 1224 
  ldv_spin_model_unlock((char *)"low_lock_of_ipw2100_priv");
  
#line 1226 
  spin_unlock_irqrestore(lock,flags);
  
#line 1227 
  return;
}


#line 1230  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv___ldv_spin_lock_118(spinlock_t *ldv_func_arg1)
{
  
#line 1234 
  ldv_spin_model_lock((char *)"low_lock_of_ipw2100_priv");
  
#line 1236 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1237 
  return;
}


#line 1240  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static bool ldv_schedule_delayed_work_119(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1244 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 1244 
  __retres = tmp != 0;
  
#line 1244 
  return __retres;
}


#line 1248  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_spin_unlock_irqrestore_120(spinlock_t *lock, unsigned long flags)
{
  
#line 1252 
  ldv_spin_model_unlock((char *)"low_lock_of_ipw2100_priv");
  
#line 1254 
  spin_unlock_irqrestore(lock,flags);
  
#line 1255 
  return;
}


#line 1258  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv___ldv_spin_lock_121(spinlock_t *ldv_func_arg1)
{
  
#line 1262 
  ldv_spin_model_lock((char *)"low_lock_of_ipw2100_priv");
  
#line 1264 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1265 
  return;
}


#line 1268  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static bool ldv_schedule_delayed_work_122(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1272 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 1272 
  __retres = tmp != 0;
  
#line 1272 
  return __retres;
}


#line 1276  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_spin_unlock_irqrestore_123(spinlock_t *lock, unsigned long flags)
{
  
#line 1280 
  ldv_spin_model_unlock((char *)"low_lock_of_ipw2100_priv");
  
#line 1282 
  spin_unlock_irqrestore(lock,flags);
  
#line 1283 
  return;
}


#line 1286  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_tasklet_init_124(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3)
{
  
#line 1290 
  ldv_emg_tasklet_init(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1291 
  return;
}


#line 1294  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static int ldv_request_irq_125(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1298 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1298 
  return tmp;
}


#line 1302  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static int ldv_register_netdev_126(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 1306 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 1306 
  return tmp;
}


#line 1310  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_127(struct mutex *ldv_func_arg1)
{
  
#line 1314 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1315 
  return;
}


#line 1318  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_128(struct mutex *ldv_func_arg1)
{
  
#line 1322 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1323 
  return;
}


#line 1326  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_129(struct mutex *ldv_func_arg1)
{
  
#line 1330 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1331 
  return;
}


#line 1334  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_unregister_netdev_130(struct net_device *ldv_func_arg1)
{
  
#line 1338 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1339 
  return;
}


#line 1342  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_free_irq_131(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1346 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1347 
  return;
}


#line 1350  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_132(struct mutex *ldv_func_arg1)
{
  
#line 1354 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1355 
  return;
}


#line 1358  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_133(struct mutex *ldv_func_arg1)
{
  
#line 1362 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1363 
  return;
}


#line 1366  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_unregister_netdev_134(struct net_device *ldv_func_arg1)
{
  
#line 1370 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1371 
  return;
}


#line 1374  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_free_irq_135(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1378 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1379 
  return;
}


#line 1382  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_136(struct mutex *ldv_func_arg1)
{
  
#line 1386 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1387 
  return;
}


#line 1390  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_137(struct mutex *ldv_func_arg1)
{
  
#line 1394 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1395 
  return;
}


#line 1398  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_138(struct mutex *ldv_func_arg1)
{
  
#line 1402 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1403 
  return;
}


#line 1406  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_139(struct mutex *ldv_func_arg1)
{
  
#line 1410 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1411 
  return;
}


#line 1414  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_140(struct mutex *ldv_func_arg1)
{
  
#line 1418 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1419 
  return;
}


#line 1422  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static int ldv___pci_register_driver_141(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 1426 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 1426 
  return tmp;
}


#line 1430  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_pci_unregister_driver_142(struct pci_driver *ldv_func_arg1)
{
  
#line 1434 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 1435 
  return;
}


#line 1438  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_143(struct mutex *ldv_func_arg1)
{
  
#line 1442 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1443 
  return;
}


#line 1446  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_144(struct mutex *ldv_func_arg1)
{
  
#line 1450 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1451 
  return;
}


#line 1454  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_145(struct mutex *ldv_func_arg1)
{
  
#line 1458 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1459 
  return;
}


#line 1462  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_146(struct mutex *ldv_func_arg1)
{
  
#line 1466 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1467 
  return;
}


#line 1470  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_147(struct mutex *ldv_func_arg1)
{
  
#line 1474 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1475 
  return;
}


#line 1478  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_148(struct mutex *ldv_func_arg1)
{
  
#line 1482 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1483 
  return;
}


#line 1486  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_149(struct mutex *ldv_func_arg1)
{
  
#line 1490 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1491 
  return;
}


#line 1494  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_150(struct mutex *ldv_func_arg1)
{
  
#line 1498 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1499 
  return;
}


#line 1502  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_151(struct mutex *ldv_func_arg1)
{
  
#line 1506 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1507 
  return;
}


#line 1510  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_152(struct mutex *ldv_func_arg1)
{
  
#line 1514 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1515 
  return;
}


#line 1518  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_153(struct mutex *ldv_func_arg1)
{
  
#line 1522 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1523 
  return;
}


#line 1526  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_154(struct mutex *ldv_func_arg1)
{
  
#line 1530 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1531 
  return;
}


#line 1534  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_155(struct mutex *ldv_func_arg1)
{
  
#line 1538 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1539 
  return;
}


#line 1542  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_156(struct mutex *ldv_func_arg1)
{
  
#line 1546 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1547 
  return;
}


#line 1550  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_157(struct mutex *ldv_func_arg1)
{
  
#line 1554 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1555 
  return;
}


#line 1558  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_158(struct mutex *ldv_func_arg1)
{
  
#line 1562 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1563 
  return;
}


#line 1566  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_159(struct mutex *ldv_func_arg1)
{
  
#line 1570 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1571 
  return;
}


#line 1574  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_160(struct mutex *ldv_func_arg1)
{
  
#line 1578 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1579 
  return;
}


#line 1582  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_161(struct mutex *ldv_func_arg1)
{
  
#line 1586 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1587 
  return;
}


#line 1590  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_162(struct mutex *ldv_func_arg1)
{
  
#line 1594 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1595 
  return;
}


#line 1598  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_163(struct mutex *ldv_func_arg1)
{
  
#line 1602 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1603 
  return;
}


#line 1606  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_164(struct mutex *ldv_func_arg1)
{
  
#line 1610 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1611 
  return;
}


#line 1614  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_165(struct mutex *ldv_func_arg1)
{
  
#line 1618 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1619 
  return;
}


#line 1622  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_166(struct mutex *ldv_func_arg1)
{
  
#line 1626 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1627 
  return;
}


#line 1630  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_167(struct mutex *ldv_func_arg1)
{
  
#line 1634 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1635 
  return;
}


#line 1638  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_168(struct mutex *ldv_func_arg1)
{
  
#line 1642 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1643 
  return;
}


#line 1646  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_169(struct mutex *ldv_func_arg1)
{
  
#line 1650 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1651 
  return;
}


#line 1654  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_170(struct mutex *ldv_func_arg1)
{
  
#line 1658 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1659 
  return;
}


#line 1662  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_171(struct mutex *ldv_func_arg1)
{
  
#line 1666 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1667 
  return;
}


#line 1670  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_172(struct mutex *ldv_func_arg1)
{
  
#line 1674 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1675 
  return;
}


#line 1678  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_173(struct mutex *ldv_func_arg1)
{
  
#line 1682 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1683 
  return;
}


#line 1686  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_174(struct mutex *ldv_func_arg1)
{
  
#line 1690 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1691 
  return;
}


#line 1694  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_lock_175(struct mutex *ldv_func_arg1)
{
  
#line 1698 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1699 
  return;
}


#line 1702  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/weaver/.tmp_ipw2100.c.aux"
static void ldv_mutex_unlock_176(struct mutex *ldv_func_arg1)
{
  
#line 1706 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"action_mutex_of_ipw2100_priv");
  
#line 1707 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 28 
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_5_1(struct net_device *arg0);


#line 62 
int main(void);


#line 63 
void ldv_dispatch_deregister_3_1(struct pci_driver *arg0);


#line 65 
void *ldv_pci_scenario_12(void *arg0);


#line 68 
void ldv_dispatch_irq_deregister_9_1(int arg0);


#line 70 
void ldv_dispatch_register_4_4(struct net_device *arg0);


#line 71 
void ldv_dispatch_irq_register_7_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 74 
void *ldv_interrupt_scenario_11(void *arg0);


#line 75 
void *ldv_random_allocationless_scenario_13(void *arg0);


#line 76 
void ldv_dispatch_register_6_3(struct pci_driver *arg0);


#line 78 
void *ldv_initialization_1(void *arg0);


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_12;

#line 83  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_13;

#line 84  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_11;

#line 88  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_5_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_13 *cf_arg_13;
  int tmp;
  
#line 91 
  tmp = ldv_undef_int();
  
#line 91 
  switch (tmp) {
    case 0: 
#line 92 
    ;
    
#line 93 
    ret = pthread_join(ldv_thread_13,(void **)0);
    
#line 94 
    __VERIFIER_assume(ret == 0);
    
#line 95 
    goto ldv_44664;
    default: 
#line 97 
    ;
    
#line 97 
    __VERIFIER_assume(0);
  }
  ldv_44664: 
#line 98 
  ;
  
#line 99 
  return;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_schedule_delayed_work(struct delayed_work *arg0, unsigned long arg1)
{
  _Bool __retres;
  struct work_struct *ldv_2_ldv_param_0_2;
  struct delayed_work *ldv_2_delayed_work;
  int tmp_0;
  
#line 111 
  tmp_0 = ldv_undef_int();
  
#line 111 
  if (tmp_0 != 0) {
    
#line 113 
    ldv_2_delayed_work = arg0;
    
#line 117 
    ldv_2_ldv_param_0_2 = (struct work_struct *)ldv_xmalloc_unknown_size(0UL);
    
#line 121 
    if (ldv_2_delayed_work->work.func != (void (*)(struct work_struct *))0) 
      
#line 123 
      (*(ldv_2_delayed_work->work.func))(ldv_2_ldv_param_0_2); else ;
    
#line 128 
    ldv_free((void *)ldv_2_ldv_param_0_2);
    
#line 132 
    __retres = (_Bool)1;
    
#line 132 
    goto return_label;
  }
  else {
    
#line 139 
    __retres = (_Bool)0;
    
#line 139 
    goto return_label;
  }
  return_label: 
#line 111 
                return __retres;
}


#line 149  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 152 
  ldv_initialize();
  
#line 155 
  ldv_initialization_1((void *)0);
  
#line 157 
  __retres = 0;
  
#line 157 
  return __retres;
}


#line 162  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_3_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_12 *cf_arg_12;
  int tmp;
  
#line 165 
  tmp = ldv_undef_int();
  
#line 165 
  switch (tmp) {
    case 0: 
#line 166 
    ;
    
#line 167 
    ret = pthread_join(ldv_thread_12,(void **)0);
    
#line 168 
    __VERIFIER_assume(ret == 0);
    
#line 169 
    goto ldv_44681;
    default: 
#line 171 
    ;
    
#line 171 
    __VERIFIER_assume(0);
  }
  ldv_44681: 
#line 172 
  ;
  
#line 173 
  return;
}


#line 177  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 180 
  struct pci_driver *ldv_6_pci_driver = ldv_emg_alias_ipw2100_pci_driver_2;
  
#line 184 
  tmp_0 = ldv_undef_int();
  
#line 184 
  if (tmp_0 != 0) {
    
#line 186 
    ldv_6_pci_driver = arg0;
    
#line 190 
    ldv_dispatch_register_6_3(ldv_6_pci_driver);
    
#line 194 
    __retres = 0;
    
#line 194 
    goto return_label;
  }
  else {
    int tmp;
    
#line 201 
    tmp = ldv_undef_int_negative();
    
#line 201 
    __retres = tmp;
    
#line 201 
    goto return_label;
  }
  return_label: 
#line 184 
                return __retres;
}


#line 211  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_11(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_11_ret_val;
  int ldv_11_line;
  void *ldv_11_data;
  enum irqreturn (*ldv_11_thread)(int , void *);
  int tmp;
  
#line 217 
  enum irqreturn (*ldv_11_callback)(int , void *) = & ldv_emg_wrapper_ipw2100_interrupt_2;
  
#line 220 
  struct ldv_struct_interrupt_scenario_11 *data = (struct ldv_struct_interrupt_scenario_11 *)arg0;
  
#line 225 
  if (data != (struct ldv_struct_interrupt_scenario_11 *)0) {
    
#line 226 
    ldv_11_line = data->arg0;
    
#line 227 
    ldv_11_callback = data->arg1;
    
#line 228 
    ldv_11_thread = data->arg2;
    
#line 229 
    ldv_11_data = data->arg3;
    
#line 230 
    ldv_free((void *)data);
  }
  else ;
  
#line 236 
  ldv_switch_to_interrupt_context();
  
#line 238 
  ldv_11_ret_val = ldv_emg_wrapper_ipw2100_interrupt_2(ldv_11_line,ldv_11_data);
  
#line 240 
  ldv_switch_to_process_context();
  
#line 243 
  tmp = ldv_undef_int();
  
#line 243 
  if (tmp != 0) {
    
#line 245 
    __VERIFIER_assume(ldv_11_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 249 
    if (ldv_11_thread != (enum irqreturn (*)(int , void *))0) 
#line 251 
                                                              (*ldv_11_thread)(ldv_11_line,ldv_11_data); else ;
  }
  else 
#line 258 
       __VERIFIER_assume(ldv_11_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 267 
  __retres = (void *)0;
  
#line 267 
  goto return_label;
  
#line 269 
  __retres = (void *)0;
  return_label: 
#line 269 
                return __retres;
}


#line 274  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_tasklet_init(struct tasklet_struct *arg0, void (*arg1)(unsigned long ), unsigned long arg2)
{
  
#line 279 
  arg0->func = arg1;
  
#line 280 
  arg0->data = arg2;
  
#line 281 
  arg0->count.counter = 0;
  
#line 285 
  goto return_label;
  return_label: 
#line 287 
                return;
}


#line 292  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_tasklet_schedule(struct tasklet_struct *arg0)
{
  unsigned long ldv_10_ldv_param_0_2;
  struct tasklet_struct *ldv_10_tasklet_struct;
  
#line 299 
  ldv_10_tasklet_struct = arg0;
  
#line 306 
  if (ldv_10_tasklet_struct->count.counter == 0) 
#line 308 
                                                 (*ldv_emg_alias_None_2)(ldv_10_ldv_param_0_2); else ;
  
#line 316 
  goto return_label;
  return_label: 
#line 318 
                return;
}


#line 323  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_9_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_9 *cf_arg_11;
  int tmp;
  
#line 326 
  tmp = ldv_undef_int();
  
#line 326 
  switch (tmp) {
    case 0: 
#line 327 
    ;
    
#line 328 
    ret = pthread_join(ldv_thread_11,(void **)0);
    
#line 329 
    __VERIFIER_assume(ret == 0);
    
#line 330 
    goto ldv_44719;
    default: 
#line 332 
    ;
    
#line 332 
    __VERIFIER_assume(0);
  }
  ldv_44719: 
#line 333 
  ;
  
#line 334 
  return;
}


#line 338  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 341 
  struct pci_driver *ldv_3_pci_driver = ldv_emg_alias_ipw2100_pci_driver_2;
  
#line 344 
  ldv_3_pci_driver = arg0;
  
#line 348 
  ldv_dispatch_deregister_3_1(ldv_3_pci_driver);
  
#line 352 
  goto return_label;
  return_label: 
#line 354 
                return;
}


#line 359  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_4_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_13 *cf_arg_13;
  int tmp;
  
#line 362 
  tmp = ldv_undef_int();
  
#line 362 
  switch (tmp) {
    case 0: 
#line 363 
    ;
    
#line 364 
    cf_arg_13 = (struct ldv_struct_random_allocationless_scenario_13 *)ldv_xmalloc(16UL);
    
#line 365 
    cf_arg_13->arg0 = arg0;
    
#line 366 
    ret = pthread_create(& ldv_thread_13,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_13,(void *)cf_arg_13);
    
#line 367 
    __VERIFIER_assume(ret == 0);
    
#line 368 
    goto ldv_44731;
    default: 
#line 370 
    ;
    
#line 370 
    __VERIFIER_assume(0);
  }
  ldv_44731: 
#line 371 
  ;
  
#line 372 
  return;
}


#line 376  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_7_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_11 *cf_arg_11;
  int tmp;
  
#line 379 
  tmp = ldv_undef_int();
  
#line 379 
  switch (tmp) {
    case 0: 
#line 380 
    ;
    
#line 381 
    cf_arg_11 = (struct ldv_struct_interrupt_scenario_11 *)ldv_xmalloc(32UL);
    
#line 382 
    cf_arg_11->arg0 = arg0;
    
#line 383 
    cf_arg_11->arg1 = arg1;
    
#line 384 
    cf_arg_11->arg2 = arg2;
    
#line 385 
    cf_arg_11->arg3 = arg3;
    
#line 386 
    ret = pthread_create(& ldv_thread_11,(pthread_attr_t const *)0,& ldv_interrupt_scenario_11,(void *)cf_arg_11);
    
#line 387 
    __VERIFIER_assume(ret == 0);
    
#line 388 
    goto ldv_44746;
    default: 
#line 390 
    ;
    
#line 390 
    __VERIFIER_assume(0);
  }
  ldv_44746: 
#line 391 
  ;
  
#line 392 
  return;
}


#line 396  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_9_line;
  
#line 402 
  ldv_9_line = (int)arg0;
  
#line 406 
  ldv_dispatch_irq_deregister_9_1(ldv_9_line);
  
#line 410 
  goto return_label;
  return_label: 
#line 412 
                return;
}


#line 417  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_7_line;
  void *ldv_7_data;
  enum irqreturn (*ldv_7_thread)(int , void *);
  int tmp_0;
  
#line 422 
  enum irqreturn (*ldv_7_callback)(int , void *) = & ldv_emg_wrapper_ipw2100_interrupt_2;
  
#line 427 
  tmp_0 = ldv_undef_int();
  
#line 427 
  if (tmp_0 != 0) {
    
#line 429 
    ldv_7_line = (int)arg0;
    
#line 430 
    ldv_7_callback = arg1;
    
#line 431 
    ldv_7_thread = (enum irqreturn (*)(int , void *))0;
    
#line 432 
    ldv_7_data = arg4;
    
#line 436 
    ldv_dispatch_irq_register_7_3(ldv_7_line,ldv_7_callback,ldv_7_thread,ldv_7_data);
    
#line 440 
    __retres = 0;
    
#line 440 
    goto return_label;
  }
  else {
    int tmp;
    
#line 447 
    tmp = ldv_undef_int_negative();
    
#line 447 
    __retres = tmp;
    
#line 447 
    goto return_label;
  }
  return_label: 
#line 427 
                return __retres;
}


#line 457  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_12(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_12_resource_1;
  struct pci_device_id *ldv_12_ldv_param_1_2;
  struct pm_message ldv_12_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 462 
  struct pci_driver *ldv_12_container = ldv_emg_alias_ipw2100_pci_driver_2;
  
#line 463 
  int ldv_12_ret = ldv_undef_int();
  
#line 466 
  struct ldv_struct_pci_scenario_12 *data = (struct ldv_struct_pci_scenario_12 *)arg0;
  
#line 470 
  ldv_12_ret = ldv_undef_int();
  
#line 473 
  if (data != (struct ldv_struct_pci_scenario_12 *)0) {
    
#line 474 
    ldv_12_container = data->arg0;
    
#line 475 
    ldv_free((void *)data);
  }
  else ;
  
#line 486 
  goto ldv_main_12;
  
#line 488 
  __retres = (void *)0;
  
#line 488 
  goto return_label;
  ldv_main_12: 
#line 491 
  ;
  
#line 494 
  tmp_2 = ldv_undef_int();
  
#line 494 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 496 
    ldv_12_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 501 
    ldv_pre_probe();
    
#line 503 
    ldv_12_ret = ldv_emg_wrapper_ipw2100_pci_init_one_3(ldv_12_resource_1,ldv_12_ldv_param_1_2);
    
#line 505 
    ldv_12_ret = ldv_post_probe(ldv_12_ret);
    
#line 509 
    ldv_free((void *)ldv_12_ldv_param_1_2);
    
#line 512 
    tmp_1 = ldv_undef_int();
    
#line 512 
    if (tmp_1 != 0) {
      
#line 514 
      __VERIFIER_assume(ldv_12_ret == 0);
      
#line 521 
      goto ldv_call_12;
    }
    else {
      
#line 525 
      __VERIFIER_assume(ldv_12_ret != 0);
      
#line 532 
      goto ldv_main_12;
    }
  }
  else {
    
#line 544 
    __retres = (void *)0;
    
#line 544 
    goto return_label;
  }
  
#line 547 
  __retres = (void *)0;
  
#line 547 
  goto return_label;
  ldv_call_12: 
#line 550 
  ;
  
#line 553 
  tmp_3 = ldv_undef_int();
  
#line 553 
  switch (tmp_3) {
    case 1: 
#line 554 
    ;
    
#line 563 
    goto ldv_call_12;
    case 2: 
#line 566 
    ;
    
#line 569 
    ldv_12_ret = ldv_emg_wrapper_ipw2100_suspend_4(ldv_12_resource_1,ldv_12_resource_0);
    
#line 571 
    ldv_12_ret = ldv_filter_err_code(ldv_12_ret);
    
#line 575 
    if (ldv_12_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 577 
      ldv_12_ret = (*(ldv_12_container->suspend_late))(ldv_12_resource_1,ldv_12_resource_0);
      
#line 579 
      ldv_12_ret = ldv_filter_err_code(ldv_12_ret);
    }
    else 
#line 581 
         ldv_12_ret = ldv_undef_int();
    
#line 586 
    if (ldv_12_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 588 
      (*(ldv_12_container->resume_early))(ldv_12_resource_1); else ;
    
#line 594 
    ldv_emg_wrapper_ipw2100_resume_6(ldv_12_resource_1);
    
#line 601 
    goto ldv_call_12;
    case 3: 
#line 604 
    ;
    
#line 607 
    ldv_emg_wrapper_ipw2100_shutdown_2(ldv_12_resource_1);
    
#line 612 
    ldv_emg_wrapper_ipw2100_pci_remove_one_5(ldv_12_resource_1);
    
#line 619 
    goto ldv_main_12;
    default: 
#line 622 
    ;
    
#line 622 
    __VERIFIER_assume(0);
  }
  
#line 625 
  __retres = (void *)0;
  return_label: 
#line 625 
                return __retres;
}


#line 630  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_13(void *arg0)
{
  void *__retres;
  struct sk_buff *ldv_13_ldv_param_0_4;
  struct ethtool_drvinfo *ldv_13_ldv_param_1_2;
  int ldv_13_ldv_param_1_3;
  void *ldv_13_ldv_param_1_5;
  struct net_device *ldv_13_container;
  int tmp;
  
#line 639 
  struct ldv_struct_random_allocationless_scenario_13 *data = (struct ldv_struct_random_allocationless_scenario_13 *)arg0;
  
#line 644 
  if (data != (struct ldv_struct_random_allocationless_scenario_13 *)0) {
    
#line 645 
    ldv_13_container = data->arg0;
    
#line 646 
    ldv_free((void *)data);
  }
  else ;
  
#line 654 
  goto ldv_call_13;
  
#line 656 
  __retres = (void *)0;
  
#line 656 
  goto return_label;
  ldv_call_13: 
#line 659 
  ;
  
#line 662 
  tmp = ldv_undef_int();
  
#line 662 
  switch (tmp) {
    case 1: 
#line 663 
    ;
    
#line 666 
    ldv_emg_wrapper_ipw2100_tx_timeout_2(ldv_13_container);
    
#line 673 
    goto ldv_call_13;
    case 2: 
#line 676 
    ;
    
#line 678 
    ldv_13_ldv_param_1_5 = ldv_xmalloc_unknown_size(0UL);
    
#line 683 
    ldv_emg_wrapper_ipw2100_set_address_8(ldv_13_container,ldv_13_ldv_param_1_5);
    
#line 687 
    ldv_free(ldv_13_ldv_param_1_5);
    
#line 694 
    goto ldv_call_13;
    case 3: 
#line 697 
    ;
    
#line 699 
    ldv_13_ldv_param_0_4 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
    
#line 704 
    (*ldv_emg_alias_libipw_xmit_7)(ldv_13_ldv_param_0_4,ldv_13_container);
    
#line 708 
    ldv_free((void *)ldv_13_ldv_param_0_4);
    
#line 715 
    goto ldv_call_13;
    case 4: 
#line 718 
    ;
    
#line 724 
    (*ldv_emg_alias_libipw_change_mtu_5)(ldv_13_container,ldv_13_ldv_param_1_3);
    
#line 734 
    goto ldv_call_13;
    case 5: 
#line 737 
    ;
    
#line 740 
    (*ldv_emg_alias_eth_validate_addr_6)(ldv_13_container);
    
#line 747 
    goto ldv_call_13;
    case 6: 
#line 750 
    ;
    
#line 753 
    ldv_emg_wrapper_ipw2100_ethtool_get_link_4(ldv_13_container);
    
#line 760 
    goto ldv_call_13;
    case 7: 
#line 763 
    ;
    
#line 765 
    ldv_13_ldv_param_1_2 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
    
#line 770 
    ldv_emg_wrapper_ipw_ethtool_get_drvinfo_3(ldv_13_container,ldv_13_ldv_param_1_2);
    
#line 774 
    ldv_free((void *)ldv_13_ldv_param_1_2);
    
#line 781 
    goto ldv_call_13;
    case 8: 
#line 784 
    ;
    
#line 790 
    __retres = (void *)0;
    
#line 790 
    goto return_label;
    default: 
#line 793 
    ;
    
#line 793 
    __VERIFIER_assume(0);
  }
  
#line 796 
  __retres = (void *)0;
  return_label: 
#line 796 
                return __retres;
}


#line 801  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_6_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_12 *cf_arg_12;
  int tmp;
  
#line 804 
  tmp = ldv_undef_int();
  
#line 804 
  switch (tmp) {
    case 0: 
#line 805 
    ;
    
#line 806 
    cf_arg_12 = (struct ldv_struct_pci_scenario_12 *)ldv_xmalloc(16UL);
    
#line 807 
    cf_arg_12->arg0 = arg0;
    
#line 808 
    ret = pthread_create(& ldv_thread_12,(pthread_attr_t const *)0,& ldv_pci_scenario_12,(void *)cf_arg_12);
    
#line 809 
    __VERIFIER_assume(ret == 0);
    
#line 810 
    goto ldv_44810;
    default: 
#line 812 
    ;
    
#line 812 
    __VERIFIER_assume(0);
  }
  ldv_44810: 
#line 813 
  ;
  
#line 814 
  return;
}


#line 818  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_5_netdev;
  
#line 824 
  ldv_5_netdev = arg0;
  
#line 829 
  ldv_emg_wrapper_ipw2100_close_2(ldv_5_netdev);
  
#line 833 
  ldv_dispatch_deregister_5_1(ldv_5_netdev);
  
#line 837 
  goto return_label;
  return_label: 
#line 839 
                return;
}


#line 844  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 851 
  ldv_1_ret = ldv_emg_ipw2100_init();
  
#line 852 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 855 
  tmp = ldv_undef_int();
  
#line 855 
  if (tmp != 0) {
    
#line 857 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 861 
    __retres = (void *)0;
    
#line 861 
    goto return_label;
  }
  else {
    
#line 865 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 870 
    ldv_emg_ipw2100_exit();
    
#line 874 
    __retres = (void *)0;
    
#line 874 
    goto return_label;
  }
  
#line 877 
  __retres = (void *)0;
  return_label: 
#line 877 
                return __retres;
}


#line 882  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ipw2x00/ipw2100.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_4_netdev;
  int tmp_3;
  
#line 886 
  int ldv_4_ret = ldv_undef_int();
  
#line 889 
  ldv_4_ret = ldv_undef_int();
  
#line 892 
  tmp_3 = ldv_undef_int();
  
#line 892 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 894 
    ldv_4_netdev = arg0;
    
#line 899 
    ldv_4_ret = ldv_emg_wrapper_ipw2100_open_2(ldv_4_netdev);
    
#line 902 
    tmp_1 = ldv_undef_int();
    
#line 902 
    if (tmp_1 != 0) {
      
#line 904 
      __VERIFIER_assume(ldv_4_ret == 0);
      
#line 908 
      ldv_dispatch_register_4_4(ldv_4_netdev);
      
#line 912 
      __retres = 0;
      
#line 912 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 919 
      __VERIFIER_assume(ldv_4_ret != 0);
      
#line 920 
      ldv_failed_register_netdev();
      
#line 921 
      tmp_0 = ldv_undef_int_negative();
      
#line 921 
      __retres = tmp_0;
      
#line 921 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 929 
    ldv_failed_register_netdev();
    
#line 930 
    tmp_2 = ldv_undef_int_negative();
    
#line 930 
    __retres = tmp_2;
    
#line 930 
    goto return_label;
  }
  return_label: 
#line 892 
                return __retres;
}


