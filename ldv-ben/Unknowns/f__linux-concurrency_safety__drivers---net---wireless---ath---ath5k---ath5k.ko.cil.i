/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __le16;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __le32;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s16 int16_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_pci.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 382  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
enum nl80211_iftype {
    NL80211_IFTYPE_UNSPECIFIED = 0,
    NL80211_IFTYPE_ADHOC = 1,
    NL80211_IFTYPE_STATION = 2,
    NL80211_IFTYPE_AP = 3,
    NL80211_IFTYPE_AP_VLAN = 4,
    NL80211_IFTYPE_WDS = 5,
    NL80211_IFTYPE_MONITOR = 6,
    NL80211_IFTYPE_MESH_POINT = 7,
    NL80211_IFTYPE_P2P_CLIENT = 8,
    NL80211_IFTYPE_P2P_GO = 9,
    NL80211_IFTYPE_P2P_DEVICE = 10,
    NL80211_IFTYPE_OCB = 11,
    NUM_NL80211_IFTYPES = 12,
    NL80211_IFTYPE_MAX = 11
};

#line 412  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
struct nl80211_sta_flag_update {
   __u32 mask ;
   __u32 set ;
};

#line 2431  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
enum nl80211_reg_initiator {
    NL80211_REGDOM_SET_BY_CORE = 0,
    NL80211_REGDOM_SET_BY_USER = 1,
    NL80211_REGDOM_SET_BY_DRIVER = 2,
    NL80211_REGDOM_SET_BY_COUNTRY_IE = 3
};

#line 2484 
enum nl80211_dfs_regions {
    NL80211_DFS_UNSET = 0,
    NL80211_DFS_FCC = 1,
    NL80211_DFS_ETSI = 2,
    NL80211_DFS_JP = 3
};

#line 2491 
enum nl80211_user_reg_hint_type {
    NL80211_USER_REG_HINT_USER = 0,
    NL80211_USER_REG_HINT_CELL_BASE = 1,
    NL80211_USER_REG_HINT_INDOOR = 2
};

#line 2524 
enum nl80211_mesh_power_mode {
    NL80211_MESH_POWER_UNKNOWN = 0,
    NL80211_MESH_POWER_ACTIVE = 1,
    NL80211_MESH_POWER_LIGHT_SLEEP = 2,
    NL80211_MESH_POWER_DEEP_SLEEP = 3,
    __NL80211_MESH_POWER_AFTER_LAST = 4,
    NL80211_MESH_POWER_MAX = 3
};

#line 2607 
enum nl80211_chan_width {
    NL80211_CHAN_WIDTH_20_NOHT = 0,
    NL80211_CHAN_WIDTH_20 = 1,
    NL80211_CHAN_WIDTH_40 = 2,
    NL80211_CHAN_WIDTH_80 = 3,
    NL80211_CHAN_WIDTH_80P80 = 4,
    NL80211_CHAN_WIDTH_160 = 5,
    NL80211_CHAN_WIDTH_5 = 6,
    NL80211_CHAN_WIDTH_10 = 7
};

#line 2618 
enum nl80211_bss_scan_width {
    NL80211_BSS_CHAN_WIDTH_20 = 0,
    NL80211_BSS_CHAN_WIDTH_10 = 1,
    NL80211_BSS_CHAN_WIDTH_5 = 2
};

#line 2650 
enum nl80211_auth_type {
    NL80211_AUTHTYPE_OPEN_SYSTEM = 0,
    NL80211_AUTHTYPE_SHARED_KEY = 1,
    NL80211_AUTHTYPE_FT = 2,
    NL80211_AUTHTYPE_NETWORK_EAP = 3,
    NL80211_AUTHTYPE_SAE = 4,
    __NL80211_AUTHTYPE_NUM = 5,
    NL80211_AUTHTYPE_MAX = 4,
    NL80211_AUTHTYPE_AUTOMATIC = 5
};

#line 2668 
enum nl80211_mfp {
    NL80211_MFP_NO = 0,
    NL80211_MFP_REQUIRED = 1
};

#line 3559 
enum nl80211_txrate_gi {
    NL80211_TXRATE_DEFAULT_GI = 0,
    NL80211_TXRATE_FORCE_SGI = 1,
    NL80211_TXRATE_FORCE_LGI = 2
};

#line 3596 
enum nl80211_tx_power_setting {
    NL80211_TX_POWER_AUTOMATIC = 0,
    NL80211_TX_POWER_LIMITED = 1,
    NL80211_TX_POWER_FIXED = 2
};

#line 3734  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_seq {
   __u32 start ;
   __u32 offset ;
   __u32 len ;
};

#line 3871  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token {
   __u32 offset ;
   __u32 len ;
   __u8 token_stream[] ;
};

#line 3883  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token_feature {
   __u32 min_len ;
   __u32 max_len ;
   __u32 bufsize ;
};

#line 4131 
enum nl80211_dfs_state {
    NL80211_DFS_USABLE = 0,
    NL80211_DFS_UNAVAILABLE = 1,
    NL80211_DFS_AVAILABLE = 2
};

#line 4153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_vendor_cmd_info {
   __u32 vendor_id ;
   __u32 subcmd ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_48 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_48 seqlock_t;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 1170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugobjects.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
union __anonunion_49 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 1120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_49 __anonCompField_idr_layer_19 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 97 
struct dentry;

#line 98 
struct iattr;

#line 99 
struct vm_area_struct;

#line 100 
struct super_block;

#line 101 
struct file_system_type;

#line 102 
struct kernfs_open_node;

#line 103 
struct kernfs_iattrs;

#line 126 
struct kernfs_root;

#line 126  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_54 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_54 __anonCompField_kernfs_node_20 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171 
struct vm_operations_struct;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 281 
struct inode;

#line 477 
struct sock;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_55 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_55 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_56 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_56 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct bin_attribute;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kref.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 239 
enum hrtimer_restart;

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_58 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_57 {
   struct __anonstruct_58 __anonCompField___anonunion_57_21 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_57 __anonCompField_ctl_table_header_22 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_59 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_59 nodemask_t;

#line 520 
struct path;

#line 521  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 796  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct rw_semaphore;

#line 797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_124 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_124 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct dma_map_ops;

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemleak.h"
struct kmem_cache;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_157 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_158 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_156 {
   struct __anonstruct_157 __anonCompField___anonunion_156_35 ;
   struct __anonstruct_158 __anonCompField___anonunion_156_36 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_156 __anonCompField_uprobe_task_37 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_159 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_161 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_165 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_164 {
   atomic_t _mapcount ;
   struct __anonstruct_165 __anonCompField___anonunion_164_40 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_163 {
   union __anonunion_164 __anonCompField___anonstruct_163_41 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_162 {
   unsigned long counters ;
   struct __anonstruct_163 __anonCompField___anonunion_162_42 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_160 {
   union __anonunion_161 __anonCompField___anonstruct_160_39 ;
   union __anonunion_162 __anonCompField___anonstruct_160_43 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_167 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_168 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_166 {
   struct list_head lru ;
   struct __anonstruct_167 __anonCompField___anonunion_166_45 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_168 __anonCompField___anonunion_166_46 ;
   pgtable_t pmd_huge_pte ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_169 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_159 __anonCompField_page_38 ;
   struct __anonstruct_160 __anonCompField_page_44 ;
   union __anonunion_166 __anonCompField_page_47 ;
   union __anonunion_169 __anonCompField_page_48 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_170 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_170 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_172 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_172 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_174 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_175 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_176 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_177 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_179 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_178 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_179 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_180 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_181 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_173 {
   int _pad[28U] ;
   struct __anonstruct__kill_174 _kill ;
   struct __anonstruct__timer_175 _timer ;
   struct __anonstruct__rt_176 _rt ;
   struct __anonstruct__sigchld_177 _sigchld ;
   struct __anonstruct__sigfault_178 _sigfault ;
   struct __anonstruct__sigpoll_180 _sigpoll ;
   struct __anonstruct__sigsys_181 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_173 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct cred;

#line 38 
struct key_type;

#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_188 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_189 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_191 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_190 {
   struct keyring_index_key index_key ;
   struct __anonstruct_191 __anonCompField___anonunion_190_51 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_192 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_194 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_193 {
   union __anonunion_payload_194 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_188 __anonCompField_key_49 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_189 __anonCompField_key_50 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_190 __anonCompField_key_52 ;
   union __anonunion_type_data_192 type_data ;
   union __anonunion_193 __anonCompField_key_53 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct pipe_inode_info;

#line 1173 
struct uts_namespace;

#line 1174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct proc_dir_entry;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_209 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_209 __anonCompField_pci_dev_57 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 1249 
struct kvec;

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pci_64.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci-aspm.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_210 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_210 __anonCompField_iov_iter_58 ;
   unsigned long nr_segs ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/fcntl.h"
enum ldv_22512 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_22512 socket_state;

#line 55 
struct net;

#line 72 
struct fasync_struct;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_211 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_211 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_23365 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_216 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_217 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_23365 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_216 __anonCompField_nf_bridge_info_62 ;
   union __anonunion_217 __anonCompField_nf_bridge_info_63 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_220 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_219 {
   u64 v64 ;
   struct __anonstruct_220 __anonCompField___anonunion_219_64 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_219 __anonCompField_skb_mstamp_65 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_223 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_222 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_223 __anonCompField___anonstruct_222_66 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_221 {
   struct __anonstruct_222 __anonCompField___anonunion_221_67 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_225 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_224 {
   __wsum csum ;
   struct __anonstruct_225 __anonCompField___anonunion_224_69 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_226 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_227 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_228 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_221 __anonCompField_sk_buff_68 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_224 __anonCompField_sk_buff_70 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_226 __anonCompField_sk_buff_71 ;
   __u32 secmark ;
   union __anonunion_227 __anonCompField_sk_buff_72 ;
   union __anonunion_228 __anonCompField_sk_buff_73 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_230 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_230 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_231 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_231 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_232 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_232 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_233 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_233 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_234 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_234 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_235 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_235 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_236 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_236 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_237 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_237 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_238 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_239 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_238 ifr_ifrn ;
   union __anonunion_ifr_ifru_239 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_244 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_243 {
   struct __anonstruct_244 __anonCompField___anonunion_243_74 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_243 __anonCompField_lockref_75 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_246 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_245 {
   struct __anonstruct_246 __anonCompField___anonunion_245_76 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_245 __anonCompField_qstr_77 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_247 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_247 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_251 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_250 {
   struct __anonstruct_251 __anonCompField___anonunion_250_78 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_250 __anonCompField_radix_tree_node_79 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct kstatfs;

#line 63 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_255 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_255 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_256 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_256 __anonCompField_kqid_81 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_259 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_260 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_261 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_259 __anonCompField_inode_82 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_260 __anonCompField_inode_83 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_261 __anonCompField_inode_84 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_262 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_262 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_264 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_263 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_264 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_263 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 715  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_295 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_295 possible_net_t;

#line 376 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_28760 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_28760 phy_interface_t;

#line 126 
enum ldv_28813 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_28813 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 1628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_30525 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_30526 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_305 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_306 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_307 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_305 adj_list ;
   struct __anonstruct_all_adj_list_306 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_30525 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_30526 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_307 __anonCompField_net_device_94 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct kernel_param;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_320 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_320 __anonCompField_kernel_param_95 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 1161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_p2p_noa_desc {
   u8 count ;
   __le32 duration ;
   __le32 interval ;
   __le32 start_time ;
};

#line 1180  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_p2p_noa_attr {
   u8 index ;
   u8 oppps_ctwindow ;
   struct ieee80211_p2p_noa_desc desc[4U] ;
};

#line 1204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_mcs_info {
   u8 rx_mask[10U] ;
   __le16 rx_highest ;
   u8 tx_params ;
   u8 reserved[3U] ;
};

#line 1229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_ht_cap {
   __le16 cap_info ;
   u8 ampdu_params_info ;
   struct ieee80211_mcs_info mcs ;
   __le16 extended_ht_cap_info ;
   __le32 tx_BF_cap_info ;
   u8 antenna_selection_info ;
};

#line 1354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_vht_mcs_info {
   __le16 rx_mcs_map ;
   __le16 rx_highest ;
   __le16 tx_mcs_map ;
   __le16 tx_highest ;
};

#line 1435  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_vht_cap {
   __le32 vht_cap_info ;
   struct ieee80211_vht_mcs_info supp_mcs ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugfs.h"
enum environment_cap {
    ENVIRON_ANY = 0,
    ENVIRON_INDOOR = 1,
    ENVIRON_OUTDOOR = 2
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugfs.h"
struct regulatory_request {
   struct callback_head callback_head ;
   int wiphy_idx ;
   enum nl80211_reg_initiator initiator ;
   enum nl80211_user_reg_hint_type user_reg_hint_type ;
   char alpha2[2U] ;
   enum nl80211_dfs_regions dfs_region ;
   bool intersect ;
   bool processed ;
   enum environment_cap country_ie_env ;
   struct list_head list ;
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_freq_range {
   u32 start_freq_khz ;
   u32 end_freq_khz ;
   u32 max_bandwidth_khz ;
};

#line 185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_power_rule {
   u32 max_antenna_gain ;
   u32 max_eirp ;
};

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_reg_rule {
   struct ieee80211_freq_range freq_range ;
   struct ieee80211_power_rule power_rule ;
   u32 flags ;
   u32 dfs_cac_ms ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_regdomain {
   struct callback_head callback_head ;
   u32 n_reg_rules ;
   char alpha2[3U] ;
   enum nl80211_dfs_regions dfs_region ;
   struct ieee80211_reg_rule reg_rules[] ;
};

#line 205 
struct wiphy;

#line 206 
enum ieee80211_band {
    IEEE80211_BAND_2GHZ = 0,
    IEEE80211_BAND_5GHZ = 1,
    IEEE80211_BAND_60GHZ = 2,
    IEEE80211_NUM_BANDS = 3
};

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_channel {
   enum ieee80211_band band ;
   u16 center_freq ;
   u16 hw_value ;
   u32 flags ;
   int max_antenna_gain ;
   int max_power ;
   int max_reg_power ;
   bool beacon_found ;
   u32 orig_flags ;
   int orig_mag ;
   int orig_mpwr ;
   enum nl80211_dfs_state dfs_state ;
   unsigned long dfs_state_entered ;
   unsigned int dfs_cac_ms ;
};

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_rate {
   u32 flags ;
   u16 bitrate ;
   u16 hw_value ;
   u16 hw_value_short ;
};

#line 269  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_sta_ht_cap {
   u16 cap ;
   bool ht_supported ;
   u8 ampdu_factor ;
   u8 ampdu_density ;
   struct ieee80211_mcs_info mcs ;
};

#line 289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_sta_vht_cap {
   bool vht_supported ;
   u32 cap ;
   struct ieee80211_vht_mcs_info vht_mcs ;
};

#line 305  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_supported_band {
   struct ieee80211_channel *channels ;
   struct ieee80211_rate *bitrates ;
   enum ieee80211_band band ;
   int n_channels ;
   int n_bitrates ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
};

#line 387  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_chan_def {
   struct ieee80211_channel *chan ;
   enum nl80211_chan_width width ;
   u32 center_freq1 ;
   u32 center_freq2 ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct survey_info {
   struct ieee80211_channel *channel ;
   u64 time ;
   u64 time_busy ;
   u64 time_ext_busy ;
   u64 time_rx ;
   u64 time_tx ;
   u64 time_scan ;
   u32 filled ;
   s8 noise ;
};

#line 608  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_crypto_settings {
   u32 wpa_versions ;
   u32 cipher_group ;
   int n_ciphers_pairwise ;
   u32 ciphers_pairwise[5U] ;
   int n_akm_suites ;
   u32 akm_suites[2U] ;
   bool control_port ;
   __be16 control_port_ethertype ;
   bool control_port_no_encrypt ;
};

#line 671  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct mac_address {
   u8 addr[6U] ;
};

#line 914  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct rate_info {
   u8 flags ;
   u8 mcs ;
   u16 legacy ;
   u8 nss ;
   u8 bw ;
};

#line 964  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct sta_bss_parameters {
   u8 flags ;
   u8 dtim_period ;
   u16 beacon_interval ;
};

#line 989  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_tid_stats {
   u32 filled ;
   u64 rx_msdu ;
   u64 tx_msdu ;
   u64 tx_msdu_retries ;
   u64 tx_msdu_failed ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct station_info {
   u32 filled ;
   u32 connected_time ;
   u32 inactive_time ;
   u64 rx_bytes ;
   u64 tx_bytes ;
   u16 llid ;
   u16 plid ;
   u8 plink_state ;
   s8 signal ;
   s8 signal_avg ;
   u8 chains ;
   s8 chain_signal[4U] ;
   s8 chain_signal_avg[4U] ;
   struct rate_info txrate ;
   struct rate_info rxrate ;
   u32 rx_packets ;
   u32 tx_packets ;
   u32 tx_retries ;
   u32 tx_failed ;
   u32 rx_dropped_misc ;
   struct sta_bss_parameters bss_param ;
   struct nl80211_sta_flag_update sta_flags ;
   int generation ;
   u8 const *assoc_req_ies ;
   size_t assoc_req_ies_len ;
   u32 beacon_loss_count ;
   s64 t_offset ;
   enum nl80211_mesh_power_mode local_pm ;
   enum nl80211_mesh_power_mode peer_pm ;
   enum nl80211_mesh_power_mode nonpeer_pm ;
   u32 expected_throughput ;
   u64 rx_beacon ;
   u8 rx_beacon_signal_avg ;
   struct cfg80211_tid_stats pertid[17U] ;
};

#line 1395  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_ssid {
   u8 ssid[32U] ;
   u8 ssid_len ;
};

#line 1428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_scan_request {
   struct cfg80211_ssid *ssids ;
   int n_ssids ;
   u32 n_channels ;
   enum nl80211_bss_scan_width scan_width ;
   u8 const *ie ;
   size_t ie_len ;
   u32 flags ;
   u32 rates[3U] ;
   struct wireless_dev *wdev ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   struct wiphy *wiphy ;
   unsigned long scan_start ;
   bool aborted ;
   bool notified ;
   bool no_cck ;
   struct ieee80211_channel *channels[0U] ;
};

#line 1491  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_match_set {
   struct cfg80211_ssid ssid ;
   s32 rssi_thold ;
};

#line 1499  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_sched_scan_request {
   struct cfg80211_ssid *ssids ;
   int n_ssids ;
   u32 n_channels ;
   enum nl80211_bss_scan_width scan_width ;
   u32 interval ;
   u8 const *ie ;
   size_t ie_len ;
   u32 flags ;
   struct cfg80211_match_set *match_sets ;
   int n_match_sets ;
   s32 min_rssi_thold ;
   u32 delay ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   struct wiphy *wiphy ;
   struct net_device *dev ;
   unsigned long scan_start ;
   struct callback_head callback_head ;
   u32 owner_nlportid ;
   struct ieee80211_channel *channels[0U] ;
};

#line 1561 
enum cfg80211_signal_type {
    CFG80211_SIGNAL_TYPE_NONE = 0,
    CFG80211_SIGNAL_TYPE_MBM = 1,
    CFG80211_SIGNAL_TYPE_UNSPEC = 2
};

#line 1766  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_ibss_params {
   u8 const *ssid ;
   u8 const *bssid ;
   struct cfg80211_chan_def chandef ;
   u8 const *ie ;
   u8 ssid_len ;
   u8 ie_len ;
   u16 beacon_interval ;
   u32 basic_rates ;
   bool channel_fixed ;
   bool privacy ;
   bool control_port ;
   bool userspace_handles_dfs ;
   int mcast_rate[3U] ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
};

#line 1814  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_connect_params {
   struct ieee80211_channel *channel ;
   struct ieee80211_channel *channel_hint ;
   u8 const *bssid ;
   u8 const *bssid_hint ;
   u8 const *ssid ;
   size_t ssid_len ;
   enum nl80211_auth_type auth_type ;
   u8 const *ie ;
   size_t ie_len ;
   bool privacy ;
   enum nl80211_mfp mfp ;
   struct cfg80211_crypto_settings crypto ;
   u8 const *key ;
   u8 key_len ;
   u8 key_idx ;
   u32 flags ;
   int bg_scan_period ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
   struct ieee80211_vht_cap vht_capa ;
   struct ieee80211_vht_cap vht_capa_mask ;
};

#line 1882  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct __anonstruct_control_366 {
   u32 legacy ;
   u8 ht_mcs[10U] ;
   u16 vht_mcs[8U] ;
   enum nl80211_txrate_gi gi ;
};

#line 1882  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_bitrate_mask {
   struct __anonstruct_control_366 control[3U] ;
};

#line 1916  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_pkt_pattern {
   u8 const *mask ;
   u8 const *pattern ;
   int pattern_len ;
   int pkt_offset ;
};

#line 1933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_wowlan_tcp {
   struct socket *sock ;
   __be32 src ;
   __be32 dst ;
   u16 src_port ;
   u16 dst_port ;
   u8 dst_mac[6U] ;
   int payload_len ;
   u8 const *payload ;
   struct nl80211_wowlan_tcp_data_seq payload_seq ;
   u32 data_interval ;
   u32 wake_len ;
   u8 const *wake_data ;
   u8 const *wake_mask ;
   u32 tokens_size ;
   struct nl80211_wowlan_tcp_data_token payload_tok ;
};

#line 1968  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_wowlan {
   bool any ;
   bool disconnect ;
   bool magic_pkt ;
   bool gtk_rekey_failure ;
   bool eap_identity_req ;
   bool four_way_handshake ;
   bool rfkill_release ;
   struct cfg80211_pkt_pattern *patterns ;
   struct cfg80211_wowlan_tcp *tcp ;
   int n_patterns ;
   struct cfg80211_sched_scan_request *nd_config ;
};

#line 2086  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_gtk_rekey_data {
   u8 const *kek ;
   u8 const *kck ;
   u8 const *replay_ctr ;
};

#line 2736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_iface_limit {
   u16 max ;
   u16 types ;
};

#line 2797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_iface_combination {
   struct ieee80211_iface_limit const *limits ;
   u32 num_different_channels ;
   u16 max_interfaces ;
   u8 n_limits ;
   bool beacon_int_infra_match ;
   u8 radar_detect_widths ;
   u8 radar_detect_regions ;
};

#line 2869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_txrx_stypes {
   u16 tx ;
   u16 rx ;
};

#line 2885  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_wowlan_tcp_support {
   struct nl80211_wowlan_tcp_data_token_feature const *tok ;
   u32 data_payload_max ;
   u32 data_interval_max ;
   u32 wake_payload_max ;
   bool seq ;
};

#line 2910  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_wowlan_support {
   u32 flags ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
   int max_nd_match_sets ;
   struct wiphy_wowlan_tcp_support const *tcp ;
};

#line 2935  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_coalesce_support {
   int n_rules ;
   int max_delay ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
};

#line 2960  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_vendor_command {
   struct nl80211_vendor_cmd_info info ;
   u32 flags ;
   int (*doit)(struct wiphy *, struct wireless_dev *, void const *, int ) ;
};

#line 2981  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy {
   u8 perm_addr[6U] ;
   u8 addr_mask[6U] ;
   struct mac_address *addresses ;
   struct ieee80211_txrx_stypes const *mgmt_stypes ;
   struct ieee80211_iface_combination const *iface_combinations ;
   int n_iface_combinations ;
   u16 software_iftypes ;
   u16 n_addresses ;
   u16 interface_modes ;
   u16 max_acl_mac_addrs ;
   u32 flags ;
   u32 regulatory_flags ;
   u32 features ;
   u8 ext_features[1U] ;
   u32 ap_sme_capa ;
   enum cfg80211_signal_type signal_type ;
   int bss_priv_size ;
   u8 max_scan_ssids ;
   u8 max_sched_scan_ssids ;
   u8 max_match_sets ;
   u16 max_scan_ie_len ;
   u16 max_sched_scan_ie_len ;
   int n_cipher_suites ;
   u32 const *cipher_suites ;
   u8 retry_short ;
   u8 retry_long ;
   u32 frag_threshold ;
   u32 rts_threshold ;
   u8 coverage_class ;
   char fw_version[32U] ;
   u32 hw_version ;
   struct wiphy_wowlan_support const *wowlan ;
   struct cfg80211_wowlan *wowlan_config ;
   u16 max_remain_on_channel_duration ;
   u8 max_num_pmkids ;
   u32 available_antennas_tx ;
   u32 available_antennas_rx ;
   u32 probe_resp_offload ;
   u8 const *extended_capabilities ;
   u8 const *extended_capabilities_mask ;
   u8 extended_capabilities_len ;
   void const *privid ;
   struct ieee80211_supported_band *bands[3U] ;
   void (*reg_notifier)(struct wiphy *, struct regulatory_request *) ;
   struct ieee80211_regdomain const *regd ;
   struct device dev ;
   bool registered ;
   struct dentry *debugfsdir ;
   struct ieee80211_ht_cap const *ht_capa_mod_mask ;
   struct ieee80211_vht_cap const *vht_capa_mod_mask ;
   possible_net_t _net ;
   struct iw_handler_def const *wext ;
   struct wiphy_coalesce_support const *coalesce ;
   struct wiphy_vendor_command const *vendor_commands ;
   struct nl80211_vendor_cmd_info const *vendor_events ;
   int n_vendor_commands ;
   int n_vendor_events ;
   u16 max_ap_assoc_sta ;
   u8 max_num_csa_counters ;
   u8 max_adj_channel_rssi_comp ;
   char priv[0U] ;
};

#line 3369 
struct cfg80211_conn;

#line 3370 
struct cfg80211_internal_bss;

#line 3371 
struct cfg80211_cached_keys;

#line 3372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct __anonstruct_wext_367 {
   struct cfg80211_ibss_params ibss ;
   struct cfg80211_connect_params connect ;
   struct cfg80211_cached_keys *keys ;
   u8 const *ie ;
   size_t ie_len ;
   u8 bssid[6U] ;
   u8 prev_bssid[6U] ;
   u8 ssid[32U] ;
   s8 default_key ;
   s8 default_mgmt_key ;
   bool prev_bssid_valid ;
};

#line 3372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wireless_dev {
   struct wiphy *wiphy ;
   enum nl80211_iftype iftype ;
   struct list_head list ;
   struct net_device *netdev ;
   u32 identifier ;
   struct list_head mgmt_registrations ;
   spinlock_t mgmt_registrations_lock ;
   struct mutex mtx ;
   bool use_4addr ;
   bool p2p_started ;
   u8 address[6U] ;
   u8 ssid[32U] ;
   u8 ssid_len ;
   u8 mesh_id_len ;
   u8 mesh_id_up_len ;
   struct cfg80211_conn *conn ;
   struct cfg80211_cached_keys *connect_keys ;
   struct list_head event_list ;
   spinlock_t event_lock ;
   struct cfg80211_internal_bss *current_bss ;
   struct cfg80211_chan_def preset_chandef ;
   struct cfg80211_chan_def chandef ;
   bool ibss_fixed ;
   bool ibss_dfs_possible ;
   bool ps ;
   int ps_timeout ;
   int beacon_interval ;
   u32 ap_unexpected_nlportid ;
   bool cac_started ;
   unsigned long cac_start_time ;
   unsigned int cac_time_ms ;
   u32 owner_nlportid ;
   struct __anonstruct_wext_367 wext ;
};

#line 5244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_tx_queue_params {
   u16 txop ;
   u16 cw_min ;
   u16 cw_max ;
   u8 aifs ;
   bool acm ;
   bool uapsd ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_low_level_stats {
   unsigned int dot11ACKFailureCount ;
   unsigned int dot11RTSFailureCount ;
   unsigned int dot11FCSErrorCount ;
   unsigned int dot11RTSSuccessCount ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_chanctx_conf {
   struct cfg80211_chan_def def ;
   struct cfg80211_chan_def min_def ;
   u8 rx_chains_static ;
   u8 rx_chains_dynamic ;
   bool radar_enabled ;
   u8 drv_priv[0U] ;
};

#line 224 
enum ieee80211_chanctx_switch_mode {
    CHANCTX_SWMODE_REASSIGN_VIF = 0,
    CHANCTX_SWMODE_SWAP_CONTEXTS = 1
};

#line 229 
struct ieee80211_vif;

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_vif_chanctx_switch {
   struct ieee80211_vif *vif ;
   struct ieee80211_chanctx_conf *old_ctx ;
   struct ieee80211_chanctx_conf *new_ctx ;
};

#line 287 
enum ieee80211_event_type {
    RSSI_EVENT = 0,
    MLME_EVENT = 1,
    BAR_RX_EVENT = 2,
    BA_FRAME_TIMEOUT = 3
};

#line 294 
enum ieee80211_rssi_event_data {
    RSSI_EVENT_HIGH = 0,
    RSSI_EVENT_LOW = 1
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_rssi_event {
   enum ieee80211_rssi_event_data data ;
};

#line 369 
enum ieee80211_mlme_event_data {
    AUTH_EVENT = 0,
    ASSOC_EVENT = 1,
    DEAUTH_RX_EVENT = 2,
    DEAUTH_TX_EVENT = 3
};

#line 376 
enum ieee80211_mlme_event_status {
    MLME_SUCCESS = 0,
    MLME_DENIED = 1,
    MLME_TIMEOUT = 2
};

#line 382  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_mlme_event {
   enum ieee80211_mlme_event_data data ;
   enum ieee80211_mlme_event_status status ;
   u16 reason ;
};

#line 407 
struct ieee80211_sta;

#line 407  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_ba_event {
   struct ieee80211_sta *sta ;
   u16 tid ;
   u16 ssn ;
};

#line 419  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
union __anonunion_u_368 {
   struct ieee80211_rssi_event rssi ;
   struct ieee80211_mlme_event mlme ;
   struct ieee80211_ba_event ba ;
};

#line 419  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_event {
   enum ieee80211_event_type type ;
   union __anonunion_u_368 u ;
};

#line 436  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_bss_conf {
   u8 const *bssid ;
   bool assoc ;
   bool ibss_joined ;
   bool ibss_creator ;
   u16 aid ;
   bool use_cts_prot ;
   bool use_short_preamble ;
   bool use_short_slot ;
   bool enable_beacon ;
   u8 dtim_period ;
   u16 beacon_int ;
   u16 assoc_capability ;
   u64 sync_tsf ;
   u32 sync_device_ts ;
   u8 sync_dtim_count ;
   u32 basic_rates ;
   struct ieee80211_rate *beacon_rate ;
   int mcast_rate[3U] ;
   u16 ht_operation_mode ;
   s32 cqm_rssi_thold ;
   u32 cqm_rssi_hyst ;
   struct cfg80211_chan_def chandef ;
   __be32 arp_addr_list[4U] ;
   int arp_addr_cnt ;
   bool qos ;
   bool idle ;
   bool ps ;
   u8 ssid[32U] ;
   size_t ssid_len ;
   bool hidden_ssid ;
   int txpower ;
   enum nl80211_tx_power_setting txpower_type ;
   struct ieee80211_p2p_noa_attr p2p_noa_attr ;
};

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_tx_rate {
   s8 idx ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) count : 5 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))) flags : 11 ;
};

#line 819 
struct ieee80211_key_conf;

#line 896  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_scan_ies {
   u8 const *ies[3U] ;
   size_t len[3U] ;
   u8 const *common_ies ;
   size_t common_ie_len ;
};

#line 1174 
enum ieee80211_smps_mode {
    IEEE80211_SMPS_AUTOMATIC = 0,
    IEEE80211_SMPS_OFF = 1,
    IEEE80211_SMPS_STATIC = 2,
    IEEE80211_SMPS_DYNAMIC = 3,
    IEEE80211_SMPS_NUM_MODES = 4
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_conf {
   u32 flags ;
   int power_level ;
   int dynamic_ps_timeout ;
   int max_sleep_period ;
   u16 listen_interval ;
   u8 ps_dtim_period ;
   u8 long_frame_max_tx_count ;
   u8 short_frame_max_tx_count ;
   struct cfg80211_chan_def chandef ;
   bool radar_enabled ;
   enum ieee80211_smps_mode smps_mode ;
};

#line 1285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_channel_switch {
   u64 timestamp ;
   u32 device_timestamp ;
   bool block_tx ;
   struct cfg80211_chan_def chandef ;
   u8 count ;
};

#line 1316 
struct ieee80211_txq;

#line 1316  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_vif {
   enum nl80211_iftype type ;
   struct ieee80211_bss_conf bss_conf ;
   u8 addr[6U] ;
   bool p2p ;
   bool csa_active ;
   u8 cab_queue ;
   u8 hw_queue[4U] ;
   struct ieee80211_txq *txq ;
   struct ieee80211_chanctx_conf *chanctx_conf ;
   u32 driver_flags ;
   struct dentry *debugfs_dir ;
   u8 drv_priv[0U] ;
};

#line 1432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_key_conf {
   atomic64_t tx_pn ;
   u32 cipher ;
   u8 icv_len ;
   u8 iv_len ;
   u8 hw_key_idx ;
   u8 flags ;
   s8 keyidx ;
   u8 keylen ;
   u8 key[0U] ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_tkip_377 {
   u32 iv32 ;
   u16 iv16 ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_ccmp_378 {
   u8 pn[6U] ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_aes_cmac_379 {
   u8 pn[6U] ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_aes_gmac_380 {
   u8 pn[6U] ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_gcmp_381 {
   u8 pn[6U] ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_hw_382 {
   u8 seq[16U] ;
   u8 seq_len ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
union __anonunion_376 {
   struct __anonstruct_tkip_377 tkip ;
   struct __anonstruct_ccmp_378 ccmp ;
   struct __anonstruct_aes_cmac_379 aes_cmac ;
   struct __anonstruct_aes_gmac_380 aes_gmac ;
   struct __anonstruct_gcmp_381 gcmp ;
   struct __anonstruct_hw_382 hw ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_key_seq {
   union __anonunion_376 __anonCompField_ieee80211_key_seq_101 ;
};

#line 1547  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_cipher_scheme {
   u32 cipher ;
   u16 iftype ;
   u8 hdr_len ;
   u8 pn_len ;
   u8 pn_off ;
   u8 key_idx_off ;
   u8 key_idx_mask ;
   u8 key_idx_shift ;
   u8 mic_len ;
};

#line 1577 
enum set_key_cmd {
    SET_KEY = 0,
    DISABLE_KEY = 1
};

#line 1582 
enum ieee80211_sta_state {
    IEEE80211_STA_NOTEXIST = 0,
    IEEE80211_STA_NONE = 1,
    IEEE80211_STA_AUTH = 2,
    IEEE80211_STA_ASSOC = 3,
    IEEE80211_STA_AUTHORIZED = 4
};

#line 1590 
enum ieee80211_sta_rx_bandwidth {
    IEEE80211_STA_RX_BW_20 = 0,
    IEEE80211_STA_RX_BW_40 = 1,
    IEEE80211_STA_RX_BW_80 = 2,
    IEEE80211_STA_RX_BW_160 = 3
};

#line 1597  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_rate_383 {
   s8 idx ;
   u8 count ;
   u8 count_cts ;
   u8 count_rts ;
   u16 flags ;
};

#line 1597  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_sta_rates {
   struct callback_head callback_head ;
   struct __anonstruct_rate_383 rate[4U] ;
};

#line 1645  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_sta {
   u32 supp_rates[3U] ;
   u8 addr[6U] ;
   u16 aid ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
   bool wme ;
   u8 uapsd_queues ;
   u8 max_sp ;
   u8 rx_nss ;
   enum ieee80211_sta_rx_bandwidth bandwidth ;
   enum ieee80211_smps_mode smps_mode ;
   struct ieee80211_sta_rates *rates ;
   bool tdls ;
   bool tdls_initiator ;
   bool mfp ;
   struct ieee80211_txq *txq[16U] ;
   u8 drv_priv[0U] ;
};

#line 1703 
enum sta_notify_cmd {
    STA_NOTIFY_SLEEP = 0,
    STA_NOTIFY_AWAKE = 1
};

#line 1708  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_tx_control {
   struct ieee80211_sta *sta ;
};

#line 1726  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_txq {
   struct ieee80211_vif *vif ;
   struct ieee80211_sta *sta ;
   u8 tid ;
   u8 ac ;
   u8 drv_priv[0U] ;
};

#line 1781  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_hw {
   struct ieee80211_conf conf ;
   struct wiphy *wiphy ;
   char const *rate_control_algorithm ;
   void *priv ;
   unsigned long flags[1U] ;
   unsigned int extra_tx_headroom ;
   unsigned int extra_beacon_tailroom ;
   int vif_data_size ;
   int sta_data_size ;
   int chanctx_data_size ;
   int txq_data_size ;
   u16 queues ;
   u16 max_listen_interval ;
   s8 max_signal ;
   u8 max_rates ;
   u8 max_report_rates ;
   u8 max_rate_tries ;
   u8 max_rx_aggregation_subframes ;
   u8 max_tx_aggregation_subframes ;
   u8 offchannel_tx_hw_queue ;
   u8 radiotap_mcs_details ;
   u16 radiotap_vht_details ;
   netdev_features_t netdev_features ;
   u8 uapsd_queues ;
   u8 uapsd_max_sp_len ;
   u8 n_cipher_schemes ;
   struct ieee80211_cipher_scheme const *cipher_schemes ;
   int txq_ac_max_pending ;
};

#line 2070  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_scan_request {
   struct ieee80211_scan_ies ies ;
   struct cfg80211_scan_request req ;
};

#line 2084  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_tdls_ch_sw_params {
   struct ieee80211_sta *sta ;
   struct cfg80211_chan_def *chandef ;
   u8 action_code ;
   u32 status ;
   u32 timestamp ;
   u16 switch_time ;
   u16 switch_timeout ;
   struct sk_buff *tmpl_skb ;
   u32 ch_sw_tm_ie ;
};

#line 2194 
enum ieee80211_ampdu_mlme_action {
    IEEE80211_AMPDU_RX_START = 0,
    IEEE80211_AMPDU_RX_STOP = 1,
    IEEE80211_AMPDU_TX_START = 2,
    IEEE80211_AMPDU_TX_STOP_CONT = 3,
    IEEE80211_AMPDU_TX_STOP_FLUSH = 4,
    IEEE80211_AMPDU_TX_STOP_FLUSH_CONT = 5,
    IEEE80211_AMPDU_TX_OPERATIONAL = 6
};

#line 2204 
enum ieee80211_frame_release_type {
    IEEE80211_FRAME_RELEASE_PSPOLL = 0,
    IEEE80211_FRAME_RELEASE_UAPSD = 1
};

#line 2216 
enum ieee80211_roc_type {
    IEEE80211_ROC_TYPE_NORMAL = 0,
    IEEE80211_ROC_TYPE_MGMT_TX = 1
};

#line 2221 
enum ieee80211_reconfig_type {
    IEEE80211_RECONFIG_TYPE_RESTART = 0,
    IEEE80211_RECONFIG_TYPE_SUSPEND = 1
};

#line 2226  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_ops {
   void (*tx)(struct ieee80211_hw *, struct ieee80211_tx_control *, struct sk_buff *) ;
   int (*start)(struct ieee80211_hw *) ;
   void (*stop)(struct ieee80211_hw *) ;
   int (*suspend)(struct ieee80211_hw *, struct cfg80211_wowlan *) ;
   int (*resume)(struct ieee80211_hw *) ;
   void (*set_wakeup)(struct ieee80211_hw *, bool ) ;
   int (*add_interface)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*change_interface)(struct ieee80211_hw *, struct ieee80211_vif *, enum nl80211_iftype , bool ) ;
   void (*remove_interface)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*config)(struct ieee80211_hw *, u32 ) ;
   void (*bss_info_changed)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_bss_conf *, u32 ) ;
   int (*start_ap)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*stop_ap)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   u64 (*prepare_multicast)(struct ieee80211_hw *, struct netdev_hw_addr_list *) ;
   void (*configure_filter)(struct ieee80211_hw *, unsigned int , unsigned int *, u64 ) ;
   int (*set_tim)(struct ieee80211_hw *, struct ieee80211_sta *, bool ) ;
   int (*set_key)(struct ieee80211_hw *, enum set_key_cmd , struct ieee80211_vif *, struct ieee80211_sta *, struct ieee80211_key_conf *) ;
   void (*update_tkip_key)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_key_conf *, struct ieee80211_sta *, u32 , u16 *) ;
   void (*set_rekey_data)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_gtk_rekey_data *) ;
   void (*set_default_unicast_key)(struct ieee80211_hw *, struct ieee80211_vif *, int ) ;
   int (*hw_scan)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_scan_request *) ;
   void (*cancel_hw_scan)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*sched_scan_start)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_sched_scan_request *, struct ieee80211_scan_ies *) ;
   int (*sched_scan_stop)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*sw_scan_start)(struct ieee80211_hw *, struct ieee80211_vif *, u8 const *) ;
   void (*sw_scan_complete)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*get_stats)(struct ieee80211_hw *, struct ieee80211_low_level_stats *) ;
   void (*get_key_seq)(struct ieee80211_hw *, struct ieee80211_key_conf *, struct ieee80211_key_seq *) ;
   int (*set_frag_threshold)(struct ieee80211_hw *, u32 ) ;
   int (*set_rts_threshold)(struct ieee80211_hw *, u32 ) ;
   int (*sta_add)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   int (*sta_remove)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_add_debugfs)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct dentry *) ;
   void (*sta_remove_debugfs)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct dentry *) ;
   void (*sta_notify)(struct ieee80211_hw *, struct ieee80211_vif *, enum sta_notify_cmd , struct ieee80211_sta *) ;
   int (*sta_state)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, enum ieee80211_sta_state , enum ieee80211_sta_state ) ;
   void (*sta_pre_rcu_remove)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_rc_update)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u32 ) ;
   void (*sta_rate_tbl_update)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_statistics)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct station_info *) ;
   int (*conf_tx)(struct ieee80211_hw *, struct ieee80211_vif *, u16 , struct ieee80211_tx_queue_params const *) ;
   u64 (*get_tsf)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*set_tsf)(struct ieee80211_hw *, struct ieee80211_vif *, u64 ) ;
   void (*reset_tsf)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*tx_last_beacon)(struct ieee80211_hw *) ;
   int (*ampdu_action)(struct ieee80211_hw *, struct ieee80211_vif *, enum ieee80211_ampdu_mlme_action , struct ieee80211_sta *, u16 , u16 *, u8 ) ;
   int (*get_survey)(struct ieee80211_hw *, int , struct survey_info *) ;
   void (*rfkill_poll)(struct ieee80211_hw *) ;
   void (*set_coverage_class)(struct ieee80211_hw *, s16 ) ;
   int (*testmode_cmd)(struct ieee80211_hw *, struct ieee80211_vif *, void *, int ) ;
   int (*testmode_dump)(struct ieee80211_hw *, struct sk_buff *, struct netlink_callback *, void *, int ) ;
   void (*flush)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , bool ) ;
   void (*channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*set_antenna)(struct ieee80211_hw *, u32 , u32 ) ;
   int (*get_antenna)(struct ieee80211_hw *, u32 *, u32 *) ;
   int (*remain_on_channel)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel *, int , enum ieee80211_roc_type ) ;
   int (*cancel_remain_on_channel)(struct ieee80211_hw *) ;
   int (*set_ringparam)(struct ieee80211_hw *, u32 , u32 ) ;
   void (*get_ringparam)(struct ieee80211_hw *, u32 *, u32 *, u32 *, u32 *) ;
   bool (*tx_frames_pending)(struct ieee80211_hw *) ;
   int (*set_bitrate_mask)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_bitrate_mask const *) ;
   void (*event_callback)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_event const *) ;
   void (*allow_buffered_frames)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ) ;
   void (*release_buffered_frames)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ) ;
   int (*get_et_sset_count)(struct ieee80211_hw *, struct ieee80211_vif *, int ) ;
   void (*get_et_stats)(struct ieee80211_hw *, struct ieee80211_vif *, struct ethtool_stats *, u64 *) ;
   void (*get_et_strings)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , u8 *) ;
   void (*mgd_prepare_tx)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*mgd_protect_tdls_discover)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*add_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *) ;
   void (*remove_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *) ;
   void (*change_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *, u32 ) ;
   int (*assign_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *) ;
   void (*unassign_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *) ;
   int (*switch_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif_chanctx_switch *, int , enum ieee80211_chanctx_switch_mode ) ;
   void (*reconfig_complete)(struct ieee80211_hw *, enum ieee80211_reconfig_type ) ;
   void (*ipv6_addr_change)(struct ieee80211_hw *, struct ieee80211_vif *, struct inet6_dev *) ;
   void (*channel_switch_beacon)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_chan_def *) ;
   int (*pre_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*post_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*join_ibss)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*leave_ibss)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   u32 (*get_expected_throughput)(struct ieee80211_sta *) ;
   int (*get_txpower)(struct ieee80211_hw *, struct ieee80211_vif *, int *) ;
   int (*tdls_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u8 , struct cfg80211_chan_def *, struct sk_buff *, u32 ) ;
   void (*tdls_cancel_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*tdls_recv_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_tdls_ch_sw_params *) ;
   void (*wake_tx_queue)(struct ieee80211_hw *, struct ieee80211_txq *) ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath.h"
struct ath_ani {
   bool caldone ;
   unsigned int longcal_timer ;
   unsigned int shortcal_timer ;
   unsigned int resetcal_timer ;
   unsigned int checkani_timer ;
   struct timer_list timer ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath.h"
struct ath_cycle_counters {
   u32 cycles ;
   u32 rx_busy ;
   u32 rx_frame ;
   u32 tx_frame ;
};

#line 53 
enum ath_device_state {
    ATH_HW_UNAVAILABLE = 0,
    ATH_HW_INITIALIZED = 1
};

#line 69 
enum ath_bus_type {
    ATH_PCI = 0,
    ATH_AHB = 1,
    ATH_USB = 2
};

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath.h"
struct reg_dmn_pair_mapping {
   u16 reg_domain ;
   u16 reg_5ghz_ctl ;
   u16 reg_2ghz_ctl ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath.h"
struct ath_regulatory {
   char alpha2[2U] ;
   enum nl80211_dfs_regions region ;
   u16 country_code ;
   u16 max_power_level ;
   u16 current_rd ;
   int16_t power_limit ;
   struct reg_dmn_pair_mapping *regpair ;
};

#line 91 
enum ath_crypt_caps {
    ATH_CRYPT_CAP_CIPHER_AESCCM = 1,
    ATH_CRYPT_CAP_MIC_COMBINED = 2
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath.h"
struct ath_ops {
   unsigned int (*read)(void *, u32 ) ;
   void (*multi_read)(void *, u32 *, u32 *, u16 ) ;
   void (*write)(void *, u32 , u32 ) ;
   void (*enable_write_buffer)(void *) ;
   void (*write_flush)(void *) ;
   u32 (*rmw)(void *, u32 , u32 , u32 ) ;
   void (*enable_rmw_buffer)(void *) ;
   void (*rmw_flush)(void *) ;
};

#line 137 
struct ath_common;

#line 138 
struct ath_bus_ops;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath.h"
struct ath_ps_ops {
   void (*wakeup)(struct ath_common *) ;
   void (*restore)(struct ath_common *) ;
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath.h"
struct ath_common {
   void *ah ;
   void *priv ;
   struct ieee80211_hw *hw ;
   int debug_mask ;
   enum ath_device_state state ;
   unsigned long op_flags ;
   struct ath_ani ani ;
   u16 cachelsz ;
   u16 curaid ;
   u8 macaddr[6U] ;
   u8 curbssid[6U] ;
   u8 bssidmask[6U] ;
   u32 rx_bufsize ;
   u32 keymax ;
   unsigned long keymap[2U] ;
   unsigned long tkip_keymap[2U] ;
   unsigned long ccmp_keymap[2U] ;
   enum ath_crypt_caps crypt_caps ;
   unsigned int clockrate ;
   spinlock_t cc_lock ;
   struct ath_cycle_counters cc_ani ;
   struct ath_cycle_counters cc_survey ;
   struct ath_regulatory regulatory ;
   struct ath_regulatory reg_world_copy ;
   struct ath_ops const *ops ;
   struct ath_bus_ops const *bus_ops ;
   struct ath_ps_ops const *ps_ops ;
   bool btcoex_enabled ;
   bool disable_ani ;
   bool bt_ant_diversity ;
   int last_rssi ;
   struct ieee80211_supported_band sbands[3U] ;
};

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath.h"
struct ewma {
   unsigned long internal ;
   unsigned long factor ;
   unsigned long weight ;
};

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/average.h"
enum led_brightness {
    LED_OFF = 0,
    LED_HALF = 127,
    LED_FULL = 255
};

#line 35 
struct led_trigger;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/average.h"
struct led_classdev {
   char const *name ;
   enum led_brightness brightness ;
   enum led_brightness max_brightness ;
   int flags ;
   void (*brightness_set)(struct led_classdev *, enum led_brightness ) ;
   int (*brightness_set_sync)(struct led_classdev *, enum led_brightness ) ;
   enum led_brightness (*brightness_get)(struct led_classdev *) ;
   int (*blink_set)(struct led_classdev *, unsigned long *, unsigned long *) ;
   struct device *dev ;
   struct attribute_group const **groups ;
   struct list_head node ;
   char const *default_trigger ;
   unsigned long blink_delay_on ;
   unsigned long blink_delay_off ;
   struct timer_list blink_timer ;
   int blink_brightness ;
   void (*flash_resume)(struct led_classdev *) ;
   struct work_struct set_brightness_work ;
   int delayed_set_value ;
   struct rw_semaphore trigger_lock ;
   struct led_trigger *trigger ;
   struct list_head trig_list ;
   void *trigger_data ;
   bool activated ;
   struct mutex led_access ;
};

#line 200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/leds.h"
struct led_trigger {
   char const *name ;
   void (*activate)(struct led_classdev *) ;
   void (*deactivate)(struct led_classdev *) ;
   rwlock_t leddev_list_lock ;
   struct list_head led_cdevs ;
   struct list_head next_trig ;
};

#line 365  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/leds.h"
struct ath5k_hw_rx_ctl {
   u32 rx_control_0 ;
   u32 rx_control_1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/desc.h"
struct ath5k_hw_rx_status {
   u32 rx_status_0 ;
   u32 rx_status_1 ;
};

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/desc.h"
struct ath5k_hw_2w_tx_ctl {
   u32 tx_control_0 ;
   u32 tx_control_1 ;
};

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/desc.h"
struct ath5k_hw_4w_tx_ctl {
   u32 tx_control_0 ;
   u32 tx_control_1 ;
   u32 tx_control_2 ;
   u32 tx_control_3 ;
};

#line 219  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/desc.h"
struct ath5k_hw_tx_status {
   u32 tx_status_0 ;
   u32 tx_status_1 ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/desc.h"
struct ath5k_hw_5210_tx_desc {
   struct ath5k_hw_2w_tx_ctl tx_ctl ;
   struct ath5k_hw_tx_status tx_stat ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/desc.h"
struct ath5k_hw_5212_tx_desc {
   struct ath5k_hw_4w_tx_ctl tx_ctl ;
   struct ath5k_hw_tx_status tx_stat ;
};

#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/desc.h"
struct ath5k_hw_all_rx_desc {
   struct ath5k_hw_rx_ctl rx_ctl ;
   struct ath5k_hw_rx_status rx_stat ;
};

#line 340  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/desc.h"
union __anonunion_ud_385 {
   struct ath5k_hw_5210_tx_desc ds_tx5210 ;
   struct ath5k_hw_5212_tx_desc ds_tx5212 ;
   struct ath5k_hw_all_rx_desc ds_rx ;
};

#line 340  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/desc.h"
struct ath5k_desc {
   u32 ds_link ;
   u32 ds_data ;
   union __anonunion_ud_385 ud ;
};

#line 385  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/desc.h"
struct ath5k_chan_pcal_info_rf5111 {
   u8 pwr[11U] ;
   u8 pcdac[11U] ;
   u8 pcdac_min ;
   u8 pcdac_max ;
};

#line 285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.h"
struct ath5k_chan_pcal_info_rf5112 {
   s8 pwr_x0[4U] ;
   s8 pwr_x3[3U] ;
   u8 pcdac_x0[4U] ;
   u8 pcdac_x3[3U] ;
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.h"
struct ath5k_chan_pcal_info_rf2413 {
   s8 pwr_i[4U] ;
   u8 pddac_i[4U] ;
   s8 pwr[4U][5U] ;
   u8 pddac[4U][5U] ;
};

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.h"
struct ath5k_pdgain_info {
   u8 pd_points ;
   u8 *pd_step ;
   s16 *pd_pwr ;
};

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.h"
union __anonunion_386 {
   struct ath5k_chan_pcal_info_rf5111 rf5111_info ;
   struct ath5k_chan_pcal_info_rf5112 rf5112_info ;
   struct ath5k_chan_pcal_info_rf2413 rf2413_info ;
};

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.h"
struct ath5k_chan_pcal_info {
   u16 freq ;
   s16 max_pwr ;
   s16 min_pwr ;
   union __anonunion_386 __anonCompField_ath5k_chan_pcal_info_102 ;
   struct ath5k_pdgain_info *pd_curves ;
};

#line 340  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.h"
struct ath5k_rate_pcal_info {
   u16 freq ;
   u16 target_power_6to24 ;
   u16 target_power_36 ;
   u16 target_power_48 ;
   u16 target_power_54 ;
};

#line 359  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.h"
struct ath5k_edge_power {
   u16 freq ;
   u16 edge ;
   bool flag ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.h"
struct ath5k_eeprom_info {
   u16 ee_magic ;
   u16 ee_protect ;
   u16 ee_regdomain ;
   u16 ee_version ;
   u16 ee_header ;
   u16 ee_ant_gain ;
   u8 ee_rfkill_pin ;
   bool ee_rfkill_pol ;
   bool ee_is_hb63 ;
   bool ee_serdes ;
   u16 ee_misc0 ;
   u16 ee_misc1 ;
   u16 ee_misc2 ;
   u16 ee_misc3 ;
   u16 ee_misc4 ;
   u16 ee_misc5 ;
   u16 ee_misc6 ;
   u16 ee_cck_ofdm_gain_delta ;
   u16 ee_cck_ofdm_power_delta ;
   u16 ee_scaled_cck_delta ;
   u16 ee_i_cal[3U] ;
   u16 ee_q_cal[3U] ;
   u16 ee_fixed_bias[3U] ;
   u16 ee_turbo_max_power[3U] ;
   u16 ee_xr_power[3U] ;
   u16 ee_switch_settling[3U] ;
   u16 ee_atn_tx_rx[3U] ;
   u16 ee_ant_control[3U][11U] ;
   u16 ee_ob[3U][4U] ;
   u16 ee_db[3U][4U] ;
   u16 ee_tx_end2xlna_enable[3U] ;
   u16 ee_tx_end2xpa_disable[3U] ;
   u16 ee_tx_frm2xpa_enable[3U] ;
   u16 ee_thr_62[3U] ;
   u16 ee_xlna_gain[3U] ;
   u16 ee_xpd[3U] ;
   u16 ee_x_gain[3U] ;
   u16 ee_i_gain[3U] ;
   u16 ee_margin_tx_rx[3U] ;
   u16 ee_switch_settling_turbo[3U] ;
   u16 ee_margin_tx_rx_turbo[3U] ;
   u16 ee_atn_tx_rx_turbo[3U] ;
   u16 ee_false_detect[3U] ;
   u8 ee_pd_gains[3U] ;
   u8 ee_pdc_to_idx[3U][4U] ;
   u8 ee_n_piers[3U] ;
   struct ath5k_chan_pcal_info ee_pwr_cal_a[10U] ;
   struct ath5k_chan_pcal_info ee_pwr_cal_b[4U] ;
   struct ath5k_chan_pcal_info ee_pwr_cal_g[4U] ;
   u8 ee_rate_target_pwr_num[3U] ;
   struct ath5k_rate_pcal_info ee_rate_tpwr_a[10U] ;
   struct ath5k_rate_pcal_info ee_rate_tpwr_b[4U] ;
   struct ath5k_rate_pcal_info ee_rate_tpwr_g[4U] ;
   u8 ee_ctls ;
   u8 ee_ctl[32U] ;
   struct ath5k_edge_power ee_ctl_pwr[256U] ;
   s16 ee_noise_floor_thr[3U] ;
   s8 ee_adc_desired_size[3U] ;
   s8 ee_pga_desired_size[3U] ;
   s8 ee_adc_desired_size_turbo[3U] ;
   s8 ee_pga_desired_size_turbo[3U] ;
   s8 ee_pd_gain_overlap ;
   u16 ee_spur_chans[5U][2U] ;
   u32 ee_antenna[3U][3U] ;
};

#line 496 
struct ath5k_hw;

#line 497 
struct ath5k_buf;

#line 498  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.h"
struct ath5k_dbg_info {
   unsigned int level ;
};

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.h"
enum ath5k_ani_mode {
    ATH5K_ANI_MODE_OFF = 0,
    ATH5K_ANI_MODE_MANUAL_LOW = 1,
    ATH5K_ANI_MODE_MANUAL_HIGH = 2,
    ATH5K_ANI_MODE_AUTO = 3
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.h"
struct ath5k_ani_state {
   enum ath5k_ani_mode ani_mode ;
   int noise_imm_level ;
   int spur_level ;
   int firstep_level ;
   bool ofdm_weak_sig ;
   bool cck_weak_sig ;
   int max_spur_level ;
   unsigned int listen_time ;
   unsigned int ofdm_errors ;
   unsigned int cck_errors ;
   struct ath_cycle_counters last_cc ;
   unsigned int last_listen ;
   unsigned int last_ofdm_errors ;
   unsigned int last_cck_errors ;
   unsigned int sum_ofdm_errors ;
   unsigned int sum_cck_errors ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
enum ath5k_version {
    AR5K_AR5210 = 0,
    AR5K_AR5211 = 1,
    AR5K_AR5212 = 2
};

#line 91 
enum ath5k_radio {
    AR5K_RF5110 = 0,
    AR5K_RF5111 = 1,
    AR5K_RF5112 = 2,
    AR5K_RF2413 = 3,
    AR5K_RF5413 = 4,
    AR5K_RF2316 = 5,
    AR5K_RF2317 = 6,
    AR5K_RF2425 = 7
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
struct ath5k_tx_status {
   u16 ts_seqnum ;
   u16 ts_tstamp ;
   u8 ts_status ;
   u8 ts_final_idx ;
   u8 ts_final_retry ;
   s8 ts_rssi ;
   u8 ts_shortretry ;
   u8 ts_virtcol ;
   u8 ts_antenna ;
};

#line 525 
enum ath5k_tx_queue {
    AR5K_TX_QUEUE_INACTIVE = 0,
    AR5K_TX_QUEUE_DATA = 1,
    AR5K_TX_QUEUE_BEACON = 2,
    AR5K_TX_QUEUE_CAB = 3,
    AR5K_TX_QUEUE_UAPSD = 4
};

#line 533 
enum ath5k_tx_queue_subtype {
    AR5K_WME_AC_BK = 0,
    AR5K_WME_AC_BE = 1,
    AR5K_WME_AC_VI = 2,
    AR5K_WME_AC_VO = 3
};

#line 550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
struct ath5k_txq {
   unsigned int qnum ;
   u32 *link ;
   struct list_head q ;
   spinlock_t lock ;
   bool setup ;
   int txq_len ;
   int txq_max ;
   bool txq_poll_mark ;
   unsigned int txq_stuck ;
};

#line 640  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
struct ath5k_txq_info {
   enum ath5k_tx_queue tqi_type ;
   enum ath5k_tx_queue_subtype tqi_subtype ;
   u16 tqi_flags ;
   u8 tqi_aifs ;
   u16 tqi_cw_min ;
   u16 tqi_cw_max ;
   u32 tqi_cbr_period ;
   u32 tqi_cbr_overflow_limit ;
   u32 tqi_burst_time ;
   u32 tqi_ready_time ;
};

#line 664 
enum ath5k_pkt_type {
    AR5K_PKT_TYPE_NORMAL = 0,
    AR5K_PKT_TYPE_ATIM = 1,
    AR5K_PKT_TYPE_PSPOLL = 2,
    AR5K_PKT_TYPE_BEACON = 3,
    AR5K_PKT_TYPE_PROBE_RESP = 4,
    AR5K_PKT_TYPE_PIFS = 5
};

#line 673  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
struct ath5k_rx_status {
   u16 rs_datalen ;
   u16 rs_tstamp ;
   u8 rs_status ;
   u8 rs_phyerr ;
   s8 rs_rssi ;
   u8 rs_keyix ;
   u8 rs_rate ;
   u8 rs_antenna ;
   u8 rs_more ;
};

#line 732  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
struct ath5k_gain {
   u8 g_step_idx ;
   u8 g_current ;
   u8 g_target ;
   u8 g_low ;
   u8 g_high ;
   u8 g_f_corr ;
   u8 g_state ;
};

#line 922 
enum ath5k_int {
    AR5K_INT_RXOK = 1,
    AR5K_INT_RXDESC = 2,
    AR5K_INT_RXERR = 4,
    AR5K_INT_RXNOFRM = 8,
    AR5K_INT_RXEOL = 16,
    AR5K_INT_RXORN = 32,
    AR5K_INT_TXOK = 64,
    AR5K_INT_TXDESC = 128,
    AR5K_INT_TXERR = 256,
    AR5K_INT_TXNOFRM = 512,
    AR5K_INT_TXEOL = 1024,
    AR5K_INT_TXURN = 2048,
    AR5K_INT_MIB = 4096,
    AR5K_INT_SWI = 8192,
    AR5K_INT_RXPHY = 16384,
    AR5K_INT_RXKCM = 32768,
    AR5K_INT_SWBA = 65536,
    AR5K_INT_BRSSI = 131072,
    AR5K_INT_BMISS = 262144,
    AR5K_INT_FATAL = 524288,
    AR5K_INT_BNR = 1048576,
    AR5K_INT_TIM = 2097152,
    AR5K_INT_DTIM = 4194304,
    AR5K_INT_DTIM_SYNC = 8388608,
    AR5K_INT_GPIO = 16777216,
    AR5K_INT_BCN_TIMEOUT = 33554432,
    AR5K_INT_CAB_TIMEOUT = 67108864,
    AR5K_INT_QCBRORN = 134217728,
    AR5K_INT_QCBRURN = 268435456,
    AR5K_INT_QTRIG = 536870912,
    AR5K_INT_GLOBAL = 2147483648,
    AR5K_INT_TX_ALL = 4032,
    AR5K_INT_RX_ALL = 63,
    AR5K_INT_COMMON = 2164785151,
    AR5K_INT_NOCARD = 4294967295
};

#line 975  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
struct __anonstruct_cap_range_387 {
   u16 range_2ghz_min ;
   u16 range_2ghz_max ;
   u16 range_5ghz_min ;
   u16 range_5ghz_max ;
};

#line 975  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
struct __anonstruct_cap_queues_388 {
   u8 q_tx_num ;
};

#line 975  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
struct ath5k_capabilities {
   unsigned long cap_mode[1U] ;
   struct __anonstruct_cap_range_387 cap_range ;
   struct ath5k_eeprom_info cap_eeprom ;
   struct __anonstruct_cap_queues_388 cap_queues ;
   bool cap_has_phyerr_counters ;
   bool cap_has_mrr_support ;
   bool cap_needs_2GHz_ovr ;
};

#line 1167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
struct ath5k_nfcal_hist {
   s16 index ;
   s16 nfval[8U] ;
};

#line 1174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
struct ath5k_led {
   char name[32U] ;
   struct ath5k_hw *ah ;
   struct led_classdev led_dev ;
};

#line 1185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
struct ath5k_rfkill {
   u16 gpio ;
   bool polarity ;
   struct tasklet_struct toggleq ;
};

#line 1195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
struct ath5k_statistics {
   unsigned int antenna_rx[5U] ;
   unsigned int antenna_tx[5U] ;
   unsigned int rx_all_count ;
   unsigned int tx_all_count ;
   unsigned int rx_bytes_count ;
   unsigned int tx_bytes_count ;
   unsigned int rxerr_crc ;
   unsigned int rxerr_phy ;
   unsigned int rxerr_phy_code[32U] ;
   unsigned int rxerr_fifo ;
   unsigned int rxerr_decrypt ;
   unsigned int rxerr_mic ;
   unsigned int rxerr_proc ;
   unsigned int rxerr_jumbo ;
   unsigned int txerr_retry ;
   unsigned int txerr_fifo ;
   unsigned int txerr_filt ;
   unsigned int ack_fail ;
   unsigned int rts_fail ;
   unsigned int rts_ok ;
   unsigned int fcs_error ;
   unsigned int beacons ;
   unsigned int mib_intr ;
   unsigned int rxorn_intr ;
   unsigned int rxeol_intr ;
};

#line 1235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
struct __anonstruct_ah_txpower_389 {
   u8 tmpL[4U][64U] ;
   u8 tmpR[4U][64U] ;
   u8 txp_pd_table[128U] ;
   u16 txp_rates_power_table[32U] ;
   u8 txp_min_idx ;
   bool txp_tpc ;
   s16 txp_min_pwr ;
   s16 txp_max_pwr ;
   s16 txp_cur_pwr ;
   s16 txp_offset ;
   s16 txp_ofdm ;
   s16 txp_cck_ofdm_gainf_delta ;
   s16 txp_cck_ofdm_pwr_delta ;
   bool txp_setup ;
   int txp_requested ;
};

#line 1235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
struct ath5k_hw {
   struct ath_common common ;
   struct pci_dev *pdev ;
   struct device *dev ;
   int irq ;
   u16 devid ;
   void *iobase ;
   struct mutex lock ;
   struct ieee80211_hw *hw ;
   struct ieee80211_supported_band sbands[3U] ;
   struct ieee80211_channel channels[314U] ;
   struct ieee80211_rate rates[3U][32U] ;
   s8 rate_idx[3U][32U] ;
   enum nl80211_iftype opmode ;
   struct ath5k_dbg_info debug ;
   struct ath5k_buf *bufptr ;
   struct ath5k_desc *desc ;
   dma_addr_t desc_daddr ;
   size_t desc_len ;
   unsigned long status[1U] ;
   unsigned int filter_flags ;
   unsigned int fif_filter_flags ;
   struct ieee80211_channel *curchan ;
   u16 nvifs ;
   enum ath5k_int imask ;
   spinlock_t irqlock ;
   bool rx_pending ;
   bool tx_pending ;
   u8 bssidmask[6U] ;
   unsigned int led_pin ;
   unsigned int led_on ;
   struct work_struct reset_work ;
   struct work_struct calib_work ;
   struct list_head rxbuf ;
   spinlock_t rxbuflock ;
   u32 *rxlink ;
   struct tasklet_struct rxtq ;
   struct ath5k_led rx_led ;
   struct list_head txbuf ;
   spinlock_t txbuflock ;
   unsigned int txbuf_len ;
   struct ath5k_txq txqs[10U] ;
   struct tasklet_struct txtq ;
   struct ath5k_led tx_led ;
   struct ath5k_rfkill rf_kill ;
   spinlock_t block ;
   struct tasklet_struct beacontq ;
   struct list_head bcbuf ;
   struct ieee80211_vif *bslot[4U] ;
   u16 num_ap_vifs ;
   u16 num_adhoc_vifs ;
   u16 num_mesh_vifs ;
   unsigned int bhalq ;
   unsigned int bmisscount ;
   unsigned int bintval ;
   unsigned int bsent ;
   unsigned int nexttbtt ;
   struct ath5k_txq *cabq ;
   bool assoc ;
   bool enable_beacon ;
   struct ath5k_statistics stats ;
   struct ath5k_ani_state ani_state ;
   struct tasklet_struct ani_tasklet ;
   struct delayed_work tx_complete_work ;
   struct survey_info survey ;
   enum ath5k_int ah_imr ;
   struct ieee80211_channel *ah_current_channel ;
   bool ah_iq_cal_needed ;
   bool ah_single_chip ;
   enum ath5k_version ah_version ;
   enum ath5k_radio ah_radio ;
   u32 ah_mac_srev ;
   u16 ah_mac_version ;
   u16 ah_phy_revision ;
   u16 ah_radio_5ghz_revision ;
   u16 ah_radio_2ghz_revision ;
   u8 ah_retry_long ;
   u8 ah_retry_short ;
   u32 ah_use_32khz_clock ;
   u8 ah_coverage_class ;
   bool ah_ack_bitrate_high ;
   u8 ah_bwmode ;
   bool ah_short_slot ;
   u32 ah_ant_ctl[3U][3U] ;
   u8 ah_ant_mode ;
   u8 ah_tx_ant ;
   u8 ah_def_ant ;
   struct ath5k_capabilities ah_capabilities ;
   struct ath5k_txq_info ah_txq[10U] ;
   u32 ah_txq_status ;
   u32 ah_txq_imr_txok ;
   u32 ah_txq_imr_txerr ;
   u32 ah_txq_imr_txurn ;
   u32 ah_txq_imr_txdesc ;
   u32 ah_txq_imr_txeol ;
   u32 ah_txq_imr_cbrorn ;
   u32 ah_txq_imr_cbrurn ;
   u32 ah_txq_imr_qtrig ;
   u32 ah_txq_imr_nofrm ;
   u32 ah_txq_isr_txok_all ;
   u32 ah_txq_isr_txurn ;
   u32 ah_txq_isr_qcborn ;
   u32 ah_txq_isr_qcburn ;
   u32 ah_txq_isr_qtrig ;
   u32 *ah_rf_banks ;
   size_t ah_rf_banks_size ;
   size_t ah_rf_regs_count ;
   struct ath5k_gain ah_gain ;
   u8 ah_offset[8U] ;
   struct __anonstruct_ah_txpower_389 ah_txpower ;
   struct ath5k_nfcal_hist ah_nfcal_hist ;
   struct ewma ah_beacon_rssi_avg ;
   s32 ah_noise_floor ;
   unsigned long ah_cal_next_full ;
   unsigned long ah_cal_next_short ;
   unsigned long ah_cal_next_ani ;
   u8 ah_cal_mask ;
   int (*ah_setup_tx_desc)(struct ath5k_hw *, struct ath5k_desc *, unsigned int , unsigned int , int , enum ath5k_pkt_type , unsigned int , unsigned int , unsigned int , unsigned int , unsigned int , unsigned int , unsigned int , unsigned int ) ;
   int (*ah_proc_tx_desc)(struct ath5k_hw *, struct ath5k_desc *, struct ath5k_tx_status *) ;
   int (*ah_proc_rx_desc)(struct ath5k_hw *, struct ath5k_desc *, struct ath5k_rx_status *) ;
};

#line 1459  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
struct ath_bus_ops {
   enum ath_bus_type ath_bus_type ;
   void (*read_cachesize)(struct ath_common *, int *) ;
   bool (*eeprom_read)(struct ath_common *, u32 , u16 *) ;
   int (*eeprom_read_mac)(struct ath5k_hw *, u8 *) ;
};

#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.h"
struct ath5k_buf {
   struct list_head list ;
   struct ath5k_desc *desc ;
   dma_addr_t daddr ;
   struct sk_buff *skb ;
   dma_addr_t skbaddr ;
   struct ieee80211_tx_rate rates[4U] ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int u_int;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/desc.h"
enum ath5k_phy_error_code {
    AR5K_RX_PHY_ERROR_UNDERRUN = 0,
    AR5K_RX_PHY_ERROR_TIMING = 1,
    AR5K_RX_PHY_ERROR_PARITY = 2,
    AR5K_RX_PHY_ERROR_RATE = 3,
    AR5K_RX_PHY_ERROR_LENGTH = 4,
    AR5K_RX_PHY_ERROR_RADAR = 5,
    AR5K_RX_PHY_ERROR_SERVICE = 6,
    AR5K_RX_PHY_ERROR_TOR = 7,
    AR5K_RX_PHY_ERROR_OFDM_TIMING = 17,
    AR5K_RX_PHY_ERROR_OFDM_SIGNAL_PARITY = 18,
    AR5K_RX_PHY_ERROR_OFDM_RATE_ILLEGAL = 19,
    AR5K_RX_PHY_ERROR_OFDM_LENGTH_ILLEGAL = 20,
    AR5K_RX_PHY_ERROR_OFDM_POWER_DROP = 21,
    AR5K_RX_PHY_ERROR_OFDM_SERVICE = 22,
    AR5K_RX_PHY_ERROR_OFDM_RESTART = 23,
    AR5K_RX_PHY_ERROR_CCK_TIMING = 25,
    AR5K_RX_PHY_ERROR_CCK_HEADER_CRC = 26,
    AR5K_RX_PHY_ERROR_CCK_RATE_ILLEGAL = 27,
    AR5K_RX_PHY_ERROR_CCK_SERVICE = 30,
    AR5K_RX_PHY_ERROR_CCK_RESTART = 31
};

#line 6  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/fvtp/.tmp_base.c"
struct __va_list_tag;

#line 6  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/fvtp/.tmp_base.c"
typedef struct __va_list_tag __va_list_tag;

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u64 __le64;

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u16 u_int16_t;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/usr/lib/gcc/x86_64-linux-gnu/6/include/stdarg.h"
typedef __builtin_va_list __gnuc_va_list[1U];

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/usr/lib/gcc/x86_64-linux-gnu/6/include/stdarg.h"
typedef __gnuc_va_list va_list[1U];

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct paravirt_callee_save {
   void *func ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt_types.h"
struct pv_irq_ops {
   struct paravirt_callee_save save_fl ;
   struct paravirt_callee_save restore_fl ;
   struct paravirt_callee_save irq_disable ;
   struct paravirt_callee_save irq_enable ;
   void (*safe_halt)(void) ;
   void (*halt)(void) ;
   void (*adjust_exception_frame)(void) ;
};

#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct va_format {
   char const *fmt ;
   va_list *va ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt.h"
struct static_key;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
typedef int pao_T__;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct static_key_mod;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct static_key {
   atomic_t enabled ;
   struct jump_entry *entries ;
   struct static_key_mod *next ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11854 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqhandler.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 2893  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_hdr {
   __le16 frame_control ;
   __le16 duration_id ;
   u8 addr1[6U] ;
   u8 addr2[6U] ;
   u8 addr3[6U] ;
   __le16 seq_ctrl ;
   u8 addr4[6U] ;
};

#line 677  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_msrment_ie {
   u8 token ;
   u8 mode ;
   u8 type ;
   u8 request[0U] ;
};

#line 700  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_ext_chansw_ie {
   u8 mode ;
   u8 new_operating_class ;
   u8 new_ch_num ;
   u8 count ;
};

#line 831  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_tpc_report_ie {
   u8 tx_power ;
   u8 link_margin ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_auth_2603 {
   __le16 auth_alg ;
   __le16 auth_transaction ;
   __le16 status_code ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_deauth_2604 {
   __le16 reason_code ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_assoc_req_2605 {
   __le16 capab_info ;
   __le16 listen_interval ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_assoc_resp_2606 {
   __le16 capab_info ;
   __le16 status_code ;
   __le16 aid ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_reassoc_resp_2607 {
   __le16 capab_info ;
   __le16 status_code ;
   __le16 aid ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_reassoc_req_2608 {
   __le16 capab_info ;
   __le16 listen_interval ;
   u8 current_ap[6U] ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_disassoc_2609 {
   __le16 reason_code ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_beacon_2610 {
   __le64 timestamp ;
   __le16 beacon_int ;
   __le16 capab_info ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_probe_req_2611 {
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_probe_resp_2612 {
   __le64 timestamp ;
   __le16 beacon_int ;
   __le16 capab_info ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_wme_action_2615 {
   u8 action_code ;
   u8 dialog_token ;
   u8 status_code ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_chan_switch_2616 {
   u8 action_code ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_ext_chan_switch_2617 {
   u8 action_code ;
   struct ieee80211_ext_chansw_ie data ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_measurement_2618 {
   u8 action_code ;
   u8 dialog_token ;
   u8 element_id ;
   u8 length ;
   struct ieee80211_msrment_ie msr_elem ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_addba_req_2619 {
   u8 action_code ;
   u8 dialog_token ;
   __le16 capab ;
   __le16 timeout ;
   __le16 start_seq_num ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_addba_resp_2620 {
   u8 action_code ;
   u8 dialog_token ;
   __le16 status ;
   __le16 capab ;
   __le16 timeout ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_delba_2621 {
   u8 action_code ;
   __le16 params ;
   __le16 reason_code ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_self_prot_2622 {
   u8 action_code ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_mesh_action_2623 {
   u8 action_code ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_sa_query_2624 {
   u8 action ;
   u8 trans_id[2U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_ht_smps_2625 {
   u8 action ;
   u8 smps_control ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_ht_notify_cw_2626 {
   u8 action_code ;
   u8 chanwidth ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_tdls_discover_resp_2627 {
   u8 action_code ;
   u8 dialog_token ;
   __le16 capability ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_vht_opmode_notif_2628 {
   u8 action_code ;
   u8 operating_mode ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_tpc_report_2629 {
   u8 action_code ;
   u8 dialog_token ;
   u8 tpc_elem_id ;
   u8 tpc_elem_length ;
   struct ieee80211_tpc_report_ie tpc ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
union __anonunion_u_2614 {
   struct __anonstruct_wme_action_2615 wme_action ;
   struct __anonstruct_chan_switch_2616 chan_switch ;
   struct __anonstruct_ext_chan_switch_2617 ext_chan_switch ;
   struct __anonstruct_measurement_2618 measurement ;
   struct __anonstruct_addba_req_2619 addba_req ;
   struct __anonstruct_addba_resp_2620 addba_resp ;
   struct __anonstruct_delba_2621 delba ;
   struct __anonstruct_self_prot_2622 self_prot ;
   struct __anonstruct_mesh_action_2623 mesh_action ;
   struct __anonstruct_sa_query_2624 sa_query ;
   struct __anonstruct_ht_smps_2625 ht_smps ;
   struct __anonstruct_ht_notify_cw_2626 ht_notify_cw ;
   struct __anonstruct_tdls_discover_resp_2627 tdls_discover_resp ;
   struct __anonstruct_vht_opmode_notif_2628 vht_opmode_notif ;
   struct __anonstruct_tpc_report_2629 tpc_report ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_action_2613 {
   u8 category ;
   union __anonunion_u_2614 u ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
union __anonunion_u_2602 {
   struct __anonstruct_auth_2603 auth ;
   struct __anonstruct_deauth_2604 deauth ;
   struct __anonstruct_assoc_req_2605 assoc_req ;
   struct __anonstruct_assoc_resp_2606 assoc_resp ;
   struct __anonstruct_reassoc_resp_2607 reassoc_resp ;
   struct __anonstruct_reassoc_req_2608 reassoc_req ;
   struct __anonstruct_disassoc_2609 disassoc ;
   struct __anonstruct_beacon_2610 beacon ;
   struct __anonstruct_probe_req_2611 probe_req ;
   struct __anonstruct_probe_resp_2612 probe_resp ;
   struct __anonstruct_action_2613 action ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_mgmt {
   __le16 frame_control ;
   __le16 duration ;
   u8 da[6U] ;
   u8 sa[6U] ;
   u8 bssid[6U] ;
   __le16 seq_ctrl ;
   union __anonunion_u_2602 u ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_2647 {
   struct ieee80211_tx_rate rates[4U] ;
   s8 rts_cts_rate_idx ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_rts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_cts_prot : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) short_preamble : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skip_table : 1 ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
union __anonunion_2646 {
   struct __anonstruct_2647 __anonCompField___anonunion_2646_96 ;
   unsigned long jiffies ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_control_2645 {
   union __anonunion_2646 __anonCompField___anonstruct_control_2645_97 ;
   struct ieee80211_vif *vif ;
   struct ieee80211_key_conf *hw_key ;
   u32 flags ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_ack_2648 {
   u64 cookie ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_status_2649 {
   struct ieee80211_tx_rate rates[4U] ;
   s32 ack_signal ;
   u8 ampdu_ack_len ;
   u8 ampdu_len ;
   u8 antenna ;
   u16 tx_time ;
   void *status_driver_data[2U] ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_2650 {
   struct ieee80211_tx_rate driver_rates[4U] ;
   u8 pad[4U] ;
   void *rate_driver_data[3U] ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
union __anonunion_2644 {
   struct __anonstruct_control_2645 control ;
   struct __anonstruct_ack_2648 ack ;
   struct __anonstruct_status_2649 status ;
   struct __anonstruct_2650 __anonCompField___anonunion_2644_98 ;
   void *driver_data[5U] ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_tx_info {
   u32 flags ;
   u8 band ;
   u8 hw_queue ;
   u16 ack_frame_id ;
   union __anonunion_2644 __anonCompField_ieee80211_tx_info_99 ;
};

#line 923 
struct ieee80211_rx_status;

#line 997  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_rx_status {
   u64 mactime ;
   u32 device_timestamp ;
   u32 ampdu_reference ;
   u32 flag ;
   u16 freq ;
   u8 vht_flag ;
   u8 rate_idx ;
   u8 vht_nss ;
   u8 rx_flags ;
   u8 band ;
   u8 antenna ;
   s8 signal ;
   u8 chains ;
   s8 chain_signal[4U] ;
   u8 ampdu_delimiter_crc ;
};

#line 1748 
enum ieee80211_hw_flags {
    IEEE80211_HW_HAS_RATE_CONTROL = 0,
    IEEE80211_HW_RX_INCLUDES_FCS = 1,
    IEEE80211_HW_HOST_BROADCAST_PS_BUFFERING = 2,
    IEEE80211_HW_SIGNAL_UNSPEC = 3,
    IEEE80211_HW_SIGNAL_DBM = 4,
    IEEE80211_HW_NEED_DTIM_BEFORE_ASSOC = 5,
    IEEE80211_HW_SPECTRUM_MGMT = 6,
    IEEE80211_HW_AMPDU_AGGREGATION = 7,
    IEEE80211_HW_SUPPORTS_PS = 8,
    IEEE80211_HW_PS_NULLFUNC_STACK = 9,
    IEEE80211_HW_SUPPORTS_DYNAMIC_PS = 10,
    IEEE80211_HW_MFP_CAPABLE = 11,
    IEEE80211_HW_WANT_MONITOR_VIF = 12,
    IEEE80211_HW_NO_AUTO_VIF = 13,
    IEEE80211_HW_SW_CRYPTO_CONTROL = 14,
    IEEE80211_HW_SUPPORT_FAST_XMIT = 15,
    IEEE80211_HW_REPORTS_TX_ACK_STATUS = 16,
    IEEE80211_HW_CONNECTION_MONITOR = 17,
    IEEE80211_HW_QUEUE_CONTROL = 18,
    IEEE80211_HW_SUPPORTS_PER_STA_GTK = 19,
    IEEE80211_HW_AP_LINK_PS = 20,
    IEEE80211_HW_TX_AMPDU_SETUP_IN_HW = 21,
    IEEE80211_HW_SUPPORTS_RC_TABLE = 22,
    IEEE80211_HW_P2P_DEV_ADDR_FOR_INTF = 23,
    IEEE80211_HW_TIMING_BEACON_ONLY = 24,
    IEEE80211_HW_SUPPORTS_HT_CCK_RATES = 25,
    IEEE80211_HW_CHANCTX_STA_CSA = 26,
    IEEE80211_HW_SUPPORTS_CLONED_SKBS = 27,
    IEEE80211_HW_SINGLE_SCAN_ON_ALL_BANDS = 28,
    NUM_IEEE80211_HW_FLAGS = 29
};

#line 5436 
enum ath5k_srev_type {
    AR5K_VERSION_MAC = 0,
    AR5K_VERSION_RAD = 1
};

#line 5441  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ath5k_srev_name {
   char const *sr_name ;
   enum ath5k_srev_type sr_type ;
   u_int sr_val ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.h"
struct ath5k_vif {
   bool assoc ;
   enum nl80211_iftype opmode ;
   int bslot ;
   struct ath5k_buf *bbuf ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.h"
struct ath5k_vif_iter_data {
   u8 const *hw_macaddr ;
   u8 mask[6U] ;
   u8 active_mac[6U] ;
   bool need_set_hw_addr ;
   bool found_active ;
   bool any_assoc ;
   enum nl80211_iftype opmode ;
   int n_stas ;
};

#line 725  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
enum ath5k_rfgain {
    AR5K_RFGAIN_INACTIVE = 0,
    AR5K_RFGAIN_ACTIVE = 1,
    AR5K_RFGAIN_READ_REQUESTED = 2,
    AR5K_RFGAIN_NEED_CHANGE = 3
};

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/regd.h"
struct tracepoint_func {
   void *func ;
   void *data ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tracepoint.h"
struct tracepoint {
   char const *name ;
   struct static_key key ;
   void (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   struct tracepoint_func *funcs ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tracepoint.h"
struct trace_enum_map {
   char const *system ;
   char const *enum_string ;
   unsigned long enum_value ;
};

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/trace.h"
union __anonunion___u_2666 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/trace.h"
union __anonunion___u_2668 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/trace.h"
union __anonunion___u_2670 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/trace.h"
union __anonunion___u_2672 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/trace.h"
union __anonunion___u_2674 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/trace.h"
union __anonunion___u_2676 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/trace.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   unsigned long _key ;
};

#line 163 
struct ring_buffer;

#line 164 
struct ring_buffer_iter;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ring_buffer.h"
struct trace_seq;

#line 200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ring_buffer.h"
struct seq_buf {
   char *buffer ;
   size_t size ;
   size_t len ;
   loff_t readpos ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_buf.h"
struct trace_seq {
   unsigned char buffer[4096U] ;
   struct seq_buf seq ;
   int full ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/trace_seq.h"
union __anonunion_2678 {
   __u64 sample_period ;
   __u64 sample_freq ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/trace_seq.h"
union __anonunion_2679 {
   __u32 wakeup_events ;
   __u32 wakeup_watermark ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/trace_seq.h"
union __anonunion_2680 {
   __u64 bp_addr ;
   __u64 config1 ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/trace_seq.h"
union __anonunion_2681 {
   __u64 bp_len ;
   __u64 config2 ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/trace_seq.h"
struct perf_event_attr {
   __u32 type ;
   __u32 size ;
   __u64 config ;
   union __anonunion_2678 __anonCompField_perf_event_attr_102 ;
   __u64 sample_type ;
   __u64 read_format ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) disabled : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inherit : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pinned : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) exclusive : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) exclude_user : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) exclude_kernel : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) exclude_hv : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) exclude_idle : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmap : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) comm : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) freq : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inherit_stat : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) enable_on_exec : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) task : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) watermark : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) precise_ip : 2 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmap_data : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sample_id_all : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) exclude_host : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) exclude_guest : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) exclude_callchain_kernel : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) exclude_callchain_user : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmap2 : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) comm_exec : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_clockid : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(38))) __reserved_1 : 38 ;
   union __anonunion_2679 __anonCompField_perf_event_attr_103 ;
   __u32 bp_type ;
   union __anonunion_2680 __anonCompField_perf_event_attr_104 ;
   union __anonunion_2681 __anonCompField_perf_event_attr_105 ;
   __u64 branch_sample_type ;
   __u64 sample_regs_user ;
   __u32 sample_stack_user ;
   __s32 clockid ;
   __u64 sample_regs_intr ;
   __u32 aux_watermark ;
   __u32 __reserved_2 ;
};

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/perf_event.h"
struct __anonstruct_2684 {
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) mem_op : 5 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(14))) mem_lvl : 14 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) mem_snoop : 5 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) mem_lock : 2 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) mem_dtlb : 7 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(31))) mem_rsvd : 31 ;
};

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/perf_event.h"
union perf_mem_data_src {
   __u64 val ;
   struct __anonstruct_2684 __anonCompField_perf_mem_data_src_108 ;
};

#line 860  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/perf_event.h"
struct perf_branch_entry {
   __u64 from ;
   __u64 to ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mispred : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) predicted : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_tx : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) abort : 1 ;
   __u64 __attribute__((__FRAMA_C_BITFIELD_SIZE__(60))) reserved : 60 ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/perf_event.h"
struct pidmap {
   atomic_t nr_free ;
   void *page ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid_namespace.h"
struct fs_pin;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid_namespace.h"
struct pid_namespace {
   struct kref kref ;
   struct pidmap pidmap[128U] ;
   struct callback_head rcu ;
   int last_pid ;
   unsigned int nr_hashed ;
   struct task_struct *child_reaper ;
   struct kmem_cache *pid_cachep ;
   unsigned int level ;
   struct pid_namespace *parent ;
   struct vfsmount *proc_mnt ;
   struct dentry *proc_self ;
   struct dentry *proc_thread_self ;
   struct fs_pin *bacct ;
   struct user_namespace *user_ns ;
   struct work_struct proc_work ;
   kgid_t pid_gid ;
   int hide_pid ;
   int reboot ;
   struct ns_common ns ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/local.h"
struct __anonstruct_local_t_2692 {
   atomic_long_t a ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/local.h"
typedef struct __anonstruct_local_t_2692 local_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/local64.h"
struct __anonstruct_local64_t_2693 {
   local_t a ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/local64.h"
typedef struct __anonstruct_local64_t_2693 local64_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/perf_event.h"
struct arch_hw_breakpoint {
   unsigned long address ;
   unsigned long mask ;
   u8 len ;
   u8 type ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/hw_breakpoint.h"
struct pmu;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ftrace.h"
struct ftrace_hash;

#line 57 
struct ftrace_ops;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ftrace.h"
struct ftrace_ops_hash {
   struct ftrace_hash *notrace_hash ;
   struct ftrace_hash *filter_hash ;
   struct mutex regex_lock ;
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ftrace.h"
struct ftrace_ops {
   void (*func)(unsigned long , unsigned long , struct ftrace_ops *, struct pt_regs *) ;
   struct ftrace_ops *next ;
   unsigned long flags ;
   void *private ;
   void (*saved_func)(unsigned long , unsigned long , struct ftrace_ops *, struct pt_regs *) ;
   int *disabled ;
   int nr_trampolines ;
   struct ftrace_ops_hash local_hash ;
   struct ftrace_ops_hash *func_hash ;
   struct ftrace_ops_hash old_hash ;
   unsigned long trampoline ;
   unsigned long trampoline_size ;
};

#line 734  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ftrace.h"
struct ftrace_ret_stack {
   unsigned long ret ;
   unsigned long func ;
   unsigned long long calltime ;
   unsigned long long subtime ;
   unsigned long fp ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpu.h"
struct irq_work {
   unsigned long flags ;
   struct llist_node llnode ;
   void (*func)(struct irq_work *) ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label_ratelimit.h"
struct perf_regs {
   __u64 abi ;
   struct pt_regs *regs ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/perf_regs.h"
struct perf_callchain_entry {
   __u64 nr ;
   __u64 ip[127U] ;
};

#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/perf_event.h"
struct perf_raw_record {
   u32 size ;
   void *data ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/perf_event.h"
struct perf_branch_stack {
   __u64 nr ;
   struct perf_branch_entry entries[0U] ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/perf_event.h"
struct hw_perf_event_extra {
   u64 config ;
   unsigned int reg ;
   int alloc ;
   int idx ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/perf_event.h"
struct __anonstruct_2695 {
   u64 config ;
   u64 last_tag ;
   unsigned long config_base ;
   unsigned long event_base ;
   int event_base_rdpmc ;
   int idx ;
   int last_cpu ;
   int flags ;
   struct hw_perf_event_extra extra_reg ;
   struct hw_perf_event_extra branch_reg ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/perf_event.h"
struct __anonstruct_2696 {
   struct hrtimer hrtimer ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/perf_event.h"
struct __anonstruct_2697 {
   struct list_head tp_list ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/perf_event.h"
struct __anonstruct_2698 {
   int cqm_state ;
   u32 cqm_rmid ;
   struct list_head cqm_events_entry ;
   struct list_head cqm_groups_entry ;
   struct list_head cqm_group_entry ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/perf_event.h"
struct __anonstruct_2699 {
   int itrace_started ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/perf_event.h"
struct __anonstruct_2700 {
   struct arch_hw_breakpoint info ;
   struct list_head bp_list ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/perf_event.h"
union __anonunion_2694 {
   struct __anonstruct_2695 __anonCompField___anonunion_2694_109 ;
   struct __anonstruct_2696 __anonCompField___anonunion_2694_110 ;
   struct __anonstruct_2697 __anonCompField___anonunion_2694_111 ;
   struct __anonstruct_2698 __anonCompField___anonunion_2694_112 ;
   struct __anonstruct_2699 __anonCompField___anonunion_2694_113 ;
   struct __anonstruct_2700 __anonCompField___anonunion_2694_114 ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/perf_event.h"
struct hw_perf_event {
   union __anonunion_2694 __anonCompField_hw_perf_event_115 ;
   struct task_struct *target ;
   int state ;
   local64_t prev_count ;
   u64 sample_period ;
   u64 last_period ;
   local64_t period_left ;
   u64 interrupts_seq ;
   u64 interrupts ;
   u64 freq_time_stamp ;
   u64 freq_count_stamp ;
};

#line 155 
struct perf_cpu_context;

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/perf_event.h"
struct pmu {
   struct list_head entry ;
   struct module *module ;
   struct device *dev ;
   struct attribute_group const **attr_groups ;
   char const *name ;
   int type ;
   int capabilities ;
   int *pmu_disable_count ;
   struct perf_cpu_context *pmu_cpu_context ;
   atomic_t exclusive_cnt ;
   int task_ctx_nr ;
   int hrtimer_interval_ms ;
   void (*pmu_enable)(struct pmu *) ;
   void (*pmu_disable)(struct pmu *) ;
   int (*event_init)(struct perf_event *) ;
   void (*event_mapped)(struct perf_event *) ;
   void (*event_unmapped)(struct perf_event *) ;
   int (*add)(struct perf_event *, int ) ;
   void (*del)(struct perf_event *, int ) ;
   void (*start)(struct perf_event *, int ) ;
   void (*stop)(struct perf_event *, int ) ;
   void (*read)(struct perf_event *) ;
   void (*start_txn)(struct pmu *) ;
   int (*commit_txn)(struct pmu *) ;
   void (*cancel_txn)(struct pmu *) ;
   int (*event_idx)(struct perf_event *) ;
   void (*sched_task)(struct perf_event_context *, bool ) ;
   size_t task_ctx_size ;
   u64 (*count)(struct perf_event *) ;
   void *(*setup_aux)(int , void **, int , bool ) ;
   void (*free_aux)(void *) ;
   int (*filter_match)(struct perf_event *) ;
};

#line 309 
enum perf_event_active_state {
    PERF_EVENT_STATE_EXIT = -3,
    PERF_EVENT_STATE_ERROR = -2,
    PERF_EVENT_STATE_OFF = -1,
    PERF_EVENT_STATE_INACTIVE = 0,
    PERF_EVENT_STATE_ACTIVE = 1
};

#line 317 
struct perf_sample_data;

#line 339 
struct perf_cgroup;

#line 340 
struct event_filter;

#line 340  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/perf_event.h"
struct perf_event {
   struct list_head event_entry ;
   struct list_head group_entry ;
   struct list_head sibling_list ;
   struct list_head migrate_entry ;
   struct hlist_node hlist_entry ;
   struct list_head active_entry ;
   int nr_siblings ;
   int group_flags ;
   struct perf_event *group_leader ;
   struct pmu *pmu ;
   enum perf_event_active_state state ;
   unsigned int attach_state ;
   local64_t count ;
   atomic64_t child_count ;
   u64 total_time_enabled ;
   u64 total_time_running ;
   u64 tstamp_enabled ;
   u64 tstamp_running ;
   u64 tstamp_stopped ;
   u64 shadow_ctx_time ;
   struct perf_event_attr attr ;
   u16 header_size ;
   u16 id_header_size ;
   u16 read_size ;
   struct hw_perf_event hw ;
   struct perf_event_context *ctx ;
   atomic_long_t refcount ;
   atomic64_t child_total_time_enabled ;
   atomic64_t child_total_time_running ;
   struct mutex child_mutex ;
   struct list_head child_list ;
   struct perf_event *parent ;
   int oncpu ;
   int cpu ;
   struct list_head owner_entry ;
   struct task_struct *owner ;
   struct mutex mmap_mutex ;
   atomic_t mmap_count ;
   struct ring_buffer *rb ;
   struct list_head rb_entry ;
   unsigned long rcu_batches ;
   int rcu_pending ;
   wait_queue_head_t waitq ;
   struct fasync_struct *fasync ;
   int pending_wakeup ;
   int pending_kill ;
   int pending_disable ;
   struct irq_work pending ;
   atomic_t event_limit ;
   void (*destroy)(struct perf_event *) ;
   struct callback_head callback_head ;
   struct pid_namespace *ns ;
   u64 id ;
   u64 (*clock)(void) ;
   void (*overflow_handler)(struct perf_event *, struct perf_sample_data *, struct pt_regs *) ;
   void *overflow_handler_context ;
   struct trace_event_call *tp_event ;
   struct event_filter *filter ;
   struct ftrace_ops ftrace_ops ;
   struct perf_cgroup *cgrp ;
   int cgrp_defer_enabled ;
};

#line 498  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/perf_event.h"
struct perf_event_context {
   struct pmu *pmu ;
   raw_spinlock_t lock ;
   struct mutex mutex ;
   struct list_head active_ctx_list ;
   struct list_head pinned_groups ;
   struct list_head flexible_groups ;
   struct list_head event_list ;
   int nr_events ;
   int nr_active ;
   int is_active ;
   int nr_stat ;
   int nr_freq ;
   int rotate_disable ;
   atomic_t refcount ;
   struct task_struct *task ;
   u64 time ;
   u64 timestamp ;
   struct perf_event_context *parent_ctx ;
   u64 parent_gen ;
   u64 generation ;
   int pin_count ;
   int nr_cgroups ;
   void *task_ctx_data ;
   struct callback_head callback_head ;
   struct delayed_work orphans_remove ;
   bool orphans_remove_sched ;
};

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/perf_event.h"
struct perf_cpu_context {
   struct perf_event_context ctx ;
   struct perf_event_context *task_ctx ;
   int active_oncpu ;
   int exclusive ;
   raw_spinlock_t hrtimer_lock ;
   struct hrtimer hrtimer ;
   ktime_t hrtimer_interval ;
   unsigned int hrtimer_active ;
   struct pmu *unique_pmu ;
   struct perf_cgroup *cgrp ;
};

#line 591  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/perf_event.h"
struct perf_cgroup_info {
   u64 time ;
   u64 timestamp ;
};

#line 602  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/perf_event.h"
struct perf_cgroup {
   struct cgroup_subsys_state css ;
   struct perf_cgroup_info *info ;
};

#line 663  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/perf_event.h"
struct __anonstruct_tid_entry_2702 {
   u32 pid ;
   u32 tid ;
};

#line 663  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/perf_event.h"
struct __anonstruct_cpu_entry_2703 {
   u32 cpu ;
   u32 reserved ;
};

#line 663  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/perf_event.h"
struct perf_sample_data {
   u64 addr ;
   struct perf_raw_record *raw ;
   struct perf_branch_stack *br_stack ;
   u64 period ;
   u64 weight ;
   u64 txn ;
   union perf_mem_data_src data_src ;
   u64 type ;
   u64 ip ;
   struct __anonstruct_tid_entry_2702 tid_entry ;
   u64 time ;
   u64 id ;
   u64 stream_id ;
   struct __anonstruct_cpu_entry_2703 cpu_entry ;
   struct perf_callchain_entry *callchain ;
   struct perf_regs regs_user ;
   struct pt_regs regs_user_copy ;
   struct perf_regs regs_intr ;
   u64 stack_user_size ;
};

#line 1072 
struct trace_array;

#line 1073 
struct trace_buffer;

#line 1074 
struct tracer;

#line 1075 
struct bpf_prog;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/trace_events.h"
struct trace_iterator;

#line 50 
struct trace_event;

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/trace_events.h"
struct trace_entry {
   unsigned short type ;
   unsigned char flags ;
   unsigned char preempt_count ;
   int pid ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/trace_events.h"
struct trace_iterator {
   struct trace_array *tr ;
   struct tracer *trace ;
   struct trace_buffer *trace_buffer ;
   void *private ;
   int cpu_file ;
   struct mutex mutex ;
   struct ring_buffer_iter **buffer_iter ;
   unsigned long iter_flags ;
   struct trace_seq tmp_seq ;
   cpumask_var_t started ;
   bool snapshot ;
   struct trace_seq seq ;
   struct trace_entry *ent ;
   unsigned long lost_events ;
   int leftover ;
   int ent_size ;
   int cpu ;
   u64 ts ;
   loff_t pos ;
   long idx ;
};

#line 118 
enum print_line_t;

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/trace_events.h"
struct trace_event_functions {
   enum print_line_t (*trace)(struct trace_iterator *, int , struct trace_event *) ;
   enum print_line_t (*raw)(struct trace_iterator *, int , struct trace_event *) ;
   enum print_line_t (*hex)(struct trace_iterator *, int , struct trace_event *) ;
   enum print_line_t (*binary)(struct trace_iterator *, int , struct trace_event *) ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/trace_events.h"
struct trace_event {
   struct hlist_node node ;
   struct list_head list ;
   int type ;
   struct trace_event_functions *funcs ;
};

#line 137 
enum print_line_t {
    TRACE_TYPE_PARTIAL_LINE = 0,
    TRACE_TYPE_HANDLED = 1,
    TRACE_TYPE_UNHANDLED = 2,
    TRACE_TYPE_NO_CONSUME = 3
};

#line 187 
enum trace_reg {
    TRACE_REG_REGISTER = 0,
    TRACE_REG_UNREGISTER = 1,
    TRACE_REG_PERF_REGISTER = 2,
    TRACE_REG_PERF_UNREGISTER = 3,
    TRACE_REG_PERF_OPEN = 4,
    TRACE_REG_PERF_CLOSE = 5,
    TRACE_REG_PERF_ADD = 6,
    TRACE_REG_PERF_DEL = 7
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/trace_events.h"
struct trace_event_class {
   char const *system ;
   void *probe ;
   void *perf_probe ;
   int (*reg)(struct trace_event_call *, enum trace_reg , void *) ;
   int (*define_fields)(struct trace_event_call *) ;
   struct list_head *(*get_fields)(struct trace_event_call *) ;
   struct list_head fields ;
   int (*raw_init)(struct trace_event_call *) ;
};

#line 258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/trace_events.h"
union __anonunion_2704 {
   char *name ;
   struct tracepoint *tp ;
};

#line 258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/trace_events.h"
struct trace_event_call {
   struct list_head list ;
   struct trace_event_class *class ;
   union __anonunion_2704 __anonCompField_trace_event_call_117 ;
   struct trace_event event ;
   char *print_fmt ;
   struct event_filter *filter ;
   void *mod ;
   void *data ;
   int flags ;
   int perf_refcount ;
   struct hlist_head *perf_events ;
   struct bpf_prog *prog ;
   int (*perf_perm)(struct trace_event_call *, struct perf_event *) ;
};

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 1715  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
enum ldv_34131 {
    AR5K_INI_WRITE = 0,
    AR5K_INI_READ = 1
};

#line 1720  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
struct ath5k_ini {
   u16 ini_register ;
   u32 ini_value ;
   enum ldv_34131 ini_mode ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/initvals.c"
struct ath5k_ini_mode {
   u16 mode_register ;
   u32 mode_value[3U] ;
};

#line 792  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
struct ath5k_athchan_2ghz {
   u32 a2_flags ;
   u16 a2_athchan ;
};

#line 1715  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
struct ath5k_ini_rfbuffer {
   u8 rfb_bank ;
   u16 rfb_ctrl_register ;
   u32 rfb_mode_data[3U] ;
};

#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfbuffer.h"
struct ath5k_rfb_field {
   u8 len ;
   u16 pos ;
   u8 col ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfbuffer.h"
struct ath5k_rf_reg {
   u8 bank ;
   u8 index ;
   struct ath5k_rfb_field field ;
};

#line 816  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfbuffer.h"
struct ath5k_ini_rfgain {
   u16 rfg_register ;
   u32 rfg_value[2U] ;
};

#line 382  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfgain.h"
struct ath5k_gain_opt_step {
   s8 gos_param[7U] ;
   s8 gos_gain ;
};

#line 471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfgain.h"
struct ath5k_gain_opt {
   u8 go_default ;
   u8 go_steps_count ;
   struct ath5k_gain_opt_step const go_step[10U] ;
};

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.h"
enum ath5k_debug_level {
    ATH5K_DEBUG_RESET = 1,
    ATH5K_DEBUG_INTR = 2,
    ATH5K_DEBUG_MODE = 4,
    ATH5K_DEBUG_XMIT = 8,
    ATH5K_DEBUG_BEACON = 16,
    ATH5K_DEBUG_CALIBRATE = 32,
    ATH5K_DEBUG_TXPOWER = 64,
    ATH5K_DEBUG_LED = 128,
    ATH5K_DEBUG_DUMPBANDS = 1024,
    ATH5K_DEBUG_DMA = 2048,
    ATH5K_DEBUG_ANI = 8192,
    ATH5K_DEBUG_DESC = 16384,
    ATH5K_DEBUG_ANY = 4294967295
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
struct reg {
   char const *name ;
   int addr ;
};

#line 300  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
struct __anonstruct_dbg_info_5410 {
   enum ath5k_debug_level level ;
   char const *name ;
   char const *desc ;
};

#line 895  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
struct eeprom_private {
   u16 *buf ;
   int len ;
};

#line 476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct platform_device_id {
   char name[20U] ;
   kernel_ulong_t driver_data ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct pdev_archdata {
   
};

#line 1911  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct mfd_cell;

#line 1912  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct platform_device {
   char const *name ;
   int id ;
   bool id_auto ;
   struct device dev ;
   u32 num_resources ;
   struct resource *resource ;
   struct platform_device_id const *id_entry ;
   char *driver_override ;
   struct mfd_cell *mfd_cell ;
   struct pdev_archdata archdata ;
};

#line 967  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
enum ath5k_power_mode {
    AR5K_PM_UNDEFINED = 0,
    AR5K_PM_AUTO = 1,
    AR5K_PM_AWAKE = 2,
    AR5K_PM_FULL_SLEEP = 3,
    AR5K_PM_NETWORK_SLEEP = 4
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 5433  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ldv_struct_character_driver_scenario_14 {
   struct file_operations *arg0 ;
   int signal_pending ;
};

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_free_irq_10 {
   int arg0 ;
   int signal_pending ;
};

#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_ieee80211_scenario_13 {
   struct ieee80211_hw *arg0 ;
   int signal_pending ;
};

#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_16 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 40  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_18 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_traverse_kernel_items_scenario_25 {
   struct seq_operations *arg1 ;
   struct seq_file *arg0 ;
   int signal_pending ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/iomap.h"
unsigned int ioread32(void *);


#line 37 
void iowrite32(u32, void *);


#line 76 
void pci_iounmap(struct pci_dev *, void *);


#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci_iomap.h"
void *pci_iomap(struct pci_dev *, int, unsigned long);


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 1083 
void dev_err(struct device const *, char const * , ...);


#line 1089 
void _dev_info(struct device const *, char const * , ...);


#line 859  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
int pci_bus_read_config_byte(struct pci_bus *, unsigned int, int, u8 *);


#line 865 
int pci_bus_write_config_byte(struct pci_bus *, unsigned int, int, u8);


#line 883  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_byte(struct pci_dev const *dev, int where, u8 *val)
{
  int tmp;
  
#line 885 
  tmp = pci_bus_read_config_byte(dev->bus,dev->devfn,where,val);
  
#line 885 
  return tmp;
}


#line 896  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_write_config_byte(struct pci_dev const *dev, int where, u8 val)
{
  int tmp;
  
#line 898 
  tmp = pci_bus_write_config_byte(dev->bus,dev->devfn,where,(unsigned char)((int)val));
  
#line 898 
  return tmp;
}


#line 951 
int pci_enable_device(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 1097 
int pci_request_region(struct pci_dev *, int, char const *);


#line 1099 
void pci_release_region(struct pci_dev *, int);


#line 1146 
static int ldv___pci_register_driver_75(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_76(struct pci_driver *ldv_func_arg1);


#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
int dma_set_mask(struct device *, u64);


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 115 
  tmp = dma_set_mask(& dev->dev,mask);
  
#line 115 
  return tmp;
}


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  
#line 1478 
  dev_set_drvdata(& pdev->dev,data);
  
#line 1479 
  return;
}


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci-aspm.h"
void pci_disable_link_state(struct pci_dev *, int);


#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void usleep_range(unsigned long, unsigned long);


#line 3303  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
__inline static char const *wiphy_name(struct wiphy const *wiphy)
{
  char const *tmp;
  
#line 3305 
  tmp = dev_name(& wiphy->dev);
  
#line 3305 
  return tmp;
}


#line 3520  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
static struct ieee80211_hw *ldv_ieee80211_alloc_hw_72(size_t priv_data_len, struct ieee80211_ops const *ops);


#line 3685 
static void ldv_ieee80211_free_hw_73(struct ieee80211_hw *ldv_func_arg1);


#line 3689 
static void ldv_ieee80211_free_hw_74(struct ieee80211_hw *ldv_func_arg1);


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
struct ieee80211_ops const ath5k_hw_ops;


#line 1481 
int ath5k_hw_read_srev(struct ath5k_hw *ah);


#line 1485 
void ath5k_led_enable(struct ath5k_hw *ah);


#line 1486 
void ath5k_led_off(struct ath5k_hw *ah);


#line 1640  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
__inline static struct ath_common *ath5k_hw_common(struct ath5k_hw *ah)
{
  struct ath_common *__retres;
  
#line 1642 
  __retres = & ah->common;
  
#line 1642 
  return __retres;
}


#line 1676  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
__inline static u32 ath5k_hw_reg_read(struct ath5k_hw *ah, u16 reg)
{
  u32 tmp;
  
#line 1678 
  tmp = ioread32(ah->iobase + (int)reg);
  
#line 1678 
  return tmp;
}


#line 1681  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
__inline static void ath5k_hw_reg_write(struct ath5k_hw *ah, u32 val, u16 reg)
{
  
#line 1683 
  iowrite32(val,ah->iobase + (int)reg);
  
#line 1684 
  return;
}


#line 1698  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
__inline static bool ath5k_hw_nvram_read(struct ath5k_hw *ah, u32 off, u16 *data)
{
  bool tmp_0;
  
#line 1700 
  struct ath_common *common = ath5k_hw_common(ah);
  
#line 1701 
  tmp_0 = (*((common->bus_ops)->eeprom_read))(common,off,data);
  
#line 1701 
  return tmp_0;
}


#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.h"
int ath5k_init_ah(struct ath5k_hw *ah, struct ath_bus_ops const *bus_ops);


#line 113 
void ath5k_deinit_ah(struct ath5k_hw *ah);


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pci.c"
static struct pci_device_id const ath5k_pci_id_table[20U] = {{.vendor = 5772U, .device = 519U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5772U, .device = 7U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5772U, .device = 17U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5772U, .device = 18U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5772U, .device = 19U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 42791U, .device = 19U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4279U, .device = 19U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5772U, .device = 4116U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5772U, .device = 20U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5772U, .device = 21U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5772U, .device = 22U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5772U, .device = 23U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5772U, .device = 24U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5772U, .device = 25U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5772U, .device = 26U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5772U, .device = 27U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5772U, .device = 28U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5772U, .device = 29U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5772U, .device = 65307U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pci.c"
struct pci_device_id const __mod_pci__ath5k_pci_id_table_device_table[20U];

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pci.c"
static void ath5k_pci_read_cachesize(struct ath_common *common, int *csz)
{
  u8 u8tmp;
  
#line 58 
  struct ath5k_hw *ah = (struct ath5k_hw *)common->priv;
  
#line 61 
  pci_read_config_byte((struct pci_dev const *)ah->pdev,12,& u8tmp);
  
#line 62 
  *csz = (int)u8tmp;
  
#line 70 
  if (*csz == 0) 
#line 71 
                 *csz = 16; else ;
  
#line 72 
  return;
}


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pci.c"
static bool ath5k_pci_eeprom_read(struct ath_common *common, u32 offset, u16 *data)
{
  bool __retres;
  u32 status;
  u32 timeout;
  unsigned int tmp_1;
  
#line 80 
  struct ath5k_hw *ah = (struct ath5k_hw *)common->ah;
  
#line 86 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) {
    u32 tmp;
    
#line 87 
    tmp = ath5k_hw_reg_read(ah,(unsigned short)16400);
    
#line 87 
    ;
    
#line 87 
    ath5k_hw_reg_write(ah,tmp | 1U,(unsigned short)16400);
    
#line 88 
    ath5k_hw_reg_read(ah,(unsigned short)((int)((unsigned int)((unsigned short)(offset + 6144U)) * 4U)));
  }
  else {
    u32 tmp_0;
    
#line 90 
    ath5k_hw_reg_write(ah,offset,(unsigned short)24576);
    
#line 91 
    tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)24584);
    
#line 91 
    ;
    
#line 91 
    ath5k_hw_reg_write(ah,tmp_0 | 1U,(unsigned short)24584);
  }
  
#line 95 
  timeout = 20000U;
  
#line 95 
  goto ldv_53068;
  ldv_53067: 
#line 96 
  ;
  
#line 96 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 96 
                                                   tmp_1 = 27648U; else 
                                                                    
#line 96 
                                                                    tmp_1 = 24588U;
  
#line 96 
  ;
  
#line 96 
  status = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_1));
  
#line 97 
  if ((status & 2U) != 0U) {
    u32 tmp_3;
    unsigned int tmp_2;
    
#line 98 
    if ((status & 1U) != 0U) {
      
#line 99 
      __retres = (_Bool)0;
      
#line 99 
      goto return_label;
    }
    else ;
    
#line 100 
    if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 100 
                                                     tmp_2 = 26624U; else 
                                                                    
#line 100 
                                                                    tmp_2 = 24580U;
    
#line 100 
    ;
    
#line 100 
    tmp_3 = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_2));
    
#line 100 
    *data = (unsigned short)tmp_3;
    
#line 102 
    __retres = (_Bool)1;
    
#line 102 
    goto return_label;
  }
  else ;
  
#line 104 
  usleep_range(15UL,20UL);
  
#line 95 
  timeout -= 1U;
  ldv_53068: 
#line 96 
  ;
  
#line 95 
  if (timeout != 0U) 
#line 97 
                     goto ldv_53067; else 
#line 100 
                                          goto ldv_53069;
  ldv_53069: 
#line 101 
  ;
  
#line 107 
  __retres = (_Bool)0;
  return_label: 
#line 107 
                return __retres;
}


#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pci.c"
int ath5k_hw_read_srev(struct ath5k_hw *ah)
{
  int __retres;
  
#line 112 
  ah->ah_mac_srev = ath5k_hw_reg_read(ah,(unsigned short)16416);
  
#line 113 
  __retres = 0;
  
#line 113 
  return __retres;
}


#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pci.c"
static int ath5k_pci_eeprom_read_mac(struct ath5k_hw *ah, u8 *mac)
{
  int __retres;
  u32 total;
  u32 offset;
  u16 data;
  int octet;
  int tmp_0;
  bool tmp;
  int tmp_2;
  bool tmp_1;
  
#line 121 
  u8 mac_d[6U] = {};
  
#line 126 
  tmp = ath5k_hw_nvram_read(ah,32U,& data);
  
#line 126 
  if (tmp) 
#line 126 
           tmp_0 = 0; else 
#line 126 
                           tmp_0 = 1;
  
#line 126 
  if (tmp_0) {
    
#line 126 
    __retres = -5;
    
#line 126 
    goto return_label;
  }
  else ;
  
#line 128 
  offset = 31U;
  
#line 128 
  octet = 0;
  
#line 128 
  total = 0U;
  
#line 128 
  goto ldv_53083;
  ldv_53082: 
#line 129 
  ;
  
#line 129 
  tmp_1 = ath5k_hw_nvram_read(ah,offset,& data);
  
#line 129 
  if (tmp_1) 
#line 129 
             tmp_2 = 0; else 
#line 129 
                             tmp_2 = 1;
  
#line 129 
  if (tmp_2) {
    
#line 129 
    __retres = -5;
    
#line 129 
    goto return_label;
  }
  else ;
  
#line 131 
  total = (unsigned int)data + total;
  
#line 132 
  mac_d[octet + 1] = (unsigned char)data;
  
#line 133 
  mac_d[octet] = (unsigned char)((int)data >> 8);
  
#line 134 
  octet += 2;
  
#line 128 
  offset -= 1U;
  ldv_53083: 
#line 129 
  ;
  
#line 128 
  if (offset > 28U) 
#line 130 
                    goto ldv_53082; else 
#line 133 
                                         goto ldv_53084;
  ldv_53084: 
#line 134 
  ;
  
#line 137 
  if (total == 0U || total == 196605U) {
    
#line 138 
    __retres = -22;
    
#line 138 
    goto return_label;
  }
  else ;
  
#line 140 
  memcpy((void *)mac,(void const *)(& mac_d),6UL);
  
#line 142 
  __retres = 0;
  return_label: 
#line 142 
                return __retres;
}


#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pci.c"
static struct ath_bus_ops const ath_pci_bus_ops = {.ath_bus_type = ATH_PCI, .read_cachesize = & ath5k_pci_read_cachesize, .eeprom_read = & ath5k_pci_eeprom_read, .eeprom_read_mac = & ath5k_pci_eeprom_read_mac};

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pci.c"
static int ath5k_pci_probe(struct pci_dev *pdev, struct pci_device_id const *id)
{
  int __retres;
  void *mem;
  struct ath5k_hw *ah;
  struct ieee80211_hw *hw;
  int ret;
  u8 csz;
  char const *tmp;
  
#line 186 
  pci_disable_link_state(pdev,1);
  
#line 188 
  ret = pci_enable_device(pdev);
  
#line 189 
  if (ret != 0) {
    
#line 190 
    dev_err((struct device const *)(& pdev->dev),"can\'t enable device\n");
    
#line 191 
    goto err;
  }
  else ;
  
#line 195 
  ret = pci_set_dma_mask(pdev,4294967295ULL);
  
#line 196 
  if (ret != 0) {
    
#line 197 
    dev_err((struct device const *)(& pdev->dev),"32-bit DMA not available\n");
    
#line 198 
    goto err_dis;
  }
  else ;
  
#line 205 
  pci_read_config_byte((struct pci_dev const *)pdev,12,& csz);
  
#line 206 
  if ((unsigned int)csz == 0U) {
    
#line 214 
    csz = (unsigned char)16U;
    
#line 215 
    pci_write_config_byte((struct pci_dev const *)pdev,12,(unsigned char)((int)csz));
  }
  else ;
  
#line 222 
  pci_write_config_byte((struct pci_dev const *)pdev,13,(unsigned char)168);
  
#line 225 
  pci_set_master(pdev);
  
#line 231 
  pci_write_config_byte((struct pci_dev const *)pdev,65,(unsigned char)0);
  
#line 233 
  ret = pci_request_region(pdev,0,"ath5k");
  
#line 234 
  if (ret != 0) {
    
#line 235 
    dev_err((struct device const *)(& pdev->dev),"cannot reserve PCI memory region\n");
    
#line 236 
    goto err_dis;
  }
  else ;
  
#line 239 
  mem = pci_iomap(pdev,0,0UL);
  
#line 240 
  if (mem == (void *)0) {
    
#line 241 
    dev_err((struct device const *)(& pdev->dev),"cannot remap PCI memory region\n");
    
#line 242 
    ret = -5;
    
#line 243 
    goto err_reg;
  }
  else ;
  
#line 250 
  hw = ldv_ieee80211_alloc_hw_72(31368UL,& ath5k_hw_ops);
  
#line 251 
  if (hw == (struct ieee80211_hw *)0) {
    
#line 252 
    dev_err((struct device const *)(& pdev->dev),"cannot allocate ieee80211_hw\n");
    
#line 253 
    ret = -12;
    
#line 254 
    goto err_map;
  }
  else ;
  
#line 257 
  tmp = wiphy_name((struct wiphy const *)hw->wiphy);
  
#line 257 
  ;
  
#line 257 
  _dev_info((struct device const *)(& pdev->dev),"registered as \'%s\'\n",tmp);
  
#line 259 
  ah = (struct ath5k_hw *)hw->priv;
  
#line 260 
  ah->hw = hw;
  
#line 261 
  ah->pdev = pdev;
  
#line 262 
  ah->dev = & pdev->dev;
  
#line 263 
  ah->irq = (int)pdev->irq;
  
#line 264 
  ah->devid = (unsigned short)id->device;
  
#line 265 
  ah->iobase = mem;
  
#line 268 
  ret = ath5k_init_ah(ah,& ath_pci_bus_ops);
  
#line 269 
  if (ret != 0) 
#line 270 
                goto err_free; else ;
  
#line 273 
  pci_set_drvdata(pdev,(void *)hw);
  
#line 275 
  __retres = 0;
  
#line 275 
  goto return_label;
  err_free: 
#line 276 
  ;
  
#line 277 
  ldv_ieee80211_free_hw_73(hw);
  err_map: 
#line 278 
  ;
  
#line 279 
  pci_iounmap(pdev,mem);
  err_reg: 
#line 280 
  ;
  
#line 281 
  pci_release_region(pdev,0);
  err_dis: 
#line 282 
  ;
  
#line 283 
  pci_disable_device(pdev);
  err: 
#line 284 
  ;
  
#line 285 
  __retres = ret;
  return_label: 
#line 285 
                return __retres;
}


#line 289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pci.c"
static void ath5k_pci_remove(struct pci_dev *pdev)
{
  
#line 291 
  struct ieee80211_hw *hw = pci_get_drvdata(pdev);
  
#line 292 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 294 
  ath5k_deinit_ah(ah);
  
#line 295 
  pci_iounmap(pdev,ah->iobase);
  
#line 296 
  pci_release_region(pdev,0);
  
#line 297 
  pci_disable_device(pdev);
  
#line 298 
  ldv_ieee80211_free_hw_74(hw);
  
#line 299 
  return;
}


#line 302  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pci.c"
static int ath5k_pci_suspend(struct device *dev)
{
  int __retres;
  struct pci_dev *tmp;
  {
    
#line 304 
    struct device const *__mptr = (struct device const *)dev;
    
#line 304 
    tmp = (struct pci_dev *)__mptr + 18446744073709551464U;
  }
  
#line 304 
  struct pci_dev *pdev = tmp;
  
#line 305 
  struct ieee80211_hw *hw = pci_get_drvdata(pdev);
  
#line 306 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 308 
  ath5k_led_off(ah);
  
#line 309 
  __retres = 0;
  
#line 309 
  return __retres;
}


#line 312  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pci.c"
static int ath5k_pci_resume(struct device *dev)
{
  int __retres;
  struct pci_dev *tmp;
  {
    
#line 314 
    struct device const *__mptr = (struct device const *)dev;
    
#line 314 
    tmp = (struct pci_dev *)__mptr + 18446744073709551464U;
  }
  
#line 314 
  struct pci_dev *pdev = tmp;
  
#line 315 
  struct ieee80211_hw *hw = pci_get_drvdata(pdev);
  
#line 316 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 323 
  pci_write_config_byte((struct pci_dev const *)pdev,65,(unsigned char)0);
  
#line 325 
  ath5k_led_enable(ah);
  
#line 326 
  __retres = 0;
  
#line 326 
  return __retres;
}


#line 329  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pci.c"
static struct dev_pm_ops const ath5k_pm_ops = {.prepare = (int (*)(struct device *))0, .complete = (void (*)(struct device *))0, .suspend = & ath5k_pci_suspend, .resume = & ath5k_pci_resume, .freeze = & ath5k_pci_suspend, .thaw = & ath5k_pci_resume, .poweroff = & ath5k_pci_suspend, .restore = & ath5k_pci_resume, .suspend_late = (int (*)(struct device *))0, .resume_early = (int (*)(struct device *))0, .freeze_late = (int (*)(struct device *))0, .thaw_early = (int (*)(struct device *))0, .poweroff_late = (int (*)(struct device *))0, .restore_early = (int (*)(struct device *))0, .suspend_noirq = (int (*)(struct device *))0, .resume_noirq = (int (*)(struct device *))0, .freeze_noirq = (int (*)(struct device *))0, .thaw_noirq = (int (*)(struct device *))0, .poweroff_noirq = (int (*)(struct device *))0, .restore_noirq = (int (*)(struct device *))0, .runtime_suspend = (int (*)(struct device *))0, .runtime_resume = (int (*)(struct device *))0, .runtime_idle = (int (*)(struct device *))0};

#line 335  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pci.c"
static struct pci_driver ath5k_pci_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "ath5k", .id_table = (struct pci_device_id const *)(& ath5k_pci_id_table), .probe = & ath5k_pci_probe, .remove = & ath5k_pci_remove, .suspend = (int (*)(struct pci_dev *, pm_message_t ))0, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = (int (*)(struct pci_dev *))0, .shutdown = (void (*)(struct pci_dev *))0, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = (struct pci_error_handlers const *)0, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = & ath5k_pm_ops, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 343  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pci.c"
static int ath5k_pci_driver_init(void)
{
  int tmp;
  
#line 343 
  tmp = ldv___pci_register_driver_75(& ath5k_pci_driver,& __this_module,"ath5k");
  
#line 343 
  return tmp;
}


#line 343  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pci.c"
static void ath5k_pci_driver_exit(void)
{
  
#line 343 
  ldv_pci_unregister_driver_76(& ath5k_pci_driver);
  
#line 344 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_pci.c.aux"
struct pci_driver *ldv_emg_alias_ath5k_pci_driver_2 = & ath5k_pci_driver;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_pci.c.aux"
struct dev_pm_ops *ldv_emg_alias_ath5k_pm_ops_3 = (struct dev_pm_ops *)(& ath5k_pm_ops);

#line 61 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 65 
void ldv_emg_ieee80211_free_hw(struct ieee80211_hw *arg0);


#line 67 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 68 
struct ieee80211_hw *ldv_emg_ieee80211_alloc_hw(unsigned long arg0, struct ieee80211_ops *arg1);


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_pci.c.aux"
void ldv_emg_ath5k_pci_driver_exit(void)
{
  
#line 75 
  ath5k_pci_driver_exit();
  
#line 76 
  return;
}


#line 78  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_pci.c.aux"
int ldv_emg_wrapper_ath5k_pci_resume_4(struct device *arg0)
{
  int tmp;
  
#line 79 
  tmp = ath5k_pci_resume(arg0);
  
#line 79 
  return tmp;
}


#line 83  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_pci.c.aux"
int ldv_emg_wrapper_ath5k_pci_suspend_2(struct device *arg0)
{
  int tmp;
  
#line 84 
  tmp = ath5k_pci_suspend(arg0);
  
#line 84 
  return tmp;
}


#line 88  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_pci.c.aux"
int ldv_emg_ath5k_pci_driver_init(void)
{
  int tmp;
  
#line 89 
  tmp = ath5k_pci_driver_init();
  
#line 89 
  return tmp;
}


#line 92  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_pci.c.aux"
int ldv_emg_wrapper_ath5k_pci_probe_2(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 93 
  tmp = ath5k_pci_probe(arg0,(struct pci_device_id const *)arg1);
  
#line 93 
  return tmp;
}


#line 97  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_pci.c.aux"
void ldv_emg_wrapper_ath5k_pci_remove_3(struct pci_dev *arg0)
{
  
#line 98 
  ath5k_pci_remove(arg0);
  
#line 99 
  return;
}


#line 773  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_pci.c.aux"
static struct ieee80211_hw *ldv_ieee80211_alloc_hw_72(size_t priv_data_len, struct ieee80211_ops const *ops)
{
  struct ieee80211_hw *tmp;
  
#line 777 
  tmp = ldv_emg_ieee80211_alloc_hw(priv_data_len,(struct ieee80211_ops *)ops);
  
#line 777 
  return tmp;
}


#line 781  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_pci.c.aux"
static void ldv_ieee80211_free_hw_73(struct ieee80211_hw *ldv_func_arg1)
{
  
#line 785 
  ldv_emg_ieee80211_free_hw(ldv_func_arg1);
  
#line 786 
  return;
}


#line 789  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_pci.c.aux"
static void ldv_ieee80211_free_hw_74(struct ieee80211_hw *ldv_func_arg1)
{
  
#line 793 
  ldv_emg_ieee80211_free_hw(ldv_func_arg1);
  
#line 794 
  return;
}


#line 797  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_pci.c.aux"
static int ldv___pci_register_driver_75(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 801 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 801 
  return tmp;
}


#line 805  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_pci.c.aux"
static void ldv_pci_unregister_driver_76(struct pci_driver *ldv_func_arg1)
{
  
#line 809 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 810 
  return;
}


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bug.h"
void warn_slowpath_null(char const *, int const);


#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memset(void *, int, size_t);


#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
int net_ratelimit(void);


#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ani.h"
void ath5k_ani_phy_error_report(struct ath5k_hw *ah, enum ath5k_phy_error_code phyerr);


#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
void _ath5k_printk(struct ath5k_hw const *ah, char const *level, char const *fmt , ...);


#line 1577 
int ath5k_hw_init_desc_functions(struct ath5k_hw *ah);


#line 1578 
int ath5k_hw_setup_rx_desc(struct ath5k_hw *ah, struct ath5k_desc *desc, u32 size, unsigned int flags);


#line 1580 
int ath5k_hw_setup_mrr_tx_desc(struct ath5k_hw *ah, struct ath5k_desc *desc, unsigned int tx_rate1, u_int tx_tries1, u_int tx_rate2, u_int tx_tries2, unsigned int tx_rate3, u_int tx_tries3);


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/desc.c"
static int ath5k_hw_setup_2word_tx_desc(struct ath5k_hw *ah, struct ath5k_desc *desc, unsigned int pkt_len, unsigned int hdr_len, int padsize, enum ath5k_pkt_type type, unsigned int tx_power, unsigned int tx_rate0, unsigned int tx_tries0, unsigned int key_index, unsigned int antenna_mode, unsigned int flags, unsigned int rtscts_rate, unsigned int rtscts_duration)
{
  int __retres;
  u32 frame_type;
  struct ath5k_hw_2w_tx_ctl *tx_ctl;
  unsigned int frame_len;
  
#line 91 
  tx_ctl = & desc->ud.ds_tx5210.tx_ctl;
  
#line 99 
  if ((long)(tx_tries0 == 0U) != 0L) {
    int tmp;
    
#line 100 
    tmp = net_ratelimit();
    
#line 100 
    if (tmp != 0) 
#line 100 
                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","zero retries\n"); else ;
    {
      
#line 101 
      int __ret_warn_on = 1;
      
#line 101 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 101 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/desc.c",101); else ;
      
#line 101 
      long tmp_2 = (long)(__ret_warn_on != 0);
    }
    
#line 102 
    __retres = -22;
    
#line 102 
    goto return_label;
  }
  else ;
  
#line 104 
  if ((long)(tx_rate0 == 0U) != 0L) {
    int tmp_0;
    
#line 105 
    tmp_0 = net_ratelimit();
    
#line 105 
    if (tmp_0 != 0) 
#line 105 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","zero rate\n"); else ;
    {
      
#line 106 
      int __ret_warn_on_0 = 1;
      
#line 106 
      if ((long)(__ret_warn_on_0 != 0) != 0L) 
#line 106 
                                              warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/desc.c",106); else ;
      
#line 106 
      long tmp_4 = (long)(__ret_warn_on_0 != 0);
    }
    
#line 107 
    __retres = -22;
    
#line 107 
    goto return_label;
  }
  else ;
  
#line 111 
  memset((void *)(& desc->ud.ds_tx5210),0,16UL);
  
#line 118 
  frame_len = (pkt_len - (unsigned int)padsize) + 4U;
  
#line 120 
  if ((frame_len & 4294963200U) != 0U) {
    
#line 121 
    __retres = -22;
    
#line 121 
    goto return_label;
  }
  else ;
  
#line 123 
  tx_ctl->tx_control_0 = frame_len & 4095U;
  
#line 128 
  if (type == (unsigned int)AR5K_PKT_TYPE_BEACON) {
    unsigned int tmp_1;
    {
      
#line 129 
      int const __y = 4;
      
#line 129 
      tmp_1 = (pkt_len + 3U) & 4294967292U;
    }
    
#line 129 
    pkt_len = tmp_1;
  }
  else ;
  
#line 131 
  if ((pkt_len & 4294963200U) != 0U) {
    
#line 132 
    __retres = -22;
    
#line 132 
    goto return_label;
  }
  else ;
  
#line 134 
  tx_ctl->tx_control_1 = pkt_len & 4095U;
  
#line 139 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) {
    
#line 140 
    if ((hdr_len & 4294709247U) != 0U) {
      
#line 141 
      __retres = -22;
      
#line 141 
      goto return_label;
    }
    else ;
    
#line 142 
    tx_ctl->tx_control_0 |= (hdr_len << 12) & 258048U;
  }
  else ;
  
#line 147 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) {
    
#line 148 
    switch ((unsigned int)type) {
      case (unsigned int)3: 
#line 149 
      ;
      case (unsigned int)4: 
#line 150 
      ;
      
#line 151 
      frame_type = 3U;
      
#line 152 
      goto ldv_50432;
      case (unsigned int)5: 
#line 153 
      ;
      
#line 154 
      frame_type = 4U;
      
#line 155 
      goto ldv_50432;
      default: 
#line 156 
      ;
      
#line 157 
      frame_type = (unsigned int)type;
      
#line 158 
      goto ldv_50432;
    }
    ldv_50432: 
#line 161 
    ;
    
#line 161 
    tx_ctl->tx_control_0 |= ((frame_type << 26) & 469762048U) | ((tx_rate0 << 18) & 3932160U);
  }
  else {
    int tmp_2_0;
    
#line 168 
    if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 168 
                                                     tmp_2_0 = 33554432; else 
                                                                    
#line 168 
                                                                    tmp_2_0 = 503316480;
    
#line 166 
    tx_ctl->tx_control_0 |= ((tx_rate0 << 18) & 3932160U) | ((antenna_mode << 25) & (unsigned int)tmp_2_0);
    
#line 170 
    tx_ctl->tx_control_1 |= ((unsigned int)type << 20) & 7340032U;
  }
  
#line 184 
  if ((flags & 1U) != 0U) 
#line 184 
                          tx_ctl->tx_control_0 |= 16777216U; else ;
  
#line 185 
  if ((flags & 16U) != 0U) 
#line 185 
                           tx_ctl->tx_control_0 |= 536870912U; else ;
  
#line 186 
  if ((flags & 4U) != 0U) 
#line 186 
                          tx_ctl->tx_control_0 |= 4194304U; else ;
  
#line 188 
  if (ah->ah_version == (unsigned int)AR5K_AR5211) {
    
#line 189 
    if ((flags & 32U) != 0U) 
#line 189 
                             tx_ctl->tx_control_0 |= 8388608U; else ;
    
#line 190 
    if ((flags & 2U) != 0U) 
#line 190 
                            tx_ctl->tx_control_1 |= 8388608U; else ;
  }
  else ;
  
#line 199 
  if (key_index != 4294967295U) {
    int tmp_3;
    
#line 200 
    tx_ctl->tx_control_0 |= 1073741824U;
    
#line 203 
    if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 203 
                                                     tmp_3 = 516096; else 
                                                                    
#line 203 
                                                                    tmp_3 = 1040384;
    
#line 202 
    tx_ctl->tx_control_1 |= (key_index << 13) & (unsigned int)tmp_3;
  }
  else ;
  
#line 210 
  if (ah->ah_version == (unsigned int)AR5K_AR5210 && (flags & 12U) != 0U) 
    
#line 212 
    tx_ctl->tx_control_1 |= rtscts_duration & 4294443008U; else ;
  
#line 215 
  __retres = 0;
  return_label: 
#line 215 
                return __retres;
}


#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/desc.c"
static int ath5k_hw_setup_4word_tx_desc(struct ath5k_hw *ah, struct ath5k_desc *desc, unsigned int pkt_len, unsigned int hdr_len, int padsize, enum ath5k_pkt_type type, unsigned int tx_power, unsigned int tx_rate0, unsigned int tx_tries0, unsigned int key_index, unsigned int antenna_mode, unsigned int flags, unsigned int rtscts_rate, unsigned int rtscts_duration)
{
  int __retres;
  struct ath5k_hw_4w_tx_ctl *tx_ctl;
  unsigned int frame_len;
  
#line 260 
  u32 txctl0 = 0U;
  
#line 260 
  u32 txctl1 = 0U;
  
#line 260 
  u32 txctl2 = 0U;
  
#line 260 
  u32 txctl3 = 0U;
  
#line 262 
  tx_ctl = & desc->ud.ds_tx5212.tx_ctl;
  
#line 270 
  if ((long)(tx_tries0 == 0U) != 0L) {
    int tmp;
    
#line 271 
    tmp = net_ratelimit();
    
#line 271 
    if (tmp != 0) 
#line 271 
                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","zero retries\n"); else ;
    {
      
#line 272 
      int __ret_warn_on = 1;
      
#line 272 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 272 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/desc.c",272); else ;
      
#line 272 
      long tmp_2 = (long)(__ret_warn_on != 0);
    }
    
#line 273 
    __retres = -22;
    
#line 273 
    goto return_label;
  }
  else ;
  
#line 275 
  if ((long)(tx_rate0 == 0U) != 0L) {
    int tmp_0;
    
#line 276 
    tmp_0 = net_ratelimit();
    
#line 276 
    if (tmp_0 != 0) 
#line 276 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","zero rate\n"); else ;
    {
      
#line 277 
      int __ret_warn_on_0 = 1;
      
#line 277 
      if ((long)(__ret_warn_on_0 != 0) != 0L) 
#line 277 
                                              warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/desc.c",277); else ;
      
#line 277 
      long tmp_4 = (long)(__ret_warn_on_0 != 0);
    }
    
#line 278 
    __retres = -22;
    
#line 278 
    goto return_label;
  }
  else ;
  
#line 281 
  tx_power = (unsigned int)ah->ah_txpower.txp_offset + tx_power;
  
#line 282 
  if (tx_power > 63U) 
#line 283 
                      tx_power = 63U; else ;
  
#line 286 
  memset((void *)(& desc->ud.ds_tx5212.tx_stat),0,8UL);
  
#line 294 
  frame_len = (pkt_len - (unsigned int)padsize) + 4U;
  
#line 296 
  if ((frame_len & 4294963200U) != 0U) {
    
#line 297 
    __retres = -22;
    
#line 297 
    goto return_label;
  }
  else ;
  
#line 299 
  txctl0 = frame_len & 4095U;
  
#line 304 
  if (type == (unsigned int)AR5K_PKT_TYPE_BEACON) {
    unsigned int tmp_1;
    {
      
#line 305 
      int const __y = 4;
      
#line 305 
      tmp_1 = (pkt_len + 3U) & 4294967292U;
    }
    
#line 305 
    pkt_len = tmp_1;
  }
  else ;
  
#line 307 
  if ((pkt_len & 4294963200U) != 0U) {
    
#line 308 
    __retres = -22;
    
#line 308 
    goto return_label;
  }
  else ;
  
#line 310 
  txctl1 = pkt_len & 4095U;
  
#line 312 
  txctl0 = (((tx_power << 16) & 4128768U) | ((antenna_mode << 25) & 503316480U)) | txctl0;
  
#line 314 
  txctl1 = (((unsigned int)type << 20) & 15728640U) | txctl1;
  
#line 315 
  txctl2 = (tx_tries0 << 16) & 983040U;
  
#line 316 
  txctl3 = tx_rate0 & 31U;
  
#line 323 
  if ((flags & 1U) != 0U) 
#line 323 
                          txctl0 |= 16777216U; else ;
  
#line 324 
  if ((flags & 32U) != 0U) 
#line 324 
                           txctl0 |= 8388608U; else ;
  
#line 325 
  if ((flags & 16U) != 0U) 
#line 325 
                           txctl0 |= 536870912U; else ;
  
#line 326 
  if ((flags & 4U) != 0U) 
#line 326 
                          txctl0 |= 4194304U; else ;
  
#line 327 
  if ((flags & 8U) != 0U) 
#line 327 
                          txctl0 |= 2147483648U; else ;
  
#line 328 
  if ((flags & 2U) != 0U) 
#line 328 
                          txctl1 |= 16777216U; else ;
  
#line 335 
  if (key_index != 4294967295U) {
    
#line 336 
    txctl0 |= 1073741824U;
    
#line 337 
    txctl1 = ((key_index << 13) & 1040384U) | txctl1;
  }
  else ;
  
#line 344 
  if ((flags & 12U) != 0U) {
    
#line 345 
    if ((flags & 4U) != 0U && (flags & 8U) != 0U) {
      
#line 347 
      __retres = -22;
      
#line 347 
      goto return_label;
    }
    else ;
    
#line 348 
    txctl2 = (rtscts_duration & 32767U) | txctl2;
    
#line 349 
    txctl3 = ((rtscts_rate << 20) & 32505856U) | txctl3;
  }
  else ;
  
#line 353 
  tx_ctl->tx_control_0 = txctl0;
  
#line 354 
  tx_ctl->tx_control_1 = txctl1;
  
#line 355 
  tx_ctl->tx_control_2 = txctl2;
  
#line 356 
  tx_ctl->tx_control_3 = txctl3;
  
#line 358 
  __retres = 0;
  return_label: 
#line 358 
                return __retres;
}


#line 379  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/desc.c"
int ath5k_hw_setup_mrr_tx_desc(struct ath5k_hw *ah, struct ath5k_desc *desc, unsigned int tx_rate1, u_int tx_tries1, u_int tx_rate2, u_int tx_tries2, unsigned int tx_rate3, u_int tx_tries3)
{
  int __retres;
  struct ath5k_hw_4w_tx_ctl *tx_ctl;
  
#line 388 
  if (ah->ah_version <= (unsigned int)AR5K_AR5211) {
    
#line 389 
    __retres = 0;
    
#line 389 
    goto return_label;
  }
  else ;
  
#line 397 
  if ((((long)((tx_rate1 == 0U && tx_tries1 != 0U) != 0) != 0L || (long)((tx_rate2 == 0U && tx_tries2 != 0U) != 0) != 0L) != 0) != 0 || (long)((tx_rate3 == 0U && tx_tries3 != 0U) != 0) != 0L) {
    int tmp;
    
#line 400 
    tmp = net_ratelimit();
    
#line 400 
    if (tmp != 0) 
#line 400 
                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","zero rate\n"); else ;
    {
      
#line 401 
      int __ret_warn_on = 1;
      
#line 401 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 401 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/desc.c",401); else ;
      
#line 401 
      long tmp_2 = (long)(__ret_warn_on != 0);
    }
    
#line 402 
    __retres = -22;
    
#line 402 
    goto return_label;
  }
  else ;
  
#line 405 
  if (ah->ah_version == (unsigned int)AR5K_AR5212) {
    
#line 406 
    tx_ctl = & desc->ud.ds_tx5212.tx_ctl;
    
#line 418 
    if (tx_tries1 != 0U) {
      
#line 418 
      tx_ctl->tx_control_2 |= (tx_tries1 << 20) & 15728640U;
      
#line 418 
      tx_ctl->tx_control_3 |= (tx_rate1 << 5) & 992U;
    }
    else ;
    
#line 419 
    if (tx_tries2 != 0U) {
      
#line 419 
      tx_ctl->tx_control_2 |= (tx_tries2 << 24) & 251658240U;
      
#line 419 
      tx_ctl->tx_control_3 |= (tx_rate2 << 10) & 31744U;
    }
    else ;
    
#line 420 
    if (tx_tries3 != 0U) {
      
#line 420 
      tx_ctl->tx_control_2 |= tx_tries3 << 28;
      
#line 420 
      tx_ctl->tx_control_3 |= (tx_rate3 << 15) & 1015808U;
    }
    else ;
    
#line 424 
    __retres = 1;
    
#line 424 
    goto return_label;
  }
  else ;
  
#line 427 
  __retres = 0;
  return_label: 
#line 427 
                return __retres;
}


#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/desc.c"
static int ath5k_hw_proc_2word_tx_status(struct ath5k_hw *ah, struct ath5k_desc *desc, struct ath5k_tx_status *ts)
{
  int __retres;
  struct ath5k_hw_tx_status *tx_status;
  
#line 448 
  tx_status = & desc->ud.ds_tx5210.tx_stat;
  
#line 451 
  if ((long)((tx_status->tx_status_1 & 1U) == 0U) != 0L) {
    
#line 452 
    __retres = -115;
    
#line 452 
    goto return_label;
  }
  else ;
  
#line 457 
  ts->ts_tstamp = (unsigned short)(tx_status->tx_status_0 >> 16);
  
#line 459 
  ts->ts_shortretry = (unsigned char)((unsigned int)((unsigned char)(tx_status->tx_status_0 >> 4)) & 15U);
  
#line 461 
  ts->ts_final_retry = (unsigned char)((unsigned int)((unsigned char)(tx_status->tx_status_0 >> 8)) & 15U);
  
#line 464 
  ts->ts_seqnum = (unsigned short)((unsigned int)((unsigned short)(tx_status->tx_status_1 >> 1)) & 4095U);
  
#line 466 
  ts->ts_rssi = (signed char)(tx_status->tx_status_1 >> 13);
  
#line 468 
  ts->ts_antenna = (unsigned char)1U;
  
#line 469 
  ts->ts_status = (unsigned char)0U;
  
#line 470 
  ts->ts_final_idx = (unsigned char)0U;
  
#line 472 
  if ((tx_status->tx_status_0 & 1U) == 0U) {
    
#line 473 
    if ((tx_status->tx_status_0 & 2U) != 0U) 
#line 475 
                                             ts->ts_status = (unsigned char)((unsigned int)ts->ts_status | 1U); else ;
    
#line 477 
    if ((tx_status->tx_status_0 & 4U) != 0U) 
#line 478 
                                             ts->ts_status = (unsigned char)((unsigned int)ts->ts_status | 4U); else ;
    
#line 480 
    if ((tx_status->tx_status_0 & 8U) != 0U) 
#line 481 
                                             ts->ts_status = (unsigned char)((unsigned int)ts->ts_status | 2U); else ;
  }
  else ;
  
#line 484 
  __retres = 0;
  return_label: 
#line 484 
                return __retres;
}


#line 494  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/desc.c"
static int ath5k_hw_proc_4word_tx_status(struct ath5k_hw *ah, struct ath5k_desc *desc, struct ath5k_tx_status *ts)
{
  int __retres;
  struct ath5k_hw_tx_status *tx_status;
  u32 txstat0;
  u32 txstat1;
  u32 volatile *tmp;
  u32 volatile *tmp_0;
  
#line 501 
  tx_status = & desc->ud.ds_tx5212.tx_stat;
  {
    
#line 503 
    u32 __var = 0U;
    
#line 503 
    tmp = (u32 volatile *)(& tx_status->tx_status_1);
  }
  
#line 503 
  txstat1 = *tmp;
  
#line 506 
  if ((long)((txstat1 & 1U) == 0U) != 0L) {
    
#line 507 
    __retres = -115;
    
#line 507 
    goto return_label;
  }
  else ;
  {
    
#line 509 
    u32 __var_0 = 0U;
    
#line 509 
    tmp_0 = (u32 volatile *)(& tx_status->tx_status_0);
  }
  
#line 509 
  txstat0 = *tmp_0;
  
#line 514 
  ts->ts_tstamp = (unsigned short)(txstat0 >> 16);
  
#line 516 
  ts->ts_shortretry = (unsigned char)((unsigned int)((unsigned char)(txstat0 >> 4)) & 15U);
  
#line 518 
  ts->ts_final_retry = (unsigned char)((unsigned int)((unsigned char)(txstat0 >> 8)) & 15U);
  
#line 520 
  ts->ts_seqnum = (unsigned short)((unsigned int)((unsigned short)(txstat1 >> 1)) & 4095U);
  
#line 522 
  ts->ts_rssi = (signed char)(txstat1 >> 13);
  
#line 524 
  if ((txstat1 & 16777216U) != 0U) 
#line 524 
                                   ts->ts_antenna = (unsigned char)2U; else 
                                                                    
#line 524 
                                                                    ts->ts_antenna = (unsigned char)1U;
  
#line 526 
  ts->ts_status = (unsigned char)0U;
  
#line 528 
  ts->ts_final_idx = (unsigned char)((unsigned int)((unsigned char)(txstat1 >> 21)) & 3U);
  
#line 532 
  if ((txstat0 & 1U) == 0U) {
    
#line 533 
    if ((txstat0 & 2U) != 0U) 
#line 534 
                              ts->ts_status = (unsigned char)((unsigned int)ts->ts_status | 1U); else ;
    
#line 536 
    if ((txstat0 & 4U) != 0U) 
#line 537 
                              ts->ts_status = (unsigned char)((unsigned int)ts->ts_status | 4U); else ;
    
#line 539 
    if ((txstat0 & 8U) != 0U) 
#line 540 
                              ts->ts_status = (unsigned char)((unsigned int)ts->ts_status | 2U); else ;
  }
  else ;
  
#line 543 
  __retres = 0;
  return_label: 
#line 543 
                return __retres;
}


#line 559  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/desc.c"
int ath5k_hw_setup_rx_desc(struct ath5k_hw *ah, struct ath5k_desc *desc, u32 size, unsigned int flags)
{
  int __retres;
  struct ath5k_hw_rx_ctl *rx_ctl;
  
#line 565 
  rx_ctl = & desc->ud.ds_rx.rx_ctl;
  
#line 574 
  memset((void *)(& desc->ud.ds_rx),0,16UL);
  
#line 576 
  if ((long)((size & 4294963200U) != 0U) != 0L) {
    
#line 577 
    __retres = -22;
    
#line 577 
    goto return_label;
  }
  else ;
  
#line 580 
  rx_ctl->rx_control_1 = size & 4095U;
  
#line 582 
  if ((flags & 32U) != 0U) 
#line 583 
                           rx_ctl->rx_control_1 |= 8192U; else ;
  
#line 585 
  __retres = 0;
  return_label: 
#line 585 
                return __retres;
}


#line 601  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/desc.c"
static int ath5k_hw_proc_5210_rx_status(struct ath5k_hw *ah, struct ath5k_desc *desc, struct ath5k_rx_status *rs)
{
  int __retres;
  struct ath5k_hw_rx_status *rx_status;
  
#line 607 
  rx_status = & desc->ud.ds_rx.rx_stat;
  
#line 610 
  if ((long)((rx_status->rx_status_1 & 1U) == 0U) != 0L) {
    
#line 612 
    __retres = -115;
    
#line 612 
    goto return_label;
  }
  else ;
  
#line 614 
  memset((void *)rs,0,12UL);
  
#line 619 
  rs->rs_datalen = (unsigned short)((unsigned int)((unsigned short)rx_status->rx_status_0) & 4095U);
  
#line 621 
  rs->rs_rssi = (signed char)(rx_status->rx_status_0 >> 19);
  
#line 623 
  rs->rs_rate = (unsigned char)((unsigned int)((unsigned char)(rx_status->rx_status_0 >> 15)) & 15U);
  
#line 625 
  rs->rs_more = (unsigned char)((rx_status->rx_status_0 & 4096U) != 0U);
  
#line 632 
  rs->rs_tstamp = (unsigned short)((unsigned int)((unsigned short)(rx_status->rx_status_1 >> 15)) & 8191U);
  
#line 635 
  if (ah->ah_version == (unsigned int)AR5K_AR5211) 
#line 636 
                                                   rs->rs_antenna = (unsigned char)((unsigned int)((unsigned char)(rx_status->rx_status_0 >> 27)) & 7U);
  else 
    
#line 639 
    if ((rx_status->rx_status_0 & 16384U) != 0U) 
#line 639 
                                                 rs->rs_antenna = (unsigned char)2U; else 
                                                                    
#line 639 
                                                                    rs->rs_antenna = (unsigned char)1U;
  
#line 646 
  if ((rx_status->rx_status_1 & 256U) != 0U) 
#line 647 
                                             rs->rs_keyix = (unsigned char)((unsigned int)((unsigned char)(rx_status->rx_status_1 >> 9)) & 63U); else 
                                                                    
#line 650 
                                                                    rs->rs_keyix = (unsigned char)255U;
  
#line 655 
  if ((rx_status->rx_status_1 & 2U) == 0U) {
    
#line 657 
    if ((rx_status->rx_status_1 & 4U) != 0U) 
#line 659 
                                             rs->rs_status = (unsigned char)((unsigned int)rs->rs_status | 1U); else ;
    
#line 662 
    if (ah->ah_version == (unsigned int)AR5K_AR5210 && (rx_status->rx_status_1 & 8U) != 0U) 
      
#line 665 
      rs->rs_status = (unsigned char)((unsigned int)rs->rs_status | 4U); else ;
    
#line 667 
    if ((rx_status->rx_status_1 & 224U) != 0U) {
      
#line 669 
      rs->rs_status = (unsigned char)((unsigned int)rs->rs_status | 2U);
      
#line 670 
      rs->rs_phyerr = (unsigned char)((unsigned int)((unsigned char)(rx_status->rx_status_1 >> 5)) & 7U);
    }
    else ;
    
#line 674 
    if ((rx_status->rx_status_1 & 16U) != 0U) 
#line 676 
                                              rs->rs_status = (unsigned char)((unsigned int)rs->rs_status | 8U); else ;
  }
  else ;
  
#line 679 
  __retres = 0;
  return_label: 
#line 679 
                return __retres;
}


#line 695  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/desc.c"
static int ath5k_hw_proc_5212_rx_status(struct ath5k_hw *ah, struct ath5k_desc *desc, struct ath5k_rx_status *rs)
{
  int __retres;
  struct ath5k_hw_rx_status *rx_status;
  u32 rxstat0;
  u32 rxstat1;
  u32 volatile *tmp;
  u32 volatile *tmp_0;
  
#line 702 
  rx_status = & desc->ud.ds_rx.rx_stat;
  {
    
#line 703 
    u32 __var = 0U;
    
#line 703 
    tmp = (u32 volatile *)(& rx_status->rx_status_1);
  }
  
#line 703 
  rxstat1 = *tmp;
  
#line 706 
  if ((long)((rxstat1 & 1U) == 0U) != 0L) {
    
#line 707 
    __retres = -115;
    
#line 707 
    goto return_label;
  }
  else ;
  
#line 709 
  memset((void *)rs,0,12UL);
  {
    
#line 710 
    u32 __var_0 = 0U;
    
#line 710 
    tmp_0 = (u32 volatile *)(& rx_status->rx_status_0);
  }
  
#line 710 
  rxstat0 = *tmp_0;
  
#line 715 
  rs->rs_datalen = (unsigned short)((unsigned int)((unsigned short)rxstat0) & 4095U);
  
#line 716 
  rs->rs_rssi = (signed char)(rxstat0 >> 20);
  
#line 718 
  rs->rs_rate = (unsigned char)((unsigned int)((unsigned char)(rxstat0 >> 15)) & 31U);
  
#line 720 
  rs->rs_antenna = (unsigned char)(rxstat0 >> 28);
  
#line 722 
  rs->rs_more = (unsigned char)((rxstat0 & 4096U) != 0U);
  
#line 723 
  rs->rs_tstamp = (unsigned short)((unsigned int)((unsigned short)(rxstat1 >> 16)) & 32767U);
  
#line 729 
  if ((rxstat1 & 256U) != 0U) 
#line 730 
                              rs->rs_keyix = (unsigned char)((unsigned int)((unsigned char)(rxstat1 >> 9)) & 127U); else 
                                                                    
#line 733 
                                                                    rs->rs_keyix = (unsigned char)255U;
  
#line 738 
  if ((rxstat1 & 2U) == 0U) {
    
#line 739 
    if ((rxstat1 & 4U) != 0U) 
#line 740 
                              rs->rs_status = (unsigned char)((unsigned int)rs->rs_status | 1U); else ;
    
#line 742 
    if ((rxstat1 & 16U) != 0U) {
      
#line 743 
      rs->rs_status = (unsigned char)((unsigned int)rs->rs_status | 2U);
      
#line 744 
      rs->rs_phyerr = (unsigned char)(rxstat1 >> 8);
      
#line 746 
      if (! ah->ah_capabilities.cap_has_phyerr_counters) 
#line 747 
                                                         ath5k_ani_phy_error_report(ah,(enum ath5k_phy_error_code)rs->rs_phyerr); else ;
    }
    else ;
    
#line 750 
    if ((rxstat1 & 8U) != 0U) 
#line 751 
                              rs->rs_status = (unsigned char)((unsigned int)rs->rs_status | 8U); else ;
    
#line 753 
    if ((rxstat1 & 32U) != 0U) 
#line 754 
                               rs->rs_status = (unsigned char)((unsigned int)rs->rs_status | 16U); else ;
  }
  else ;
  
#line 756 
  __retres = 0;
  return_label: 
#line 756 
                return __retres;
}


#line 773  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/desc.c"
int ath5k_hw_init_desc_functions(struct ath5k_hw *ah)
{
  int __retres;
  
#line 775 
  if (ah->ah_version == (unsigned int)AR5K_AR5212) {
    
#line 776 
    ah->ah_setup_tx_desc = & ath5k_hw_setup_4word_tx_desc;
    
#line 777 
    ah->ah_proc_tx_desc = & ath5k_hw_proc_4word_tx_status;
    
#line 778 
    ah->ah_proc_rx_desc = & ath5k_hw_proc_5212_rx_status;
  }
  else 
    
#line 779 
    if (ah->ah_version <= (unsigned int)AR5K_AR5211) {
      
#line 780 
      ah->ah_setup_tx_desc = & ath5k_hw_setup_2word_tx_desc;
      
#line 781 
      ah->ah_proc_tx_desc = & ath5k_hw_proc_2word_tx_status;
      
#line 782 
      ah->ah_proc_rx_desc = & ath5k_hw_proc_5210_rx_status;
    }
    else {
      
#line 784 
      __retres = -524;
      
#line 784 
      goto return_label;
    }
  
#line 785 
  __retres = 0;
  return_label: 
#line 785 
                return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 542 
static void *kcalloc(size_t n, size_t size, gfp_t flags);


#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
int ath5k_eeprom_init(struct ath5k_hw *ah);


#line 1527 
void ath5k_eeprom_detach(struct ath5k_hw *ah);


#line 1528 
int ath5k_eeprom_mode_from_channel(struct ath5k_hw *ah, struct ieee80211_channel *channel);


#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.c"
static u16 ath5k_eeprom_bin2freq(struct ath5k_eeprom_info *ee, u16 bin, unsigned int mode)
{
  u16 __retres;
  u16 val;
  
#line 45 
  if ((unsigned int)bin == 255U) {
    
#line 46 
    __retres = bin;
    
#line 46 
    goto return_label;
  }
  else ;
  
#line 48 
  if (mode == 0U) 
    
#line 49 
    if ((unsigned int)ee->ee_version > 12290U) 
#line 50 
                                               val = (unsigned short)((unsigned int)bin * 5U + 4800U);
    else 
      
#line 52 
      if ((unsigned int)bin > 62U) 
#line 52 
                                   val = (unsigned short)((unsigned int)bin * 5U + 5410U); else 
                                                                    
#line 52 
                                                                    val = (unsigned short)((unsigned int)bin * 10U + 5100U);
  else 
    
#line 55 
    if ((unsigned int)ee->ee_version > 12290U) 
#line 56 
                                               val = (unsigned short)((unsigned int)bin + 2300U); else 
                                                                    
#line 58 
                                                                    val = (unsigned short)((unsigned int)bin + 2400U);
  
#line 61 
  __retres = val;
  return_label: 
#line 61 
                return __retres;
}


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.c"
static int ath5k_eeprom_init_header(struct ath5k_hw *ah)
{
  int __retres;
  u16 val;
  u32 cksum;
  u32 offset;
  int tmp_0;
  bool tmp;
  int tmp_2;
  bool tmp_1;
  int tmp_4;
  bool tmp_3;
  int tmp_6;
  bool tmp_5;
  int tmp_8;
  bool tmp_7;
  int tmp_10;
  bool tmp_9;
  int tmp_15;
  bool tmp_14;
  int tmp_20;
  bool tmp_19;
  int tmp_18;
  int tmp_40;
  bool tmp_39;
  int tmp_42;
  bool tmp_41;
  int tmp_44;
  bool tmp_43;
  
#line 75 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 77 
  u32 eep_max = 832U;
  
#line 82 
  tmp = ath5k_hw_nvram_read(ah,61U,& ah->ah_capabilities.cap_eeprom.ee_magic);
  
#line 82 
  if (tmp) 
#line 82 
           tmp_0 = 0; else 
#line 82 
                           tmp_0 = 1;
  
#line 82 
  if (tmp_0) {
    
#line 82 
    __retres = -5;
    
#line 82 
    goto return_label;
  }
  else ;
  
#line 83 
  tmp_1 = ath5k_hw_nvram_read(ah,63U,& ah->ah_capabilities.cap_eeprom.ee_protect);
  
#line 83 
  if (tmp_1) 
#line 83 
             tmp_2 = 0; else 
#line 83 
                             tmp_2 = 1;
  
#line 83 
  if (tmp_2) {
    
#line 83 
    __retres = -5;
    
#line 83 
    goto return_label;
  }
  else ;
  
#line 84 
  tmp_3 = ath5k_hw_nvram_read(ah,191U,& ah->ah_capabilities.cap_eeprom.ee_regdomain);
  
#line 84 
  if (tmp_3) 
#line 84 
             tmp_4 = 0; else 
#line 84 
                             tmp_4 = 1;
  
#line 84 
  if (tmp_4) {
    
#line 84 
    __retres = -5;
    
#line 84 
    goto return_label;
  }
  else ;
  
#line 85 
  tmp_5 = ath5k_hw_nvram_read(ah,193U,& ah->ah_capabilities.cap_eeprom.ee_version);
  
#line 85 
  if (tmp_5) 
#line 85 
             tmp_6 = 0; else 
#line 85 
                             tmp_6 = 1;
  
#line 85 
  if (tmp_6) {
    
#line 85 
    __retres = -5;
    
#line 85 
    goto return_label;
  }
  else ;
  
#line 86 
  tmp_7 = ath5k_hw_nvram_read(ah,194U,& ah->ah_capabilities.cap_eeprom.ee_header);
  
#line 86 
  if (tmp_7) 
#line 86 
             tmp_8 = 0; else 
#line 86 
                             tmp_8 = 1;
  
#line 86 
  if (tmp_8) {
    
#line 86 
    __retres = -5;
    
#line 86 
    goto return_label;
  }
  else ;
  
#line 89 
  if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version <= 12287U) {
    
#line 90 
    __retres = 0;
    
#line 90 
    goto return_label;
  }
  else ;
  
#line 96 
  tmp_9 = ath5k_hw_nvram_read(ah,28U,& val);
  
#line 96 
  if (tmp_9) 
#line 96 
             tmp_10 = 0; else 
#line 96 
                              tmp_10 = 1;
  
#line 96 
  if (tmp_10) {
    
#line 96 
    __retres = -5;
    
#line 96 
    goto return_label;
  }
  else ;
  
#line 97 
  if ((unsigned int)val != 0U) {
    int tmp_12;
    bool tmp_11;
    
#line 98 
    eep_max = (unsigned int)((int)val << 12) & 268369920U;
    
#line 100 
    tmp_11 = ath5k_hw_nvram_read(ah,27U,& val);
    
#line 100 
    if (tmp_11) 
#line 100 
                tmp_12 = 0; else 
#line 100 
                                 tmp_12 = 1;
    
#line 100 
    if (tmp_12) {
      
#line 100 
      __retres = -5;
      
#line 100 
      goto return_label;
    }
    else ;
    
#line 101 
    eep_max = ((unsigned int)val | eep_max) + 4294967104U;
    
#line 108 
    if (eep_max > 2496U) {
      int tmp_13;
      
#line 109 
      tmp_13 = net_ratelimit();
      
#line 109 
      if (tmp_13 != 0) 
#line 109 
                       _ath5k_printk((struct ath5k_hw const *)ah,"\001","Invalid max custom EEPROM size: ",eep_max,eep_max,2496,2496); else ;
      
#line 114 
      __retres = -5;
      
#line 114 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 118 
  cksum = 0U;
  
#line 118 
  offset = 0U;
  
#line 118 
  goto ldv_50420;
  ldv_50419: 
#line 119 
  ;
  
#line 119 
  tmp_14 = ath5k_hw_nvram_read(ah,offset + 192U,& val);
  
#line 119 
  if (tmp_14) 
#line 119 
              tmp_15 = 0; else 
#line 119 
                               tmp_15 = 1;
  
#line 119 
  if (tmp_15) {
    
#line 119 
    __retres = -5;
    
#line 119 
    goto return_label;
  }
  else ;
  
#line 120 
  cksum = (unsigned int)val ^ cksum;
  
#line 118 
  offset += 1U;
  ldv_50420: 
#line 119 
  ;
  
#line 118 
  if (offset < eep_max) 
#line 120 
                        goto ldv_50419; else 
#line 123 
                                             goto ldv_50421;
  ldv_50421: 
#line 124 
  ;
  
#line 122 
  if (cksum != 65535U) {
    int tmp_17;
    
#line 123 
    tmp_17 = net_ratelimit();
    
#line 123 
    if (tmp_17 != 0) {
      char *tmp_16;
      
#line 123 
      if (eep_max == 832U) 
#line 123 
                           tmp_16 = (char *)"default size"; else 
#line 123 
                                                                 tmp_16 = (char *)"custom size";
      
#line 123 
      ;
      
#line 123 
      ;
      
#line 123 
      ;
      
#line 123 
      _ath5k_printk((struct ath5k_hw const *)ah,"\001","Invalid EEPROM ",cksum,eep_max,tmp_16);
    }
    else ;
    
#line 128 
    __retres = -5;
    
#line 128 
    goto return_label;
  }
  else ;
  
#line 131 
  ;
  
#line 131 
  if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version > 12290U) 
    
#line 131 
    tmp_18 = 195; else 
#line 131 
                       tmp_18 = 196;
  
#line 131 
  ;
  
#line 131 
  tmp_19 = ath5k_hw_nvram_read(ah,(unsigned int)tmp_18,& ah->ah_capabilities.cap_eeprom.ee_ant_gain);
  
#line 131 
  if (tmp_19) 
#line 131 
              tmp_20 = 0; else 
#line 131 
                               tmp_20 = 1;
  
#line 131 
  if (tmp_20) {
    
#line 131 
    __retres = -5;
    
#line 131 
    goto return_label;
  }
  else ;
  
#line 134 
  if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version > 16383U) {
    int tmp_22;
    bool tmp_21;
    int tmp_24;
    bool tmp_23;
    int tmp_26;
    bool tmp_25;
    
#line 135 
    tmp_21 = ath5k_hw_nvram_read(ah,196U,& ah->ah_capabilities.cap_eeprom.ee_misc0);
    
#line 135 
    if (tmp_21) 
#line 135 
                tmp_22 = 0; else 
#line 135 
                                 tmp_22 = 1;
    
#line 135 
    if (tmp_22) {
      
#line 135 
      __retres = -5;
      
#line 135 
      goto return_label;
    }
    else ;
    
#line 136 
    tmp_23 = ath5k_hw_nvram_read(ah,197U,& ah->ah_capabilities.cap_eeprom.ee_misc1);
    
#line 136 
    if (tmp_23) 
#line 136 
                tmp_24 = 0; else 
#line 136 
                                 tmp_24 = 1;
    
#line 136 
    if (tmp_24) {
      
#line 136 
      __retres = -5;
      
#line 136 
      goto return_label;
    }
    else ;
    
#line 139 
    tmp_25 = ath5k_hw_nvram_read(ah,198U,& ah->ah_capabilities.cap_eeprom.ee_misc2);
    
#line 139 
    if (tmp_25) 
#line 139 
                tmp_26 = 0; else 
#line 139 
                                 tmp_26 = 1;
    
#line 139 
    if (tmp_26) {
      
#line 139 
      __retres = -5;
      
#line 139 
      goto return_label;
    }
    else ;
    
#line 141 
    if ((unsigned int)ee->ee_version > 16386U) {
      int tmp_28;
      bool tmp_27;
      
#line 142 
      tmp_27 = ath5k_hw_nvram_read(ah,199U,& ah->ah_capabilities.cap_eeprom.ee_misc3);
      
#line 142 
      if (tmp_27) 
#line 142 
                  tmp_28 = 0; else 
#line 142 
                                   tmp_28 = 1;
      
#line 142 
      if (tmp_28) {
        
#line 142 
        __retres = -5;
        
#line 142 
        goto return_label;
      }
      else ;
    }
    else ;
    
#line 144 
    if ((unsigned int)ee->ee_version > 20479U) {
      int tmp_30;
      bool tmp_29;
      int tmp_32;
      bool tmp_31;
      int tmp_34;
      bool tmp_33;
      
#line 145 
      tmp_29 = ath5k_hw_nvram_read(ah,200U,& ah->ah_capabilities.cap_eeprom.ee_misc4);
      
#line 145 
      if (tmp_29) 
#line 145 
                  tmp_30 = 0; else 
#line 145 
                                   tmp_30 = 1;
      
#line 145 
      if (tmp_30) {
        
#line 145 
        __retres = -5;
        
#line 145 
        goto return_label;
      }
      else ;
      
#line 146 
      tmp_31 = ath5k_hw_nvram_read(ah,201U,& ah->ah_capabilities.cap_eeprom.ee_misc5);
      
#line 146 
      if (tmp_31) 
#line 146 
                  tmp_32 = 0; else 
#line 146 
                                   tmp_32 = 1;
      
#line 146 
      if (tmp_32) {
        
#line 146 
        __retres = -5;
        
#line 146 
        goto return_label;
      }
      else ;
      
#line 147 
      tmp_33 = ath5k_hw_nvram_read(ah,202U,& ah->ah_capabilities.cap_eeprom.ee_misc6);
      
#line 147 
      if (tmp_33) 
#line 147 
                  tmp_34 = 0; else 
#line 147 
                                   tmp_34 = 1;
      
#line 147 
      if (tmp_34) {
        
#line 147 
        __retres = -5;
        
#line 147 
        goto return_label;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 151 
  if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version <= 12290U) {
    int tmp_36;
    bool tmp_35;
    int tmp_38;
    bool tmp_37;
    
#line 152 
    tmp_35 = ath5k_hw_nvram_read(ah,236U,& val);
    
#line 152 
    if (tmp_35) 
#line 152 
                tmp_36 = 0; else 
#line 152 
                                 tmp_36 = 1;
    
#line 152 
    if (tmp_36) {
      
#line 152 
      __retres = -5;
      
#line 152 
      goto return_label;
    }
    else ;
    
#line 153 
    ee->ee_ob[1][0] = (unsigned short)((unsigned int)val & 7U);
    
#line 154 
    ee->ee_db[1][0] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 3)) & 7U);
    
#line 156 
    tmp_37 = ath5k_hw_nvram_read(ah,237U,& val);
    
#line 156 
    if (tmp_37) 
#line 156 
                tmp_38 = 0; else 
#line 156 
                                 tmp_38 = 1;
    
#line 156 
    if (tmp_38) {
      
#line 156 
      __retres = -5;
      
#line 156 
      goto return_label;
    }
    else ;
    
#line 157 
    ee->ee_ob[2][0] = (unsigned short)((unsigned int)val & 7U);
    
#line 158 
    ee->ee_db[2][0] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 3)) & 7U);
  }
  else ;
  
#line 161 
  tmp_39 = ath5k_hw_nvram_read(ah,11U,& val);
  
#line 161 
  if (tmp_39) 
#line 161 
              tmp_40 = 0; else 
#line 161 
                               tmp_40 = 1;
  
#line 161 
  if (tmp_40) {
    
#line 161 
    __retres = -5;
    
#line 161 
    goto return_label;
  }
  else ;
  
#line 163 
  if ((unsigned int)ah->ah_mac_version == 14U && (unsigned int)val != 0U) 
    
#line 164 
    ee->ee_is_hb63 = (_Bool)1; else 
#line 166 
                                    ee->ee_is_hb63 = (_Bool)0;
  
#line 168 
  tmp_41 = ath5k_hw_nvram_read(ah,15U,& val);
  
#line 168 
  if (tmp_41) 
#line 168 
              tmp_42 = 0; else 
#line 168 
                               tmp_42 = 1;
  
#line 168 
  if (tmp_42) {
    
#line 168 
    __retres = -5;
    
#line 168 
    goto return_label;
  }
  else ;
  
#line 169 
  ee->ee_rfkill_pin = (unsigned char)((unsigned int)((unsigned char)((int)val >> 2)) & 7U);
  
#line 170 
  ee->ee_rfkill_pol = (_Bool)((((int)val >> 1) & 1) != 0);
  
#line 178 
  tmp_43 = ath5k_hw_nvram_read(ah,2U,& val);
  
#line 178 
  if (tmp_43) 
#line 178 
              tmp_44 = 0; else 
#line 178 
                               tmp_44 = 1;
  
#line 178 
  if (tmp_44) {
    
#line 178 
    __retres = -5;
    
#line 178 
    goto return_label;
  }
  else ;
  
#line 179 
  ee->ee_serdes = (_Bool)((unsigned int)val == 64U);
  
#line 182 
  __retres = 0;
  return_label: 
#line 182 
                return __retres;
}


#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.c"
static int ath5k_eeprom_read_ants(struct ath5k_hw *ah, u32 *offset, unsigned int mode)
{
  int __retres;
  u16 val;
  int tmp_1;
  bool tmp_0;
  u32 tmp;
  int tmp_4;
  bool tmp_3;
  u32 tmp_2;
  int tmp_5;
  int tmp_6;
  int tmp_7;
  int tmp_8;
  int tmp_11;
  bool tmp_10;
  u32 tmp_9;
  int tmp_12;
  int tmp_13;
  int tmp_16;
  bool tmp_15;
  u32 tmp_14;
  int tmp_17;
  int tmp_18;
  int tmp_19;
  int tmp_20;
  int tmp_23;
  bool tmp_22;
  u32 tmp_21;
  int tmp_24;
  int tmp_25;
  int tmp_26;
  int tmp_27;
  
#line 192 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 193 
  u32 o = *offset;
  
#line 195 
  int i = 0;
  
#line 197 
  tmp = o;
  
#line 197 
  o += 1U;
  
#line 197 
  ;
  
#line 197 
  ;
  
#line 197 
  tmp_0 = ath5k_hw_nvram_read(ah,tmp,& val);
  
#line 197 
  if (tmp_0) 
#line 197 
             tmp_1 = 0; else 
#line 197 
                             tmp_1 = 1;
  
#line 197 
  if (tmp_1) {
    
#line 197 
    __retres = -5;
    
#line 197 
    goto return_label;
  }
  else ;
  
#line 198 
  ee->ee_switch_settling[mode] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 8)) & 127U);
  
#line 199 
  ee->ee_atn_tx_rx[mode] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 2)) & 63U);
  
#line 200 
  ee->ee_ant_control[mode][i] = (unsigned short)((unsigned int)((unsigned short)((int)val << 4)) & 63U);
  
#line 202 
  tmp_2 = o;
  
#line 202 
  o += 1U;
  
#line 202 
  ;
  
#line 202 
  ;
  
#line 202 
  tmp_3 = ath5k_hw_nvram_read(ah,tmp_2,& val);
  
#line 202 
  if (tmp_3) 
#line 202 
             tmp_4 = 0; else 
#line 202 
                             tmp_4 = 1;
  
#line 202 
  if (tmp_4) {
    
#line 202 
    __retres = -5;
    
#line 202 
    goto return_label;
  }
  else ;
  
#line 203 
  tmp_5 = i;
  
#line 203 
  i += 1;
  
#line 203 
  tmp_6 = i;
  
#line 203 
  i += 1;
  
#line 203 
  ee->ee_ant_control[mode][tmp_5] = (unsigned short)((int)ee->ee_ant_control[mode][tmp_6] | ((int)val >> 12));
  
#line 204 
  tmp_7 = i;
  
#line 204 
  i += 1;
  
#line 204 
  ee->ee_ant_control[mode][tmp_7] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 6)) & 63U);
  
#line 205 
  tmp_8 = i;
  
#line 205 
  i += 1;
  
#line 205 
  ee->ee_ant_control[mode][tmp_8] = (unsigned short)((unsigned int)val & 63U);
  
#line 207 
  tmp_9 = o;
  
#line 207 
  o += 1U;
  
#line 207 
  ;
  
#line 207 
  ;
  
#line 207 
  tmp_10 = ath5k_hw_nvram_read(ah,tmp_9,& val);
  
#line 207 
  if (tmp_10) 
#line 207 
              tmp_11 = 0; else 
#line 207 
                               tmp_11 = 1;
  
#line 207 
  if (tmp_11) {
    
#line 207 
    __retres = -5;
    
#line 207 
    goto return_label;
  }
  else ;
  
#line 208 
  tmp_12 = i;
  
#line 208 
  i += 1;
  
#line 208 
  ee->ee_ant_control[mode][tmp_12] = (unsigned short)((int)val >> 10);
  
#line 209 
  tmp_13 = i;
  
#line 209 
  i += 1;
  
#line 209 
  ee->ee_ant_control[mode][tmp_13] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 4)) & 63U);
  
#line 210 
  ee->ee_ant_control[mode][i] = (unsigned short)((unsigned int)((unsigned short)((int)val << 2)) & 63U);
  
#line 212 
  tmp_14 = o;
  
#line 212 
  o += 1U;
  
#line 212 
  ;
  
#line 212 
  ;
  
#line 212 
  tmp_15 = ath5k_hw_nvram_read(ah,tmp_14,& val);
  
#line 212 
  if (tmp_15) 
#line 212 
              tmp_16 = 0; else 
#line 212 
                               tmp_16 = 1;
  
#line 212 
  if (tmp_16) {
    
#line 212 
    __retres = -5;
    
#line 212 
    goto return_label;
  }
  else ;
  
#line 213 
  tmp_17 = i;
  
#line 213 
  i += 1;
  
#line 213 
  tmp_18 = i;
  
#line 213 
  i += 1;
  
#line 213 
  ee->ee_ant_control[mode][tmp_17] = (unsigned short)((int)ee->ee_ant_control[mode][tmp_18] | ((int)val >> 14));
  
#line 214 
  tmp_19 = i;
  
#line 214 
  i += 1;
  
#line 214 
  ee->ee_ant_control[mode][tmp_19] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 8)) & 63U);
  
#line 215 
  tmp_20 = i;
  
#line 215 
  i += 1;
  
#line 215 
  ee->ee_ant_control[mode][tmp_20] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 2)) & 63U);
  
#line 216 
  ee->ee_ant_control[mode][i] = (unsigned short)((unsigned int)((unsigned short)((int)val << 4)) & 63U);
  
#line 218 
  tmp_21 = o;
  
#line 218 
  o += 1U;
  
#line 218 
  ;
  
#line 218 
  ;
  
#line 218 
  tmp_22 = ath5k_hw_nvram_read(ah,tmp_21,& val);
  
#line 218 
  if (tmp_22) 
#line 218 
              tmp_23 = 0; else 
#line 218 
                               tmp_23 = 1;
  
#line 218 
  if (tmp_23) {
    
#line 218 
    __retres = -5;
    
#line 218 
    goto return_label;
  }
  else ;
  
#line 219 
  tmp_24 = i;
  
#line 219 
  i += 1;
  
#line 219 
  tmp_25 = i;
  
#line 219 
  i += 1;
  
#line 219 
  ee->ee_ant_control[mode][tmp_24] = (unsigned short)((int)ee->ee_ant_control[mode][tmp_25] | ((int)val >> 12));
  
#line 220 
  tmp_26 = i;
  
#line 220 
  i += 1;
  
#line 220 
  ee->ee_ant_control[mode][tmp_26] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 6)) & 63U);
  
#line 221 
  tmp_27 = i;
  
#line 221 
  i += 1;
  
#line 221 
  ee->ee_ant_control[mode][tmp_27] = (unsigned short)((unsigned int)val & 63U);
  
#line 224 
  ah->ah_ant_ctl[mode][0] = (unsigned int)((int)ee->ee_ant_control[mode][0] << 4);
  
#line 226 
  ah->ah_ant_ctl[mode][1] = (unsigned int)(((((int)ee->ee_ant_control[mode][1] | ((int)ee->ee_ant_control[mode][2] << 6)) | ((int)ee->ee_ant_control[mode][3] << 12)) | ((int)ee->ee_ant_control[mode][4] << 18)) | ((int)ee->ee_ant_control[mode][5] << 24));
  
#line 232 
  ah->ah_ant_ctl[mode][2] = (unsigned int)(((((int)ee->ee_ant_control[mode][6] | ((int)ee->ee_ant_control[mode][7] << 6)) | ((int)ee->ee_ant_control[mode][8] << 12)) | ((int)ee->ee_ant_control[mode][9] << 18)) | ((int)ee->ee_ant_control[mode][10] << 24));
  
#line 240 
  *offset = o;
  
#line 242 
  __retres = 0;
  return_label: 
#line 242 
                return __retres;
}


#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.c"
static int ath5k_eeprom_read_modes(struct ath5k_hw *ah, u32 *offset, unsigned int mode)
{
  int __retres;
  u16 val;
  int tmp_1;
  bool tmp_0;
  u32 tmp;
  int tmp_7;
  bool tmp_6;
  u32 tmp_5;
  int tmp_10;
  bool tmp_9;
  u32 tmp_8;
  int tmp_13;
  bool tmp_12;
  u32 tmp_11;
  int tmp_16;
  bool tmp_15;
  u32 tmp_14;
  
#line 252 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 253 
  u32 o = *offset;
  
#line 256 
  ee->ee_n_piers[mode] = (unsigned char)0U;
  
#line 257 
  tmp = o;
  
#line 257 
  o += 1U;
  
#line 257 
  ;
  
#line 257 
  ;
  
#line 257 
  tmp_0 = ath5k_hw_nvram_read(ah,tmp,& val);
  
#line 257 
  if (tmp_0) 
#line 257 
             tmp_1 = 0; else 
#line 257 
                             tmp_1 = 1;
  
#line 257 
  if (tmp_1) {
    
#line 257 
    __retres = -5;
    
#line 257 
    goto return_label;
  }
  else ;
  
#line 258 
  ee->ee_adc_desired_size[mode] = (signed char)((int)val >> 8);
  
#line 259 
  switch (mode) {
    int tmp_4;
    bool tmp_3;
    u32 tmp_2;
    case (unsigned int)0: 
#line 260 
    ;
    
#line 261 
    ee->ee_ob[mode][3] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 5)) & 7U);
    
#line 262 
    ee->ee_db[mode][3] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 2)) & 7U);
    
#line 263 
    ee->ee_ob[mode][2] = (unsigned short)((unsigned int)((unsigned short)((int)val << 1)) & 7U);
    
#line 265 
    tmp_2 = o;
    
#line 265 
    o += 1U;
    
#line 265 
    ;
    
#line 265 
    ;
    
#line 265 
    tmp_3 = ath5k_hw_nvram_read(ah,tmp_2,& val);
    
#line 265 
    if (tmp_3) 
#line 265 
               tmp_4 = 0; else 
#line 265 
                               tmp_4 = 1;
    
#line 265 
    if (tmp_4) {
      
#line 265 
      __retres = -5;
      
#line 265 
      goto return_label;
    }
    else ;
    
#line 266 
    ee->ee_ob[mode][2] = (unsigned short)((int)ee->ee_ob[mode][2] | ((int)val >> 15));
    
#line 267 
    ee->ee_db[mode][2] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 12)) & 7U);
    
#line 268 
    ee->ee_ob[mode][1] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 9)) & 7U);
    
#line 269 
    ee->ee_db[mode][1] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 6)) & 7U);
    
#line 270 
    ee->ee_ob[mode][0] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 3)) & 7U);
    
#line 271 
    ee->ee_db[mode][0] = (unsigned short)((unsigned int)val & 7U);
    
#line 272 
    goto ldv_50440;
    case (unsigned int)2: 
#line 273 
    ;
    case (unsigned int)1: 
#line 274 
    ;
    
#line 275 
    ee->ee_ob[mode][1] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 4)) & 7U);
    
#line 276 
    ee->ee_db[mode][1] = (unsigned short)((unsigned int)val & 7U);
    
#line 277 
    goto ldv_50440;
  }
  ldv_50440: 
#line 280 
  ;
  
#line 280 
  tmp_5 = o;
  
#line 280 
  o += 1U;
  
#line 280 
  ;
  
#line 280 
  ;
  
#line 280 
  tmp_6 = ath5k_hw_nvram_read(ah,tmp_5,& val);
  
#line 280 
  if (tmp_6) 
#line 280 
             tmp_7 = 0; else 
#line 280 
                             tmp_7 = 1;
  
#line 280 
  if (tmp_7) {
    
#line 280 
    __retres = -5;
    
#line 280 
    goto return_label;
  }
  else ;
  
#line 281 
  ee->ee_tx_end2xlna_enable[mode] = (unsigned short)((int)val >> 8);
  
#line 282 
  ee->ee_thr_62[mode] = (unsigned short)((unsigned int)val & 255U);
  
#line 284 
  if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version <= 12290U) 
    
#line 285 
    if (mode == 0U) 
#line 285 
                    ee->ee_thr_62[mode] = (unsigned short)15U; else 
#line 285 
                                                                    ee->ee_thr_62[mode] = (unsigned short)28U;
  else ;
  
#line 287 
  tmp_8 = o;
  
#line 287 
  o += 1U;
  
#line 287 
  ;
  
#line 287 
  ;
  
#line 287 
  tmp_9 = ath5k_hw_nvram_read(ah,tmp_8,& val);
  
#line 287 
  if (tmp_9) 
#line 287 
             tmp_10 = 0; else 
#line 287 
                              tmp_10 = 1;
  
#line 287 
  if (tmp_10) {
    
#line 287 
    __retres = -5;
    
#line 287 
    goto return_label;
  }
  else ;
  
#line 288 
  ee->ee_tx_end2xpa_disable[mode] = (unsigned short)((int)val >> 8);
  
#line 289 
  ee->ee_tx_frm2xpa_enable[mode] = (unsigned short)((unsigned int)val & 255U);
  
#line 291 
  tmp_11 = o;
  
#line 291 
  o += 1U;
  
#line 291 
  ;
  
#line 291 
  ;
  
#line 291 
  tmp_12 = ath5k_hw_nvram_read(ah,tmp_11,& val);
  
#line 291 
  if (tmp_12) 
#line 291 
              tmp_13 = 0; else 
#line 291 
                               tmp_13 = 1;
  
#line 291 
  if (tmp_13) {
    
#line 291 
    __retres = -5;
    
#line 291 
    goto return_label;
  }
  else ;
  
#line 292 
  ee->ee_pga_desired_size[mode] = (signed char)((int)val >> 8);
  
#line 294 
  if (((int)val & 128) != 0) 
#line 295 
                             ee->ee_noise_floor_thr[mode] = (short)(~ ((unsigned int)(~ ((int)val)) & 255U)); else 
                                                                    
#line 297 
                                                                    ee->ee_noise_floor_thr[mode] = (short)((int)((short)val) & 255);
  
#line 299 
  if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version <= 12290U) 
    
#line 300 
    if (mode == 0U) 
#line 300 
                    ee->ee_noise_floor_thr[mode] = (short)(-54); else 
                                                                   
#line 300 
                                                                   ee->ee_noise_floor_thr[mode] = (short)(-1);
  else ;
  
#line 303 
  tmp_14 = o;
  
#line 303 
  o += 1U;
  
#line 303 
  ;
  
#line 303 
  ;
  
#line 303 
  tmp_15 = ath5k_hw_nvram_read(ah,tmp_14,& val);
  
#line 303 
  if (tmp_15) 
#line 303 
              tmp_16 = 0; else 
#line 303 
                               tmp_16 = 1;
  
#line 303 
  if (tmp_16) {
    
#line 303 
    __retres = -5;
    
#line 303 
    goto return_label;
  }
  else ;
  
#line 304 
  ee->ee_xlna_gain[mode] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 5)) & 255U);
  
#line 305 
  ee->ee_x_gain[mode] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 1)) & 15U);
  
#line 306 
  ee->ee_xpd[mode] = (unsigned short)((unsigned int)val & 1U);
  
#line 308 
  if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version > 16383U && mode != 1U) 
    
#line 310 
    ee->ee_fixed_bias[mode] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 13)) & 1U); else ;
  
#line 312 
  if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version > 12290U) {
    int tmp_19;
    bool tmp_18;
    u32 tmp_17;
    
#line 313 
    tmp_17 = o;
    
#line 313 
    o += 1U;
    
#line 313 
    ;
    
#line 313 
    ;
    
#line 313 
    tmp_18 = ath5k_hw_nvram_read(ah,tmp_17,& val);
    
#line 313 
    if (tmp_18) 
#line 313 
                tmp_19 = 0; else 
#line 313 
                                 tmp_19 = 1;
    
#line 313 
    if (tmp_19) {
      
#line 313 
      __retres = -5;
      
#line 313 
      goto return_label;
    }
    else ;
    
#line 314 
    ee->ee_false_detect[mode] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 6)) & 127U);
    
#line 316 
    if (mode == 0U) 
#line 317 
                    ee->ee_xr_power[mode] = (unsigned short)((unsigned int)val & 63U);
    else {
      
#line 320 
      ee->ee_ob[mode][0] = (unsigned short)((unsigned int)val & 7U);
      
#line 321 
      ee->ee_db[mode][0] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 3)) & 7U);
    }
  }
  else ;
  
#line 325 
  if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version <= 12291U) {
    
#line 326 
    ee->ee_i_gain[mode] = (unsigned short)10U;
    
#line 327 
    ee->ee_cck_ofdm_power_delta = (unsigned short)15U;
  }
  else {
    int tmp_22;
    bool tmp_21;
    u32 tmp_20;
    
#line 329 
    ee->ee_i_gain[mode] = (unsigned short)((int)val >> 13);
    
#line 331 
    tmp_20 = o;
    
#line 331 
    o += 1U;
    
#line 331 
    ;
    
#line 331 
    ;
    
#line 331 
    tmp_21 = ath5k_hw_nvram_read(ah,tmp_20,& val);
    
#line 331 
    if (tmp_21) 
#line 331 
                tmp_22 = 0; else 
#line 331 
                                 tmp_22 = 1;
    
#line 331 
    if (tmp_22) {
      
#line 331 
      __retres = -5;
      
#line 331 
      goto return_label;
    }
    else ;
    
#line 332 
    ee->ee_i_gain[mode] = (unsigned short)((int)ee->ee_i_gain[mode] | (((int)val << 3) & 56));
    
#line 334 
    if (mode == 2U) {
      
#line 335 
      ee->ee_cck_ofdm_power_delta = (unsigned short)((unsigned int)((unsigned short)((int)val >> 3)) & 255U);
      
#line 336 
      if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version > 16389U) 
        
#line 337 
        ee->ee_scaled_cck_delta = (unsigned short)((int)val >> 11); else ;
    }
    else ;
  }
  
#line 341 
  if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version > 16383U && mode == 0U) {
    
#line 343 
    ee->ee_i_cal[mode] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 8)) & 63U);
    
#line 344 
    ee->ee_q_cal[mode] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 3)) & 31U);
  }
  else ;
  
#line 347 
  if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version <= 16383U) 
    
#line 348 
    goto done; else ;
  
#line 353 
  switch (mode) {
    int tmp_25;
    bool tmp_24;
    u32 tmp_23;
    int tmp_28;
    bool tmp_27;
    u32 tmp_26;
    int tmp_31;
    bool tmp_30;
    u32 tmp_29;
    int tmp_34;
    bool tmp_33;
    u32 tmp_32;
    int tmp_37;
    bool tmp_36;
    u32 tmp_35;
    int tmp_40;
    bool tmp_39;
    u32 tmp_38;
    int tmp_43;
    bool tmp_42;
    u32 tmp_41;
    case (unsigned int)0: 
#line 354 
    ;
    
#line 355 
    if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version <= 16384U) 
      
#line 356 
      goto ldv_50445; else ;
    
#line 358 
    tmp_23 = o;
    
#line 358 
    o += 1U;
    
#line 358 
    ;
    
#line 358 
    ;
    
#line 358 
    tmp_24 = ath5k_hw_nvram_read(ah,tmp_23,& val);
    
#line 358 
    if (tmp_24) 
#line 358 
                tmp_25 = 0; else 
#line 358 
                                 tmp_25 = 1;
    
#line 358 
    if (tmp_25) {
      
#line 358 
      __retres = -5;
      
#line 358 
      goto return_label;
    }
    else ;
    
#line 359 
    ee->ee_margin_tx_rx[mode] = (unsigned short)((unsigned int)val & 63U);
    
#line 360 
    goto ldv_50445;
    case (unsigned int)1: 
#line 361 
    ;
    
#line 362 
    tmp_26 = o;
    
#line 362 
    o += 1U;
    
#line 362 
    ;
    
#line 362 
    ;
    
#line 362 
    tmp_27 = ath5k_hw_nvram_read(ah,tmp_26,& val);
    
#line 362 
    if (tmp_27) 
#line 362 
                tmp_28 = 0; else 
#line 362 
                                 tmp_28 = 1;
    
#line 362 
    if (tmp_28) {
      
#line 362 
      __retres = -5;
      
#line 362 
      goto return_label;
    }
    else ;
    
#line 364 
    ee->ee_pwr_cal_b[0].freq = ath5k_eeprom_bin2freq(ee,(unsigned short)((int)val & 255),mode);
    
#line 366 
    if ((unsigned int)ee->ee_pwr_cal_b[0].freq != 255U) 
#line 367 
                                                        ee->ee_n_piers[mode] = (u8)((int)ee->ee_n_piers[mode] + 1); else ;
    
#line 369 
    ee->ee_pwr_cal_b[1].freq = ath5k_eeprom_bin2freq(ee,(unsigned short)((int)val >> 8),mode);
    
#line 371 
    if ((unsigned int)ee->ee_pwr_cal_b[1].freq != 255U) 
#line 372 
                                                        ee->ee_n_piers[mode] = (u8)((int)ee->ee_n_piers[mode] + 1); else ;
    
#line 374 
    tmp_29 = o;
    
#line 374 
    o += 1U;
    
#line 374 
    ;
    
#line 374 
    ;
    
#line 374 
    tmp_30 = ath5k_hw_nvram_read(ah,tmp_29,& val);
    
#line 374 
    if (tmp_30) 
#line 374 
                tmp_31 = 0; else 
#line 374 
                                 tmp_31 = 1;
    
#line 374 
    if (tmp_31) {
      
#line 374 
      __retres = -5;
      
#line 374 
      goto return_label;
    }
    else ;
    
#line 375 
    ee->ee_pwr_cal_b[2].freq = ath5k_eeprom_bin2freq(ee,(unsigned short)((int)val & 255),mode);
    
#line 377 
    if ((unsigned int)ee->ee_pwr_cal_b[2].freq != 255U) 
#line 378 
                                                        ee->ee_n_piers[mode] = (u8)((int)ee->ee_n_piers[mode] + 1); else ;
    
#line 380 
    if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version > 16384U) 
      
#line 381 
      ee->ee_margin_tx_rx[mode] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 8)) & 63U); else ;
    
#line 382 
    goto ldv_50445;
    case (unsigned int)2: 
#line 383 
    ;
    
#line 384 
    tmp_32 = o;
    
#line 384 
    o += 1U;
    
#line 384 
    ;
    
#line 384 
    ;
    
#line 384 
    tmp_33 = ath5k_hw_nvram_read(ah,tmp_32,& val);
    
#line 384 
    if (tmp_33) 
#line 384 
                tmp_34 = 0; else 
#line 384 
                                 tmp_34 = 1;
    
#line 384 
    if (tmp_34) {
      
#line 384 
      __retres = -5;
      
#line 384 
      goto return_label;
    }
    else ;
    
#line 386 
    ee->ee_pwr_cal_g[0].freq = ath5k_eeprom_bin2freq(ee,(unsigned short)((int)val & 255),mode);
    
#line 388 
    if ((unsigned int)ee->ee_pwr_cal_g[0].freq != 255U) 
#line 389 
                                                        ee->ee_n_piers[mode] = (u8)((int)ee->ee_n_piers[mode] + 1); else ;
    
#line 391 
    ee->ee_pwr_cal_g[1].freq = ath5k_eeprom_bin2freq(ee,(unsigned short)((int)val >> 8),mode);
    
#line 393 
    if ((unsigned int)ee->ee_pwr_cal_g[1].freq != 255U) 
#line 394 
                                                        ee->ee_n_piers[mode] = (u8)((int)ee->ee_n_piers[mode] + 1); else ;
    
#line 396 
    tmp_35 = o;
    
#line 396 
    o += 1U;
    
#line 396 
    ;
    
#line 396 
    ;
    
#line 396 
    tmp_36 = ath5k_hw_nvram_read(ah,tmp_35,& val);
    
#line 396 
    if (tmp_36) 
#line 396 
                tmp_37 = 0; else 
#line 396 
                                 tmp_37 = 1;
    
#line 396 
    if (tmp_37) {
      
#line 396 
      __retres = -5;
      
#line 396 
      goto return_label;
    }
    else ;
    
#line 397 
    ee->ee_turbo_max_power[mode] = (unsigned short)((unsigned int)val & 127U);
    
#line 398 
    ee->ee_xr_power[mode] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 7)) & 63U);
    
#line 400 
    tmp_38 = o;
    
#line 400 
    o += 1U;
    
#line 400 
    ;
    
#line 400 
    ;
    
#line 400 
    tmp_39 = ath5k_hw_nvram_read(ah,tmp_38,& val);
    
#line 400 
    if (tmp_39) 
#line 400 
                tmp_40 = 0; else 
#line 400 
                                 tmp_40 = 1;
    
#line 400 
    if (tmp_40) {
      
#line 400 
      __retres = -5;
      
#line 400 
      goto return_label;
    }
    else ;
    
#line 401 
    ee->ee_pwr_cal_g[2].freq = ath5k_eeprom_bin2freq(ee,(unsigned short)((int)val & 255),mode);
    
#line 403 
    if ((unsigned int)ee->ee_pwr_cal_g[2].freq != 255U) 
#line 404 
                                                        ee->ee_n_piers[mode] = (u8)((int)ee->ee_n_piers[mode] + 1); else ;
    
#line 406 
    if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version > 16384U) 
      
#line 407 
      ee->ee_margin_tx_rx[mode] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 8)) & 63U); else ;
    
#line 409 
    tmp_41 = o;
    
#line 409 
    o += 1U;
    
#line 409 
    ;
    
#line 409 
    ;
    
#line 409 
    tmp_42 = ath5k_hw_nvram_read(ah,tmp_41,& val);
    
#line 409 
    if (tmp_42) 
#line 409 
                tmp_43 = 0; else 
#line 409 
                                 tmp_43 = 1;
    
#line 409 
    if (tmp_43) {
      
#line 409 
      __retres = -5;
      
#line 409 
      goto return_label;
    }
    else ;
    
#line 410 
    ee->ee_i_cal[mode] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 5)) & 63U);
    
#line 411 
    ee->ee_q_cal[mode] = (unsigned short)((unsigned int)val & 31U);
    
#line 413 
    if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version > 16385U) {
      int tmp_46;
      bool tmp_45;
      u32 tmp_44;
      
#line 414 
      tmp_44 = o;
      
#line 414 
      o += 1U;
      
#line 414 
      ;
      
#line 414 
      ;
      
#line 414 
      tmp_45 = ath5k_hw_nvram_read(ah,tmp_44,& val);
      
#line 414 
      if (tmp_45) 
#line 414 
                  tmp_46 = 0; else 
#line 414 
                                   tmp_46 = 1;
      
#line 414 
      if (tmp_46) {
        
#line 414 
        __retres = -5;
        
#line 414 
        goto return_label;
      }
      else ;
      
#line 415 
      ee->ee_cck_ofdm_gain_delta = (unsigned short)((unsigned int)val & 255U);
    }
    else ;
    
#line 417 
    goto ldv_50445;
  }
  ldv_50445: 
#line 423 
  ;
  
#line 423 
  if ((unsigned int)ee->ee_version <= 20479U) 
#line 424 
                                              goto done; else ;
  
#line 426 
  switch (mode) {
    int tmp_49;
    bool tmp_48;
    u32 tmp_47;
    int tmp_52;
    bool tmp_51;
    u32 tmp_50;
    int tmp_55;
    bool tmp_54;
    u32 tmp_53;
    int tmp_58;
    bool tmp_57;
    u32 tmp_56;
    case (unsigned int)0: 
#line 427 
    ;
    
#line 428 
    ee->ee_switch_settling_turbo[mode] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 6)) & 127U);
    
#line 430 
    ee->ee_atn_tx_rx_turbo[mode] = (unsigned short)((int)val >> 13);
    
#line 431 
    tmp_47 = o;
    
#line 431 
    o += 1U;
    
#line 431 
    ;
    
#line 431 
    ;
    
#line 431 
    tmp_48 = ath5k_hw_nvram_read(ah,tmp_47,& val);
    
#line 431 
    if (tmp_48) 
#line 431 
                tmp_49 = 0; else 
#line 431 
                                 tmp_49 = 1;
    
#line 431 
    if (tmp_49) {
      
#line 431 
      __retres = -5;
      
#line 431 
      goto return_label;
    }
    else ;
    
#line 432 
    ee->ee_atn_tx_rx_turbo[mode] = (unsigned short)((int)ee->ee_atn_tx_rx_turbo[mode] | (((int)val << 3) & 56));
    
#line 433 
    ee->ee_margin_tx_rx_turbo[mode] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 3)) & 63U);
    
#line 435 
    ee->ee_adc_desired_size_turbo[mode] = (signed char)((int)((signed char)((int)val >> 9)) & 127);
    
#line 436 
    tmp_50 = o;
    
#line 436 
    o += 1U;
    
#line 436 
    ;
    
#line 436 
    ;
    
#line 436 
    tmp_51 = ath5k_hw_nvram_read(ah,tmp_50,& val);
    
#line 436 
    if (tmp_51) 
#line 436 
                tmp_52 = 0; else 
#line 436 
                                 tmp_52 = 1;
    
#line 436 
    if (tmp_52) {
      
#line 436 
      __retres = -5;
      
#line 436 
      goto return_label;
    }
    else ;
    
#line 437 
    ee->ee_adc_desired_size_turbo[mode] = (signed char)((int)ee->ee_adc_desired_size_turbo[mode] | (int)((signed char)((int)val << 7)));
    
#line 438 
    ee->ee_pga_desired_size_turbo[mode] = (signed char)((int)val >> 1);
    
#line 440 
    if ((((int)ee->ee_misc0 >> 14) & 3) > 1) 
#line 441 
                                             ee->ee_pd_gain_overlap = (signed char)((int)((signed char)((int)val >> 9)) & 15); else ;
    
#line 442 
    goto ldv_50449;
    case (unsigned int)2: 
#line 443 
    ;
    
#line 444 
    ee->ee_switch_settling_turbo[mode] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 8)) & 127U);
    
#line 446 
    ee->ee_atn_tx_rx_turbo[mode] = (unsigned short)((int)val >> 15);
    
#line 447 
    tmp_53 = o;
    
#line 447 
    o += 1U;
    
#line 447 
    ;
    
#line 447 
    ;
    
#line 447 
    tmp_54 = ath5k_hw_nvram_read(ah,tmp_53,& val);
    
#line 447 
    if (tmp_54) 
#line 447 
                tmp_55 = 0; else 
#line 447 
                                 tmp_55 = 1;
    
#line 447 
    if (tmp_55) {
      
#line 447 
      __retres = -5;
      
#line 447 
      goto return_label;
    }
    else ;
    
#line 448 
    ee->ee_atn_tx_rx_turbo[mode] = (unsigned short)((int)ee->ee_atn_tx_rx_turbo[mode] | (((int)val << 1) & 62));
    
#line 449 
    ee->ee_margin_tx_rx_turbo[mode] = (unsigned short)((unsigned int)((unsigned short)((int)val >> 5)) & 63U);
    
#line 451 
    ee->ee_adc_desired_size_turbo[mode] = (signed char)((int)((signed char)((int)val >> 11)) & 127);
    
#line 452 
    tmp_56 = o;
    
#line 452 
    o += 1U;
    
#line 452 
    ;
    
#line 452 
    ;
    
#line 452 
    tmp_57 = ath5k_hw_nvram_read(ah,tmp_56,& val);
    
#line 452 
    if (tmp_57) 
#line 452 
                tmp_58 = 0; else 
#line 452 
                                 tmp_58 = 1;
    
#line 452 
    if (tmp_58) {
      
#line 452 
      __retres = -5;
      
#line 452 
      goto return_label;
    }
    else ;
    
#line 453 
    ee->ee_adc_desired_size_turbo[mode] = (signed char)((int)ee->ee_adc_desired_size_turbo[mode] | (int)((signed char)((int)val << 5)));
    
#line 454 
    ee->ee_pga_desired_size_turbo[mode] = (signed char)((int)val >> 3);
    
#line 455 
    goto ldv_50449;
  }
  ldv_50449: 
#line 458 
  ;
  done: 
#line 458 
  ;
  
#line 460 
  *offset = o;
  
#line 462 
  __retres = 0;
  return_label: 
#line 462 
                return __retres;
}


#line 467  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.c"
static int ath5k_eeprom_init_modes(struct ath5k_hw *ah)
{
  int __retres;
  u32 mode_offset[3U];
  unsigned int mode;
  u32 offset;
  int ret;
  int tmp;
  int tmp_0;
  int tmp_1;
  
#line 469 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 478 
  if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version > 12290U) 
    
#line 478 
    tmp = 212; else 
#line 478 
                    tmp = 197;
  
#line 478 
  mode_offset[0] = (unsigned int)tmp;
  
#line 479 
  if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version > 12290U) 
    
#line 479 
    tmp_0 = 242; else 
#line 479 
                      tmp_0 = 208;
  
#line 479 
  mode_offset[1] = (unsigned int)tmp_0;
  
#line 480 
  if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version > 12290U) 
    
#line 480 
    tmp_1 = 269; else 
#line 480 
                      tmp_1 = 218;
  
#line 480 
  mode_offset[2] = (unsigned int)tmp_1;
  
#line 482 
  ee->ee_turbo_max_power[0] = (unsigned short)((unsigned int)((unsigned short)((int)ee->ee_header >> 4)) & 127U);
  
#line 485 
  mode = 0U;
  
#line 485 
  goto ldv_50460;
  ldv_50459: 
#line 486 
  ;
  
#line 486 
  offset = mode_offset[mode];
  
#line 488 
  ret = ath5k_eeprom_read_ants(ah,& offset,mode);
  
#line 489 
  if (ret != 0) {
    
#line 490 
    __retres = ret;
    
#line 490 
    goto return_label;
  }
  else ;
  
#line 492 
  ret = ath5k_eeprom_read_modes(ah,& offset,mode);
  
#line 493 
  if (ret != 0) {
    
#line 494 
    __retres = ret;
    
#line 494 
    goto return_label;
  }
  else ;
  
#line 485 
  mode += 1U;
  ldv_50460: 
#line 486 
  ;
  
#line 485 
  if (mode <= 2U) 
#line 487 
                  goto ldv_50459; else 
#line 490 
                                       goto ldv_50461;
  ldv_50461: 
#line 491 
  ;
  
#line 498 
  if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version <= 12290U) {
    
#line 499 
    ee->ee_thr_62[0] = (unsigned short)15U;
    
#line 500 
    ee->ee_thr_62[1] = (unsigned short)28U;
    
#line 501 
    ee->ee_thr_62[2] = (unsigned short)28U;
  }
  else ;
  
#line 504 
  __retres = 0;
  return_label: 
#line 504 
                return __retres;
}


#line 510  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.c"
__inline static int ath5k_eeprom_read_freq_list(struct ath5k_hw *ah, int *offset, int max, struct ath5k_chan_pcal_info *pc, unsigned int mode)
{
  int __retres;
  u8 freq1;
  u8 freq2;
  u16 val;
  int tmp_1;
  bool tmp_0;
  int tmp;
  int tmp_2;
  int tmp_3;
  
#line 513 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 514 
  int o = *offset;
  
#line 515 
  int i = 0;
  
#line 519 
  ee->ee_n_piers[mode] = (unsigned char)0U;
  
#line 520 
  goto ldv_50477;
  ldv_50476: 
#line 521 
  ;
  
#line 521 
  tmp = o;
  
#line 521 
  o += 1;
  
#line 521 
  ;
  
#line 521 
  ;
  
#line 521 
  tmp_0 = ath5k_hw_nvram_read(ah,(unsigned int)tmp,& val);
  
#line 521 
  if (tmp_0) 
#line 521 
             tmp_1 = 0; else 
#line 521 
                             tmp_1 = 1;
  
#line 521 
  if (tmp_1) {
    
#line 521 
    __retres = -5;
    
#line 521 
    goto return_label;
  }
  else ;
  
#line 523 
  freq1 = (unsigned char)val;
  
#line 524 
  if ((unsigned int)freq1 == 0U) 
#line 525 
                                 goto ldv_50475; else ;
  
#line 527 
  tmp_2 = i;
  
#line 527 
  i += 1;
  
#line 527 
  (pc + tmp_2)->freq = ath5k_eeprom_bin2freq(ee,(unsigned short)((int)freq1),mode);
  
#line 529 
  ee->ee_n_piers[mode] = (u8)((int)ee->ee_n_piers[mode] + 1);
  
#line 531 
  freq2 = (unsigned char)((int)val >> 8);
  
#line 532 
  if ((unsigned int)freq2 == 0U) 
#line 533 
                                 goto ldv_50475; else ;
  
#line 535 
  tmp_3 = i;
  
#line 535 
  i += 1;
  
#line 535 
  (pc + tmp_3)->freq = ath5k_eeprom_bin2freq(ee,(unsigned short)((int)freq2),mode);
  
#line 537 
  ee->ee_n_piers[mode] = (u8)((int)ee->ee_n_piers[mode] + 1);
  ldv_50477: 
#line 538 
  ;
  
#line 520 
  if (i < max) 
#line 522 
               goto ldv_50476; else 
#line 525 
                                    goto ldv_50475;
  ldv_50475: 
#line 526 
  ;
  
#line 541 
  *offset = o;
  
#line 543 
  __retres = 0;
  return_label: 
#line 543 
                return __retres;
}


#line 548  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.c"
static int ath5k_eeprom_init_11a_pcal_freq(struct ath5k_hw *ah, int offset)
{
  int __retres;
  int i;
  u16 val;
  u8 mask;
  
#line 550 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 551 
  struct ath5k_chan_pcal_info *pcal = (struct ath5k_chan_pcal_info *)(& ee->ee_pwr_cal_a);
  
#line 556 
  if ((unsigned int)ee->ee_version > 12290U) 
#line 557 
                                             ath5k_eeprom_read_freq_list(ah,& offset,10,pcal,0U);
  else {
    int tmp_1;
    bool tmp_0;
    int tmp;
    int tmp_4;
    bool tmp_3;
    int tmp_2;
    int tmp_7;
    bool tmp_6;
    int tmp_5;
    int tmp_10;
    bool tmp_9;
    int tmp_8;
    int tmp_13;
    bool tmp_12;
    int tmp_11;
    
#line 561 
    if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version > 12290U) 
      
#line 561 
      mask = (unsigned char)255U; else 
#line 561 
                                       mask = (unsigned char)127U;
    
#line 563 
    tmp = offset;
    
#line 563 
    offset += 1;
    
#line 563 
    ;
    
#line 563 
    ;
    
#line 563 
    tmp_0 = ath5k_hw_nvram_read(ah,(unsigned int)tmp,& val);
    
#line 563 
    if (tmp_0) 
#line 563 
               tmp_1 = 0; else 
#line 563 
                               tmp_1 = 1;
    
#line 563 
    if (tmp_1) {
      
#line 563 
      __retres = -5;
      
#line 563 
      goto return_label;
    }
    else ;
    
#line 564 
    pcal->freq = (unsigned short)((int)((unsigned short)((int)val >> 9)) & (int)((unsigned short)mask));
    
#line 565 
    (pcal + 1U)->freq = (unsigned short)((int)((unsigned short)((int)val >> 2)) & (int)((unsigned short)mask));
    
#line 566 
    (pcal + 2U)->freq = (unsigned short)(((int)val << 5) & (int)mask);
    
#line 568 
    tmp_2 = offset;
    
#line 568 
    offset += 1;
    
#line 568 
    ;
    
#line 568 
    ;
    
#line 568 
    tmp_3 = ath5k_hw_nvram_read(ah,(unsigned int)tmp_2,& val);
    
#line 568 
    if (tmp_3) 
#line 568 
               tmp_4 = 0; else 
#line 568 
                               tmp_4 = 1;
    
#line 568 
    if (tmp_4) {
      
#line 568 
      __retres = -5;
      
#line 568 
      goto return_label;
    }
    else ;
    
#line 569 
    (pcal + 2U)->freq = (unsigned short)((int)(pcal + 2U)->freq | ((int)val >> 11));
    
#line 570 
    (pcal + 3U)->freq = (unsigned short)((int)((unsigned short)((int)val >> 4)) & (int)((unsigned short)mask));
    
#line 571 
    (pcal + 4U)->freq = (unsigned short)(((int)val << 3) & (int)mask);
    
#line 573 
    tmp_5 = offset;
    
#line 573 
    offset += 1;
    
#line 573 
    ;
    
#line 573 
    ;
    
#line 573 
    tmp_6 = ath5k_hw_nvram_read(ah,(unsigned int)tmp_5,& val);
    
#line 573 
    if (tmp_6) 
#line 573 
               tmp_7 = 0; else 
#line 573 
                               tmp_7 = 1;
    
#line 573 
    if (tmp_7) {
      
#line 573 
      __retres = -5;
      
#line 573 
      goto return_label;
    }
    else ;
    
#line 574 
    (pcal + 4U)->freq = (unsigned short)((int)(pcal + 4U)->freq | ((int)val >> 13));
    
#line 575 
    (pcal + 5U)->freq = (unsigned short)((int)((unsigned short)((int)val >> 6)) & (int)((unsigned short)mask));
    
#line 576 
    (pcal + 6U)->freq = (unsigned short)(((int)val << 1) & (int)mask);
    
#line 578 
    tmp_8 = offset;
    
#line 578 
    offset += 1;
    
#line 578 
    ;
    
#line 578 
    ;
    
#line 578 
    tmp_9 = ath5k_hw_nvram_read(ah,(unsigned int)tmp_8,& val);
    
#line 578 
    if (tmp_9) 
#line 578 
               tmp_10 = 0; else 
#line 578 
                                tmp_10 = 1;
    
#line 578 
    if (tmp_10) {
      
#line 578 
      __retres = -5;
      
#line 578 
      goto return_label;
    }
    else ;
    
#line 579 
    (pcal + 6U)->freq = (unsigned short)((int)(pcal + 6U)->freq | ((int)val >> 15));
    
#line 580 
    (pcal + 7U)->freq = (unsigned short)((int)((unsigned short)((int)val >> 8)) & (int)((unsigned short)mask));
    
#line 581 
    (pcal + 8U)->freq = (unsigned short)((int)((unsigned short)((int)val >> 1)) & (int)((unsigned short)mask));
    
#line 582 
    (pcal + 9U)->freq = (unsigned short)(((int)val << 6) & (int)mask);
    
#line 584 
    tmp_11 = offset;
    
#line 584 
    offset += 1;
    
#line 584 
    ;
    
#line 584 
    ;
    
#line 584 
    tmp_12 = ath5k_hw_nvram_read(ah,(unsigned int)tmp_11,& val);
    
#line 584 
    if (tmp_12) 
#line 584 
                tmp_13 = 0; else 
#line 584 
                                 tmp_13 = 1;
    
#line 584 
    if (tmp_13) {
      
#line 584 
      __retres = -5;
      
#line 584 
      goto return_label;
    }
    else ;
    
#line 585 
    (pcal + 9U)->freq = (unsigned short)((int)(pcal + 9U)->freq | ((int)val >> 10));
    
#line 588 
    ee->ee_n_piers[0] = (unsigned char)10U;
    
#line 590 
    i = 0;
    
#line 590 
    goto ldv_50488;
    ldv_50487: 
#line 591 
    ;
    
#line 591 
    (pcal + i)->freq = ath5k_eeprom_bin2freq(ee,(unsigned short)((int)(pcal + i)->freq),0U);
    
#line 590 
    i += 1;
    ldv_50488: 
#line 591 
    ;
    
#line 590 
    if (i <= 9) 
#line 592 
                goto ldv_50487; else 
#line 595 
                                     goto ldv_50489;
    ldv_50489: 
#line 596 
    ;
  }
  
#line 596 
  __retres = 0;
  return_label: 
#line 596 
                return __retres;
}


#line 601  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.c"
__inline static int ath5k_eeprom_init_11bg_2413(struct ath5k_hw *ah, unsigned int mode, int offset)
{
  int __retres;
  struct ath5k_chan_pcal_info *pcal;
  
#line 603 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 606 
  switch (mode) {
    case (unsigned int)1: 
#line 607 
    ;
    
#line 608 
    pcal = (struct ath5k_chan_pcal_info *)(& ee->ee_pwr_cal_b);
    
#line 609 
    goto ldv_50498;
    case (unsigned int)2: 
#line 610 
    ;
    
#line 611 
    pcal = (struct ath5k_chan_pcal_info *)(& ee->ee_pwr_cal_g);
    
#line 612 
    goto ldv_50498;
    default: 
#line 613 
    ;
    
#line 614 
    __retres = -22;
    
#line 614 
    goto return_label;
  }
  ldv_50498: 
#line 617 
  ;
  
#line 617 
  ath5k_eeprom_read_freq_list(ah,& offset,4,pcal,mode);
  
#line 621 
  __retres = 0;
  return_label: 
#line 621 
                return __retres;
}


#line 646  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.c"
__inline static void ath5k_get_pcdac_intercepts(struct ath5k_hw *ah, u8 min, u8 max, u8 *vp)
{
  u16 const *ip;
  int i;
  
#line 648 
  u16 const intercepts3[11U] = {(unsigned short)0U, (unsigned short)5U, (unsigned short)10U, (unsigned short)20U, (unsigned short)30U, (unsigned short)50U, (unsigned short)70U, (unsigned short)85U, (unsigned short)90U, (unsigned short)95U, (unsigned short)100U};
  
#line 651 
  u16 const intercepts3_2[11U] = {(unsigned short)0U, (unsigned short)10U, (unsigned short)20U, (unsigned short)30U, (unsigned short)40U, (unsigned short)50U, (unsigned short)60U, (unsigned short)70U, (unsigned short)80U, (unsigned short)90U, (unsigned short)100U};
  
#line 657 
  if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version > 12289U) 
    
#line 658 
    ip = (u16 const *)(& intercepts3_2); else 
#line 660 
                                              ip = (u16 const *)(& intercepts3);
  
#line 662 
  i = 0;
  
#line 662 
  goto ldv_50515;
  ldv_50514: 
#line 663 
  ;
  
#line 663 
  *(vp + i) = (unsigned char)(((int)*(ip + i) * (int)max + (100 - (int)*(ip + i)) * (int)min) / 100);
  
#line 662 
  i += 1;
  ldv_50515: 
#line 663 
  ;
  
#line 662 
  if ((unsigned int)i <= 10U) 
#line 664 
                              goto ldv_50514; else 
#line 667 
                                                   goto ldv_50516;
  ldv_50516: 
#line 668 
  ;
  
#line 669 
  return;
}


#line 667  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.c"
static int ath5k_eeprom_free_pcal_info(struct ath5k_hw *ah, int mode)
{
  int __retres;
  struct ath5k_chan_pcal_info *chinfo;
  u8 pier;
  u8 pdg;
  
#line 669 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 673 
  switch (mode) {
    case 0: 
#line 674 
    ;
    
#line 675 
    if (((int)ee->ee_header & 1) == 0) {
      
#line 676 
      __retres = 0;
      
#line 676 
      goto return_label;
    }
    else ;
    
#line 677 
    chinfo = (struct ath5k_chan_pcal_info *)(& ee->ee_pwr_cal_a);
    
#line 678 
    goto ldv_50526;
    case 1: 
#line 679 
    ;
    
#line 680 
    if ((((int)ee->ee_header >> 1) & 1) == 0) {
      
#line 681 
      __retres = 0;
      
#line 681 
      goto return_label;
    }
    else ;
    
#line 682 
    chinfo = (struct ath5k_chan_pcal_info *)(& ee->ee_pwr_cal_b);
    
#line 683 
    goto ldv_50526;
    case 2: 
#line 684 
    ;
    
#line 685 
    if ((((int)ee->ee_header >> 2) & 1) == 0) {
      
#line 686 
      __retres = 0;
      
#line 686 
      goto return_label;
    }
    else ;
    
#line 687 
    chinfo = (struct ath5k_chan_pcal_info *)(& ee->ee_pwr_cal_g);
    
#line 688 
    goto ldv_50526;
    default: 
#line 689 
    ;
    
#line 690 
    __retres = -22;
    
#line 690 
    goto return_label;
  }
  ldv_50526: 
#line 693 
  ;
  
#line 693 
  pier = (unsigned char)0U;
  
#line 693 
  goto ldv_50536;
  ldv_50535: 
#line 694 
  ;
  
#line 694 
  if ((chinfo + (int)pier)->pd_curves == (struct ath5k_pdgain_info *)0) 
    
#line 695 
    goto ldv_50530; else ;
  
#line 697 
  pdg = (unsigned char)0U;
  
#line 697 
  goto ldv_50533;
  ldv_50532: 
#line 698 
  ;
  {
    
#line 698 
    struct ath5k_pdgain_info *pd = (chinfo + (int)pier)->pd_curves + (int)pdg;
    
#line 701 
    kfree((void const *)pd->pd_step);
    
#line 702 
    kfree((void const *)pd->pd_pwr);
  }
  
#line 697 
  pdg = (u8)((int)pdg + 1);
  ldv_50533: 
#line 698 
  ;
  
#line 697 
  if ((unsigned int)pdg <= 3U) 
#line 699 
                               goto ldv_50532; else 
#line 702 
                                                    goto ldv_50534;
  ldv_50534: 
#line 703 
  ;
  
#line 705 
  kfree((void const *)(chinfo + (int)pier)->pd_curves);
  ldv_50530: 
#line 706 
  ;
  
#line 693 
  pier = (u8)((int)pier + 1);
  ldv_50536: 
#line 694 
  ;
  
#line 693 
  if ((int)ee->ee_n_piers[mode] > (int)pier) 
#line 695 
                                             goto ldv_50535; else 
#line 698 
                                                                  goto ldv_50537;
  ldv_50537: 
#line 699 
  ;
  
#line 708 
  __retres = 0;
  return_label: 
#line 708 
                return __retres;
}


#line 714  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.c"
static int ath5k_eeprom_convert_pcal_info_5111(struct ath5k_hw *ah, int mode, struct ath5k_chan_pcal_info *chinfo)
{
  int __retres;
  struct ath5k_chan_pcal_info_rf5111 *pcinfo;
  struct ath5k_pdgain_info *pd;
  u8 pier;
  u8 point;
  u8 idx;
  
#line 717 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 721 
  u8 *pdgain_idx = (u8 *)(& ee->ee_pdc_to_idx[mode]);
  
#line 724 
  pier = (unsigned char)0U;
  
#line 724 
  goto ldv_50558;
  ldv_50557: 
#line 725 
  ;
  
#line 726 
  pcinfo = & (chinfo + (int)pier)->__anonCompField_ath5k_chan_pcal_info_102.rf5111_info;
  
#line 730 
  (chinfo + (int)pier)->pd_curves = (struct ath5k_pdgain_info *)kcalloc(4UL,24UL,208U);
  
#line 734 
  if ((chinfo + (int)pier)->pd_curves == (struct ath5k_pdgain_info *)0) 
    
#line 735 
    goto err_out; else ;
  
#line 741 
  idx = (unsigned char)0U;
  
#line 741 
  goto ldv_50553;
  ldv_50552: 
#line 742 
  ;
  
#line 743 
  if ((((int)ee->ee_x_gain[mode] >> (int)idx) & 1) == 0) {
    
#line 744 
    *pdgain_idx = idx;
    
#line 745 
    goto ldv_50551;
  }
  else ;
  
#line 741 
  idx = (u8)((int)idx + 1);
  ldv_50553: 
#line 742 
  ;
  
#line 741 
  if ((unsigned int)idx <= 3U) 
#line 743 
                               goto ldv_50552; else 
#line 746 
                                                    goto ldv_50551;
  ldv_50551: 
#line 747 
  ;
  
#line 749 
  ee->ee_pd_gains[mode] = (unsigned char)1U;
  
#line 751 
  pd = (chinfo + (int)pier)->pd_curves + (int)idx;
  
#line 753 
  pd->pd_points = (unsigned char)11U;
  
#line 756 
  pd->pd_step = (u8 *)kcalloc(11UL,1UL,208U);
  
#line 758 
  if (pd->pd_step == (u8 *)0U) 
#line 759 
                               goto err_out; else ;
  
#line 761 
  pd->pd_pwr = (s16 *)kcalloc(11UL,2UL,208U);
  
#line 763 
  if (pd->pd_pwr == (s16 *)0) 
#line 764 
                              goto err_out; else ;
  
#line 769 
  point = (unsigned char)0U;
  
#line 769 
  goto ldv_50555;
  ldv_50554: 
#line 770 
  ;
  
#line 772 
  *(pd->pd_pwr + (int)point) = (short)((unsigned int)pcinfo->pwr[(int)point] * 2U);
  
#line 775 
  *(pd->pd_step + (int)point) = pcinfo->pcdac[(int)point];
  
#line 769 
  point = (u8)((int)point + 1);
  ldv_50555: 
#line 770 
  ;
  
#line 769 
  if ((int)pd->pd_points > (int)point) 
#line 771 
                                       goto ldv_50554; else 
#line 774 
                                                            goto ldv_50556;
  ldv_50556: 
#line 775 
  ;
  
#line 779 
  (chinfo + (int)pier)->min_pwr = *(pd->pd_pwr);
  
#line 780 
  (chinfo + (int)pier)->max_pwr = *(pd->pd_pwr + 10U);
  
#line 724 
  pier = (u8)((int)pier + 1);
  ldv_50558: 
#line 725 
  ;
  
#line 724 
  if ((int)ee->ee_n_piers[mode] > (int)pier) 
#line 726 
                                             goto ldv_50557; else 
#line 729 
                                                                  goto ldv_50559;
  ldv_50559: 
#line 730 
  ;
  
#line 784 
  __retres = 0;
  
#line 784 
  goto return_label;
  err_out: 
#line 786 
  ;
  
#line 787 
  ath5k_eeprom_free_pcal_info(ah,mode);
  
#line 788 
  __retres = -12;
  return_label: 
#line 788 
                return __retres;
}


#line 793  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.c"
static int ath5k_eeprom_read_pcal_info_5111(struct ath5k_hw *ah, int mode)
{
  int __retres;
  struct ath5k_chan_pcal_info *pcal;
  int offset;
  int ret;
  int i;
  u16 val;
  int tmp_14;
  
#line 795 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 801 
  if ((unsigned int)ee->ee_version > 12290U) 
#line 801 
                                             offset = 336; else 
#line 801 
                                                                offset = 256;
  
#line 802 
  switch (mode) {
    case 0: 
#line 803 
    ;
    
#line 804 
    if (((int)ee->ee_header & 1) == 0) {
      
#line 805 
      __retres = 0;
      
#line 805 
      goto return_label;
    }
    else ;
    
#line 807 
    ret = ath5k_eeprom_init_11a_pcal_freq(ah,offset);
    
#line 809 
    if (ret < 0) {
      
#line 810 
      __retres = ret;
      
#line 810 
      goto return_label;
    }
    else ;
    
#line 812 
    offset += 5;
    
#line 813 
    pcal = (struct ath5k_chan_pcal_info *)(& ee->ee_pwr_cal_a);
    
#line 814 
    goto ldv_50571;
    case 1: 
#line 815 
    ;
    
#line 816 
    if ((((int)ee->ee_header >> 1) & 1) == 0 && (((int)ee->ee_header >> 2) & 1) == 0) {
      
#line 818 
      __retres = 0;
      
#line 818 
      goto return_label;
    }
    else ;
    
#line 820 
    pcal = (struct ath5k_chan_pcal_info *)(& ee->ee_pwr_cal_b);
    
#line 821 
    offset += 55;
    
#line 824 
    pcal->freq = (unsigned short)2412U;
    
#line 825 
    (pcal + 1U)->freq = (unsigned short)2447U;
    
#line 826 
    (pcal + 2U)->freq = (unsigned short)2484U;
    
#line 827 
    ee->ee_n_piers[mode] = (unsigned char)3U;
    
#line 828 
    goto ldv_50571;
    case 2: 
#line 829 
    ;
    
#line 830 
    if ((((int)ee->ee_header >> 2) & 1) == 0) {
      
#line 831 
      __retres = 0;
      
#line 831 
      goto return_label;
    }
    else ;
    
#line 833 
    pcal = (struct ath5k_chan_pcal_info *)(& ee->ee_pwr_cal_g);
    
#line 834 
    offset += 70;
    
#line 837 
    pcal->freq = (unsigned short)2312U;
    
#line 838 
    (pcal + 1U)->freq = (unsigned short)2412U;
    
#line 839 
    (pcal + 2U)->freq = (unsigned short)2484U;
    
#line 840 
    ee->ee_n_piers[mode] = (unsigned char)3U;
    
#line 841 
    goto ldv_50571;
    default: 
#line 842 
    ;
    
#line 843 
    __retres = -22;
    
#line 843 
    goto return_label;
  }
  ldv_50571: 
#line 846 
  ;
  
#line 846 
  i = 0;
  
#line 846 
  goto ldv_50577;
  ldv_50576: 
#line 847 
  ;
  {
    int tmp_1;
    bool tmp_0;
    int tmp;
    int tmp_4;
    bool tmp_3;
    int tmp_2;
    int tmp_7;
    bool tmp_6;
    int tmp_5;
    int tmp_10;
    bool tmp_9;
    int tmp_8;
    int tmp_13;
    bool tmp_12;
    int tmp_11;
    
#line 847 
    struct ath5k_chan_pcal_info_rf5111 *cdata = & (pcal + i)->__anonCompField_ath5k_chan_pcal_info_102.rf5111_info;
    
#line 850 
    tmp = offset;
    
#line 850 
    offset += 1;
    
#line 850 
    ;
    
#line 850 
    ;
    
#line 850 
    tmp_0 = ath5k_hw_nvram_read(ah,(unsigned int)tmp,& val);
    
#line 850 
    if (tmp_0) 
#line 850 
               tmp_1 = 0; else 
#line 850 
                               tmp_1 = 1;
    
#line 850 
    if (tmp_1) {
      
#line 850 
      __retres = -5;
      
#line 850 
      goto return_label;
    }
    else ;
    
#line 851 
    cdata->pcdac_max = (unsigned char)((unsigned int)((unsigned char)((int)val >> 10)) & 63U);
    
#line 852 
    cdata->pcdac_min = (unsigned char)((unsigned int)((unsigned char)((int)val >> 4)) & 63U);
    
#line 853 
    cdata->pwr[0] = (unsigned char)((unsigned int)((unsigned char)((int)val << 2)) & 63U);
    
#line 855 
    tmp_2 = offset;
    
#line 855 
    offset += 1;
    
#line 855 
    ;
    
#line 855 
    ;
    
#line 855 
    tmp_3 = ath5k_hw_nvram_read(ah,(unsigned int)tmp_2,& val);
    
#line 855 
    if (tmp_3) 
#line 855 
               tmp_4 = 0; else 
#line 855 
                               tmp_4 = 1;
    
#line 855 
    if (tmp_4) {
      
#line 855 
      __retres = -5;
      
#line 855 
      goto return_label;
    }
    else ;
    
#line 856 
    cdata->pwr[0] = (unsigned char)((int)cdata->pwr[0] | (((int)val >> 14) & 3));
    
#line 857 
    cdata->pwr[1] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 8)) & 63U);
    
#line 858 
    cdata->pwr[2] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 2)) & 63U);
    
#line 859 
    cdata->pwr[3] = (unsigned char)((unsigned int)((unsigned char)((int)val << 4)) & 63U);
    
#line 861 
    tmp_5 = offset;
    
#line 861 
    offset += 1;
    
#line 861 
    ;
    
#line 861 
    ;
    
#line 861 
    tmp_6 = ath5k_hw_nvram_read(ah,(unsigned int)tmp_5,& val);
    
#line 861 
    if (tmp_6) 
#line 861 
               tmp_7 = 0; else 
#line 861 
                               tmp_7 = 1;
    
#line 861 
    if (tmp_7) {
      
#line 861 
      __retres = -5;
      
#line 861 
      goto return_label;
    }
    else ;
    
#line 862 
    cdata->pwr[3] = (unsigned char)((int)cdata->pwr[3] | (((int)val >> 12) & 15));
    
#line 863 
    cdata->pwr[4] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 6)) & 63U);
    
#line 864 
    cdata->pwr[5] = (unsigned char)((unsigned int)((unsigned char)val) & 63U);
    
#line 866 
    tmp_8 = offset;
    
#line 866 
    offset += 1;
    
#line 866 
    ;
    
#line 866 
    ;
    
#line 866 
    tmp_9 = ath5k_hw_nvram_read(ah,(unsigned int)tmp_8,& val);
    
#line 866 
    if (tmp_9) 
#line 866 
               tmp_10 = 0; else 
#line 866 
                                tmp_10 = 1;
    
#line 866 
    if (tmp_10) {
      
#line 866 
      __retres = -5;
      
#line 866 
      goto return_label;
    }
    else ;
    
#line 867 
    cdata->pwr[6] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 10)) & 63U);
    
#line 868 
    cdata->pwr[7] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 4)) & 63U);
    
#line 869 
    cdata->pwr[8] = (unsigned char)((unsigned int)((unsigned char)((int)val << 2)) & 63U);
    
#line 871 
    tmp_11 = offset;
    
#line 871 
    offset += 1;
    
#line 871 
    ;
    
#line 871 
    ;
    
#line 871 
    tmp_12 = ath5k_hw_nvram_read(ah,(unsigned int)tmp_11,& val);
    
#line 871 
    if (tmp_12) 
#line 871 
                tmp_13 = 0; else 
#line 871 
                                 tmp_13 = 1;
    
#line 871 
    if (tmp_13) {
      
#line 871 
      __retres = -5;
      
#line 871 
      goto return_label;
    }
    else ;
    
#line 872 
    cdata->pwr[8] = (unsigned char)((int)cdata->pwr[8] | (((int)val >> 14) & 3));
    
#line 873 
    cdata->pwr[9] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 8)) & 63U);
    
#line 874 
    cdata->pwr[10] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 2)) & 63U);
    
#line 876 
    ath5k_get_pcdac_intercepts(ah,(unsigned char)((int)cdata->pcdac_min),(unsigned char)((int)cdata->pcdac_max),(u8 *)(& cdata->pcdac));
  }
  
#line 846 
  i += 1;
  ldv_50577: 
#line 847 
  ;
  
#line 846 
  if ((int)ee->ee_n_piers[mode] > i) 
#line 848 
                                     goto ldv_50576; else 
#line 851 
                                                          goto ldv_50578;
  ldv_50578: 
#line 852 
  ;
  
#line 880 
  tmp_14 = ath5k_eeprom_convert_pcal_info_5111(ah,mode,pcal);
  
#line 880 
  __retres = tmp_14;
  return_label: 
#line 880 
                return __retres;
}


#line 902  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.c"
static int ath5k_eeprom_convert_pcal_info_5112(struct ath5k_hw *ah, int mode, struct ath5k_chan_pcal_info *chinfo)
{
  int __retres;
  struct ath5k_chan_pcal_info_rf5112 *pcinfo;
  unsigned int pier;
  unsigned int pdg;
  unsigned int point;
  
#line 905 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 907 
  u8 *pdgain_idx = (u8 *)(& ee->ee_pdc_to_idx[mode]);
  
#line 911 
  pier = 0U;
  
#line 911 
  goto ldv_50603;
  ldv_50602: 
#line 912 
  ;
  
#line 913 
  pcinfo = & (chinfo + pier)->__anonCompField_ath5k_chan_pcal_info_102.rf5112_info;
  
#line 917 
  (chinfo + pier)->pd_curves = (struct ath5k_pdgain_info *)kcalloc(4UL,24UL,208U);
  
#line 921 
  if ((chinfo + pier)->pd_curves == (struct ath5k_pdgain_info *)0) 
#line 922 
                                                                   goto err_out; else ;
  
#line 925 
  pdg = 0U;
  
#line 925 
  goto ldv_50600;
  ldv_50599: 
#line 926 
  ;
  {
    
#line 927 
    u8 idx = *(pdgain_idx + pdg);
    
#line 928 
    struct ath5k_pdgain_info *pd = (chinfo + pier)->pd_curves + (int)idx;
    
#line 932 
    if (pdg == 0U) {
      
#line 934 
      pd->pd_points = (unsigned char)4U;
      
#line 937 
      pd->pd_step = (u8 *)kcalloc((unsigned long)pd->pd_points,1UL,208U);
      
#line 940 
      if (pd->pd_step == (u8 *)0U) 
#line 941 
                                   goto err_out; else ;
      
#line 943 
      pd->pd_pwr = (s16 *)kcalloc((unsigned long)pd->pd_points,2UL,208U);
      
#line 946 
      if (pd->pd_pwr == (s16 *)0) 
#line 947 
                                  goto err_out; else ;
      
#line 951 
      *(pd->pd_step) = pcinfo->pcdac_x0[0];
      
#line 952 
      *(pd->pd_pwr) = (short)pcinfo->pwr_x0[0];
      
#line 954 
      point = 1U;
      
#line 954 
      goto ldv_50594;
      ldv_50593: 
#line 955 
      ;
      
#line 957 
      *(pd->pd_pwr + point) = (short)pcinfo->pwr_x0[point];
      
#line 961 
      *(pd->pd_step + point) = (unsigned char)((int)*(pd->pd_step + (point + 4294967295U)) + (int)pcinfo->pcdac_x0[point]);
      
#line 955 
      point += 1U;
      ldv_50594: 
#line 956 
      ;
      
#line 954 
      if ((unsigned int)pd->pd_points > point) 
#line 956 
                                               goto ldv_50593; else 
#line 959 
                                                                    goto ldv_50595;
      ldv_50595: 
#line 960 
      ;
      
#line 967 
      (chinfo + pier)->min_pwr = *(pd->pd_pwr);
    }
    else 
      
#line 970 
      if (pdg == 1U) {
        
#line 972 
        pd->pd_points = (unsigned char)3U;
        
#line 975 
        pd->pd_step = (u8 *)kcalloc((unsigned long)pd->pd_points,1UL,208U);
        
#line 978 
        if (pd->pd_step == (u8 *)0U) 
#line 979 
                                     goto err_out; else ;
        
#line 981 
        pd->pd_pwr = (s16 *)kcalloc((unsigned long)pd->pd_points,2UL,208U);
        
#line 984 
        if (pd->pd_pwr == (s16 *)0) 
#line 985 
                                    goto err_out; else ;
        
#line 989 
        point = 0U;
        
#line 989 
        goto ldv_50597;
        ldv_50596: 
#line 990 
        ;
        
#line 992 
        *(pd->pd_pwr + point) = (short)pcinfo->pwr_x3[point];
        
#line 996 
        *(pd->pd_step + point) = pcinfo->pcdac_x3[point];
        
#line 990 
        point += 1U;
        ldv_50597: 
#line 991 
        ;
        
#line 989 
        if ((unsigned int)pd->pd_points > point) 
#line 991 
                                                 goto ldv_50596; else 
                                                                   
#line 994 
                                                                   goto ldv_50598;
        ldv_50598: 
#line 995 
        ;
        
#line 1002 
        (chinfo + pier)->min_pwr = *(pd->pd_pwr);
      }
      else ;
  }
  
#line 925 
  pdg += 1U;
  ldv_50600: 
#line 926 
  ;
  
#line 925 
  if ((unsigned int)ee->ee_pd_gains[mode] > pdg) 
#line 927 
                                                 goto ldv_50599; else 
                                                                   
#line 930 
                                                                   goto ldv_50601;
  ldv_50601: 
#line 931 
  ;
  
#line 911 
  pier += 1U;
  ldv_50603: 
#line 912 
  ;
  
#line 911 
  if ((unsigned int)ee->ee_n_piers[mode] > pier) 
#line 913 
                                                 goto ldv_50602; else 
                                                                   
#line 916 
                                                                   goto ldv_50604;
  ldv_50604: 
#line 917 
  ;
  
#line 1007 
  __retres = 0;
  
#line 1007 
  goto return_label;
  err_out: 
#line 1009 
  ;
  
#line 1010 
  ath5k_eeprom_free_pcal_info(ah,mode);
  
#line 1011 
  __retres = -12;
  return_label: 
#line 1011 
                return __retres;
}


#line 1016  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.c"
static int ath5k_eeprom_read_pcal_info_5112(struct ath5k_hw *ah, int mode)
{
  int __retres;
  struct ath5k_chan_pcal_info_rf5112 *chan_pcal_info;
  struct ath5k_chan_pcal_info *gen_chan_info;
  u32 offset;
  u8 i;
  u8 c;
  u16 val;
  int tmp_5;
  bool tmp_4;
  u32 tmp_3;
  int tmp_8;
  bool tmp_7;
  u32 tmp_6;
  int tmp_11;
  bool tmp_10;
  u32 tmp_9;
  int tmp_14;
  bool tmp_13;
  u32 tmp_12;
  int tmp_15;
  
#line 1018 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 1021 
  u8 *pdgain_idx = (u8 *)(& ee->ee_pdc_to_idx[mode]);
  
#line 1025 
  u8 pd_gains = (unsigned char)0U;
  
#line 1032 
  i = (unsigned char)0U;
  
#line 1032 
  goto ldv_50619;
  ldv_50618: 
#line 1033 
  ;
  
#line 1034 
  if ((((int)ee->ee_x_gain[mode] >> (int)i) & 1) != 0) {
    u8 tmp;
    
#line 1035 
    tmp = pd_gains;
    
#line 1035 
    pd_gains = (u8)((int)pd_gains + 1);
    
#line 1035 
    *(pdgain_idx + (int)tmp) = i;
  }
  else ;
  
#line 1032 
  i = (u8)((int)i + 1);
  ldv_50619: 
#line 1033 
  ;
  
#line 1032 
  if ((unsigned int)i <= 3U) 
#line 1034 
                             goto ldv_50618; else 
#line 1037 
                                                  goto ldv_50620;
  ldv_50620: 
#line 1038 
  ;
  
#line 1037 
  ee->ee_pd_gains[mode] = pd_gains;
  
#line 1039 
  if ((unsigned int)pd_gains + 255U > 1U) {
    
#line 1040 
    __retres = -22;
    
#line 1040 
    goto return_label;
  }
  else ;
  
#line 1042 
  switch (mode) {
    int tmp_0;
    int tmp_1;
    int tmp_2;
    case 0: 
#line 1043 
    ;
    
#line 1047 
    if ((unsigned int)ee->ee_version > 12290U) 
#line 1047 
                                               tmp_0 = 336; else 
#line 1047 
                                                                 tmp_0 = 256;
    
#line 1047 
    offset = (unsigned int)tmp_0;
    
#line 1048 
    ath5k_eeprom_init_11a_pcal_freq(ah,(int)offset);
    
#line 1050 
    offset += 5U;
    
#line 1051 
    gen_chan_info = (struct ath5k_chan_pcal_info *)(& ee->ee_pwr_cal_a);
    
#line 1052 
    goto ldv_50622;
    case 1: 
#line 1053 
    ;
    
#line 1054 
    if ((unsigned int)ee->ee_version > 12290U) 
#line 1054 
                                               tmp_1 = 336; else 
#line 1054 
                                                                 tmp_1 = 256;
    
#line 1054 
    offset = (unsigned int)tmp_1;
    
#line 1055 
    if (((int)ee->ee_header & 1) != 0) 
#line 1056 
                                       offset += 55U; else ;
    
#line 1059 
    gen_chan_info = (struct ath5k_chan_pcal_info *)(& ee->ee_pwr_cal_b);
    
#line 1060 
    goto ldv_50622;
    case 2: 
#line 1061 
    ;
    
#line 1062 
    if ((unsigned int)ee->ee_version > 12290U) 
#line 1062 
                                               tmp_2 = 336; else 
#line 1062 
                                                                 tmp_2 = 256;
    
#line 1062 
    offset = (unsigned int)tmp_2;
    
#line 1063 
    if (((int)ee->ee_header & 1) != 0) 
#line 1064 
                                       offset += 70U;
    else 
      
#line 1065 
      if ((((int)ee->ee_header >> 1) & 1) != 0) 
#line 1066 
                                                offset += 5U; else ;
    
#line 1069 
    gen_chan_info = (struct ath5k_chan_pcal_info *)(& ee->ee_pwr_cal_g);
    
#line 1070 
    goto ldv_50622;
    default: 
#line 1071 
    ;
    
#line 1072 
    __retres = -22;
    
#line 1072 
    goto return_label;
  }
  ldv_50622: 
#line 1075 
  ;
  
#line 1075 
  i = (unsigned char)0U;
  
#line 1075 
  goto ldv_50630;
  ldv_50629: 
#line 1076 
  ;
  
#line 1076 
  chan_pcal_info = & (gen_chan_info + (int)i)->__anonCompField_ath5k_chan_pcal_info_102.rf5112_info;
  
#line 1081 
  c = (unsigned char)0U;
  
#line 1081 
  goto ldv_50627;
  ldv_50626: 
#line 1082 
  ;
  
#line 1082 
  tmp_3 = offset;
  
#line 1082 
  offset += 1U;
  
#line 1082 
  ;
  
#line 1082 
  ;
  
#line 1082 
  tmp_4 = ath5k_hw_nvram_read(ah,tmp_3,& val);
  
#line 1082 
  if (tmp_4) 
#line 1082 
             tmp_5 = 0; else 
#line 1082 
                             tmp_5 = 1;
  
#line 1082 
  if (tmp_5) {
    
#line 1082 
    __retres = -5;
    
#line 1082 
    goto return_label;
  }
  else ;
  
#line 1083 
  chan_pcal_info->pwr_x0[(int)c] = (signed char)val;
  
#line 1084 
  c = (u8)((int)c + 1);
  
#line 1084 
  chan_pcal_info->pwr_x0[(int)c] = (signed char)((int)val >> 8);
  
#line 1081 
  c = (u8)((int)c + 1);
  ldv_50627: 
#line 1082 
  ;
  
#line 1081 
  if ((unsigned int)c <= 3U) 
#line 1083 
                             goto ldv_50626; else 
#line 1086 
                                                  goto ldv_50628;
  ldv_50628: 
#line 1087 
  ;
  
#line 1090 
  tmp_6 = offset;
  
#line 1090 
  offset += 1U;
  
#line 1090 
  ;
  
#line 1090 
  ;
  
#line 1090 
  tmp_7 = ath5k_hw_nvram_read(ah,tmp_6,& val);
  
#line 1090 
  if (tmp_7) 
#line 1090 
             tmp_8 = 0; else 
#line 1090 
                             tmp_8 = 1;
  
#line 1090 
  if (tmp_8) {
    
#line 1090 
    __retres = -5;
    
#line 1090 
    goto return_label;
  }
  else ;
  
#line 1091 
  chan_pcal_info->pcdac_x0[1] = (unsigned char)((unsigned int)((unsigned char)val) & 31U);
  
#line 1092 
  chan_pcal_info->pcdac_x0[2] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 5)) & 31U);
  
#line 1093 
  chan_pcal_info->pcdac_x0[3] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 10)) & 31U);
  
#line 1098 
  tmp_9 = offset;
  
#line 1098 
  offset += 1U;
  
#line 1098 
  ;
  
#line 1098 
  ;
  
#line 1098 
  tmp_10 = ath5k_hw_nvram_read(ah,tmp_9,& val);
  
#line 1098 
  if (tmp_10) 
#line 1098 
              tmp_11 = 0; else 
#line 1098 
                               tmp_11 = 1;
  
#line 1098 
  if (tmp_11) {
    
#line 1098 
    __retres = -5;
    
#line 1098 
    goto return_label;
  }
  else ;
  
#line 1099 
  chan_pcal_info->pwr_x3[0] = (signed char)val;
  
#line 1100 
  chan_pcal_info->pwr_x3[1] = (signed char)((int)val >> 8);
  
#line 1102 
  tmp_12 = offset;
  
#line 1102 
  offset += 1U;
  
#line 1102 
  ;
  
#line 1102 
  ;
  
#line 1102 
  tmp_13 = ath5k_hw_nvram_read(ah,tmp_12,& val);
  
#line 1102 
  if (tmp_13) 
#line 1102 
              tmp_14 = 0; else 
#line 1102 
                               tmp_14 = 1;
  
#line 1102 
  if (tmp_14) {
    
#line 1102 
    __retres = -5;
    
#line 1102 
    goto return_label;
  }
  else ;
  
#line 1103 
  chan_pcal_info->pwr_x3[2] = (signed char)val;
  
#line 1108 
  chan_pcal_info->pcdac_x3[0] = (unsigned char)20U;
  
#line 1109 
  chan_pcal_info->pcdac_x3[1] = (unsigned char)35U;
  
#line 1110 
  chan_pcal_info->pcdac_x3[2] = (unsigned char)63U;
  
#line 1112 
  if ((unsigned int)ee->ee_version > 16386U) {
    
#line 1113 
    chan_pcal_info->pcdac_x0[0] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 8)) & 63U);
    
#line 1116 
    (gen_chan_info + (int)i)->max_pwr = (short)chan_pcal_info->pwr_x0[3];
  }
  else {
    
#line 1118 
    chan_pcal_info->pcdac_x0[0] = (unsigned char)1U;
    
#line 1119 
    (gen_chan_info + (int)i)->max_pwr = (short)((signed char)((int)val >> 8));
  }
  
#line 1075 
  i = (u8)((int)i + 1);
  ldv_50630: 
#line 1076 
  ;
  
#line 1075 
  if ((int)ee->ee_n_piers[mode] > (int)i) 
#line 1077 
                                          goto ldv_50629; else 
#line 1080 
                                                               goto ldv_50631;
  ldv_50631: 
#line 1081 
  ;
  
#line 1124 
  tmp_15 = ath5k_eeprom_convert_pcal_info_5112(ah,mode,gen_chan_info);
  
#line 1124 
  __retres = tmp_15;
  return_label: 
#line 1124 
                return __retres;
}


#line 1151  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.c"
__inline static unsigned int ath5k_pdgains_size_2413(struct ath5k_eeprom_info *ee, unsigned int mode)
{
  unsigned int sz;
  
#line 1153 
  unsigned int const pdgains_size[4U] = {4U, 6U, 9U, 12U};
  
#line 1156 
  sz = pdgains_size[(int)ee->ee_pd_gains[mode] + -1];
  
#line 1157 
  sz = (unsigned int)ee->ee_n_piers[mode] * sz;
  
#line 1159 
  return sz;
}


#line 1165  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.c"
static unsigned int ath5k_cal_data_offset_2413(struct ath5k_eeprom_info *ee, int mode)
{
  
#line 1167 
  u32 offset = (unsigned int)((int)ee->ee_misc4 >> 4) & 4095U;
  
#line 1169 
  switch (mode) {
    case 2: 
#line 1170 
    ;
    
#line 1171 
    if ((((int)ee->ee_header >> 1) & 1) != 0) {
      unsigned int tmp;
      
#line 1173 
      tmp = ath5k_pdgains_size_2413(ee,1U);
      
#line 1174 
      offset = (tmp + 2U) + offset;
    }
    else ;
    case 1: 
#line 1176 
    ;
    
#line 1177 
    if (((int)ee->ee_header & 1) != 0) {
      unsigned int tmp_0;
      
#line 1179 
      tmp_0 = ath5k_pdgains_size_2413(ee,0U);
      
#line 1180 
      offset = (tmp_0 + 5U) + offset;
    }
    else ;
    case 0: 
#line 1182 
    ;
    
#line 1183 
    goto ldv_50646;
    default: 
#line 1184 
    ;
    
#line 1185 
    goto ldv_50646;
  }
  ldv_50646: 
#line 1188 
  ;
  
#line 1188 
  return offset;
}


#line 1194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.c"
static int ath5k_eeprom_convert_pcal_info_2413(struct ath5k_hw *ah, int mode, struct ath5k_chan_pcal_info *chinfo)
{
  int __retres;
  struct ath5k_chan_pcal_info_rf2413 *pcinfo;
  unsigned int pier;
  unsigned int pdg;
  unsigned int point;
  
#line 1197 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 1199 
  u8 *pdgain_idx = (u8 *)(& ee->ee_pdc_to_idx[mode]);
  
#line 1203 
  pier = 0U;
  
#line 1203 
  goto ldv_50669;
  ldv_50668: 
#line 1204 
  ;
  
#line 1205 
  pcinfo = & (chinfo + pier)->__anonCompField_ath5k_chan_pcal_info_102.rf2413_info;
  
#line 1209 
  (chinfo + pier)->pd_curves = (struct ath5k_pdgain_info *)kcalloc(4UL,24UL,208U);
  
#line 1213 
  if ((chinfo + pier)->pd_curves == (struct ath5k_pdgain_info *)0) 
#line 1214 
                                                                   goto err_out; else ;
  
#line 1217 
  pdg = 0U;
  
#line 1217 
  goto ldv_50666;
  ldv_50665: 
#line 1218 
  ;
  {
    
#line 1219 
    u8 idx = *(pdgain_idx + pdg);
    
#line 1220 
    struct ath5k_pdgain_info *pd = (chinfo + pier)->pd_curves + (int)idx;
    
#line 1225 
    if ((unsigned int)((int)ee->ee_pd_gains[mode] + -1) == pdg) 
#line 1226 
                                                                pd->pd_points = (unsigned char)5U; else 
                                                                    
#line 1228 
                                                                    pd->pd_points = (unsigned char)4U;
    
#line 1231 
    pd->pd_step = (u8 *)kcalloc((unsigned long)pd->pd_points,1UL,208U);
    
#line 1234 
    if (pd->pd_step == (u8 *)0U) 
#line 1235 
                                 goto err_out; else ;
    
#line 1237 
    pd->pd_pwr = (s16 *)kcalloc((unsigned long)pd->pd_points,2UL,208U);
    
#line 1240 
    if (pd->pd_pwr == (s16 *)0) 
#line 1241 
                                goto err_out; else ;
    
#line 1246 
    *(pd->pd_step) = pcinfo->pddac_i[pdg];
    
#line 1247 
    *(pd->pd_pwr) = (short)((unsigned int)pcinfo->pwr_i[pdg] * 4U);
    
#line 1249 
    point = 1U;
    
#line 1249 
    goto ldv_50663;
    ldv_50662: 
#line 1250 
    ;
    
#line 1251 
    *(pd->pd_pwr + point) = (short)((unsigned int)*(pd->pd_pwr + (point + 4294967295U)) + (unsigned int)pcinfo->pwr[pdg][point + 4294967295U] * 2U);
    
#line 1254 
    *(pd->pd_step + point) = (unsigned char)((int)*(pd->pd_step + (point + 4294967295U)) + (int)pcinfo->pddac[pdg][point + 4294967295U]);
    
#line 1249 
    point += 1U;
    ldv_50663: 
#line 1250 
    ;
    
#line 1249 
    if ((unsigned int)pd->pd_points > point) 
#line 1251 
                                             goto ldv_50662; else 
#line 1254 
                                                                  goto ldv_50664;
    ldv_50664: 
#line 1255 
    ;
    
#line 1260 
    if (pdg == 0U) 
#line 1261 
                   (chinfo + pier)->min_pwr = *(pd->pd_pwr); else ;
    
#line 1264 
    if ((unsigned int)((int)ee->ee_pd_gains[mode] + -1) == pdg) 
#line 1265 
                                                                (chinfo + pier)->max_pwr = *(pd->pd_pwr + ((unsigned long)pd->pd_points + 18446744073709551615U)); else ;
  }
  
#line 1217 
  pdg += 1U;
  ldv_50666: 
#line 1218 
  ;
  
#line 1217 
  if ((unsigned int)ee->ee_pd_gains[mode] > pdg) 
#line 1219 
                                                 goto ldv_50665; else 
                                                                   
#line 1222 
                                                                   goto ldv_50667;
  ldv_50667: 
#line 1223 
  ;
  
#line 1203 
  pier += 1U;
  ldv_50669: 
#line 1204 
  ;
  
#line 1203 
  if ((unsigned int)ee->ee_n_piers[mode] > pier) 
#line 1205 
                                                 goto ldv_50668; else 
                                                                   
#line 1208 
                                                                   goto ldv_50670;
  ldv_50670: 
#line 1209 
  ;
  
#line 1270 
  __retres = 0;
  
#line 1270 
  goto return_label;
  err_out: 
#line 1272 
  ;
  
#line 1273 
  ath5k_eeprom_free_pcal_info(ah,mode);
  
#line 1274 
  __retres = -12;
  return_label: 
#line 1274 
                return __retres;
}


#line 1279  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.c"
static int ath5k_eeprom_read_pcal_info_2413(struct ath5k_hw *ah, int mode)
{
  int __retres;
  struct ath5k_chan_pcal_info_rf2413 *pcinfo;
  struct ath5k_chan_pcal_info *chinfo;
  u32 offset;
  int idx;
  int i;
  u16 val;
  int tmp_2;
  bool tmp_1;
  u32 tmp_0;
  int tmp_5;
  bool tmp_4;
  u32 tmp_3;
  int tmp_8;
  bool tmp_7;
  u32 tmp_6;
  int tmp_42;
  
#line 1281 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 1284 
  u8 *pdgain_idx = (u8 *)(& ee->ee_pdc_to_idx[mode]);
  
#line 1288 
  u8 pd_gains = (unsigned char)0U;
  
#line 1295 
  idx = 3;
  
#line 1295 
  goto ldv_50685;
  ldv_50684: 
#line 1296 
  ;
  
#line 1297 
  if ((((int)ee->ee_x_gain[mode] >> idx) & 1) != 0) {
    u8 tmp;
    
#line 1298 
    tmp = pd_gains;
    
#line 1298 
    pd_gains = (u8)((int)pd_gains + 1);
    
#line 1298 
    *(pdgain_idx + (int)tmp) = (unsigned char)idx;
  }
  else ;
  
#line 1295 
  idx -= 1;
  ldv_50685: 
#line 1296 
  ;
  
#line 1295 
  if (idx >= 0) 
#line 1297 
                goto ldv_50684; else 
#line 1300 
                                     goto ldv_50686;
  ldv_50686: 
#line 1301 
  ;
  
#line 1301 
  ee->ee_pd_gains[mode] = pd_gains;
  
#line 1303 
  if ((unsigned int)pd_gains == 0U) {
    
#line 1304 
    __retres = -22;
    
#line 1304 
    goto return_label;
  }
  else ;
  
#line 1306 
  offset = ath5k_cal_data_offset_2413(ee,mode);
  
#line 1307 
  switch (mode) {
    case 0: 
#line 1308 
    ;
    
#line 1309 
    if (((int)ee->ee_header & 1) == 0) {
      
#line 1310 
      __retres = 0;
      
#line 1310 
      goto return_label;
    }
    else ;
    
#line 1312 
    ath5k_eeprom_init_11a_pcal_freq(ah,(int)offset);
    
#line 1313 
    offset += 5U;
    
#line 1314 
    chinfo = (struct ath5k_chan_pcal_info *)(& ee->ee_pwr_cal_a);
    
#line 1315 
    goto ldv_50688;
    case 1: 
#line 1316 
    ;
    
#line 1317 
    if ((((int)ee->ee_header >> 1) & 1) == 0) {
      
#line 1318 
      __retres = 0;
      
#line 1318 
      goto return_label;
    }
    else ;
    
#line 1320 
    ath5k_eeprom_init_11bg_2413(ah,(unsigned int)mode,(int)offset);
    
#line 1321 
    offset += 2U;
    
#line 1322 
    chinfo = (struct ath5k_chan_pcal_info *)(& ee->ee_pwr_cal_b);
    
#line 1323 
    goto ldv_50688;
    case 2: 
#line 1324 
    ;
    
#line 1325 
    if ((((int)ee->ee_header >> 2) & 1) == 0) {
      
#line 1326 
      __retres = 0;
      
#line 1326 
      goto return_label;
    }
    else ;
    
#line 1328 
    ath5k_eeprom_init_11bg_2413(ah,(unsigned int)mode,(int)offset);
    
#line 1329 
    offset += 2U;
    
#line 1330 
    chinfo = (struct ath5k_chan_pcal_info *)(& ee->ee_pwr_cal_g);
    
#line 1331 
    goto ldv_50688;
    default: 
#line 1332 
    ;
    
#line 1333 
    __retres = -22;
    
#line 1333 
    goto return_label;
  }
  ldv_50688: 
#line 1336 
  ;
  
#line 1336 
  i = 0;
  
#line 1336 
  goto ldv_50693;
  ldv_50692: 
#line 1337 
  ;
  
#line 1337 
  pcinfo = & (chinfo + i)->__anonCompField_ath5k_chan_pcal_info_102.rf2413_info;
  
#line 1343 
  tmp_0 = offset;
  
#line 1343 
  offset += 1U;
  
#line 1343 
  ;
  
#line 1343 
  ;
  
#line 1343 
  tmp_1 = ath5k_hw_nvram_read(ah,tmp_0,& val);
  
#line 1343 
  if (tmp_1) 
#line 1343 
             tmp_2 = 0; else 
#line 1343 
                             tmp_2 = 1;
  
#line 1343 
  if (tmp_2) {
    
#line 1343 
    __retres = -5;
    
#line 1343 
    goto return_label;
  }
  else ;
  
#line 1344 
  pcinfo->pwr_i[0] = (signed char)((int)((signed char)val) & 31);
  
#line 1345 
  pcinfo->pddac_i[0] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 5)) & 127U);
  
#line 1346 
  pcinfo->pwr[0][0] = (signed char)((int)((signed char)((int)val >> 12)) & 15);
  
#line 1348 
  tmp_3 = offset;
  
#line 1348 
  offset += 1U;
  
#line 1348 
  ;
  
#line 1348 
  ;
  
#line 1348 
  tmp_4 = ath5k_hw_nvram_read(ah,tmp_3,& val);
  
#line 1348 
  if (tmp_4) 
#line 1348 
             tmp_5 = 0; else 
#line 1348 
                             tmp_5 = 1;
  
#line 1348 
  if (tmp_5) {
    
#line 1348 
    __retres = -5;
    
#line 1348 
    goto return_label;
  }
  else ;
  
#line 1349 
  pcinfo->pddac[0][0] = (unsigned char)((unsigned int)((unsigned char)val) & 63U);
  
#line 1350 
  pcinfo->pwr[0][1] = (signed char)((int)((signed char)((int)val >> 6)) & 15);
  
#line 1351 
  pcinfo->pddac[0][1] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 10)) & 63U);
  
#line 1353 
  tmp_6 = offset;
  
#line 1353 
  offset += 1U;
  
#line 1353 
  ;
  
#line 1353 
  ;
  
#line 1353 
  tmp_7 = ath5k_hw_nvram_read(ah,tmp_6,& val);
  
#line 1353 
  if (tmp_7) 
#line 1353 
             tmp_8 = 0; else 
#line 1353 
                             tmp_8 = 1;
  
#line 1353 
  if (tmp_8) {
    
#line 1353 
    __retres = -5;
    
#line 1353 
    goto return_label;
  }
  else ;
  
#line 1354 
  pcinfo->pwr[0][2] = (signed char)((int)((signed char)val) & 15);
  
#line 1355 
  pcinfo->pddac[0][2] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 4)) & 63U);
  
#line 1357 
  pcinfo->pwr[0][3] = (signed char)0;
  
#line 1358 
  pcinfo->pddac[0][3] = (unsigned char)0U;
  
#line 1360 
  if ((unsigned int)pd_gains > 1U) {
    int tmp_11;
    bool tmp_10;
    u32 tmp_9;
    int tmp_14;
    bool tmp_13;
    u32 tmp_12;
    int tmp_17;
    bool tmp_16;
    u32 tmp_15;
    
#line 1366 
    pcinfo->pwr_i[1] = (signed char)((int)((signed char)((int)val >> 10)) & 31);
    
#line 1368 
    pcinfo->pddac_i[1] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 15)) & 1U);
    
#line 1369 
    tmp_9 = offset;
    
#line 1369 
    offset += 1U;
    
#line 1369 
    ;
    
#line 1369 
    ;
    
#line 1369 
    tmp_10 = ath5k_hw_nvram_read(ah,tmp_9,& val);
    
#line 1369 
    if (tmp_10) 
#line 1369 
                tmp_11 = 0; else 
#line 1369 
                                 tmp_11 = 1;
    
#line 1369 
    if (tmp_11) {
      
#line 1369 
      __retres = -5;
      
#line 1369 
      goto return_label;
    }
    else ;
    
#line 1370 
    pcinfo->pddac_i[1] = (unsigned char)((int)pcinfo->pddac_i[1] | (((int)val << 1) & 126));
    
#line 1372 
    pcinfo->pwr[1][0] = (signed char)((int)((signed char)((int)val >> 6)) & 15);
    
#line 1373 
    pcinfo->pddac[1][0] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 10)) & 63U);
    
#line 1375 
    tmp_12 = offset;
    
#line 1375 
    offset += 1U;
    
#line 1375 
    ;
    
#line 1375 
    ;
    
#line 1375 
    tmp_13 = ath5k_hw_nvram_read(ah,tmp_12,& val);
    
#line 1375 
    if (tmp_13) 
#line 1375 
                tmp_14 = 0; else 
#line 1375 
                                 tmp_14 = 1;
    
#line 1375 
    if (tmp_14) {
      
#line 1375 
      __retres = -5;
      
#line 1375 
      goto return_label;
    }
    else ;
    
#line 1376 
    pcinfo->pwr[1][1] = (signed char)((int)((signed char)val) & 15);
    
#line 1377 
    pcinfo->pddac[1][1] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 4)) & 63U);
    
#line 1378 
    pcinfo->pwr[1][2] = (signed char)((int)((signed char)((int)val >> 10)) & 15);
    
#line 1380 
    pcinfo->pddac[1][2] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 14)) & 3U);
    
#line 1381 
    tmp_15 = offset;
    
#line 1381 
    offset += 1U;
    
#line 1381 
    ;
    
#line 1381 
    ;
    
#line 1381 
    tmp_16 = ath5k_hw_nvram_read(ah,tmp_15,& val);
    
#line 1381 
    if (tmp_16) 
#line 1381 
                tmp_17 = 0; else 
#line 1381 
                                 tmp_17 = 1;
    
#line 1381 
    if (tmp_17) {
      
#line 1381 
      __retres = -5;
      
#line 1381 
      goto return_label;
    }
    else ;
    
#line 1382 
    pcinfo->pddac[1][2] = (unsigned char)((int)pcinfo->pddac[1][2] | (((int)val << 2) & 60));
    
#line 1384 
    pcinfo->pwr[1][3] = (signed char)0;
    
#line 1385 
    pcinfo->pddac[1][3] = (unsigned char)0U;
  }
  else 
    
#line 1386 
    if ((unsigned int)pd_gains == 1U) {
      int tmp_20;
      bool tmp_19;
      u32 tmp_18;
      
#line 1391 
      pcinfo->pwr[0][3] = (signed char)((int)((signed char)((int)val >> 10)) & 15);
      
#line 1393 
      pcinfo->pddac[0][3] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 14)) & 3U);
      
#line 1394 
      tmp_18 = offset;
      
#line 1394 
      offset += 1U;
      
#line 1394 
      ;
      
#line 1394 
      ;
      
#line 1394 
      tmp_19 = ath5k_hw_nvram_read(ah,tmp_18,& val);
      
#line 1394 
      if (tmp_19) 
#line 1394 
                  tmp_20 = 0; else 
#line 1394 
                                   tmp_20 = 1;
      
#line 1394 
      if (tmp_20) {
        
#line 1394 
        __retres = -5;
        
#line 1394 
        goto return_label;
      }
      else ;
      
#line 1395 
      pcinfo->pddac[0][3] = (unsigned char)((int)pcinfo->pddac[0][3] | (((int)val << 2) & 60));
    }
    else ;
  
#line 1402 
  if ((unsigned int)pd_gains > 2U) {
    int tmp_23;
    bool tmp_22;
    u32 tmp_21;
    int tmp_26;
    bool tmp_25;
    u32 tmp_24;
    
#line 1403 
    pcinfo->pwr_i[2] = (signed char)((int)((signed char)((int)val >> 4)) & 31);
    
#line 1404 
    pcinfo->pddac_i[2] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 9)) & 127U);
    
#line 1406 
    tmp_21 = offset;
    
#line 1406 
    offset += 1U;
    
#line 1406 
    ;
    
#line 1406 
    ;
    
#line 1406 
    tmp_22 = ath5k_hw_nvram_read(ah,tmp_21,& val);
    
#line 1406 
    if (tmp_22) 
#line 1406 
                tmp_23 = 0; else 
#line 1406 
                                 tmp_23 = 1;
    
#line 1406 
    if (tmp_23) {
      
#line 1406 
      __retres = -5;
      
#line 1406 
      goto return_label;
    }
    else ;
    
#line 1407 
    pcinfo->pwr[2][0] = (signed char)((int)((signed char)val) & 15);
    
#line 1408 
    pcinfo->pddac[2][0] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 4)) & 63U);
    
#line 1409 
    pcinfo->pwr[2][1] = (signed char)((int)((signed char)((int)val >> 10)) & 15);
    
#line 1411 
    pcinfo->pddac[2][1] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 14)) & 3U);
    
#line 1412 
    tmp_24 = offset;
    
#line 1412 
    offset += 1U;
    
#line 1412 
    ;
    
#line 1412 
    ;
    
#line 1412 
    tmp_25 = ath5k_hw_nvram_read(ah,tmp_24,& val);
    
#line 1412 
    if (tmp_25) 
#line 1412 
                tmp_26 = 0; else 
#line 1412 
                                 tmp_26 = 1;
    
#line 1412 
    if (tmp_26) {
      
#line 1412 
      __retres = -5;
      
#line 1412 
      goto return_label;
    }
    else ;
    
#line 1413 
    pcinfo->pddac[2][1] = (unsigned char)((int)pcinfo->pddac[2][1] | (((int)val << 2) & 60));
    
#line 1415 
    pcinfo->pwr[2][2] = (signed char)((int)((signed char)((int)val >> 4)) & 15);
    
#line 1416 
    pcinfo->pddac[2][2] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 8)) & 63U);
    
#line 1418 
    pcinfo->pwr[2][3] = (signed char)0;
    
#line 1419 
    pcinfo->pddac[2][3] = (unsigned char)0U;
  }
  else 
    
#line 1420 
    if ((unsigned int)pd_gains == 2U) {
      
#line 1421 
      pcinfo->pwr[1][3] = (signed char)((int)((signed char)((int)val >> 4)) & 15);
      
#line 1422 
      pcinfo->pddac[1][3] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 8)) & 63U);
    }
    else ;
  
#line 1425 
  if ((unsigned int)pd_gains > 3U) {
    int tmp_29;
    bool tmp_28;
    u32 tmp_27;
    int tmp_32;
    bool tmp_31;
    u32 tmp_30;
    int tmp_35;
    bool tmp_34;
    u32 tmp_33;
    int tmp_38;
    bool tmp_37;
    u32 tmp_36;
    
#line 1426 
    pcinfo->pwr_i[3] = (signed char)((int)((signed char)((int)val >> 14)) & 3);
    
#line 1427 
    tmp_27 = offset;
    
#line 1427 
    offset += 1U;
    
#line 1427 
    ;
    
#line 1427 
    ;
    
#line 1427 
    tmp_28 = ath5k_hw_nvram_read(ah,tmp_27,& val);
    
#line 1427 
    if (tmp_28) 
#line 1427 
                tmp_29 = 0; else 
#line 1427 
                                 tmp_29 = 1;
    
#line 1427 
    if (tmp_29) {
      
#line 1427 
      __retres = -5;
      
#line 1427 
      goto return_label;
    }
    else ;
    
#line 1428 
    pcinfo->pwr_i[3] = (signed char)((int)pcinfo->pwr_i[3] | ((int)((signed char)((int)val << 2)) & 28));
    
#line 1430 
    pcinfo->pddac_i[3] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 3)) & 127U);
    
#line 1431 
    pcinfo->pwr[3][0] = (signed char)((int)((signed char)((int)val >> 10)) & 15);
    
#line 1432 
    pcinfo->pddac[3][0] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 14)) & 3U);
    
#line 1434 
    tmp_30 = offset;
    
#line 1434 
    offset += 1U;
    
#line 1434 
    ;
    
#line 1434 
    ;
    
#line 1434 
    tmp_31 = ath5k_hw_nvram_read(ah,tmp_30,& val);
    
#line 1434 
    if (tmp_31) 
#line 1434 
                tmp_32 = 0; else 
#line 1434 
                                 tmp_32 = 1;
    
#line 1434 
    if (tmp_32) {
      
#line 1434 
      __retres = -5;
      
#line 1434 
      goto return_label;
    }
    else ;
    
#line 1435 
    pcinfo->pddac[3][0] = (unsigned char)((int)pcinfo->pddac[3][0] | (((int)val << 2) & 60));
    
#line 1436 
    pcinfo->pwr[3][1] = (signed char)((int)((signed char)((int)val >> 4)) & 15);
    
#line 1437 
    pcinfo->pddac[3][1] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 8)) & 63U);
    
#line 1439 
    pcinfo->pwr[3][2] = (signed char)((int)((signed char)((int)val >> 14)) & 3);
    
#line 1440 
    tmp_33 = offset;
    
#line 1440 
    offset += 1U;
    
#line 1440 
    ;
    
#line 1440 
    ;
    
#line 1440 
    tmp_34 = ath5k_hw_nvram_read(ah,tmp_33,& val);
    
#line 1440 
    if (tmp_34) 
#line 1440 
                tmp_35 = 0; else 
#line 1440 
                                 tmp_35 = 1;
    
#line 1440 
    if (tmp_35) {
      
#line 1440 
      __retres = -5;
      
#line 1440 
      goto return_label;
    }
    else ;
    
#line 1441 
    pcinfo->pwr[3][2] = (signed char)((int)pcinfo->pwr[3][2] | ((int)((signed char)((int)val << 2)) & 12));
    
#line 1443 
    pcinfo->pddac[3][2] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 2)) & 63U);
    
#line 1444 
    pcinfo->pwr[3][3] = (signed char)((int)((signed char)((int)val >> 8)) & 15);
    
#line 1446 
    pcinfo->pddac[3][3] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 12)) & 15U);
    
#line 1447 
    tmp_36 = offset;
    
#line 1447 
    offset += 1U;
    
#line 1447 
    ;
    
#line 1447 
    ;
    
#line 1447 
    tmp_37 = ath5k_hw_nvram_read(ah,tmp_36,& val);
    
#line 1447 
    if (tmp_37) 
#line 1447 
                tmp_38 = 0; else 
#line 1447 
                                 tmp_38 = 1;
    
#line 1447 
    if (tmp_38) {
      
#line 1447 
      __retres = -5;
      
#line 1447 
      goto return_label;
    }
    else ;
    
#line 1448 
    pcinfo->pddac[3][3] = (unsigned char)((int)pcinfo->pddac[3][3] | (((int)val << 4) & 48));
  }
  else 
    
#line 1449 
    if ((unsigned int)pd_gains == 3U) {
      int tmp_41;
      bool tmp_40;
      u32 tmp_39;
      
#line 1450 
      pcinfo->pwr[2][3] = (signed char)((int)((signed char)((int)val >> 14)) & 3);
      
#line 1451 
      tmp_39 = offset;
      
#line 1451 
      offset += 1U;
      
#line 1451 
      ;
      
#line 1451 
      ;
      
#line 1451 
      tmp_40 = ath5k_hw_nvram_read(ah,tmp_39,& val);
      
#line 1451 
      if (tmp_40) 
#line 1451 
                  tmp_41 = 0; else 
#line 1451 
                                   tmp_41 = 1;
      
#line 1451 
      if (tmp_41) {
        
#line 1451 
        __retres = -5;
        
#line 1451 
        goto return_label;
      }
      else ;
      
#line 1452 
      pcinfo->pwr[2][3] = (signed char)((int)pcinfo->pwr[2][3] | ((int)((signed char)((int)val << 2)) & 12));
      
#line 1454 
      pcinfo->pddac[2][3] = (unsigned char)((unsigned int)((unsigned char)((int)val >> 2)) & 63U);
    }
    else ;
  
#line 1336 
  i += 1;
  ldv_50693: 
#line 1337 
  ;
  
#line 1336 
  if ((int)ee->ee_n_piers[mode] > i) 
#line 1338 
                                     goto ldv_50692; else 
#line 1341 
                                                          goto ldv_50694;
  ldv_50694: 
#line 1342 
  ;
  
#line 1458 
  tmp_42 = ath5k_eeprom_convert_pcal_info_2413(ah,mode,chinfo);
  
#line 1458 
  __retres = tmp_42;
  return_label: 
#line 1458 
                return __retres;
}


#line 1470  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.c"
static int ath5k_eeprom_read_target_rate_pwr_info(struct ath5k_hw *ah, unsigned int mode)
{
  int __retres;
  struct ath5k_rate_pcal_info *rate_pcal_info;
  u8 *rate_target_pwr_num;
  u32 offset;
  u16 val;
  int i;
  
#line 1472 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 1479 
  offset = (unsigned int)ee->ee_misc1 & 4095U;
  
#line 1480 
  rate_target_pwr_num = & ee->ee_rate_target_pwr_num[mode];
  
#line 1481 
  switch (mode) {
    int tmp;
    int tmp_0;
    int tmp_1;
    case (unsigned int)0: 
#line 1482 
    ;
    
#line 1483 
    if ((unsigned int)ee->ee_version > 12290U) 
#line 1483 
                                               tmp = 0; else 
#line 1483 
                                                             tmp = 341;
    
#line 1483 
    offset = (unsigned int)tmp + offset;
    
#line 1484 
    rate_pcal_info = (struct ath5k_rate_pcal_info *)(& ee->ee_rate_tpwr_a);
    
#line 1485 
    ee->ee_rate_target_pwr_num[mode] = (unsigned char)8U;
    
#line 1486 
    goto ldv_50706;
    case (unsigned int)1: 
#line 1487 
    ;
    
#line 1488 
    if ((unsigned int)ee->ee_version > 12290U) 
#line 1488 
                                               tmp_0 = 16; else 
#line 1488 
                                                                tmp_0 = 357;
    
#line 1488 
    offset = (unsigned int)tmp_0 + offset;
    
#line 1489 
    rate_pcal_info = (struct ath5k_rate_pcal_info *)(& ee->ee_rate_tpwr_b);
    
#line 1490 
    ee->ee_rate_target_pwr_num[mode] = (unsigned char)2U;
    
#line 1491 
    goto ldv_50706;
    case (unsigned int)2: 
#line 1492 
    ;
    
#line 1493 
    if ((unsigned int)ee->ee_version > 12290U) 
#line 1493 
                                               tmp_1 = 20; else 
#line 1493 
                                                                tmp_1 = 361;
    
#line 1493 
    offset = (unsigned int)tmp_1 + offset;
    
#line 1494 
    rate_pcal_info = (struct ath5k_rate_pcal_info *)(& ee->ee_rate_tpwr_g);
    
#line 1495 
    ee->ee_rate_target_pwr_num[mode] = (unsigned char)3U;
    
#line 1496 
    goto ldv_50706;
    default: 
#line 1497 
    ;
    
#line 1498 
    __retres = -22;
    
#line 1498 
    goto return_label;
  }
  ldv_50706: 
#line 1502 
  ;
  
#line 1502 
  if ((unsigned int)ee->ee_version <= 12290U) {
    int tmp_4;
    bool tmp_3;
    u32 tmp_2;
    int tmp_7;
    bool tmp_6;
    u32 tmp_5;
    
#line 1503 
    i = 0;
    
#line 1503 
    goto ldv_50712;
    ldv_50711: 
#line 1504 
    ;
    
#line 1504 
    tmp_2 = offset;
    
#line 1504 
    offset += 1U;
    
#line 1504 
    ;
    
#line 1504 
    ;
    
#line 1504 
    tmp_3 = ath5k_hw_nvram_read(ah,tmp_2,& val);
    
#line 1504 
    if (tmp_3) 
#line 1504 
               tmp_4 = 0; else 
#line 1504 
                               tmp_4 = 1;
    
#line 1504 
    if (tmp_4) {
      
#line 1504 
      __retres = -5;
      
#line 1504 
      goto return_label;
    }
    else ;
    
#line 1505 
    (rate_pcal_info + i)->freq = ath5k_eeprom_bin2freq(ee,(unsigned short)((int)val >> 9),mode);
    
#line 1508 
    (rate_pcal_info + i)->target_power_6to24 = (unsigned short)((unsigned int)((unsigned short)((int)val >> 3)) & 63U);
    
#line 1509 
    (rate_pcal_info + i)->target_power_36 = (unsigned short)((unsigned int)((unsigned short)((int)val << 3)) & 63U);
    
#line 1511 
    tmp_5 = offset;
    
#line 1511 
    offset += 1U;
    
#line 1511 
    ;
    
#line 1511 
    ;
    
#line 1511 
    tmp_6 = ath5k_hw_nvram_read(ah,tmp_5,& val);
    
#line 1511 
    if (tmp_6) 
#line 1511 
               tmp_7 = 0; else 
#line 1511 
                               tmp_7 = 1;
    
#line 1511 
    if (tmp_7) {
      
#line 1511 
      __retres = -5;
      
#line 1511 
      goto return_label;
    }
    else ;
    
#line 1513 
    if ((unsigned int)(rate_pcal_info + i)->freq == 255U || (unsigned int)val == 0U) {
      
#line 1515 
      *rate_target_pwr_num = (unsigned char)i;
      
#line 1516 
      goto ldv_50710;
    }
    else ;
    
#line 1519 
    (rate_pcal_info + i)->target_power_36 = (unsigned short)((int)(rate_pcal_info + i)->target_power_36 | ((int)val >> 13));
    
#line 1520 
    (rate_pcal_info + i)->target_power_48 = (unsigned short)((unsigned int)((unsigned short)((int)val >> 7)) & 63U);
    
#line 1521 
    (rate_pcal_info + i)->target_power_54 = (unsigned short)((unsigned int)((unsigned short)((int)val >> 1)) & 63U);
    
#line 1503 
    i += 1;
    ldv_50712: 
#line 1504 
    ;
    
#line 1503 
    if ((int)*rate_target_pwr_num > i) 
#line 1505 
                                       goto ldv_50711; else 
#line 1508 
                                                            goto ldv_50710;
    ldv_50710: 
#line 1509 
    ;
  }
  else {
    int tmp_10;
    bool tmp_9;
    u32 tmp_8;
    int tmp_13;
    bool tmp_12;
    u32 tmp_11;
    
#line 1524 
    i = 0;
    
#line 1524 
    goto ldv_50715;
    ldv_50714: 
#line 1525 
    ;
    
#line 1525 
    tmp_8 = offset;
    
#line 1525 
    offset += 1U;
    
#line 1525 
    ;
    
#line 1525 
    ;
    
#line 1525 
    tmp_9 = ath5k_hw_nvram_read(ah,tmp_8,& val);
    
#line 1525 
    if (tmp_9) 
#line 1525 
               tmp_10 = 0; else 
#line 1525 
                                tmp_10 = 1;
    
#line 1525 
    if (tmp_10) {
      
#line 1525 
      __retres = -5;
      
#line 1525 
      goto return_label;
    }
    else ;
    
#line 1526 
    (rate_pcal_info + i)->freq = ath5k_eeprom_bin2freq(ee,(unsigned short)((int)val >> 8),mode);
    
#line 1529 
    (rate_pcal_info + i)->target_power_6to24 = (unsigned short)((unsigned int)((unsigned short)((int)val >> 2)) & 63U);
    
#line 1530 
    (rate_pcal_info + i)->target_power_36 = (unsigned short)((unsigned int)((unsigned short)((int)val << 4)) & 63U);
    
#line 1532 
    tmp_11 = offset;
    
#line 1532 
    offset += 1U;
    
#line 1532 
    ;
    
#line 1532 
    ;
    
#line 1532 
    tmp_12 = ath5k_hw_nvram_read(ah,tmp_11,& val);
    
#line 1532 
    if (tmp_12) 
#line 1532 
                tmp_13 = 0; else 
#line 1532 
                                 tmp_13 = 1;
    
#line 1532 
    if (tmp_13) {
      
#line 1532 
      __retres = -5;
      
#line 1532 
      goto return_label;
    }
    else ;
    
#line 1534 
    if ((unsigned int)(rate_pcal_info + i)->freq == 255U || (unsigned int)val == 0U) {
      
#line 1536 
      *rate_target_pwr_num = (unsigned char)i;
      
#line 1537 
      goto ldv_50713;
    }
    else ;
    
#line 1540 
    (rate_pcal_info + i)->target_power_36 = (unsigned short)((int)(rate_pcal_info + i)->target_power_36 | ((int)val >> 12));
    
#line 1541 
    (rate_pcal_info + i)->target_power_48 = (unsigned short)((unsigned int)((unsigned short)((int)val >> 6)) & 63U);
    
#line 1542 
    (rate_pcal_info + i)->target_power_54 = (unsigned short)((unsigned int)val & 63U);
    
#line 1524 
    i += 1;
    ldv_50715: 
#line 1525 
    ;
    
#line 1524 
    if ((int)*rate_target_pwr_num > i) 
#line 1526 
                                       goto ldv_50714; else 
#line 1529 
                                                            goto ldv_50713;
    ldv_50713: 
#line 1530 
    ;
  }
  
#line 1546 
  __retres = 0;
  return_label: 
#line 1546 
                return __retres;
}


#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.c"
static int ath5k_eeprom_read_pcal_info(struct ath5k_hw *ah)
{
  int __retres;
  int (*read_pcal)(struct ath5k_hw *, int );
  int mode;
  int err;
  
#line 1567 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 1572 
  if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version > 16383U && (((int)ee->ee_misc0 >> 14) & 3) == 1) 
    
#line 1574 
    read_pcal = & ath5k_eeprom_read_pcal_info_5112;
  else 
    
#line 1575 
    if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version > 20479U && (((int)ee->ee_misc0 >> 14) & 3) == 2) 
      
#line 1577 
      read_pcal = & ath5k_eeprom_read_pcal_info_2413; else 
#line 1579 
                                                           read_pcal = & ath5k_eeprom_read_pcal_info_5111;
  
#line 1582 
  mode = 0;
  
#line 1582 
  goto ldv_50726;
  ldv_50725: 
#line 1583 
  ;
  
#line 1584 
  err = (*read_pcal)(ah,mode);
  
#line 1585 
  if (err != 0) {
    
#line 1586 
    __retres = err;
    
#line 1586 
    goto return_label;
  }
  else ;
  
#line 1588 
  err = ath5k_eeprom_read_target_rate_pwr_info(ah,(unsigned int)mode);
  
#line 1589 
  if (err < 0) {
    
#line 1590 
    __retres = err;
    
#line 1590 
    goto return_label;
  }
  else ;
  
#line 1583 
  mode += 1;
  ldv_50726: 
#line 1584 
  ;
  
#line 1582 
  if (mode <= 2) 
#line 1584 
                 goto ldv_50725; else 
#line 1587 
                                      goto ldv_50727;
  ldv_50727: 
#line 1588 
  ;
  
#line 1593 
  __retres = 0;
  return_label: 
#line 1593 
                return __retres;
}


#line 1598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.c"
static int ath5k_eeprom_read_ctl_info(struct ath5k_hw *ah)
{
  int __retres;
  struct ath5k_edge_power *rep;
  unsigned int fmask;
  unsigned int pmask;
  unsigned int ctl_mode;
  int i;
  int j;
  u32 offset;
  u16 val;
  int tmp;
  int tmp_0;
  int tmp_3;
  bool tmp_2;
  u32 tmp_1;
  
#line 1600 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 1608 
  pmask = 63U;
  
#line 1609 
  if ((unsigned int)ee->ee_version > 12290U) 
#line 1609 
                                             tmp = 255; else 
#line 1609 
                                                             tmp = 127;
  
#line 1609 
  fmask = (unsigned int)tmp;
  
#line 1610 
  if ((unsigned int)ee->ee_version > 12290U) 
#line 1610 
                                             tmp_0 = 296; else 
#line 1610 
                                                               tmp_0 = 228;
  
#line 1610 
  offset = (unsigned int)tmp_0;
  
#line 1611 
  if ((unsigned int)ee->ee_version > 12290U) 
#line 1611 
                                             ee->ee_ctls = (unsigned char)32U; else 
                                                                    
#line 1611 
                                                                    ee->ee_ctls = (unsigned char)16U;
  
#line 1612 
  i = 0;
  
#line 1612 
  goto ldv_50741;
  ldv_50740: 
#line 1613 
  ;
  
#line 1613 
  tmp_1 = offset;
  
#line 1613 
  offset += 1U;
  
#line 1613 
  ;
  
#line 1613 
  ;
  
#line 1613 
  tmp_2 = ath5k_hw_nvram_read(ah,tmp_1,& val);
  
#line 1613 
  if (tmp_2) 
#line 1613 
             tmp_3 = 0; else 
#line 1613 
                             tmp_3 = 1;
  
#line 1613 
  if (tmp_3) {
    
#line 1613 
    __retres = -5;
    
#line 1613 
    goto return_label;
  }
  else ;
  
#line 1614 
  ee->ee_ctl[i] = (unsigned char)((int)val >> 8);
  
#line 1615 
  ee->ee_ctl[i + 1] = (unsigned char)val;
  
#line 1612 
  i += 2;
  ldv_50741: 
#line 1613 
  ;
  
#line 1612 
  if ((int)ee->ee_ctls > i) 
#line 1614 
                            goto ldv_50740; else 
#line 1617 
                                                 goto ldv_50742;
  ldv_50742: 
#line 1618 
  ;
  
#line 1618 
  offset = 111U;
  
#line 1619 
  if ((unsigned int)ee->ee_version > 16383U) 
#line 1620 
                                             offset = (((unsigned int)ee->ee_misc1 & 4095U) + offset) + 4294967211U;
  else {
    int tmp_4;
    
#line 1623 
    if ((unsigned int)ee->ee_version > 12290U) 
#line 1623 
                                               tmp_4 = 336; else 
#line 1623 
                                                                 tmp_4 = 256;
    
#line 1623 
    offset = (unsigned int)tmp_4 + offset;
  }
  
#line 1625 
  rep = (struct ath5k_edge_power *)(& ee->ee_ctl_pwr);
  
#line 1626 
  i = 0;
  
#line 1626 
  goto ldv_50758;
  ldv_50757: 
#line 1627 
  ;
  
#line 1627 
  switch ((int)ee->ee_ctl[i] & 15) {
    case 0: 
#line 1628 
    ;
    case 3: 
#line 1629 
    ;
    
#line 1630 
    ctl_mode = 0U;
    
#line 1631 
    goto ldv_50745;
    default: 
#line 1632 
    ;
    
#line 1633 
    ctl_mode = 2U;
    
#line 1634 
    goto ldv_50745;
  }
  ldv_50745: 
#line 1636 
  ;
  
#line 1636 
  if ((unsigned int)ee->ee_ctl[i] == 0U) {
    
#line 1637 
    if ((unsigned int)ee->ee_version > 12290U) 
#line 1638 
                                               offset += 8U; else 
#line 1640 
                                                                  offset += 7U;
    
#line 1641 
    rep += 8U;
    
#line 1642 
    goto ldv_50747;
  }
  else ;
  
#line 1644 
  if ((unsigned int)ee->ee_version > 12290U) {
    int tmp_7;
    bool tmp_6;
    u32 tmp_5;
    int tmp_10;
    bool tmp_9;
    u32 tmp_8;
    
#line 1645 
    j = 0;
    
#line 1645 
    goto ldv_50749;
    ldv_50748: 
#line 1646 
    ;
    
#line 1646 
    tmp_5 = offset;
    
#line 1646 
    offset += 1U;
    
#line 1646 
    ;
    
#line 1646 
    ;
    
#line 1646 
    tmp_6 = ath5k_hw_nvram_read(ah,tmp_5,& val);
    
#line 1646 
    if (tmp_6) 
#line 1646 
               tmp_7 = 0; else 
#line 1646 
                               tmp_7 = 1;
    
#line 1646 
    if (tmp_7) {
      
#line 1646 
      __retres = -5;
      
#line 1646 
      goto return_label;
    }
    else ;
    
#line 1647 
    (rep + j)->freq = (unsigned short)((int)((unsigned short)((int)val >> 8)) & (int)((unsigned short)fmask));
    
#line 1648 
    (rep + ((unsigned int)j + 1U))->freq = (unsigned short)((int)((unsigned short)fmask) & (int)val);
    
#line 1645 
    j += 2;
    ldv_50749: 
#line 1646 
    ;
    
#line 1645 
    if (j <= 7) 
#line 1647 
                goto ldv_50748; else 
#line 1650 
                                     goto ldv_50750;
    ldv_50750: 
#line 1651 
    ;
    
#line 1650 
    j = 0;
    
#line 1650 
    goto ldv_50752;
    ldv_50751: 
#line 1651 
    ;
    
#line 1651 
    tmp_8 = offset;
    
#line 1651 
    offset += 1U;
    
#line 1651 
    ;
    
#line 1651 
    ;
    
#line 1651 
    tmp_9 = ath5k_hw_nvram_read(ah,tmp_8,& val);
    
#line 1651 
    if (tmp_9) 
#line 1651 
               tmp_10 = 0; else 
#line 1651 
                                tmp_10 = 1;
    
#line 1651 
    if (tmp_10) {
      
#line 1651 
      __retres = -5;
      
#line 1651 
      goto return_label;
    }
    else ;
    
#line 1652 
    (rep + j)->edge = (unsigned short)((int)((unsigned short)((int)val >> 8)) & (int)((unsigned short)pmask));
    
#line 1653 
    (rep + j)->flag = (_Bool)((((int)val >> 14) & 1) != 0);
    
#line 1654 
    (rep + ((unsigned int)j + 1U))->edge = (unsigned short)((int)((unsigned short)pmask) & (int)val);
    
#line 1655 
    (rep + ((unsigned int)j + 1U))->flag = (_Bool)((((int)val >> 6) & 1) != 0);
    
#line 1650 
    j += 2;
    ldv_50752: 
#line 1651 
    ;
    
#line 1650 
    if (j <= 7) 
#line 1652 
                goto ldv_50751; else 
#line 1655 
                                     goto ldv_50753;
    ldv_50753: 
#line 1656 
    ;
  }
  else {
    int tmp_13;
    bool tmp_12;
    u32 tmp_11;
    int tmp_16;
    bool tmp_15;
    u32 tmp_14;
    int tmp_19;
    bool tmp_18;
    u32 tmp_17;
    int tmp_22;
    bool tmp_21;
    u32 tmp_20;
    int tmp_25;
    bool tmp_24;
    u32 tmp_23;
    int tmp_28;
    bool tmp_27;
    u32 tmp_26;
    int tmp_31;
    bool tmp_30;
    u32 tmp_29;
    
#line 1658 
    tmp_11 = offset;
    
#line 1658 
    offset += 1U;
    
#line 1658 
    ;
    
#line 1658 
    ;
    
#line 1658 
    tmp_12 = ath5k_hw_nvram_read(ah,tmp_11,& val);
    
#line 1658 
    if (tmp_12) 
#line 1658 
                tmp_13 = 0; else 
#line 1658 
                                 tmp_13 = 1;
    
#line 1658 
    if (tmp_13) {
      
#line 1658 
      __retres = -5;
      
#line 1658 
      goto return_label;
    }
    else ;
    
#line 1659 
    rep->freq = (unsigned short)((int)((unsigned short)((int)val >> 9)) & (int)((unsigned short)fmask));
    
#line 1660 
    (rep + 1U)->freq = (unsigned short)((int)((unsigned short)((int)val >> 2)) & (int)((unsigned short)fmask));
    
#line 1661 
    (rep + 2U)->freq = (unsigned short)(((int)val << 5U) & (int)((unsigned short)fmask));
    
#line 1663 
    tmp_14 = offset;
    
#line 1663 
    offset += 1U;
    
#line 1663 
    ;
    
#line 1663 
    ;
    
#line 1663 
    tmp_15 = ath5k_hw_nvram_read(ah,tmp_14,& val);
    
#line 1663 
    if (tmp_15) 
#line 1663 
                tmp_16 = 0; else 
#line 1663 
                                 tmp_16 = 1;
    
#line 1663 
    if (tmp_16) {
      
#line 1663 
      __retres = -5;
      
#line 1663 
      goto return_label;
    }
    else ;
    
#line 1664 
    (rep + 2U)->freq = (unsigned short)((int)(rep + 2U)->freq | ((int)val >> 11));
    
#line 1665 
    (rep + 3U)->freq = (unsigned short)((int)((unsigned short)((int)val >> 4)) & (int)((unsigned short)fmask));
    
#line 1666 
    (rep + 4U)->freq = (unsigned short)(((int)val << 3U) & (int)((unsigned short)fmask));
    
#line 1668 
    tmp_17 = offset;
    
#line 1668 
    offset += 1U;
    
#line 1668 
    ;
    
#line 1668 
    ;
    
#line 1668 
    tmp_18 = ath5k_hw_nvram_read(ah,tmp_17,& val);
    
#line 1668 
    if (tmp_18) 
#line 1668 
                tmp_19 = 0; else 
#line 1668 
                                 tmp_19 = 1;
    
#line 1668 
    if (tmp_19) {
      
#line 1668 
      __retres = -5;
      
#line 1668 
      goto return_label;
    }
    else ;
    
#line 1669 
    (rep + 4U)->freq = (unsigned short)((int)(rep + 4U)->freq | ((int)val >> 13));
    
#line 1670 
    (rep + 5U)->freq = (unsigned short)((int)((unsigned short)((int)val >> 6)) & (int)((unsigned short)fmask));
    
#line 1671 
    (rep + 6U)->freq = (unsigned short)(((int)val << 1U) & (int)((unsigned short)fmask));
    
#line 1673 
    tmp_20 = offset;
    
#line 1673 
    offset += 1U;
    
#line 1673 
    ;
    
#line 1673 
    ;
    
#line 1673 
    tmp_21 = ath5k_hw_nvram_read(ah,tmp_20,& val);
    
#line 1673 
    if (tmp_21) 
#line 1673 
                tmp_22 = 0; else 
#line 1673 
                                 tmp_22 = 1;
    
#line 1673 
    if (tmp_22) {
      
#line 1673 
      __retres = -5;
      
#line 1673 
      goto return_label;
    }
    else ;
    
#line 1674 
    (rep + 6U)->freq = (unsigned short)((int)(rep + 6U)->freq | ((int)val >> 15));
    
#line 1675 
    (rep + 7U)->freq = (unsigned short)((int)((unsigned short)((int)val >> 8)) & (int)((unsigned short)fmask));
    
#line 1677 
    rep->edge = (unsigned short)((int)((unsigned short)((int)val >> 2)) & (int)((unsigned short)pmask));
    
#line 1678 
    (rep + 1U)->edge = (unsigned short)(((int)val << 4U) & (int)((unsigned short)pmask));
    
#line 1680 
    tmp_23 = offset;
    
#line 1680 
    offset += 1U;
    
#line 1680 
    ;
    
#line 1680 
    ;
    
#line 1680 
    tmp_24 = ath5k_hw_nvram_read(ah,tmp_23,& val);
    
#line 1680 
    if (tmp_24) 
#line 1680 
                tmp_25 = 0; else 
#line 1680 
                                 tmp_25 = 1;
    
#line 1680 
    if (tmp_25) {
      
#line 1680 
      __retres = -5;
      
#line 1680 
      goto return_label;
    }
    else ;
    
#line 1681 
    (rep + 1U)->edge = (unsigned short)((int)(rep + 1U)->edge | ((int)val >> 12));
    
#line 1682 
    (rep + 2U)->edge = (unsigned short)((int)((unsigned short)((int)val >> 6)) & (int)((unsigned short)pmask));
    
#line 1683 
    (rep + 3U)->edge = (unsigned short)((int)((unsigned short)pmask) & (int)val);
    
#line 1685 
    tmp_26 = offset;
    
#line 1685 
    offset += 1U;
    
#line 1685 
    ;
    
#line 1685 
    ;
    
#line 1685 
    tmp_27 = ath5k_hw_nvram_read(ah,tmp_26,& val);
    
#line 1685 
    if (tmp_27) 
#line 1685 
                tmp_28 = 0; else 
#line 1685 
                                 tmp_28 = 1;
    
#line 1685 
    if (tmp_28) {
      
#line 1685 
      __retres = -5;
      
#line 1685 
      goto return_label;
    }
    else ;
    
#line 1686 
    (rep + 4U)->edge = (unsigned short)((int)((unsigned short)((int)val >> 10)) & (int)((unsigned short)pmask));
    
#line 1687 
    (rep + 5U)->edge = (unsigned short)((int)((unsigned short)((int)val >> 4)) & (int)((unsigned short)pmask));
    
#line 1688 
    (rep + 6U)->edge = (unsigned short)(((int)val << 2U) & (int)((unsigned short)pmask));
    
#line 1690 
    tmp_29 = offset;
    
#line 1690 
    offset += 1U;
    
#line 1690 
    ;
    
#line 1690 
    ;
    
#line 1690 
    tmp_30 = ath5k_hw_nvram_read(ah,tmp_29,& val);
    
#line 1690 
    if (tmp_30) 
#line 1690 
                tmp_31 = 0; else 
#line 1690 
                                 tmp_31 = 1;
    
#line 1690 
    if (tmp_31) {
      
#line 1690 
      __retres = -5;
      
#line 1690 
      goto return_label;
    }
    else ;
    
#line 1691 
    (rep + 6U)->edge = (unsigned short)((int)(rep + 6U)->edge | ((int)val >> 14));
    
#line 1692 
    (rep + 7U)->edge = (unsigned short)((int)((unsigned short)((int)val >> 8)) & (int)((unsigned short)pmask));
  }
  
#line 1694 
  j = 0;
  
#line 1694 
  goto ldv_50755;
  ldv_50754: 
#line 1695 
  ;
  
#line 1695 
  (rep + j)->freq = ath5k_eeprom_bin2freq(ee,(unsigned short)((int)(rep + j)->freq),ctl_mode);
  
#line 1694 
  j += 1;
  ldv_50755: 
#line 1695 
  ;
  
#line 1694 
  if (j <= 7) 
#line 1696 
              goto ldv_50754; else 
#line 1699 
                                   goto ldv_50756;
  ldv_50756: 
#line 1700 
  ;
  
#line 1698 
  rep += 8U;
  ldv_50747: 
#line 1699 
  ;
  
#line 1626 
  i += 1;
  ldv_50758: 
#line 1627 
  ;
  
#line 1626 
  if ((int)ee->ee_ctls > i) 
#line 1628 
                            goto ldv_50757; else 
#line 1631 
                                                 goto ldv_50759;
  ldv_50759: 
#line 1632 
  ;
  
#line 1701 
  __retres = 0;
  return_label: 
#line 1701 
                return __retres;
}


#line 1705  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.c"
static int ath5k_eeprom_read_spur_chans(struct ath5k_hw *ah)
{
  int __retres;
  u32 offset;
  u16 val;
  int i;
  int tmp;
  int tmp_0;
  
#line 1707 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 1710 
  int ret = 0;
  
#line 1712 
  if ((unsigned int)ee->ee_version > 12290U) 
#line 1712 
                                             tmp = 296; else 
#line 1712 
                                                             tmp = 228;
  
#line 1712 
  if ((unsigned int)ee->ee_version > 12290U) 
#line 1712 
                                             tmp_0 = 32; else 
#line 1712 
                                                              tmp_0 = 16;
  
#line 1712 
  offset = (unsigned int)(tmp + tmp_0);
  
#line 1715 
  if ((unsigned int)ee->ee_version <= 20482U) {
    
#line 1717 
    ee->ee_spur_chans[0][0] = (unsigned short)32768U;
    
#line 1719 
    ee->ee_spur_chans[0][1] = (unsigned short)1640U;
    
#line 1720 
    ee->ee_spur_chans[1][1] = (unsigned short)1200U;
    
#line 1721 
    ee->ee_spur_chans[2][1] = (unsigned short)32768U;
  }
  else 
    
#line 1722 
    if ((unsigned int)ee->ee_version > 20482U) {
      int tmp_2;
      bool tmp_1;
      int tmp_4;
      bool tmp_3;
      
#line 1723 
      i = 0;
      
#line 1723 
      goto ldv_50769;
      ldv_50768: 
#line 1724 
      ;
      
#line 1724 
      tmp_1 = ath5k_hw_nvram_read(ah,offset,& val);
      
#line 1724 
      if (tmp_1) 
#line 1724 
                 tmp_2 = 0; else 
#line 1724 
                                 tmp_2 = 1;
      
#line 1724 
      if (tmp_2) {
        
#line 1724 
        __retres = -5;
        
#line 1724 
        goto return_label;
      }
      else ;
      
#line 1725 
      ee->ee_spur_chans[i][0] = val;
      
#line 1726 
      tmp_3 = ath5k_hw_nvram_read(ah,offset + 5U,& val);
      
#line 1726 
      if (tmp_3) 
#line 1726 
                 tmp_4 = 0; else 
#line 1726 
                                 tmp_4 = 1;
      
#line 1726 
      if (tmp_4) {
        
#line 1726 
        __retres = -5;
        
#line 1726 
        goto return_label;
      }
      else ;
      
#line 1728 
      ee->ee_spur_chans[i][1] = val;
      
#line 1729 
      offset += 1U;
      
#line 1723 
      i += 1;
      ldv_50769: 
#line 1724 
      ;
      
#line 1723 
      if (i <= 4) 
#line 1725 
                  goto ldv_50768; else 
#line 1728 
                                       goto ldv_50770;
      ldv_50770: 
#line 1729 
      ;
    }
    else ;
  
#line 1733 
  __retres = ret;
  return_label: 
#line 1733 
                return __retres;
}


#line 1745  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.c"
int ath5k_eeprom_init(struct ath5k_hw *ah)
{
  int __retres;
  int err;
  
#line 1749 
  err = ath5k_eeprom_init_header(ah);
  
#line 1750 
  if (err < 0) {
    
#line 1751 
    __retres = err;
    
#line 1751 
    goto return_label;
  }
  else ;
  
#line 1753 
  err = ath5k_eeprom_init_modes(ah);
  
#line 1754 
  if (err < 0) {
    
#line 1755 
    __retres = err;
    
#line 1755 
    goto return_label;
  }
  else ;
  
#line 1757 
  err = ath5k_eeprom_read_pcal_info(ah);
  
#line 1758 
  if (err < 0) {
    
#line 1759 
    __retres = err;
    
#line 1759 
    goto return_label;
  }
  else ;
  
#line 1761 
  err = ath5k_eeprom_read_ctl_info(ah);
  
#line 1762 
  if (err < 0) {
    
#line 1763 
    __retres = err;
    
#line 1763 
    goto return_label;
  }
  else ;
  
#line 1765 
  err = ath5k_eeprom_read_spur_chans(ah);
  
#line 1766 
  if (err < 0) {
    
#line 1767 
    __retres = err;
    
#line 1767 
    goto return_label;
  }
  else ;
  
#line 1769 
  __retres = 0;
  return_label: 
#line 1769 
                return __retres;
}


#line 1773  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.c"
void ath5k_eeprom_detach(struct ath5k_hw *ah)
{
  u8 mode;
  
#line 1777 
  mode = (unsigned char)0U;
  
#line 1777 
  goto ldv_50780;
  ldv_50779: 
#line 1778 
  ;
  
#line 1778 
  ath5k_eeprom_free_pcal_info(ah,(int)mode);
  
#line 1777 
  mode = (u8)((int)mode + 1);
  ldv_50780: 
#line 1778 
  ;
  
#line 1777 
  if ((unsigned int)mode <= 2U) 
#line 1779 
                                goto ldv_50779; else 
#line 1782 
                                                     goto ldv_50781;
  ldv_50781: 
#line 1783 
  ;
  
#line 1784 
  return;
}


#line 1782  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/eeprom.c"
int ath5k_eeprom_mode_from_channel(struct ath5k_hw *ah, struct ieee80211_channel *channel)
{
  int __retres;
  
#line 1785 
  switch ((int)channel->hw_value) {
    int tmp;
    case 0: 
#line 1786 
    ;
    
#line 1787 
    __retres = 0;
    
#line 1787 
    goto return_label;
    case 2: 
#line 1788 
    ;
    
#line 1789 
    __retres = 2;
    
#line 1789 
    goto return_label;
    case 1: 
#line 1790 
    ;
    
#line 1791 
    __retres = 1;
    
#line 1791 
    goto return_label;
    default: 
#line 1792 
    ;
    
#line 1793 
    tmp = net_ratelimit();
    
#line 1793 
    if (tmp != 0) 
#line 1793 
                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","channel is not A/B/G!"); else ;
    
#line 1794 
    __retres = 0;
    
#line 1794 
    goto return_label;
  }
  return_label: 
#line 1785 
                return __retres;
}


#line 413  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_eeprom.c.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 416 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 416 
  return tmp;
}


#line 1586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
void ath5k_hw_set_ledstate(struct ath5k_hw *ah, unsigned int state);


#line 1587 
int ath5k_hw_set_gpio_input(struct ath5k_hw *ah, u32 gpio);


#line 1588 
int ath5k_hw_set_gpio_output(struct ath5k_hw *ah, u32 gpio);


#line 1589 
u32 ath5k_hw_get_gpio(struct ath5k_hw *ah, u32 gpio);


#line 1590 
int ath5k_hw_set_gpio(struct ath5k_hw *ah, u32 gpio, u32 val);


#line 1591 
void ath5k_hw_set_gpio_intr(struct ath5k_hw *ah, unsigned int gpio, u32 interrupt_level);


#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/gpio.c"
void ath5k_hw_set_ledstate(struct ath5k_hw *ah, unsigned int state)
{
  u32 led;
  u32 led_5210;
  
#line 60 
  if (ah->ah_version != (unsigned int)AR5K_AR5210) {
    u32 tmp;
    
#line 61 
    tmp = ath5k_hw_reg_read(ah,(unsigned short)16400);
    
#line 61 
    ;
    
#line 61 
    ath5k_hw_reg_write(ah,tmp & 4294049695U,(unsigned short)16400);
  }
  else {
    u32 tmp_0;
    
#line 64 
    tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)16400);
    
#line 64 
    ;
    
#line 64 
    ath5k_hw_reg_write(ah,tmp_0 & 4294967199U,(unsigned short)16400);
  }
  
#line 69 
  switch (state) {
    case (unsigned int)1: 
#line 70 
    ;
    case (unsigned int)2: 
#line 71 
    ;
    
#line 72 
    led = 32U;
    
#line 73 
    led_5210 = 4128U;
    
#line 74 
    goto ldv_50413;
    case (unsigned int)0: 
#line 76 
    ;
    
#line 77 
    led = 0U;
    
#line 78 
    led_5210 = 32U;
    
#line 79 
    goto ldv_50413;
    case (unsigned int)3: 
#line 81 
    ;
    case (unsigned int)4: 
#line 82 
    ;
    
#line 83 
    led = 64U;
    
#line 84 
    led_5210 = 64U;
    
#line 85 
    goto ldv_50413;
    default: 
#line 87 
    ;
    
#line 88 
    led = 131072U;
    
#line 89 
    led_5210 = 32U;
    
#line 90 
    goto ldv_50413;
  }
  ldv_50413: 
#line 94 
  ;
  
#line 94 
  if (ah->ah_version != (unsigned int)AR5K_AR5210) {
    u32 tmp_1;
    
#line 95 
    tmp_1 = ath5k_hw_reg_read(ah,(unsigned short)16400);
    
#line 95 
    ;
    
#line 95 
    ;
    
#line 95 
    ath5k_hw_reg_write(ah,tmp_1 | led,(unsigned short)16400);
  }
  else {
    u32 tmp_2;
    
#line 97 
    tmp_2 = ath5k_hw_reg_read(ah,(unsigned short)16400);
    
#line 97 
    ;
    
#line 97 
    ;
    
#line 97 
    ath5k_hw_reg_write(ah,tmp_2 | led_5210,(unsigned short)16400);
  }
  
#line 98 
  return;
}


#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/gpio.c"
int ath5k_hw_set_gpio_input(struct ath5k_hw *ah, u32 gpio)
{
  int __retres;
  u32 tmp;
  
#line 108 
  if (gpio > 5U) {
    
#line 109 
    __retres = -22;
    
#line 109 
    goto return_label;
  }
  else ;
  
#line 111 
  tmp = ath5k_hw_reg_read(ah,(unsigned short)16404);
  
#line 111 
  ;
  
#line 111 
  ;
  
#line 111 
  ath5k_hw_reg_write(ah,tmp & (unsigned int)(~ (3 << gpio * 2U)),(unsigned short)16404);
  
#line 115 
  __retres = 0;
  return_label: 
#line 115 
                return __retres;
}


#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/gpio.c"
int ath5k_hw_set_gpio_output(struct ath5k_hw *ah, u32 gpio)
{
  int __retres;
  u32 tmp;
  
#line 126 
  if (gpio > 5U) {
    
#line 127 
    __retres = -22;
    
#line 127 
    goto return_label;
  }
  else ;
  
#line 129 
  tmp = ath5k_hw_reg_read(ah,(unsigned short)16404);
  
#line 129 
  ;
  
#line 129 
  ;
  
#line 129 
  ath5k_hw_reg_write(ah,(tmp & (unsigned int)(~ (3 << gpio * 2U))) | (unsigned int)(3 << gpio * 2U),(unsigned short)16404);
  
#line 133 
  __retres = 0;
  return_label: 
#line 133 
                return __retres;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/gpio.c"
u32 ath5k_hw_get_gpio(struct ath5k_hw *ah, u32 gpio)
{
  u32 __retres;
  u32 tmp;
  
#line 144 
  if (gpio > 5U) {
    
#line 145 
    __retres = 4294967295U;
    
#line 145 
    goto return_label;
  }
  else ;
  
#line 148 
  tmp = ath5k_hw_reg_read(ah,(unsigned short)16412);
  
#line 148 
  ;
  
#line 148 
  __retres = ((tmp & 47U) >> gpio) & 1U;
  return_label: 
#line 148 
                return __retres;
}


#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/gpio.c"
int ath5k_hw_set_gpio(struct ath5k_hw *ah, u32 gpio, u32 val)
{
  int __retres;
  u32 data;
  
#line 163 
  if (gpio > 5U) {
    
#line 164 
    __retres = -22;
    
#line 164 
    goto return_label;
  }
  else ;
  
#line 167 
  data = ath5k_hw_reg_read(ah,(unsigned short)16408);
  
#line 169 
  data = (unsigned int)(~ (1 << gpio)) & data;
  
#line 170 
  data = ((val & 1U) << gpio) | data;
  
#line 172 
  ath5k_hw_reg_write(ah,data,(unsigned short)16408);
  
#line 174 
  __retres = 0;
  return_label: 
#line 174 
                return __retres;
}


#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/gpio.c"
void ath5k_hw_set_gpio_intr(struct ath5k_hw *ah, unsigned int gpio, u32 interrupt_level)
{
  u32 data;
  u32 tmp;
  unsigned int tmp_0;
  u32 tmp_1;
  
#line 194 
  if (gpio > 5U) 
#line 195 
                 goto return_label; else ;
  
#line 200 
  tmp = ath5k_hw_reg_read(ah,(unsigned short)16404);
  
#line 200 
  data = ((tmp & ~ (((gpio << 12) | (unsigned int)(3 << gpio * 2U)) | 98304U)) | (gpio << 12)) | 32768U;
  
#line 205 
  if (interrupt_level == 0U) 
#line 205 
                             tmp_0 = data | 65536U; else 
#line 205 
                                                         tmp_0 = data;
  
#line 205 
  ;
  
#line 205 
  ath5k_hw_reg_write(ah,tmp_0,(unsigned short)16404);
  
#line 208 
  ah->ah_imr = (enum ath5k_int)((unsigned int)ah->ah_imr | 16777216U);
  
#line 211 
  tmp_1 = ath5k_hw_reg_read(ah,(unsigned short)160);
  
#line 211 
  ;
  
#line 211 
  ath5k_hw_reg_write(ah,tmp_1 | 16777216U,(unsigned short)160);
  return_label: 
#line 212 
                return;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 1507  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
void ath5k_hw_start_rx_dma(struct ath5k_hw *ah);


#line 1508 
u32 ath5k_hw_get_rxdp(struct ath5k_hw *ah);


#line 1509 
int ath5k_hw_set_rxdp(struct ath5k_hw *ah, u32 phys_addr);


#line 1510 
int ath5k_hw_start_tx_dma(struct ath5k_hw *ah, unsigned int queue);


#line 1511 
int ath5k_hw_stop_beacon_queue(struct ath5k_hw *ah, unsigned int queue);


#line 1512 
u32 ath5k_hw_get_txdp(struct ath5k_hw *ah, unsigned int queue);


#line 1513 
int ath5k_hw_set_txdp(struct ath5k_hw *ah, unsigned int queue, u32 phys_addr);


#line 1515 
int ath5k_hw_update_tx_triglevel(struct ath5k_hw *ah, bool increase);


#line 1517 
bool ath5k_hw_is_intr_pending(struct ath5k_hw *ah);


#line 1518 
int ath5k_hw_get_isr(struct ath5k_hw *ah, enum ath5k_int *interrupt_mask);


#line 1519 
enum ath5k_int ath5k_hw_set_imr(struct ath5k_hw *ah, enum ath5k_int new_mask);


#line 1522 
void ath5k_hw_dma_init(struct ath5k_hw *ah);


#line 1523 
int ath5k_hw_dma_stop(struct ath5k_hw *ah);


#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/dma.c"
void ath5k_hw_start_rx_dma(struct ath5k_hw *ah)
{
  
#line 50 
  ath5k_hw_reg_write(ah,4U,(unsigned short)8);
  
#line 51 
  ath5k_hw_reg_read(ah,(unsigned short)8);
  
#line 52 
  return;
}


#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/dma.c"
static int ath5k_hw_stop_rx_dma(struct ath5k_hw *ah)
{
  unsigned int i;
  int tmp_1;
  
#line 63 
  ath5k_hw_reg_write(ah,32U,(unsigned short)8);
  
#line 68 
  i = 1000U;
  
#line 68 
  goto ldv_50413;
  ldv_50412: 
#line 69 
  ;
  
#line 71 
  __const_udelay(429500UL);
  
#line 70 
  i -= 1U;
  ldv_50413: 
#line 71 
  ;
  
#line 68 
  if (i != 0U) {
    u32 tmp;
    
#line 68 
    tmp = ath5k_hw_reg_read(ah,(unsigned short)8);
    
#line 68 
    if ((tmp & 4U) != 0U) 
#line 71 
                          goto ldv_50412; else 
#line 74 
                                               goto ldv_50414;
  }
  else 
#line 74 
       goto ldv_50414;
  ldv_50414: 
#line 75 
  ;
  
#line 73 
  if (i == 0U) {
    
#line 74 
    if ((long)((ah->debug.level & 2048U) != 0U) != 0L) {
      int tmp_0;
      
#line 74 
      tmp_0 = net_ratelimit();
      
#line 74 
      if ((long)(tmp_0 != 0) != 0L) 
#line 74 
                                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_hw_stop_rx_dma",75); else ;
    }
    else ;
  }
  else ;
  
#line 77 
  if (i != 0U) 
#line 77 
               tmp_1 = 0; else 
#line 77 
                               tmp_1 = -16;
  
#line 77 
  return tmp_1;
}


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/dma.c"
u32 ath5k_hw_get_rxdp(struct ath5k_hw *ah)
{
  u32 tmp;
  
#line 87 
  tmp = ath5k_hw_reg_read(ah,(unsigned short)12);
  
#line 87 
  return tmp;
}


#line 98  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/dma.c"
int ath5k_hw_set_rxdp(struct ath5k_hw *ah, u32 phys_addr)
{
  int __retres;
  u32 tmp_0;
  
#line 100 
  tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)8);
  
#line 100 
  if ((tmp_0 & 4U) != 0U) {
    
#line 101 
    if ((long)((ah->debug.level & 2048U) != 0U) != 0L) {
      int tmp;
      
#line 101 
      tmp = net_ratelimit();
      
#line 101 
      if ((long)(tmp != 0) != 0L) 
#line 101 
                                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_hw_set_rxdp",102); else ;
    }
    else ;
    
#line 103 
    __retres = -5;
    
#line 103 
    goto return_label;
  }
  else ;
  
#line 106 
  ath5k_hw_reg_write(ah,phys_addr,(unsigned short)12);
  
#line 107 
  __retres = 0;
  return_label: 
#line 107 
                return __retres;
}


#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/dma.c"
int ath5k_hw_start_tx_dma(struct ath5k_hw *ah, unsigned int queue)
{
  int __retres;
  u32 tx_queue;
  
#line 134 
  if ((unsigned int)ah->ah_capabilities.cap_queues.q_tx_num <= queue) {
    
#line 134 
    __retres = 0;
    
#line 134 
    goto return_label;
  }
  else ;
  
#line 137 
  if (ah->ah_txq[queue].tqi_type == (unsigned int)AR5K_TX_QUEUE_INACTIVE) {
    
#line 138 
    __retres = -22;
    
#line 138 
    goto return_label;
  }
  else ;
  
#line 140 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) {
    
#line 141 
    tx_queue = ath5k_hw_reg_read(ah,(unsigned short)8);
    
#line 146 
    switch ((unsigned int)ah->ah_txq[queue].tqi_type) {
      case (unsigned int)1: 
#line 147 
      ;
      
#line 148 
      tx_queue |= 1U;
      
#line 149 
      goto ldv_50430;
      case (unsigned int)2: 
#line 150 
      ;
      
#line 151 
      tx_queue |= 2U;
      
#line 152 
      ath5k_hw_reg_write(ah,10U,(unsigned short)44);
      
#line 154 
      goto ldv_50430;
      case (unsigned int)3: 
#line 155 
      ;
      
#line 156 
      tx_queue |= 2U;
      
#line 157 
      ath5k_hw_reg_write(ah,14U,(unsigned short)44);
      
#line 159 
      goto ldv_50430;
      default: 
#line 160 
      ;
      
#line 161 
      __retres = -22;
      
#line 161 
      goto return_label;
    }
    ldv_50430: 
#line 164 
    ;
    
#line 164 
    ath5k_hw_reg_write(ah,tx_queue,(unsigned short)8);
    
#line 165 
    ath5k_hw_reg_read(ah,(unsigned short)8);
  }
  else {
    u32 tmp;
    
#line 168 
    tmp = ath5k_hw_reg_read(ah,(unsigned short)2176);
    
#line 168 
    ;
    
#line 168 
    if ((tmp & (unsigned int)(1 << queue)) != 0U) {
      
#line 169 
      __retres = -5;
      
#line 169 
      goto return_label;
    }
    else ;
    
#line 172 
    ath5k_hw_reg_write(ah,(unsigned int)(1 << queue),(unsigned short)2112);
  }
  
#line 175 
  __retres = 0;
  return_label: 
#line 175 
                return __retres;
}


#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/dma.c"
static int ath5k_hw_stop_tx_dma(struct ath5k_hw *ah, unsigned int queue)
{
  int __retres;
  u32 tx_queue;
  u32 pending;
  
#line 190 
  unsigned int i = 40U;
  
#line 193 
  if ((unsigned int)ah->ah_capabilities.cap_queues.q_tx_num <= queue) {
    
#line 193 
    __retres = 0;
    
#line 193 
    goto return_label;
  }
  else ;
  
#line 196 
  if (ah->ah_txq[queue].tqi_type == (unsigned int)AR5K_TX_QUEUE_INACTIVE) {
    
#line 197 
    __retres = -22;
    
#line 197 
    goto return_label;
  }
  else ;
  
#line 199 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) {
    
#line 200 
    tx_queue = ath5k_hw_reg_read(ah,(unsigned short)8);
    
#line 205 
    switch ((unsigned int)ah->ah_txq[queue].tqi_type) {
      case (unsigned int)1: 
#line 206 
      ;
      
#line 207 
      tx_queue |= 8U;
      
#line 208 
      goto ldv_50442;
      case (unsigned int)2: 
#line 209 
      ;
      case (unsigned int)3: 
#line 210 
      ;
      
#line 212 
      tx_queue = tx_queue;
      
#line 213 
      ath5k_hw_reg_write(ah,0U,(unsigned short)44);
      
#line 214 
      goto ldv_50442;
      default: 
#line 215 
      ;
      
#line 216 
      __retres = -22;
      
#line 216 
      goto return_label;
    }
    ldv_50442: 
#line 220 
    ;
    
#line 220 
    ath5k_hw_reg_write(ah,tx_queue,(unsigned short)8);
    
#line 221 
    ath5k_hw_reg_read(ah,(unsigned short)8);
  }
  else {
    u32 tmp;
    u32 tmp_2;
    u32 tmp_3;
    u32 tmp_10;
    
#line 228 
    ;
    
#line 228 
    tmp = ath5k_hw_reg_read(ah,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 2496U)));
    
#line 228 
    ;
    
#line 228 
    ath5k_hw_reg_write(ah,tmp | 2048U,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 2496U)));
    
#line 234 
    ath5k_hw_reg_write(ah,(unsigned int)(1 << queue),(unsigned short)2176);
    
#line 237 
    i = 1000U;
    
#line 237 
    goto ldv_50447;
    ldv_50446: 
#line 238 
    ;
    
#line 240 
    __const_udelay(429500UL);
    
#line 239 
    i -= 1U;
    ldv_50447: 
#line 240 
    ;
    
#line 237 
    if (i != 0U) {
      u32 tmp_0;
      
#line 237 
      tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)2112);
      
#line 237 
      ;
      
#line 237 
      if ((tmp_0 & (unsigned int)(1 << queue)) != 0U) 
#line 240 
                                                      goto ldv_50446; else 
                                                                    
#line 243 
                                                                    goto ldv_50448;
    }
    else 
#line 243 
         goto ldv_50448;
    ldv_50448: 
#line 244 
    ;
    
#line 242 
    tmp_2 = ath5k_hw_reg_read(ah,(unsigned short)2112);
    
#line 242 
    ;
    
#line 242 
    if ((tmp_2 & (unsigned int)(1 << queue)) != 0U) {
      
#line 243 
      if ((long)((ah->debug.level & 2048U) != 0U) != 0L) {
        int tmp_1;
        
#line 243 
        tmp_1 = net_ratelimit();
        
#line 243 
        if ((long)(tmp_1 != 0) != 0L) 
#line 243 
                                      _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_hw_stop_tx_dma",244,queue); else ;
      }
      else ;
    }
    else ;
    
#line 247 
    i = 1000U;
    ldv_50450: 
#line 248 
    ;
    
#line 249 
    tmp_3 = ath5k_hw_reg_read(ah,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 2560U)));
    
#line 249 
    pending = tmp_3 & 3U;
    
#line 252 
    __const_udelay(429500UL);
    
#line 253 
    i -= 1U;
    
#line 253 
    if (i != 0U) {
      
#line 253 
      if (pending != 0U) 
#line 255 
                         goto ldv_50450; else 
#line 258 
                                              goto ldv_50451;
    }
    else 
#line 258 
         goto ldv_50451;
    ldv_50451: 
#line 259 
    ;
    
#line 257 
    if ((unsigned int)ah->ah_mac_version > 6U && pending != 0U) {
      u32 tmp_4;
      u32 tmp_5;
      u32 tmp_6;
      u32 tmp_7;
      u32 tmp_8;
      
#line 260 
      ath5k_hw_reg_write(ah,655460U,(unsigned short)33024);
      
#line 266 
      tmp_4 = ath5k_hw_reg_read(ah,(unsigned short)32844);
      
#line 266 
      ;
      
#line 266 
      ath5k_hw_reg_write(ah,((tmp_4 >> 10) & 65535U) | 65536U,(unsigned short)33020);
      
#line 274 
      tmp_5 = ath5k_hw_reg_read(ah,(unsigned short)32840);
      
#line 274 
      ;
      
#line 274 
      ath5k_hw_reg_write(ah,tmp_5 | 4194304U,(unsigned short)32840);
      
#line 278 
      __const_udelay(1718000UL);
      
#line 279 
      tmp_6 = ath5k_hw_reg_read(ah,(unsigned short)33020);
      
#line 279 
      ;
      
#line 279 
      ath5k_hw_reg_write(ah,tmp_6 & 4294901759U,(unsigned short)33020);
      
#line 283 
      i = 100U;
      ldv_50452: 
#line 284 
      ;
      
#line 285 
      tmp_7 = ath5k_hw_reg_read(ah,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 2560U)));
      
#line 285 
      pending = tmp_7 & 3U;
      
#line 288 
      __const_udelay(429500UL);
      
#line 289 
      i -= 1U;
      
#line 289 
      if (i != 0U) {
        
#line 289 
        if (pending != 0U) 
#line 291 
                           goto ldv_50452; else 
#line 294 
                                                goto ldv_50453;
      }
      else 
#line 294 
           goto ldv_50453;
      ldv_50453: 
#line 295 
      ;
      
#line 291 
      tmp_8 = ath5k_hw_reg_read(ah,(unsigned short)32840);
      
#line 291 
      ;
      
#line 291 
      ath5k_hw_reg_write(ah,tmp_8 & 4290772991U,(unsigned short)32840);
      
#line 294 
      if (pending != 0U) {
        
#line 295 
        if ((long)((ah->debug.level & 2048U) != 0U) != 0L) {
          int tmp_9;
          
#line 295 
          tmp_9 = net_ratelimit();
          
#line 295 
          if ((long)(tmp_9 != 0) != 0L) 
#line 295 
                                        _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_hw_stop_tx_dma",297,queue); else ;
        }
        else ;
      }
      else ;
    }
    else ;
    
#line 303 
    ;
    
#line 303 
    tmp_10 = ath5k_hw_reg_read(ah,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 2496U)));
    
#line 303 
    ;
    
#line 303 
    ath5k_hw_reg_write(ah,tmp_10 & 4294965247U,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 2496U)));
    
#line 307 
    ath5k_hw_reg_write(ah,0U,(unsigned short)2176);
    
#line 308 
    if (pending != 0U) {
      
#line 309 
      if ((long)((ah->debug.level & 2048U) != 0U) != 0L) {
        int tmp_11;
        
#line 309 
        tmp_11 = net_ratelimit();
        
#line 309 
        if ((long)(tmp_11 != 0) != 0L) 
#line 309 
                                       _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_hw_stop_tx_dma",311,queue,pending); else ;
      }
      else ;
      
#line 312 
      __retres = -16;
      
#line 312 
      goto return_label;
    }
    else ;
  }
  
#line 317 
  __retres = 0;
  return_label: 
#line 317 
                return __retres;
}


#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/dma.c"
int ath5k_hw_stop_beacon_queue(struct ath5k_hw *ah, unsigned int queue)
{
  int __retres;
  int ret;
  
#line 331 
  ret = ath5k_hw_stop_tx_dma(ah,queue);
  
#line 332 
  if (ret != 0) {
    
#line 333 
    if ((long)((ah->debug.level & 2048U) != 0U) != 0L) {
      int tmp;
      
#line 333 
      tmp = net_ratelimit();
      
#line 333 
      if ((long)(tmp != 0) != 0L) 
#line 333 
                                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_hw_stop_beacon_queue",334); else ;
    }
    else ;
    
#line 335 
    __retres = -5;
    
#line 335 
    goto return_label;
  }
  else ;
  
#line 337 
  __retres = 0;
  return_label: 
#line 337 
                return __retres;
}


#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/dma.c"
u32 ath5k_hw_get_txdp(struct ath5k_hw *ah, unsigned int queue)
{
  u32 __retres;
  u16 tx_reg;
  u32 tmp;
  
#line 357 
  if ((unsigned int)ah->ah_capabilities.cap_queues.q_tx_num <= queue) {
    
#line 357 
    __retres = 0U;
    
#line 357 
    goto return_label;
  }
  else ;
  
#line 363 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) {
    
#line 364 
    switch ((unsigned int)ah->ah_txq[queue].tqi_type) {
      case (unsigned int)1: 
#line 365 
      ;
      
#line 366 
      tx_reg = (unsigned short)0U;
      
#line 367 
      goto ldv_50466;
      case (unsigned int)2: 
#line 368 
      ;
      case (unsigned int)3: 
#line 369 
      ;
      
#line 370 
      tx_reg = (unsigned short)4U;
      
#line 371 
      goto ldv_50466;
      default: 
#line 372 
      ;
      
#line 373 
      __retres = 4294967295U;
      
#line 373 
      goto return_label;
    }
    ldv_50466: 
#line 375 
    ;
  }
  else 
#line 376 
       tx_reg = (unsigned short)((unsigned int)((int)((unsigned short)queue) << 2U) + 2048U);
  
#line 379 
  tmp = ath5k_hw_reg_read(ah,(unsigned short)((int)tx_reg));
  
#line 379 
  __retres = tmp;
  return_label: 
#line 379 
                return __retres;
}


#line 396  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/dma.c"
int ath5k_hw_set_txdp(struct ath5k_hw *ah, unsigned int queue, u32 phys_addr)
{
  int __retres;
  u16 tx_reg;
  
#line 400 
  if ((unsigned int)ah->ah_capabilities.cap_queues.q_tx_num <= queue) {
    
#line 400 
    __retres = 0;
    
#line 400 
    goto return_label;
  }
  else ;
  
#line 406 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) {
    
#line 407 
    switch ((unsigned int)ah->ah_txq[queue].tqi_type) {
      case (unsigned int)1: 
#line 408 
      ;
      
#line 409 
      tx_reg = (unsigned short)0U;
      
#line 410 
      goto ldv_50477;
      case (unsigned int)2: 
#line 411 
      ;
      case (unsigned int)3: 
#line 412 
      ;
      
#line 413 
      tx_reg = (unsigned short)4U;
      
#line 414 
      goto ldv_50477;
      default: 
#line 415 
      ;
      
#line 416 
      __retres = -22;
      
#line 416 
      goto return_label;
    }
    ldv_50477: 
#line 418 
    ;
  }
  else {
    u32 tmp;
    
#line 424 
    tmp = ath5k_hw_reg_read(ah,(unsigned short)2112);
    
#line 424 
    ;
    
#line 424 
    if ((tmp & (unsigned int)(1 << queue)) != 0U) {
      
#line 425 
      __retres = -5;
      
#line 425 
      goto return_label;
    }
    else ;
    
#line 427 
    tx_reg = (unsigned short)((unsigned int)((int)((unsigned short)queue) << 2U) + 2048U);
  }
  
#line 431 
  ath5k_hw_reg_write(ah,phys_addr,(unsigned short)((int)tx_reg));
  
#line 433 
  __retres = 0;
  return_label: 
#line 433 
                return __retres;
}


#line 453  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/dma.c"
int ath5k_hw_update_tx_triglevel(struct ath5k_hw *ah, bool increase)
{
  u32 trigger_level;
  u32 imr;
  enum ath5k_int tmp;
  u32 tmp_0;
  
#line 456 
  int ret = -5;
  
#line 461 
  tmp = ath5k_hw_set_imr(ah,(enum ath5k_int)((unsigned int)ah->ah_imr & 2147483647U));
  
#line 461 
  imr = (unsigned int)tmp;
  
#line 463 
  tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)48);
  
#line 463 
  trigger_level = (tmp_0 >> 4) & 63U;
  
#line 466 
  if (! increase) {
    
#line 467 
    trigger_level -= 1U;
    
#line 467 
    if (trigger_level == 0U) 
#line 468 
                             goto done; else ;
  }
  else 
#line 470 
       trigger_level = (37U - trigger_level) / 2U + trigger_level;
  
#line 476 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 477 
                                                   ath5k_hw_reg_write(ah,trigger_level,(unsigned short)32868);
  else {
    u32 tmp_1;
    
#line 479 
    tmp_1 = ath5k_hw_reg_read(ah,(unsigned short)48);
    
#line 479 
    ;
    
#line 479 
    ;
    
#line 479 
    ath5k_hw_reg_write(ah,(tmp_1 & 4294966287U) | ((trigger_level << 4) & 1008U),(unsigned short)48);
  }
  
#line 482 
  ret = 0;
  done: 
#line 484 
  ;
  
#line 488 
  ath5k_hw_set_imr(ah,(enum ath5k_int)imr);
  
#line 490 
  return ret;
}


#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/dma.c"
bool ath5k_hw_is_intr_pending(struct ath5k_hw *ah)
{
  bool __retres;
  u32 tmp;
  
#line 508 
  tmp = ath5k_hw_reg_read(ah,(unsigned short)16392);
  
#line 508 
  __retres = (_Bool)(tmp == 1U);
  
#line 508 
  return __retres;
}


#line 527  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/dma.c"
int ath5k_hw_get_isr(struct ath5k_hw *ah, enum ath5k_int *interrupt_mask)
{
  int __retres;
  
#line 529 
  u32 data = 0U;
  
#line 537 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) {
    
#line 538 
    u32 isr = 0U;
    
#line 539 
    isr = ath5k_hw_reg_read(ah,(unsigned short)28);
    
#line 540 
    if ((long)(isr == 4294967295U) != 0L) {
      
#line 541 
      *interrupt_mask = (enum ath5k_int)isr;
      
#line 542 
      __retres = -19;
      
#line 542 
      goto return_label;
    }
    else ;
    
#line 549 
    *interrupt_mask = (enum ath5k_int)(((unsigned int)ah->ah_imr & isr) & 2164785151U);
    
#line 552 
    if ((long)((isr & 7340032U) != 0U) != 0L) 
#line 554 
                                              *interrupt_mask = (enum ath5k_int)((unsigned int)*interrupt_mask | 524288U); else ;
    
#line 564 
    data = isr;
  }
  else {
    
#line 566 
    u32 pisr = 0U;
    
#line 567 
    u32 pisr_clear = 0U;
    
#line 568 
    u32 sisr0 = 0U;
    
#line 569 
    u32 sisr1 = 0U;
    
#line 570 
    u32 sisr2 = 0U;
    
#line 571 
    u32 sisr3 = 0U;
    
#line 572 
    u32 sisr4 = 0U;
    
#line 575 
    pisr = ath5k_hw_reg_read(ah,(unsigned short)128);
    
#line 576 
    if ((long)(pisr == 4294967295U) != 0L) {
      
#line 577 
      *interrupt_mask = (enum ath5k_int)pisr;
      
#line 578 
      __retres = -19;
      
#line 578 
      goto return_label;
    }
    else ;
    
#line 581 
    sisr0 = ath5k_hw_reg_read(ah,(unsigned short)132);
    
#line 582 
    sisr1 = ath5k_hw_reg_read(ah,(unsigned short)136);
    
#line 583 
    sisr2 = ath5k_hw_reg_read(ah,(unsigned short)140);
    
#line 584 
    sisr3 = ath5k_hw_reg_read(ah,(unsigned short)144);
    
#line 585 
    sisr4 = ath5k_hw_reg_read(ah,(unsigned short)148);
    
#line 627 
    pisr_clear = pisr & 4051173375U;
    
#line 638 
    ath5k_hw_reg_write(ah,sisr0,(unsigned short)132);
    
#line 639 
    ath5k_hw_reg_write(ah,sisr1,(unsigned short)136);
    
#line 640 
    ath5k_hw_reg_write(ah,sisr2,(unsigned short)140);
    
#line 641 
    ath5k_hw_reg_write(ah,sisr3,(unsigned short)144);
    
#line 642 
    ath5k_hw_reg_write(ah,sisr4,(unsigned short)148);
    
#line 643 
    ath5k_hw_reg_write(ah,pisr_clear,(unsigned short)128);
    
#line 645 
    ath5k_hw_reg_read(ah,(unsigned short)128);
    
#line 651 
    *interrupt_mask = (enum ath5k_int)(((unsigned int)ah->ah_imr & pisr) & 2164785151U);
    
#line 657 
    if ((pisr & 64U) != 0U) 
#line 658 
                            ah->ah_txq_isr_txok_all |= sisr0 & 1023U; else ;
    
#line 661 
    if ((pisr & 128U) != 0U) 
#line 662 
                             ah->ah_txq_isr_txok_all |= (sisr0 >> 16) & 1023U; else ;
    
#line 665 
    if ((pisr & 256U) != 0U) 
#line 666 
                             ah->ah_txq_isr_txok_all |= sisr1 & 1023U; else ;
    
#line 669 
    if ((pisr & 1024U) != 0U) 
#line 670 
                              ah->ah_txq_isr_txok_all |= (sisr1 >> 16) & 1023U; else ;
    
#line 676 
    if ((pisr & 2048U) != 0U) 
#line 677 
                              ah->ah_txq_isr_txurn |= sisr2 & 1023U; else ;
    
#line 683 
    if ((pisr & 8388608U) != 0U) 
#line 684 
                                 *interrupt_mask = (enum ath5k_int)((unsigned int)*interrupt_mask | 2097152U); else ;
    
#line 687 
    if ((pisr & 8388608U) != 0U) {
      
#line 688 
      if ((sisr2 & 16777216U) != 0U) 
#line 689 
                                     *interrupt_mask = (enum ath5k_int)((unsigned int)*interrupt_mask | 2097152U); else ;
      
#line 690 
      if ((sisr2 & 536870912U) != 0U) 
#line 691 
                                      *interrupt_mask = (enum ath5k_int)((unsigned int)*interrupt_mask | 4194304U); else ;
      
#line 692 
      if ((sisr2 & 67108864U) != 0U) 
#line 693 
                                     *interrupt_mask = (enum ath5k_int)((unsigned int)*interrupt_mask | 8388608U); else ;
      
#line 694 
      if ((sisr2 & 134217728U) != 0U) 
#line 695 
                                      *interrupt_mask = (enum ath5k_int)((unsigned int)*interrupt_mask | 33554432U); else ;
      
#line 696 
      if ((sisr2 & 268435456U) != 0U) 
#line 697 
                                      *interrupt_mask = (enum ath5k_int)((unsigned int)*interrupt_mask | 67108864U); else ;
    }
    else ;
    
#line 704 
    if ((long)((pisr & 524288U) != 0U) != 0L) 
#line 705 
                                              *interrupt_mask = (enum ath5k_int)((unsigned int)*interrupt_mask | 524288U); else ;
    
#line 708 
    if ((long)((pisr & 1048576U) != 0U) != 0L) 
#line 709 
                                               *interrupt_mask = (enum ath5k_int)((unsigned int)*interrupt_mask | 1048576U); else ;
    
#line 712 
    if ((long)((pisr & 33554432U) != 0U) != 0L) {
      
#line 713 
      *interrupt_mask = (enum ath5k_int)((unsigned int)*interrupt_mask | 134217728U);
      
#line 714 
      ah->ah_txq_isr_qcborn |= sisr3 & 1023U;
    }
    else ;
    
#line 719 
    if ((long)((pisr & 67108864U) != 0U) != 0L) {
      
#line 720 
      *interrupt_mask = (enum ath5k_int)((unsigned int)*interrupt_mask | 268435456U);
      
#line 721 
      ah->ah_txq_isr_qcburn |= (sisr3 >> 16) & 1023U;
    }
    else ;
    
#line 726 
    if ((long)((pisr & 134217728U) != 0U) != 0L) {
      
#line 727 
      *interrupt_mask = (enum ath5k_int)((unsigned int)*interrupt_mask | 536870912U);
      
#line 728 
      ah->ah_txq_isr_qtrig |= sisr4 & 1023U;
    }
    else ;
    
#line 732 
    data = pisr;
  }
  
#line 739 
  if ((long)(*interrupt_mask == (unsigned int)0) != 0L) {
    int tmp;
    
#line 739 
    tmp = net_ratelimit();
    
#line 739 
    if ((long)(tmp != 0) != 0L) 
#line 740 
                                printk("\001","ath5k_hw_get_isr",data,(unsigned int)ah->ah_imr); else ;
  }
  else ;
  
#line 742 
  __retres = 0;
  return_label: 
#line 742 
                return __retres;
}


#line 755  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/dma.c"
enum ath5k_int ath5k_hw_set_imr(struct ath5k_hw *ah, enum ath5k_int new_mask)
{
  enum ath5k_int old_mask;
  enum ath5k_int int_mask;
  
#line 759 
  old_mask = ah->ah_imr;
  
#line 766 
  if (old_mask < (unsigned int)0) {
    
#line 767 
    ath5k_hw_reg_write(ah,0U,(unsigned short)36);
    
#line 768 
    ath5k_hw_reg_read(ah,(unsigned short)36);
  }
  else ;
  
#line 775 
  int_mask = (enum ath5k_int)((unsigned int)new_mask & 2164785151U);
  
#line 777 
  if (ah->ah_version != (unsigned int)AR5K_AR5210) {
    u32 tmp;
    
#line 779 
    tmp = ath5k_hw_reg_read(ah,(unsigned short)172);
    
#line 779 
    u32 simr2 = tmp & 1023U;
    
#line 783 
    if (((unsigned int)new_mask & 524288U) != 0U) {
      
#line 784 
      int_mask = (enum ath5k_int)((unsigned int)int_mask | 524288U);
      
#line 785 
      simr2 |= 458752U;
    }
    else ;
    
#line 790 
    if (((unsigned int)new_mask & 2097152U) != 0U) 
#line 791 
                                                   int_mask = (enum ath5k_int)((unsigned int)int_mask | 8388608U); else ;
    
#line 793 
    if (((unsigned int)new_mask & 2097152U) != 0U) 
#line 794 
                                                   simr2 |= 16777216U; else ;
    
#line 795 
    if (((unsigned int)new_mask & 4194304U) != 0U) 
#line 796 
                                                   simr2 |= 536870912U; else ;
    
#line 797 
    if (((unsigned int)new_mask & 8388608U) != 0U) 
#line 798 
                                                   simr2 |= 67108864U; else ;
    
#line 799 
    if (((unsigned int)new_mask & 33554432U) != 0U) 
#line 800 
                                                    simr2 |= 134217728U; else ;
    
#line 801 
    if (((unsigned int)new_mask & 67108864U) != 0U) 
#line 802 
                                                    simr2 |= 268435456U; else ;
    
#line 805 
    if (((unsigned int)new_mask & 1048576U) != 0U) 
#line 806 
                                                   int_mask = (enum ath5k_int)((unsigned int)int_mask | 1048576U); else ;
    
#line 810 
    ath5k_hw_reg_write(ah,(unsigned int)int_mask,(unsigned short)160);
    
#line 811 
    ath5k_hw_reg_write(ah,simr2,(unsigned short)172);
  }
  else {
    
#line 815 
    if (((unsigned int)new_mask & 524288U) != 0U) 
#line 816 
                                                  int_mask = (enum ath5k_int)((unsigned int)int_mask | 7864320U); else ;
    
#line 820 
    ath5k_hw_reg_write(ah,(unsigned int)int_mask,(unsigned short)32);
  }
  
#line 825 
  if (((unsigned int)new_mask & 8U) == 0U) 
#line 826 
                                           ath5k_hw_reg_write(ah,0U,(unsigned short)72); else ;
  
#line 829 
  ah->ah_imr = new_mask;
  
#line 832 
  if (new_mask < (unsigned int)0) {
    
#line 833 
    ath5k_hw_reg_write(ah,1U,(unsigned short)36);
    
#line 834 
    ath5k_hw_reg_read(ah,(unsigned short)36);
  }
  else ;
  
#line 837 
  return old_mask;
}


#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/dma.c"
void ath5k_hw_dma_init(struct ath5k_hw *ah)
{
  
#line 871 
  if (ah->ah_version != (unsigned int)AR5K_AR5210) {
    u32 tmp;
    u32 tmp_0;
    
#line 872 
    tmp = ath5k_hw_reg_read(ah,(unsigned short)48);
    
#line 872 
    ;
    
#line 872 
    ath5k_hw_reg_write(ah,(tmp & 4294967288U) | 5U,(unsigned short)48);
    
#line 874 
    tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)52);
    
#line 874 
    ;
    
#line 874 
    ath5k_hw_reg_write(ah,(tmp_0 & 4294967288U) | 5U,(unsigned short)52);
  }
  else ;
  
#line 879 
  if (ah->ah_version != (unsigned int)AR5K_AR5210) 
#line 880 
                                                   ath5k_hw_set_imr(ah,ah->ah_imr); else ;
  
#line 881 
  return;
}


#line 896  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/dma.c"
int ath5k_hw_dma_stop(struct ath5k_hw *ah)
{
  int __retres;
  int i;
  int qmax;
  int err;
  
#line 899 
  err = 0;
  
#line 902 
  ath5k_hw_set_imr(ah,(enum ath5k_int)0);
  
#line 905 
  err = ath5k_hw_stop_rx_dma(ah);
  
#line 906 
  if (err != 0) {
    
#line 907 
    __retres = err;
    
#line 907 
    goto return_label;
  }
  else ;
  
#line 911 
  if (ah->ah_version != (unsigned int)AR5K_AR5210) {
    
#line 912 
    ath5k_hw_reg_write(ah,4294967295U,(unsigned short)128);
    
#line 913 
    qmax = 10;
  }
  else {
    
#line 916 
    ath5k_hw_reg_read(ah,(unsigned short)28);
    
#line 917 
    qmax = 2;
  }
  
#line 920 
  i = 0;
  
#line 920 
  goto ldv_50523;
  ldv_50522: 
#line 921 
  ;
  
#line 921 
  err = ath5k_hw_stop_tx_dma(ah,(unsigned int)i);
  
#line 923 
  if (err != 0 && err != -22) {
    
#line 924 
    __retres = err;
    
#line 924 
    goto return_label;
  }
  else ;
  
#line 920 
  i += 1;
  ldv_50523: 
#line 921 
  ;
  
#line 920 
  if (i < qmax) 
#line 922 
                goto ldv_50522; else 
#line 925 
                                     goto ldv_50524;
  ldv_50524: 
#line 926 
  ;
  
#line 927 
  __retres = 0;
  return_label: 
#line 927 
                return __retres;
}


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/fvtp/.tmp_led.c"
void ldv_inline_asm(void);


#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void __set_bit(long nr, unsigned long volatile *addr)
{
  
#line 96 
  ldv_inline_asm();
  
#line 97 
  return;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
int snprintf(char *, size_t, char const * , ...);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
char *strncpy(char *, char const *, __kernel_size_t);


#line 1171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_device_id const *pci_match_id(struct pci_device_id const *, struct pci_dev *);


#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/leds.h"
int led_classdev_register(struct device *, struct led_classdev *);


#line 110 
void led_classdev_unregister(struct led_classdev *);


#line 3544  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
char const *__ieee80211_get_tx_led_name(struct ieee80211_hw *);


#line 3545 
char const *__ieee80211_get_rx_led_name(struct ieee80211_hw *);


#line 3566  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static char const *ieee80211_get_tx_led_name(struct ieee80211_hw *hw)
{
  char const *tmp;
  
#line 3569 
  tmp = __ieee80211_get_tx_led_name(hw);
  
#line 3569 
  return tmp;
}


#line 3587  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static char const *ieee80211_get_rx_led_name(struct ieee80211_hw *hw)
{
  char const *tmp;
  
#line 3590 
  tmp = __ieee80211_get_rx_led_name(hw);
  
#line 3590 
  return tmp;
}


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
int ath5k_init_leds(struct ath5k_hw *ah);


#line 1487 
void ath5k_unregister_leds(struct ath5k_hw *ah);


#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/led.c"
static struct pci_device_id const ath5k_led_devices[16U] = {{.vendor = 5772U, .device = 18U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4294967295U, .device = 4294967295U, .subvendor = 3601U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 257UL}, {.vendor = 4294967295U, .device = 4294967295U, .subvendor = 4187U, .subdevice = 57352U, .class = 0U, .class_mask = 0U, .driver_data = 768UL}, {.vendor = 4294967295U, .device = 4294967295U, .subvendor = 4187U, .subdevice = 57357U, .class = 0U, .class_mask = 0U, .driver_data = 768UL}, {.vendor = 4294967295U, .device = 4294967295U, .subvendor = 5224U, .subdevice = 1058U, .class = 0U, .class_mask = 0U, .driver_data = 257UL}, {.vendor = 4294967295U, .device = 4294967295U, .subvendor = 5224U, .subdevice = 1064U, .class = 0U, .class_mask = 0U, .driver_data = 768UL}, {.vendor = 4294967295U, .device = 4294967295U, .subvendor = 6706U, .subdevice = 256U, .class = 0U, .class_mask = 0U, .driver_data = 256UL}, {.vendor = 4294967295U, .device = 4294967295U, .subvendor = 6706U, .subdevice = 261U, .class = 0U, .class_mask = 0U, .driver_data = 768UL}, {.vendor = 4294967295U, .device = 4294967295U, .subvendor = 6715U, .subdevice = 4134U, .class = 0U, .class_mask = 0U, .driver_data = 768UL}, {.vendor = 4294967295U, .device = 4294967295U, .subvendor = 4116U, .subdevice = 1418U, .class = 0U, .class_mask = 0U, .driver_data = 256UL}, {.vendor = 4294967295U, .device = 4294967295U, .subvendor = 4156U, .subdevice = 4986U, .class = 0U, .class_mask = 0U, .driver_data = 769UL}, {.vendor = 4294967295U, .device = 4294967295U, .subvendor = 4156U, .subdevice = 4987U, .class = 0U, .class_mask = 0U, .driver_data = 769UL}, {.vendor = 4294967295U, .device = 4294967295U, .subvendor = 5772U, .subdevice = 12391U, .class = 0U, .class_mask = 0U, .driver_data = 768UL}, {.vendor = 5772U, .device = 4116U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4294967295U, .device = 4294967295U, .subvendor = 6706U, .subdevice = 274U, .class = 0U, .class_mask = 0U, .driver_data = 768UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/led.c"
void ath5k_led_enable(struct ath5k_hw *ah)
{
  int tmp;
  
#line 92 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& ah->status));
  
#line 92 
  if (tmp != 0) {
    
#line 93 
    ath5k_hw_set_gpio_output(ah,ah->led_pin);
    
#line 94 
    ath5k_led_off(ah);
  }
  else ;
  
#line 96 
  return;
}


#line 98  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/led.c"
static void ath5k_led_on(struct ath5k_hw *ah)
{
  int tmp;
  
#line 100 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& ah->status));
  
#line 100 
  if (tmp == 0) 
#line 101 
                goto return_label; else ;
  
#line 102 
  ath5k_hw_set_gpio(ah,ah->led_pin,ah->led_on);
  return_label: 
#line 103 
                return;
}


#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/led.c"
void ath5k_led_off(struct ath5k_hw *ah)
{
  int tmp;
  
#line 107 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& ah->status));
  
#line 107 
  if (tmp == 0) 
#line 108 
                goto return_label; else ;
  
#line 109 
  ath5k_hw_set_gpio(ah,ah->led_pin,(unsigned int)(ah->led_on == 0U));
  return_label: 
#line 110 
                return;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/led.c"
static void ath5k_led_brightness_set(struct led_classdev *led_dev, enum led_brightness brightness)
{
  struct ath5k_led *tmp;
  {
    
#line 116 
    struct led_classdev const *__mptr = (struct led_classdev const *)led_dev;
    
#line 116 
    tmp = (struct ath5k_led *)__mptr + 18446744073709551576U;
  }
  
#line 116 
  struct ath5k_led *led = tmp;
  
#line 119 
  if (brightness == (unsigned int)LED_OFF) 
#line 120 
                                           ath5k_led_off(led->ah); else 
                                                                    
#line 122 
                                                                    ath5k_led_on(led->ah);
  
#line 123 
  return;
}


#line 126  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/led.c"
static int ath5k_register_led(struct ath5k_hw *ah, struct ath5k_led *led, char const *name, char const *trigger)
{
  int err;
  
#line 131 
  led->ah = ah;
  
#line 132 
  strncpy((char *)(& led->name),name,32UL);
  
#line 133 
  led->name[31UL] = (char)0;
  
#line 134 
  led->led_dev.name = (char const *)(& led->name);
  
#line 135 
  led->led_dev.default_trigger = trigger;
  
#line 136 
  led->led_dev.brightness_set = & ath5k_led_brightness_set;
  
#line 138 
  err = led_classdev_register(ah->dev,& led->led_dev);
  
#line 139 
  if (err != 0) {
    int tmp;
    
#line 140 
    tmp = net_ratelimit();
    
#line 140 
    if (tmp != 0) 
#line 140 
                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","could not register LED %s\n",name); else ;
    
#line 141 
    led->ah = (struct ath5k_hw *)0;
  }
  else ;
  
#line 143 
  return err;
}


#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/led.c"
static void ath5k_unregister_led(struct ath5k_led *led)
{
  
#line 149 
  if (led->ah == (struct ath5k_hw *)0) 
#line 150 
                                       goto return_label; else ;
  
#line 151 
  led_classdev_unregister(& led->led_dev);
  
#line 152 
  ath5k_led_off(led->ah);
  
#line 153 
  led->ah = (struct ath5k_hw *)0;
  return_label: 
#line 154 
                return;
}


#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/led.c"
void ath5k_unregister_leds(struct ath5k_hw *ah)
{
  
#line 158 
  ath5k_unregister_led(& ah->rx_led);
  
#line 159 
  ath5k_unregister_led(& ah->tx_led);
  
#line 160 
  return;
}


#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/led.c"
int ath5k_init_leds(struct ath5k_hw *ah)
{
  int __retres;
  char name[32U];
  struct pci_device_id const *match;
  int tmp;
  char const *tmp_0;
  char const *tmp_1;
  char const *tmp_2;
  char const *tmp_3;
  
#line 164 
  int ret = 0;
  
#line 165 
  struct ieee80211_hw *hw = ah->hw;
  
#line 167 
  struct pci_dev *pdev = ah->pdev;
  
#line 172 
  if (ah->pdev == (struct pci_dev *)0) {
    
#line 173 
    __retres = 0;
    
#line 173 
    goto return_label;
  }
  else ;
  
#line 178 
  match = pci_match_id(&(ath5k_led_devices[0]),pdev);
  
#line 180 
  if (match != (struct pci_device_id const *)0) {
    
#line 181 
    __set_bit(2L,(unsigned long volatile *)(& ah->status));
    
#line 182 
    ah->led_pin = (unsigned int)(match->driver_data >> 8);
    
#line 183 
    ah->led_on = (unsigned int)match->driver_data & 255U;
  }
  else ;
  
#line 186 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& ah->status));
  
#line 186 
  if (tmp == 0) 
#line 187 
                goto out; else ;
  
#line 189 
  ath5k_led_enable(ah);
  
#line 191 
  tmp_0 = wiphy_name((struct wiphy const *)hw->wiphy);
  
#line 191 
  snprintf((char *)(& name),32UL,"ath5k-%s::rx",tmp_0);
  
#line 192 
  tmp_1 = ieee80211_get_rx_led_name(hw);
  
#line 192 
  ;
  
#line 192 
  ;
  
#line 192 
  ret = ath5k_register_led(ah,& ah->rx_led,(char const *)(& name),tmp_1);
  
#line 194 
  if (ret != 0) 
#line 195 
                goto out; else ;
  
#line 197 
  tmp_2 = wiphy_name((struct wiphy const *)hw->wiphy);
  
#line 197 
  snprintf((char *)(& name),32UL,"ath5k-%s::tx",tmp_2);
  
#line 198 
  tmp_3 = ieee80211_get_tx_led_name(hw);
  
#line 198 
  ;
  
#line 198 
  ;
  
#line 198 
  ret = ath5k_register_led(ah,& ah->tx_led,(char const *)(& name),tmp_3);
  out: 
#line 200 
  ;
  
#line 201 
  __retres = ret;
  return_label: 
#line 201 
                return __retres;
}

void *__builtin_memcpy(void *, void const *, unsigned long);

void __builtin_unreachable(void);

void __builtin_va_end(__builtin_va_list);

void __builtin_va_start(__builtin_va_list);


#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compiler.h"
__inline static void __read_once_size(void const volatile *p, void *res, int size)
{
  
#line 203 
  switch (size) {
    case 1: 
#line 204 
    ;
    
#line 204 
    *((__u8 *)res) = *((__u8 volatile *)p);
    
#line 204 
    goto ldv_1185;
    case 2: 
#line 205 
    ;
    
#line 205 
    *((__u16 *)res) = *((__u16 volatile *)p);
    
#line 205 
    goto ldv_1185;
    case 4: 
#line 206 
    ;
    
#line 206 
    *((__u32 *)res) = *((__u32 volatile *)p);
    
#line 206 
    goto ldv_1185;
    case 8: 
#line 207 
    ;
    
#line 207 
    *((__u64 *)res) = *((__u64 volatile *)p);
    
#line 207 
    goto ldv_1185;
    default: 
#line 208 
    ;
    
#line 209 
    ldv_inline_asm();
    
#line 210 
    __builtin_memcpy(res,(void const *)p,(unsigned long)size);
    
#line 211 
    ldv_inline_asm();
  }
  ldv_1185: 
#line 213 
  ;
  
#line 214 
  return;
}


#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt_types.h"
extern struct pv_irq_ops pv_irq_ops;


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int variable_test_bit(long nr, unsigned long const volatile *addr)
{
  int oldbit;
  
#line 317 
  ldv_inline_asm();
  
#line 323 
  return oldbit;
}


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 48 
void __list_add(struct list_head *, struct list_head *, struct list_head *);


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_add_tail(struct list_head *new, struct list_head *head)
{
  
#line 77 
  __list_add(new,head->prev,head);
  
#line 78 
  return;
}


#line 112 
void __list_del_entry(struct list_head *);


#line 113 
void list_del(struct list_head *);


#line 165  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_move_tail(struct list_head *list, struct list_head *head)
{
  
#line 168 
  __list_del_entry(list);
  
#line 169 
  list_add_tail(list,head);
  
#line 170 
  return;
}


#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static int list_empty(struct list_head const *head)
{
  int __retres;
  
#line 189 
  __retres = (struct list_head const *)head->next == head;
  
#line 189 
  return __retres;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bug.h"
void warn_slowpath_fmt(char const *, int const, char const * , ...);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memmove(void *, void const *, size_t);


#line 829  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt.h"
__inline static unsigned long arch_local_save_flags(void)
{
  unsigned long tmp;
  {
    unsigned long __ret;
    
#line 831 
    unsigned long __edi = __edi;
    
#line 831 
    unsigned long __esi = __esi;
    
#line 831 
    unsigned long __edx = __edx;
    
#line 831 
    unsigned long __ecx = __ecx;
    
#line 831 
    unsigned long __eax = __eax;
    
#line 831 
    if ((long)(pv_irq_ops.save_fl.func == (void *)0) != 0L) {
      
#line 833 
      ldv_inline_asm();
      
#line 831 
      ;
    }
    else ;
    
#line 835 
    ldv_inline_asm();
    
#line 831 
    __ret = __eax;
    
#line 831 
    tmp = __ret;
  }
  
#line 831 
  return tmp;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
static void *ERR_PTR(long error);


#line 32 
static long PTR_ERR(void const *ptr);


#line 41 
static bool IS_ERR(void const *ptr);


#line 151  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/irqflags.h"
__inline static int arch_irqs_disabled_flags(unsigned long flags)
{
  int __retres;
  
#line 153 
  __retres = (flags & 512UL) == 0UL;
  
#line 153 
  return __retres;
}


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static int preempt_count(void)
{
  int __retres;
  int tmp;
  {
    int pfo_ret__;
    
#line 22 
    switch (4UL) {
      case (unsigned long)1: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)2: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)4: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)8: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      default: 
#line 22 
      ;
      
#line 22 
      __bad_percpu_size();
    }
    ldv_6320: 
#line 22 
    ;
    
#line 22 
    tmp = pfo_ret__;
  }
  
#line 22 
  __retres = tmp & 2147483647;
  
#line 22 
  return __retres;
}


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_add(int val)
{
  int tmp;
  
#line 72 
  if (0 != 0 && (val == 1 || val == -1)) 
#line 72 
                                         tmp = val; else 
#line 72 
                                                         tmp = 0;
  
#line 72 
  int const pao_ID__ = tmp;
  
#line 72 
  switch (4UL) {
    case (unsigned long)1: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)2: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)4: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)8: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    default: 
#line 72 
    ;
    
#line 72 
    __bad_percpu_size();
  }
  ldv_6377: 
#line 72 
  ;
  
#line 74 
  return;
}


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_sub(int val)
{
  int tmp;
  
#line 77 
  if (0 != 0 && (- val == 1 || - val == -1)) 
#line 77 
                                             tmp = - val; else 
#line 77 
                                                               tmp = 0;
  
#line 77 
  int const pao_ID__ = tmp;
  
#line 77 
  switch (4UL) {
    case (unsigned long)1: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)2: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)4: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)8: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    default: 
#line 77 
    ;
    
#line 77 
    __bad_percpu_size();
  }
  ldv_6389: 
#line 77 
  ;
  
#line 79 
  return;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
extern int debug_locks;


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 342 
int lock_is_held(struct lockdep_map *);


#line 545 
void lockdep_rcu_suspicious(char const *, int const, char const *);


#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
__inline static bool arch_static_branch(struct static_key *key)
{
  bool __retres;
  
#line 21 
  ldv_inline_asm();
  
#line 22 
  ldv_inline_asm();
  
#line 28 
  __retres = (_Bool)0;
  
#line 28 
  goto return_label;
  l_yes: 
#line 29 
  ;
  
#line 30 
  __retres = (_Bool)1;
  return_label: 
#line 30 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
static bool static_key_false(struct static_key *key)
{
  bool tmp;
  
#line 125 
  tmp = arch_static_branch(key);
  
#line 125 
  return tmp;
}


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 30 
void _raw_spin_lock_bh(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 42 
void _raw_spin_unlock_bh(raw_spinlock_t *);


#line 45 
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_75(spinlock_t *lock);


#line 362 
static void ldv_spin_lock_83(spinlock_t *lock);


#line 366 
static void ldv_spin_lock_90(spinlock_t *lock);


#line 370 
static void ldv_spin_lock_91(spinlock_t *lock);


#line 374 
static void ldv_spin_lock_96(spinlock_t *lock);


#line 375  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh(spinlock_t *lock)
{
  
#line 377 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 378 
  return;
}


#line 403 
static void ldv_spin_lock_bh_72(spinlock_t *lock);


#line 407 
static void ldv_spin_lock_bh_74(spinlock_t *lock);


#line 411 
static void ldv_spin_lock_bh_78(spinlock_t *lock);


#line 415 
static void ldv_spin_lock_bh_94(spinlock_t *lock);


#line 419 
static void ldv_spin_lock_bh_104(spinlock_t *lock);


#line 423 
static void ldv_spin_lock_bh_114(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 407 
static void ldv_spin_unlock_76(spinlock_t *lock);


#line 411 
static void ldv_spin_unlock_84(spinlock_t *lock);


#line 415 
static void ldv_spin_unlock_92(spinlock_t *lock);


#line 419 
static void ldv_spin_unlock_93(spinlock_t *lock);


#line 423 
static void ldv_spin_unlock_97(spinlock_t *lock);


#line 424  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh(spinlock_t *lock)
{
  
#line 426 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 427 
  return;
}


#line 452 
static void ldv_spin_unlock_bh_73(spinlock_t *lock);


#line 456 
static void ldv_spin_unlock_bh_77(spinlock_t *lock);


#line 460 
static void ldv_spin_unlock_bh_79(spinlock_t *lock);


#line 464 
static void ldv_spin_unlock_bh_80(spinlock_t *lock);


#line 468 
static void ldv_spin_unlock_bh_95(spinlock_t *lock);


#line 472 
static void ldv_spin_unlock_bh_105(spinlock_t *lock);


#line 476 
static void ldv_spin_unlock_bh_106(spinlock_t *lock);


#line 480 
static void ldv_spin_unlock_bh_115(spinlock_t *lock);


#line 494  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 496 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 497 
  return;
}


#line 526 
static void ldv_spin_unlock_irqrestore_82(spinlock_t *lock, unsigned long flags);


#line 530 
static void ldv_spin_unlock_irqrestore_86(spinlock_t *lock, unsigned long flags);


#line 534 
static void ldv_spin_unlock_irqrestore_87(spinlock_t *lock, unsigned long flags);


#line 538 
static void ldv_spin_unlock_irqrestore_89(spinlock_t *lock, unsigned long flags);


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_mutex_lock_103(struct mutex *ldv_func_arg1);


#line 41 
static void ldv_mutex_lock_110(struct mutex *ldv_func_arg1);


#line 45 
static void ldv_mutex_lock_112(struct mutex *ldv_func_arg1);


#line 49 
static void ldv_mutex_lock_116(struct mutex *ldv_func_arg1);


#line 55 
void ldv_mutex_model_lock(struct mutex *, char *);


#line 57 
void ldv_mutex_model_unlock(struct mutex *, char *);


#line 59 
void __ldv_spin_lock(spinlock_t *);


#line 86 
static void ldv___ldv_spin_lock_81(spinlock_t *ldv_func_arg1);


#line 90 
static void ldv___ldv_spin_lock_85(spinlock_t *ldv_func_arg1);


#line 94 
static void ldv___ldv_spin_lock_88(spinlock_t *ldv_func_arg1);


#line 102 
void ldv_spin_model_lock(char *);


#line 103 
void ldv_spin_model_unlock(char *);


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
void __mutex_init(struct mutex *, char const *, struct lock_class_key *);


#line 193 
static void ldv_mutex_unlock_107(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_unlock_111(struct mutex *ldv_func_arg1);


#line 201 
static void ldv_mutex_unlock_113(struct mutex *ldv_func_arg1);


#line 205 
static void ldv_mutex_unlock_117(struct mutex *ldv_func_arg1);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 292 
unsigned long __msecs_to_jiffies(unsigned int const);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long _msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 301 
  __retres = (unsigned long)(((long)m + 3L) / 4L);
  
#line 301 
  return __retres;
}


#line 354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 356 
  if (0 != 0) {
    unsigned long tmp;
    
#line 357 
    if ((int)m < 0) {
      
#line 358 
      __retres = 4611686018427387902UL;
      
#line 358 
      goto return_label;
    }
    else ;
    
#line 359 
    tmp = _msecs_to_jiffies(m);
    
#line 359 
    __retres = tmp;
    
#line 359 
    goto return_label;
  }
  else {
    unsigned long tmp_0;
    
#line 361 
    tmp_0 = __msecs_to_jiffies(m);
    
#line 361 
    __retres = tmp_0;
    
#line 361 
    goto return_label;
  }
  return_label: 
#line 356 
                return __retres;
}


#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcutree.h"
bool rcu_is_watching(void);


#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
bool rcu_lockdep_current_cpu_online(void);


#line 459 
extern struct lockdep_map rcu_sched_lock_map;


#line 461 
int debug_lockdep_rcu_enabled(void);


#line 498  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static int rcu_read_lock_sched_held(void)
{
  int __retres;
  int tmp;
  int tmp_1;
  bool tmp_0;
  int tmp_3;
  bool tmp_2;
  int tmp_8;
  
#line 500 
  int lockdep_opinion = 0;
  
#line 502 
  tmp = debug_lockdep_rcu_enabled();
  
#line 502 
  if (tmp == 0) {
    
#line 503 
    __retres = 1;
    
#line 503 
    goto return_label;
  }
  else ;
  
#line 504 
  tmp_0 = rcu_is_watching();
  
#line 504 
  if (tmp_0) 
#line 504 
             tmp_1 = 0; else 
#line 504 
                             tmp_1 = 1;
  
#line 504 
  if (tmp_1) {
    
#line 505 
    __retres = 0;
    
#line 505 
    goto return_label;
  }
  else ;
  
#line 506 
  tmp_2 = rcu_lockdep_current_cpu_online();
  
#line 506 
  if (tmp_2) 
#line 506 
             tmp_3 = 0; else 
#line 506 
                             tmp_3 = 1;
  
#line 506 
  if (tmp_3) {
    
#line 507 
    __retres = 0;
    
#line 507 
    goto return_label;
  }
  else ;
  
#line 508 
  if (debug_locks != 0) 
#line 509 
                        lockdep_opinion = lock_is_held(& rcu_sched_lock_map); else ;
  
#line 510 
  if (lockdep_opinion != 0) 
#line 510 
                            tmp_8 = 1;
  else {
    int tmp_4;
    
#line 510 
    tmp_4 = preempt_count();
    
#line 510 
    if (tmp_4 != 0) 
#line 510 
                    tmp_8 = 1;
    else {
      int tmp_7;
      {
        unsigned long _flags;
        int tmp_6;
        {
          unsigned long __dummy;
          unsigned long __dummy2;
          
        }
        
#line 510 
        _flags = arch_local_save_flags();
        {
          unsigned long __dummy_0;
          unsigned long __dummy2_0;
          
        }
        
#line 510 
        tmp_6 = arch_irqs_disabled_flags(_flags);
        
#line 510 
        tmp_7 = tmp_6;
      }
      
#line 510 
      if (tmp_7 != 0) 
#line 510 
                      tmp_8 = 1; else 
#line 510 
                                      tmp_8 = 0;
    }
  }
  
#line 510 
  __retres = tmp_8;
  return_label: 
#line 510 
                return __retres;
}


#line 969  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_lock_sched_notrace(void)
{
  
#line 971 
  __preempt_count_add(1);
  
#line 972 
  ldv_inline_asm();
  
#line 973 
  return;
}


#line 990  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_unlock_sched_notrace(void)
{
  
#line 993 
  ldv_inline_asm();
  
#line 993 
  __preempt_count_sub(1);
  
#line 994 
  return;
}


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void delayed_work_timer_fn(unsigned long);


#line 181 
void __init_work(struct work_struct *, int);


#line 448 
bool cancel_delayed_work_sync(struct delayed_work *);


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 42 
void debug_dma_mapping_error(struct device *, dma_addr_t);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  int __retres;
  
#line 49 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 50 
  debug_dma_mapping_error(dev,dma_addr);
  
#line 51 
  if (ops->mapping_error != (int (*)(struct device *, dma_addr_t ))0) {
    int tmp_0;
    
#line 52 
    tmp_0 = (*(ops->mapping_error))(dev,dma_addr);
    
#line 52 
    __retres = tmp_0;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 54 
  __retres = dma_addr == 0ULL;
  return_label: 
#line 54 
                return __retres;
}


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hardirq.h"
void synchronize_irq(unsigned int);


#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kcalloc_0(size_t n, size_t size, gfp_t flags);


#line 775  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
void consume_skb(struct sk_buff *);


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1698 
unsigned char *skb_push(struct sk_buff *, unsigned int);


#line 1706 
unsigned char *skb_pull(struct sk_buff *, unsigned int);


#line 1750  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headroom(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1752 
  __retres = (unsigned int)((long)skb->data - (long)skb->head);
  
#line 1752 
  return __retres;
}


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_108(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 153 
static void ldv_free_irq_109(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 157 
static void ldv_free_irq_122(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 540 
static void ldv_tasklet_schedule_98(struct tasklet_struct *t);


#line 544 
static void ldv_tasklet_schedule_99(struct tasklet_struct *t);


#line 548 
static void ldv_tasklet_schedule_100(struct tasklet_struct *t);


#line 552 
static void ldv_tasklet_schedule_102(struct tasklet_struct *t);


#line 564 
static void ldv_tasklet_hi_schedule_101(struct tasklet_struct *t);


#line 599 
void tasklet_kill(struct tasklet_struct *);


#line 605 
static void ldv_tasklet_init_118(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3);


#line 609 
static void ldv_tasklet_init_119(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3);


#line 613 
static void ldv_tasklet_init_120(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3);


#line 617 
static void ldv_tasklet_init_121(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3);


#line 2900  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_broadcast_addr(u8 *addr)
{
  
#line 235 
  memset((void *)addr,255,6UL);
  
#line 236 
  return;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool ether_addr_equal(u8 const *addr1, u8 const *addr2)
{
  bool __retres;
  
#line 313 
  u32 fold = (*((u32 const *)addr1) ^ *((u32 const *)addr2)) | (unsigned int)((int)*((u16 const *)(addr1 + 4U)) ^ (int)*((u16 const *)(addr2 + 4U)));
  
#line 316 
  __retres = (_Bool)(fold == 0U);
  
#line 316 
  return __retres;
}


#line 271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_has_a4(__le16 fc)
{
  int __retres;
  
#line 273 
  __le16 tmp = (unsigned short)768U;
  
#line 274 
  __retres = ((int)fc & (int)tmp) == (int)tmp;
  
#line 274 
  return __retres;
}


#line 317  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_has_protected(__le16 fc)
{
  int __retres;
  
#line 319 
  __retres = ((int)fc & 16384) != 0;
  
#line 319 
  return __retres;
}


#line 365  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_data_qos(__le16 fc)
{
  int __retres;
  
#line 371 
  __retres = ((int)fc & 140) == 136;
  
#line 371 
  return __retres;
}


#line 443  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_probe_resp(__le16 fc)
{
  int __retres;
  
#line 445 
  __retres = ((int)fc & 252) == 80;
  
#line 445 
  return __retres;
}


#line 453  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_beacon(__le16 fc)
{
  int __retres;
  
#line 455 
  __retres = ((int)fc & 252) == 128;
  
#line 455 
  return __retres;
}


#line 463  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_atim(__le16 fc)
{
  int __retres;
  
#line 465 
  __retres = ((int)fc & 252) == 144;
  
#line 465 
  return __retres;
}


#line 533  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_pspoll(__le16 fc)
{
  int __retres;
  
#line 535 
  __retres = ((int)fc & 252) == 164;
  
#line 535 
  return __retres;
}


#line 3281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
__inline static void set_wiphy_dev(struct wiphy *wiphy, struct device *dev)
{
  
#line 3283 
  wiphy->dev.parent = dev;
  
#line 3284 
  return;
}


#line 3528 
int ieee80211_channel_to_frequency(int, enum ieee80211_band);


#line 3535 
int ieee80211_frequency_to_channel(int);


#line 3682 
unsigned int ieee80211_get_hdrlen_from_skb(struct sk_buff const *);


#line 3689 
unsigned int ieee80211_hdrlen(__le16);


#line 3827 
int regulatory_hint(struct wiphy *, char const *);


#line 918  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static struct ieee80211_tx_info *IEEE80211_SKB_CB(struct sk_buff *skb)
{
  struct ieee80211_tx_info *__retres;
  
#line 920 
  __retres = (struct ieee80211_tx_info *)(& skb->cb);
  
#line 920 
  return __retres;
}


#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static struct ieee80211_rx_status *IEEE80211_SKB_RXCB(struct sk_buff *skb)
{
  struct ieee80211_rx_status *__retres;
  
#line 925 
  __retres = (struct ieee80211_rx_status *)(& skb->cb);
  
#line 925 
  return __retres;
}


#line 947 
void __compiletime_assert_948(void);


#line 949 
void __compiletime_assert_950(void);


#line 951 
void __compiletime_assert_951(void);


#line 956 
void __compiletime_assert_957(void);


#line 943  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static void ieee80211_tx_info_clear_status(struct ieee80211_tx_info *info)
{
  int i;
  {
    
#line 947 
    bool __cond = (_Bool)0;
    
#line 947 
    if ((int)__cond != 0) 
#line 947 
                          __compiletime_assert_948(); else ;
  }
  {
    
#line 949 
    bool __cond_0 = (_Bool)0;
    
#line 949 
    if ((int)__cond_0 != 0) 
#line 949 
                            __compiletime_assert_950(); else ;
  }
  {
    
#line 951 
    bool __cond_1 = (_Bool)0;
    
#line 951 
    if ((int)__cond_1 != 0) 
#line 951 
                            __compiletime_assert_951(); else ;
  }
  
#line 953 
  i = 0;
  
#line 953 
  goto ldv_49059;
  ldv_49058: 
#line 954 
  ;
  
#line 954 
  info->__anonCompField_ieee80211_tx_info_99.status.rates[i].count = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))))0U;
  
#line 953 
  i += 1;
  ldv_49059: 
#line 954 
  ;
  
#line 953 
  if (i <= 3) 
#line 955 
              goto ldv_49058; else 
#line 958 
                                   goto ldv_49060;
  ldv_49060: 
#line 959 
  ;
  {
    
#line 956 
    bool __cond_2 = (_Bool)0;
    
#line 956 
    if ((int)__cond_2 != 0) 
#line 956 
                            __compiletime_assert_957(); else ;
  }
  
#line 958 
  memset((void *)(& info->__anonCompField_ieee80211_tx_info_99.status.ampdu_ack_len),0,24UL);
  
#line 959 
  return;
}


#line 2065  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static void _ieee80211_hw_set(struct ieee80211_hw *hw, enum ieee80211_hw_flags flg)
{
  
#line 2068 
  __set_bit((long)flg,(unsigned long volatile *)(& hw->flags));
  
#line 2069 
  return;
}


#line 2123 
struct ieee80211_hw *wiphy_to_ieee80211_hw(struct wiphy *);


#line 2131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static void SET_IEEE80211_DEV(struct ieee80211_hw *hw, struct device *dev)
{
  
#line 2133 
  set_wiphy_dev(hw->wiphy,dev);
  
#line 2134 
  return;
}


#line 2142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static void SET_IEEE80211_PERM_ADDR(struct ieee80211_hw *hw, u8 *addr)
{
  
#line 2144 
  memcpy((void *)(& (hw->wiphy)->perm_addr),(void const *)addr,6UL);
  
#line 2145 
  return;
}


#line 2148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static struct ieee80211_rate *ieee80211_get_tx_rate(struct ieee80211_hw const *hw, struct ieee80211_tx_info const *c)
{
  struct ieee80211_rate *__retres;
  int tmp_0;
  {
    bool __warned;
    
#line 2151 
    int __ret_warn_once = (int)c->__anonCompField_ieee80211_tx_info_99.control.__anonCompField___anonstruct_control_2645_97.__anonCompField___anonunion_2646_96.rates[0].idx < 0;
    
#line 2151 
    if ((long)(__ret_warn_once != 0) != 0L) {
      int tmp;
      {
        
#line 2151 
        int __ret_warn_on = ! __warned;
        
#line 2151 
        if ((long)(__ret_warn_on != 0) != 0L) 
#line 2151 
                                              warn_slowpath_null("include/net/mac80211.h",2151); else ;
        
#line 2151 
        tmp = (long)(__ret_warn_on != 0);
      }
      
#line 2151 
      if ((long)tmp != 0L) 
#line 2151 
                           __warned = (_Bool)1; else ;
    }
    else ;
    
#line 2151 
    tmp_0 = (long)(__ret_warn_once != 0);
  }
  
#line 2151 
  if ((long)tmp_0 != 0L) {
    
#line 2152 
    __retres = (struct ieee80211_rate *)0;
    
#line 2152 
    goto return_label;
  }
  else ;
  
#line 2153 
  __retres = ((hw->wiphy)->bands[(int)c->band])->bitrates + (int)c->__anonCompField_ieee80211_tx_info_99.control.__anonCompField___anonstruct_control_2645_97.__anonCompField___anonunion_2646_96.rates[0].idx;
  return_label: 
#line 2153 
                return __retres;
}


#line 2157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static struct ieee80211_rate *ieee80211_get_rts_cts_rate(struct ieee80211_hw const *hw, struct ieee80211_tx_info const *c)
{
  struct ieee80211_rate *__retres;
  
#line 2160 
  if ((int)c->__anonCompField_ieee80211_tx_info_99.control.__anonCompField___anonstruct_control_2645_97.__anonCompField___anonunion_2646_96.rts_cts_rate_idx < 0) {
    
#line 2161 
    __retres = (struct ieee80211_rate *)0;
    
#line 2161 
    goto return_label;
  }
  else ;
  
#line 2162 
  __retres = ((hw->wiphy)->bands[(int)c->band])->bitrates + (int)c->__anonCompField_ieee80211_tx_info_99.control.__anonCompField___anonstruct_control_2645_97.__anonCompField___anonunion_2646_96.rts_cts_rate_idx;
  return_label: 
#line 2162 
                return __retres;
}


#line 2182 
void ieee80211_free_txskb(struct ieee80211_hw *, struct sk_buff *);


#line 3517 
int ieee80211_register_hw(struct ieee80211_hw *);


#line 3671 
void ieee80211_unregister_hw(struct ieee80211_hw *);


#line 3734 
void ieee80211_rx(struct ieee80211_hw *, struct sk_buff *);


#line 3866 
void ieee80211_get_tx_rates(struct ieee80211_vif *, struct ieee80211_sta *, struct sk_buff *, struct ieee80211_tx_rate *, int);


#line 3888 
void ieee80211_tx_status(struct ieee80211_hw *, struct sk_buff *);


#line 4020 
struct sk_buff *ieee80211_beacon_get_tim(struct ieee80211_hw *, struct ieee80211_vif *, u16 *, u16 *);


#line 4033  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static struct sk_buff *ieee80211_beacon_get(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  struct sk_buff *tmp;
  
#line 4036 
  tmp = ieee80211_beacon_get_tim(hw,vif,(u16 *)0U,(u16 *)0U);
  
#line 4036 
  return tmp;
}


#line 4171 
__le16 ieee80211_rts_duration(struct ieee80211_hw *, struct ieee80211_vif *, size_t, struct ieee80211_tx_info const *);


#line 4208 
__le16 ieee80211_ctstoself_duration(struct ieee80211_hw *, struct ieee80211_vif *, size_t, struct ieee80211_tx_info const *);


#line 4254 
struct sk_buff *ieee80211_get_buffered_bc(struct ieee80211_hw *, struct ieee80211_vif *);


#line 4466 
void ieee80211_wake_queue(struct ieee80211_hw *, int);


#line 4475 
void ieee80211_stop_queue(struct ieee80211_hw *, int);


#line 4495 
void ieee80211_stop_queues(struct ieee80211_hw *);


#line 4503 
void ieee80211_wake_queues(struct ieee80211_hw *);


#line 4615 
void ieee80211_iterate_active_interfaces_atomic(struct ieee80211_hw *, u32, void (*)(void *, u8 *, struct ieee80211_vif *), void *);


#line 4666 
void ieee80211_queue_work(struct ieee80211_hw *, struct work_struct *);


#line 4678 
void ieee80211_queue_delayed_work(struct ieee80211_hw *, struct delayed_work *, unsigned long);


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.h"
void ath5k_vif_iter(void *data, u8 *mac, struct ieee80211_vif *vif);


#line 92 
bool ath5k_any_vif_assoc(struct ath5k_hw *ah);


#line 94 
int ath5k_start(struct ieee80211_hw *hw);


#line 95 
void ath5k_stop(struct ieee80211_hw *hw);


#line 97 
void ath5k_beacon_update_timers(struct ath5k_hw *ah, u64 bc_tsf);


#line 98 
int ath5k_beacon_update(struct ieee80211_hw *hw, struct ieee80211_vif *vif);


#line 99 
void ath5k_beacon_config(struct ath5k_hw *ah);


#line 100 
void ath5k_set_beacon_filter(struct ieee80211_hw *hw, bool enable);


#line 102 
void ath5k_update_bssid_mask_and_opmode(struct ath5k_hw *ah, struct ieee80211_vif *vif);


#line 104 
int ath5k_chan_set(struct ath5k_hw *ah, struct cfg80211_chan_def *chandef);


#line 105 
void ath5k_txbuf_free_skb(struct ath5k_hw *ah, struct ath5k_buf *bf);


#line 106 
void ath5k_rxbuf_free_skb(struct ath5k_hw *ah, struct ath5k_buf *bf);


#line 107 
void ath5k_tx_queue(struct ieee80211_hw *hw, struct sk_buff *skb, struct ath5k_txq *txq, struct ieee80211_tx_control *control);


#line 110 
char const *ath5k_chip_name(enum ath5k_srev_type type, u_int16_t val);


#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.h"
void ath5k_debug_init_device(struct ath5k_hw *ah);


#line 132 
void ath5k_debug_printrxbuffs(struct ath5k_hw *ah);


#line 135 
void ath5k_debug_dump_bands(struct ath5k_hw *ah);


#line 138 
void ath5k_debug_printtxbuf(struct ath5k_hw *ah, struct ath5k_buf *bf);


#line 196  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath.h"
struct sk_buff *ath_rxbuf_alloc(struct ath_common *, u32, gfp_t);


#line 199 
bool ath_is_mybeacon(struct ath_common *, struct ieee80211_hdr *);


#line 207 
bool ath_hw_keyreset(struct ath_common *, u16);


#line 208 
void ath_hw_cycle_counters_update(struct ath_common *);


#line 322 
char const *ath_opmode_to_string(enum nl80211_iftype);


#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ani.h"
void ath5k_ani_init(struct ath5k_hw *ah, enum ath5k_ani_mode mode);


#line 105 
void ath5k_ani_mib_intr(struct ath5k_hw *ah);


#line 106 
void ath5k_ani_calibration(struct ath5k_hw *ah);


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/average.h"
void ewma_init(struct ewma *, unsigned long, unsigned long);


#line 17 
struct ewma *ewma_add(struct ewma *, unsigned long);


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
bool ath5k_modparam_nohwcrypt;

#line 1474  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
int ath5k_hw_init(struct ath5k_hw *ah);


#line 1475 
void ath5k_hw_deinit(struct ath5k_hw *ah);


#line 1477 
int ath5k_sysfs_register(struct ath5k_hw *ah);


#line 1478 
void ath5k_sysfs_unregister(struct ath5k_hw *ah);


#line 1492 
int ath5k_hw_on_hold(struct ath5k_hw *ah);


#line 1493 
int ath5k_hw_reset(struct ath5k_hw *ah, enum nl80211_iftype op_mode, struct ieee80211_channel *channel, bool fast, bool skip_pcu);


#line 1520 
void ath5k_hw_update_mib_counters(struct ath5k_hw *ah);


#line 1537 
int ath5k_hw_set_opmode(struct ath5k_hw *ah, enum nl80211_iftype op_mode);


#line 1540 
int ath5k_hw_set_lladdr(struct ath5k_hw *ah, u8 const *mac);


#line 1542 
void ath5k_hw_set_bssid_mask(struct ath5k_hw *ah, u8 const *mask);


#line 1544 
u32 ath5k_hw_get_rx_filter(struct ath5k_hw *ah);


#line 1545 
void ath5k_hw_set_rx_filter(struct ath5k_hw *ah, u32 filter);


#line 1547 
void ath5k_hw_start_rx_pcu(struct ath5k_hw *ah);


#line 1548 
void ath5k_hw_stop_rx_pcu(struct ath5k_hw *ah);


#line 1550 
u64 ath5k_hw_get_tsf64(struct ath5k_hw *ah);


#line 1553 
void ath5k_hw_init_beacon_timers(struct ath5k_hw *ah, u32 next_beacon, u32 interval);


#line 1555 
bool ath5k_hw_check_beacon_timers(struct ath5k_hw *ah, int intval);


#line 1560 
int ath5k_hw_get_tx_queueprops(struct ath5k_hw *ah, int queue, struct ath5k_txq_info *queue_info);


#line 1562 
int ath5k_hw_set_tx_queueprops(struct ath5k_hw *ah, int queue, struct ath5k_txq_info const *qinfo);


#line 1564 
int ath5k_hw_setup_tx_queue(struct ath5k_hw *ah, enum ath5k_tx_queue queue_type, struct ath5k_txq_info *queue_info);


#line 1569 
u32 ath5k_hw_num_tx_pending(struct ath5k_hw *ah, unsigned int queue);


#line 1570 
void ath5k_hw_release_tx_queue(struct ath5k_hw *ah, unsigned int queue);


#line 1571 
int ath5k_hw_reset_tx_queue(struct ath5k_hw *ah, unsigned int queue);


#line 1596 
void ath5k_rfkill_hw_start(struct ath5k_hw *ah);


#line 1597 
void ath5k_rfkill_hw_stop(struct ath5k_hw *ah);


#line 1613 
int ath5k_hw_phy_disable(struct ath5k_hw *ah);


#line 1615 
enum ath5k_rfgain ath5k_hw_gainf_calibrate(struct ath5k_hw *ah);


#line 1618 
bool ath5k_channel_ok(struct ath5k_hw *ah, struct ieee80211_channel *channel);


#line 1621 
int ath5k_hw_phy_calibrate(struct ath5k_hw *ah, struct ieee80211_channel *channel);


#line 1645  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
__inline static struct ath_regulatory *ath5k_hw_regulatory(struct ath5k_hw *ah)
{
  struct ath_regulatory *__retres;
  struct ath_common *tmp;
  
#line 1647 
  tmp = ath5k_hw_common(ah);
  
#line 1647 
  __retres = & tmp->regulatory;
  
#line 1647 
  return __retres;
}


#line 1688  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
__inline static enum ath_bus_type ath5k_get_bus_type(struct ath5k_hw *ah)
{
  enum ath_bus_type __retres;
  struct ath_common *tmp;
  
#line 1690 
  tmp = ath5k_hw_common(ah);
  
#line 1690 
  __retres = (tmp->bus_ops)->ath_bus_type;
  
#line 1690 
  return __retres;
}


#line 1693  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
__inline static void ath5k_read_cachesize(struct ath_common *common, int *csz)
{
  
#line 1695 
  (*((common->bus_ops)->read_cachesize))(common,csz);
  
#line 1696 
  return;
}


#line 252  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/regd.h"
bool ath_is_world_regd(struct ath_regulatory *);


#line 254 
int ath_regd_init(struct ath_regulatory *, struct wiphy *, void (*)(struct wiphy *, struct regulatory_request *));


#line 259 
void ath_reg_notifier_apply(struct wiphy *, struct regulatory_request *, struct ath_regulatory *);


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/trace.h"
struct tracepoint __tracepoint_ath5k_rx;


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/trace.h"
__inline static void trace_ath5k_rx(struct ath5k_hw *priv, struct sk_buff *skb)
{
  bool tmp_4;
  
#line 20 
  tmp_4 = static_key_false(& __tracepoint_ath5k_rx.key);
  
#line 20 
  if ((int)tmp_4 != 0) {
    struct tracepoint_func *it_func_ptr;
    void *it_func;
    void *__data;
    struct tracepoint_func *tmp_3;
    
#line 20 
    rcu_read_lock_sched_notrace();
    {
      struct tracepoint_func *tmp_0;
      {
        struct tracepoint_func *tmp;
        {
          union __anonunion___u_2666 __u;
          
#line 20 
          __read_once_size((void const volatile *)(& __tracepoint_ath5k_rx.funcs),(void *)(& __u.__c),8);
          
#line 20 
          tmp = __u.__val;
        }
        
#line 20 
        struct tracepoint_func *_________p1 = tmp;
        
#line 20 
        tmp_0 = _________p1;
      }
      
#line 20 
      struct tracepoint_func *________p1 = tmp_0;
      {
        bool __warned;
        int tmp_1;
        
#line 20 
        tmp_1 = debug_lockdep_rcu_enabled();
        
#line 20 
        if (tmp_1 != 0) {
          
#line 20 
          if (! __warned) {
            int tmp_2;
            
#line 20 
            tmp_2 = rcu_read_lock_sched_held();
            
#line 20 
            if (tmp_2 == 0) {
              
#line 20 
              __warned = (_Bool)1;
              
#line 20 
              lockdep_rcu_suspicious("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/trace.h",36,"suspicious rcu_dereference_check() usage");
            }
            else ;
          }
          else ;
        }
        else ;
      }
      
#line 20 
      tmp_3 = ________p1;
    }
    
#line 20 
    it_func_ptr = tmp_3;
    
#line 20 
    if (it_func_ptr != (struct tracepoint_func *)0) {
      ldv_52010: 
#line 22 
      ;
      
#line 20 
      it_func = it_func_ptr->func;
      
#line 20 
      __data = it_func_ptr->data;
      
#line 20 
      (*((void (*)(void *, struct ath5k_hw *, struct sk_buff *))it_func))(__data,priv,skb);
      
#line 20 
      it_func_ptr += 1;
      
#line 20 
      ;
      
#line 20 
      if (it_func_ptr->func != (void *)0) 
#line 22 
                                          goto ldv_52010; else 
#line 25 
                                                               goto ldv_52011;
      ldv_52011: 
#line 26 
      ;
    }
    else ;
    
#line 20 
    rcu_read_unlock_sched_notrace();
  }
  else ;
  
#line 20 
  rcu_read_lock_sched_notrace();
  {
    struct tracepoint_func *tmp_6;
    {
      struct tracepoint_func *tmp_5;
      {
        union __anonunion___u_2668 __u_0;
        
#line 20 
        __read_once_size((void const volatile *)(& __tracepoint_ath5k_rx.funcs),(void *)(& __u_0.__c),8);
        
#line 20 
        tmp_5 = __u_0.__val;
      }
      
#line 20 
      struct tracepoint_func *_________p1_0 = tmp_5;
      
#line 20 
      tmp_6 = _________p1_0;
    }
    
#line 20 
    struct tracepoint_func *________p1_0 = tmp_6;
    {
      bool __warned_0;
      int tmp_7;
      
#line 20 
      tmp_7 = debug_lockdep_rcu_enabled();
      
#line 20 
      if (tmp_7 != 0) {
        
#line 20 
        if (! __warned_0) {
          int tmp_8;
          
#line 20 
          tmp_8 = rcu_read_lock_sched_held();
          
#line 20 
          if (tmp_8 == 0) {
            
#line 20 
            __warned_0 = (_Bool)1;
            
#line 20 
            lockdep_rcu_suspicious("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/trace.h",36,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 20 
    struct tracepoint_func *tmp_9 = ________p1_0;
  }
  
#line 20 
  rcu_read_unlock_sched_notrace();
  
#line 22 
  return;
}


#line 38 
struct tracepoint __tracepoint_ath5k_tx;


#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/trace.h"
__inline static void trace_ath5k_tx(struct ath5k_hw *priv, struct sk_buff *skb, struct ath5k_txq *q)
{
  bool tmp_4;
  
#line 38 
  tmp_4 = static_key_false(& __tracepoint_ath5k_tx.key);
  
#line 38 
  if ((int)tmp_4 != 0) {
    struct tracepoint_func *it_func_ptr;
    void *it_func;
    void *__data;
    struct tracepoint_func *tmp_3;
    
#line 38 
    rcu_read_lock_sched_notrace();
    {
      struct tracepoint_func *tmp_0;
      {
        struct tracepoint_func *tmp;
        {
          union __anonunion___u_2670 __u;
          
#line 38 
          __read_once_size((void const volatile *)(& __tracepoint_ath5k_tx.funcs),(void *)(& __u.__c),8);
          
#line 38 
          tmp = __u.__val;
        }
        
#line 38 
        struct tracepoint_func *_________p1 = tmp;
        
#line 38 
        tmp_0 = _________p1;
      }
      
#line 38 
      struct tracepoint_func *________p1 = tmp_0;
      {
        bool __warned;
        int tmp_1;
        
#line 38 
        tmp_1 = debug_lockdep_rcu_enabled();
        
#line 38 
        if (tmp_1 != 0) {
          
#line 38 
          if (! __warned) {
            int tmp_2;
            
#line 38 
            tmp_2 = rcu_read_lock_sched_held();
            
#line 38 
            if (tmp_2 == 0) {
              
#line 38 
              __warned = (_Bool)1;
              
#line 38 
              lockdep_rcu_suspicious("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/trace.h",62,"suspicious rcu_dereference_check() usage");
            }
            else ;
          }
          else ;
        }
        else ;
      }
      
#line 38 
      tmp_3 = ________p1;
    }
    
#line 38 
    it_func_ptr = tmp_3;
    
#line 38 
    if (it_func_ptr != (struct tracepoint_func *)0) {
      ldv_52068: 
#line 40 
      ;
      
#line 38 
      it_func = it_func_ptr->func;
      
#line 38 
      __data = it_func_ptr->data;
      
#line 38 
      (*((void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *))it_func))(__data,priv,skb,q);
      
#line 38 
      it_func_ptr += 1;
      
#line 38 
      ;
      
#line 38 
      if (it_func_ptr->func != (void *)0) 
#line 40 
                                          goto ldv_52068; else 
#line 43 
                                                               goto ldv_52069;
      ldv_52069: 
#line 44 
      ;
    }
    else ;
    
#line 38 
    rcu_read_unlock_sched_notrace();
  }
  else ;
  
#line 38 
  rcu_read_lock_sched_notrace();
  {
    struct tracepoint_func *tmp_6;
    {
      struct tracepoint_func *tmp_5;
      {
        union __anonunion___u_2672 __u_0;
        
#line 38 
        __read_once_size((void const volatile *)(& __tracepoint_ath5k_tx.funcs),(void *)(& __u_0.__c),8);
        
#line 38 
        tmp_5 = __u_0.__val;
      }
      
#line 38 
      struct tracepoint_func *_________p1_0 = tmp_5;
      
#line 38 
      tmp_6 = _________p1_0;
    }
    
#line 38 
    struct tracepoint_func *________p1_0 = tmp_6;
    {
      bool __warned_0;
      int tmp_7;
      
#line 38 
      tmp_7 = debug_lockdep_rcu_enabled();
      
#line 38 
      if (tmp_7 != 0) {
        
#line 38 
        if (! __warned_0) {
          int tmp_8;
          
#line 38 
          tmp_8 = rcu_read_lock_sched_held();
          
#line 38 
          if (tmp_8 == 0) {
            
#line 38 
            __warned_0 = (_Bool)1;
            
#line 38 
            lockdep_rcu_suspicious("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/trace.h",62,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 38 
    struct tracepoint_func *tmp_9 = ________p1_0;
  }
  
#line 38 
  rcu_read_unlock_sched_notrace();
  
#line 40 
  return;
}


#line 64 
struct tracepoint __tracepoint_ath5k_tx_complete;


#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/trace.h"
__inline static void trace_ath5k_tx_complete(struct ath5k_hw *priv, struct sk_buff *skb, struct ath5k_txq *q, struct ath5k_tx_status *ts)
{
  bool tmp_4;
  
#line 64 
  tmp_4 = static_key_false(& __tracepoint_ath5k_tx_complete.key);
  
#line 64 
  if ((int)tmp_4 != 0) {
    struct tracepoint_func *it_func_ptr;
    void *it_func;
    void *__data;
    struct tracepoint_func *tmp_3;
    
#line 64 
    rcu_read_lock_sched_notrace();
    {
      struct tracepoint_func *tmp_0;
      {
        struct tracepoint_func *tmp;
        {
          union __anonunion___u_2674 __u;
          
#line 64 
          __read_once_size((void const volatile *)(& __tracepoint_ath5k_tx_complete.funcs),(void *)(& __u.__c),8);
          
#line 64 
          tmp = __u.__val;
        }
        
#line 64 
        struct tracepoint_func *_________p1 = tmp;
        
#line 64 
        tmp_0 = _________p1;
      }
      
#line 64 
      struct tracepoint_func *________p1 = tmp_0;
      {
        bool __warned;
        int tmp_1;
        
#line 64 
        tmp_1 = debug_lockdep_rcu_enabled();
        
#line 64 
        if (tmp_1 != 0) {
          
#line 64 
          if (! __warned) {
            int tmp_2;
            
#line 64 
            tmp_2 = rcu_read_lock_sched_held();
            
#line 64 
            if (tmp_2 == 0) {
              
#line 64 
              __warned = (_Bool)1;
              
#line 64 
              lockdep_rcu_suspicious("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/trace.h",93,"suspicious rcu_dereference_check() usage");
            }
            else ;
          }
          else ;
        }
        else ;
      }
      
#line 64 
      tmp_3 = ________p1;
    }
    
#line 64 
    it_func_ptr = tmp_3;
    
#line 64 
    if (it_func_ptr != (struct tracepoint_func *)0) {
      ldv_52131: 
#line 66 
      ;
      
#line 64 
      it_func = it_func_ptr->func;
      
#line 64 
      __data = it_func_ptr->data;
      
#line 64 
      (*((void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *, struct ath5k_tx_status *))it_func))(__data,priv,skb,q,ts);
      
#line 64 
      it_func_ptr += 1;
      
#line 64 
      ;
      
#line 64 
      if (it_func_ptr->func != (void *)0) 
#line 66 
                                          goto ldv_52131; else 
#line 69 
                                                               goto ldv_52132;
      ldv_52132: 
#line 70 
      ;
    }
    else ;
    
#line 64 
    rcu_read_unlock_sched_notrace();
  }
  else ;
  
#line 64 
  rcu_read_lock_sched_notrace();
  {
    struct tracepoint_func *tmp_6;
    {
      struct tracepoint_func *tmp_5;
      {
        union __anonunion___u_2676 __u_0;
        
#line 64 
        __read_once_size((void const volatile *)(& __tracepoint_ath5k_tx_complete.funcs),(void *)(& __u_0.__c),8);
        
#line 64 
        tmp_5 = __u_0.__val;
      }
      
#line 64 
      struct tracepoint_func *_________p1_0 = tmp_5;
      
#line 64 
      tmp_6 = _________p1_0;
    }
    
#line 64 
    struct tracepoint_func *________p1_0 = tmp_6;
    {
      bool __warned_0;
      int tmp_7;
      
#line 64 
      tmp_7 = debug_lockdep_rcu_enabled();
      
#line 64 
      if (tmp_7 != 0) {
        
#line 64 
        if (! __warned_0) {
          int tmp_8;
          
#line 64 
          tmp_8 = rcu_read_lock_sched_held();
          
#line 64 
          if (tmp_8 == 0) {
            
#line 64 
            __warned_0 = (_Bool)1;
            
#line 64 
            lockdep_rcu_suspicious("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/trace.h",93,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 64 
    struct tracepoint_func *tmp_9 = ________p1_0;
  }
  
#line 64 
  rcu_read_unlock_sched_notrace();
  
#line 66 
  return;
}


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/trace.h"
static char const __tpstrtab_ath5k_rx[9U] = {(char)'a', (char)'t', (char)'h', (char)'5', (char)'k', (char)'_', (char)'r', (char)'x', (char)'\000'};

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/trace.h"
struct tracepoint __tracepoint_ath5k_rx = {.name = (char const *)(& __tpstrtab_ath5k_rx), .key = {.enabled = {.counter = 0}, .entries = (struct jump_entry *)0, .next = (struct static_key_mod *)0}, .regfunc = (void (*)(void))0, .unregfunc = (void (*)(void))0, .funcs = (struct tracepoint_func *)0};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/trace.h"
static char const __tpstrtab_ath5k_tx[9U] = {(char)'a', (char)'t', (char)'h', (char)'5', (char)'k', (char)'_', (char)'t', (char)'x', (char)'\000'};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/trace.h"
struct tracepoint __tracepoint_ath5k_tx = {.name = (char const *)(& __tpstrtab_ath5k_tx), .key = {.enabled = {.counter = 0}, .entries = (struct jump_entry *)0, .next = (struct static_key_mod *)0}, .regfunc = (void (*)(void))0, .unregfunc = (void (*)(void))0, .funcs = (struct tracepoint_func *)0};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/trace.h"
static char const __tpstrtab_ath5k_tx_complete[18U] = {(char)'a', (char)'t', (char)'h', (char)'5', (char)'k', (char)'_', (char)'t', (char)'x', (char)'_', (char)'c', (char)'o', (char)'m', (char)'p', (char)'l', (char)'e', (char)'t', (char)'e', (char)'\000'};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/trace.h"
struct tracepoint __tracepoint_ath5k_tx_complete = {.name = (char const *)(& __tpstrtab_ath5k_tx_complete), .key = {.enabled = {.counter = 0}, .entries = (struct jump_entry *)0, .next = (struct static_key_mod *)0}, .regfunc = (void (*)(void))0, .unregfunc = (void (*)(void))0, .funcs = (struct tracepoint_func *)0};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static bool modparam_fastchanswitch;

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static bool ath5k_modparam_no_hw_rfkill_switch;

#line 96 
static int ath5k_init(struct ieee80211_hw *hw);


#line 97 
static int ath5k_reset(struct ath5k_hw *ah, struct ieee80211_channel *chan, bool skip_pcu);


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static struct ath5k_srev_name const srev_names[34U] = {{.sr_name = "5210", .sr_type = AR5K_VERSION_MAC, .sr_val = 0U}, {.sr_name = "5311", .sr_type = AR5K_VERSION_MAC, .sr_val = 16U}, {.sr_name = "5311A", .sr_type = AR5K_VERSION_MAC, .sr_val = 32U}, {.sr_name = "5311B", .sr_type = AR5K_VERSION_MAC, .sr_val = 48U}, {.sr_name = "5211", .sr_type = AR5K_VERSION_MAC, .sr_val = 64U}, {.sr_name = "5212", .sr_type = AR5K_VERSION_MAC, .sr_val = 80U}, {.sr_name = "5213", .sr_type = AR5K_VERSION_MAC, .sr_val = 85U}, {.sr_name = "5213A", .sr_type = AR5K_VERSION_MAC, .sr_val = 89U}, {.sr_name = "2413", .sr_type = AR5K_VERSION_MAC, .sr_val = 120U}, {.sr_name = "2414", .sr_type = AR5K_VERSION_MAC, .sr_val = 112U}, {.sr_name = "5424", .sr_type = AR5K_VERSION_MAC, .sr_val = 144U}, {.sr_name = "5413", .sr_type = AR5K_VERSION_MAC, .sr_val = 164U}, {.sr_name = "5414", .sr_type = AR5K_VERSION_MAC, .sr_val = 160U}, {.sr_name = "2415", .sr_type = AR5K_VERSION_MAC, .sr_val = 176U}, {.sr_name = "5416", .sr_type = AR5K_VERSION_MAC, .sr_val = 192U}, {.sr_name = "5418", .sr_type = AR5K_VERSION_MAC, .sr_val = 202U}, {.sr_name = "2425", .sr_type = AR5K_VERSION_MAC, .sr_val = 224U}, {.sr_name = "2417", .sr_type = AR5K_VERSION_MAC, .sr_val = 240U}, {.sr_name = "xxxxx", .sr_type = AR5K_VERSION_MAC, .sr_val = 65535U}, {.sr_name = "5110", .sr_type = AR5K_VERSION_RAD, .sr_val = 0U}, {.sr_name = "5111", .sr_type = AR5K_VERSION_RAD, .sr_val = 16U}, {.sr_name = "5111A", .sr_type = AR5K_VERSION_RAD, .sr_val = 21U}, {.sr_name = "2111", .sr_type = AR5K_VERSION_RAD, .sr_val = 32U}, {.sr_name = "5112", .sr_type = AR5K_VERSION_RAD, .sr_val = 48U}, {.sr_name = "5112A", .sr_type = AR5K_VERSION_RAD, .sr_val = 53U}, {.sr_name = "5112B", .sr_type = AR5K_VERSION_RAD, .sr_val = 54U}, {.sr_name = "2112", .sr_type = AR5K_VERSION_RAD, .sr_val = 64U}, {.sr_name = "2112A", .sr_type = AR5K_VERSION_RAD, .sr_val = 69U}, {.sr_name = "2112B", .sr_type = AR5K_VERSION_RAD, .sr_val = 70U}, {.sr_name = "2413", .sr_type = AR5K_VERSION_RAD, .sr_val = 80U}, {.sr_name = "5413", .sr_type = AR5K_VERSION_RAD, .sr_val = 96U}, {.sr_name = "5424", .sr_type = AR5K_VERSION_RAD, .sr_val = 160U}, {.sr_name = "5133", .sr_type = AR5K_VERSION_RAD, .sr_val = 192U}, {.sr_name = "xxxxx", .sr_type = AR5K_VERSION_RAD, .sr_val = 65535U}};

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static struct ieee80211_rate const ath5k_rates[12U] = {{.flags = 0U, .bitrate = (unsigned short)10U, .hw_value = (unsigned short)27U, .hw_value_short = (unsigned short)0}, {.flags = 1U, .bitrate = (unsigned short)20U, .hw_value = (unsigned short)26U, .hw_value_short = (unsigned short)30U}, {.flags = 1U, .bitrate = (unsigned short)55U, .hw_value = (unsigned short)25U, .hw_value_short = (unsigned short)29U}, {.flags = 1U, .bitrate = (unsigned short)110U, .hw_value = (unsigned short)24U, .hw_value_short = (unsigned short)28U}, {.flags = 96U, .bitrate = (unsigned short)60U, .hw_value = (unsigned short)11U, .hw_value_short = (unsigned short)0}, {.flags = 96U, .bitrate = (unsigned short)90U, .hw_value = (unsigned short)15U, .hw_value_short = (unsigned short)0}, {.flags = 96U, .bitrate = (unsigned short)120U, .hw_value = (unsigned short)10U, .hw_value_short = (unsigned short)0}, {.flags = 96U, .bitrate = (unsigned short)180U, .hw_value = (unsigned short)14U, .hw_value_short = (unsigned short)0}, {.flags = 96U, .bitrate = (unsigned short)240U, .hw_value = (unsigned short)9U, .hw_value_short = (unsigned short)0}, {.flags = 96U, .bitrate = (unsigned short)360U, .hw_value = (unsigned short)13U, .hw_value_short = (unsigned short)0}, {.flags = 96U, .bitrate = (unsigned short)480U, .hw_value = (unsigned short)8U, .hw_value_short = (unsigned short)0}, {.flags = 96U, .bitrate = (unsigned short)540U, .hw_value = (unsigned short)12U, .hw_value_short = (unsigned short)0}};

#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
__inline static u64 ath5k_extend_tsf(struct ath5k_hw *ah, u32 rstamp)
{
  u64 __retres;
  
#line 203 
  u64 tsf = ath5k_hw_get_tsf64(ah);
  
#line 205 
  if ((tsf & 32767ULL) < (unsigned long long)rstamp) 
#line 206 
                                                     tsf += 18446744073709518848ULL; else ;
  
#line 208 
  __retres = (tsf & 18446744073709518848ULL) | (unsigned long long)rstamp;
  
#line 208 
  return __retres;
}


#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
char const *ath5k_chip_name(enum ath5k_srev_type type, u_int16_t val)
{
  unsigned int i;
  
#line 214 
  char const *name = "xxxxx";
  
#line 217 
  i = 0U;
  
#line 217 
  goto ldv_55274;
  ldv_55273: 
#line 218 
  ;
  
#line 218 
  if (srev_names[i].sr_type != type) 
#line 219 
                                     goto ldv_55271; else ;
  
#line 221 
  if (((unsigned int)val & 240U) == srev_names[i].sr_val) 
#line 222 
                                                          name = srev_names[i].sr_name; else ;
  
#line 224 
  if (((unsigned int)val & 255U) == srev_names[i].sr_val) {
    
#line 225 
    name = srev_names[i].sr_name;
    
#line 226 
    goto ldv_55272;
  }
  else ;
  ldv_55271: 
#line 228 
  ;
  
#line 217 
  i += 1U;
  ldv_55274: 
#line 218 
  ;
  
#line 217 
  if (i <= 33U) 
#line 219 
                goto ldv_55273; else 
#line 222 
                                     goto ldv_55272;
  ldv_55272: 
#line 223 
  ;
  
#line 230 
  return name;
}


#line 232  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static unsigned int ath5k_ioread32(void *hw_priv, u32 reg_offset)
{
  unsigned int tmp;
  
#line 234 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw_priv;
  
#line 235 
  tmp = ath5k_hw_reg_read(ah,(unsigned short)((int)((unsigned short)reg_offset)));
  
#line 235 
  return tmp;
}


#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static void ath5k_iowrite32(void *hw_priv, u32 val, u32 reg_offset)
{
  
#line 240 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw_priv;
  
#line 241 
  ath5k_hw_reg_write(ah,val,(unsigned short)((int)((unsigned short)reg_offset)));
  
#line 242 
  return;
}


#line 244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static struct ath_ops const ath5k_common_ops = {.read = & ath5k_ioread32, .multi_read = (void (*)(void *, u32 *, u32 *, u16 ))0, .write = & ath5k_iowrite32, .enable_write_buffer = (void (*)(void *))0, .write_flush = (void (*)(void *))0, .rmw = (u32 (*)(void *, u32 , u32 , u32 ))0, .enable_rmw_buffer = (void (*)(void *))0, .rmw_flush = (void (*)(void *))0};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static void ath5k_reg_notifier(struct wiphy *wiphy, struct regulatory_request *request)
{
  
#line 256 
  struct ieee80211_hw *hw = wiphy_to_ieee80211_hw(wiphy);
  
#line 257 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 258 
  struct ath_regulatory *regulatory = ath5k_hw_regulatory(ah);
  
#line 260 
  ath_reg_notifier_apply(wiphy,request,regulatory);
  
#line 261 
  return;
}


#line 271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static bool ath5k_is_standard_channel(short chan, enum ieee80211_band band)
{
  bool __retres;
  
#line 273 
  __retres = (_Bool)1;
  
#line 273 
  return __retres;
}


#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static unsigned int ath5k_setup_channels(struct ath5k_hw *ah, struct ieee80211_channel *channels, unsigned int mode, unsigned int max)
{
  unsigned int __retres;
  unsigned int count;
  unsigned int size;
  unsigned int freq;
  unsigned int ch;
  enum ieee80211_band band;
  int tmp_0;
  int tmp_2;
  bool tmp_1;
  int tmp_4;
  bool tmp_3;
  
#line 302 
  switch (mode) {
    int tmp;
    case (unsigned int)0: 
#line 303 
    ;
    
#line 305 
    size = 220U;
    
#line 306 
    band = IEEE80211_BAND_5GHZ;
    
#line 307 
    goto ldv_55310;
    case (unsigned int)1: 
#line 308 
    ;
    case (unsigned int)2: 
#line 309 
    ;
    
#line 310 
    size = 26U;
    
#line 311 
    band = IEEE80211_BAND_2GHZ;
    
#line 312 
    goto ldv_55310;
    default: 
#line 313 
    ;
    
#line 314 
    tmp = net_ratelimit();
    
#line 314 
    if (tmp != 0) 
#line 314 
                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","bad mode, not copying channels\n"); else ;
    
#line 315 
    __retres = 0U;
    
#line 315 
    goto return_label;
  }
  ldv_55310: 
#line 318 
  ;
  
#line 318 
  count = 0U;
  
#line 319 
  ch = 1U;
  
#line 319 
  goto ldv_55316;
  ldv_55315: 
#line 320 
  ;
  
#line 320 
  tmp_0 = ieee80211_channel_to_frequency((int)ch,band);
  
#line 320 
  freq = (unsigned int)tmp_0;
  
#line 322 
  if (freq == 0U) 
#line 323 
                  goto ldv_55314; else ;
  
#line 326 
  (channels + count)->center_freq = (unsigned short)freq;
  
#line 327 
  (channels + count)->band = band;
  
#line 328 
  (channels + count)->hw_value = (unsigned short)mode;
  
#line 331 
  tmp_1 = ath5k_channel_ok(ah,channels + count);
  
#line 331 
  if (tmp_1) 
#line 331 
             tmp_2 = 0; else 
#line 331 
                             tmp_2 = 1;
  
#line 331 
  if (tmp_2) 
#line 332 
             goto ldv_55314; else ;
  
#line 334 
  tmp_3 = ath5k_is_standard_channel((short)((int)((short)ch)),band);
  
#line 334 
  if (tmp_3) 
#line 334 
             tmp_4 = 0; else 
#line 334 
                             tmp_4 = 1;
  
#line 334 
  if (tmp_4) 
#line 335 
             goto ldv_55314; else ;
  
#line 337 
  count += 1U;
  ldv_55314: 
#line 338 
  ;
  
#line 319 
  ch += 1U;
  ldv_55316: 
#line 320 
  ;
  
#line 319 
  if (ch <= size && count < max) 
#line 321 
                                 goto ldv_55315; else 
#line 324 
                                                      goto ldv_55317;
  ldv_55317: 
#line 325 
  ;
  
#line 340 
  __retres = count;
  return_label: 
#line 340 
                return __retres;
}


#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static void ath5k_setup_rate_idx(struct ath5k_hw *ah, struct ieee80211_supported_band *b)
{
  u8 i;
  
#line 348 
  i = (unsigned char)0U;
  
#line 348 
  goto ldv_55324;
  ldv_55323: 
#line 349 
  ;
  
#line 349 
  ah->rate_idx[(unsigned int)b->band][(int)i] = (signed char)(-1);
  
#line 348 
  i = (u8)((int)i + 1);
  ldv_55324: 
#line 349 
  ;
  
#line 348 
  if ((unsigned int)i <= 31U) 
#line 350 
                              goto ldv_55323; else 
#line 353 
                                                   goto ldv_55325;
  ldv_55325: 
#line 354 
  ;
  
#line 351 
  i = (unsigned char)0U;
  
#line 351 
  goto ldv_55327;
  ldv_55326: 
#line 352 
  ;
  
#line 352 
  ah->rate_idx[(unsigned int)b->band][(int)(b->bitrates + (int)i)->hw_value] = (signed char)i;
  
#line 353 
  if ((unsigned int)(b->bitrates + (int)i)->hw_value_short != 0U) 
#line 354 
                                                                  ah->rate_idx[(unsigned int)b->band][(int)(b->bitrates + (int)i)->hw_value_short] = (signed char)i; else ;
  
#line 351 
  i = (u8)((int)i + 1);
  ldv_55327: 
#line 352 
  ;
  
#line 351 
  if ((int)i < b->n_bitrates) 
#line 353 
                              goto ldv_55326; else 
#line 356 
                                                   goto ldv_55328;
  ldv_55328: 
#line 357 
  ;
  
#line 358 
  return;
}


#line 366 
void __compiletime_assert_366(void);


#line 359  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static int ath5k_setup_bands(struct ieee80211_hw *hw)
{
  int __retres;
  struct ieee80211_supported_band *sband;
  int max_c;
  int i;
  int tmp_2;
  int tmp_4;
  
#line 361 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 363 
  int count_c = 0;
  {
    
#line 366 
    bool __cond = (_Bool)0;
    
#line 366 
    if ((int)__cond != 0) 
#line 366 
                          __compiletime_assert_366(); else ;
  }
  
#line 367 
  max_c = 314;
  
#line 370 
  sband = & ah->sbands[0];
  
#line 371 
  sband->band = IEEE80211_BAND_2GHZ;
  
#line 372 
  sband->bitrates = & ah->rates[0][0];
  
#line 374 
  tmp_2 = constant_test_bit(2L,(unsigned long const volatile *)(& ah->ah_capabilities.cap_mode));
  
#line 374 
  if (tmp_2 != 0) {
    unsigned int tmp;
    
#line 376 
    memcpy((void *)sband->bitrates,(void const *)(&(ath5k_rates[0])),144UL);
    
#line 378 
    sband->n_bitrates = 12;
    
#line 380 
    sband->channels = (struct ieee80211_channel *)(& ah->channels);
    
#line 381 
    tmp = ath5k_setup_channels(ah,sband->channels,2U,(unsigned int)max_c);
    
#line 381 
    sband->n_channels = (int)tmp;
    
#line 384 
    (hw->wiphy)->bands[0] = sband;
    
#line 385 
    count_c = sband->n_channels;
    
#line 386 
    max_c -= count_c;
  }
  else {
    int tmp_1;
    
#line 387 
    tmp_1 = constant_test_bit(1L,(unsigned long const volatile *)(& ah->ah_capabilities.cap_mode));
    
#line 387 
    if (tmp_1 != 0) {
      unsigned int tmp_0;
      
#line 389 
      memcpy((void *)sband->bitrates,(void const *)(&(ath5k_rates[0])),48UL);
      
#line 391 
      sband->n_bitrates = 4;
      
#line 397 
      if (ah->ah_version == (unsigned int)AR5K_AR5211) {
        
#line 398 
        i = 0;
        
#line 398 
        goto ldv_55348;
        ldv_55347: 
#line 399 
        ;
        
#line 399 
        (sband->bitrates + i)->hw_value = (unsigned short)((unsigned int)(sband->bitrates + i)->hw_value & 15U);
        
#line 401 
        (sband->bitrates + i)->hw_value_short = (unsigned short)((unsigned int)(sband->bitrates + i)->hw_value_short & 15U);
        
#line 398 
        i += 1;
        ldv_55348: 
#line 399 
        ;
        
#line 398 
        if (i <= 3) 
#line 400 
                    goto ldv_55347; else 
#line 403 
                                         goto ldv_55349;
        ldv_55349: 
#line 404 
        ;
      }
      else ;
      
#line 406 
      sband->channels = (struct ieee80211_channel *)(& ah->channels);
      
#line 407 
      tmp_0 = ath5k_setup_channels(ah,sband->channels,1U,(unsigned int)max_c);
      
#line 407 
      sband->n_channels = (int)tmp_0;
      
#line 410 
      (hw->wiphy)->bands[0] = sband;
      
#line 411 
      count_c = sband->n_channels;
      
#line 412 
      max_c -= count_c;
    }
    else ;
  }
  
#line 414 
  ath5k_setup_rate_idx(ah,sband);
  
#line 417 
  tmp_4 = constant_test_bit(0L,(unsigned long const volatile *)(& ah->ah_capabilities.cap_mode));
  
#line 417 
  if (tmp_4 != 0) {
    unsigned int tmp_3;
    
#line 418 
    sband = & ah->sbands[1];
    
#line 419 
    sband->band = IEEE80211_BAND_5GHZ;
    
#line 420 
    sband->bitrates = & ah->rates[1][0];
    
#line 422 
    memcpy((void *)sband->bitrates,(void const *)(& ath5k_rates[4]),96UL);
    
#line 424 
    sband->n_bitrates = 8;
    
#line 426 
    sband->channels = & ah->channels[count_c];
    
#line 427 
    tmp_3 = ath5k_setup_channels(ah,sband->channels,0U,(unsigned int)max_c);
    
#line 427 
    sband->n_channels = (int)tmp_3;
    
#line 430 
    (hw->wiphy)->bands[1] = sband;
  }
  else ;
  
#line 432 
  ath5k_setup_rate_idx(ah,sband);
  
#line 434 
  ath5k_debug_dump_bands(ah);
  
#line 436 
  __retres = 0;
  
#line 436 
  return __retres;
}


#line 447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
int ath5k_chan_set(struct ath5k_hw *ah, struct cfg80211_chan_def *chandef)
{
  int __retres;
  int tmp_0;
  
#line 449 
  if ((long)((ah->debug.level & 1U) != 0U) != 0L) {
    int tmp;
    
#line 449 
    tmp = net_ratelimit();
    
#line 449 
    if ((long)(tmp != 0) != 0L) 
#line 449 
                                _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_chan_set",451,(int)(ah->curchan)->center_freq,(int)(chandef->chan)->center_freq); else ;
  }
  else ;
  
#line 453 
  switch ((unsigned int)chandef->width) {
    case (unsigned int)1: 
#line 454 
    ;
    case (unsigned int)0: 
#line 455 
    ;
    
#line 456 
    ah->ah_bwmode = (unsigned char)0U;
    
#line 457 
    goto ldv_55357;
    case (unsigned int)6: 
#line 458 
    ;
    
#line 459 
    ah->ah_bwmode = (unsigned char)1U;
    
#line 460 
    goto ldv_55357;
    case (unsigned int)7: 
#line 461 
    ;
    
#line 462 
    ah->ah_bwmode = (unsigned char)2U;
    
#line 463 
    goto ldv_55357;
    default: 
#line 464 
    ;
    {
      
#line 465 
      int __ret_warn_on = 1;
      
#line 465 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 465 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c",465); else ;
      
#line 465 
      long tmp_2 = (long)(__ret_warn_on != 0);
    }
    
#line 466 
    __retres = -22;
    
#line 466 
    goto return_label;
  }
  ldv_55357: 
#line 475 
  ;
  
#line 475 
  tmp_0 = ath5k_reset(ah,chandef->chan,(_Bool)1);
  
#line 475 
  __retres = tmp_0;
  return_label: 
#line 475 
                return __retres;
}


#line 478  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
void ath5k_vif_iter(void *data, u8 *mac, struct ieee80211_vif *vif)
{
  int i;
  
#line 480 
  struct ath5k_vif_iter_data *iter_data = (struct ath5k_vif_iter_data *)data;
  
#line 482 
  struct ath5k_vif *avf = (struct ath5k_vif *)(& vif->drv_priv);
  
#line 484 
  if (iter_data->hw_macaddr != (u8 const *)0U) {
    
#line 485 
    i = 0;
    
#line 485 
    goto ldv_55372;
    ldv_55371: 
#line 486 
    ;
    
#line 486 
    iter_data->mask[i] = (unsigned char)((int)iter_data->mask[i] & ~ ((int)*(iter_data->hw_macaddr + i) ^ (int)*(mac + i)));
    
#line 485 
    i += 1;
    ldv_55372: 
#line 486 
    ;
    
#line 485 
    if (i <= 5) 
#line 487 
                goto ldv_55371; else 
#line 490 
                                     goto ldv_55373;
    ldv_55373: 
#line 491 
    ;
  }
  else ;
  
#line 489 
  if (! iter_data->found_active) {
    
#line 490 
    iter_data->found_active = (_Bool)1;
    
#line 491 
    memcpy((void *)(& iter_data->active_mac),(void const *)mac,6UL);
  }
  else ;
  
#line 494 
  if ((int)iter_data->need_set_hw_addr != 0 && iter_data->hw_macaddr != (u8 const *)0U) {
    bool tmp;
    
#line 495 
    tmp = ether_addr_equal(iter_data->hw_macaddr,(u8 const *)mac);
    
#line 495 
    if ((int)tmp != 0) 
#line 496 
                       iter_data->need_set_hw_addr = (_Bool)0; else ;
  }
  else ;
  
#line 498 
  if (! iter_data->any_assoc) {
    
#line 499 
    if ((int)avf->assoc != 0) 
#line 500 
                              iter_data->any_assoc = (_Bool)1; else ;
  }
  else ;
  
#line 508 
  if (avf->opmode == (unsigned int)NL80211_IFTYPE_AP) 
#line 509 
                                                      iter_data->opmode = NL80211_IFTYPE_AP;
  else {
    
#line 511 
    if (avf->opmode == (unsigned int)NL80211_IFTYPE_STATION) 
#line 512 
                                                             iter_data->n_stas += 1; else ;
    
#line 513 
    if (iter_data->opmode == (unsigned int)NL80211_IFTYPE_UNSPECIFIED) 
      
#line 514 
      iter_data->opmode = avf->opmode; else ;
  }
  
#line 516 
  return;
}


#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
void ath5k_update_bssid_mask_and_opmode(struct ath5k_hw *ah, struct ieee80211_vif *vif)
{
  struct ath5k_vif_iter_data iter_data;
  u32 rfilt;
  
#line 522 
  struct ath_common *common = ath5k_hw_common(ah);
  
#line 530 
  iter_data.hw_macaddr = (u8 const *)(& common->macaddr);
  
#line 531 
  eth_broadcast_addr((u8 *)(& iter_data.mask));
  
#line 532 
  iter_data.found_active = (_Bool)0;
  
#line 533 
  iter_data.need_set_hw_addr = (_Bool)1;
  
#line 534 
  iter_data.opmode = NL80211_IFTYPE_UNSPECIFIED;
  
#line 535 
  iter_data.n_stas = 0;
  
#line 537 
  if (vif != (struct ieee80211_vif *)0) 
#line 538 
                                        ath5k_vif_iter((void *)(& iter_data),(u8 *)(& vif->addr),vif); else ;
  
#line 541 
  ieee80211_iterate_active_interfaces_atomic(ah->hw,1U,& ath5k_vif_iter,(void *)(& iter_data));
  
#line 544 
  memcpy((void *)(& ah->bssidmask),(void const *)(& iter_data.mask),6UL);
  
#line 546 
  ah->opmode = iter_data.opmode;
  
#line 547 
  if (ah->opmode == (unsigned int)NL80211_IFTYPE_UNSPECIFIED) 
#line 549 
                                                              ah->opmode = NL80211_IFTYPE_STATION; else ;
  
#line 551 
  ath5k_hw_set_opmode(ah,ah->opmode);
  
#line 552 
  if ((long)((ah->debug.level & 4U) != 0U) != 0L) {
    int tmp_1;
    
#line 552 
    tmp_1 = net_ratelimit();
    
#line 552 
    if ((long)(tmp_1 != 0) != 0L) {
      char const *tmp_0;
      
#line 552 
      tmp_0 = ath_opmode_to_string(ah->opmode);
      
#line 552 
      ;
      
#line 552 
      ;
      
#line 552 
      _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_update_bssid_mask_and_opmode",553,(unsigned int)ah->opmode,tmp_0);
    }
    else ;
  }
  else ;
  
#line 555 
  if ((int)iter_data.need_set_hw_addr != 0 && (int)iter_data.found_active != 0) 
    
#line 556 
    ath5k_hw_set_lladdr(ah,(u8 const *)(& iter_data.active_mac)); else ;
  
#line 558 
  if (ah->ah_version == (unsigned int)AR5K_AR5212) 
#line 559 
                                                   ath5k_hw_set_bssid_mask(ah,(u8 const *)(& ah->bssidmask)); else ;
  
#line 562 
  if (iter_data.n_stas > 1) 
#line 567 
                            ah->filter_flags |= 32U; else ;
  
#line 570 
  rfilt = ah->filter_flags;
  
#line 571 
  ath5k_hw_set_rx_filter(ah,rfilt);
  
#line 572 
  if ((long)((ah->debug.level & 4U) != 0U) != 0L) {
    int tmp_2;
    
#line 572 
    tmp_2 = net_ratelimit();
    
#line 572 
    if ((long)(tmp_2 != 0) != 0L) 
#line 572 
                                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_update_bssid_mask_and_opmode",572,rfilt); else ;
  }
  else ;
  
#line 573 
  return;
}


#line 576  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
__inline static int ath5k_hw_to_driver_rix(struct ath5k_hw *ah, int hw_rix)
{
  int __retres;
  int rix;
  int tmp;
  int tmp_0;
  {
    
#line 581 
    int __ret_warn_on = (unsigned int)hw_rix > 31U;
    
#line 581 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 581 
                                          warn_slowpath_fmt("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c",582,"hw_rix out of bounds: %x\n",hw_rix); else ;
    
#line 581 
    tmp = (long)(__ret_warn_on != 0);
  }
  
#line 581 
  if ((long)tmp != 0L) {
    
#line 583 
    __retres = 0;
    
#line 583 
    goto return_label;
  }
  else ;
  
#line 585 
  rix = (int)ah->rate_idx[(unsigned int)(ah->curchan)->band][hw_rix];
  {
    
#line 586 
    int __ret_warn_on_0 = rix < 0;
    
#line 586 
    if ((long)(__ret_warn_on_0 != 0) != 0L) 
#line 586 
                                            warn_slowpath_fmt("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c",586,"invalid hw_rix: %x\n",hw_rix); else ;
    
#line 586 
    tmp_0 = (long)(__ret_warn_on_0 != 0);
  }
  
#line 586 
  if ((long)tmp_0 != 0L) 
#line 587 
                         rix = 0; else ;
  
#line 589 
  __retres = rix;
  return_label: 
#line 589 
                return __retres;
}


#line 597  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static struct sk_buff *ath5k_rx_skb_alloc(struct ath5k_hw *ah, dma_addr_t *skb_addr)
{
  struct sk_buff *__retres;
  struct sk_buff *skb;
  int tmp_2;
  
#line 599 
  struct ath_common *common = ath5k_hw_common(ah);
  
#line 606 
  skb = ath_rxbuf_alloc(common,common->rx_bufsize,32U);
  
#line 610 
  if (skb == (struct sk_buff *)0) {
    int tmp_0;
    
#line 611 
    tmp_0 = net_ratelimit();
    
#line 611 
    if (tmp_0 != 0) 
#line 611 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","can\'t alloc skbuff of size %u\n",common->rx_bufsize); else ;
    
#line 613 
    __retres = (struct sk_buff *)0;
    
#line 613 
    goto return_label;
  }
  else ;
  
#line 616 
  *skb_addr = dma_map_single_attrs(ah->dev,(void *)skb->data,(unsigned long)common->rx_bufsize,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
  
#line 620 
  tmp_2 = dma_mapping_error(ah->dev,*skb_addr);
  
#line 620 
  if ((long)(tmp_2 != 0) != 0L) {
    int tmp_1;
    
#line 621 
    tmp_1 = net_ratelimit();
    
#line 621 
    if (tmp_1 != 0) 
#line 621 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","%s: DMA mapping failed\n","ath5k_rx_skb_alloc"); else ;
    
#line 622 
    consume_skb(skb);
    
#line 623 
    __retres = (struct sk_buff *)0;
    
#line 623 
    goto return_label;
  }
  else ;
  
#line 625 
  __retres = skb;
  return_label: 
#line 625 
                return __retres;
}


#line 629  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static int ath5k_rxbuf_setup(struct ath5k_hw *ah, struct ath5k_buf *bf)
{
  int __retres;
  struct ath5k_desc *ds;
  int ret;
  
#line 631 
  struct sk_buff *skb = bf->skb;
  
#line 635 
  if (skb == (struct sk_buff *)0) {
    
#line 636 
    skb = ath5k_rx_skb_alloc(ah,& bf->skbaddr);
    
#line 637 
    if (skb == (struct sk_buff *)0) {
      
#line 638 
      __retres = -12;
      
#line 638 
      goto return_label;
    }
    else ;
    
#line 639 
    bf->skb = skb;
  }
  else ;
  
#line 657 
  ds = bf->desc;
  
#line 658 
  ds->ds_link = (unsigned int)bf->daddr;
  
#line 659 
  ds->ds_data = (unsigned int)bf->skbaddr;
  
#line 660 
  ret = ath5k_hw_setup_rx_desc(ah,ds,ah->common.rx_bufsize,0U);
  
#line 661 
  if (ret != 0) {
    int tmp;
    
#line 662 
    tmp = net_ratelimit();
    
#line 662 
    if (tmp != 0) 
#line 662 
                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","%s: could not setup RX desc\n","ath5k_rxbuf_setup"); else ;
    
#line 663 
    __retres = ret;
    
#line 663 
    goto return_label;
  }
  else ;
  
#line 666 
  if (ah->rxlink != (u32 *)0U) 
#line 667 
                               *(ah->rxlink) = (unsigned int)bf->daddr; else ;
  
#line 668 
  ah->rxlink = & ds->ds_link;
  
#line 669 
  __retres = 0;
  return_label: 
#line 669 
                return __retres;
}


#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static enum ath5k_pkt_type get_hw_packet_type(struct sk_buff *skb)
{
  struct ieee80211_hdr *hdr;
  enum ath5k_pkt_type htype;
  __le16 fc;
  int tmp_2;
  
#line 678 
  hdr = (struct ieee80211_hdr *)skb->data;
  
#line 679 
  fc = hdr->frame_control;
  
#line 681 
  tmp_2 = ieee80211_is_beacon((unsigned short)((int)fc));
  
#line 681 
  if (tmp_2 != 0) 
#line 682 
                  htype = AR5K_PKT_TYPE_BEACON;
  else {
    int tmp_1;
    
#line 683 
    tmp_1 = ieee80211_is_probe_resp((unsigned short)((int)fc));
    
#line 683 
    if (tmp_1 != 0) 
#line 684 
                    htype = AR5K_PKT_TYPE_PROBE_RESP;
    else {
      int tmp_0;
      
#line 685 
      tmp_0 = ieee80211_is_atim((unsigned short)((int)fc));
      
#line 685 
      if (tmp_0 != 0) 
#line 686 
                      htype = AR5K_PKT_TYPE_ATIM;
      else {
        int tmp;
        
#line 687 
        tmp = ieee80211_is_pspoll((unsigned short)((int)fc));
        
#line 687 
        if (tmp != 0) 
#line 688 
                      htype = AR5K_PKT_TYPE_PSPOLL; else 
#line 690 
                                                         htype = AR5K_PKT_TYPE_NORMAL;
      }
    }
  }
  
#line 692 
  return htype;
}


#line 696  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static struct ieee80211_rate *ath5k_get_rate(struct ieee80211_hw const *hw, struct ieee80211_tx_info const *info, struct ath5k_buf *bf, int idx)
{
  struct ieee80211_rate *__retres;
  
#line 704 
  if ((int)bf->rates[idx].idx < 0) {
    
#line 705 
    __retres = (struct ieee80211_rate *)0;
    
#line 705 
    goto return_label;
  }
  else ;
  
#line 708 
  __retres = ((hw->wiphy)->bands[(int)info->band])->bitrates + (int)bf->rates[idx].idx;
  return_label: 
#line 708 
                return __retres;
}


#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static u16 ath5k_get_rate_hw_value(struct ieee80211_hw const *hw, struct ieee80211_tx_info const *info, struct ath5k_buf *bf, int idx)
{
  u16 __retres;
  struct ieee80211_rate *rate;
  u16 hw_rate;
  u8 rc_flags;
  
#line 720 
  rate = ath5k_get_rate(hw,info,bf,idx);
  
#line 721 
  if (rate == (struct ieee80211_rate *)0) {
    
#line 722 
    __retres = (unsigned short)0U;
    
#line 722 
    goto return_label;
  }
  else ;
  
#line 724 
  rc_flags = (unsigned char)bf->rates[idx].flags;
  
#line 725 
  if (((int)rc_flags & 4) != 0) 
#line 725 
                                hw_rate = rate->hw_value_short; else 
                                                                  
#line 725 
                                                                  hw_rate = rate->hw_value;
  
#line 728 
  __retres = hw_rate;
  return_label: 
#line 728 
                return __retres;
}


#line 732  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static int ath5k_txbuf_setup(struct ath5k_hw *ah, struct ath5k_buf *bf, struct ath5k_txq *txq, int padsize, struct ieee80211_tx_control *control)
{
  int __retres;
  unsigned int pktlen;
  unsigned int flags;
  struct ieee80211_rate *rate;
  unsigned int mrr_rate[3U];
  unsigned int mrr_tries[3U];
  int i;
  int ret;
  u16 hw_rate;
  u8 rc_flags;
  int tmp_0;
  struct ieee80211_sta *tmp_1;
  enum ath5k_pkt_type tmp_6;
  unsigned int tmp_7;
  
#line 736 
  struct ath5k_desc *ds = bf->desc;
  
#line 737 
  struct sk_buff *skb = bf->skb;
  
#line 738 
  struct ieee80211_tx_info *info = IEEE80211_SKB_CB(skb);
  
#line 739 
  unsigned int keyidx = 4294967295U;
  
#line 744 
  u16 cts_rate = (unsigned short)0U;
  
#line 745 
  u16 duration = (unsigned short)0U;
  
#line 748 
  flags = 17U;
  
#line 751 
  bf->skbaddr = dma_map_single_attrs(ah->dev,(void *)skb->data,(unsigned long)skb->len,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  
#line 754 
  tmp_0 = dma_mapping_error(ah->dev,bf->skbaddr);
  
#line 754 
  if (tmp_0 != 0) {
    
#line 755 
    __retres = -28;
    
#line 755 
    goto return_label;
  }
  else ;
  
#line 757 
  ;
  
#line 757 
  ;
  
#line 757 
  if (control != (struct ieee80211_tx_control *)0) 
#line 757 
                                                   tmp_1 = control->sta; else 
                                                                    
#line 757 
                                                                    tmp_1 = (struct ieee80211_sta *)0;
  
#line 757 
  ;
  
#line 757 
  ieee80211_get_tx_rates(info->__anonCompField_ieee80211_tx_info_99.control.vif,tmp_1,skb,(struct ieee80211_tx_rate *)(& bf->rates),4);
  
#line 760 
  rate = ath5k_get_rate((struct ieee80211_hw const *)ah->hw,(struct ieee80211_tx_info const *)info,bf,0);
  
#line 762 
  if (rate == (struct ieee80211_rate *)0) {
    
#line 763 
    ret = -22;
    
#line 764 
    goto err_unmap;
  }
  else ;
  
#line 767 
  if ((info->flags & 4U) != 0U) 
#line 768 
                                flags |= 2U; else ;
  
#line 770 
  rc_flags = (unsigned char)info->__anonCompField_ieee80211_tx_info_99.control.__anonCompField___anonstruct_control_2645_97.__anonCompField___anonunion_2646_96.rates[0].flags;
  
#line 772 
  hw_rate = ath5k_get_rate_hw_value((struct ieee80211_hw const *)ah->hw,(struct ieee80211_tx_info const *)info,bf,0);
  
#line 774 
  pktlen = skb->len;
  
#line 779 
  if (info->__anonCompField_ieee80211_tx_info_99.control.hw_key != (struct ieee80211_key_conf *)0) {
    
#line 780 
    keyidx = (unsigned int)(info->__anonCompField_ieee80211_tx_info_99.control.hw_key)->hw_key_idx;
    
#line 781 
    pktlen = (unsigned int)(info->__anonCompField_ieee80211_tx_info_99.control.hw_key)->icv_len + pktlen;
  }
  else ;
  
#line 783 
  if (((int)rc_flags & 1) != 0) {
    struct ieee80211_rate *tmp_2;
    
#line 784 
    flags |= 4U;
    
#line 785 
    tmp_2 = ieee80211_get_rts_cts_rate((struct ieee80211_hw const *)ah->hw,(struct ieee80211_tx_info const *)info);
    
#line 785 
    cts_rate = tmp_2->hw_value;
    
#line 786 
    duration = ieee80211_rts_duration(ah->hw,info->__anonCompField_ieee80211_tx_info_99.control.vif,(unsigned long)pktlen,(struct ieee80211_tx_info const *)info);
  }
  else ;
  
#line 789 
  if (((int)rc_flags & 2) != 0) {
    struct ieee80211_rate *tmp_4;
    
#line 790 
    flags |= 8U;
    
#line 791 
    tmp_4 = ieee80211_get_rts_cts_rate((struct ieee80211_hw const *)ah->hw,(struct ieee80211_tx_info const *)info);
    
#line 791 
    cts_rate = tmp_4->hw_value;
    
#line 792 
    duration = ieee80211_ctstoself_duration(ah->hw,info->__anonCompField_ieee80211_tx_info_99.control.vif,(unsigned long)pktlen,(struct ieee80211_tx_info const *)info);
  }
  else ;
  
#line 796 
  ;
  
#line 796 
  ;
  
#line 796 
  ;
  
#line 796 
  ;
  
#line 796 
  ;
  
#line 796 
  ;
  
#line 796 
  ;
  
#line 796 
  ;
  
#line 797 
  tmp_6 = get_hw_packet_type(skb);
  
#line 796 
  ;
  
#line 796 
  tmp_7 = ieee80211_get_hdrlen_from_skb((struct sk_buff const *)skb);
  
#line 796 
  ;
  
#line 796 
  ;
  
#line 796 
  ;
  
#line 796 
  ret = (*(ah->ah_setup_tx_desc))(ah,ds,pktlen,tmp_7,padsize,tmp_6,(unsigned int)(ah->ah_txpower.txp_requested * 2),(unsigned int)hw_rate,(unsigned int)bf->rates[0].count,keyidx,(unsigned int)ah->ah_tx_ant,flags,(unsigned int)cts_rate,(unsigned int)duration);
  
#line 803 
  if (ret != 0) 
#line 804 
                goto err_unmap; else ;
  
#line 807 
  if ((int)ah->ah_capabilities.cap_has_mrr_support != 0) {
    u16 tmp_8;
    
#line 808 
    memset((void *)(& mrr_rate),0,12UL);
    
#line 809 
    memset((void *)(& mrr_tries),0,12UL);
    
#line 811 
    i = 0;
    
#line 811 
    goto ldv_55455;
    ldv_55454: 
#line 812 
    ;
    
#line 813 
    rate = ath5k_get_rate((struct ieee80211_hw const *)ah->hw,(struct ieee80211_tx_info const *)info,bf,i);
    
#line 814 
    if (rate == (struct ieee80211_rate *)0) 
#line 815 
                                            goto ldv_55453; else ;
    
#line 817 
    tmp_8 = ath5k_get_rate_hw_value((struct ieee80211_hw const *)ah->hw,(struct ieee80211_tx_info const *)info,bf,i);
    
#line 817 
    mrr_rate[i] = (unsigned int)tmp_8;
    
#line 818 
    mrr_tries[i] = (unsigned int)bf->rates[i].count;
    
#line 811 
    i += 1;
    ldv_55455: 
#line 812 
    ;
    
#line 811 
    if (i <= 2) 
#line 813 
                goto ldv_55454; else 
#line 816 
                                     goto ldv_55453;
    ldv_55453: 
#line 817 
    ;
    
#line 821 
    ath5k_hw_setup_mrr_tx_desc(ah,ds,mrr_rate[0],mrr_tries[0],mrr_rate[1],mrr_tries[1],mrr_rate[2],mrr_tries[2]);
  }
  else ;
  
#line 827 
  ds->ds_link = 0U;
  
#line 828 
  ds->ds_data = (unsigned int)bf->skbaddr;
  
#line 830 
  ldv_spin_lock_bh_72(& txq->lock);
  
#line 831 
  list_add_tail(& bf->list,& txq->q);
  
#line 832 
  txq->txq_len += 1;
  
#line 833 
  if (txq->link == (u32 *)0U) 
#line 834 
                              ath5k_hw_set_txdp(ah,txq->qnum,(unsigned int)bf->daddr); else 
                                                                    
#line 836 
                                                                    *(txq->link) = (unsigned int)bf->daddr;
  
#line 838 
  txq->link = & ds->ds_link;
  
#line 839 
  ath5k_hw_start_tx_dma(ah,txq->qnum);
  
#line 840 
  ldv_inline_asm();
  
#line 841 
  ldv_spin_unlock_bh_73(& txq->lock);
  
#line 843 
  __retres = 0;
  
#line 843 
  goto return_label;
  err_unmap: 
#line 844 
  ;
  
#line 845 
  dma_unmap_single_attrs(ah->dev,bf->skbaddr,(unsigned long)skb->len,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  
#line 846 
  __retres = ret;
  return_label: 
#line 846 
                return __retres;
}


#line 854  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static int ath5k_desc_alloc(struct ath5k_hw *ah)
{
  int __retres;
  struct ath5k_desc *ds;
  struct ath5k_buf *bf;
  dma_addr_t da;
  unsigned int i;
  int ret;
  
#line 863 
  ah->desc_len = 7840UL;
  
#line 866 
  ah->desc = (struct ath5k_desc *)dma_alloc_attrs(ah->dev,ah->desc_len,& ah->desc_daddr,208U,(struct dma_attrs *)0);
  
#line 868 
  if (ah->desc == (struct ath5k_desc *)0) {
    int tmp_0;
    
#line 869 
    tmp_0 = net_ratelimit();
    
#line 869 
    if (tmp_0 != 0) 
#line 869 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","can\'t allocate descriptors\n"); else ;
    
#line 870 
    ret = -12;
    
#line 871 
    goto err;
  }
  else ;
  
#line 873 
  ds = ah->desc;
  
#line 874 
  da = ah->desc_daddr;
  
#line 875 
  if ((long)(ah->debug.level != 0U) != 0L) {
    int tmp_1;
    
#line 875 
    tmp_1 = net_ratelimit();
    
#line 875 
    if ((long)(tmp_1 != 0) != 0L) 
#line 875 
                                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_desc_alloc",876,ds,ah->desc_len,ah->desc_daddr); else ;
  }
  else ;
  
#line 878 
  bf = (struct ath5k_buf *)kcalloc_0(245UL,64UL,208U);
  
#line 880 
  if (bf == (struct ath5k_buf *)0) {
    int tmp_3;
    
#line 881 
    tmp_3 = net_ratelimit();
    
#line 881 
    if (tmp_3 != 0) 
#line 881 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","can\'t allocate bufptr\n"); else ;
    
#line 882 
    ret = -12;
    
#line 883 
    goto err_free;
  }
  else ;
  
#line 885 
  ah->bufptr = bf;
  
#line 887 
  INIT_LIST_HEAD(& ah->rxbuf);
  
#line 888 
  i = 0U;
  
#line 888 
  goto ldv_55468;
  ldv_55467: 
#line 889 
  ;
  
#line 889 
  bf->desc = ds;
  
#line 890 
  bf->daddr = da;
  
#line 891 
  list_add_tail(& bf->list,& ah->rxbuf);
  
#line 888 
  i += 1U;
  
#line 888 
  bf += 1;
  
#line 888 
  ds += 1;
  
#line 888 
  da += 32ULL;
  ldv_55468: 
#line 889 
  ;
  
#line 888 
  if (i <= 39U) 
#line 890 
                goto ldv_55467; else 
#line 893 
                                     goto ldv_55469;
  ldv_55469: 
#line 894 
  ;
  
#line 894 
  INIT_LIST_HEAD(& ah->txbuf);
  
#line 895 
  ah->txbuf_len = 200U;
  
#line 896 
  i = 0U;
  
#line 896 
  goto ldv_55471;
  ldv_55470: 
#line 897 
  ;
  
#line 897 
  bf->desc = ds;
  
#line 898 
  bf->daddr = da;
  
#line 899 
  list_add_tail(& bf->list,& ah->txbuf);
  
#line 896 
  i += 1U;
  
#line 896 
  bf += 1;
  
#line 896 
  ds += 1;
  
#line 896 
  da += 32ULL;
  ldv_55471: 
#line 897 
  ;
  
#line 896 
  if (i <= 199U) 
#line 898 
                 goto ldv_55470; else 
#line 901 
                                      goto ldv_55472;
  ldv_55472: 
#line 902 
  ;
  
#line 903 
  INIT_LIST_HEAD(& ah->bcbuf);
  
#line 904 
  i = 0U;
  
#line 904 
  goto ldv_55474;
  ldv_55473: 
#line 905 
  ;
  
#line 905 
  bf->desc = ds;
  
#line 906 
  bf->daddr = da;
  
#line 907 
  list_add_tail(& bf->list,& ah->bcbuf);
  
#line 904 
  i += 1U;
  
#line 904 
  bf += 1;
  
#line 904 
  ds += 1;
  
#line 904 
  da += 32ULL;
  ldv_55474: 
#line 905 
  ;
  
#line 904 
  if (i <= 3U) 
#line 906 
               goto ldv_55473; else 
#line 909 
                                    goto ldv_55475;
  ldv_55475: 
#line 910 
  ;
  
#line 910 
  __retres = 0;
  
#line 910 
  goto return_label;
  err_free: 
#line 911 
  ;
  
#line 912 
  dma_free_attrs(ah->dev,ah->desc_len,(void *)ah->desc,ah->desc_daddr,(struct dma_attrs *)0);
  err: 
#line 913 
  ;
  
#line 914 
  ah->desc = (struct ath5k_desc *)0;
  
#line 915 
  __retres = ret;
  return_label: 
#line 915 
                return __retres;
}


#line 919  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
void ath5k_txbuf_free_skb(struct ath5k_hw *ah, struct ath5k_buf *bf)
{
  
#line 921 
  if ((long)(bf == (struct ath5k_buf *)0) != 0L) {
    
#line 923 
    ldv_inline_asm();
    
#line 921 
    ;
  }
  else ;
  
#line 922 
  if (bf->skb == (struct sk_buff *)0) 
#line 923 
                                      goto return_label; else ;
  
#line 924 
  dma_unmap_single_attrs(ah->dev,bf->skbaddr,(unsigned long)(bf->skb)->len,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  
#line 926 
  ieee80211_free_txskb(ah->hw,bf->skb);
  
#line 927 
  bf->skb = (struct sk_buff *)0;
  
#line 928 
  bf->skbaddr = 0ULL;
  
#line 929 
  (bf->desc)->ds_data = 0U;
  return_label: 
#line 930 
                return;
}


#line 933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
void ath5k_rxbuf_free_skb(struct ath5k_hw *ah, struct ath5k_buf *bf)
{
  
#line 935 
  struct ath_common *common = ath5k_hw_common(ah);
  
#line 937 
  if ((long)(bf == (struct ath5k_buf *)0) != 0L) {
    
#line 939 
    ldv_inline_asm();
    
#line 937 
    ;
  }
  else ;
  
#line 938 
  if (bf->skb == (struct sk_buff *)0) 
#line 939 
                                      goto return_label; else ;
  
#line 940 
  dma_unmap_single_attrs(ah->dev,bf->skbaddr,(unsigned long)common->rx_bufsize,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
  
#line 942 
  dev_kfree_skb_any(bf->skb);
  
#line 943 
  bf->skb = (struct sk_buff *)0;
  
#line 944 
  bf->skbaddr = 0ULL;
  
#line 945 
  (bf->desc)->ds_data = 0U;
  return_label: 
#line 946 
                return;
}


#line 949  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static void ath5k_desc_free(struct ath5k_hw *ah)
{
  struct ath5k_buf *bf;
  struct ath5k_buf *tmp;
  struct ath5k_buf *tmp_0;
  struct ath5k_buf *tmp_1;
  struct ath5k_buf *tmp_2;
  struct ath5k_buf *tmp_3;
  struct ath5k_buf *tmp_4;
  {
    
#line 953 
    struct list_head const *__mptr = (struct list_head const *)ah->txbuf.next;
    
#line 953 
    tmp = (struct ath5k_buf *)__mptr;
  }
  
#line 953 
  bf = tmp;
  
#line 953 
  goto ldv_55494;
  ldv_55493: 
#line 954 
  ;
  
#line 954 
  ath5k_txbuf_free_skb(ah,bf);
  {
    
#line 953 
    struct list_head const *__mptr_0 = (struct list_head const *)bf->list.next;
    
#line 953 
    tmp_0 = (struct ath5k_buf *)__mptr_0;
  }
  
#line 953 
  bf = tmp_0;
  ldv_55494: 
#line 955 
  ;
  
#line 953 
  if (& bf->list != & ah->txbuf) 
#line 955 
                                 goto ldv_55493; else 
#line 958 
                                                      goto ldv_55495;
  ldv_55495: 
#line 959 
  ;
  {
    
#line 955 
    struct list_head const *__mptr_1 = (struct list_head const *)ah->rxbuf.next;
    
#line 955 
    tmp_1 = (struct ath5k_buf *)__mptr_1;
  }
  
#line 955 
  bf = tmp_1;
  
#line 955 
  goto ldv_55501;
  ldv_55500: 
#line 956 
  ;
  
#line 956 
  ath5k_rxbuf_free_skb(ah,bf);
  {
    
#line 955 
    struct list_head const *__mptr_2 = (struct list_head const *)bf->list.next;
    
#line 955 
    tmp_2 = (struct ath5k_buf *)__mptr_2;
  }
  
#line 955 
  bf = tmp_2;
  ldv_55501: 
#line 957 
  ;
  
#line 955 
  if (& bf->list != & ah->rxbuf) 
#line 957 
                                 goto ldv_55500; else 
#line 960 
                                                      goto ldv_55502;
  ldv_55502: 
#line 961 
  ;
  {
    
#line 957 
    struct list_head const *__mptr_3 = (struct list_head const *)ah->bcbuf.next;
    
#line 957 
    tmp_3 = (struct ath5k_buf *)__mptr_3;
  }
  
#line 957 
  bf = tmp_3;
  
#line 957 
  goto ldv_55508;
  ldv_55507: 
#line 958 
  ;
  
#line 958 
  ath5k_txbuf_free_skb(ah,bf);
  {
    
#line 957 
    struct list_head const *__mptr_4 = (struct list_head const *)bf->list.next;
    
#line 957 
    tmp_4 = (struct ath5k_buf *)__mptr_4;
  }
  
#line 957 
  bf = tmp_4;
  ldv_55508: 
#line 959 
  ;
  
#line 957 
  if (& bf->list != & ah->bcbuf) 
#line 959 
                                 goto ldv_55507; else 
#line 962 
                                                      goto ldv_55509;
  ldv_55509: 
#line 963 
  ;
  
#line 961 
  dma_free_attrs(ah->dev,ah->desc_len,(void *)ah->desc,ah->desc_daddr,(struct dma_attrs *)0);
  
#line 962 
  ah->desc = (struct ath5k_desc *)0;
  
#line 963 
  ah->desc_daddr = 0ULL;
  
#line 965 
  kfree((void const *)ah->bufptr);
  
#line 966 
  ah->bufptr = (struct ath5k_buf *)0;
  
#line 967 
  return;
}


#line 975  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static struct ath5k_txq *ath5k_txq_setup(struct ath5k_hw *ah, int qtype, int subtype)
{
  struct ath5k_txq *__retres;
  struct ath5k_txq *txq;
  int qnum;
  
#line 979 
  struct ath5k_txq_info qi = {.tqi_type = 0, .tqi_subtype = (enum ath5k_tx_queue_subtype)subtype, .tqi_flags = (unsigned short)0, .tqi_aifs = (unsigned char)2U, .tqi_cw_min = (unsigned short)15U, .tqi_cw_max = (unsigned short)1023U, .tqi_cbr_period = 0U, .tqi_cbr_overflow_limit = 0U, .tqi_burst_time = 0U, .tqi_ready_time = 0U};
  
#line 1001 
  qi.tqi_flags = (unsigned short)12U;
  
#line 1003 
  qnum = ath5k_hw_setup_tx_queue(ah,(enum ath5k_tx_queue)qtype,& qi);
  
#line 1004 
  if (qnum < 0) {
    struct ath5k_txq *tmp;
    
#line 1009 
    tmp = (struct ath5k_txq *)ERR_PTR((long)qnum);
    
#line 1009 
    __retres = tmp;
    
#line 1009 
    goto return_label;
  }
  else ;
  
#line 1011 
  txq = & ah->txqs[qnum];
  
#line 1012 
  if (! txq->setup) {
    
#line 1013 
    txq->qnum = (unsigned int)qnum;
    
#line 1014 
    txq->link = (u32 *)0U;
    
#line 1015 
    INIT_LIST_HEAD(& txq->q);
    
#line 1016 
    spinlock_check(& txq->lock);
    {
      struct lock_class_key __key;
      
#line 1016 
      __raw_spin_lock_init(& txq->lock.__anonCompField_spinlock_18.rlock,"&(&txq->lock)->rlock",& __key);
    }
    
#line 1017 
    txq->setup = (_Bool)1;
    
#line 1018 
    txq->txq_len = 0;
    
#line 1019 
    txq->txq_max = 50;
    
#line 1020 
    txq->txq_poll_mark = (_Bool)0;
    
#line 1021 
    txq->txq_stuck = 0U;
  }
  else ;
  
#line 1023 
  __retres = & ah->txqs[qnum];
  return_label: 
#line 1023 
                return __retres;
}


#line 1027  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static int ath5k_beaconq_setup(struct ath5k_hw *ah)
{
  int tmp;
  
#line 1029 
  struct ath5k_txq_info qi = {.tqi_type = 0, .tqi_subtype = 0, .tqi_flags = (unsigned short)8U, .tqi_aifs = (unsigned char)2U, .tqi_cw_min = (unsigned short)15U, .tqi_cw_max = (unsigned short)1023U, .tqi_cbr_period = 0U, .tqi_cbr_overflow_limit = 0U, .tqi_burst_time = 0U, .tqi_ready_time = 0U};
  
#line 1039 
  tmp = ath5k_hw_setup_tx_queue(ah,(enum ath5k_tx_queue)AR5K_TX_QUEUE_BEACON,& qi);
  
#line 1039 
  return tmp;
}


#line 1043  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static int ath5k_beaconq_config(struct ath5k_hw *ah)
{
  struct ath5k_txq_info qi;
  int ret;
  
#line 1048 
  ret = ath5k_hw_get_tx_queueprops(ah,(int)ah->bhalq,& qi);
  
#line 1049 
  if (ret != 0) 
#line 1050 
                goto err; else ;
  
#line 1052 
  if (ah->opmode == (unsigned int)NL80211_IFTYPE_AP || ah->opmode == (unsigned int)NL80211_IFTYPE_MESH_POINT) {
    
#line 1058 
    qi.tqi_aifs = (unsigned char)0U;
    
#line 1059 
    qi.tqi_cw_min = (unsigned short)0U;
    
#line 1060 
    qi.tqi_cw_max = (unsigned short)0U;
  }
  else 
    
#line 1061 
    if (ah->opmode == (unsigned int)NL80211_IFTYPE_ADHOC) {
      
#line 1065 
      qi.tqi_aifs = (unsigned char)0U;
      
#line 1066 
      qi.tqi_cw_min = (unsigned short)0U;
      
#line 1067 
      qi.tqi_cw_max = (unsigned short)30U;
    }
    else ;
  
#line 1070 
  if ((long)((ah->debug.level & 16U) != 0U) != 0L) {
    int tmp;
    
#line 1070 
    tmp = net_ratelimit();
    
#line 1070 
    if ((long)(tmp != 0) != 0L) 
#line 1070 
                                _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_beaconq_config",1072,(int)qi.tqi_aifs,(int)qi.tqi_cw_min,(int)qi.tqi_cw_max); else ;
  }
  else ;
  
#line 1074 
  ret = ath5k_hw_set_tx_queueprops(ah,(int)ah->bhalq,(struct ath5k_txq_info const *)(& qi));
  
#line 1075 
  if (ret != 0) {
    int tmp_0;
    
#line 1076 
    tmp_0 = net_ratelimit();
    
#line 1076 
    if (tmp_0 != 0) 
#line 1076 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","%s: unable to update parameters for beacon ","ath5k_beaconq_config"); else ;
    
#line 1078 
    goto err;
  }
  else ;
  
#line 1080 
  ret = ath5k_hw_reset_tx_queue(ah,ah->bhalq);
  
#line 1081 
  if (ret != 0) 
#line 1082 
                goto err; else ;
  
#line 1085 
  ret = ath5k_hw_get_tx_queueprops(ah,8,& qi);
  
#line 1086 
  if (ret != 0) 
#line 1087 
                goto err; else ;
  
#line 1089 
  qi.tqi_ready_time = (ah->bintval * 80U) / 100U;
  
#line 1090 
  ret = ath5k_hw_set_tx_queueprops(ah,8,(struct ath5k_txq_info const *)(& qi));
  
#line 1091 
  if (ret != 0) 
#line 1092 
                goto err; else ;
  
#line 1094 
  ret = ath5k_hw_reset_tx_queue(ah,8U);
  err: 
#line 1095 
  ;
  
#line 1096 
  return ret;
}


#line 1111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static void ath5k_drain_tx_buffs(struct ath5k_hw *ah)
{
  struct ath5k_txq *txq;
  struct ath5k_buf *bf;
  struct ath5k_buf *bf0;
  int i;
  
#line 1117 
  i = 0;
  
#line 1117 
  goto ldv_55550;
  ldv_55549: 
#line 1118 
  ;
  
#line 1118 
  if ((int)ah->txqs[i].setup != 0) {
    struct ath5k_buf *tmp;
    struct ath5k_buf *tmp_0;
    struct ath5k_buf *tmp_1;
    
#line 1119 
    txq = & ah->txqs[i];
    
#line 1120 
    ldv_spin_lock_bh_74(& txq->lock);
    {
      
#line 1121 
      struct list_head const *__mptr = (struct list_head const *)txq->q.next;
      
#line 1121 
      tmp = (struct ath5k_buf *)__mptr;
    }
    
#line 1121 
    bf = tmp;
    {
      
#line 1121 
      struct list_head const *__mptr_0 = (struct list_head const *)bf->list.next;
      
#line 1121 
      tmp_0 = (struct ath5k_buf *)__mptr_0;
    }
    
#line 1122 
    bf0 = tmp_0;
    
#line 1121 
    goto ldv_55547;
    ldv_55546: 
#line 1122 
    ;
    
#line 1122 
    ath5k_debug_printtxbuf(ah,bf);
    
#line 1124 
    ath5k_txbuf_free_skb(ah,bf);
    
#line 1126 
    ldv_spin_lock_75(& ah->txbuflock);
    
#line 1127 
    list_move_tail(& bf->list,& ah->txbuf);
    
#line 1128 
    ah->txbuf_len += 1U;
    
#line 1129 
    txq->txq_len -= 1;
    
#line 1130 
    ldv_spin_unlock_76(& ah->txbuflock);
    
#line 1121 
    bf = bf0;
    {
      
#line 1121 
      struct list_head const *__mptr_1 = (struct list_head const *)bf0->list.next;
      
#line 1121 
      tmp_1 = (struct ath5k_buf *)__mptr_1;
    }
    
#line 1121 
    bf0 = tmp_1;
    ldv_55547: 
#line 1123 
    ;
    
#line 1121 
    if (& bf->list != & txq->q) 
#line 1123 
                                goto ldv_55546; else 
#line 1126 
                                                     goto ldv_55548;
    ldv_55548: 
#line 1127 
    ;
    
#line 1132 
    txq->link = (u32 *)0U;
    
#line 1133 
    txq->txq_poll_mark = (_Bool)0;
    
#line 1134 
    ldv_spin_unlock_bh_77(& txq->lock);
  }
  else ;
  
#line 1117 
  i += 1;
  ldv_55550: 
#line 1118 
  ;
  
#line 1117 
  if ((unsigned int)i <= 9U) 
#line 1119 
                             goto ldv_55549; else 
#line 1122 
                                                  goto ldv_55551;
  ldv_55551: 
#line 1123 
  ;
  
#line 1124 
  return;
}


#line 1140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static void ath5k_txq_release(struct ath5k_hw *ah)
{
  unsigned int i;
  
#line 1142 
  struct ath5k_txq *txq = (struct ath5k_txq *)(& ah->txqs);
  
#line 1145 
  i = 0U;
  
#line 1145 
  goto ldv_55561;
  ldv_55560: 
#line 1146 
  ;
  
#line 1146 
  if ((int)txq->setup != 0) {
    
#line 1147 
    ath5k_hw_release_tx_queue(ah,txq->qnum);
    
#line 1148 
    txq->setup = (_Bool)0;
  }
  else ;
  
#line 1145 
  i += 1U;
  
#line 1145 
  txq += 1;
  ldv_55561: 
#line 1146 
  ;
  
#line 1145 
  if (i <= 9U) 
#line 1147 
               goto ldv_55560; else 
#line 1150 
                                    goto ldv_55562;
  ldv_55562: 
#line 1151 
  ;
  
#line 1152 
  return;
}


#line 1161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static int ath5k_rx_start(struct ath5k_hw *ah)
{
  int __retres;
  struct ath5k_buf *bf;
  int ret;
  int tmp_0;
  struct ath5k_buf *tmp_2;
  struct ath5k_buf *tmp_3;
  struct ath5k_buf *tmp_4;
  
#line 1163 
  struct ath_common *common = ath5k_hw_common(ah);
  {
    
#line 1167 
    u16 const __y = common->cachelsz;
    
#line 1167 
    tmp_0 = (((int)__y + 2351) / (int)__y) * (int)__y;
  }
  
#line 1167 
  common->rx_bufsize = (unsigned int)tmp_0;
  
#line 1169 
  if ((long)((ah->debug.level & 1U) != 0U) != 0L) {
    int tmp_1;
    
#line 1169 
    tmp_1 = net_ratelimit();
    
#line 1169 
    if ((long)(tmp_1 != 0) != 0L) 
#line 1169 
                                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_rx_start",1170,(int)common->cachelsz,common->rx_bufsize); else ;
  }
  else ;
  
#line 1172 
  ldv_spin_lock_bh_78(& ah->rxbuflock);
  
#line 1173 
  ah->rxlink = (u32 *)0U;
  {
    
#line 1174 
    struct list_head const *__mptr = (struct list_head const *)ah->rxbuf.next;
    
#line 1174 
    tmp_2 = (struct ath5k_buf *)__mptr;
  }
  
#line 1174 
  bf = tmp_2;
  
#line 1174 
  goto ldv_55578;
  ldv_55577: 
#line 1175 
  ;
  
#line 1175 
  ret = ath5k_rxbuf_setup(ah,bf);
  
#line 1176 
  if (ret != 0) {
    
#line 1177 
    ldv_spin_unlock_bh_79(& ah->rxbuflock);
    
#line 1178 
    goto err;
  }
  else ;
  {
    
#line 1174 
    struct list_head const *__mptr_0 = (struct list_head const *)bf->list.next;
    
#line 1174 
    tmp_3 = (struct ath5k_buf *)__mptr_0;
  }
  
#line 1174 
  bf = tmp_3;
  ldv_55578: 
#line 1176 
  ;
  
#line 1174 
  if (& bf->list != & ah->rxbuf) 
#line 1176 
                                 goto ldv_55577; else 
#line 1179 
                                                      goto ldv_55579;
  ldv_55579: 
#line 1180 
  ;
  {
    
#line 1181 
    struct list_head const *__mptr_1 = (struct list_head const *)ah->rxbuf.next;
    
#line 1181 
    tmp_4 = (struct ath5k_buf *)__mptr_1;
  }
  
#line 1181 
  bf = tmp_4;
  
#line 1182 
  ath5k_hw_set_rxdp(ah,(unsigned int)bf->daddr);
  
#line 1183 
  ldv_spin_unlock_bh_80(& ah->rxbuflock);
  
#line 1185 
  ath5k_hw_start_rx_dma(ah);
  
#line 1186 
  ath5k_update_bssid_mask_and_opmode(ah,(struct ieee80211_vif *)0);
  
#line 1187 
  ath5k_hw_start_rx_pcu(ah);
  
#line 1189 
  __retres = 0;
  
#line 1189 
  goto return_label;
  err: 
#line 1190 
  ;
  
#line 1191 
  __retres = ret;
  return_label: 
#line 1191 
                return __retres;
}


#line 1202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static void ath5k_rx_stop(struct ath5k_hw *ah)
{
  
#line 1205 
  ath5k_hw_set_rx_filter(ah,0U);
  
#line 1206 
  ath5k_hw_stop_rx_pcu(ah);
  
#line 1208 
  ath5k_debug_printrxbuffs(ah);
  
#line 1209 
  return;
}


#line 1212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static unsigned int ath5k_rx_decrypted(struct ath5k_hw *ah, struct sk_buff *skb, struct ath5k_rx_status *rs)
{
  unsigned int __retres;
  unsigned int keyix;
  unsigned int hlen;
  int tmp_3;
  
#line 1215 
  struct ath_common *common = ath5k_hw_common(ah);
  
#line 1216 
  struct ieee80211_hdr *hdr = (struct ieee80211_hdr *)skb->data;
  
#line 1219 
  if (((int)rs->rs_status & 8) == 0 && (unsigned int)rs->rs_keyix != 255U) {
    
#line 1221 
    __retres = 2U;
    
#line 1221 
    goto return_label;
  }
  else ;
  
#line 1226 
  hlen = ieee80211_hdrlen((unsigned short)((int)hdr->frame_control));
  
#line 1227 
  tmp_3 = ieee80211_has_protected((unsigned short)((int)hdr->frame_control));
  
#line 1227 
  if (tmp_3 != 0) {
    
#line 1227 
    if (((int)rs->rs_status & 8) == 0) {
      
#line 1228 
      if (skb->len >= hlen + 4U) {
        int tmp_2;
        
#line 1230 
        keyix = (unsigned int)((int)*(skb->data + (hlen + 3U)) >> 6);
        
#line 1232 
        if (0 != 0) {
          int tmp_0;
          
#line 1232 
          tmp_0 = constant_test_bit((long)keyix,(unsigned long const volatile *)(& common->keymap));
          
#line 1232 
          tmp_2 = tmp_0 != 0;
        }
        else {
          int tmp_1;
          
#line 1232 
          tmp_1 = variable_test_bit((long)keyix,(unsigned long const volatile *)(& common->keymap));
          
#line 1232 
          tmp_2 = tmp_1 != 0;
        }
        
#line 1232 
        if (tmp_2) {
          
#line 1233 
          __retres = 2U;
          
#line 1233 
          goto return_label;
        }
        else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 1236 
  __retres = 0U;
  return_label: 
#line 1236 
                return __retres;
}


#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static void ath5k_check_ibss_tsf(struct ath5k_hw *ah, struct sk_buff *skb, struct ieee80211_rx_status *rxs)
{
  u64 tsf;
  u64 bc_tstamp;
  u32 hw_tu;
  
#line 1246 
  struct ieee80211_mgmt *mgmt = (struct ieee80211_mgmt *)skb->data;
  
#line 1248 
  if (((int)mgmt->u.beacon.capab_info & 2) != 0) {
    int tmp_0;
    bool tmp;
    
#line 1254 
    tsf = ath5k_hw_get_tsf64(ah);
    
#line 1255 
    bc_tstamp = mgmt->u.beacon.timestamp;
    
#line 1256 
    hw_tu = (unsigned int)(tsf >> 10);
    
#line 1258 
    if ((long)((ah->debug.level & 16U) != 0U) != 0L) 
#line 1258 
                                                     _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_check_ibss_tsf",1263,bc_tstamp,rxs->mactime,rxs->mactime - bc_tstamp,tsf); else ;
    
#line 1276 
    if (rxs->mactime < bc_tstamp) {
      
#line 1277 
      if ((long)((ah->debug.level & 16U) != 0U) != 0L) 
#line 1277 
                                                       _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_check_ibss_tsf",1280,rxs->mactime,tsf); else ;
      
#line 1281 
      rxs->mactime = tsf;
    }
    else ;
    
#line 1290 
    if (ah->nexttbtt <= hw_tu) 
#line 1291 
                               ath5k_beacon_update_timers(ah,bc_tstamp); else ;
    
#line 1296 
    tmp = ath5k_hw_check_beacon_timers(ah,(int)ah->bintval);
    
#line 1296 
    if (tmp) 
#line 1296 
             tmp_0 = 0; else 
#line 1296 
                             tmp_0 = 1;
    
#line 1296 
    if (tmp_0) {
      
#line 1297 
      ath5k_beacon_update_timers(ah,bc_tstamp);
      
#line 1298 
      if ((long)((ah->debug.level & 16U) != 0U) != 0L) 
#line 1298 
                                                       _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_check_ibss_tsf",1299); else ;
    }
    else ;
  }
  else ;
  
#line 1301 
  return;
}


#line 1307  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static int ath5k_common_padpos(struct sk_buff *skb)
{
  int tmp;
  int tmp_0;
  
#line 1309 
  struct ieee80211_hdr *hdr = (struct ieee80211_hdr *)skb->data;
  
#line 1310 
  __le16 frame_control = hdr->frame_control;
  
#line 1311 
  int padpos = 24;
  
#line 1313 
  tmp = ieee80211_has_a4((unsigned short)((int)frame_control));
  
#line 1313 
  if (tmp != 0) 
#line 1314 
                padpos += 6; else ;
  
#line 1316 
  tmp_0 = ieee80211_is_data_qos((unsigned short)((int)frame_control));
  
#line 1316 
  if (tmp_0 != 0) 
#line 1317 
                  padpos += 2; else ;
  
#line 1319 
  return padpos;
}


#line 1326  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static int ath5k_add_padding(struct sk_buff *skb)
{
  int __retres;
  
#line 1328 
  int padpos = ath5k_common_padpos(skb);
  
#line 1329 
  int padsize = padpos & 3;
  
#line 1331 
  if (padsize != 0 && skb->len > (unsigned int)padpos) {
    unsigned int tmp_0;
    
#line 1333 
    tmp_0 = skb_headroom((struct sk_buff const *)skb);
    
#line 1333 
    ;
    
#line 1333 
    if (tmp_0 < (unsigned int)padsize) {
      
#line 1334 
      __retres = -1;
      
#line 1334 
      goto return_label;
    }
    else ;
    
#line 1336 
    skb_push(skb,(unsigned int)padsize);
    
#line 1337 
    memmove((void *)skb->data,(void const *)(skb->data + padsize),(unsigned long)padpos);
    
#line 1338 
    __retres = padsize;
    
#line 1338 
    goto return_label;
  }
  else ;
  
#line 1341 
  __retres = 0;
  return_label: 
#line 1341 
                return __retres;
}


#line 1357  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static int ath5k_remove_padding(struct sk_buff *skb)
{
  int __retres;
  
#line 1359 
  int padpos = ath5k_common_padpos(skb);
  
#line 1360 
  int padsize = padpos & 3;
  
#line 1362 
  if (padsize != 0 && skb->len >= (unsigned int)(padpos + padsize)) {
    
#line 1363 
    memmove((void *)(skb->data + padsize),(void const *)skb->data,(unsigned long)padpos);
    
#line 1364 
    skb_pull(skb,(unsigned int)padsize);
    
#line 1365 
    __retres = padsize;
    
#line 1365 
    goto return_label;
  }
  else ;
  
#line 1368 
  __retres = 0;
  return_label: 
#line 1368 
                return __retres;
}


#line 1372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static void ath5k_receive_frame(struct ath5k_hw *ah, struct sk_buff *skb, struct ath5k_rx_status *rs)
{
  struct ieee80211_rx_status *rxs;
  int tmp_0;
  unsigned int tmp_1;
  bool tmp_2;
  
#line 1376 
  struct ath_common *common = ath5k_hw_common(ah);
  
#line 1378 
  ath5k_remove_padding(skb);
  
#line 1380 
  rxs = IEEE80211_SKB_RXCB(skb);
  
#line 1382 
  rxs->flag = 0U;
  
#line 1383 
  if ((long)(((int)rs->rs_status & 16) != 0) != 0L) 
#line 1384 
                                                    rxs->flag |= 1U; else ;
  
#line 1385 
  if ((long)(((int)rs->rs_status & 1) != 0) != 0L) 
#line 1386 
                                                   rxs->flag |= 32U; else ;
  
#line 1398 
  rxs->mactime = ath5k_extend_tsf(ah,(unsigned int)rs->rs_tstamp);
  
#line 1399 
  rxs->flag |= 2097152U;
  
#line 1401 
  rxs->freq = (ah->curchan)->center_freq;
  
#line 1402 
  rxs->band = (unsigned char)(ah->curchan)->band;
  
#line 1404 
  rxs->signal = (signed char)(ah->ah_noise_floor + (s32)rs->rs_rssi);
  
#line 1406 
  rxs->antenna = rs->rs_antenna;
  
#line 1408 
  if ((unsigned int)rs->rs_antenna + 255U <= 3U) 
#line 1409 
                                                 ah->stats.antenna_rx[(int)rs->rs_antenna] += 1U; else 
                                                                    
#line 1411 
                                                                    ah->stats.antenna_rx[0] += 1U;
  
#line 1413 
  tmp_0 = ath5k_hw_to_driver_rix(ah,(int)rs->rs_rate);
  
#line 1413 
  rxs->rate_idx = (unsigned char)tmp_0;
  
#line 1414 
  tmp_1 = ath5k_rx_decrypted(ah,skb,rs);
  
#line 1414 
  rxs->flag |= tmp_1;
  
#line 1415 
  switch ((int)ah->ah_bwmode) {
    case 1: 
#line 1416 
    ;
    
#line 1417 
    rxs->flag |= 536870912U;
    
#line 1418 
    goto ldv_55628;
    case 2: 
#line 1419 
    ;
    
#line 1420 
    rxs->flag |= 268435456U;
    
#line 1421 
    goto ldv_55628;
    default: 
#line 1422 
    ;
    
#line 1423 
    goto ldv_55628;
  }
  ldv_55628: 
#line 1426 
  ;
  
#line 1426 
  if ((int)((unsigned short)rs->rs_rate) == (int)(ah->sbands[(unsigned int)(ah->curchan)->band].bitrates + (int)rxs->rate_idx)->hw_value_short) 
    
#line 1428 
    rxs->flag |= 256U; else ;
  
#line 1430 
  trace_ath5k_rx(ah,skb);
  
#line 1432 
  tmp_2 = ath_is_mybeacon(common,(struct ieee80211_hdr *)skb->data);
  
#line 1432 
  if ((int)tmp_2 != 0) {
    
#line 1433 
    ewma_add(& ah->ah_beacon_rssi_avg,(unsigned long)rs->rs_rssi);
    
#line 1436 
    if (ah->opmode == (unsigned int)NL80211_IFTYPE_ADHOC) 
#line 1437 
                                                          ath5k_check_ibss_tsf(ah,skb,rxs); else ;
  }
  else ;
  
#line 1440 
  ieee80211_rx(ah->hw,skb);
  
#line 1441 
  return;
}


#line 1449  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static bool ath5k_receive_frame_ok(struct ath5k_hw *ah, struct ath5k_rx_status *rs)
{
  bool __retres;
  
#line 1451 
  ah->stats.rx_all_count += 1U;
  
#line 1452 
  ah->stats.rx_bytes_count += (unsigned int)rs->rs_datalen;
  
#line 1454 
  if ((long)((unsigned int)rs->rs_status != 0U) != 0L) {
    unsigned int filters;
    
#line 1457 
    if (((int)rs->rs_status & 1) != 0) 
#line 1458 
                                       ah->stats.rxerr_crc += 1U; else ;
    
#line 1459 
    if (((int)rs->rs_status & 4) != 0) 
#line 1460 
                                       ah->stats.rxerr_fifo += 1U; else ;
    
#line 1461 
    if (((int)rs->rs_status & 2) != 0) {
      
#line 1462 
      ah->stats.rxerr_phy += 1U;
      
#line 1463 
      if ((unsigned int)rs->rs_phyerr + 255U <= 30U) 
#line 1464 
                                                     ah->stats.rxerr_phy_code[(int)rs->rs_phyerr] += 1U; else ;
      
#line 1472 
      if ((unsigned int)rs->rs_phyerr == 23U || (unsigned int)rs->rs_phyerr == 31U) {
        
#line 1474 
        rs->rs_status = (unsigned char)((unsigned int)rs->rs_status | 1U);
        
#line 1475 
        rs->rs_status = (unsigned char)((unsigned int)rs->rs_status & 253U);
      }
      else {
        
#line 1477 
        __retres = (_Bool)0;
        
#line 1477 
        goto return_label;
      }
    }
    else ;
    
#line 1480 
    if (((int)rs->rs_status & 8) != 0) {
      
#line 1491 
      ah->stats.rxerr_decrypt += 1U;
      
#line 1492 
      if ((unsigned int)rs->rs_keyix == 255U && ((int)rs->rs_status & 1) == 0) {
        
#line 1494 
        __retres = (_Bool)1;
        
#line 1494 
        goto return_label;
      }
      else ;
    }
    else ;
    
#line 1496 
    if (((int)rs->rs_status & 16) != 0) {
      
#line 1497 
      ah->stats.rxerr_mic += 1U;
      
#line 1498 
      __retres = (_Bool)1;
      
#line 1498 
      goto return_label;
    }
    else ;
    
#line 1505 
    filters = 8U;
    
#line 1506 
    if ((ah->fif_filter_flags & 4U) != 0U) 
#line 1507 
                                           filters |= 1U; else ;
    
#line 1509 
    if (((unsigned int)rs->rs_status & ~ filters) != 0U) {
      
#line 1510 
      __retres = (_Bool)0;
      
#line 1510 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1513 
  if ((long)((unsigned int)rs->rs_more != 0U) != 0L) {
    
#line 1514 
    ah->stats.rxerr_jumbo += 1U;
    
#line 1515 
    __retres = (_Bool)0;
    
#line 1515 
    goto return_label;
  }
  else ;
  
#line 1517 
  __retres = (_Bool)1;
  return_label: 
#line 1517 
                return __retres;
}


#line 1521  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static void ath5k_set_current_imask(struct ath5k_hw *ah)
{
  enum ath5k_int imask;
  unsigned long flags;
  int tmp;
  
#line 1526 
  tmp = constant_test_bit(4L,(unsigned long const volatile *)(& ah->status));
  
#line 1526 
  if (tmp != 0) 
#line 1527 
                goto return_label; else ;
  
#line 1529 
  ldv___ldv_spin_lock_81(& ah->irqlock);
  
#line 1530 
  imask = ah->imask;
  
#line 1531 
  if ((int)ah->rx_pending != 0) 
#line 1532 
                                imask = (enum ath5k_int)((unsigned int)imask & 4294967232U); else ;
  
#line 1533 
  if ((int)ah->tx_pending != 0) 
#line 1534 
                                imask = (enum ath5k_int)((unsigned int)imask & 4294963263U); else ;
  
#line 1535 
  ath5k_hw_set_imr(ah,imask);
  
#line 1536 
  ldv_spin_unlock_irqrestore_82(& ah->irqlock,flags);
  return_label: 
#line 1537 
                return;
}


#line 1540  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static void ath5k_tasklet_rx(unsigned long data)
{
  struct sk_buff *skb;
  struct sk_buff *next_skb;
  dma_addr_t next_skb_addr;
  struct ath5k_buf *bf;
  struct ath5k_desc *ds;
  int ret;
  int tmp_1;
  struct ath5k_buf *tmp_2;
  u32 tmp_3;
  bool tmp_5;
  int tmp_6;
  
#line 1542 
  struct ath5k_rx_status rs = {.rs_datalen = (unsigned short)0, .rs_tstamp = (unsigned short)0, .rs_status = (unsigned char)0, .rs_phyerr = (unsigned char)0, .rs_rssi = (signed char)0, .rs_keyix = (unsigned char)0, .rs_rate = (unsigned char)0, .rs_antenna = (unsigned char)0, .rs_more = (unsigned char)0};
  
#line 1545 
  struct ath5k_hw *ah = (struct ath5k_hw *)data;
  
#line 1546 
  struct ath_common *common = ath5k_hw_common(ah);
  
#line 1551 
  ldv_spin_lock_83(& ah->rxbuflock);
  
#line 1552 
  tmp_1 = list_empty((struct list_head const *)(& ah->rxbuf));
  
#line 1552 
  if (tmp_1 != 0) {
    int tmp_0;
    
#line 1553 
    tmp_0 = net_ratelimit();
    
#line 1553 
    if (tmp_0 != 0) 
#line 1553 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","empty rx buf pool\n"); else ;
    
#line 1554 
    goto unlock;
  }
  else ;
  ldv_55658: 
#line 1556 
  ;
  {
    
#line 1557 
    struct list_head const *__mptr = (struct list_head const *)ah->rxbuf.next;
    
#line 1557 
    tmp_2 = (struct ath5k_buf *)__mptr;
  }
  
#line 1557 
  bf = tmp_2;
  
#line 1558 
  if ((long)(bf->skb == (struct sk_buff *)0) != 0L) {
    
#line 1560 
    ldv_inline_asm();
    
#line 1558 
    ;
  }
  else ;
  
#line 1559 
  skb = bf->skb;
  
#line 1560 
  ds = bf->desc;
  
#line 1563 
  tmp_3 = ath5k_hw_get_rxdp(ah);
  
#line 1563 
  ;
  
#line 1563 
  if ((unsigned long long)tmp_3 == bf->daddr) 
#line 1564 
                                              goto ldv_55656; else ;
  
#line 1566 
  ret = (*(ah->ah_proc_rx_desc))(ah,ds,& rs);
  
#line 1567 
  if ((long)(ret == -115) != 0L) 
#line 1568 
                                 goto ldv_55656;
  else 
    
#line 1569 
    if ((long)(ret != 0) != 0L) {
      int tmp_4;
      
#line 1570 
      tmp_4 = net_ratelimit();
      
#line 1570 
      if (tmp_4 != 0) 
#line 1570 
                      _ath5k_printk((struct ath5k_hw const *)ah,"\001","error in processing rx descriptor\n"); else ;
      
#line 1571 
      ah->stats.rxerr_proc += 1U;
      
#line 1572 
      goto ldv_55656;
    }
    else ;
  
#line 1575 
  tmp_5 = ath5k_receive_frame_ok(ah,& rs);
  
#line 1575 
  if ((int)tmp_5 != 0) {
    
#line 1576 
    next_skb = ath5k_rx_skb_alloc(ah,& next_skb_addr);
    
#line 1582 
    if (next_skb == (struct sk_buff *)0) 
#line 1583 
                                         goto next; else ;
    
#line 1585 
    dma_unmap_single_attrs(ah->dev,bf->skbaddr,(unsigned long)common->rx_bufsize,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
    
#line 1589 
    skb_put(skb,(unsigned int)rs.rs_datalen);
    
#line 1591 
    ath5k_receive_frame(ah,skb,& rs);
    
#line 1593 
    bf->skb = next_skb;
    
#line 1594 
    bf->skbaddr = next_skb_addr;
  }
  else ;
  next: 
#line 1596 
  ;
  
#line 1597 
  list_move_tail(& bf->list,& ah->rxbuf);
  
#line 1598 
  tmp_6 = ath5k_rxbuf_setup(ah,bf);
  
#line 1598 
  if (tmp_6 == 0) 
#line 1600 
                  goto ldv_55658; else 
#line 1603 
                                       goto ldv_55656;
  ldv_55656: 
#line 1604 
  ;
  unlock: 
#line 1599 
  ;
  
#line 1600 
  ldv_spin_unlock_84(& ah->rxbuflock);
  
#line 1601 
  ah->rx_pending = (_Bool)0;
  
#line 1602 
  ath5k_set_current_imask(ah);
  
#line 1603 
  return;
}


#line 1611  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
void ath5k_tx_queue(struct ieee80211_hw *hw, struct sk_buff *skb, struct ath5k_txq *txq, struct ieee80211_tx_control *control)
{
  struct ath5k_buf *bf;
  unsigned long flags;
  int padsize;
  int tmp_1;
  struct ath5k_buf *tmp_2;
  int tmp_3;
  int tmp_4;
  
#line 1614 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 1619 
  trace_ath5k_tx(ah,skb,txq);
  
#line 1625 
  padsize = ath5k_add_padding(skb);
  
#line 1626 
  if (padsize < 0) {
    int tmp;
    
#line 1627 
    tmp = net_ratelimit();
    
#line 1627 
    if (tmp != 0) 
#line 1627 
                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","tx hdrlen not %%4: not enough"); else ;
    
#line 1629 
    goto drop_packet;
  }
  else ;
  
#line 1632 
  if (txq->txq_len >= txq->txq_max && txq->qnum <= 3U) 
#line 1634 
                                                       ieee80211_stop_queue(hw,(int)txq->qnum); else ;
  
#line 1636 
  ldv___ldv_spin_lock_85(& ah->txbuflock);
  
#line 1637 
  tmp_1 = list_empty((struct list_head const *)(& ah->txbuf));
  
#line 1637 
  if (tmp_1 != 0) {
    int tmp_0;
    
#line 1638 
    tmp_0 = net_ratelimit();
    
#line 1638 
    if (tmp_0 != 0) 
#line 1638 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","no further txbuf available, dropping packet\n"); else ;
    
#line 1639 
    ldv_spin_unlock_irqrestore_86(& ah->txbuflock,flags);
    
#line 1640 
    ieee80211_stop_queues(hw);
    
#line 1641 
    goto drop_packet;
  }
  else ;
  {
    
#line 1643 
    struct list_head const *__mptr = (struct list_head const *)ah->txbuf.next;
    
#line 1643 
    tmp_2 = (struct ath5k_buf *)__mptr;
  }
  
#line 1643 
  bf = tmp_2;
  
#line 1644 
  list_del(& bf->list);
  
#line 1645 
  ah->txbuf_len -= 1U;
  
#line 1646 
  tmp_3 = list_empty((struct list_head const *)(& ah->txbuf));
  
#line 1646 
  if (tmp_3 != 0) 
#line 1647 
                  ieee80211_stop_queues(hw); else ;
  
#line 1648 
  ldv_spin_unlock_irqrestore_87(& ah->txbuflock,flags);
  
#line 1650 
  bf->skb = skb;
  
#line 1652 
  tmp_4 = ath5k_txbuf_setup(ah,bf,txq,padsize,control);
  
#line 1652 
  if (tmp_4 != 0) {
    
#line 1653 
    bf->skb = (struct sk_buff *)0;
    
#line 1654 
    ldv___ldv_spin_lock_88(& ah->txbuflock);
    
#line 1655 
    list_add_tail(& bf->list,& ah->txbuf);
    
#line 1656 
    ah->txbuf_len += 1U;
    
#line 1657 
    ldv_spin_unlock_irqrestore_89(& ah->txbuflock,flags);
    
#line 1658 
    goto drop_packet;
  }
  else ;
  
#line 1660 
  goto return_label;
  drop_packet: 
#line 1662 
  ;
  
#line 1663 
  ieee80211_free_txskb(hw,skb);
  return_label: 
#line 1664 
                return;
}


#line 1667  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static void ath5k_tx_frame_completed(struct ath5k_hw *ah, struct sk_buff *skb, struct ath5k_txq *txq, struct ath5k_tx_status *ts, struct ath5k_buf *bf)
{
  struct ieee80211_tx_info *info;
  u8 tries[3U];
  int i;
  int tmp_0;
  
#line 1674 
  int size = 0;
  
#line 1676 
  ah->stats.tx_all_count += 1U;
  
#line 1677 
  ah->stats.tx_bytes_count += skb->len;
  
#line 1678 
  info = IEEE80211_SKB_CB(skb);
  {
    int tmp;
    
#line 1680 
    int __min1 = 12;
    
#line 1680 
    int __min2 = 12;
    
#line 1680 
    if (__min1 < __min2) 
#line 1680 
                         tmp = __min1; else 
#line 1680 
                                            tmp = __min2;
    
#line 1680 
    tmp_0 = tmp;
  }
  
#line 1680 
  size = tmp_0;
  
#line 1681 
  memcpy((void *)(& info->__anonCompField_ieee80211_tx_info_99.status.rates),(void const *)(& bf->rates),(unsigned long)size);
  
#line 1683 
  tries[0] = (unsigned char)info->__anonCompField_ieee80211_tx_info_99.status.rates[0].count;
  
#line 1684 
  tries[1] = (unsigned char)info->__anonCompField_ieee80211_tx_info_99.status.rates[1].count;
  
#line 1685 
  tries[2] = (unsigned char)info->__anonCompField_ieee80211_tx_info_99.status.rates[2].count;
  
#line 1687 
  ieee80211_tx_info_clear_status(info);
  
#line 1689 
  i = 0;
  
#line 1689 
  goto ldv_55688;
  ldv_55687: 
#line 1690 
  ;
  {
    
#line 1690 
    struct ieee80211_tx_rate *r = & info->__anonCompField_ieee80211_tx_info_99.status.rates[i];
    
#line 1693 
    r->count = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))))tries[i];
  }
  
#line 1689 
  i += 1;
  ldv_55688: 
#line 1690 
  ;
  
#line 1689 
  if ((int)ts->ts_final_idx > i) 
#line 1691 
                                 goto ldv_55687; else 
#line 1694 
                                                      goto ldv_55689;
  ldv_55689: 
#line 1695 
  ;
  
#line 1696 
  info->__anonCompField_ieee80211_tx_info_99.status.rates[(int)ts->ts_final_idx].count = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))))ts->ts_final_retry;
  
#line 1697 
  info->__anonCompField_ieee80211_tx_info_99.status.rates[(int)ts->ts_final_idx + 1].idx = (signed char)(-1);
  
#line 1699 
  if ((long)((unsigned int)ts->ts_status != 0U) != 0L) {
    
#line 1700 
    ah->stats.ack_fail += 1U;
    
#line 1701 
    if (((int)ts->ts_status & 2) != 0) {
      
#line 1702 
      info->flags |= 256U;
      
#line 1703 
      ah->stats.txerr_filt += 1U;
    }
    else ;
    
#line 1705 
    if (((int)ts->ts_status & 1) != 0) 
#line 1706 
                                       ah->stats.txerr_retry += 1U; else ;
    
#line 1707 
    if (((int)ts->ts_status & 4) != 0) 
#line 1708 
                                       ah->stats.txerr_fifo += 1U; else ;
  }
  else {
    
#line 1710 
    info->flags |= 512U;
    
#line 1711 
    info->__anonCompField_ieee80211_tx_info_99.status.ack_signal = (int)ts->ts_rssi;
    
#line 1714 
    info->__anonCompField_ieee80211_tx_info_99.status.rates[(int)ts->ts_final_idx].count = (u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))))((int)info->__anonCompField_ieee80211_tx_info_99.status.rates[(int)ts->ts_final_idx].count + 1);
  }
  
#line 1721 
  ath5k_remove_padding(skb);
  
#line 1723 
  if ((unsigned int)ts->ts_antenna + 255U <= 3U) 
#line 1724 
                                                 ah->stats.antenna_tx[(int)ts->ts_antenna] += 1U; else 
                                                                    
#line 1726 
                                                                    ah->stats.antenna_tx[0] += 1U;
  
#line 1728 
  trace_ath5k_tx_complete(ah,skb,txq,ts);
  
#line 1729 
  ieee80211_tx_status(ah->hw,skb);
  
#line 1730 
  return;
}


#line 1733  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static void ath5k_tx_processq(struct ath5k_hw *ah, struct ath5k_txq *txq)
{
  struct ath5k_buf *bf;
  struct ath5k_buf *bf0;
  struct ath5k_desc *ds;
  struct sk_buff *skb;
  int ret;
  struct ath5k_buf *tmp;
  struct ath5k_buf *tmp_0;
  u32 tmp_2;
  struct ath5k_buf *tmp_3;
  
#line 1735 
  struct ath5k_tx_status ts = {.ts_seqnum = (unsigned short)0, .ts_tstamp = (unsigned short)0, .ts_status = (unsigned char)0, .ts_final_idx = (unsigned char)0, .ts_final_retry = (unsigned char)0, .ts_rssi = (signed char)0, .ts_shortretry = (unsigned char)0, .ts_virtcol = (unsigned char)0, .ts_antenna = (unsigned char)0};
  
#line 1741 
  ldv_spin_lock_90(& txq->lock);
  {
    
#line 1742 
    struct list_head const *__mptr = (struct list_head const *)txq->q.next;
    
#line 1742 
    tmp = (struct ath5k_buf *)__mptr;
  }
  
#line 1742 
  bf = tmp;
  {
    
#line 1742 
    struct list_head const *__mptr_0 = (struct list_head const *)bf->list.next;
    
#line 1742 
    tmp_0 = (struct ath5k_buf *)__mptr_0;
  }
  
#line 1743 
  bf0 = tmp_0;
  
#line 1742 
  goto ldv_55708;
  ldv_55707: 
#line 1743 
  ;
  
#line 1744 
  txq->txq_poll_mark = (_Bool)0;
  
#line 1747 
  if (bf->skb != (struct sk_buff *)0) {
    
#line 1748 
    ds = bf->desc;
    
#line 1750 
    ret = (*(ah->ah_proc_tx_desc))(ah,ds,& ts);
    
#line 1751 
    if ((long)(ret == -115) != 0L) 
#line 1752 
                                   goto ldv_55706;
    else 
      
#line 1753 
      if ((long)(ret != 0) != 0L) {
        int tmp_1;
        
#line 1754 
        tmp_1 = net_ratelimit();
        
#line 1754 
        if (tmp_1 != 0) 
#line 1754 
                        _ath5k_printk((struct ath5k_hw const *)ah,"\001","error %d while processing ",ret,txq->qnum); else ;
        
#line 1757 
        goto ldv_55706;
      }
      else ;
    
#line 1760 
    skb = bf->skb;
    
#line 1761 
    bf->skb = (struct sk_buff *)0;
    
#line 1763 
    dma_unmap_single_attrs(ah->dev,bf->skbaddr,(unsigned long)skb->len,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
    
#line 1765 
    ath5k_tx_frame_completed(ah,skb,txq,& ts,bf);
  }
  else ;
  
#line 1774 
  tmp_2 = ath5k_hw_get_txdp(ah,txq->qnum);
  
#line 1774 
  ;
  
#line 1774 
  if ((unsigned long long)tmp_2 != bf->daddr) {
    
#line 1775 
    ldv_spin_lock_91(& ah->txbuflock);
    
#line 1776 
    list_move_tail(& bf->list,& ah->txbuf);
    
#line 1777 
    ah->txbuf_len += 1U;
    
#line 1778 
    txq->txq_len -= 1;
    
#line 1779 
    ldv_spin_unlock_92(& ah->txbuflock);
  }
  else ;
  
#line 1742 
  bf = bf0;
  {
    
#line 1742 
    struct list_head const *__mptr_1 = (struct list_head const *)bf0->list.next;
    
#line 1742 
    tmp_3 = (struct ath5k_buf *)__mptr_1;
  }
  
#line 1742 
  bf0 = tmp_3;
  ldv_55708: 
#line 1744 
  ;
  
#line 1742 
  if (& bf->list != & txq->q) 
#line 1744 
                              goto ldv_55707; else 
#line 1747 
                                                   goto ldv_55706;
  ldv_55706: 
#line 1748 
  ;
  
#line 1782 
  ldv_spin_unlock_93(& txq->lock);
  
#line 1783 
  if (txq->txq_len <= 24 && txq->qnum <= 3U) 
#line 1784 
                                             ieee80211_wake_queue(ah->hw,(int)txq->qnum); else ;
  
#line 1785 
  return;
}


#line 1788  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static void ath5k_tasklet_tx(unsigned long data)
{
  int i;
  
#line 1791 
  struct ath5k_hw *ah = (struct ath5k_hw *)data;
  
#line 1793 
  i = 0;
  
#line 1793 
  goto ldv_55715;
  ldv_55714: 
#line 1794 
  ;
  
#line 1794 
  if ((int)ah->txqs[i].setup != 0 && (((unsigned long)ah->ah_txq_isr_txok_all >> i) & 1UL) != 0UL) 
    
#line 1795 
    ath5k_tx_processq(ah,& ah->txqs[i]); else ;
  
#line 1793 
  i += 1;
  ldv_55715: 
#line 1794 
  ;
  
#line 1793 
  if (i <= 9) 
#line 1795 
              goto ldv_55714; else 
#line 1798 
                                   goto ldv_55716;
  ldv_55716: 
#line 1799 
  ;
  
#line 1797 
  ah->tx_pending = (_Bool)0;
  
#line 1798 
  ath5k_set_current_imask(ah);
  
#line 1799 
  return;
}


#line 1810  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static int ath5k_beacon_setup(struct ath5k_hw *ah, struct ath5k_buf *bf)
{
  int __retres;
  struct ath5k_desc *ds;
  u8 antenna;
  u32 flags;
  int tmp_2;
  struct ieee80211_rate *tmp_3;
  unsigned int tmp_4;
  
#line 1812 
  struct sk_buff *skb = bf->skb;
  
#line 1813 
  struct ieee80211_tx_info *info = IEEE80211_SKB_CB(skb);
  
#line 1815 
  int ret = 0;
  
#line 1818 
  int const padsize = 0;
  
#line 1820 
  bf->skbaddr = dma_map_single_attrs(ah->dev,(void *)skb->data,(unsigned long)skb->len,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  
#line 1822 
  if ((long)((ah->debug.level & 16U) != 0U) != 0L) {
    int tmp_0;
    
#line 1822 
    tmp_0 = net_ratelimit();
    
#line 1822 
    if ((long)(tmp_0 != 0) != 0L) 
#line 1822 
                                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_beacon_setup",1824,skb,skb->data,skb->len,bf->skbaddr); else ;
  }
  else ;
  
#line 1826 
  tmp_2 = dma_mapping_error(ah->dev,bf->skbaddr);
  
#line 1826 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 1827 
    tmp_1 = net_ratelimit();
    
#line 1827 
    if (tmp_1 != 0) 
#line 1827 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","beacon DMA mapping failed\n"); else ;
    
#line 1828 
    dev_kfree_skb_any(skb);
    
#line 1829 
    bf->skb = (struct sk_buff *)0;
    
#line 1830 
    __retres = -5;
    
#line 1830 
    goto return_label;
  }
  else ;
  
#line 1833 
  ds = bf->desc;
  
#line 1834 
  antenna = ah->ah_tx_ant;
  
#line 1836 
  flags = 2U;
  
#line 1837 
  if (ah->opmode == (unsigned int)NL80211_IFTYPE_ADHOC && ah->ah_version != (unsigned int)AR5K_AR5210) {
    
#line 1838 
    ds->ds_link = (unsigned int)bf->daddr;
    
#line 1839 
    flags |= 32U;
  }
  else 
#line 1841 
       ds->ds_link = 0U;
  
#line 1861 
  if ((unsigned int)ah->ah_ant_mode == 4U) 
    
#line 1862 
    if ((ah->bsent & 4U) != 0U) 
#line 1862 
                                antenna = (unsigned char)2U; else 
#line 1862 
                                                                  antenna = (unsigned char)1U;
  else ;
  
#line 1868 
  ds->ds_data = (unsigned int)bf->skbaddr;
  
#line 1869 
  ;
  
#line 1869 
  ;
  
#line 1873 
  tmp_3 = ieee80211_get_tx_rate((struct ieee80211_hw const *)ah->hw,(struct ieee80211_tx_info const *)info);
  
#line 1869 
  ;
  
#line 1869 
  ;
  
#line 1869 
  tmp_4 = ieee80211_get_hdrlen_from_skb((struct sk_buff const *)skb);
  
#line 1869 
  ;
  
#line 1869 
  ;
  
#line 1869 
  ;
  
#line 1869 
  ret = (*(ah->ah_setup_tx_desc))(ah,ds,skb->len,tmp_4,padsize,(enum ath5k_pkt_type)AR5K_PKT_TYPE_BEACON,(unsigned int)(ah->ah_txpower.txp_requested * 2),(unsigned int)tmp_3->hw_value,1U,4294967295U,(unsigned int)antenna,flags,0U,0U);
  
#line 1876 
  if (ret != 0) 
#line 1877 
                goto err_unmap; else ;
  
#line 1879 
  __retres = 0;
  
#line 1879 
  goto return_label;
  err_unmap: 
#line 1880 
  ;
  
#line 1881 
  dma_unmap_single_attrs(ah->dev,bf->skbaddr,(unsigned long)skb->len,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  
#line 1882 
  __retres = ret;
  return_label: 
#line 1882 
                return __retres;
}


#line 1893  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
int ath5k_beacon_update(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  int ret;
  struct ath5k_vif *avf;
  struct sk_buff *skb;
  int tmp;
  
#line 1896 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  {
    
#line 1900 
    int __ret_warn_on = vif == (struct ieee80211_vif *)0;
    
#line 1900 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 1900 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c",1900); else ;
    
#line 1900 
    tmp = (long)(__ret_warn_on != 0);
  }
  
#line 1900 
  if ((long)tmp != 0L) {
    
#line 1901 
    ret = -22;
    
#line 1902 
    goto out;
  }
  else ;
  
#line 1905 
  skb = ieee80211_beacon_get(hw,vif);
  
#line 1907 
  if (skb == (struct sk_buff *)0) {
    
#line 1908 
    ret = -12;
    
#line 1909 
    goto out;
  }
  else ;
  
#line 1912 
  avf = (struct ath5k_vif *)(& vif->drv_priv);
  
#line 1913 
  ath5k_txbuf_free_skb(ah,avf->bbuf);
  
#line 1914 
  (avf->bbuf)->skb = skb;
  
#line 1915 
  ret = ath5k_beacon_setup(ah,avf->bbuf);
  out: 
#line 1916 
  ;
  
#line 1917 
  return ret;
}


#line 1929  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static void ath5k_beacon_send(struct ath5k_hw *ah)
{
  struct ieee80211_vif *vif;
  struct ath5k_vif *avf;
  struct ath5k_buf *bf;
  struct sk_buff *skb;
  int err;
  u32 tmp_2;
  int tmp_7;
  
#line 1937 
  if ((long)((ah->debug.level & 16U) != 0U) != 0L) 
#line 1937 
                                                   _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_beacon_send",1937); else ;
  
#line 1946 
  tmp_2 = ath5k_hw_num_tx_pending(ah,ah->bhalq);
  
#line 1946 
  if ((long)(tmp_2 != 0U) != 0L) {
    
#line 1947 
    ah->bmisscount += 1U;
    
#line 1948 
    if ((long)((ah->debug.level & 16U) != 0U) != 0L) {
      int tmp;
      
#line 1948 
      tmp = net_ratelimit();
      
#line 1948 
      if ((long)(tmp != 0) != 0L) 
#line 1948 
                                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_beacon_send",1949,ah->bmisscount); else ;
    }
    else ;
    
#line 1950 
    if (ah->bmisscount > 10U) {
      
#line 1951 
      if ((long)((ah->debug.level & 16U) != 0U) != 0L) {
        int tmp_0;
        
#line 1951 
        tmp_0 = net_ratelimit();
        
#line 1951 
        if ((long)(tmp_0 != 0) != 0L) 
#line 1951 
                                      _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_beacon_send",1953,ah->bmisscount); else ;
      }
      else ;
      
#line 1954 
      if ((long)((ah->debug.level & 1U) != 0U) != 0L) {
        int tmp_1;
        
#line 1954 
        tmp_1 = net_ratelimit();
        
#line 1954 
        if ((long)(tmp_1 != 0) != 0L) 
#line 1954 
                                      _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_beacon_send",1955); else ;
      }
      else ;
      
#line 1956 
      ieee80211_queue_work(ah->hw,& ah->reset_work);
    }
    else ;
    
#line 1958 
    goto return_label;
  }
  else ;
  
#line 1960 
  if ((long)(ah->bmisscount != 0U) != 0L) {
    
#line 1961 
    if ((long)((ah->debug.level & 16U) != 0U) != 0L) {
      int tmp_3;
      
#line 1961 
      tmp_3 = net_ratelimit();
      
#line 1961 
      if ((long)(tmp_3 != 0) != 0L) 
#line 1961 
                                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_beacon_send",1963,ah->bmisscount); else ;
    }
    else ;
    
#line 1964 
    ah->bmisscount = 0U;
  }
  else ;
  
#line 1967 
  if ((ah->opmode == (unsigned int)NL80211_IFTYPE_AP && (int)ah->num_ap_vifs + (int)ah->num_mesh_vifs > 1) || ah->opmode == (unsigned int)NL80211_IFTYPE_MESH_POINT) {
    
#line 1970 
    u64 tsf = ath5k_hw_get_tsf64(ah);
    
#line 1971 
    u32 tsftu = (unsigned int)(tsf >> 10);
    
#line 1972 
    int slot = (int)(((tsftu % ah->bintval) * 4U) / ah->bintval);
    
#line 1973 
    vif = ah->bslot[(slot + 1) % 4];
    
#line 1974 
    if ((long)((ah->debug.level & 16U) != 0U) != 0L) {
      int tmp_5;
      
#line 1974 
      tmp_5 = net_ratelimit();
      
#line 1974 
      if ((long)(tmp_5 != 0) != 0L) 
#line 1974 
                                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_beacon_send",1976,tsf,tsftu,ah->bintval,slot,vif); else ;
    }
    else ;
  }
  else 
#line 1978 
       vif = ah->bslot[0];
  
#line 1980 
  if (vif == (struct ieee80211_vif *)0) 
#line 1981 
                                        goto return_label; else ;
  
#line 1983 
  avf = (struct ath5k_vif *)(& vif->drv_priv);
  
#line 1984 
  bf = avf->bbuf;
  
#line 1991 
  tmp_7 = ath5k_hw_stop_beacon_queue(ah,ah->bhalq);
  
#line 1991 
  if ((long)(tmp_7 != 0) != 0L) {
    int tmp_6;
    
#line 1992 
    tmp_6 = net_ratelimit();
    
#line 1992 
    if (tmp_6 != 0) 
#line 1992 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","beacon queue %u didn\'t start/stop ?\n",ah->bhalq); else ;
  }
  else ;
  
#line 1997 
  if (ah->opmode == (unsigned int)NL80211_IFTYPE_AP || ah->opmode == (unsigned int)NL80211_IFTYPE_MESH_POINT) {
    
#line 1999 
    err = ath5k_beacon_update(ah->hw,vif);
    
#line 2000 
    if (err != 0) 
#line 2001 
                  goto return_label; else ;
  }
  else ;
  
#line 2004 
  if ((((long)(bf->skb == (struct sk_buff *)0) != 0L || (long)(ah->opmode == (unsigned int)NL80211_IFTYPE_STATION) != 0L) != 0) != 0 || (long)(ah->opmode == (unsigned int)NL80211_IFTYPE_MONITOR) != 0L) {
    int tmp_8;
    
#line 2006 
    tmp_8 = net_ratelimit();
    
#line 2006 
    if (tmp_8 != 0) 
#line 2006 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","bf=%p bf_skb=%p\n",bf,bf->skb); else ;
    
#line 2007 
    goto return_label;
  }
  else ;
  
#line 2010 
  trace_ath5k_tx(ah,bf->skb,& ah->txqs[ah->bhalq]);
  
#line 2012 
  ath5k_hw_set_txdp(ah,ah->bhalq,(unsigned int)bf->daddr);
  
#line 2013 
  ath5k_hw_start_tx_dma(ah,ah->bhalq);
  
#line 2014 
  if ((long)((ah->debug.level & 16U) != 0U) != 0L) {
    int tmp_9;
    
#line 2014 
    tmp_9 = net_ratelimit();
    
#line 2014 
    if ((long)(tmp_9 != 0) != 0L) 
#line 2014 
                                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_beacon_send",2015,ah->bhalq,bf->daddr,bf->desc); else ;
  }
  else ;
  
#line 2017 
  skb = ieee80211_get_buffered_bc(ah->hw,vif);
  
#line 2018 
  goto ldv_55755;
  ldv_55754: 
#line 2019 
  ;
  
#line 2019 
  ath5k_tx_queue(ah->hw,skb,ah->cabq,(struct ieee80211_tx_control *)0);
  
#line 2021 
  if ((ah->cabq)->txq_len >= (ah->cabq)->txq_max) 
#line 2022 
                                                  goto ldv_55753; else ;
  
#line 2024 
  skb = ieee80211_get_buffered_bc(ah->hw,vif);
  ldv_55755: 
#line 2025 
  ;
  
#line 2018 
  if (skb != (struct sk_buff *)0) 
#line 2020 
                                  goto ldv_55754; else 
#line 2023 
                                                       goto ldv_55753;
  ldv_55753: 
#line 2024 
  ;
  
#line 2027 
  ah->bsent += 1U;
  return_label: 
#line 2028 
                return;
}


#line 2047  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
void ath5k_beacon_update_timers(struct ath5k_hw *ah, u64 bc_tsf)
{
  u32 nexttbtt;
  u32 intval;
  u32 hw_tu;
  u32 bc_tu;
  u64 hw_tsf;
  int tmp_0;
  
#line 2052 
  intval = ah->bintval & 65535U;
  
#line 2053 
  if (ah->opmode == (unsigned int)NL80211_IFTYPE_AP && (int)ah->num_ap_vifs + (int)ah->num_mesh_vifs > 1) {
    
#line 2055 
    intval /= 4U;
    
#line 2056 
    if (intval <= 14U) {
      int tmp;
      
#line 2057 
      tmp = net_ratelimit();
      
#line 2057 
      if (tmp != 0) 
#line 2057 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","intval %u is too low, min 15\n",intval); else ;
    }
    else ;
  }
  else ;
  {
    
#line 2060 
    int __ret_warn_on = intval == 0U;
    
#line 2060 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 2060 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c",2060); else ;
    
#line 2060 
    tmp_0 = (long)(__ret_warn_on != 0);
  }
  
#line 2060 
  if ((long)tmp_0 != 0L) 
#line 2061 
                         goto return_label; else ;
  
#line 2064 
  bc_tu = (unsigned int)(bc_tsf >> 10);
  
#line 2067 
  hw_tsf = ath5k_hw_get_tsf64(ah);
  
#line 2068 
  hw_tu = (unsigned int)(hw_tsf >> 10);
  
#line 2075 
  if (bc_tsf == 18446744073709551615ULL) {
    u32 tmp_1;
    {
      
#line 2080 
      u32 const __y = intval;
      
#line 2080 
      tmp_1 = (((hw_tu + __y) + 12U) / __y) * __y;
    }
    
#line 2080 
    nexttbtt = tmp_1;
  }
  else 
    
#line 2081 
    if (bc_tsf == 0ULL) {
      
#line 2086 
      nexttbtt = intval;
      
#line 2087 
      intval |= 16777216U;
    }
    else 
      
#line 2088 
      if (bc_tsf > hw_tsf) {
        
#line 2096 
        if ((long)((ah->debug.level & 16U) != 0U) != 0L) 
#line 2096 
                                                         _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_beacon_update_timers",2097); else ;
        
#line 2098 
        goto return_label;
      }
      else {
        u32 tmp_2;
        {
          
#line 2107 
          u32 const __y_0 = intval;
          
#line 2107 
          tmp_2 = ((((hw_tu - bc_tu) + __y_0) + 12U) / __y_0) * __y_0;
        }
        
#line 2107 
        nexttbtt = tmp_2 + bc_tu;
      }
  
#line 2111 
  ah->nexttbtt = nexttbtt;
  
#line 2113 
  intval |= 8388608U;
  
#line 2114 
  ath5k_hw_init_beacon_timers(ah,nexttbtt,intval);
  
#line 2120 
  if (bc_tsf == 18446744073709551615ULL) {
    
#line 2121 
    if ((long)((ah->debug.level & 16U) != 0U) != 0L) 
#line 2121 
                                                     _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_beacon_update_timers",2122); else ;
  }
  else 
    
#line 2123 
    if (bc_tsf == 0ULL) {
      
#line 2124 
      if ((long)((ah->debug.level & 16U) != 0U) != 0L) 
#line 2124 
                                                       _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_beacon_update_timers",2125); else ;
    }
    else 
      
#line 2127 
      if ((long)((ah->debug.level & 16U) != 0U) != 0L) 
#line 2127 
                                                       _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_beacon_update_timers",2128); else ;
  
#line 2130 
  if ((long)((ah->debug.level & 16U) != 0U) != 0L) 
#line 2130 
                                                   _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_beacon_update_timers",2133,bc_tsf,hw_tsf,bc_tu,hw_tu,nexttbtt); else ;
  
#line 2134 
  if ((long)((ah->debug.level & 16U) != 0U) != 0L) {
    char *tmp_3;
    char *tmp_4;
    
#line 2134 
    if ((intval & 16777216U) != 0U) 
#line 2134 
                                    tmp_3 = (char *)"AR5K_BEACON_RESET_TSF"; else 
                                                                    
#line 2134 
                                                                    tmp_3 = (char *)"";
    
#line 2134 
    if ((intval & 8388608U) != 0U) 
#line 2134 
                                   tmp_4 = (char *)"AR5K_BEACON_ENA"; else 
                                                                    
#line 2134 
                                                                    tmp_4 = (char *)"";
    
#line 2134 
    ;
    
#line 2134 
    ;
    
#line 2134 
    _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_beacon_update_timers",2137,intval & 65535U,tmp_4,tmp_3);
  }
  else ;
  return_label: 
#line 2135 
                return;
}


#line 2149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
void ath5k_beacon_config(struct ath5k_hw *ah)
{
  
#line 2151 
  ldv_spin_lock_bh_94(& ah->block);
  
#line 2152 
  ah->bmisscount = 0U;
  
#line 2153 
  ah->imask = (enum ath5k_int)((unsigned int)ah->imask & 4294639615U);
  
#line 2155 
  if ((int)ah->enable_beacon != 0) {
    
#line 2163 
    ath5k_beaconq_config(ah);
    
#line 2165 
    ah->imask = (enum ath5k_int)((unsigned int)ah->imask | 65536U);
    
#line 2167 
    if (ah->opmode == (unsigned int)NL80211_IFTYPE_ADHOC) {
      
#line 2168 
      if (ah->ah_version != (unsigned int)AR5K_AR5210) 
#line 2169 
                                                       ath5k_beacon_send(ah); else ;
    }
    else 
#line 2171 
         ath5k_beacon_update_timers(ah,18446744073709551615ULL);
  }
  else 
#line 2173 
       ath5k_hw_stop_beacon_queue(ah,ah->bhalq);
  
#line 2176 
  ath5k_hw_set_imr(ah,ah->imask);
  
#line 2177 
  ldv_inline_asm();
  
#line 2178 
  ldv_spin_unlock_bh_95(& ah->block);
  
#line 2179 
  return;
}


#line 2181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static void ath5k_tasklet_beacon(unsigned long data)
{
  
#line 2183 
  struct ath5k_hw *ah = (struct ath5k_hw *)data;
  
#line 2193 
  if (ah->opmode == (unsigned int)NL80211_IFTYPE_ADHOC) {
    
#line 2195 
    u64 tsf = ath5k_hw_get_tsf64(ah);
    
#line 2196 
    ah->nexttbtt += ah->bintval;
    
#line 2197 
    if ((long)((ah->debug.level & 16U) != 0U) != 0L) {
      int tmp_0;
      
#line 2197 
      tmp_0 = net_ratelimit();
      
#line 2197 
      if ((long)(tmp_0 != 0) != 0L) 
#line 2197 
                                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_tasklet_beacon",2202,ah->nexttbtt,(unsigned int)(tsf >> 10),tsf); else ;
    }
    else ;
  }
  else {
    
#line 2204 
    ldv_spin_lock_96(& ah->block);
    
#line 2205 
    ath5k_beacon_send(ah);
    
#line 2206 
    ldv_spin_unlock_97(& ah->block);
  }
  
#line 2208 
  return;
}


#line 2216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static void ath5k_intr_calibration_poll(struct ath5k_hw *ah)
{
  int tmp_3;
  {
    unsigned long __dummy_1;
    unsigned long volatile __dummy2_1;
    
#line 2218 
    tmp_3 = 1;
  }
  
#line 2218 
  if (tmp_3 != 0) {
    int tmp_4;
    {
      unsigned long __dummy_2;
      unsigned long __dummy2_2;
      
#line 2218 
      tmp_4 = 1;
    }
    
#line 2218 
    if (tmp_4 != 0) {
      
#line 2218 
      if ((long)(jiffies - ah->ah_cal_next_ani) >= 0L) {
        
#line 2218 
        if (((int)ah->ah_cal_mask & 1) == 0) {
          
#line 2219 
          if (((int)ah->ah_cal_mask & 2) == 0) {
            unsigned long tmp;
            
#line 2224 
            tmp = msecs_to_jiffies(1000U);
            
#line 2224 
            ah->ah_cal_next_ani = tmp + jiffies;
            
#line 2226 
            ldv_tasklet_schedule_98(& ah->ani_tasklet);
          }
          else 
#line 2218 
               goto _LAND_2;
        }
        else 
#line 2218 
             goto _LAND_2;
      }
      else 
#line 2218 
           goto _LAND_2;
    }
    else 
#line 2218 
         goto _LAND_2;
  }
  else {
    int tmp_1;
    _LAND_2: {
               unsigned long __dummy;
               unsigned long volatile __dummy2;
               
#line 2228 
               tmp_1 = 1;
             }
    
#line 2228 
    if (tmp_1 != 0) {
      int tmp_2;
      {
        unsigned long __dummy_0;
        unsigned long __dummy2_0;
        
#line 2228 
        tmp_2 = 1;
      }
      
#line 2228 
      if (tmp_2 != 0) {
        
#line 2228 
        if ((long)(jiffies - ah->ah_cal_next_short) >= 0L) {
          
#line 2228 
          if (((int)ah->ah_cal_mask & 1) == 0) {
            
#line 2229 
            if (((int)ah->ah_cal_mask & 2) == 0) {
              unsigned long tmp_0;
              
#line 2239 
              tmp_0 = msecs_to_jiffies(10000U);
              
#line 2239 
              ah->ah_cal_next_short = tmp_0 + jiffies;
              
#line 2241 
              ieee80211_queue_work(ah->hw,& ah->calib_work);
            }
            else ;
          }
          else ;
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 2243 
  return;
}


#line 2249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static void ath5k_schedule_rx(struct ath5k_hw *ah)
{
  
#line 2251 
  ah->rx_pending = (_Bool)1;
  
#line 2252 
  ldv_tasklet_schedule_99(& ah->rxtq);
  
#line 2253 
  return;
}


#line 2256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static void ath5k_schedule_tx(struct ath5k_hw *ah)
{
  
#line 2258 
  ah->tx_pending = (_Bool)1;
  
#line 2259 
  ldv_tasklet_schedule_100(& ah->txtq);
  
#line 2260 
  return;
}


#line 2263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static irqreturn_t ath5k_intr(int irq, void *dev_id)
{
  irqreturn_t __retres;
  enum ath5k_int status;
  int tmp;
  enum ath_bus_type tmp_7;
  bool tmp_8;
  
#line 2265 
  struct ath5k_hw *ah = (struct ath5k_hw *)dev_id;
  
#line 2267 
  unsigned int counter = 1000U;
  
#line 2280 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& ah->status));
  
#line 2280 
  if ((long)(tmp != 0) != 0L) {
    
#line 2283 
    __retres = IRQ_NONE;
    
#line 2283 
    goto return_label;
  }
  else {
    int tmp_3;
    enum ath_bus_type tmp_0;
    
#line 2280 
    tmp_0 = ath5k_get_bus_type(ah);
    
#line 2280 
    if ((long)(tmp_0 != (unsigned int)ATH_AHB) != 0L) {
      int tmp_2;
      bool tmp_1;
      
#line 2280 
      tmp_1 = ath5k_hw_is_intr_pending(ah);
      
#line 2280 
      if (tmp_1) 
#line 2280 
                 tmp_2 = 0; else 
#line 2280 
                                 tmp_2 = 1;
      
#line 2280 
      if ((long)tmp_2 != 0L) 
#line 2280 
                             tmp_3 = 1; else 
#line 2280 
                                             tmp_3 = 0;
    }
    else 
#line 2280 
         tmp_3 = 0;
    
#line 2280 
    if (tmp_3 != 0) {
      
#line 2283 
      __retres = IRQ_NONE;
      
#line 2283 
      goto return_label;
    }
    else ;
  }
  ldv_55811: 
#line 2284 
  ;
  
#line 2287 
  ath5k_hw_get_isr(ah,& status);
  
#line 2289 
  if ((long)((ah->debug.level & 2U) != 0U) != 0L) {
    int tmp_4;
    
#line 2289 
    tmp_4 = net_ratelimit();
    
#line 2289 
    if ((long)(tmp_4 != 0) != 0L) 
#line 2289 
                                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_intr",2290,(unsigned int)status,(unsigned int)ah->imask); else ;
  }
  else ;
  
#line 2299 
  if ((long)(((unsigned int)status & 524288U) != 0U) != 0L) {
    
#line 2301 
    if ((long)((ah->debug.level & 1U) != 0U) != 0L) {
      int tmp_5;
      
#line 2301 
      tmp_5 = net_ratelimit();
      
#line 2301 
      if ((long)(tmp_5 != 0) != 0L) 
#line 2301 
                                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_intr",2302); else ;
    }
    else ;
    
#line 2303 
    ieee80211_queue_work(ah->hw,& ah->reset_work);
  }
  else 
    
#line 2312 
    if ((long)(((unsigned int)status & 32U) != 0U) != 0L) {
      
#line 2320 
      ah->stats.rxorn_intr += 1U;
      
#line 2322 
      if (ah->ah_mac_srev <= 79U) {
        
#line 2323 
        if ((long)((ah->debug.level & 1U) != 0U) != 0L) {
          int tmp_6;
          
#line 2323 
          tmp_6 = net_ratelimit();
          
#line 2323 
          if ((long)(tmp_6 != 0) != 0L) 
#line 2323 
                                        _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_intr",2324); else ;
        }
        else ;
        
#line 2325 
        ieee80211_queue_work(ah->hw,& ah->reset_work);
      }
      else 
#line 2327 
           ath5k_schedule_rx(ah);
    }
    else {
      
#line 2332 
      if (((unsigned int)status & 65536U) != 0U) 
#line 2333 
                                                 ldv_tasklet_hi_schedule_101(& ah->beacontq); else ;
      
#line 2342 
      if (((unsigned int)status & 16U) != 0U) 
#line 2343 
                                              ah->stats.rxeol_intr += 1U; else ;
      
#line 2347 
      if (((unsigned int)status & 2048U) != 0U) 
#line 2348 
                                                ath5k_hw_update_tx_triglevel(ah,(_Bool)1); else ;
      
#line 2351 
      if (((unsigned int)status & 5U) != 0U) 
#line 2352 
                                             ath5k_schedule_rx(ah); else ;
      
#line 2355 
      if (((unsigned int)status & 1472U) != 0U) 
#line 2359 
                                                ath5k_schedule_tx(ah); else ;
      
#line 2366 
      if (((unsigned int)status & 4096U) != 0U) {
        
#line 2367 
        ah->stats.mib_intr += 1U;
        
#line 2368 
        ath5k_hw_update_mib_counters(ah);
        
#line 2369 
        ath5k_ani_mib_intr(ah);
      }
      else ;
      
#line 2373 
      if (((unsigned int)status & 16777216U) != 0U) 
#line 2374 
                                                    ldv_tasklet_schedule_102(& ah->rf_kill.toggleq); else ;
    }
  
#line 2378 
  tmp_7 = ath5k_get_bus_type(ah);
  
#line 2378 
  if (tmp_7 == (unsigned int)ATH_AHB) 
#line 2379 
                                      goto ldv_55810; else ;
  
#line 2381 
  tmp_8 = ath5k_hw_is_intr_pending(ah);
  
#line 2381 
  if ((int)tmp_8 != 0) {
    
#line 2381 
    counter -= 1U;
    
#line 2381 
    if (counter != 0U) 
#line 2383 
                       goto ldv_55811; else 
#line 2386 
                                            goto ldv_55810;
  }
  else 
#line 2386 
       goto ldv_55810;
  ldv_55810: 
#line 2387 
  ;
  
#line 2389 
  if ((int)ah->rx_pending != 0 || (int)ah->tx_pending != 0) 
#line 2390 
                                                            ath5k_set_current_imask(ah); else ;
  
#line 2392 
  if ((long)(counter == 0U) != 0L) {
    int tmp_9;
    
#line 2393 
    tmp_9 = net_ratelimit();
    
#line 2393 
    if (tmp_9 != 0) 
#line 2393 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","too many interrupts, giving up for now\n"); else ;
  }
  else ;
  
#line 2396 
  ath5k_intr_calibration_poll(ah);
  
#line 2398 
  __retres = IRQ_HANDLED;
  return_label: 
#line 2398 
                return __retres;
}


#line 2406  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static void ath5k_calibrate_work(struct work_struct *work)
{
  struct ath5k_hw *tmp;
  int tmp_4;
  int tmp_10;
  {
    
#line 2408 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 2408 
    tmp = (struct ath5k_hw *)__mptr + 18446744073709528936U;
  }
  
#line 2408 
  struct ath5k_hw *ah = tmp;
  {
    unsigned long __dummy;
    unsigned long volatile __dummy2;
    
#line 2412 
    tmp_4 = 1;
  }
  
#line 2412 
  if (tmp_4 != 0) {
    int tmp_5;
    {
      unsigned long __dummy_0;
      unsigned long __dummy2_0;
      
#line 2412 
      tmp_5 = 1;
    }
    
#line 2412 
    if (tmp_5 != 0) 
      
#line 2412 
      if ((long)(jiffies - ah->ah_cal_next_full) >= 0L) {
        unsigned long tmp_0;
        enum ath5k_rfgain tmp_3;
        
#line 2414 
        tmp_0 = msecs_to_jiffies(60000U);
        
#line 2414 
        ah->ah_cal_next_full = tmp_0 + jiffies;
        
#line 2416 
        ah->ah_cal_mask = (unsigned char)((unsigned int)ah->ah_cal_mask | 1U);
        
#line 2418 
        if ((long)((ah->debug.level & 32U) != 0U) != 0L) {
          int tmp_1;
          
#line 2418 
          tmp_1 = net_ratelimit();
          
#line 2418 
          if ((long)(tmp_1 != 0) != 0L) 
#line 2418 
                                        _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_calibrate_work",2419); else ;
        }
        else ;
        
#line 2421 
        tmp_3 = ath5k_hw_gainf_calibrate(ah);
        
#line 2421 
        if (tmp_3 == (unsigned int)AR5K_RFGAIN_NEED_CHANGE) {
          
#line 2426 
          if ((long)((ah->debug.level & 1U) != 0U) != 0L) {
            int tmp_2;
            
#line 2426 
            tmp_2 = net_ratelimit();
            
#line 2426 
            if ((long)(tmp_2 != 0) != 0L) 
#line 2426 
                                          _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_calibrate_work",2427); else ;
          }
          else ;
          
#line 2428 
          ieee80211_queue_work(ah->hw,& ah->reset_work);
        }
        else ;
      }
      else 
#line 2431 
           ah->ah_cal_mask = (unsigned char)((unsigned int)ah->ah_cal_mask | 2U);
    else 
#line 2431 
         ah->ah_cal_mask = (unsigned char)((unsigned int)ah->ah_cal_mask | 2U);
  }
  else 
#line 2431 
       ah->ah_cal_mask = (unsigned char)((unsigned int)ah->ah_cal_mask | 2U);
  
#line 2434 
  if ((long)((ah->debug.level & 32U) != 0U) != 0L) {
    int tmp_7;
    
#line 2434 
    tmp_7 = net_ratelimit();
    
#line 2434 
    if ((long)(tmp_7 != 0) != 0L) {
      int tmp_6;
      
#line 2434 
      ;
      
#line 2434 
      tmp_6 = ieee80211_frequency_to_channel((int)(ah->curchan)->center_freq);
      
#line 2434 
      ;
      
#line 2434 
      _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_calibrate_work",2436,tmp_6,(int)(ah->curchan)->hw_value);
    }
    else ;
  }
  else ;
  
#line 2438 
  tmp_10 = ath5k_hw_phy_calibrate(ah,ah->curchan);
  
#line 2438 
  if (tmp_10 != 0) {
    int tmp_9;
    
#line 2439 
    tmp_9 = net_ratelimit();
    
#line 2439 
    if (tmp_9 != 0) {
      int tmp_8;
      
#line 2439 
      tmp_8 = ieee80211_frequency_to_channel((int)(ah->curchan)->center_freq);
      
#line 2439 
      ;
      
#line 2439 
      _ath5k_printk((struct ath5k_hw const *)ah,"\001","calibration of channel %u failed\n",tmp_8);
    }
    else ;
  }
  else ;
  
#line 2444 
  if (((int)ah->ah_cal_mask & 1) != 0) 
#line 2445 
                                       ah->ah_cal_mask = (unsigned char)((unsigned int)ah->ah_cal_mask & 254U);
  else 
    
#line 2446 
    if (((int)ah->ah_cal_mask & 2) != 0) 
#line 2447 
                                         ah->ah_cal_mask = (unsigned char)((unsigned int)ah->ah_cal_mask & 253U); else ;
  
#line 2448 
  return;
}


#line 2452  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static void ath5k_tasklet_ani(unsigned long data)
{
  
#line 2454 
  struct ath5k_hw *ah = (struct ath5k_hw *)data;
  
#line 2456 
  ah->ah_cal_mask = (unsigned char)((unsigned int)ah->ah_cal_mask | 8U);
  
#line 2457 
  ath5k_ani_calibration(ah);
  
#line 2458 
  ah->ah_cal_mask = (unsigned char)((unsigned int)ah->ah_cal_mask & 247U);
  
#line 2459 
  return;
}


#line 2463  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static void ath5k_tx_complete_poll_work(struct work_struct *work)
{
  struct ath5k_hw *tmp;
  struct ath5k_txq *txq;
  int i;
  int tmp_0;
  unsigned long tmp_3;
  {
    
#line 2465 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 2465 
    tmp = (struct ath5k_hw *)__mptr + 18446744073709525192U;
  }
  
#line 2465 
  struct ath5k_hw *ah = tmp;
  
#line 2469 
  bool needreset = (_Bool)0;
  
#line 2471 
  tmp_0 = constant_test_bit(3L,(unsigned long const volatile *)(& ah->status));
  
#line 2471 
  if (tmp_0 == 0) 
#line 2472 
                  goto return_label; else ;
  
#line 2474 
  ldv_mutex_lock_103(& ah->lock);
  
#line 2476 
  i = 0;
  
#line 2476 
  goto ldv_55844;
  ldv_55843: 
#line 2477 
  ;
  
#line 2477 
  if ((int)ah->txqs[i].setup != 0) {
    
#line 2478 
    txq = & ah->txqs[i];
    
#line 2479 
    ldv_spin_lock_bh_104(& txq->lock);
    
#line 2480 
    if (txq->txq_len > 1) 
      
#line 2481 
      if ((int)txq->txq_poll_mark != 0) {
        
#line 2482 
        if ((long)((ah->debug.level & 8U) != 0U) != 0L) {
          int tmp_1;
          
#line 2482 
          tmp_1 = net_ratelimit();
          
#line 2482 
          if ((long)(tmp_1 != 0) != 0L) 
#line 2482 
                                        _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_tx_complete_poll_work",2484,txq->qnum); else ;
        }
        else ;
        
#line 2485 
        needreset = (_Bool)1;
        
#line 2486 
        txq->txq_stuck += 1U;
        
#line 2487 
        ldv_spin_unlock_bh_105(& txq->lock);
        
#line 2488 
        goto ldv_55842;
      }
      else 
#line 2490 
           txq->txq_poll_mark = (_Bool)1;
    else ;
    
#line 2493 
    ldv_spin_unlock_bh_106(& txq->lock);
  }
  else ;
  
#line 2476 
  i += 1;
  ldv_55844: 
#line 2477 
  ;
  
#line 2476 
  if ((unsigned int)i <= 9U) 
#line 2478 
                             goto ldv_55843; else 
#line 2481 
                                                  goto ldv_55842;
  ldv_55842: 
#line 2482 
  ;
  
#line 2497 
  if ((int)needreset != 0) {
    
#line 2498 
    if ((long)((ah->debug.level & 1U) != 0U) != 0L) {
      int tmp_2;
      
#line 2498 
      tmp_2 = net_ratelimit();
      
#line 2498 
      if ((long)(tmp_2 != 0) != 0L) 
#line 2498 
                                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_tx_complete_poll_work",2499); else ;
    }
    else ;
    
#line 2500 
    ath5k_reset(ah,(struct ieee80211_channel *)0,(_Bool)1);
  }
  else ;
  
#line 2503 
  ldv_mutex_unlock_107(& ah->lock);
  
#line 2505 
  tmp_3 = msecs_to_jiffies(3000U);
  
#line 2505 
  ;
  
#line 2505 
  ;
  
#line 2505 
  ieee80211_queue_delayed_work(ah->hw,& ah->tx_complete_work,tmp_3);
  return_label: 
#line 2507 
                return;
}


#line 2514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static struct ieee80211_iface_limit const if_limits[2U] = {{.max = (unsigned short)2048U, .types = (unsigned short)4U}, {.max = (unsigned short)4U, .types = (unsigned short)136U}};

#line 2523  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static struct ieee80211_iface_combination const if_comb = {.limits = (struct ieee80211_iface_limit const *)(& if_limits), .num_different_channels = 1U, .max_interfaces = (unsigned short)2048U, .n_limits = (unsigned char)2U, .beacon_int_infra_match = (_Bool)0, .radar_detect_widths = (unsigned char)0, .radar_detect_regions = (unsigned char)0};

#line 2531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
int ath5k_init_ah(struct ath5k_hw *ah, struct ath_bus_ops const *bus_ops)
{
  int __retres;
  struct ath_common *common;
  int ret;
  int csz;
  char const *tmp_2;
  
#line 2533 
  struct ieee80211_hw *hw = ah->hw;
  
#line 2539 
  SET_IEEE80211_DEV(hw,ah->dev);
  
#line 2540 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_SUPPORTS_RC_TABLE);
  
#line 2541 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_REPORTS_TX_ACK_STATUS);
  
#line 2542 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_MFP_CAPABLE);
  
#line 2543 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_SIGNAL_DBM);
  
#line 2544 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_RX_INCLUDES_FCS);
  
#line 2545 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_HOST_BROADCAST_PS_BUFFERING);
  
#line 2547 
  (hw->wiphy)->interface_modes = (unsigned short)142U;
  
#line 2553 
  (hw->wiphy)->iface_combinations = & if_comb;
  
#line 2554 
  (hw->wiphy)->n_iface_combinations = 1;
  
#line 2557 
  (hw->wiphy)->flags |= 256U;
  
#line 2559 
  (hw->wiphy)->flags |= 4194304U;
  
#line 2562 
  (hw->wiphy)->available_antennas_tx = 3U;
  
#line 2563 
  (hw->wiphy)->available_antennas_rx = 3U;
  
#line 2565 
  hw->extra_tx_headroom = 2U;
  
#line 2571 
  __set_bit(0L,(unsigned long volatile *)(& ah->status));
  
#line 2573 
  ah->opmode = NL80211_IFTYPE_STATION;
  
#line 2574 
  ah->bintval = 1000U;
  {
    struct lock_class_key __key;
    
#line 2575 
    __mutex_init(& ah->lock,"&ah->lock",& __key);
  }
  
#line 2576 
  spinlock_check(& ah->rxbuflock);
  {
    struct lock_class_key __key_0;
    
#line 2576 
    __raw_spin_lock_init(& ah->rxbuflock.__anonCompField_spinlock_18.rlock,"&(&ah->rxbuflock)->rlock",& __key_0);
  }
  
#line 2577 
  spinlock_check(& ah->txbuflock);
  {
    struct lock_class_key __key_1;
    
#line 2577 
    __raw_spin_lock_init(& ah->txbuflock.__anonCompField_spinlock_18.rlock,"&(&ah->txbuflock)->rlock",& __key_1);
  }
  
#line 2578 
  spinlock_check(& ah->block);
  {
    struct lock_class_key __key_2;
    
#line 2578 
    __raw_spin_lock_init(& ah->block.__anonCompField_spinlock_18.rlock,"&(&ah->block)->rlock",& __key_2);
  }
  
#line 2579 
  spinlock_check(& ah->irqlock);
  {
    struct lock_class_key __key_3;
    
#line 2579 
    __raw_spin_lock_init(& ah->irqlock.__anonCompField_spinlock_18.rlock,"&(&ah->irqlock)->rlock",& __key_3);
  }
  
#line 2582 
  ret = ldv_request_irq_108((unsigned int)ah->irq,& ath5k_intr,128UL,"ath",(void *)ah);
  
#line 2583 
  if (ret != 0) {
    int tmp;
    
#line 2584 
    tmp = net_ratelimit();
    
#line 2584 
    if (tmp != 0) 
#line 2584 
                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","request_irq failed\n"); else ;
    
#line 2585 
    goto err;
  }
  else ;
  
#line 2588 
  common = ath5k_hw_common(ah);
  
#line 2589 
  common->ops = & ath5k_common_ops;
  
#line 2590 
  common->bus_ops = bus_ops;
  
#line 2591 
  common->ah = (void *)ah;
  
#line 2592 
  common->hw = hw;
  
#line 2593 
  common->priv = (void *)ah;
  
#line 2594 
  common->clockrate = 40U;
  
#line 2600 
  ath5k_read_cachesize(common,& csz);
  
#line 2601 
  common->cachelsz = (unsigned short)((int)((unsigned short)csz) << 2U);
  
#line 2603 
  spinlock_check(& common->cc_lock);
  {
    struct lock_class_key __key_4;
    
#line 2603 
    __raw_spin_lock_init(& common->cc_lock.__anonCompField_spinlock_18.rlock,"&(&common->cc_lock)->rlock",& __key_4);
  }
  
#line 2606 
  ret = ath5k_hw_init(ah);
  
#line 2607 
  if (ret != 0) 
#line 2608 
                goto err_irq; else ;
  
#line 2611 
  if ((int)ah->ah_capabilities.cap_has_mrr_support != 0) {
    int tmp_1;
    
#line 2612 
    hw->max_rates = (unsigned char)4U;
    {
      int tmp_0;
      
#line 2613 
      int _max1 = 7;
      
#line 2613 
      int _max2 = 4;
      
#line 2613 
      if (_max1 > _max2) 
#line 2613 
                         tmp_0 = _max1; else 
#line 2613 
                                             tmp_0 = _max2;
      
#line 2613 
      tmp_1 = tmp_0;
    }
    
#line 2613 
    hw->max_rate_tries = (unsigned char)tmp_1;
  }
  else ;
  
#line 2617 
  hw->vif_data_size = 24;
  
#line 2620 
  ret = ath5k_init(hw);
  
#line 2621 
  if (ret != 0) 
#line 2622 
                goto err_ah; else ;
  
#line 2624 
  ;
  
#line 2624 
  ;
  
#line 2624 
  tmp_2 = ath5k_chip_name((enum ath5k_srev_type)AR5K_VERSION_MAC,(unsigned short)((int)((unsigned short)ah->ah_mac_srev)));
  
#line 2624 
  ;
  
#line 2624 
  _ath5k_printk((struct ath5k_hw const *)ah,"\001","Atheros AR%s chip found (MAC: 0x%x, PHY: 0x%x)\n",tmp_2,ah->ah_mac_srev,(int)ah->ah_phy_revision);
  
#line 2629 
  if (! ah->ah_single_chip) {
    
#line 2631 
    if ((unsigned int)ah->ah_radio_5ghz_revision != 0U && (unsigned int)ah->ah_radio_2ghz_revision == 0U) {
      int tmp_7;
      
#line 2634 
      tmp_7 = constant_test_bit(0L,(unsigned long const volatile *)(& ah->ah_capabilities.cap_mode));
      
#line 2634 
      if (tmp_7 == 0) {
        char const *tmp_3;
        
#line 2636 
        ;
        
#line 2636 
        tmp_3 = ath5k_chip_name((enum ath5k_srev_type)AR5K_VERSION_RAD,(unsigned short)((int)ah->ah_radio_5ghz_revision));
        
#line 2636 
        ;
        
#line 2636 
        _ath5k_printk((struct ath5k_hw const *)ah,"\001","RF%s 2GHz radio found (0x%x)\n",tmp_3,(int)ah->ah_radio_5ghz_revision);
      }
      else {
        int tmp_6;
        
#line 2642 
        tmp_6 = constant_test_bit(1L,(unsigned long const volatile *)(& ah->ah_capabilities.cap_mode));
        
#line 2642 
        if (tmp_6 == 0) {
          char const *tmp_4;
          
#line 2644 
          ;
          
#line 2644 
          tmp_4 = ath5k_chip_name((enum ath5k_srev_type)AR5K_VERSION_RAD,(unsigned short)((int)ah->ah_radio_5ghz_revision));
          
#line 2644 
          ;
          
#line 2644 
          _ath5k_printk((struct ath5k_hw const *)ah,"\001","RF%s 5GHz radio found (0x%x)\n",tmp_4,(int)ah->ah_radio_5ghz_revision);
        }
        else {
          char const *tmp_5;
          
#line 2650 
          ;
          
#line 2650 
          tmp_5 = ath5k_chip_name((enum ath5k_srev_type)AR5K_VERSION_RAD,(unsigned short)((int)ah->ah_radio_5ghz_revision));
          
#line 2650 
          ;
          
#line 2650 
          _ath5k_printk((struct ath5k_hw const *)ah,"\001","RF%s multiband radio found",tmp_5,(int)ah->ah_radio_5ghz_revision);
        }
      }
    }
    else 
      
#line 2659 
      if ((unsigned int)ah->ah_radio_5ghz_revision != 0U && (unsigned int)ah->ah_radio_2ghz_revision != 0U) {
        char const *tmp_8;
        char const *tmp_9;
        
#line 2661 
        ;
        
#line 2661 
        tmp_8 = ath5k_chip_name((enum ath5k_srev_type)AR5K_VERSION_RAD,(unsigned short)((int)ah->ah_radio_5ghz_revision));
        
#line 2661 
        ;
        
#line 2661 
        _ath5k_printk((struct ath5k_hw const *)ah,"\001","RF%s 5GHz radio found (0x%x)\n",tmp_8,(int)ah->ah_radio_5ghz_revision);
        
#line 2665 
        ;
        
#line 2665 
        tmp_9 = ath5k_chip_name((enum ath5k_srev_type)AR5K_VERSION_RAD,(unsigned short)((int)ah->ah_radio_2ghz_revision));
        
#line 2665 
        ;
        
#line 2665 
        _ath5k_printk((struct ath5k_hw const *)ah,"\001","RF%s 2GHz radio found (0x%x)\n",tmp_9,(int)ah->ah_radio_2ghz_revision);
      }
      else ;
  }
  else ;
  
#line 2672 
  ath5k_debug_init_device(ah);
  
#line 2675 
  __set_bit(0L,(unsigned long volatile *)(& ah->status));
  
#line 2677 
  __retres = 0;
  
#line 2677 
  goto return_label;
  err_ah: 
#line 2678 
  ;
  
#line 2679 
  ath5k_hw_deinit(ah);
  err_irq: 
#line 2680 
  ;
  
#line 2681 
  ldv_free_irq_109((unsigned int)ah->irq,(void *)ah);
  err: 
#line 2682 
  ;
  
#line 2683 
  __retres = ret;
  return_label: 
#line 2683 
                return __retres;
}


#line 2687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static int ath5k_stop_locked(struct ath5k_hw *ah)
{
  int __retres;
  int tmp_1;
  
#line 2690 
  if ((long)((ah->debug.level & 1U) != 0U) != 0L) {
    int tmp_0;
    
#line 2690 
    tmp_0 = net_ratelimit();
    
#line 2690 
    if ((long)(tmp_0 != 0) != 0L) {
      int tmp;
      
#line 2690 
      tmp = constant_test_bit(0L,(unsigned long const volatile *)(& ah->status));
      
#line 2690 
      ;
      
#line 2690 
      _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_stop_locked",2691,tmp);
    }
    else ;
  }
  else ;
  
#line 2708 
  ieee80211_stop_queues(ah->hw);
  
#line 2710 
  tmp_1 = constant_test_bit(0L,(unsigned long const volatile *)(& ah->status));
  
#line 2710 
  if (tmp_1 == 0) {
    
#line 2711 
    ath5k_led_off(ah);
    
#line 2712 
    ath5k_hw_set_imr(ah,(enum ath5k_int)0);
    
#line 2713 
    synchronize_irq((unsigned int)ah->irq);
    
#line 2714 
    ath5k_rx_stop(ah);
    
#line 2715 
    ath5k_hw_dma_stop(ah);
    
#line 2716 
    ath5k_drain_tx_buffs(ah);
    
#line 2717 
    ath5k_hw_phy_disable(ah);
  }
  else ;
  
#line 2720 
  __retres = 0;
  
#line 2720 
  return __retres;
}


#line 2723  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
int ath5k_start(struct ieee80211_hw *hw)
{
  int ret;
  int i;
  unsigned long tmp_1;
  
#line 2725 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 2726 
  struct ath_common *common = ath5k_hw_common(ah);
  
#line 2729 
  ldv_mutex_lock_110(& ah->lock);
  
#line 2731 
  if ((long)((ah->debug.level & 1U) != 0U) != 0L) {
    int tmp_0;
    
#line 2731 
    tmp_0 = net_ratelimit();
    
#line 2731 
    if ((long)(tmp_0 != 0) != 0L) 
#line 2731 
                                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_start",2731,(unsigned int)ah->opmode); else ;
  }
  else ;
  
#line 2737 
  ath5k_stop_locked(ah);
  
#line 2746 
  ah->curchan = (ah->hw)->conf.chandef.chan;
  
#line 2747 
  ah->imask = 2148013237;
  
#line 2757 
  ret = ath5k_reset(ah,(struct ieee80211_channel *)0,(_Bool)0);
  
#line 2758 
  if (ret != 0) 
#line 2759 
                goto done; else ;
  
#line 2761 
  if (! ath5k_modparam_no_hw_rfkill_switch) 
#line 2762 
                                            ath5k_rfkill_hw_start(ah); else ;
  
#line 2768 
  i = 0;
  
#line 2768 
  goto ldv_55884;
  ldv_55883: 
#line 2769 
  ;
  
#line 2769 
  ath_hw_keyreset(common,(unsigned short)((int)((unsigned short)i)));
  
#line 2768 
  i += 1;
  ldv_55884: 
#line 2769 
  ;
  
#line 2768 
  if (common->keymax > (unsigned int)i) 
#line 2770 
                                        goto ldv_55883; else 
#line 2773 
                                                             goto ldv_55885;
  ldv_55885: 
#line 2774 
  ;
  
#line 2773 
  ah->ah_ack_bitrate_high = (_Bool)1;
  
#line 2775 
  i = 0;
  
#line 2775 
  goto ldv_55890;
  ldv_55889: 
#line 2776 
  ;
  
#line 2776 
  ah->bslot[i] = (struct ieee80211_vif *)0;
  
#line 2775 
  i += 1;
  ldv_55890: 
#line 2776 
  ;
  
#line 2775 
  if ((unsigned int)i <= 3U) 
#line 2777 
                             goto ldv_55889; else 
#line 2780 
                                                  goto ldv_55891;
  ldv_55891: 
#line 2781 
  ;
  
#line 2778 
  ret = 0;
  done: 
#line 2779 
  ;
  
#line 2780 
  ldv_inline_asm();
  
#line 2781 
  ldv_mutex_unlock_111(& ah->lock);
  
#line 2783 
  set_bit(3L,(unsigned long volatile *)(& ah->status));
  
#line 2784 
  tmp_1 = msecs_to_jiffies(3000U);
  
#line 2784 
  ;
  
#line 2784 
  ;
  
#line 2784 
  ieee80211_queue_delayed_work(ah->hw,& ah->tx_complete_work,tmp_1);
  
#line 2787 
  return ret;
}


#line 2790  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static void ath5k_stop_tasklets(struct ath5k_hw *ah)
{
  
#line 2792 
  ah->rx_pending = (_Bool)0;
  
#line 2793 
  ah->tx_pending = (_Bool)0;
  
#line 2794 
  tasklet_kill(& ah->rxtq);
  
#line 2795 
  tasklet_kill(& ah->txtq);
  
#line 2796 
  tasklet_kill(& ah->beacontq);
  
#line 2797 
  tasklet_kill(& ah->ani_tasklet);
  
#line 2798 
  return;
}


#line 2806  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
void ath5k_stop(struct ieee80211_hw *hw)
{
  int ret;
  
#line 2808 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 2811 
  ldv_mutex_lock_112(& ah->lock);
  
#line 2812 
  ret = ath5k_stop_locked(ah);
  
#line 2813 
  if (ret == 0) {
    int tmp_0;
    
#line 2813 
    tmp_0 = constant_test_bit(0L,(unsigned long const volatile *)(& ah->status));
    
#line 2813 
    if (tmp_0 == 0) {
      
#line 2834 
      ret = ath5k_hw_on_hold(ah);
      
#line 2836 
      if ((long)((ah->debug.level & 1U) != 0U) != 0L) {
        int tmp;
        
#line 2836 
        tmp = net_ratelimit();
        
#line 2836 
        if ((long)(tmp != 0) != 0L) 
#line 2836 
                                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_stop",2837); else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 2838 
  ldv_inline_asm();
  
#line 2841 
  ldv_mutex_unlock_113(& ah->lock);
  
#line 2843 
  ath5k_stop_tasklets(ah);
  
#line 2845 
  set_bit(3L,(unsigned long volatile *)(& ah->status));
  
#line 2846 
  cancel_delayed_work_sync(& ah->tx_complete_work);
  
#line 2848 
  if (! ath5k_modparam_no_hw_rfkill_switch) 
#line 2849 
                                            ath5k_rfkill_hw_stop(ah); else ;
  
#line 2850 
  return;
}


#line 2859  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static int ath5k_reset(struct ath5k_hw *ah, struct ieee80211_channel *chan, bool skip_pcu)
{
  int __retres;
  int ret;
  int ani_mode;
  unsigned long tmp_4;
  unsigned long tmp_5;
  unsigned long tmp_6;
  
#line 2862 
  struct ath_common *common = ath5k_hw_common(ah);
  
#line 2864 
  bool fast = (_Bool)((chan != (struct ieee80211_channel *)0 && (int)modparam_fastchanswitch != 0) != 0);
  
#line 2866 
  if ((long)((ah->debug.level & 1U) != 0U) != 0L) {
    int tmp_0;
    
#line 2866 
    tmp_0 = net_ratelimit();
    
#line 2866 
    if ((long)(tmp_0 != 0) != 0L) 
#line 2866 
                                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_reset",2866); else ;
  }
  else ;
  
#line 2868 
  __set_bit(4L,(unsigned long volatile *)(& ah->status));
  
#line 2870 
  ath5k_hw_set_imr(ah,(enum ath5k_int)0);
  
#line 2871 
  synchronize_irq((unsigned int)ah->irq);
  
#line 2872 
  ath5k_stop_tasklets(ah);
  
#line 2877 
  ani_mode = (int)ah->ani_state.ani_mode;
  
#line 2878 
  ath5k_ani_init(ah,(enum ath5k_ani_mode)ATH5K_ANI_MODE_OFF);
  
#line 2883 
  ath5k_drain_tx_buffs(ah);
  
#line 2886 
  ath5k_hw_stop_rx_pcu(ah);
  
#line 2893 
  ret = ath5k_hw_dma_stop(ah);
  
#line 2898 
  if (ret != 0 && (int)fast != 0) {
    
#line 2899 
    if ((long)((ah->debug.level & 1U) != 0U) != 0L) {
      int tmp_1;
      
#line 2899 
      tmp_1 = net_ratelimit();
      
#line 2899 
      if ((long)(tmp_1 != 0) != 0L) 
#line 2899 
                                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_reset",2900); else ;
    }
    else ;
    
#line 2901 
    fast = (_Bool)0;
  }
  else ;
  
#line 2904 
  if (chan != (struct ieee80211_channel *)0) 
#line 2905 
                                             ah->curchan = chan; else ;
  
#line 2907 
  ret = ath5k_hw_reset(ah,ah->opmode,ah->curchan,(_Bool)((bool)((int)fast) != 0),(_Bool)((bool)((int)skip_pcu) != 0));
  
#line 2908 
  if (ret != 0) {
    int tmp_2;
    
#line 2909 
    tmp_2 = net_ratelimit();
    
#line 2909 
    if (tmp_2 != 0) 
#line 2909 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","can\'t reset hardware (%d)\n",ret); else ;
    
#line 2910 
    goto err;
  }
  else ;
  
#line 2913 
  ret = ath5k_rx_start(ah);
  
#line 2914 
  if (ret != 0) {
    int tmp_3;
    
#line 2915 
    tmp_3 = net_ratelimit();
    
#line 2915 
    if (tmp_3 != 0) 
#line 2915 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","can\'t start recv logic\n"); else ;
    
#line 2916 
    goto err;
  }
  else ;
  
#line 2919 
  ath5k_ani_init(ah,(enum ath5k_ani_mode)ani_mode);
  
#line 2932 
  tmp_4 = msecs_to_jiffies(60000U);
  
#line 2932 
  ah->ah_cal_next_full = tmp_4 + jiffies;
  
#line 2934 
  tmp_5 = msecs_to_jiffies(1000U);
  
#line 2934 
  ah->ah_cal_next_ani = tmp_5 + jiffies;
  
#line 2936 
  tmp_6 = msecs_to_jiffies(10000U);
  
#line 2936 
  ah->ah_cal_next_short = tmp_6 + jiffies;
  
#line 2939 
  ewma_init(& ah->ah_beacon_rssi_avg,1024UL,8UL);
  
#line 2942 
  memset((void *)(& ah->survey),0,64UL);
  
#line 2943 
  ldv_spin_lock_bh_114(& common->cc_lock);
  
#line 2944 
  ath_hw_cycle_counters_update(common);
  
#line 2945 
  memset((void *)(& common->cc_survey),0,16UL);
  
#line 2946 
  memset((void *)(& common->cc_ani),0,16UL);
  
#line 2947 
  ldv_spin_unlock_bh_115(& common->cc_lock);
  
#line 2960 
  __set_bit(4L,(unsigned long volatile *)(& ah->status));
  
#line 2962 
  ath5k_beacon_config(ah);
  
#line 2965 
  ieee80211_wake_queues(ah->hw);
  
#line 2967 
  __retres = 0;
  
#line 2967 
  goto return_label;
  err: 
#line 2968 
  ;
  
#line 2969 
  __retres = ret;
  return_label: 
#line 2969 
                return __retres;
}


#line 2972  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static void ath5k_reset_work(struct work_struct *work)
{
  struct ath5k_hw *tmp;
  {
    
#line 2974 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 2974 
    tmp = (struct ath5k_hw *)__mptr + 18446744073709529016U;
  }
  
#line 2974 
  struct ath5k_hw *ah = tmp;
  
#line 2977 
  ldv_mutex_lock_116(& ah->lock);
  
#line 2978 
  ath5k_reset(ah,(struct ieee80211_channel *)0,(_Bool)1);
  
#line 2979 
  ldv_mutex_unlock_117(& ah->lock);
  
#line 2980 
  return;
}


#line 2983  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
static int ath5k_init(struct ieee80211_hw *hw)
{
  int __retres;
  struct ath5k_txq *txq;
  int ret;
  bool tmp_5;
  struct ath_common *tmp_21;
  int tmp_26;
  bool tmp_25;
  
#line 2986 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 2987 
  struct ath_regulatory *regulatory = ath5k_hw_regulatory(ah);
  
#line 2989 
  u8 mac[6U] = {};
  
#line 2999 
  ret = ath5k_setup_bands(hw);
  
#line 3000 
  if (ret != 0) {
    int tmp_0;
    
#line 3001 
    tmp_0 = net_ratelimit();
    
#line 3001 
    if (tmp_0 != 0) 
#line 3001 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","can\'t get channels\n"); else ;
    
#line 3002 
    goto err;
  }
  else ;
  
#line 3008 
  ret = ath5k_desc_alloc(ah);
  
#line 3009 
  if (ret != 0) {
    int tmp_1;
    
#line 3010 
    tmp_1 = net_ratelimit();
    
#line 3010 
    if (tmp_1 != 0) 
#line 3010 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","can\'t allocate descriptors\n"); else ;
    
#line 3011 
    goto err;
  }
  else ;
  
#line 3020 
  ret = ath5k_beaconq_setup(ah);
  
#line 3021 
  if (ret < 0) {
    int tmp_2;
    
#line 3022 
    tmp_2 = net_ratelimit();
    
#line 3022 
    if (tmp_2 != 0) 
#line 3022 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","can\'t setup a beacon xmit queue\n"); else ;
    
#line 3023 
    goto err_desc;
  }
  else ;
  
#line 3025 
  ah->bhalq = (unsigned int)ret;
  
#line 3026 
  ah->cabq = ath5k_txq_setup(ah,3,0);
  
#line 3027 
  tmp_5 = IS_ERR((void const *)ah->cabq);
  
#line 3027 
  if ((int)tmp_5 != 0) {
    int tmp_3;
    long tmp_4;
    
#line 3028 
    tmp_3 = net_ratelimit();
    
#line 3028 
    if (tmp_3 != 0) 
#line 3028 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","can\'t setup cab queue\n"); else ;
    
#line 3029 
    tmp_4 = PTR_ERR((void const *)ah->cabq);
    
#line 3029 
    ret = (int)tmp_4;
    
#line 3030 
    goto err_bhal;
  }
  else ;
  
#line 3035 
  if ((unsigned int)ah->ah_capabilities.cap_queues.q_tx_num > 5U) {
    bool tmp_8;
    bool tmp_11;
    bool tmp_14;
    bool tmp_17;
    
#line 3038 
    txq = ath5k_txq_setup(ah,1,3);
    
#line 3039 
    tmp_8 = IS_ERR((void const *)txq);
    
#line 3039 
    if ((int)tmp_8 != 0) {
      int tmp_6;
      long tmp_7;
      
#line 3040 
      tmp_6 = net_ratelimit();
      
#line 3040 
      if (tmp_6 != 0) 
#line 3040 
                      _ath5k_printk((struct ath5k_hw const *)ah,"\001","can\'t setup xmit queue\n"); else ;
      
#line 3041 
      tmp_7 = PTR_ERR((void const *)txq);
      
#line 3041 
      ret = (int)tmp_7;
      
#line 3042 
      goto err_queues;
    }
    else ;
    
#line 3044 
    txq = ath5k_txq_setup(ah,1,2);
    
#line 3045 
    tmp_11 = IS_ERR((void const *)txq);
    
#line 3045 
    if ((int)tmp_11 != 0) {
      int tmp_9;
      long tmp_10;
      
#line 3046 
      tmp_9 = net_ratelimit();
      
#line 3046 
      if (tmp_9 != 0) 
#line 3046 
                      _ath5k_printk((struct ath5k_hw const *)ah,"\001","can\'t setup xmit queue\n"); else ;
      
#line 3047 
      tmp_10 = PTR_ERR((void const *)txq);
      
#line 3047 
      ret = (int)tmp_10;
      
#line 3048 
      goto err_queues;
    }
    else ;
    
#line 3050 
    txq = ath5k_txq_setup(ah,1,1);
    
#line 3051 
    tmp_14 = IS_ERR((void const *)txq);
    
#line 3051 
    if ((int)tmp_14 != 0) {
      int tmp_12;
      long tmp_13;
      
#line 3052 
      tmp_12 = net_ratelimit();
      
#line 3052 
      if (tmp_12 != 0) 
#line 3052 
                       _ath5k_printk((struct ath5k_hw const *)ah,"\001","can\'t setup xmit queue\n"); else ;
      
#line 3053 
      tmp_13 = PTR_ERR((void const *)txq);
      
#line 3053 
      ret = (int)tmp_13;
      
#line 3054 
      goto err_queues;
    }
    else ;
    
#line 3056 
    txq = ath5k_txq_setup(ah,1,0);
    
#line 3057 
    tmp_17 = IS_ERR((void const *)txq);
    
#line 3057 
    if ((int)tmp_17 != 0) {
      int tmp_15;
      long tmp_16;
      
#line 3058 
      tmp_15 = net_ratelimit();
      
#line 3058 
      if (tmp_15 != 0) 
#line 3058 
                       _ath5k_printk((struct ath5k_hw const *)ah,"\001","can\'t setup xmit queue\n"); else ;
      
#line 3059 
      tmp_16 = PTR_ERR((void const *)txq);
      
#line 3059 
      ret = (int)tmp_16;
      
#line 3060 
      goto err_queues;
    }
    else ;
    
#line 3062 
    hw->queues = (unsigned short)4U;
  }
  else {
    bool tmp_20;
    
#line 3065 
    txq = ath5k_txq_setup(ah,1,1);
    
#line 3066 
    tmp_20 = IS_ERR((void const *)txq);
    
#line 3066 
    if ((int)tmp_20 != 0) {
      int tmp_18;
      long tmp_19;
      
#line 3067 
      tmp_18 = net_ratelimit();
      
#line 3067 
      if (tmp_18 != 0) 
#line 3067 
                       _ath5k_printk((struct ath5k_hw const *)ah,"\001","can\'t setup xmit queue\n"); else ;
      
#line 3068 
      tmp_19 = PTR_ERR((void const *)txq);
      
#line 3068 
      ret = (int)tmp_19;
      
#line 3069 
      goto err_queues;
    }
    else ;
    
#line 3071 
    hw->queues = (unsigned short)1U;
  }
  
#line 3074 
  ldv_tasklet_init_118(& ah->rxtq,& ath5k_tasklet_rx,(unsigned long)ah);
  
#line 3075 
  ldv_tasklet_init_119(& ah->txtq,& ath5k_tasklet_tx,(unsigned long)ah);
  
#line 3076 
  ldv_tasklet_init_120(& ah->beacontq,& ath5k_tasklet_beacon,(unsigned long)ah);
  
#line 3077 
  ldv_tasklet_init_121(& ah->ani_tasklet,& ath5k_tasklet_ani,(unsigned long)ah);
  {
    struct lock_class_key __key;
    
#line 3079 
    __init_work(& ah->reset_work,0);
    
#line 3079 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 3079 
    ah->reset_work.data = __constr_expr_37;
    
#line 3079 
    lockdep_init_map(& ah->reset_work.lockdep_map,"(&ah->reset_work)",& __key,0);
    
#line 3079 
    INIT_LIST_HEAD(& ah->reset_work.entry);
    
#line 3079 
    ah->reset_work.func = & ath5k_reset_work;
  }
  {
    struct lock_class_key __key_0;
    
#line 3080 
    __init_work(& ah->calib_work,0);
    
#line 3080 
    atomic_long_t __constr_expr_38 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 3080 
    ah->calib_work.data = __constr_expr_38;
    
#line 3080 
    lockdep_init_map(& ah->calib_work.lockdep_map,"(&ah->calib_work)",& __key_0,0);
    
#line 3080 
    INIT_LIST_HEAD(& ah->calib_work.entry);
    
#line 3080 
    ah->calib_work.func = & ath5k_calibrate_work;
  }
  {
    struct lock_class_key __key_1;
    
#line 3081 
    __init_work(& ah->tx_complete_work.work,0);
    
#line 3081 
    atomic_long_t __constr_expr_39 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 3081 
    ah->tx_complete_work.work.data = __constr_expr_39;
    
#line 3081 
    lockdep_init_map(& ah->tx_complete_work.work.lockdep_map,"(&(&ah->tx_complete_work)->work)",& __key_1,0);
    
#line 3081 
    INIT_LIST_HEAD(& ah->tx_complete_work.work.entry);
    
#line 3081 
    ah->tx_complete_work.work.func = & ath5k_tx_complete_poll_work;
  }
  {
    struct lock_class_key __key_2;
    
#line 3081 
    init_timer_key(& ah->tx_complete_work.timer,2097152U,"(&(&ah->tx_complete_work)->timer)",& __key_2);
  }
  
#line 3081 
  ah->tx_complete_work.timer.function = & delayed_work_timer_fn;
  
#line 3081 
  ah->tx_complete_work.timer.data = (unsigned long)(& ah->tx_complete_work);
  
#line 3083 
  tmp_21 = ath5k_hw_common(ah);
  
#line 3083 
  ret = (*((tmp_21->bus_ops)->eeprom_read_mac))(ah,(u8 *)(& mac));
  
#line 3084 
  if (ret != 0) {
    int tmp_22;
    
#line 3085 
    tmp_22 = net_ratelimit();
    
#line 3085 
    if (tmp_22 != 0) 
#line 3085 
                     _ath5k_printk((struct ath5k_hw const *)ah,"\001","unable to read address from EEPROM\n"); else ;
    
#line 3086 
    goto err_queues;
  }
  else ;
  
#line 3089 
  SET_IEEE80211_PERM_ADDR(hw,(u8 *)(& mac));
  
#line 3091 
  ath5k_update_bssid_mask_and_opmode(ah,(struct ieee80211_vif *)0);
  
#line 3093 
  regulatory->current_rd = ah->ah_capabilities.cap_eeprom.ee_regdomain;
  
#line 3094 
  ret = ath_regd_init(regulatory,hw->wiphy,& ath5k_reg_notifier);
  
#line 3095 
  if (ret != 0) {
    int tmp_23;
    
#line 3096 
    tmp_23 = net_ratelimit();
    
#line 3096 
    if (tmp_23 != 0) 
#line 3096 
                     _ath5k_printk((struct ath5k_hw const *)ah,"\001","can\'t initialize regulatory system\n"); else ;
    
#line 3097 
    goto err_queues;
  }
  else ;
  
#line 3100 
  ret = ieee80211_register_hw(hw);
  
#line 3101 
  if (ret != 0) {
    int tmp_24;
    
#line 3102 
    tmp_24 = net_ratelimit();
    
#line 3102 
    if (tmp_24 != 0) 
#line 3102 
                     _ath5k_printk((struct ath5k_hw const *)ah,"\001","can\'t register ieee80211 hw\n"); else ;
    
#line 3103 
    goto err_queues;
  }
  else ;
  
#line 3106 
  tmp_25 = ath_is_world_regd(regulatory);
  
#line 3106 
  if (tmp_25) 
#line 3106 
              tmp_26 = 0; else 
#line 3106 
                               tmp_26 = 1;
  
#line 3106 
  if (tmp_26) 
#line 3107 
              regulatory_hint(hw->wiphy,(char const *)(& regulatory->alpha2)); else ;
  
#line 3109 
  ath5k_init_leds(ah);
  
#line 3111 
  ath5k_sysfs_register(ah);
  
#line 3113 
  __retres = 0;
  
#line 3113 
  goto return_label;
  err_queues: 
#line 3114 
  ;
  
#line 3115 
  ath5k_txq_release(ah);
  err_bhal: 
#line 3116 
  ;
  
#line 3117 
  ath5k_hw_release_tx_queue(ah,ah->bhalq);
  err_desc: 
#line 3118 
  ;
  
#line 3119 
  ath5k_desc_free(ah);
  err: 
#line 3120 
  ;
  
#line 3121 
  __retres = ret;
  return_label: 
#line 3121 
                return __retres;
}


#line 3125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
void ath5k_deinit_ah(struct ath5k_hw *ah)
{
  
#line 3127 
  struct ieee80211_hw *hw = ah->hw;
  
#line 3142 
  ieee80211_unregister_hw(hw);
  
#line 3143 
  ath5k_desc_free(ah);
  
#line 3144 
  ath5k_txq_release(ah);
  
#line 3145 
  ath5k_hw_release_tx_queue(ah,ah->bhalq);
  
#line 3146 
  ath5k_unregister_leds(ah);
  
#line 3148 
  ath5k_sysfs_unregister(ah);
  
#line 3154 
  ath5k_hw_deinit(ah);
  
#line 3155 
  ldv_free_irq_122((unsigned int)ah->irq,(void *)ah);
  
#line 3156 
  return;
}


#line 3159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
bool ath5k_any_vif_assoc(struct ath5k_hw *ah)
{
  bool __retres;
  struct ath5k_vif_iter_data iter_data;
  
#line 3162 
  iter_data.hw_macaddr = (u8 const *)0U;
  
#line 3163 
  iter_data.any_assoc = (_Bool)0;
  
#line 3164 
  iter_data.need_set_hw_addr = (_Bool)0;
  
#line 3165 
  iter_data.found_active = (_Bool)1;
  
#line 3167 
  ieee80211_iterate_active_interfaces_atomic(ah->hw,1U,& ath5k_vif_iter,(void *)(& iter_data));
  
#line 3170 
  __retres = iter_data.any_assoc;
  
#line 3170 
  return __retres;
}


#line 3174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
void ath5k_set_beacon_filter(struct ieee80211_hw *hw, bool enable)
{
  u32 rfilt;
  
#line 3176 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 3178 
  rfilt = ath5k_hw_get_rx_filter(ah);
  
#line 3179 
  if ((int)enable != 0) 
#line 3180 
                        rfilt |= 16U; else 
#line 3182 
                                           rfilt &= 4294967279U;
  
#line 3183 
  ath5k_hw_set_rx_filter(ah,rfilt);
  
#line 3184 
  ah->filter_flags = rfilt;
  
#line 3185 
  return;
}


#line 3187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/base.c"
void _ath5k_printk(struct ath5k_hw const *ah, char const *level, char const *fmt , ...)
{
  struct va_format vaf;
  va_list args;
  
#line 3193 
  __builtin_va_start((__builtin_va_list)((__va_list_tag *)(& args)));
  
#line 3195 
  vaf.fmt = fmt;
  
#line 3196 
  vaf.va = & args;
  
#line 3198 
  if (ah != (struct ath5k_hw const *)0 && ah->hw != (struct ieee80211_hw *)0) {
    char const *tmp;
    
#line 3199 
    tmp = wiphy_name((struct wiphy const *)(ah->hw)->wiphy);
    
#line 3199 
    ;
    
#line 3199 
    printk("%s",level,tmp,& vaf);
  }
  else 
#line 3202 
       printk("%s",level,& vaf);
  
#line 3204 
  __builtin_va_end((__builtin_va_list)((__va_list_tag *)(& args)));
  
#line 3205 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
void (*ldv_emg_alias_None_2)(unsigned long ) = & ath5k_tasklet_beacon;

#line 59 
void ldv_emg_tasklet_init(struct tasklet_struct *arg0, void (*arg1)(unsigned long ), unsigned long arg2);


#line 61 
void ldv_emg_tasklet_hi_schedule(struct tasklet_struct *arg0);


#line 62 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 63 
void ldv_emg_tasklet_schedule(struct tasklet_struct *arg0);


#line 67 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
enum irqreturn ldv_emg_wrapper_ath5k_intr_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 72 
  tmp = ath5k_intr(arg0,arg1);
  
#line 72 
  return tmp;
}


#line 77  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void *ERR_PTR(long error)
{
  void *tmp;
  
#line 80 
  tmp = ldv_err_ptr(error);
  
#line 80 
  return tmp;
}


#line 84  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static long PTR_ERR(void const *ptr)
{
  long tmp;
  
#line 87 
  tmp = ldv_ptr_err(ptr);
  
#line 87 
  return tmp;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static bool IS_ERR(void const *ptr)
{
  bool __retres;
  long ret;
  
#line 95 
  ret = ldv_is_err(ptr);
  
#line 96 
  __retres = (_Bool)(ret != 0L);
  
#line 96 
  return __retres;
}


#line 600  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void *kcalloc_0(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 603 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 603 
  return tmp;
}


#line 747  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_lock_bh_72(spinlock_t *lock)
{
  
#line 751 
  ldv_spin_model_lock((char *)"lock_of_ath5k_txq");
  
#line 753 
  spin_lock_bh(lock);
  
#line 754 
  return;
}


#line 757  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_unlock_bh_73(spinlock_t *lock)
{
  
#line 761 
  ldv_spin_model_unlock((char *)"lock_of_ath5k_txq");
  
#line 763 
  spin_unlock_bh(lock);
  
#line 764 
  return;
}


#line 767  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_lock_bh_74(spinlock_t *lock)
{
  
#line 771 
  ldv_spin_model_lock((char *)"lock_of_ath5k_txq");
  
#line 773 
  spin_lock_bh(lock);
  
#line 774 
  return;
}


#line 777  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_lock_75(spinlock_t *lock)
{
  
#line 781 
  ldv_spin_model_lock((char *)"txbuflock_of_ath5k_hw");
  
#line 783 
  spin_lock(lock);
  
#line 784 
  return;
}


#line 787  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_unlock_76(spinlock_t *lock)
{
  
#line 791 
  ldv_spin_model_unlock((char *)"txbuflock_of_ath5k_hw");
  
#line 793 
  spin_unlock(lock);
  
#line 794 
  return;
}


#line 797  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_unlock_bh_77(spinlock_t *lock)
{
  
#line 801 
  ldv_spin_model_unlock((char *)"lock_of_ath5k_txq");
  
#line 803 
  spin_unlock_bh(lock);
  
#line 804 
  return;
}


#line 807  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_lock_bh_78(spinlock_t *lock)
{
  
#line 811 
  ldv_spin_model_lock((char *)"rxbuflock_of_ath5k_hw");
  
#line 813 
  spin_lock_bh(lock);
  
#line 814 
  return;
}


#line 817  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_unlock_bh_79(spinlock_t *lock)
{
  
#line 821 
  ldv_spin_model_unlock((char *)"rxbuflock_of_ath5k_hw");
  
#line 823 
  spin_unlock_bh(lock);
  
#line 824 
  return;
}


#line 827  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_unlock_bh_80(spinlock_t *lock)
{
  
#line 831 
  ldv_spin_model_unlock((char *)"rxbuflock_of_ath5k_hw");
  
#line 833 
  spin_unlock_bh(lock);
  
#line 834 
  return;
}


#line 837  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv___ldv_spin_lock_81(spinlock_t *ldv_func_arg1)
{
  
#line 841 
  ldv_spin_model_lock((char *)"irqlock_of_ath5k_hw");
  
#line 843 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 844 
  return;
}


#line 847  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_unlock_irqrestore_82(spinlock_t *lock, unsigned long flags)
{
  
#line 851 
  ldv_spin_model_unlock((char *)"irqlock_of_ath5k_hw");
  
#line 853 
  spin_unlock_irqrestore(lock,flags);
  
#line 854 
  return;
}


#line 857  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_lock_83(spinlock_t *lock)
{
  
#line 861 
  ldv_spin_model_lock((char *)"rxbuflock_of_ath5k_hw");
  
#line 863 
  spin_lock(lock);
  
#line 864 
  return;
}


#line 867  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_unlock_84(spinlock_t *lock)
{
  
#line 871 
  ldv_spin_model_unlock((char *)"rxbuflock_of_ath5k_hw");
  
#line 873 
  spin_unlock(lock);
  
#line 874 
  return;
}


#line 877  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv___ldv_spin_lock_85(spinlock_t *ldv_func_arg1)
{
  
#line 881 
  ldv_spin_model_lock((char *)"txbuflock_of_ath5k_hw");
  
#line 883 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 884 
  return;
}


#line 887  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_unlock_irqrestore_86(spinlock_t *lock, unsigned long flags)
{
  
#line 891 
  ldv_spin_model_unlock((char *)"txbuflock_of_ath5k_hw");
  
#line 893 
  spin_unlock_irqrestore(lock,flags);
  
#line 894 
  return;
}


#line 897  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_unlock_irqrestore_87(spinlock_t *lock, unsigned long flags)
{
  
#line 901 
  ldv_spin_model_unlock((char *)"txbuflock_of_ath5k_hw");
  
#line 903 
  spin_unlock_irqrestore(lock,flags);
  
#line 904 
  return;
}


#line 907  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv___ldv_spin_lock_88(spinlock_t *ldv_func_arg1)
{
  
#line 911 
  ldv_spin_model_lock((char *)"txbuflock_of_ath5k_hw");
  
#line 913 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 914 
  return;
}


#line 917  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_unlock_irqrestore_89(spinlock_t *lock, unsigned long flags)
{
  
#line 921 
  ldv_spin_model_unlock((char *)"txbuflock_of_ath5k_hw");
  
#line 923 
  spin_unlock_irqrestore(lock,flags);
  
#line 924 
  return;
}


#line 927  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_lock_90(spinlock_t *lock)
{
  
#line 931 
  ldv_spin_model_lock((char *)"lock_of_ath5k_txq");
  
#line 933 
  spin_lock(lock);
  
#line 934 
  return;
}


#line 937  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_lock_91(spinlock_t *lock)
{
  
#line 941 
  ldv_spin_model_lock((char *)"txbuflock_of_ath5k_hw");
  
#line 943 
  spin_lock(lock);
  
#line 944 
  return;
}


#line 947  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_unlock_92(spinlock_t *lock)
{
  
#line 951 
  ldv_spin_model_unlock((char *)"txbuflock_of_ath5k_hw");
  
#line 953 
  spin_unlock(lock);
  
#line 954 
  return;
}


#line 957  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_unlock_93(spinlock_t *lock)
{
  
#line 961 
  ldv_spin_model_unlock((char *)"lock_of_ath5k_txq");
  
#line 963 
  spin_unlock(lock);
  
#line 964 
  return;
}


#line 967  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_lock_bh_94(spinlock_t *lock)
{
  
#line 971 
  ldv_spin_model_lock((char *)"block_of_ath5k_hw");
  
#line 973 
  spin_lock_bh(lock);
  
#line 974 
  return;
}


#line 977  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_unlock_bh_95(spinlock_t *lock)
{
  
#line 981 
  ldv_spin_model_unlock((char *)"block_of_ath5k_hw");
  
#line 983 
  spin_unlock_bh(lock);
  
#line 984 
  return;
}


#line 987  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_lock_96(spinlock_t *lock)
{
  
#line 991 
  ldv_spin_model_lock((char *)"block_of_ath5k_hw");
  
#line 993 
  spin_lock(lock);
  
#line 994 
  return;
}


#line 997  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_unlock_97(spinlock_t *lock)
{
  
#line 1001 
  ldv_spin_model_unlock((char *)"block_of_ath5k_hw");
  
#line 1003 
  spin_unlock(lock);
  
#line 1004 
  return;
}


#line 1007  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_tasklet_schedule_98(struct tasklet_struct *t)
{
  
#line 1011 
  ldv_emg_tasklet_schedule(t);
  
#line 1012 
  return;
}


#line 1015  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_tasklet_schedule_99(struct tasklet_struct *t)
{
  
#line 1019 
  ldv_emg_tasklet_schedule(t);
  
#line 1020 
  return;
}


#line 1023  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_tasklet_schedule_100(struct tasklet_struct *t)
{
  
#line 1027 
  ldv_emg_tasklet_schedule(t);
  
#line 1028 
  return;
}


#line 1031  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_tasklet_hi_schedule_101(struct tasklet_struct *t)
{
  
#line 1035 
  ldv_emg_tasklet_hi_schedule(t);
  
#line 1036 
  return;
}


#line 1039  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_tasklet_schedule_102(struct tasklet_struct *t)
{
  
#line 1043 
  ldv_emg_tasklet_schedule(t);
  
#line 1044 
  return;
}


#line 1047  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_mutex_lock_103(struct mutex *ldv_func_arg1)
{
  
#line 1051 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_ath5k_hw");
  
#line 1052 
  return;
}


#line 1055  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_lock_bh_104(spinlock_t *lock)
{
  
#line 1059 
  ldv_spin_model_lock((char *)"lock_of_ath5k_txq");
  
#line 1061 
  spin_lock_bh(lock);
  
#line 1062 
  return;
}


#line 1065  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_unlock_bh_105(spinlock_t *lock)
{
  
#line 1069 
  ldv_spin_model_unlock((char *)"lock_of_ath5k_txq");
  
#line 1071 
  spin_unlock_bh(lock);
  
#line 1072 
  return;
}


#line 1075  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_unlock_bh_106(spinlock_t *lock)
{
  
#line 1079 
  ldv_spin_model_unlock((char *)"lock_of_ath5k_txq");
  
#line 1081 
  spin_unlock_bh(lock);
  
#line 1082 
  return;
}


#line 1085  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_mutex_unlock_107(struct mutex *ldv_func_arg1)
{
  
#line 1089 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_ath5k_hw");
  
#line 1090 
  return;
}


#line 1093  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static int ldv_request_irq_108(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1097 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1097 
  return tmp;
}


#line 1101  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_free_irq_109(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1105 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1106 
  return;
}


#line 1109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_mutex_lock_110(struct mutex *ldv_func_arg1)
{
  
#line 1113 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_ath5k_hw");
  
#line 1114 
  return;
}


#line 1117  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_mutex_unlock_111(struct mutex *ldv_func_arg1)
{
  
#line 1121 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_ath5k_hw");
  
#line 1122 
  return;
}


#line 1125  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_mutex_lock_112(struct mutex *ldv_func_arg1)
{
  
#line 1129 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_ath5k_hw");
  
#line 1130 
  return;
}


#line 1133  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_mutex_unlock_113(struct mutex *ldv_func_arg1)
{
  
#line 1137 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_ath5k_hw");
  
#line 1138 
  return;
}


#line 1141  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_lock_bh_114(spinlock_t *lock)
{
  
#line 1145 
  ldv_spin_model_lock((char *)"cc_lock_of_ath_common");
  
#line 1147 
  spin_lock_bh(lock);
  
#line 1148 
  return;
}


#line 1151  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_spin_unlock_bh_115(spinlock_t *lock)
{
  
#line 1155 
  ldv_spin_model_unlock((char *)"cc_lock_of_ath_common");
  
#line 1157 
  spin_unlock_bh(lock);
  
#line 1158 
  return;
}


#line 1161  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_mutex_lock_116(struct mutex *ldv_func_arg1)
{
  
#line 1165 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_ath5k_hw");
  
#line 1166 
  return;
}


#line 1169  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_mutex_unlock_117(struct mutex *ldv_func_arg1)
{
  
#line 1173 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_ath5k_hw");
  
#line 1174 
  return;
}


#line 1177  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_tasklet_init_118(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3)
{
  
#line 1181 
  ldv_emg_tasklet_init(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1182 
  return;
}


#line 1185  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_tasklet_init_119(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3)
{
  
#line 1189 
  ldv_emg_tasklet_init(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1190 
  return;
}


#line 1193  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_tasklet_init_120(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3)
{
  
#line 1197 
  ldv_emg_tasklet_init(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1198 
  return;
}


#line 1201  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_tasklet_init_121(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3)
{
  
#line 1205 
  ldv_emg_tasklet_init(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1206 
  return;
}


#line 1209  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_base.c.aux"
static void ldv_free_irq_122(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1213 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1214 
  return;
}


#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/byteorder/little_endian.h"
__inline static __u32 __le32_to_cpup(__le32 const *p)
{
  __u32 __retres;
  
#line 57 
  __retres = *p;
  
#line 57 
  return __retres;
}


#line 355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh_0(spinlock_t *lock)
{
  
#line 357 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 358 
  return;
}


#line 383 
static void ldv_spin_lock_bh_79(spinlock_t *lock);


#line 387 
static void ldv_spin_lock_bh_88(spinlock_t *lock);


#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh_0(spinlock_t *lock)
{
  
#line 406 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 407 
  return;
}


#line 432 
static void ldv_spin_unlock_bh_80_0(spinlock_t *lock);


#line 436 
static void ldv_spin_unlock_bh_89(spinlock_t *lock);


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
static void ldv_mutex_lock_72(struct mutex *ldv_func_arg1);


#line 41 
static void ldv_mutex_lock_74(struct mutex *ldv_func_arg1);


#line 45 
static void ldv_mutex_lock_76(struct mutex *ldv_func_arg1);


#line 49 
static void ldv_mutex_lock_78(struct mutex *ldv_func_arg1);


#line 53 
static void ldv_mutex_lock_82(struct mutex *ldv_func_arg1);


#line 57 
static void ldv_mutex_lock_84(struct mutex *ldv_func_arg1);


#line 61 
static void ldv_mutex_lock_86(struct mutex *ldv_func_arg1);


#line 65 
static void ldv_mutex_lock_90(struct mutex *ldv_func_arg1);


#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
static void ldv_mutex_unlock_73(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_unlock_75(struct mutex *ldv_func_arg1);


#line 201 
static void ldv_mutex_unlock_77(struct mutex *ldv_func_arg1);


#line 205 
static void ldv_mutex_unlock_81(struct mutex *ldv_func_arg1);


#line 209 
static void ldv_mutex_unlock_83(struct mutex *ldv_func_arg1);


#line 213 
static void ldv_mutex_unlock_85(struct mutex *ldv_func_arg1);


#line 217 
static void ldv_mutex_unlock_87(struct mutex *ldv_func_arg1);


#line 221 
static void ldv_mutex_unlock_91(struct mutex *ldv_func_arg1);


#line 3295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static u16 skb_get_queue_mapping(struct sk_buff const *skb)
{
  u16 __retres;
  
#line 3297 
  __retres = skb->queue_mapping;
  
#line 3297 
  return __retres;
}


#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/unaligned/access_ok.h"
__inline static u32 get_unaligned_le32(void const *p)
{
  u32 tmp;
  
#line 14 
  tmp = __le32_to_cpup((__le32 const *)p);
  
#line 14 
  return tmp;
}


#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath.h"
void ath_key_delete(struct ath_common *, struct ieee80211_key_conf *);


#line 203 
int ath_key_config(struct ath_common *, struct ieee80211_vif *, struct ieee80211_sta *, struct ieee80211_key_conf *);


#line 1535  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
unsigned int ath5k_hw_get_default_slottime(struct ath5k_hw *ah);


#line 1538 
void ath5k_hw_set_coverage_class(struct ath5k_hw *ah, u8 coverage_class);


#line 1541 
void ath5k_hw_set_bssid(struct ath5k_hw *ah);


#line 1543 
void ath5k_hw_set_mcast_filter(struct ath5k_hw *ah, u32 filter0, u32 filter1);


#line 1551 
void ath5k_hw_set_tsf64(struct ath5k_hw *ah, u64 tsf64);


#line 1552 
void ath5k_hw_reset_tsf(struct ath5k_hw *ah);


#line 1567 
void ath5k_hw_set_tx_retry_limits(struct ath5k_hw *ah, unsigned int queue);


#line 1572 
int ath5k_hw_set_ifs_intervals(struct ath5k_hw *ah, unsigned int slot_time);


#line 1628 
void ath5k_hw_set_antenna_mode(struct ath5k_hw *ah, u8 ant_mode);


#line 1631 
int ath5k_hw_set_txpower_limit(struct ath5k_hw *ah, u8 txpower);


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/mac80211-ops.c"
static void ath5k_tx(struct ieee80211_hw *hw, struct ieee80211_tx_control *control, struct sk_buff *skb)
{
  int tmp_0;
  
#line 61 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 62 
  u16 qnum = skb_get_queue_mapping((struct sk_buff const *)skb);
  {
    
#line 64 
    int __ret_warn_on = (int)((unsigned short)ah->ah_capabilities.cap_queues.q_tx_num) <= (int)qnum;
    
#line 64 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 64 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/mac80211-ops.c",64); else ;
    
#line 64 
    tmp_0 = (long)(__ret_warn_on != 0);
  }
  
#line 64 
  if ((long)tmp_0 != 0L) {
    
#line 65 
    ieee80211_free_txskb(hw,skb);
    
#line 66 
    goto return_label;
  }
  else ;
  
#line 69 
  ath5k_tx_queue(hw,skb,& ah->txqs[(int)qnum],control);
  return_label: 
#line 70 
                return;
}


#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/mac80211-ops.c"
static int ath5k_add_interface(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  int ret;
  
#line 76 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 78 
  struct ath5k_vif *avf = (struct ath5k_vif *)(& vif->drv_priv);
  
#line 80 
  ldv_mutex_lock_72(& ah->lock);
  
#line 82 
  if ((vif->type == (unsigned int)NL80211_IFTYPE_AP || vif->type == (unsigned int)NL80211_IFTYPE_ADHOC) && (int)ah->num_ap_vifs + (int)ah->num_adhoc_vifs > 3) {
    
#line 85 
    ret = -48;
    
#line 86 
    goto end;
  }
  else ;
  
#line 94 
  if ((unsigned int)ah->num_adhoc_vifs != 0U || ((unsigned int)ah->nvifs != 0U && vif->type == (unsigned int)NL80211_IFTYPE_ADHOC)) {
    int tmp;
    
#line 96 
    tmp = net_ratelimit();
    
#line 96 
    if (tmp != 0) 
#line 96 
                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","Only one single ad-hoc interface is allowed.\n"); else ;
    
#line 97 
    ret = -48;
    
#line 98 
    goto end;
  }
  else ;
  
#line 101 
  switch ((unsigned int)vif->type) {
    case (unsigned int)3: 
#line 102 
    ;
    case (unsigned int)2: 
#line 103 
    ;
    case (unsigned int)1: 
#line 104 
    ;
    case (unsigned int)7: 
#line 105 
    ;
    
#line 106 
    avf->opmode = vif->type;
    
#line 107 
    goto ldv_50583;
    default: 
#line 108 
    ;
    
#line 109 
    ret = -95;
    
#line 110 
    goto end;
  }
  ldv_50583: 
#line 113 
  ;
  
#line 113 
  ah->nvifs = (u16)((int)ah->nvifs + 1);
  
#line 114 
  if ((long)((ah->debug.level & 4U) != 0U) != 0L) {
    int tmp_0;
    
#line 114 
    tmp_0 = net_ratelimit();
    
#line 114 
    if ((long)(tmp_0 != 0) != 0L) 
#line 114 
                                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_add_interface",114,(unsigned int)avf->opmode); else ;
  }
  else ;
  
#line 117 
  if ((avf->opmode == (unsigned int)NL80211_IFTYPE_AP || avf->opmode == (unsigned int)NL80211_IFTYPE_ADHOC) || avf->opmode == (unsigned int)NL80211_IFTYPE_MESH_POINT) {
    int slot;
    struct ath5k_buf *tmp_2_0;
    {
      int tmp_1;
      
#line 122 
      tmp_1 = list_empty((struct list_head const *)(& ah->bcbuf));
      
#line 122 
      int __ret_warn_on = tmp_1 != 0;
      
#line 122 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 122 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/mac80211-ops.c",122); else ;
      
#line 122 
      long tmp_2 = (long)(__ret_warn_on != 0);
    }
    {
      
#line 123 
      struct list_head const *__mptr = (struct list_head const *)ah->bcbuf.next;
      
#line 123 
      tmp_2_0 = (struct ath5k_buf *)__mptr;
    }
    
#line 123 
    avf->bbuf = tmp_2_0;
    
#line 125 
    list_del(& (avf->bbuf)->list);
    
#line 127 
    avf->bslot = 0;
    
#line 128 
    slot = 0;
    
#line 128 
    goto ldv_50593;
    ldv_50592: 
#line 129 
    ;
    
#line 129 
    if (ah->bslot[slot] == (struct ieee80211_vif *)0) {
      
#line 130 
      avf->bslot = slot;
      
#line 131 
      goto ldv_50591;
    }
    else ;
    
#line 128 
    slot += 1;
    ldv_50593: 
#line 129 
    ;
    
#line 128 
    if (slot <= 3) 
#line 130 
                   goto ldv_50592; else 
#line 133 
                                        goto ldv_50591;
    ldv_50591: 
#line 134 
    ;
    
#line 134 
    if ((long)(ah->bslot[avf->bslot] != (struct ieee80211_vif *)0) != 0L) {
      
#line 136 
      ldv_inline_asm();
      
#line 134 
      ;
    }
    else ;
    
#line 135 
    ah->bslot[avf->bslot] = vif;
    
#line 136 
    if (avf->opmode == (unsigned int)NL80211_IFTYPE_AP) 
#line 137 
                                                        ah->num_ap_vifs = (u16)((int)ah->num_ap_vifs + 1);
    else 
      
#line 138 
      if (avf->opmode == (unsigned int)NL80211_IFTYPE_ADHOC) 
#line 139 
                                                             ah->num_adhoc_vifs = (u16)((int)ah->num_adhoc_vifs + 1);
      else 
        
#line 140 
        if (avf->opmode == (unsigned int)NL80211_IFTYPE_MESH_POINT) 
#line 141 
                                                                    ah->num_mesh_vifs = (u16)((int)ah->num_mesh_vifs + 1); else ;
  }
  else ;
  
#line 147 
  ath5k_hw_set_lladdr(ah,(u8 const *)(& vif->addr));
  
#line 149 
  ath5k_update_bssid_mask_and_opmode(ah,vif);
  
#line 150 
  ret = 0;
  end: 
#line 151 
  ;
  
#line 152 
  ldv_mutex_unlock_73(& ah->lock);
  
#line 153 
  return ret;
}


#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/mac80211-ops.c"
static void ath5k_remove_interface(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  unsigned int i;
  
#line 161 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 162 
  struct ath5k_vif *avf = (struct ath5k_vif *)(& vif->drv_priv);
  
#line 165 
  ldv_mutex_lock_74(& ah->lock);
  
#line 166 
  ah->nvifs = (u16)((int)ah->nvifs - 1);
  
#line 168 
  if (avf->bbuf != (struct ath5k_buf *)0) {
    
#line 169 
    ath5k_txbuf_free_skb(ah,avf->bbuf);
    
#line 170 
    list_add_tail(& (avf->bbuf)->list,& ah->bcbuf);
    
#line 171 
    i = 0U;
    
#line 171 
    goto ldv_50603;
    ldv_50602: 
#line 172 
    ;
    
#line 172 
    if (ah->bslot[i] == vif) {
      
#line 173 
      ah->bslot[i] = (struct ieee80211_vif *)0;
      
#line 174 
      goto ldv_50601;
    }
    else ;
    
#line 171 
    i += 1U;
    ldv_50603: 
#line 172 
    ;
    
#line 171 
    if (i <= 3U) 
#line 173 
                 goto ldv_50602; else 
#line 176 
                                      goto ldv_50601;
    ldv_50601: 
#line 177 
    ;
    
#line 177 
    avf->bbuf = (struct ath5k_buf *)0;
  }
  else ;
  
#line 179 
  if (avf->opmode == (unsigned int)NL80211_IFTYPE_AP) 
#line 180 
                                                      ah->num_ap_vifs = (u16)((int)ah->num_ap_vifs - 1);
  else 
    
#line 181 
    if (avf->opmode == (unsigned int)NL80211_IFTYPE_ADHOC) 
#line 182 
                                                           ah->num_adhoc_vifs = (u16)((int)ah->num_adhoc_vifs - 1);
    else 
      
#line 183 
      if (avf->opmode == (unsigned int)NL80211_IFTYPE_MESH_POINT) 
#line 184 
                                                                  ah->num_mesh_vifs = (u16)((int)ah->num_mesh_vifs - 1); else ;
  
#line 186 
  ath5k_update_bssid_mask_and_opmode(ah,(struct ieee80211_vif *)0);
  
#line 187 
  ldv_mutex_unlock_75(& ah->lock);
  
#line 188 
  return;
}


#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/mac80211-ops.c"
static int ath5k_config(struct ieee80211_hw *hw, u32 changed)
{
  int i;
  
#line 197 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 198 
  struct ieee80211_conf *conf = & hw->conf;
  
#line 199 
  int ret = 0;
  
#line 202 
  ldv_mutex_lock_76(& ah->lock);
  
#line 204 
  if ((changed & 64U) != 0U) {
    
#line 205 
    ret = ath5k_chan_set(ah,& conf->chandef);
    
#line 206 
    if (ret < 0) 
#line 207 
                 goto unlock; else ;
  }
  else ;
  
#line 210 
  if ((changed & 32U) != 0U && ah->ah_txpower.txp_requested != conf->power_level) {
    
#line 212 
    ah->ah_txpower.txp_requested = conf->power_level;
    
#line 215 
    ath5k_hw_set_txpower_limit(ah,(unsigned char)((int)((unsigned int)((unsigned char)conf->power_level) * 2U)));
  }
  else ;
  
#line 218 
  if ((changed & 128U) != 0U) {
    
#line 219 
    ah->ah_retry_long = conf->long_frame_max_tx_count;
    
#line 220 
    ah->ah_retry_short = conf->short_frame_max_tx_count;
    
#line 222 
    i = 0;
    
#line 222 
    goto ldv_50614;
    ldv_50613: 
#line 223 
    ;
    
#line 223 
    ath5k_hw_set_tx_retry_limits(ah,(unsigned int)i);
    
#line 222 
    i += 1;
    ldv_50614: 
#line 223 
    ;
    
#line 222 
    if ((int)ah->ah_capabilities.cap_queues.q_tx_num > i) 
#line 224 
                                                          goto ldv_50613; else 
                                                                    
#line 227 
                                                                    goto ldv_50615;
    ldv_50615: 
#line 228 
    ;
  }
  else ;
  
#line 243 
  ath5k_hw_set_antenna_mode(ah,(unsigned char)((int)ah->ah_ant_mode));
  unlock: 
#line 245 
  ;
  
#line 246 
  ldv_mutex_unlock_77(& ah->lock);
  
#line 247 
  return ret;
}


#line 252  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/mac80211-ops.c"
static void ath5k_bss_info_changed(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_bss_conf *bss_conf, u32 changes)
{
  
#line 255 
  struct ath5k_vif *avf = (struct ath5k_vif *)(& vif->drv_priv);
  
#line 256 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 257 
  struct ath_common *common = ath5k_hw_common(ah);
  
#line 259 
  ldv_mutex_lock_78(& ah->lock);
  
#line 261 
  if ((changes & 128U) != 0U) {
    
#line 263 
    memcpy((void *)(& common->curbssid),(void const *)bss_conf->bssid,6UL);
    
#line 264 
    common->curaid = (unsigned short)0U;
    
#line 265 
    ath5k_hw_set_bssid(ah);
    
#line 266 
    ldv_inline_asm();
  }
  else ;
  
#line 269 
  if ((changes & 64U) != 0U) 
#line 270 
                             ah->bintval = (unsigned int)bss_conf->beacon_int; else ;
  
#line 272 
  if ((changes & 8U) != 0U) {
    int slot_time;
    unsigned int tmp_0;
    
#line 275 
    ah->ah_short_slot = bss_conf->use_short_slot;
    
#line 276 
    tmp_0 = ath5k_hw_get_default_slottime(ah);
    
#line 276 
    slot_time = (int)(tmp_0 + (unsigned int)((int)ah->ah_coverage_class * 3));
    
#line 278 
    ath5k_hw_set_ifs_intervals(ah,(unsigned int)slot_time);
  }
  else ;
  
#line 281 
  if ((changes & 1U) != 0U) {
    int tmp_1;
    
#line 282 
    avf->assoc = bss_conf->assoc;
    
#line 283 
    if ((int)bss_conf->assoc != 0) 
#line 284 
                                   ah->assoc = bss_conf->assoc; else 
                                                                  
#line 286 
                                                                  ah->assoc = ath5k_any_vif_assoc(ah);
    
#line 288 
    if (ah->opmode == (unsigned int)NL80211_IFTYPE_STATION) 
#line 289 
                                                            ath5k_set_beacon_filter(hw,(_Bool)((bool)((int)ah->assoc) != 0)); else ;
    
#line 291 
    if ((int)ah->assoc != 0) 
#line 291 
                             tmp_1 = 3; else 
#line 291 
                                             tmp_1 = 0;
    
#line 290 
    ;
    
#line 290 
    ath5k_hw_set_ledstate(ah,(unsigned int)tmp_1);
    
#line 292 
    if ((int)bss_conf->assoc != 0) {
      
#line 293 
      if ((long)(ah->debug.level != 0U) != 0L) {
        int tmp_2;
        
#line 293 
        tmp_2 = net_ratelimit();
        
#line 293 
        if ((long)(tmp_2 != 0) != 0L) 
#line 293 
                                      _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_bss_info_changed",295,(int)bss_conf->aid,(u8 *)(& common->curbssid)); else ;
      }
      else ;
      
#line 296 
      common->curaid = bss_conf->aid;
      
#line 297 
      ath5k_hw_set_bssid(ah);
    }
    else ;
  }
  else ;
  
#line 302 
  if ((changes & 256U) != 0U) {
    
#line 303 
    ldv_spin_lock_bh_79(& ah->block);
    
#line 304 
    ath5k_beacon_update(hw,vif);
    
#line 305 
    ldv_spin_unlock_bh_80_0(& ah->block);
  }
  else ;
  
#line 308 
  if ((changes & 512U) != 0U) 
#line 309 
                              ah->enable_beacon = bss_conf->enable_beacon; else ;
  
#line 311 
  if ((changes & 832U) != 0U) 
#line 313 
                              ath5k_beacon_config(ah); else ;
  
#line 315 
  ldv_mutex_unlock_81(& ah->lock);
  
#line 316 
  return;
}


#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/mac80211-ops.c"
static u64 ath5k_prepare_multicast(struct ieee80211_hw *hw, struct netdev_hw_addr_list *mc_list)
{
  u64 __retres;
  u32 mfilt[2U];
  u32 val;
  u8 pos;
  struct netdev_hw_addr *ha;
  struct netdev_hw_addr *tmp;
  struct netdev_hw_addr *tmp_0;
  
#line 327 
  mfilt[0] = 0U;
  
#line 328 
  mfilt[1] = 0U;
  {
    
#line 330 
    struct list_head const *__mptr = (struct list_head const *)mc_list->list.next;
    
#line 330 
    tmp = (struct netdev_hw_addr *)__mptr;
  }
  
#line 330 
  ha = tmp;
  
#line 330 
  goto ldv_50640;
  ldv_50639: 
#line 331 
  ;
  
#line 332 
  val = get_unaligned_le32((void const *)(& ha->addr));
  
#line 333 
  pos = (unsigned char)((((int)((unsigned char)(val >> 18)) ^ (int)((unsigned char)(val >> 12))) ^ (int)((unsigned char)(val >> 6))) ^ (int)((unsigned char)val));
  
#line 334 
  val = get_unaligned_le32((void const *)(& ha->addr) + 3U);
  
#line 335 
  pos = (unsigned char)(((((int)((unsigned char)(val >> 18)) ^ (int)((unsigned char)(val >> 12))) ^ (int)((unsigned char)(val >> 6))) ^ (int)((unsigned char)val)) ^ (int)pos);
  
#line 336 
  pos = (unsigned char)((unsigned int)pos & 63U);
  
#line 337 
  mfilt[(int)((unsigned int)pos / 32U)] |= (unsigned int)(1 << ((int)pos & 31));
  {
    
#line 330 
    struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
    
#line 330 
    tmp_0 = (struct netdev_hw_addr *)__mptr_0;
  }
  
#line 330 
  ha = tmp_0;
  ldv_50640: 
#line 332 
  ;
  
#line 330 
  if ((void *)ha != (void *)mc_list) 
#line 332 
                                     goto ldv_50639; else 
#line 335 
                                                          goto ldv_50641;
  ldv_50641: 
#line 336 
  ;
  
#line 345 
  __retres = ((unsigned long long)mfilt[1] << 32) | (unsigned long long)mfilt[0];
  
#line 345 
  return __retres;
}


#line 368  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/mac80211-ops.c"
static void ath5k_configure_filter(struct ieee80211_hw *hw, unsigned int changed_flags, unsigned int *new_flags, u64 multicast)
{
  u32 mfilt[2U];
  u32 rfilt;
  struct ath5k_vif_iter_data iter_data;
  u32 tmp;
  int tmp_0;
  
#line 376 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 380 
  ldv_mutex_lock_82(& ah->lock);
  
#line 382 
  mfilt[0] = (unsigned int)multicast;
  
#line 383 
  mfilt[1] = (unsigned int)(multicast >> 32);
  
#line 386 
  changed_flags &= 126U;
  
#line 387 
  *new_flags &= 126U;
  
#line 392 
  tmp = ath5k_hw_get_rx_filter(ah);
  
#line 392 
  if (ah->ah_version == (unsigned int)AR5K_AR5211) 
#line 392 
                                                   tmp_0 = 64; else 
#line 392 
                                                                    tmp_0 = 256;
  
#line 392 
  rfilt = (tmp & (unsigned int)tmp_0) | 7U;
  
#line 397 
  if ((*new_flags & 2U) != 0U) {
    
#line 398 
    mfilt[0] = 4294967295U;
    
#line 399 
    mfilt[1] = 4294967295U;
  }
  else ;
  
#line 403 
  if ((*new_flags & 12U) != 0U) {
    int tmp_1;
    
#line 404 
    if (ah->ah_version == (unsigned int)AR5K_AR5211) 
#line 404 
                                                     tmp_1 = 64; else 
                                                                   
#line 404 
                                                                   tmp_1 = 256;
    
#line 404 
    rfilt = (unsigned int)tmp_1 | rfilt;
  }
  else ;
  
#line 408 
  if ((*new_flags & 16U) != 0U || (unsigned int)ah->nvifs > 1U) 
#line 409 
                                                                rfilt |= 16U; else ;
  
#line 415 
  if ((*new_flags & 32U) != 0U) 
#line 416 
                                rfilt |= 8U; else ;
  
#line 422 
  switch ((unsigned int)ah->opmode) {
    case (unsigned int)7: 
#line 423 
    ;
    
#line 424 
    rfilt |= 184U;
    
#line 428 
    goto ldv_50653;
    case (unsigned int)3: 
#line 429 
    ;
    case (unsigned int)1: 
#line 430 
    ;
    
#line 431 
    rfilt |= 144U;
    
#line 433 
    goto ldv_50653;
    case (unsigned int)2: 
#line 434 
    ;
    
#line 435 
    if ((int)ah->assoc != 0) 
#line 436 
                             rfilt |= 16U; else ;
    default: 
#line 437 
    ;
    
#line 438 
    goto ldv_50653;
  }
  ldv_50653: 
#line 441 
  ;
  
#line 441 
  iter_data.hw_macaddr = (u8 const *)0U;
  
#line 442 
  iter_data.n_stas = 0;
  
#line 443 
  iter_data.need_set_hw_addr = (_Bool)0;
  
#line 444 
  ieee80211_iterate_active_interfaces_atomic(ah->hw,1U,& ath5k_vif_iter,(void *)(& iter_data));
  
#line 449 
  if (iter_data.n_stas > 1) 
#line 454 
                            rfilt |= 32U; else ;
  
#line 458 
  ath5k_hw_set_rx_filter(ah,rfilt);
  
#line 461 
  ath5k_hw_set_mcast_filter(ah,mfilt[0],mfilt[1]);
  
#line 464 
  ah->filter_flags = rfilt;
  
#line 466 
  ah->fif_filter_flags = *new_flags;
  
#line 468 
  ldv_mutex_unlock_83(& ah->lock);
  
#line 469 
  return;
}


#line 473  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/mac80211-ops.c"
static int ath5k_set_key(struct ieee80211_hw *hw, enum set_key_cmd cmd, struct ieee80211_vif *vif, struct ieee80211_sta *sta, struct ieee80211_key_conf *key)
{
  int __retres;
  
#line 477 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 478 
  struct ath_common *common = ath5k_hw_common(ah);
  
#line 479 
  int ret = 0;
  
#line 481 
  if ((int)ath5k_modparam_nohwcrypt != 0) {
    
#line 482 
    __retres = -95;
    
#line 482 
    goto return_label;
  }
  else ;
  
#line 484 
  if (((int)key->flags & 64) != 0) {
    
#line 485 
    __retres = -95;
    
#line 485 
    goto return_label;
  }
  else ;
  
#line 487 
  if ((vif->type == (unsigned int)NL80211_IFTYPE_ADHOC && (key->cipher == 1027074U || key->cipher == 1027076U)) && ((int)key->flags & 8) == 0) {
    
#line 492 
    __retres = -95;
    
#line 492 
    goto return_label;
  }
  else ;
  
#line 495 
  switch (key->cipher) {
    case (u32)1027073: 
#line 496 
    ;
    case (u32)1027077: 
#line 497 
    ;
    case (u32)1027074: 
#line 498 
    ;
    
#line 499 
    goto ldv_50671;
    case (u32)1027076: 
#line 500 
    ;
    
#line 501 
    if (((unsigned int)common->crypt_caps & 1U) != 0U) 
#line 502 
                                                       goto ldv_50671; else ;
    
#line 503 
    __retres = -95;
    
#line 503 
    goto return_label;
    default: 
#line 504 
    ;
    {
      
#line 505 
      int __ret_warn_on = 1;
      
#line 505 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 505 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/mac80211-ops.c",505); else ;
      
#line 505 
      long tmp_2 = (long)(__ret_warn_on != 0);
    }
    
#line 506 
    __retres = -22;
    
#line 506 
    goto return_label;
  }
  ldv_50671: 
#line 509 
  ;
  
#line 509 
  ldv_mutex_lock_84(& ah->lock);
  
#line 511 
  switch ((unsigned int)cmd) {
    case (unsigned int)0: 
#line 512 
    ;
    
#line 513 
    ret = ath_key_config(common,vif,sta,key);
    
#line 514 
    if (ret >= 0) {
      
#line 515 
      key->hw_key_idx = (unsigned char)ret;
      
#line 517 
      key->flags = (unsigned char)((unsigned int)key->flags | 2U);
      
#line 518 
      if (key->cipher == 1027074U) 
#line 519 
                                   key->flags = (unsigned char)((unsigned int)key->flags | 4U); else ;
      
#line 520 
      if (key->cipher == 1027076U) 
#line 521 
                                   key->flags = (unsigned char)((unsigned int)key->flags | 16U); else ;
      
#line 522 
      ret = 0;
    }
    else ;
    
#line 524 
    goto ldv_50677;
    case (unsigned int)1: 
#line 525 
    ;
    
#line 526 
    ath_key_delete(common,key);
    
#line 527 
    goto ldv_50677;
    default: 
#line 528 
    ;
    
#line 529 
    ret = -22;
  }
  ldv_50677: 
#line 532 
  ;
  
#line 533 
  ldv_inline_asm();
  
#line 533 
  ldv_mutex_unlock_85(& ah->lock);
  
#line 534 
  __retres = ret;
  return_label: 
#line 534 
                return __retres;
}


#line 539  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/mac80211-ops.c"
static void ath5k_sw_scan_start(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u8 const *mac_addr)
{
  
#line 543 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 544 
  if (! ah->assoc) 
#line 545 
                   ath5k_hw_set_ledstate(ah,1U); else ;
  
#line 546 
  return;
}


#line 550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/mac80211-ops.c"
static void ath5k_sw_scan_complete(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  int tmp;
  
#line 552 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 554 
  if ((int)ah->assoc != 0) 
#line 554 
                           tmp = 3; else 
#line 554 
                                         tmp = 0;
  
#line 553 
  ;
  
#line 553 
  ath5k_hw_set_ledstate(ah,(unsigned int)tmp);
  
#line 555 
  return;
}


#line 559  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/mac80211-ops.c"
static int ath5k_get_stats(struct ieee80211_hw *hw, struct ieee80211_low_level_stats *stats)
{
  int __retres;
  
#line 562 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 565 
  ath5k_hw_update_mib_counters(ah);
  
#line 567 
  stats->dot11ACKFailureCount = ah->stats.ack_fail;
  
#line 568 
  stats->dot11RTSFailureCount = ah->stats.rts_fail;
  
#line 569 
  stats->dot11RTSSuccessCount = ah->stats.rts_ok;
  
#line 570 
  stats->dot11FCSErrorCount = ah->stats.fcs_error;
  
#line 572 
  __retres = 0;
  
#line 572 
  return __retres;
}


#line 577  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/mac80211-ops.c"
static int ath5k_conf_tx(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u16 queue, struct ieee80211_tx_queue_params const *params)
{
  int __retres;
  struct ath5k_txq_info qi;
  int tmp_1;
  
#line 580 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 582 
  int ret = 0;
  
#line 584 
  if ((int)((unsigned short)ah->ah_capabilities.cap_queues.q_tx_num) <= (int)queue) {
    
#line 585 
    __retres = 0;
    
#line 585 
    goto return_label;
  }
  else ;
  
#line 587 
  ldv_mutex_lock_86(& ah->lock);
  
#line 589 
  ath5k_hw_get_tx_queueprops(ah,(int)queue,& qi);
  
#line 591 
  qi.tqi_aifs = params->aifs;
  
#line 592 
  qi.tqi_cw_min = params->cw_min;
  
#line 593 
  qi.tqi_cw_max = params->cw_max;
  
#line 594 
  qi.tqi_burst_time = (unsigned int)((int)params->txop * 32);
  
#line 596 
  if ((long)(ah->debug.level != 0U) != 0L) {
    int tmp;
    
#line 596 
    tmp = net_ratelimit();
    
#line 596 
    if ((long)(tmp != 0) != 0L) 
#line 596 
                                _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_conf_tx",600,(int)queue,(int)params->aifs,(int)params->cw_min,(int)params->cw_max,(int)params->txop); else ;
  }
  else ;
  
#line 602 
  tmp_1 = ath5k_hw_set_tx_queueprops(ah,(int)queue,(struct ath5k_txq_info const *)(& qi));
  
#line 602 
  if (tmp_1 != 0) {
    int tmp_0;
    
#line 603 
    tmp_0 = net_ratelimit();
    
#line 603 
    if (tmp_0 != 0) 
#line 603 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","Unable to update hardware queue %u!\n",(int)queue); else ;
    
#line 605 
    ret = -5;
  }
  else 
#line 607 
       ath5k_hw_reset_tx_queue(ah,(unsigned int)queue);
  
#line 609 
  ldv_mutex_unlock_87(& ah->lock);
  
#line 611 
  __retres = ret;
  return_label: 
#line 611 
                return __retres;
}


#line 616  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/mac80211-ops.c"
static u64 ath5k_get_tsf(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  u64 tmp;
  
#line 618 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 620 
  tmp = ath5k_hw_get_tsf64(ah);
  
#line 620 
  return tmp;
}


#line 625  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/mac80211-ops.c"
static void ath5k_set_tsf(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u64 tsf)
{
  
#line 627 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 629 
  ath5k_hw_set_tsf64(ah,tsf);
  
#line 630 
  return;
}


#line 634  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/mac80211-ops.c"
static void ath5k_reset_tsf(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  
#line 636 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 642 
  if (ah->opmode == (unsigned int)NL80211_IFTYPE_ADHOC) 
#line 643 
                                                        ath5k_beacon_update_timers(ah,0ULL); else 
                                                                    
#line 645 
                                                                    ath5k_hw_reset_tsf(ah);
  
#line 646 
  return;
}


#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/mac80211-ops.c"
static int ath5k_get_survey(struct ieee80211_hw *hw, int idx, struct survey_info *survey)
{
  int __retres;
  
#line 652 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 653 
  struct ieee80211_conf *conf = & hw->conf;
  
#line 654 
  struct ath_common *common = ath5k_hw_common(ah);
  
#line 655 
  struct ath_cycle_counters *cc = & common->cc_survey;
  
#line 656 
  unsigned int div = common->clockrate * 1000U;
  
#line 658 
  if (idx != 0) {
    
#line 659 
    __retres = -2;
    
#line 659 
    goto return_label;
  }
  else ;
  
#line 661 
  ldv_spin_lock_bh_88(& common->cc_lock);
  
#line 662 
  ath_hw_cycle_counters_update(common);
  
#line 663 
  if (cc->cycles != 0U) {
    
#line 664 
    ah->survey.time += (unsigned long long)(cc->cycles / div);
    
#line 665 
    ah->survey.time_busy += (unsigned long long)(cc->rx_busy / div);
    
#line 666 
    ah->survey.time_rx += (unsigned long long)(cc->rx_frame / div);
    
#line 667 
    ah->survey.time_tx += (unsigned long long)(cc->tx_frame / div);
  }
  else ;
  
#line 669 
  memset((void *)cc,0,16UL);
  
#line 670 
  ldv_spin_unlock_bh_89(& common->cc_lock);
  
#line 672 
  memcpy((void *)survey,(void const *)(& ah->survey),64UL);
  
#line 674 
  survey->channel = conf->chandef.chan;
  
#line 675 
  survey->noise = (signed char)ah->ah_noise_floor;
  
#line 676 
  survey->filled = 111U;
  
#line 683 
  __retres = 0;
  return_label: 
#line 683 
                return __retres;
}


#line 698  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/mac80211-ops.c"
static void ath5k_set_coverage_class(struct ieee80211_hw *hw, s16 coverage_class)
{
  
#line 700 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 702 
  ldv_mutex_lock_90(& ah->lock);
  
#line 703 
  ath5k_hw_set_coverage_class(ah,(unsigned char)((int)((unsigned char)coverage_class)));
  
#line 704 
  ldv_mutex_unlock_91(& ah->lock);
  
#line 705 
  return;
}


#line 709  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/mac80211-ops.c"
static int ath5k_set_antenna(struct ieee80211_hw *hw, u32 tx_ant, u32 rx_ant)
{
  int __retres;
  
#line 711 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 713 
  if (tx_ant == 1U && rx_ant == 1U) 
#line 714 
                                    ath5k_hw_set_antenna_mode(ah,(unsigned char)1);
  else 
    
#line 715 
    if (tx_ant == 2U && rx_ant == 2U) 
#line 716 
                                      ath5k_hw_set_antenna_mode(ah,(unsigned char)2);
    else 
      
#line 717 
      if ((tx_ant & 3U) == 3U && (rx_ant & 3U) == 3U) 
#line 718 
                                                      ath5k_hw_set_antenna_mode(ah,(unsigned char)0);
      else {
        
#line 720 
        __retres = -22;
        
#line 720 
        goto return_label;
      }
  
#line 721 
  __retres = 0;
  return_label: 
#line 721 
                return __retres;
}


#line 726  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/mac80211-ops.c"
static int ath5k_get_antenna(struct ieee80211_hw *hw, u32 *tx_ant, u32 *rx_ant)
{
  int __retres;
  
#line 728 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 730 
  switch ((int)ah->ah_ant_mode) {
    case 1: 
#line 731 
    ;
    
#line 732 
    *tx_ant = 1U;
    
#line 732 
    *rx_ant = 1U;
    
#line 732 
    goto ldv_50750;
    case 2: 
#line 733 
    ;
    
#line 734 
    *tx_ant = 2U;
    
#line 734 
    *rx_ant = 2U;
    
#line 734 
    goto ldv_50750;
    case 0: 
#line 735 
    ;
    
#line 736 
    *tx_ant = 3U;
    
#line 736 
    *rx_ant = 3U;
    
#line 736 
    goto ldv_50750;
  }
  ldv_50750: 
#line 738 
  ;
  
#line 738 
  __retres = 0;
  
#line 738 
  return __retres;
}


#line 742  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/mac80211-ops.c"
static void ath5k_get_ringparam(struct ieee80211_hw *hw, u32 *tx, u32 *tx_max, u32 *rx, u32 *rx_max)
{
  u32 tmp;
  
#line 745 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 747 
  *tx = (unsigned int)ah->txqs[0].txq_max;
  
#line 749 
  *tx_max = 50U;
  
#line 750 
  tmp = 40U;
  
#line 750 
  *rx_max = tmp;
  
#line 750 
  *rx = tmp;
  
#line 751 
  return;
}


#line 754  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/mac80211-ops.c"
static int ath5k_set_ringparam(struct ieee80211_hw *hw, u32 tx, u32 rx)
{
  int __retres;
  u16 qnum;
  
#line 756 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 760 
  if (rx != 40U) {
    
#line 761 
    __retres = -22;
    
#line 761 
    goto return_label;
  }
  else ;
  
#line 764 
  if (tx + 4294967295U > 49U) {
    
#line 765 
    __retres = -22;
    
#line 765 
    goto return_label;
  }
  else ;
  
#line 767 
  qnum = (unsigned short)0U;
  
#line 767 
  goto ldv_50773;
  ldv_50772: 
#line 768 
  ;
  
#line 768 
  if (! ah->txqs[(int)qnum].setup) 
#line 769 
                                   goto ldv_50771; else ;
  
#line 770 
  if (ah->txqs[(int)qnum].qnum > 3U) 
#line 772 
                                     goto ldv_50771; else ;
  
#line 774 
  ah->txqs[(int)qnum].txq_max = (int)tx;
  
#line 775 
  if (ah->txqs[(int)qnum].txq_len >= ah->txqs[(int)qnum].txq_max) 
#line 776 
                                                                  ieee80211_stop_queue(hw,(int)ah->txqs[(int)qnum].qnum); else ;
  ldv_50771: 
#line 777 
  ;
  
#line 767 
  qnum = (u16)((int)qnum + 1);
  ldv_50773: 
#line 768 
  ;
  
#line 767 
  if ((unsigned int)qnum <= 9U) 
#line 769 
                                goto ldv_50772; else 
#line 772 
                                                     goto ldv_50774;
  ldv_50774: 
#line 773 
  ;
  
#line 779 
  __retres = 0;
  return_label: 
#line 779 
                return __retres;
}


#line 783  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/mac80211-ops.c"
struct ieee80211_ops const ath5k_hw_ops = {.tx = & ath5k_tx, .start = & ath5k_start, .stop = & ath5k_stop, .suspend = (int (*)(struct ieee80211_hw *, struct cfg80211_wowlan *))0, .resume = (int (*)(struct ieee80211_hw *))0, .set_wakeup = (void (*)(struct ieee80211_hw *, bool ))0, .add_interface = & ath5k_add_interface, .change_interface = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, enum nl80211_iftype , bool ))0, .remove_interface = & ath5k_remove_interface, .config = & ath5k_config, .bss_info_changed = & ath5k_bss_info_changed, .start_ap = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .stop_ap = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .prepare_multicast = & ath5k_prepare_multicast, .configure_filter = & ath5k_configure_filter, .set_tim = (int (*)(struct ieee80211_hw *, struct ieee80211_sta *, bool ))0, .set_key = & ath5k_set_key, .update_tkip_key = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_key_conf *, struct ieee80211_sta *, u32 , u16 *))0, .set_rekey_data = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_gtk_rekey_data *))0, .set_default_unicast_key = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, int ))0, .hw_scan = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_scan_request *))0, .cancel_hw_scan = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .sched_scan_start = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_sched_scan_request *, struct ieee80211_scan_ies *))0, .sched_scan_stop = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .sw_scan_start = & ath5k_sw_scan_start, .sw_scan_complete = & ath5k_sw_scan_complete, .get_stats = & ath5k_get_stats, .get_key_seq = (void (*)(struct ieee80211_hw *, struct ieee80211_key_conf *, struct ieee80211_key_seq *))0, .set_frag_threshold = (int (*)(struct ieee80211_hw *, u32 ))0, .set_rts_threshold = (int (*)(struct ieee80211_hw *, u32 ))0, .sta_add = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *))0, .sta_remove = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *))0, .sta_add_debugfs = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct dentry *))0, .sta_remove_debugfs = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct dentry *))0, .sta_notify = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, enum sta_notify_cmd , struct ieee80211_sta *))0, .sta_state = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, enum ieee80211_sta_state , enum ieee80211_sta_state ))0, .sta_pre_rcu_remove = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *))0, .sta_rc_update = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u32 ))0, .sta_rate_tbl_update = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *))0, .sta_statistics = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct station_info *))0, .conf_tx = & ath5k_conf_tx, .get_tsf = & ath5k_get_tsf, .set_tsf = & ath5k_set_tsf, .reset_tsf = & ath5k_reset_tsf, .tx_last_beacon = (int (*)(struct ieee80211_hw *))0, .ampdu_action = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, enum ieee80211_ampdu_mlme_action , struct ieee80211_sta *, u16 , u16 *, u8 ))0, .get_survey = & ath5k_get_survey, .rfkill_poll = (void (*)(struct ieee80211_hw *))0, .set_coverage_class = & ath5k_set_coverage_class, .testmode_cmd = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, void *, int ))0, .testmode_dump = (int (*)(struct ieee80211_hw *, struct sk_buff *, struct netlink_callback *, void *, int ))0, .flush = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , bool ))0, .channel_switch = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *))0, .set_antenna = & ath5k_set_antenna, .get_antenna = & ath5k_get_antenna, .remain_on_channel = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel *, int , enum ieee80211_roc_type ))0, .cancel_remain_on_channel = (int (*)(struct ieee80211_hw *))0, .set_ringparam = & ath5k_set_ringparam, .get_ringparam = & ath5k_get_ringparam, .tx_frames_pending = (bool (*)(struct ieee80211_hw *))0, .set_bitrate_mask = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_bitrate_mask const *))0, .event_callback = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_event const *))0, .allow_buffered_frames = (void (*)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ))0, .release_buffered_frames = (void (*)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ))0, .get_et_sset_count = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, int ))0, .get_et_stats = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ethtool_stats *, u64 *))0, .get_et_strings = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , u8 *))0, .mgd_prepare_tx = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .mgd_protect_tdls_discover = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .add_chanctx = (int (*)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *))0, .remove_chanctx = (void (*)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *))0, .change_chanctx = (void (*)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *, u32 ))0, .assign_vif_chanctx = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *))0, .unassign_vif_chanctx = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *))0, .switch_vif_chanctx = (int (*)(struct ieee80211_hw *, struct ieee80211_vif_chanctx_switch *, int , enum ieee80211_chanctx_switch_mode ))0, .reconfig_complete = (void (*)(struct ieee80211_hw *, enum ieee80211_reconfig_type ))0, .ipv6_addr_change = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct inet6_dev *))0, .channel_switch_beacon = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_chan_def *))0, .pre_channel_switch = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *))0, .post_channel_switch = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .join_ibss = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .leave_ibss = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .get_expected_throughput = (u32 (*)(struct ieee80211_sta *))0, .get_txpower = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, int *))0, .tdls_channel_switch = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u8 , struct cfg80211_chan_def *, struct sk_buff *, u32 ))0, .tdls_cancel_channel_switch = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *))0, .tdls_recv_channel_switch = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_tdls_ch_sw_params *))0, .wake_tx_queue = (void (*)(struct ieee80211_hw *, struct ieee80211_txq *))0};

#line 68  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
void ldv_emg_wrapper_ath5k_sw_scan_complete_19(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  
#line 69 
  ath5k_sw_scan_complete(arg0,arg1);
  
#line 70 
  return;
}


#line 73  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
int ldv_emg_wrapper_ath5k_set_key_8(struct ieee80211_hw *arg0, enum set_key_cmd arg1, struct ieee80211_vif *arg2, struct ieee80211_sta *arg3, struct ieee80211_key_conf *arg4)
{
  int tmp;
  
#line 74 
  tmp = ath5k_set_key(arg0,arg1,arg2,arg3,arg4);
  
#line 74 
  return tmp;
}


#line 78  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
void ldv_emg_wrapper_ath5k_set_coverage_class_5(struct ieee80211_hw *arg0, short arg1)
{
  
#line 79 
  ath5k_set_coverage_class(arg0,(short)((int)arg1));
  
#line 80 
  return;
}


#line 83  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
int ldv_emg_wrapper_ath5k_get_stats_3(struct ieee80211_hw *arg0, struct ieee80211_low_level_stats *arg1)
{
  int tmp;
  
#line 84 
  tmp = ath5k_get_stats(arg0,arg1);
  
#line 84 
  return tmp;
}


#line 88  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
int ldv_emg_wrapper_ath5k_add_interface_18(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  int tmp;
  
#line 89 
  tmp = ath5k_add_interface(arg0,arg1);
  
#line 89 
  return tmp;
}


#line 93  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
void ldv_emg_wrapper_ath5k_tx_10(struct ieee80211_hw *arg0, struct ieee80211_tx_control *arg1, struct sk_buff *arg2)
{
  
#line 94 
  ath5k_tx(arg0,arg1,arg2);
  
#line 95 
  return;
}


#line 98  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
unsigned long long ldv_emg_wrapper_ath5k_get_tsf_21(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  unsigned long long tmp;
  
#line 99 
  tmp = ath5k_get_tsf(arg0,arg1);
  
#line 99 
  return tmp;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
int ldv_emg_wrapper_ath5k_set_ringparam_4(struct ieee80211_hw *arg0, unsigned int arg1, unsigned int arg2)
{
  int tmp;
  
#line 104 
  tmp = ath5k_set_ringparam(arg0,arg1,arg2);
  
#line 104 
  return tmp;
}


#line 108  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
unsigned long long ldv_emg_wrapper_ath5k_prepare_multicast_2(struct ieee80211_hw *arg0, struct netdev_hw_addr_list *arg1)
{
  unsigned long long tmp;
  
#line 109 
  tmp = ath5k_prepare_multicast(arg0,arg1);
  
#line 109 
  return tmp;
}


#line 113  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
int ldv_emg_wrapper_ath5k_config_7(struct ieee80211_hw *arg0, unsigned int arg1)
{
  int tmp;
  
#line 114 
  tmp = ath5k_config(arg0,arg1);
  
#line 114 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
void ldv_emg_wrapper_ath5k_reset_tsf_14(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  
#line 119 
  ath5k_reset_tsf(arg0,arg1);
  
#line 120 
  return;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
int ldv_emg_wrapper_ath5k_set_antenna_11(struct ieee80211_hw *arg0, unsigned int arg1, unsigned int arg2)
{
  int tmp;
  
#line 124 
  tmp = ath5k_set_antenna(arg0,arg1,arg2);
  
#line 124 
  return tmp;
}


#line 128  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
void ldv_emg_wrapper_ath5k_get_ringparam_15(struct ieee80211_hw *arg0, unsigned int *arg1, unsigned int *arg2, unsigned int *arg3, unsigned int *arg4)
{
  
#line 129 
  ath5k_get_ringparam(arg0,arg1,arg2,arg3,arg4);
  
#line 130 
  return;
}


#line 133  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
int ldv_emg_wrapper_ath5k_get_survey_6(struct ieee80211_hw *arg0, int arg1, struct survey_info *arg2)
{
  int tmp;
  
#line 134 
  tmp = ath5k_get_survey(arg0,arg1,arg2);
  
#line 134 
  return tmp;
}


#line 138  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
void ldv_emg_wrapper_ath5k_bss_info_changed_17(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, struct ieee80211_bss_conf *arg2, unsigned int arg3)
{
  
#line 139 
  ath5k_bss_info_changed(arg0,arg1,arg2,arg3);
  
#line 140 
  return;
}


#line 143  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
int ldv_emg_wrapper_ath5k_conf_tx_9(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, unsigned short arg2, struct ieee80211_tx_queue_params *arg3)
{
  int tmp;
  
#line 144 
  tmp = ath5k_conf_tx(arg0,arg1,(unsigned short)((int)arg2),(struct ieee80211_tx_queue_params const *)arg3);
  
#line 144 
  return tmp;
}


#line 148  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
void ldv_emg_wrapper_ath5k_configure_filter_13(struct ieee80211_hw *arg0, unsigned int arg1, unsigned int *arg2, unsigned long long arg3)
{
  
#line 149 
  ath5k_configure_filter(arg0,arg1,arg2,arg3);
  
#line 150 
  return;
}


#line 153  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
void ldv_emg_wrapper_ath5k_set_tsf_12(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, unsigned long long arg2)
{
  
#line 154 
  ath5k_set_tsf(arg0,arg1,arg2);
  
#line 155 
  return;
}


#line 158  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
void ldv_emg_wrapper_ath5k_sw_scan_start_20(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, unsigned char *arg2)
{
  
#line 159 
  ath5k_sw_scan_start(arg0,arg1,(u8 const *)arg2);
  
#line 160 
  return;
}


#line 163  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
int ldv_emg_wrapper_ath5k_get_antenna_22(struct ieee80211_hw *arg0, unsigned int *arg1, unsigned int *arg2)
{
  int tmp;
  
#line 164 
  tmp = ath5k_get_antenna(arg0,arg1,arg2);
  
#line 164 
  return tmp;
}


#line 168  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
void ldv_emg_wrapper_ath5k_remove_interface_16(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  
#line 169 
  ath5k_remove_interface(arg0,arg1);
  
#line 170 
  return;
}


#line 844  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
static void ldv_mutex_lock_72(struct mutex *ldv_func_arg1)
{
  
#line 848 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_ath5k_hw");
  
#line 849 
  return;
}


#line 852  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
static void ldv_mutex_unlock_73(struct mutex *ldv_func_arg1)
{
  
#line 856 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_ath5k_hw");
  
#line 857 
  return;
}


#line 860  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
static void ldv_mutex_lock_74(struct mutex *ldv_func_arg1)
{
  
#line 864 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_ath5k_hw");
  
#line 865 
  return;
}


#line 868  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
static void ldv_mutex_unlock_75(struct mutex *ldv_func_arg1)
{
  
#line 872 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_ath5k_hw");
  
#line 873 
  return;
}


#line 876  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
static void ldv_mutex_lock_76(struct mutex *ldv_func_arg1)
{
  
#line 880 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_ath5k_hw");
  
#line 881 
  return;
}


#line 884  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
static void ldv_mutex_unlock_77(struct mutex *ldv_func_arg1)
{
  
#line 888 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_ath5k_hw");
  
#line 889 
  return;
}


#line 892  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
static void ldv_mutex_lock_78(struct mutex *ldv_func_arg1)
{
  
#line 896 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_ath5k_hw");
  
#line 897 
  return;
}


#line 900  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
static void ldv_spin_lock_bh_79(spinlock_t *lock)
{
  
#line 904 
  ldv_spin_model_lock((char *)"block_of_ath5k_hw");
  
#line 906 
  spin_lock_bh_0(lock);
  
#line 907 
  return;
}


#line 910  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
static void ldv_spin_unlock_bh_80_0(spinlock_t *lock)
{
  
#line 914 
  ldv_spin_model_unlock((char *)"block_of_ath5k_hw");
  
#line 916 
  spin_unlock_bh_0(lock);
  
#line 917 
  return;
}


#line 920  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
static void ldv_mutex_unlock_81(struct mutex *ldv_func_arg1)
{
  
#line 924 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_ath5k_hw");
  
#line 925 
  return;
}


#line 928  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
static void ldv_mutex_lock_82(struct mutex *ldv_func_arg1)
{
  
#line 932 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_ath5k_hw");
  
#line 933 
  return;
}


#line 936  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
static void ldv_mutex_unlock_83(struct mutex *ldv_func_arg1)
{
  
#line 940 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_ath5k_hw");
  
#line 941 
  return;
}


#line 944  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
static void ldv_mutex_lock_84(struct mutex *ldv_func_arg1)
{
  
#line 948 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_ath5k_hw");
  
#line 949 
  return;
}


#line 952  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
static void ldv_mutex_unlock_85(struct mutex *ldv_func_arg1)
{
  
#line 956 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_ath5k_hw");
  
#line 957 
  return;
}


#line 960  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
static void ldv_mutex_lock_86(struct mutex *ldv_func_arg1)
{
  
#line 964 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_ath5k_hw");
  
#line 965 
  return;
}


#line 968  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
static void ldv_mutex_unlock_87(struct mutex *ldv_func_arg1)
{
  
#line 972 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_ath5k_hw");
  
#line 973 
  return;
}


#line 976  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
static void ldv_spin_lock_bh_88(spinlock_t *lock)
{
  
#line 980 
  ldv_spin_model_lock((char *)"cc_lock_of_ath_common");
  
#line 982 
  spin_lock_bh_0(lock);
  
#line 983 
  return;
}


#line 986  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
static void ldv_spin_unlock_bh_89(spinlock_t *lock)
{
  
#line 990 
  ldv_spin_model_unlock((char *)"cc_lock_of_ath_common");
  
#line 992 
  spin_unlock_bh_0(lock);
  
#line 993 
  return;
}


#line 996  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
static void ldv_mutex_lock_90(struct mutex *ldv_func_arg1)
{
  
#line 1000 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"lock_of_ath5k_hw");
  
#line 1001 
  return;
}


#line 1004  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_mac80211-ops.c.aux"
static void ldv_mutex_unlock_91(struct mutex *ldv_func_arg1)
{
  
#line 1008 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"lock_of_ath5k_hw");
  
#line 1009 
  return;
}


#line 1607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
int ath5k_hw_write_initvals(struct ath5k_hw *ah, u8 mode, bool skip_pcu);


#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/initvals.c"
static struct ath5k_ini const ar5210_ini[203U] = {{.ini_register = (unsigned short)0U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)12U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)8U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)28U, .ini_value = 0U, .ini_mode = AR5K_INI_READ}, {.ini_register = (unsigned short)32U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)36U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)44U, .ini_value = 0U, .ini_mode = AR5K_INI_READ}, {.ini_register = (unsigned short)48U, .ini_value = 5U, .ini_mode = 0}, {.ini_register = (unsigned short)52U, .ini_value = 5U, .ini_mode = 0}, {.ini_register = (unsigned short)20U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)68U, .ini_value = 8U, .ini_mode = 0}, {.ini_register = (unsigned short)72U, .ini_value = 8U, .ini_mode = 0}, {.ini_register = (unsigned short)80U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)76U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)16396U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)64U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)88U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32844U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32848U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32852U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32856U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32860U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32864U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32868U, .ini_value = 1U, .ini_mode = 0}, {.ini_register = (unsigned short)32872U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32792U, .ini_value = 129U, .ini_mode = 0}, {.ini_register = (unsigned short)32876U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32812U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32816U, .ini_value = 4294967295U, .ini_mode = 0}, {.ini_register = (unsigned short)32820U, .ini_value = 4294967295U, .ini_mode = 0}, {.ini_register = (unsigned short)32824U, .ini_value = 1U, .ini_mode = 0}, {.ini_register = (unsigned short)32840U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32808U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)38912U, .ini_value = 71U, .ini_mode = 0}, {.ini_register = (unsigned short)38920U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)38924U, .ini_value = 159682214U, .ini_mode = 0}, {.ini_register = (unsigned short)38928U, .ini_value = 1026744320U, .ini_mode = 0}, {.ini_register = (unsigned short)38932U, .ini_value = 1899U, .ini_mode = 0}, {.ini_register = (unsigned short)38940U, .ini_value = 2U, .ini_mode = 0}, {.ini_register = (unsigned short)38944U, .ini_value = 33686016U, .ini_mode = 0}, {.ini_register = (unsigned short)38948U, .ini_value = 3598U, .ini_mode = 0}, {.ini_register = (unsigned short)38952U, .ini_value = 167903745U, .ini_mode = 0}, {.ini_register = (unsigned short)38956U, .ini_value = 225276U, .ini_mode = 0}, {.ini_register = (unsigned short)38960U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)38964U, .ini_value = 3598U, .ini_mode = 0}, {.ini_register = (unsigned short)38968U, .ini_value = 7U, .ini_mode = 0}, {.ini_register = (unsigned short)38972U, .ini_value = 131328U, .ini_mode = 0}, {.ini_register = (unsigned short)38976U, .ini_value = 2304966656U, .ini_mode = 0}, {.ini_register = (unsigned short)38980U, .ini_value = 326243996U, .ini_mode = 0}, {.ini_register = (unsigned short)38984U, .ini_value = 1619507U, .ini_mode = 0}, {.ini_register = (unsigned short)38988U, .ini_value = 310665532U, .ini_mode = 0}, {.ini_register = (unsigned short)38992U, .ini_value = 233355488U, .ini_mode = 0}, {.ini_register = (unsigned short)38996U, .ini_value = 477273U, .ini_mode = 0}, {.ini_register = (unsigned short)39000U, .ini_value = 2122366650U, .ini_mode = 0}, {.ini_register = (unsigned short)39004U, .ini_value = 825910878U, .ini_mode = 0}, {.ini_register = (unsigned short)39008U, .ini_value = 7432U, .ini_mode = 0}, {.ini_register = (unsigned short)39012U, .ini_value = 118272U, .ini_mode = 0}, {.ini_register = (unsigned short)39016U, .ini_value = 1083851152U, .ini_mode = 0}, {.ini_register = (unsigned short)39024U, .ini_value = 15U, .ini_mode = 0}, {.ini_register = (unsigned short)39028U, .ini_value = 128U, .ini_mode = 0}, {.ini_register = (unsigned short)39032U, .ini_value = 4U, .ini_mode = 0}, {.ini_register = (unsigned short)39036U, .ini_value = 24U, .ini_mode = 0}, {.ini_register = (unsigned short)39168U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39172U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39176U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39180U, .ini_value = 8388608U, .ini_mode = 0}, {.ini_register = (unsigned short)39184U, .ini_value = 3U, .ini_mode = 0}, {.ini_register = (unsigned short)39680U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39684U, .ini_value = 32U, .ini_mode = 0}, {.ini_register = (unsigned short)39688U, .ini_value = 16U, .ini_mode = 0}, {.ini_register = (unsigned short)39692U, .ini_value = 48U, .ini_mode = 0}, {.ini_register = (unsigned short)39696U, .ini_value = 8U, .ini_mode = 0}, {.ini_register = (unsigned short)39700U, .ini_value = 40U, .ini_mode = 0}, {.ini_register = (unsigned short)39704U, .ini_value = 40U, .ini_mode = 0}, {.ini_register = (unsigned short)39708U, .ini_value = 4U, .ini_mode = 0}, {.ini_register = (unsigned short)39712U, .ini_value = 36U, .ini_mode = 0}, {.ini_register = (unsigned short)39716U, .ini_value = 20U, .ini_mode = 0}, {.ini_register = (unsigned short)39720U, .ini_value = 52U, .ini_mode = 0}, {.ini_register = (unsigned short)39724U, .ini_value = 12U, .ini_mode = 0}, {.ini_register = (unsigned short)39728U, .ini_value = 44U, .ini_mode = 0}, {.ini_register = (unsigned short)39732U, .ini_value = 2U, .ini_mode = 0}, {.ini_register = (unsigned short)39736U, .ini_value = 34U, .ini_mode = 0}, {.ini_register = (unsigned short)39740U, .ini_value = 18U, .ini_mode = 0}, {.ini_register = (unsigned short)39744U, .ini_value = 50U, .ini_mode = 0}, {.ini_register = (unsigned short)39748U, .ini_value = 10U, .ini_mode = 0}, {.ini_register = (unsigned short)39752U, .ini_value = 42U, .ini_mode = 0}, {.ini_register = (unsigned short)39756U, .ini_value = 1U, .ini_mode = 0}, {.ini_register = (unsigned short)39760U, .ini_value = 33U, .ini_mode = 0}, {.ini_register = (unsigned short)39764U, .ini_value = 17U, .ini_mode = 0}, {.ini_register = (unsigned short)39768U, .ini_value = 49U, .ini_mode = 0}, {.ini_register = (unsigned short)39772U, .ini_value = 9U, .ini_mode = 0}, {.ini_register = (unsigned short)39776U, .ini_value = 41U, .ini_mode = 0}, {.ini_register = (unsigned short)39780U, .ini_value = 5U, .ini_mode = 0}, {.ini_register = (unsigned short)39784U, .ini_value = 37U, .ini_mode = 0}, {.ini_register = (unsigned short)39788U, .ini_value = 21U, .ini_mode = 0}, {.ini_register = (unsigned short)39792U, .ini_value = 53U, .ini_mode = 0}, {.ini_register = (unsigned short)39796U, .ini_value = 13U, .ini_mode = 0}, {.ini_register = (unsigned short)39800U, .ini_value = 45U, .ini_mode = 0}, {.ini_register = (unsigned short)39804U, .ini_value = 3U, .ini_mode = 0}, {.ini_register = (unsigned short)39808U, .ini_value = 35U, .ini_mode = 0}, {.ini_register = (unsigned short)39812U, .ini_value = 19U, .ini_mode = 0}, {.ini_register = (unsigned short)39816U, .ini_value = 51U, .ini_mode = 0}, {.ini_register = (unsigned short)39820U, .ini_value = 11U, .ini_mode = 0}, {.ini_register = (unsigned short)39824U, .ini_value = 43U, .ini_mode = 0}, {.ini_register = (unsigned short)39828U, .ini_value = 7U, .ini_mode = 0}, {.ini_register = (unsigned short)39832U, .ini_value = 39U, .ini_mode = 0}, {.ini_register = (unsigned short)39836U, .ini_value = 23U, .ini_mode = 0}, {.ini_register = (unsigned short)39840U, .ini_value = 55U, .ini_mode = 0}, {.ini_register = (unsigned short)39844U, .ini_value = 15U, .ini_mode = 0}, {.ini_register = (unsigned short)39848U, .ini_value = 47U, .ini_mode = 0}, {.ini_register = (unsigned short)39852U, .ini_value = 47U, .ini_mode = 0}, {.ini_register = (unsigned short)39856U, .ini_value = 47U, .ini_mode = 0}, {.ini_register = (unsigned short)39860U, .ini_value = 47U, .ini_mode = 0}, {.ini_register = (unsigned short)39864U, .ini_value = 47U, .ini_mode = 0}, {.ini_register = (unsigned short)39868U, .ini_value = 47U, .ini_mode = 0}, {.ini_register = (unsigned short)39872U, .ini_value = 47U, .ini_mode = 0}, {.ini_register = (unsigned short)39876U, .ini_value = 47U, .ini_mode = 0}, {.ini_register = (unsigned short)39880U, .ini_value = 47U, .ini_mode = 0}, {.ini_register = (unsigned short)39884U, .ini_value = 47U, .ini_mode = 0}, {.ini_register = (unsigned short)39888U, .ini_value = 47U, .ini_mode = 0}, {.ini_register = (unsigned short)39892U, .ini_value = 47U, .ini_mode = 0}, {.ini_register = (unsigned short)39896U, .ini_value = 47U, .ini_mode = 0}, {.ini_register = (unsigned short)39900U, .ini_value = 47U, .ini_mode = 0}, {.ini_register = (unsigned short)39904U, .ini_value = 47U, .ini_mode = 0}, {.ini_register = (unsigned short)39908U, .ini_value = 47U, .ini_mode = 0}, {.ini_register = (unsigned short)39912U, .ini_value = 47U, .ini_mode = 0}, {.ini_register = (unsigned short)39916U, .ini_value = 47U, .ini_mode = 0}, {.ini_register = (unsigned short)39920U, .ini_value = 47U, .ini_mode = 0}, {.ini_register = (unsigned short)39924U, .ini_value = 47U, .ini_mode = 0}, {.ini_register = (unsigned short)39928U, .ini_value = 47U, .ini_mode = 0}, {.ini_register = (unsigned short)39932U, .ini_value = 47U, .ini_mode = 0}, {.ini_register = (unsigned short)39424U, .ini_value = 29U, .ini_mode = 0}, {.ini_register = (unsigned short)39428U, .ini_value = 93U, .ini_mode = 0}, {.ini_register = (unsigned short)39432U, .ini_value = 157U, .ini_mode = 0}, {.ini_register = (unsigned short)39436U, .ini_value = 221U, .ini_mode = 0}, {.ini_register = (unsigned short)39440U, .ini_value = 285U, .ini_mode = 0}, {.ini_register = (unsigned short)39444U, .ini_value = 33U, .ini_mode = 0}, {.ini_register = (unsigned short)39448U, .ini_value = 97U, .ini_mode = 0}, {.ini_register = (unsigned short)39452U, .ini_value = 161U, .ini_mode = 0}, {.ini_register = (unsigned short)39456U, .ini_value = 225U, .ini_mode = 0}, {.ini_register = (unsigned short)39460U, .ini_value = 49U, .ini_mode = 0}, {.ini_register = (unsigned short)39464U, .ini_value = 113U, .ini_mode = 0}, {.ini_register = (unsigned short)39468U, .ini_value = 177U, .ini_mode = 0}, {.ini_register = (unsigned short)39472U, .ini_value = 28U, .ini_mode = 0}, {.ini_register = (unsigned short)39476U, .ini_value = 92U, .ini_mode = 0}, {.ini_register = (unsigned short)39480U, .ini_value = 41U, .ini_mode = 0}, {.ini_register = (unsigned short)39484U, .ini_value = 105U, .ini_mode = 0}, {.ini_register = (unsigned short)39488U, .ini_value = 169U, .ini_mode = 0}, {.ini_register = (unsigned short)39492U, .ini_value = 32U, .ini_mode = 0}, {.ini_register = (unsigned short)39496U, .ini_value = 25U, .ini_mode = 0}, {.ini_register = (unsigned short)39500U, .ini_value = 89U, .ini_mode = 0}, {.ini_register = (unsigned short)39504U, .ini_value = 153U, .ini_mode = 0}, {.ini_register = (unsigned short)39508U, .ini_value = 48U, .ini_mode = 0}, {.ini_register = (unsigned short)39512U, .ini_value = 5U, .ini_mode = 0}, {.ini_register = (unsigned short)39516U, .ini_value = 37U, .ini_mode = 0}, {.ini_register = (unsigned short)39520U, .ini_value = 101U, .ini_mode = 0}, {.ini_register = (unsigned short)39524U, .ini_value = 165U, .ini_mode = 0}, {.ini_register = (unsigned short)39528U, .ini_value = 40U, .ini_mode = 0}, {.ini_register = (unsigned short)39532U, .ini_value = 104U, .ini_mode = 0}, {.ini_register = (unsigned short)39536U, .ini_value = 31U, .ini_mode = 0}, {.ini_register = (unsigned short)39540U, .ini_value = 30U, .ini_mode = 0}, {.ini_register = (unsigned short)39544U, .ini_value = 24U, .ini_mode = 0}, {.ini_register = (unsigned short)39548U, .ini_value = 88U, .ini_mode = 0}, {.ini_register = (unsigned short)39552U, .ini_value = 152U, .ini_mode = 0}, {.ini_register = (unsigned short)39556U, .ini_value = 3U, .ini_mode = 0}, {.ini_register = (unsigned short)39560U, .ini_value = 4U, .ini_mode = 0}, {.ini_register = (unsigned short)39564U, .ini_value = 68U, .ini_mode = 0}, {.ini_register = (unsigned short)39568U, .ini_value = 132U, .ini_mode = 0}, {.ini_register = (unsigned short)39572U, .ini_value = 19U, .ini_mode = 0}, {.ini_register = (unsigned short)39576U, .ini_value = 18U, .ini_mode = 0}, {.ini_register = (unsigned short)39580U, .ini_value = 82U, .ini_mode = 0}, {.ini_register = (unsigned short)39584U, .ini_value = 146U, .ini_mode = 0}, {.ini_register = (unsigned short)39588U, .ini_value = 210U, .ini_mode = 0}, {.ini_register = (unsigned short)39592U, .ini_value = 43U, .ini_mode = 0}, {.ini_register = (unsigned short)39596U, .ini_value = 42U, .ini_mode = 0}, {.ini_register = (unsigned short)39600U, .ini_value = 106U, .ini_mode = 0}, {.ini_register = (unsigned short)39604U, .ini_value = 170U, .ini_mode = 0}, {.ini_register = (unsigned short)39608U, .ini_value = 27U, .ini_mode = 0}, {.ini_register = (unsigned short)39612U, .ini_value = 26U, .ini_mode = 0}, {.ini_register = (unsigned short)39616U, .ini_value = 90U, .ini_mode = 0}, {.ini_register = (unsigned short)39620U, .ini_value = 154U, .ini_mode = 0}, {.ini_register = (unsigned short)39624U, .ini_value = 218U, .ini_mode = 0}, {.ini_register = (unsigned short)39628U, .ini_value = 6U, .ini_mode = 0}, {.ini_register = (unsigned short)39632U, .ini_value = 6U, .ini_mode = 0}, {.ini_register = (unsigned short)39636U, .ini_value = 6U, .ini_mode = 0}, {.ini_register = (unsigned short)39640U, .ini_value = 6U, .ini_mode = 0}, {.ini_register = (unsigned short)39644U, .ini_value = 6U, .ini_mode = 0}, {.ini_register = (unsigned short)39648U, .ini_value = 6U, .ini_mode = 0}, {.ini_register = (unsigned short)39652U, .ini_value = 6U, .ini_mode = 0}, {.ini_register = (unsigned short)39656U, .ini_value = 6U, .ini_mode = 0}, {.ini_register = (unsigned short)39660U, .ini_value = 6U, .ini_mode = 0}, {.ini_register = (unsigned short)39664U, .ini_value = 6U, .ini_mode = 0}, {.ini_register = (unsigned short)39668U, .ini_value = 6U, .ini_mode = 0}, {.ini_register = (unsigned short)39672U, .ini_value = 6U, .ini_mode = 0}, {.ini_register = (unsigned short)39676U, .ini_value = 6U, .ini_mode = 0}, {.ini_register = (unsigned short)39124U, .ini_value = 32U, .ini_mode = 0}, {.ini_register = (unsigned short)39116U, .ini_value = 4U, .ini_mode = 0}, {.ini_register = (unsigned short)39112U, .ini_value = 393478U, .ini_mode = 0}, {.ini_register = (unsigned short)39068U, .ini_value = 109U, .ini_mode = 0}, {.ini_register = (unsigned short)39104U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39120U, .ini_value = 20U, .ini_mode = 0}, {.ini_register = (unsigned short)38940U, .ini_value = 1U, .ini_mode = 0}};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/initvals.c"
static struct ath5k_ini const ar5211_ini[116U] = {{.ini_register = (unsigned short)12U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)40U, .ini_value = 2223283356U, .ini_mode = 0}, {.ini_register = (unsigned short)44U, .ini_value = 2088533116U, .ini_mode = 0}, {.ini_register = (unsigned short)52U, .ini_value = 5U, .ini_mode = 0}, {.ini_register = (unsigned short)64U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)68U, .ini_value = 8U, .ini_mode = 0}, {.ini_register = (unsigned short)72U, .ini_value = 8U, .ini_mode = 0}, {.ini_register = (unsigned short)76U, .ini_value = 16U, .ini_mode = 0}, {.ini_register = (unsigned short)80U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)84U, .ini_value = 31U, .ini_mode = 0}, {.ini_register = (unsigned short)2048U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)2052U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)2056U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)2060U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)2064U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)2068U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)2072U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)2076U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)2080U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)2084U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4656U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32772U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32776U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32780U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32792U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32804U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32808U, .ini_value = 48U, .ini_mode = 0}, {.ini_register = (unsigned short)32812U, .ini_value = 524287U, .ini_mode = 0}, {.ini_register = (unsigned short)32816U, .ini_value = 33554431U, .ini_mode = 0}, {.ini_register = (unsigned short)32820U, .ini_value = 49U, .ini_mode = 0}, {.ini_register = (unsigned short)32824U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32828U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32832U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32836U, .ini_value = 2U, .ini_mode = 0}, {.ini_register = (unsigned short)32840U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32852U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32856U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)38920U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)38924U, .ini_value = 763662483U, .ini_mode = 0}, {.ini_register = (unsigned short)38928U, .ini_value = 2100486144U, .ini_mode = 0}, {.ini_register = (unsigned short)38932U, .ini_value = 3947U, .ini_mode = 0}, {.ini_register = (unsigned short)38940U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)38956U, .ini_value = 159742U, .ini_mode = 0}, {.ini_register = (unsigned short)38960U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)38972U, .ini_value = 131328U, .ini_mode = 0}, {.ini_register = (unsigned short)38976U, .ini_value = 543818106U, .ini_mode = 0}, {.ini_register = (unsigned short)38988U, .ini_value = 310665532U, .ini_mode = 0}, {.ini_register = (unsigned short)38996U, .ini_value = 2137U, .ini_mode = 0}, {.ini_register = (unsigned short)39016U, .ini_value = 1083851152U, .ini_mode = 0}, {.ini_register = (unsigned short)39020U, .ini_value = 84717697U, .ini_mode = 0}, {.ini_register = (unsigned short)39024U, .ini_value = 15U, .ini_mode = 0}, {.ini_register = (unsigned short)39028U, .ini_value = 128U, .ini_mode = 0}, {.ini_register = (unsigned short)39032U, .ini_value = 12U, .ini_mode = 0}, {.ini_register = (unsigned short)39168U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39172U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39176U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39180U, .ini_value = 8388608U, .ini_mode = 0}, {.ini_register = (unsigned short)39184U, .ini_value = 1U, .ini_mode = 0}, {.ini_register = (unsigned short)39196U, .ini_value = 2346U, .ini_mode = 0}, {.ini_register = (unsigned short)39200U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39204U, .ini_value = 363013U, .ini_mode = 0}, {.ini_register = (unsigned short)39208U, .ini_value = 1U, .ini_mode = 0}, {.ini_register = (unsigned short)39212U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39216U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39220U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39224U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39228U, .ini_value = 63U, .ini_mode = 0}, {.ini_register = (unsigned short)39232U, .ini_value = 4U, .ini_mode = 0}, {.ini_register = (unsigned short)39240U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39244U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39248U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39252U, .ini_value = 1565585740U, .ini_mode = 0}, {.ini_register = (unsigned short)39256U, .ini_value = 24U, .ini_mode = 0}, {.ini_register = (unsigned short)39260U, .ini_value = 4942478U, .ini_mode = 0}, {.ini_register = (unsigned short)41348U, .ini_value = 117376511U, .ini_mode = 0}, {.ini_register = (unsigned short)41352U, .ini_value = 134154239U, .ini_mode = 0}, {.ini_register = (unsigned short)41356U, .ini_value = 150931711U, .ini_mode = 0}, {.ini_register = (unsigned short)41360U, .ini_value = 167709183U, .ini_mode = 0}, {.ini_register = (unsigned short)41364U, .ini_value = 184486655U, .ini_mode = 0}, {.ini_register = (unsigned short)41368U, .ini_value = 201264127U, .ini_mode = 0}, {.ini_register = (unsigned short)41372U, .ini_value = 218041599U, .ini_mode = 0}, {.ini_register = (unsigned short)41376U, .ini_value = 234819071U, .ini_mode = 0}, {.ini_register = (unsigned short)41380U, .ini_value = 268373759U, .ini_mode = 0}, {.ini_register = (unsigned short)41384U, .ini_value = 318706431U, .ini_mode = 0}, {.ini_register = (unsigned short)41388U, .ini_value = 352261119U, .ini_mode = 0}, {.ini_register = (unsigned short)41392U, .ini_value = 385816063U, .ini_mode = 0}, {.ini_register = (unsigned short)41396U, .ini_value = 436148223U, .ini_mode = 0}, {.ini_register = (unsigned short)41400U, .ini_value = 469703423U, .ini_mode = 0}, {.ini_register = (unsigned short)41404U, .ini_value = 520035839U, .ini_mode = 0}, {.ini_register = (unsigned short)41408U, .ini_value = 603922687U, .ini_mode = 0}, {.ini_register = (unsigned short)41412U, .ini_value = 671032831U, .ini_mode = 0}, {.ini_register = (unsigned short)41416U, .ini_value = 754919935U, .ini_mode = 0}, {.ini_register = (unsigned short)41420U, .ini_value = 838807551U, .ini_mode = 0}, {.ini_register = (unsigned short)41424U, .ini_value = 939472127U, .ini_mode = 0}, {.ini_register = (unsigned short)41428U, .ini_value = 989805311U, .ini_mode = 0}, {.ini_register = (unsigned short)41432U, .ini_value = 989805311U, .ini_mode = 0}, {.ini_register = (unsigned short)41436U, .ini_value = 989805311U, .ini_mode = 0}, {.ini_register = (unsigned short)41440U, .ini_value = 989805311U, .ini_mode = 0}, {.ini_register = (unsigned short)41444U, .ini_value = 989805311U, .ini_mode = 0}, {.ini_register = (unsigned short)41448U, .ini_value = 989805311U, .ini_mode = 0}, {.ini_register = (unsigned short)41452U, .ini_value = 989805311U, .ini_mode = 0}, {.ini_register = (unsigned short)41456U, .ini_value = 989805311U, .ini_mode = 0}, {.ini_register = (unsigned short)41460U, .ini_value = 989805311U, .ini_mode = 0}, {.ini_register = (unsigned short)41464U, .ini_value = 989805311U, .ini_mode = 0}, {.ini_register = (unsigned short)41468U, .ini_value = 989805311U, .ini_mode = 0}, {.ini_register = (unsigned short)41476U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)41480U, .ini_value = 1346258502U, .ini_mode = 0}, {.ini_register = (unsigned short)41484U, .ini_value = 1686126956U, .ini_mode = 0}, {.ini_register = (unsigned short)41488U, .ini_value = 26845187U, .ini_mode = 0}, {.ini_register = (unsigned short)41492U, .ini_value = 72144400U, .ini_mode = 0}, {.ini_register = (unsigned short)41496U, .ini_value = 327155776U, .ini_mode = 0}, {.ini_register = (unsigned short)41500U, .ini_value = 467664992U, .ini_mode = 0}, {.ini_register = (unsigned short)41504U, .ini_value = 206798858U, .ini_mode = 0}, {.ini_register = (unsigned short)41508U, .ini_value = 1367867U, .ini_mode = 0}, {.ini_register = (unsigned short)41512U, .ini_value = 437U, .ini_mode = 0}, {.ini_register = (unsigned short)41516U, .ini_value = 32U, .ini_mode = 0}};

#line 395  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/initvals.c"
static struct ath5k_ini_mode const ar5211_ini_mode[34U] = {{.mode_register = (unsigned short)48U, .mode_value = {21U, 29U, 21U}}, {.mode_register = (unsigned short)4160U, .mode_value = {3144719U, 3144735U, 3144719U}}, {.mode_register = (unsigned short)4164U, .mode_value = {3144719U, 3144735U, 3144719U}}, {.mode_register = (unsigned short)4168U, .mode_value = {3144719U, 3144735U, 3144719U}}, {.mode_register = (unsigned short)4172U, .mode_value = {3144719U, 3144735U, 3144719U}}, {.mode_register = (unsigned short)4176U, .mode_value = {3144719U, 3144735U, 3144719U}}, {.mode_register = (unsigned short)4180U, .mode_value = {3144719U, 3144735U, 3144719U}}, {.mode_register = (unsigned short)4184U, .mode_value = {3144719U, 3144735U, 3144719U}}, {.mode_register = (unsigned short)4188U, .mode_value = {3144719U, 3144735U, 3144719U}}, {.mode_register = (unsigned short)4192U, .mode_value = {3144719U, 3144735U, 3144719U}}, {.mode_register = (unsigned short)4196U, .mode_value = {3144719U, 3144735U, 3144719U}}, {.mode_register = (unsigned short)4208U, .mode_value = {360U, 440U, 360U}}, {.mode_register = (unsigned short)4144U, .mode_value = {560U, 176U, 560U}}, {.mode_register = (unsigned short)4272U, .mode_value = {3480U, 8008U, 3480U}}, {.mode_register = (unsigned short)4336U, .mode_value = {41184U, 22656U, 41184U}}, {.mode_register = (unsigned short)32788U, .mode_value = {67109888U, 536883200U, 67109888U}}, {.mode_register = (unsigned short)32796U, .mode_value = {244158375U, 23105429U, 244158375U}}, {.mode_register = (unsigned short)38944U, .mode_value = {33686016U, 33620480U, 33686016U}}, {.mode_register = (unsigned short)38948U, .mode_value = {3598U, 1799U, 3598U}}, {.mode_register = (unsigned short)38952U, .mode_value = {167903233U, 83951616U, 167903233U}}, {.mode_register = (unsigned short)38964U, .mode_value = {3598U, 3598U, 3598U}}, {.mode_register = (unsigned short)38968U, .mode_value = {7U, 11U, 11U}}, {.mode_register = (unsigned short)38980U, .mode_value = {326243996U, 326244008U, 326243996U}}, {.mode_register = (unsigned short)38984U, .mode_value = {1620583U, 1620585U, 1620585U}}, {.mode_register = (unsigned short)38992U, .mode_value = {203994336U, 203994336U, 203994336U}}, {.mode_register = (unsigned short)39000U, .mode_value = {2122321198U, 2126515502U, 2122321198U}}, {.mode_register = (unsigned short)39004U, .mode_value = {825711966U, 825908574U, 825711966U}}, {.mode_register = (unsigned short)39008U, .mode_value = {48400U, 48440U, 48400U}}, {.mode_register = (unsigned short)39012U, .mode_value = {118272U, 118272U, 118272U}}, {.mode_register = (unsigned short)39188U, .mode_value = {10000U, 5500U, 10000U}}, {.mode_register = (unsigned short)39192U, .mode_value = {400U, 132U, 400U}}, {.mode_register = (unsigned short)39236U, .mode_value = {1876955168U, 1876953376U, 1876955168U}}, {.mode_register = (unsigned short)41344U, .mode_value = {100603135U, 100603135U, 100604415U}}, {.mode_register = (unsigned short)39124U, .mode_value = {16U, 16U, 16U}}};

#line 468  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/initvals.c"
static struct ath5k_ini const ar5212_ini_common_start[191U] = {{.ini_register = (unsigned short)12U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)52U, .ini_value = 5U, .ini_mode = 0}, {.ini_register = (unsigned short)64U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)68U, .ini_value = 8U, .ini_mode = 0}, {.ini_register = (unsigned short)72U, .ini_value = 8U, .ini_mode = 0}, {.ini_register = (unsigned short)76U, .ini_value = 16U, .ini_mode = 0}, {.ini_register = (unsigned short)80U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)84U, .ini_value = 31U, .ini_mode = 0}, {.ini_register = (unsigned short)2048U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)2052U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)2056U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)2060U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)2064U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)2068U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)2072U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)2076U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)2080U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)2084U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4656U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4720U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4152U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4216U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4280U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4344U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4408U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4472U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4536U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4600U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4664U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4728U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4792U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4856U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4920U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4984U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)5048U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)5112U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)5176U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)5240U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)5304U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)5368U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)5432U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)5496U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)5560U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)5624U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)5688U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)5752U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)5816U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)5880U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)5944U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)6008U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)6072U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)6136U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4156U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4220U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4284U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4348U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4412U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4476U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4540U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4604U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4668U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4732U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4796U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4860U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4924U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)4988U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)5052U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)5116U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)5180U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)5244U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32772U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32776U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32780U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32800U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32804U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32808U, .ini_value = 48U, .ini_mode = 0}, {.ini_register = (unsigned short)32812U, .ini_value = 524287U, .ini_mode = 0}, {.ini_register = (unsigned short)32816U, .ini_value = 33554431U, .ini_mode = 0}, {.ini_register = (unsigned short)32820U, .ini_value = 49U, .ini_mode = 0}, {.ini_register = (unsigned short)32824U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32828U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32840U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32852U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32856U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32860U, .ini_value = 1034127U, .ini_mode = 0}, {.ini_register = (unsigned short)32960U, .ini_value = 713175066U, .ini_mode = 0}, {.ini_register = (unsigned short)32964U, .ini_value = 98304480U, .ini_mode = 0}, {.ini_register = (unsigned short)32968U, .ini_value = 524298000U, .ini_mode = 0}, {.ini_register = (unsigned short)32972U, .ini_value = 32768000U, .ini_mode = 0}, {.ini_register = (unsigned short)32976U, .ini_value = 7708U, .ini_mode = 0}, {.ini_register = (unsigned short)32980U, .ini_value = 174762U, .ini_mode = 0}, {.ini_register = (unsigned short)32984U, .ini_value = 33576277U, .ini_mode = 0}, {.ini_register = (unsigned short)32988U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32992U, .ini_value = 4294967295U, .ini_mode = 0}, {.ini_register = (unsigned short)32996U, .ini_value = 65535U, .ini_mode = 0}, {.ini_register = (unsigned short)33000U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33004U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33008U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33012U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33016U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33020U, .ini_value = 136U, .ini_mode = 0}, {.ini_register = (unsigned short)34560U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)34564U, .ini_value = 140U, .ini_mode = 0}, {.ini_register = (unsigned short)34568U, .ini_value = 228U, .ini_mode = 0}, {.ini_register = (unsigned short)34572U, .ini_value = 725U, .ini_mode = 0}, {.ini_register = (unsigned short)34576U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)34580U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)34584U, .ini_value = 160U, .ini_mode = 0}, {.ini_register = (unsigned short)34588U, .ini_value = 457U, .ini_mode = 0}, {.ini_register = (unsigned short)34592U, .ini_value = 44U, .ini_mode = 0}, {.ini_register = (unsigned short)34596U, .ini_value = 44U, .ini_mode = 0}, {.ini_register = (unsigned short)34600U, .ini_value = 48U, .ini_mode = 0}, {.ini_register = (unsigned short)34604U, .ini_value = 60U, .ini_mode = 0}, {.ini_register = (unsigned short)34608U, .ini_value = 44U, .ini_mode = 0}, {.ini_register = (unsigned short)34612U, .ini_value = 44U, .ini_mode = 0}, {.ini_register = (unsigned short)34616U, .ini_value = 48U, .ini_mode = 0}, {.ini_register = (unsigned short)34620U, .ini_value = 60U, .ini_mode = 0}, {.ini_register = (unsigned short)34624U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)34628U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)34632U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)34636U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)34640U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)34644U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)34648U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)34652U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)34656U, .ini_value = 213U, .ini_mode = 0}, {.ini_register = (unsigned short)34660U, .ini_value = 223U, .ini_mode = 0}, {.ini_register = (unsigned short)34664U, .ini_value = 258U, .ini_mode = 0}, {.ini_register = (unsigned short)34668U, .ini_value = 314U, .ini_mode = 0}, {.ini_register = (unsigned short)34672U, .ini_value = 117U, .ini_mode = 0}, {.ini_register = (unsigned short)34676U, .ini_value = 127U, .ini_mode = 0}, {.ini_register = (unsigned short)34680U, .ini_value = 162U, .ini_mode = 0}, {.ini_register = (unsigned short)34684U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33024U, .ini_value = 65538U, .ini_mode = 0}, {.ini_register = (unsigned short)33028U, .ini_value = 1U, .ini_mode = 0}, {.ini_register = (unsigned short)33032U, .ini_value = 192U, .ini_mode = 0}, {.ini_register = (unsigned short)33036U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33040U, .ini_value = 360U, .ini_mode = 0}, {.ini_register = (unsigned short)33044U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)34752U, .ini_value = 50462976U, .ini_mode = 0}, {.ini_register = (unsigned short)34756U, .ini_value = 117835012U, .ini_mode = 0}, {.ini_register = (unsigned short)34760U, .ini_value = 185207048U, .ini_mode = 0}, {.ini_register = (unsigned short)34764U, .ini_value = 252579084U, .ini_mode = 0}, {.ini_register = (unsigned short)34768U, .ini_value = 319951120U, .ini_mode = 0}, {.ini_register = (unsigned short)34772U, .ini_value = 387323156U, .ini_mode = 0}, {.ini_register = (unsigned short)34776U, .ini_value = 454695192U, .ini_mode = 0}, {.ini_register = (unsigned short)34780U, .ini_value = 522067228U, .ini_mode = 0}, {.ini_register = (unsigned short)34784U, .ini_value = 50462976U, .ini_mode = 0}, {.ini_register = (unsigned short)34788U, .ini_value = 117835012U, .ini_mode = 0}, {.ini_register = (unsigned short)34792U, .ini_value = 185207048U, .ini_mode = 0}, {.ini_register = (unsigned short)34796U, .ini_value = 252579084U, .ini_mode = 0}, {.ini_register = (unsigned short)34800U, .ini_value = 319951120U, .ini_mode = 0}, {.ini_register = (unsigned short)34804U, .ini_value = 387323156U, .ini_mode = 0}, {.ini_register = (unsigned short)34808U, .ini_value = 454695192U, .ini_mode = 0}, {.ini_register = (unsigned short)34812U, .ini_value = 522067228U, .ini_mode = 0}, {.ini_register = (unsigned short)38924U, .ini_value = 2911145497U, .ini_mode = 0}, {.ini_register = (unsigned short)38928U, .ini_value = 2099830784U, .ini_mode = 0}, {.ini_register = (unsigned short)38932U, .ini_value = 2617941867U, .ini_mode = 0}, {.ini_register = (unsigned short)38940U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)38976U, .ini_value = 543818106U, .ini_mode = 0}, {.ini_register = (unsigned short)38996U, .ini_value = 2137U, .ini_mode = 0}, {.ini_register = (unsigned short)39168U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39172U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39176U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39180U, .ini_value = 8388608U, .ini_mode = 0}, {.ini_register = (unsigned short)39184U, .ini_value = 1U, .ini_mode = 0}, {.ini_register = (unsigned short)39196U, .ini_value = 3200U, .ini_mode = 0}, {.ini_register = (unsigned short)39200U, .ini_value = 84934656U, .ini_mode = 0}, {.ini_register = (unsigned short)39208U, .ini_value = 1U, .ini_mode = 0}, {.ini_register = (unsigned short)39212U, .ini_value = 4U, .ini_mode = 0}, {.ini_register = (unsigned short)39220U, .ini_value = 505356322U, .ini_mode = 0}, {.ini_register = (unsigned short)39224U, .ini_value = 168496141U, .ini_mode = 0}, {.ini_register = (unsigned short)39228U, .ini_value = 63U, .ini_mode = 0}, {.ini_register = (unsigned short)39240U, .ini_value = 2457907730U, .ini_mode = 0}, {.ini_register = (unsigned short)39252U, .ini_value = 1565581704U, .ini_mode = 0}, {.ini_register = (unsigned short)39260U, .ini_value = 4942478U, .ini_mode = 0}, {.ini_register = (unsigned short)39272U, .ini_value = 974U, .ini_mode = 0}, {.ini_register = (unsigned short)39280U, .ini_value = 422556949U, .ini_mode = 0}, {.ini_register = (unsigned short)39288U, .ini_value = 1U, .ini_mode = 0}, {.ini_register = (unsigned short)39292U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)41488U, .ini_value = 8414003U, .ini_mode = 0}, {.ini_register = (unsigned short)41492U, .ini_value = 1076240U, .ini_mode = 0}, {.ini_register = (unsigned short)41496U, .ini_value = 10240096U, .ini_mode = 0}, {.ini_register = (unsigned short)41504U, .ini_value = 25702598U, .ini_mode = 0}, {.ini_register = (unsigned short)41508U, .ini_value = 1024U, .ini_mode = 0}, {.ini_register = (unsigned short)41516U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)41524U, .ini_value = 538976288U, .ini_mode = 0}, {.ini_register = (unsigned short)41528U, .ini_value = 538976288U, .ini_mode = 0}, {.ini_register = (unsigned short)41536U, .ini_value = 944310816U, .ini_mode = 0}, {.ini_register = (unsigned short)41540U, .ini_value = 31670U, .ini_mode = 0}, {.ini_register = (unsigned short)41544U, .ini_value = 268386300U, .ini_mode = 0}};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/initvals.c"
static struct ath5k_ini_mode const ar5212_ini_mode_start[24U] = {{.mode_register = (unsigned short)4160U, .mode_value = {3144719U, 3144735U, 3144719U}}, {.mode_register = (unsigned short)4164U, .mode_value = {3144719U, 3144735U, 3144719U}}, {.mode_register = (unsigned short)4168U, .mode_value = {3144719U, 3144735U, 3144719U}}, {.mode_register = (unsigned short)4172U, .mode_value = {3144719U, 3144735U, 3144719U}}, {.mode_register = (unsigned short)4176U, .mode_value = {3144719U, 3144735U, 3144719U}}, {.mode_register = (unsigned short)4180U, .mode_value = {3144719U, 3144735U, 3144719U}}, {.mode_register = (unsigned short)4184U, .mode_value = {3144719U, 3144735U, 3144719U}}, {.mode_register = (unsigned short)4188U, .mode_value = {3144719U, 3144735U, 3144719U}}, {.mode_register = (unsigned short)4192U, .mode_value = {3144719U, 3144735U, 3144719U}}, {.mode_register = (unsigned short)4196U, .mode_value = {3144719U, 3144735U, 3144719U}}, {.mode_register = (unsigned short)4144U, .mode_value = {560U, 176U, 352U}}, {.mode_register = (unsigned short)4208U, .mode_value = {360U, 440U, 396U}}, {.mode_register = (unsigned short)4272U, .mode_value = {3680U, 7964U, 15928U}}, {.mode_register = (unsigned short)4336U, .mode_value = {41184U, 22656U, 45280U}}, {.mode_register = (unsigned short)32788U, .mode_value = {65537000U, 69207072U, 138414144U}}, {.mode_register = (unsigned short)38944U, .mode_value = {33686016U, 33620480U, 33686016U}}, {.mode_register = (unsigned short)38948U, .mode_value = {3598U, 1799U, 3598U}}, {.mode_register = (unsigned short)38980U, .mode_value = {326243868U, 326244130U, 326244002U}}, {.mode_register = (unsigned short)39008U, .mode_value = {40208U, 40216U, 40216U}}, {.mode_register = (unsigned short)39012U, .mode_value = {118272U, 118272U, 118272U}}, {.mode_register = (unsigned short)39016U, .mode_value = {1083851152U, 1083851152U, 1083851152U}}, {.mode_register = (unsigned short)39192U, .mode_value = {440U, 132U, 264U}}, {.mode_register = (unsigned short)39204U, .mode_value = {268798469U, 268798469U, 268798469U}}, {.mode_register = (unsigned short)41520U, .mode_value = {0U, 0U, 264U}}};

#line 733  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/initvals.c"
static struct ath5k_ini_mode const rf5111_ini_mode_end[14U] = {{.mode_register = (unsigned short)48U, .mode_value = {32789U, 32789U, 32789U}}, {.mode_register = (unsigned short)32796U, .mode_value = {311267239U, 81792917U, 316673963U}}, {.mode_register = (unsigned short)38952U, .mode_value = {167903233U, 83951872U, 167903233U}}, {.mode_register = (unsigned short)38964U, .mode_value = {3598U, 3598U, 3598U}}, {.mode_register = (unsigned short)38968U, .mode_value = {7U, 11U, 11U}}, {.mode_register = (unsigned short)38984U, .mode_value = {1628762U, 1624681U, 1624681U}}, {.mode_register = (unsigned short)38992U, .mode_value = {233354464U, 233354464U, 233354464U}}, {.mode_register = (unsigned short)39000U, .mode_value = {2122321198U, 2129153326U, 2129153326U}}, {.mode_register = (unsigned short)39004U, .mode_value = {825714270U, 825714270U, 825714270U}}, {.mode_register = (unsigned short)39020U, .mode_value = {84717697U, 84717697U, 84717696U}}, {.mode_register = (unsigned short)39188U, .mode_value = {10000U, 5500U, 11000U}}, {.mode_register = (unsigned short)39236U, .mode_value = {4156035104U, 4156034336U, 4156035104U}}, {.mode_register = (unsigned short)41484U, .mode_value = {1680621930U, 1681932650U, 1681932650U}}, {.mode_register = (unsigned short)41500U, .mode_value = {411271178U, 410222602U, 411271178U}}};

#line 766  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/initvals.c"
static struct ath5k_ini const rf5111_ini_common_end[14U] = {{.ini_register = (unsigned short)4656U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)38920U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)38956U, .ini_value = 143358U, .ini_mode = 0}, {.ini_register = (unsigned short)38972U, .ini_value = 131328U, .ini_mode = 0}, {.ini_register = (unsigned short)38988U, .ini_value = 310665532U, .ini_mode = 0}, {.ini_register = (unsigned short)39216U, .ini_value = 18563U, .ini_mode = 0}, {.ini_register = (unsigned short)39232U, .ini_value = 4U, .ini_mode = 0}, {.ini_register = (unsigned short)39256U, .ini_value = 255U, .ini_mode = 0}, {.ini_register = (unsigned short)39284U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39416U, .ini_value = 24U, .ini_mode = 0}, {.ini_register = (unsigned short)41476U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)41480U, .ini_value = 3493750664U, .ini_mode = 0}, {.ini_register = (unsigned short)41512U, .ini_value = 437U, .ini_mode = 0}, {.ini_register = (unsigned short)41532U, .ini_value = 331909551U, .ini_mode = 0}};

#line 786  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/initvals.c"
static struct ath5k_ini_mode const rf5112_ini_mode_end[16U] = {{.mode_register = (unsigned short)48U, .mode_value = {32789U, 32789U, 32789U}}, {.mode_register = (unsigned short)32796U, .mode_value = {311268263U, 81793941U, 316674987U}}, {.mode_register = (unsigned short)38952U, .mode_value = {167903233U, 84017408U, 167903233U}}, {.mode_register = (unsigned short)38964U, .mode_value = {3598U, 3598U, 3598U}}, {.mode_register = (unsigned short)38968U, .mode_value = {7U, 11U, 11U}}, {.mode_register = (unsigned short)38984U, .mode_value = {1628781U, 1624693U, 1624693U}}, {.mode_register = (unsigned short)38992U, .mode_value = {233354464U, 233354464U, 233354464U}}, {.mode_register = (unsigned short)39000U, .mode_value = {2122321198U, 2129136942U, 2129136942U}}, {.mode_register = (unsigned short)39004U, .mode_value = {825714270U, 825714270U, 825714270U}}, {.mode_register = (unsigned short)39020U, .mode_value = {84717697U, 84717697U, 84717697U}}, {.mode_register = (unsigned short)39188U, .mode_value = {2000U, 1100U, 2200U}}, {.mode_register = (unsigned short)39236U, .mode_value = {4156035104U, 4156034320U, 4156035088U}}, {.mode_register = (unsigned short)41476U, .mode_value = {0U, 8U, 8U}}, {.mode_register = (unsigned short)41480U, .mode_value = {3602802568U, 3493750664U, 3493750664U}}, {.mode_register = (unsigned short)41484U, .mode_value = {1680605504U, 1682096480U, 1682096480U}}, {.mode_register = (unsigned short)41500U, .mode_value = {411271178U, 410222602U, 411271178U}}};

#line 822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/initvals.c"
static struct ath5k_ini const rf5112_ini_common_end[11U] = {{.ini_register = (unsigned short)4656U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)38920U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)38956U, .ini_value = 143358U, .ini_mode = 0}, {.ini_register = (unsigned short)38972U, .ini_value = 131328U, .ini_mode = 0}, {.ini_register = (unsigned short)38988U, .ini_value = 310665532U, .ini_mode = 0}, {.ini_register = (unsigned short)39216U, .ini_value = 18562U, .ini_mode = 0}, {.ini_register = (unsigned short)39232U, .ini_value = 4U, .ini_mode = 0}, {.ini_register = (unsigned short)39256U, .ini_value = 255U, .ini_mode = 0}, {.ini_register = (unsigned short)39284U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)41512U, .ini_value = 437U, .ini_mode = 0}, {.ini_register = (unsigned short)41532U, .ini_value = 331909551U, .ini_mode = 0}};

#line 839  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/initvals.c"
static struct ath5k_ini_mode const rf5413_ini_mode_end[30U] = {{.mode_register = (unsigned short)48U, .mode_value = {21U, 21U, 21U}}, {.mode_register = (unsigned short)32796U, .mode_value = {311268263U, 81793941U, 316674987U}}, {.mode_register = (unsigned short)38952U, .mode_value = {167903233U, 84017408U, 167903233U}}, {.mode_register = (unsigned short)38964U, .mode_value = {3598U, 3598U, 3598U}}, {.mode_register = (unsigned short)38968U, .mode_value = {7U, 11U, 11U}}, {.mode_register = (unsigned short)38984U, .mode_value = {1636961U, 1710691U, 1710691U}}, {.mode_register = (unsigned short)38992U, .mode_value = {211334368U, 211333338U, 211333338U}}, {.mode_register = (unsigned short)39000U, .mode_value = {2127039790U, 2127039790U, 2127039790U}}, {.mode_register = (unsigned short)39004U, .mode_value = {825843806U, 825843806U, 825843806U}}, {.mode_register = (unsigned short)39020U, .mode_value = {84717697U, 84717697U, 84717697U}}, {.mode_register = (unsigned short)39188U, .mode_value = {2000U, 1100U, 2200U}}, {.mode_register = (unsigned short)39236U, .mode_value = {4156035072U, 4156034304U, 4156035072U}}, {.mode_register = (unsigned short)41476U, .mode_value = {0U, 0U, 0U}}, {.mode_register = (unsigned short)41480U, .mode_value = {3602802568U, 3493750664U, 3493750664U}}, {.mode_register = (unsigned short)41484U, .mode_value = {3064288U, 2801952U, 2801952U}}, {.mode_register = (unsigned short)41500U, .mode_value = {411271178U, 409174026U, 411271178U}}, {.mode_register = (unsigned short)41728U, .mode_value = {402718720U, 402718720U, 402718720U}}, {.mode_register = (unsigned short)41732U, .mode_value = {805512706U, 805512706U, 805512706U}}, {.mode_register = (unsigned short)41736U, .mode_value = {1208434182U, 1208434182U, 1208434182U}}, {.mode_register = (unsigned short)41740U, .mode_value = {1443580938U, 1443580938U, 1443580938U}}, {.mode_register = (unsigned short)41744U, .mode_value = {1679450127U, 1679450127U, 1679450127U}}, {.mode_register = (unsigned short)41748U, .mode_value = {2018471451U, 2018471451U, 2018471451U}}, {.mode_register = (unsigned short)41752U, .mode_value = {2257550426U, 2257550426U, 2257550426U}}, {.mode_register = (unsigned short)41756U, .mode_value = {2429519451U, 2395965019U, 2395965019U}}, {.mode_register = (unsigned short)41760U, .mode_value = {2639238927U, 2605684495U, 2605684495U}}, {.mode_register = (unsigned short)41764U, .mode_value = {2815402895U, 2748293007U, 2748293007U}}, {.mode_register = (unsigned short)41768U, .mode_value = {3042946847U, 3009392415U, 3009392415U}}, {.mode_register = (unsigned short)41772U, .mode_value = {3185555871U, 3152001439U, 3152001439U}}, {.mode_register = (unsigned short)41776U, .mode_value = {3414148415U, 3414148927U, 3414148927U}}, {.mode_register = (unsigned short)41780U, .mode_value = {3590312383U, 3556757951U, 3556757951U}}};

#line 903  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/initvals.c"
static struct ath5k_ini const rf5413_ini_common_end[70U] = {{.ini_register = (unsigned short)4656U, .ini_value = 992U, .ini_mode = 0}, {.ini_register = (unsigned short)16488U, .ini_value = 16U, .ini_mode = 0}, {.ini_register = (unsigned short)32864U, .ini_value = 15U, .ini_mode = 0}, {.ini_register = (unsigned short)32924U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32928U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33048U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33052U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33056U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33060U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33064U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33068U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33072U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33076U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33080U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33084U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33088U, .ini_value = 2147484665U, .ini_mode = 0}, {.ini_register = (unsigned short)33092U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)38920U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)38956U, .ini_value = 40960U, .ini_mode = 0}, {.ini_register = (unsigned short)38972U, .ini_value = 2098176U, .ini_mode = 0}, {.ini_register = (unsigned short)38988U, .ini_value = 310649660U, .ini_mode = 0}, {.ini_register = (unsigned short)39024U, .ini_value = 31U, .ini_mode = 0}, {.ini_register = (unsigned short)39028U, .ini_value = 128U, .ini_mode = 0}, {.ini_register = (unsigned short)39032U, .ini_value = 14U, .ini_mode = 0}, {.ini_register = (unsigned short)39256U, .ini_value = 532479U, .ini_mode = 0}, {.ini_register = (unsigned short)39296U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39300U, .ini_value = 41943040U, .ini_mode = 0}, {.ini_register = (unsigned short)39328U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39392U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39396U, .ini_value = 2863311530U, .ini_mode = 0}, {.ini_register = (unsigned short)39400U, .ini_value = 1011246200U, .ini_mode = 0}, {.ini_register = (unsigned short)39404U, .ini_value = 170U, .ini_mode = 0}, {.ini_register = (unsigned short)39408U, .ini_value = 12U, .ini_mode = 0}, {.ini_register = (unsigned short)39412U, .ini_value = 255U, .ini_mode = 0}, {.ini_register = (unsigned short)39416U, .ini_value = 20U, .ini_mode = 0}, {.ini_register = (unsigned short)41512U, .ini_value = 2485U, .ini_mode = 0}, {.ini_register = (unsigned short)41532U, .ini_value = 2479393199U, .ini_mode = 0}, {.ini_register = (unsigned short)41548U, .ini_value = 1U, .ini_mode = 0}, {.ini_register = (unsigned short)41552U, .ini_value = 40960U, .ini_mode = 0}, {.ini_register = (unsigned short)41556U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)41560U, .ini_value = 214389632U, .ini_mode = 0}, {.ini_register = (unsigned short)41564U, .ini_value = 252645121U, .ini_mode = 0}, {.ini_register = (unsigned short)41568U, .ini_value = 1600720641U, .ini_mode = 0}, {.ini_register = (unsigned short)41572U, .ini_value = 4295185U, .ini_mode = 0}, {.ini_register = (unsigned short)41576U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)41580U, .ini_value = 204521834U, .ini_mode = 0}, {.ini_register = (unsigned short)41584U, .ini_value = 8521760U, .ini_mode = 0}, {.ini_register = (unsigned short)41588U, .ini_value = 136019114U, .ini_mode = 0}, {.ini_register = (unsigned short)41592U, .ini_value = 484915662U, .ini_mode = 0}, {.ini_register = (unsigned short)41596U, .ini_value = 85393870U, .ini_mode = 0}, {.ini_register = (unsigned short)41784U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)41788U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)41792U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)41796U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)41800U, .ini_value = 1073741823U, .ini_mode = 0}, {.ini_register = (unsigned short)41804U, .ini_value = 1073741823U, .ini_mode = 0}, {.ini_register = (unsigned short)41808U, .ini_value = 1073741823U, .ini_mode = 0}, {.ini_register = (unsigned short)41812U, .ini_value = 262143U, .ini_mode = 0}, {.ini_register = (unsigned short)41816U, .ini_value = 2041096735U, .ini_mode = 0}, {.ini_register = (unsigned short)41820U, .ini_value = 107758095U, .ini_mode = 0}, {.ini_register = (unsigned short)41824U, .ini_value = 254288391U, .ini_mode = 0}, {.ini_register = (unsigned short)41828U, .ini_value = 392173189U, .ini_mode = 0}, {.ini_register = (unsigned short)41832U, .ini_value = 528486660U, .ini_mode = 0}, {.ini_register = (unsigned short)41836U, .ini_value = 933235715U, .ini_mode = 0}, {.ini_register = (unsigned short)41840U, .ini_value = 1069811843U, .ini_mode = 0}, {.ini_register = (unsigned short)41844U, .ini_value = 1472202755U, .ini_mode = 0}, {.ini_register = (unsigned short)41848U, .ini_value = 1607992962U, .ini_mode = 0}, {.ini_register = (unsigned short)41852U, .ini_value = 2145387650U, .ini_mode = 0}, {.ini_register = (unsigned short)41856U, .ini_value = 2134670266U, .ini_mode = 0}, {.ini_register = (unsigned short)41860U, .ini_value = 4080041968U, .ini_mode = 0}};

#line 979  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/initvals.c"
static struct ath5k_ini_mode const rf2413_ini_mode_end[16U] = {{.mode_register = (unsigned short)48U, .mode_value = {21U, 21U, 21U}}, {.mode_register = (unsigned short)32796U, .mode_value = {311268263U, 81793941U, 316674987U}}, {.mode_register = (unsigned short)38952U, .mode_value = {167903233U, 84017152U, 167903233U}}, {.mode_register = (unsigned short)38964U, .mode_value = {3584U, 3584U, 3584U}}, {.mode_register = (unsigned short)38968U, .mode_value = {2U, 10U, 10U}}, {.mode_register = (unsigned short)38984U, .mode_value = {1628781U, 1731172U, 1731172U}}, {.mode_register = (unsigned short)38992U, .mode_value = {233354464U, 233353434U, 211333338U}}, {.mode_register = (unsigned short)39000U, .mode_value = {2122321198U, 2129136942U, 2127039790U}}, {.mode_register = (unsigned short)39004U, .mode_value = {825714270U, 825714270U, 825843806U}}, {.mode_register = (unsigned short)39020U, .mode_value = {84717697U, 84717697U, 84717697U}}, {.mode_register = (unsigned short)39188U, .mode_value = {2000U, 1100U, 2200U}}, {.mode_register = (unsigned short)39236U, .mode_value = {4156035072U, 4156034304U, 4156035072U}}, {.mode_register = (unsigned short)41476U, .mode_value = {0U, 0U, 0U}}, {.mode_register = (unsigned short)41480U, .mode_value = {3602802568U, 3493750664U, 3493750664U}}, {.mode_register = (unsigned short)41484U, .mode_value = {2883904U, 4374848U, 4374848U}}, {.mode_register = (unsigned short)41500U, .mode_value = {411271178U, 409174026U, 411271178U}}};

#line 1015  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/initvals.c"
static struct ath5k_ini const rf2413_ini_common_end[81U] = {{.ini_register = (unsigned short)4656U, .ini_value = 992U, .ini_mode = 0}, {.ini_register = (unsigned short)32864U, .ini_value = 15U, .ini_mode = 0}, {.ini_register = (unsigned short)33048U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33052U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33056U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33060U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33064U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33068U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33072U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33076U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33080U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33084U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33088U, .ini_value = 2147483816U, .ini_mode = 0}, {.ini_register = (unsigned short)33092U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)38920U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)38956U, .ini_value = 40960U, .ini_mode = 0}, {.ini_register = (unsigned short)38972U, .ini_value = 2098176U, .ini_mode = 0}, {.ini_register = (unsigned short)38988U, .ini_value = 310649660U, .ini_mode = 0}, {.ini_register = (unsigned short)39024U, .ini_value = 31U, .ini_mode = 0}, {.ini_register = (unsigned short)39028U, .ini_value = 128U, .ini_mode = 0}, {.ini_register = (unsigned short)39032U, .ini_value = 14U, .ini_mode = 0}, {.ini_register = (unsigned short)39256U, .ini_value = 255U, .ini_mode = 0}, {.ini_register = (unsigned short)39296U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39300U, .ini_value = 41943040U, .ini_mode = 0}, {.ini_register = (unsigned short)39328U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39392U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39396U, .ini_value = 2863311530U, .ini_mode = 0}, {.ini_register = (unsigned short)39400U, .ini_value = 1011246200U, .ini_mode = 0}, {.ini_register = (unsigned short)39404U, .ini_value = 170U, .ini_mode = 0}, {.ini_register = (unsigned short)39408U, .ini_value = 12U, .ini_mode = 0}, {.ini_register = (unsigned short)39412U, .ini_value = 255U, .ini_mode = 0}, {.ini_register = (unsigned short)39416U, .ini_value = 20U, .ini_mode = 0}, {.ini_register = (unsigned short)41512U, .ini_value = 2485U, .ini_mode = 0}, {.ini_register = (unsigned short)41532U, .ini_value = 2479393199U, .ini_mode = 0}, {.ini_register = (unsigned short)41548U, .ini_value = 1U, .ini_mode = 0}, {.ini_register = (unsigned short)41552U, .ini_value = 40960U, .ini_mode = 0}, {.ini_register = (unsigned short)41556U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)41560U, .ini_value = 214389632U, .ini_mode = 0}, {.ini_register = (unsigned short)41564U, .ini_value = 252645121U, .ini_mode = 0}, {.ini_register = (unsigned short)41568U, .ini_value = 1600720641U, .ini_mode = 0}, {.ini_register = (unsigned short)41572U, .ini_value = 4295185U, .ini_mode = 0}, {.ini_register = (unsigned short)41576U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)41580U, .ini_value = 204521834U, .ini_mode = 0}, {.ini_register = (unsigned short)41584U, .ini_value = 8521760U, .ini_mode = 0}, {.ini_register = (unsigned short)41588U, .ini_value = 1801386U, .ini_mode = 0}, {.ini_register = (unsigned short)41592U, .ini_value = 484915662U, .ini_mode = 0}, {.ini_register = (unsigned short)41596U, .ini_value = 85393870U, .ini_mode = 0}, {.ini_register = (unsigned short)41728U, .ini_value = 402718720U, .ini_mode = 0}, {.ini_register = (unsigned short)41732U, .ini_value = 805512706U, .ini_mode = 0}, {.ini_register = (unsigned short)41736U, .ini_value = 1208434182U, .ini_mode = 0}, {.ini_register = (unsigned short)41740U, .ini_value = 1443580938U, .ini_mode = 0}, {.ini_register = (unsigned short)41744U, .ini_value = 1679450127U, .ini_mode = 0}, {.ini_register = (unsigned short)41748U, .ini_value = 2018471451U, .ini_mode = 0}, {.ini_register = (unsigned short)41752U, .ini_value = 2257550426U, .ini_mode = 0}, {.ini_register = (unsigned short)41756U, .ini_value = 2395965019U, .ini_mode = 0}, {.ini_register = (unsigned short)41760U, .ini_value = 2639238927U, .ini_mode = 0}, {.ini_register = (unsigned short)41764U, .ini_value = 2781847951U, .ini_mode = 0}, {.ini_register = (unsigned short)41768U, .ini_value = 3042946847U, .ini_mode = 0}, {.ini_register = (unsigned short)41772U, .ini_value = 3185555871U, .ini_mode = 0}, {.ini_register = (unsigned short)41776U, .ini_value = 3447703359U, .ini_mode = 0}, {.ini_register = (unsigned short)41780U, .ini_value = 3590312383U, .ini_mode = 0}, {.ini_register = (unsigned short)41784U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)41788U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)41792U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)41796U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)41800U, .ini_value = 1073741823U, .ini_mode = 0}, {.ini_register = (unsigned short)41804U, .ini_value = 1073741823U, .ini_mode = 0}, {.ini_register = (unsigned short)41808U, .ini_value = 1073741823U, .ini_mode = 0}, {.ini_register = (unsigned short)41812U, .ini_value = 262143U, .ini_mode = 0}, {.ini_register = (unsigned short)41816U, .ini_value = 2041096735U, .ini_mode = 0}, {.ini_register = (unsigned short)41820U, .ini_value = 107758095U, .ini_mode = 0}, {.ini_register = (unsigned short)41824U, .ini_value = 254288391U, .ini_mode = 0}, {.ini_register = (unsigned short)41828U, .ini_value = 392173189U, .ini_mode = 0}, {.ini_register = (unsigned short)41832U, .ini_value = 528486660U, .ini_mode = 0}, {.ini_register = (unsigned short)41836U, .ini_value = 933235715U, .ini_mode = 0}, {.ini_register = (unsigned short)41840U, .ini_value = 1069811843U, .ini_mode = 0}, {.ini_register = (unsigned short)41844U, .ini_value = 1472202755U, .ini_mode = 0}, {.ini_register = (unsigned short)41848U, .ini_value = 1607992962U, .ini_mode = 0}, {.ini_register = (unsigned short)41852U, .ini_value = 2145387650U, .ini_mode = 0}, {.ini_register = (unsigned short)41856U, .ini_value = 2134670266U, .ini_mode = 0}, {.ini_register = (unsigned short)41860U, .ini_value = 4080041968U, .ini_mode = 0}};

#line 1102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/initvals.c"
static struct ath5k_ini_mode const rf2425_ini_mode_end[22U] = {{.mode_register = (unsigned short)48U, .mode_value = {21U, 21U, 21U}}, {.mode_register = (unsigned short)32796U, .mode_value = {311268263U, 81793941U, 316674987U}}, {.mode_register = (unsigned short)38952U, .mode_value = {167903233U, 84017408U, 167903233U}}, {.mode_register = (unsigned short)38964U, .mode_value = {3598U, 3598U, 3598U}}, {.mode_register = (unsigned short)38968U, .mode_value = {3U, 11U, 11U}}, {.mode_register = (unsigned short)38980U, .mode_value = {326243868U, 326244130U, 326243362U}}, {.mode_register = (unsigned short)38984U, .mode_value = {1636961U, 1677925U, 1677925U}}, {.mode_register = (unsigned short)38992U, .mode_value = {211334368U, 211333338U, 211333338U}}, {.mode_register = (unsigned short)39000U, .mode_value = {2127039790U, 2127039790U, 2127039790U}}, {.mode_register = (unsigned short)39004U, .mode_value = {825843806U, 825843806U, 825843806U}}, {.mode_register = (unsigned short)39020U, .mode_value = {84717697U, 84717697U, 84717697U}}, {.mode_register = (unsigned short)39188U, .mode_value = {2000U, 1100U, 2200U}}, {.mode_register = (unsigned short)39236U, .mode_value = {4156035072U, 4156034304U, 4156035072U}}, {.mode_register = (unsigned short)41476U, .mode_value = {0U, 0U, 0U}}, {.mode_register = (unsigned short)41480U, .mode_value = {3602802568U, 3493750664U, 3493750664U}}, {.mode_register = (unsigned short)41484U, .mode_value = {320U, 5423424U, 5423424U}}, {.mode_register = (unsigned short)41500U, .mode_value = {411271178U, 409174026U, 411271178U}}, {.mode_register = (unsigned short)41764U, .mode_value = {2815403983U, 2815403983U, 2815403983U}}, {.mode_register = (unsigned short)41768U, .mode_value = {2815403983U, 2815403983U, 2815403983U}}, {.mode_register = (unsigned short)41772U, .mode_value = {2815403983U, 2815403983U, 2815403983U}}, {.mode_register = (unsigned short)41776U, .mode_value = {2815403983U, 2815403983U, 2815403983U}}, {.mode_register = (unsigned short)41780U, .mode_value = {2815403983U, 2815403983U, 2815403983U}}};

#line 1150  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/initvals.c"
static struct ath5k_ini const rf2425_ini_common_end[77U] = {{.ini_register = (unsigned short)4656U, .ini_value = 992U, .ini_mode = 0}, {.ini_register = (unsigned short)32864U, .ini_value = 15U, .ini_mode = 0}, {.ini_register = (unsigned short)32924U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)32928U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33048U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33052U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33056U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33060U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33064U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33068U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33072U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33076U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33080U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33084U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)33088U, .ini_value = 2147484665U, .ini_mode = 0}, {.ini_register = (unsigned short)33092U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)38920U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)38956U, .ini_value = 40960U, .ini_mode = 0}, {.ini_register = (unsigned short)38972U, .ini_value = 2098176U, .ini_mode = 0}, {.ini_register = (unsigned short)38988U, .ini_value = 310649660U, .ini_mode = 0}, {.ini_register = (unsigned short)39024U, .ini_value = 31U, .ini_mode = 0}, {.ini_register = (unsigned short)39028U, .ini_value = 128U, .ini_mode = 0}, {.ini_register = (unsigned short)39032U, .ini_value = 14U, .ini_mode = 0}, {.ini_register = (unsigned short)39256U, .ini_value = 532479U, .ini_mode = 0}, {.ini_register = (unsigned short)39296U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39300U, .ini_value = 41943040U, .ini_mode = 0}, {.ini_register = (unsigned short)39328U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39388U, .ini_value = 4273658856U, .ini_mode = 0}, {.ini_register = (unsigned short)39392U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39396U, .ini_value = 2863311530U, .ini_mode = 0}, {.ini_register = (unsigned short)39400U, .ini_value = 1011246200U, .ini_mode = 0}, {.ini_register = (unsigned short)39404U, .ini_value = 170U, .ini_mode = 0}, {.ini_register = (unsigned short)39408U, .ini_value = 12U, .ini_mode = 0}, {.ini_register = (unsigned short)39412U, .ini_value = 255U, .ini_mode = 0}, {.ini_register = (unsigned short)39416U, .ini_value = 20U, .ini_mode = 0}, {.ini_register = (unsigned short)41512U, .ini_value = 2485U, .ini_mode = 0}, {.ini_register = (unsigned short)41524U, .ini_value = 538976288U, .ini_mode = 0}, {.ini_register = (unsigned short)41528U, .ini_value = 538976288U, .ini_mode = 0}, {.ini_register = (unsigned short)41532U, .ini_value = 2479393199U, .ini_mode = 0}, {.ini_register = (unsigned short)41548U, .ini_value = 1U, .ini_mode = 0}, {.ini_register = (unsigned short)41552U, .ini_value = 40960U, .ini_mode = 0}, {.ini_register = (unsigned short)41556U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)41560U, .ini_value = 214389632U, .ini_mode = 0}, {.ini_register = (unsigned short)41564U, .ini_value = 252645121U, .ini_mode = 0}, {.ini_register = (unsigned short)41568U, .ini_value = 1600720641U, .ini_mode = 0}, {.ini_register = (unsigned short)41572U, .ini_value = 4295185U, .ini_mode = 0}, {.ini_register = (unsigned short)41576U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)41580U, .ini_value = 204521830U, .ini_mode = 0}, {.ini_register = (unsigned short)41584U, .ini_value = 8521760U, .ini_mode = 0}, {.ini_register = (unsigned short)41588U, .ini_value = 135937194U, .ini_mode = 0}, {.ini_register = (unsigned short)41592U, .ini_value = 484915662U, .ini_mode = 0}, {.ini_register = (unsigned short)41596U, .ini_value = 85393870U, .ini_mode = 0}, {.ini_register = (unsigned short)41728U, .ini_value = 369164288U, .ini_mode = 0}, {.ini_register = (unsigned short)41732U, .ini_value = 738403330U, .ini_mode = 0}, {.ini_register = (unsigned short)41736U, .ini_value = 1212366402U, .ini_mode = 0}, {.ini_register = (unsigned short)41740U, .ini_value = 1510952971U, .ini_mode = 0}, {.ini_register = (unsigned short)41744U, .ini_value = 1816879690U, .ini_mode = 0}, {.ini_register = (unsigned short)41748U, .ini_value = 2123068554U, .ini_mode = 0}, {.ini_register = (unsigned short)41752U, .ini_value = 2530184395U, .ini_mode = 0}, {.ini_register = (unsigned short)41756U, .ini_value = 2739903759U, .ini_mode = 0}, {.ini_register = (unsigned short)41760U, .ini_value = 2815403407U, .ini_mode = 0}, {.ini_register = (unsigned short)41800U, .ini_value = 1073741823U, .ini_mode = 0}, {.ini_register = (unsigned short)41804U, .ini_value = 1073741823U, .ini_mode = 0}, {.ini_register = (unsigned short)41808U, .ini_value = 1073741823U, .ini_mode = 0}, {.ini_register = (unsigned short)41812U, .ini_value = 262143U, .ini_mode = 0}, {.ini_register = (unsigned short)41816U, .ini_value = 2041096735U, .ini_mode = 0}, {.ini_register = (unsigned short)41820U, .ini_value = 107758095U, .ini_mode = 0}, {.ini_register = (unsigned short)41824U, .ini_value = 254288391U, .ini_mode = 0}, {.ini_register = (unsigned short)41828U, .ini_value = 392173189U, .ini_mode = 0}, {.ini_register = (unsigned short)41832U, .ini_value = 528486660U, .ini_mode = 0}, {.ini_register = (unsigned short)41836U, .ini_value = 933235715U, .ini_mode = 0}, {.ini_register = (unsigned short)41840U, .ini_value = 1069811843U, .ini_mode = 0}, {.ini_register = (unsigned short)41844U, .ini_value = 1472202755U, .ini_mode = 0}, {.ini_register = (unsigned short)41848U, .ini_value = 1607992962U, .ini_mode = 0}, {.ini_register = (unsigned short)41852U, .ini_value = 2145387650U, .ini_mode = 0}, {.ini_register = (unsigned short)41856U, .ini_value = 2134670266U, .ini_mode = 0}, {.ini_register = (unsigned short)41860U, .ini_value = 4080041968U, .ini_mode = 0}};

#line 1236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/initvals.c"
static struct ath5k_ini const rf5111_ini_bbgain[64U] = {{.ini_register = (unsigned short)39680U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39684U, .ini_value = 32U, .ini_mode = 0}, {.ini_register = (unsigned short)39688U, .ini_value = 16U, .ini_mode = 0}, {.ini_register = (unsigned short)39692U, .ini_value = 48U, .ini_mode = 0}, {.ini_register = (unsigned short)39696U, .ini_value = 8U, .ini_mode = 0}, {.ini_register = (unsigned short)39700U, .ini_value = 40U, .ini_mode = 0}, {.ini_register = (unsigned short)39704U, .ini_value = 4U, .ini_mode = 0}, {.ini_register = (unsigned short)39708U, .ini_value = 36U, .ini_mode = 0}, {.ini_register = (unsigned short)39712U, .ini_value = 20U, .ini_mode = 0}, {.ini_register = (unsigned short)39716U, .ini_value = 52U, .ini_mode = 0}, {.ini_register = (unsigned short)39720U, .ini_value = 12U, .ini_mode = 0}, {.ini_register = (unsigned short)39724U, .ini_value = 44U, .ini_mode = 0}, {.ini_register = (unsigned short)39728U, .ini_value = 2U, .ini_mode = 0}, {.ini_register = (unsigned short)39732U, .ini_value = 34U, .ini_mode = 0}, {.ini_register = (unsigned short)39736U, .ini_value = 18U, .ini_mode = 0}, {.ini_register = (unsigned short)39740U, .ini_value = 50U, .ini_mode = 0}, {.ini_register = (unsigned short)39744U, .ini_value = 10U, .ini_mode = 0}, {.ini_register = (unsigned short)39748U, .ini_value = 42U, .ini_mode = 0}, {.ini_register = (unsigned short)39752U, .ini_value = 6U, .ini_mode = 0}, {.ini_register = (unsigned short)39756U, .ini_value = 38U, .ini_mode = 0}, {.ini_register = (unsigned short)39760U, .ini_value = 22U, .ini_mode = 0}, {.ini_register = (unsigned short)39764U, .ini_value = 54U, .ini_mode = 0}, {.ini_register = (unsigned short)39768U, .ini_value = 14U, .ini_mode = 0}, {.ini_register = (unsigned short)39772U, .ini_value = 46U, .ini_mode = 0}, {.ini_register = (unsigned short)39776U, .ini_value = 1U, .ini_mode = 0}, {.ini_register = (unsigned short)39780U, .ini_value = 33U, .ini_mode = 0}, {.ini_register = (unsigned short)39784U, .ini_value = 17U, .ini_mode = 0}, {.ini_register = (unsigned short)39788U, .ini_value = 49U, .ini_mode = 0}, {.ini_register = (unsigned short)39792U, .ini_value = 9U, .ini_mode = 0}, {.ini_register = (unsigned short)39796U, .ini_value = 41U, .ini_mode = 0}, {.ini_register = (unsigned short)39800U, .ini_value = 5U, .ini_mode = 0}, {.ini_register = (unsigned short)39804U, .ini_value = 37U, .ini_mode = 0}, {.ini_register = (unsigned short)39808U, .ini_value = 21U, .ini_mode = 0}, {.ini_register = (unsigned short)39812U, .ini_value = 53U, .ini_mode = 0}, {.ini_register = (unsigned short)39816U, .ini_value = 13U, .ini_mode = 0}, {.ini_register = (unsigned short)39820U, .ini_value = 45U, .ini_mode = 0}, {.ini_register = (unsigned short)39824U, .ini_value = 3U, .ini_mode = 0}, {.ini_register = (unsigned short)39828U, .ini_value = 35U, .ini_mode = 0}, {.ini_register = (unsigned short)39832U, .ini_value = 19U, .ini_mode = 0}, {.ini_register = (unsigned short)39836U, .ini_value = 51U, .ini_mode = 0}, {.ini_register = (unsigned short)39840U, .ini_value = 11U, .ini_mode = 0}, {.ini_register = (unsigned short)39844U, .ini_value = 43U, .ini_mode = 0}, {.ini_register = (unsigned short)39848U, .ini_value = 43U, .ini_mode = 0}, {.ini_register = (unsigned short)39852U, .ini_value = 43U, .ini_mode = 0}, {.ini_register = (unsigned short)39856U, .ini_value = 43U, .ini_mode = 0}, {.ini_register = (unsigned short)39860U, .ini_value = 43U, .ini_mode = 0}, {.ini_register = (unsigned short)39864U, .ini_value = 43U, .ini_mode = 0}, {.ini_register = (unsigned short)39868U, .ini_value = 43U, .ini_mode = 0}, {.ini_register = (unsigned short)39872U, .ini_value = 43U, .ini_mode = 0}, {.ini_register = (unsigned short)39876U, .ini_value = 43U, .ini_mode = 0}, {.ini_register = (unsigned short)39880U, .ini_value = 43U, .ini_mode = 0}, {.ini_register = (unsigned short)39884U, .ini_value = 43U, .ini_mode = 0}, {.ini_register = (unsigned short)39888U, .ini_value = 43U, .ini_mode = 0}, {.ini_register = (unsigned short)39892U, .ini_value = 43U, .ini_mode = 0}, {.ini_register = (unsigned short)39896U, .ini_value = 43U, .ini_mode = 0}, {.ini_register = (unsigned short)39900U, .ini_value = 43U, .ini_mode = 0}, {.ini_register = (unsigned short)39904U, .ini_value = 43U, .ini_mode = 0}, {.ini_register = (unsigned short)39908U, .ini_value = 43U, .ini_mode = 0}, {.ini_register = (unsigned short)39912U, .ini_value = 43U, .ini_mode = 0}, {.ini_register = (unsigned short)39916U, .ini_value = 43U, .ini_mode = 0}, {.ini_register = (unsigned short)39920U, .ini_value = 43U, .ini_mode = 0}, {.ini_register = (unsigned short)39924U, .ini_value = 43U, .ini_mode = 0}, {.ini_register = (unsigned short)39928U, .ini_value = 2U, .ini_mode = 0}, {.ini_register = (unsigned short)39932U, .ini_value = 22U, .ini_mode = 0}};

#line 1304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/initvals.c"
static struct ath5k_ini const rf5112_ini_bbgain[64U] = {{.ini_register = (unsigned short)39680U, .ini_value = 0U, .ini_mode = 0}, {.ini_register = (unsigned short)39684U, .ini_value = 1U, .ini_mode = 0}, {.ini_register = (unsigned short)39688U, .ini_value = 2U, .ini_mode = 0}, {.ini_register = (unsigned short)39692U, .ini_value = 3U, .ini_mode = 0}, {.ini_register = (unsigned short)39696U, .ini_value = 4U, .ini_mode = 0}, {.ini_register = (unsigned short)39700U, .ini_value = 5U, .ini_mode = 0}, {.ini_register = (unsigned short)39704U, .ini_value = 8U, .ini_mode = 0}, {.ini_register = (unsigned short)39708U, .ini_value = 9U, .ini_mode = 0}, {.ini_register = (unsigned short)39712U, .ini_value = 10U, .ini_mode = 0}, {.ini_register = (unsigned short)39716U, .ini_value = 11U, .ini_mode = 0}, {.ini_register = (unsigned short)39720U, .ini_value = 12U, .ini_mode = 0}, {.ini_register = (unsigned short)39724U, .ini_value = 13U, .ini_mode = 0}, {.ini_register = (unsigned short)39728U, .ini_value = 16U, .ini_mode = 0}, {.ini_register = (unsigned short)39732U, .ini_value = 17U, .ini_mode = 0}, {.ini_register = (unsigned short)39736U, .ini_value = 18U, .ini_mode = 0}, {.ini_register = (unsigned short)39740U, .ini_value = 19U, .ini_mode = 0}, {.ini_register = (unsigned short)39744U, .ini_value = 20U, .ini_mode = 0}, {.ini_register = (unsigned short)39748U, .ini_value = 21U, .ini_mode = 0}, {.ini_register = (unsigned short)39752U, .ini_value = 24U, .ini_mode = 0}, {.ini_register = (unsigned short)39756U, .ini_value = 25U, .ini_mode = 0}, {.ini_register = (unsigned short)39760U, .ini_value = 26U, .ini_mode = 0}, {.ini_register = (unsigned short)39764U, .ini_value = 27U, .ini_mode = 0}, {.ini_register = (unsigned short)39768U, .ini_value = 28U, .ini_mode = 0}, {.ini_register = (unsigned short)39772U, .ini_value = 29U, .ini_mode = 0}, {.ini_register = (unsigned short)39776U, .ini_value = 32U, .ini_mode = 0}, {.ini_register = (unsigned short)39780U, .ini_value = 33U, .ini_mode = 0}, {.ini_register = (unsigned short)39784U, .ini_value = 34U, .ini_mode = 0}, {.ini_register = (unsigned short)39788U, .ini_value = 35U, .ini_mode = 0}, {.ini_register = (unsigned short)39792U, .ini_value = 36U, .ini_mode = 0}, {.ini_register = (unsigned short)39796U, .ini_value = 37U, .ini_mode = 0}, {.ini_register = (unsigned short)39800U, .ini_value = 40U, .ini_mode = 0}, {.ini_register = (unsigned short)39804U, .ini_value = 41U, .ini_mode = 0}, {.ini_register = (unsigned short)39808U, .ini_value = 42U, .ini_mode = 0}, {.ini_register = (unsigned short)39812U, .ini_value = 43U, .ini_mode = 0}, {.ini_register = (unsigned short)39816U, .ini_value = 44U, .ini_mode = 0}, {.ini_register = (unsigned short)39820U, .ini_value = 45U, .ini_mode = 0}, {.ini_register = (unsigned short)39824U, .ini_value = 48U, .ini_mode = 0}, {.ini_register = (unsigned short)39828U, .ini_value = 49U, .ini_mode = 0}, {.ini_register = (unsigned short)39832U, .ini_value = 50U, .ini_mode = 0}, {.ini_register = (unsigned short)39836U, .ini_value = 51U, .ini_mode = 0}, {.ini_register = (unsigned short)39840U, .ini_value = 52U, .ini_mode = 0}, {.ini_register = (unsigned short)39844U, .ini_value = 53U, .ini_mode = 0}, {.ini_register = (unsigned short)39848U, .ini_value = 53U, .ini_mode = 0}, {.ini_register = (unsigned short)39852U, .ini_value = 53U, .ini_mode = 0}, {.ini_register = (unsigned short)39856U, .ini_value = 53U, .ini_mode = 0}, {.ini_register = (unsigned short)39860U, .ini_value = 53U, .ini_mode = 0}, {.ini_register = (unsigned short)39864U, .ini_value = 53U, .ini_mode = 0}, {.ini_register = (unsigned short)39868U, .ini_value = 53U, .ini_mode = 0}, {.ini_register = (unsigned short)39872U, .ini_value = 53U, .ini_mode = 0}, {.ini_register = (unsigned short)39876U, .ini_value = 53U, .ini_mode = 0}, {.ini_register = (unsigned short)39880U, .ini_value = 53U, .ini_mode = 0}, {.ini_register = (unsigned short)39884U, .ini_value = 53U, .ini_mode = 0}, {.ini_register = (unsigned short)39888U, .ini_value = 53U, .ini_mode = 0}, {.ini_register = (unsigned short)39892U, .ini_value = 53U, .ini_mode = 0}, {.ini_register = (unsigned short)39896U, .ini_value = 53U, .ini_mode = 0}, {.ini_register = (unsigned short)39900U, .ini_value = 53U, .ini_mode = 0}, {.ini_register = (unsigned short)39904U, .ini_value = 53U, .ini_mode = 0}, {.ini_register = (unsigned short)39908U, .ini_value = 53U, .ini_mode = 0}, {.ini_register = (unsigned short)39912U, .ini_value = 53U, .ini_mode = 0}, {.ini_register = (unsigned short)39916U, .ini_value = 53U, .ini_mode = 0}, {.ini_register = (unsigned short)39920U, .ini_value = 53U, .ini_mode = 0}, {.ini_register = (unsigned short)39924U, .ini_value = 53U, .ini_mode = 0}, {.ini_register = (unsigned short)39928U, .ini_value = 16U, .ini_mode = 0}, {.ini_register = (unsigned short)39932U, .ini_value = 26U, .ini_mode = 0}};

#line 1380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/initvals.c"
static void ath5k_hw_ini_registers(struct ath5k_hw *ah, unsigned int size, struct ath5k_ini const *ini_regs, bool skip_pcu)
{
  unsigned int i;
  
#line 1386 
  i = 0U;
  
#line 1386 
  goto ldv_50445;
  ldv_50444: 
#line 1387 
  ;
  
#line 1389 
  if (((int)skip_pcu != 0 && (int)(ini_regs + i)->ini_register < 0) && (unsigned int)(ini_regs + i)->ini_register <= 36863U) 
    
#line 1392 
    goto ldv_50439; else ;
  
#line 1394 
  switch ((unsigned int)(ini_regs + i)->ini_mode) {
    case (unsigned int)1: 
#line 1395 
    ;
    
#line 1397 
    ath5k_hw_reg_read(ah,(unsigned short)((int)(ini_regs + i)->ini_register));
    
#line 1398 
    goto ldv_50441;
    case (unsigned int)0: 
#line 1399 
    ;
    default: 
#line 1400 
    ;
    
#line 1401 
    if ((i & 63U) != 0U) 
#line 1401 
                         __const_udelay(4295UL); else ;
    
#line 1402 
    ath5k_hw_reg_write(ah,(ini_regs + i)->ini_value,(unsigned short)((int)(ini_regs + i)->ini_register));
  }
  ldv_50441: 
#line 1405 
  ;
  ldv_50439: 
#line 1406 
  ;
  
#line 1386 
  i += 1U;
  ldv_50445: 
#line 1387 
  ;
  
#line 1386 
  if (i < size) 
#line 1388 
                goto ldv_50444; else 
#line 1391 
                                     goto ldv_50446;
  ldv_50446: 
#line 1392 
  ;
  
#line 1393 
  return;
}


#line 1416  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/initvals.c"
static void ath5k_hw_ini_mode_registers(struct ath5k_hw *ah, unsigned int size, struct ath5k_ini_mode const *ini_mode, u8 mode)
{
  unsigned int i;
  
#line 1422 
  i = 0U;
  
#line 1422 
  goto ldv_50455;
  ldv_50454: 
#line 1423 
  ;
  
#line 1423 
  if ((i & 63U) != 0U) 
#line 1423 
                       __const_udelay(4295UL); else ;
  
#line 1424 
  ath5k_hw_reg_write(ah,(ini_mode + i)->mode_value[(int)mode],(unsigned short)((int)(ini_mode + i)->mode_register));
  
#line 1422 
  i += 1U;
  ldv_50455: 
#line 1423 
  ;
  
#line 1422 
  if (i < size) 
#line 1424 
                goto ldv_50454; else 
#line 1427 
                                     goto ldv_50456;
  ldv_50456: 
#line 1428 
  ;
  
#line 1429 
  return;
}


#line 1440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/initvals.c"
int ath5k_hw_write_initvals(struct ath5k_hw *ah, u8 mode, bool skip_pcu)
{
  int __retres;
  
#line 1447 
  if (ah->ah_version == (unsigned int)AR5K_AR5212) {
    
#line 1450 
    ath5k_hw_ini_mode_registers(ah,24U,(struct ath5k_ini_mode const *)(& ar5212_ini_mode_start),(unsigned char)((int)mode));
    
#line 1457 
    ath5k_hw_ini_registers(ah,191U,(struct ath5k_ini const *)(& ar5212_ini_common_start),(_Bool)((bool)((int)skip_pcu) != 0));
    
#line 1461 
    switch ((unsigned int)ah->ah_radio) {
      u32 tmp;
      case (unsigned int)1: 
#line 1462 
      ;
      
#line 1464 
      ath5k_hw_ini_mode_registers(ah,14U,(struct ath5k_ini_mode const *)(& rf5111_ini_mode_end),(unsigned char)((int)mode));
      
#line 1468 
      ath5k_hw_ini_registers(ah,14U,(struct ath5k_ini const *)(& rf5111_ini_common_end),(_Bool)((bool)((int)skip_pcu) != 0));
      
#line 1473 
      ath5k_hw_ini_registers(ah,64U,(struct ath5k_ini const *)(& rf5111_ini_bbgain),(_Bool)((bool)((int)skip_pcu) != 0));
      
#line 1477 
      goto ldv_50478;
      case (unsigned int)2: 
#line 1478 
      ;
      
#line 1480 
      ath5k_hw_ini_mode_registers(ah,16U,(struct ath5k_ini_mode const *)(& rf5112_ini_mode_end),(unsigned char)((int)mode));
      
#line 1484 
      ath5k_hw_ini_registers(ah,11U,(struct ath5k_ini const *)(& rf5112_ini_common_end),(_Bool)((bool)((int)skip_pcu) != 0));
      
#line 1488 
      ath5k_hw_ini_registers(ah,64U,(struct ath5k_ini const *)(& rf5112_ini_bbgain),(_Bool)((bool)((int)skip_pcu) != 0));
      
#line 1492 
      goto ldv_50478;
      case (unsigned int)4: 
#line 1493 
      ;
      
#line 1495 
      ath5k_hw_ini_mode_registers(ah,30U,(struct ath5k_ini_mode const *)(& rf5413_ini_mode_end),(unsigned char)((int)mode));
      
#line 1499 
      ath5k_hw_ini_registers(ah,70U,(struct ath5k_ini const *)(& rf5413_ini_common_end),(_Bool)((bool)((int)skip_pcu) != 0));
      
#line 1503 
      ath5k_hw_ini_registers(ah,64U,(struct ath5k_ini const *)(& rf5112_ini_bbgain),(_Bool)((bool)((int)skip_pcu) != 0));
      
#line 1507 
      goto ldv_50478;
      case (unsigned int)5: 
#line 1508 
      ;
      case (unsigned int)3: 
#line 1509 
      ;
      
#line 1511 
      ath5k_hw_ini_mode_registers(ah,16U,(struct ath5k_ini_mode const *)(& rf2413_ini_mode_end),(unsigned char)((int)mode));
      
#line 1515 
      ath5k_hw_ini_registers(ah,81U,(struct ath5k_ini const *)(& rf2413_ini_common_end),(_Bool)((bool)((int)skip_pcu) != 0));
      
#line 1520 
      if (ah->ah_radio == (unsigned int)AR5K_RF2316) {
        
#line 1521 
        ath5k_hw_reg_write(ah,16384U,(unsigned short)38920);
        
#line 1523 
        ath5k_hw_reg_write(ah,136019114U,(unsigned short)41588);
      }
      else ;
      
#line 1527 
      ath5k_hw_ini_registers(ah,64U,(struct ath5k_ini const *)(& rf5112_ini_bbgain),(_Bool)((bool)((int)skip_pcu) != 0));
      
#line 1530 
      goto ldv_50478;
      case (unsigned int)6: 
#line 1531 
      ;
      
#line 1533 
      ath5k_hw_ini_mode_registers(ah,16U,(struct ath5k_ini_mode const *)(& rf2413_ini_mode_end),(unsigned char)((int)mode));
      
#line 1537 
      ath5k_hw_ini_registers(ah,77U,(struct ath5k_ini const *)(& rf2425_ini_common_end),(_Bool)((bool)((int)skip_pcu) != 0));
      
#line 1542 
      ath5k_hw_reg_write(ah,1575525U,(unsigned short)38984);
      
#line 1545 
      ath5k_hw_reg_write(ah,16384U,(unsigned short)38920);
      
#line 1546 
      tmp = ath5k_hw_reg_read(ah,(unsigned short)41580);
      
#line 1546 
      ;
      
#line 1546 
      ath5k_hw_reg_write(ah,(tmp & 4294967280U) | 10U,(unsigned short)41580);
      
#line 1548 
      ath5k_hw_reg_write(ah,2147483816U,(unsigned short)33088);
      
#line 1549 
      ath5k_hw_reg_write(ah,255U,(unsigned short)39256);
      
#line 1551 
      ath5k_hw_ini_registers(ah,64U,(struct ath5k_ini const *)(& rf5112_ini_bbgain),(_Bool)((bool)((int)skip_pcu) != 0));
      
#line 1554 
      goto ldv_50478;
      case (unsigned int)7: 
#line 1555 
      ;
      
#line 1557 
      ath5k_hw_ini_mode_registers(ah,22U,(struct ath5k_ini_mode const *)(& rf2425_ini_mode_end),(unsigned char)((int)mode));
      
#line 1561 
      ath5k_hw_ini_registers(ah,77U,(struct ath5k_ini const *)(& rf2425_ini_common_end),(_Bool)((bool)((int)skip_pcu) != 0));
      
#line 1565 
      ath5k_hw_ini_registers(ah,64U,(struct ath5k_ini const *)(& rf5112_ini_bbgain),(_Bool)((bool)((int)skip_pcu) != 0));
      
#line 1568 
      goto ldv_50478;
      default: 
#line 1569 
      ;
      
#line 1570 
      __retres = -22;
      
#line 1570 
      goto return_label;
    }
    ldv_50478: 
#line 1575 
    ;
  }
  else 
    
#line 1575 
    if (ah->ah_version == (unsigned int)AR5K_AR5211) {
      
#line 1578 
      if ((unsigned int)mode > 2U) {
        int tmp_0;
        
#line 1579 
        tmp_0 = net_ratelimit();
        
#line 1579 
        if (tmp_0 != 0) 
#line 1579 
                        _ath5k_printk((struct ath5k_hw const *)ah,"\001","unsupported channel mode: %d\n",(int)mode); else ;
        
#line 1580 
        __retres = -22;
        
#line 1580 
        goto return_label;
      }
      else ;
      
#line 1584 
      ath5k_hw_ini_mode_registers(ah,34U,(struct ath5k_ini_mode const *)(& ar5211_ini_mode),(unsigned char)((int)mode));
      
#line 1590 
      ath5k_hw_ini_registers(ah,116U,(struct ath5k_ini const *)(& ar5211_ini),(_Bool)((bool)((int)skip_pcu) != 0));
      
#line 1596 
      ath5k_hw_ini_registers(ah,64U,(struct ath5k_ini const *)(& rf5111_ini_bbgain),(_Bool)((bool)((int)skip_pcu) != 0));
    }
    else 
      
#line 1599 
      if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 1600 
                                                       ath5k_hw_ini_registers(ah,203U,(struct ath5k_ini const *)(& ar5210_ini),(_Bool)((bool)((int)skip_pcu) != 0)); else ;
  
#line 1604 
  __retres = 0;
  return_label: 
#line 1604 
                return __retres;
}


#line 355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh_1(spinlock_t *lock)
{
  
#line 357 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 358 
  return;
}


#line 383 
static void ldv_spin_lock_bh_72_0(spinlock_t *lock);


#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh_1(spinlock_t *lock)
{
  
#line 406 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 407 
  return;
}


#line 432 
static void ldv_spin_unlock_bh_73_0(spinlock_t *lock);


#line 540  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static void ldv_tasklet_schedule_74(struct tasklet_struct *t);


#line 544 
static void ldv_tasklet_schedule_75(struct tasklet_struct *t);


#line 548 
static void ldv_tasklet_schedule_76(struct tasklet_struct *t);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/average.h"
__inline static unsigned long ewma_read(struct ewma const *avg)
{
  unsigned long __retres;
  
#line 27 
  __retres = avg->internal >> avg->factor;
  
#line 27 
  return __retres;
}


#line 209  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath.h"
int32_t ath_hw_get_listen_time(struct ath_common *);


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ani.h"
void ath5k_ani_set_noise_immunity_level(struct ath5k_hw *ah, int level);


#line 112 
void ath5k_ani_set_spur_immunity_level(struct ath5k_hw *ah, int level);


#line 113 
void ath5k_ani_set_firstep_level(struct ath5k_hw *ah, int level);


#line 114 
void ath5k_ani_set_ofdm_weak_signal_detection(struct ath5k_hw *ah, bool on);


#line 115 
void ath5k_ani_set_cck_weak_signal_detection(struct ath5k_hw *ah, bool on);


#line 117 
void ath5k_ani_print_counters(struct ath5k_hw *ah);


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ani.c"
void ath5k_ani_set_noise_immunity_level(struct ath5k_hw *ah, int level)
{
  u32 tmp_0;
  u32 tmp_1;
  u32 tmp_2;
  u32 tmp_3;
  
#line 80 
  s8 const lo[2U] = {(signed char)(-64), (signed char)(-70)};
  
#line 81 
  s8 const hi[2U] = {(signed char)(-14), (signed char)(-12)};
  
#line 82 
  s8 const sz[2U] = {(signed char)(-55), (signed char)(-62)};
  
#line 83 
  s8 const fr[2U] = {(signed char)(-78), (signed char)(-80)};
  
#line 85 
  if ((unsigned int)level > 1U) {
    int tmp;
    
#line 86 
    tmp = net_ratelimit();
    
#line 86 
    if (tmp != 0) 
#line 86 
                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","noise immunity level %d out of range",level); else ;
    
#line 88 
    goto return_label;
  }
  else ;
  
#line 91 
  tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)38992);
  
#line 91 
  ;
  
#line 91 
  ;
  
#line 91 
  ath5k_hw_reg_write(ah,(tmp_0 & 4027580415U) | ((unsigned int)((int)sz[level] << 20) & 267386880U),(unsigned short)38992);
  
#line 93 
  tmp_1 = ath5k_hw_reg_read(ah,(unsigned short)39004);
  
#line 93 
  ;
  
#line 93 
  ;
  
#line 93 
  ath5k_hw_reg_write(ah,(tmp_1 & 4294934655U) | ((unsigned int)((int)lo[level] << 7) & 32640U),(unsigned short)39004);
  
#line 95 
  tmp_2 = ath5k_hw_reg_read(ah,(unsigned short)39004);
  
#line 95 
  ;
  
#line 95 
  ;
  
#line 95 
  ath5k_hw_reg_write(ah,(tmp_2 & 4290805759U) | ((unsigned int)((int)hi[level] << 15) & 4161536U),(unsigned short)39004);
  
#line 97 
  tmp_3 = ath5k_hw_reg_read(ah,(unsigned short)39000);
  
#line 97 
  ;
  
#line 97 
  ;
  
#line 97 
  ath5k_hw_reg_write(ah,(tmp_3 & 4228120575U) | ((unsigned int)((int)fr[level] << 18) & 66846720U),(unsigned short)39000);
  
#line 100 
  ah->ani_state.noise_imm_level = level;
  
#line 101 
  if ((long)((ah->debug.level & 8192U) != 0U) != 0L) 
#line 101 
                                                     _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_ani_set_noise_immunity_level",101,level); else ;
  return_label: 
#line 102 
                return;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ani.c"
void ath5k_ani_set_spur_immunity_level(struct ath5k_hw *ah, int level)
{
  u32 tmp_0;
  
#line 113 
  int const val[8U] = {2, 4, 6, 8, 10, 12, 14, 16};
  
#line 115 
  if ((unsigned int)level > 7U || ah->ani_state.max_spur_level < level) {
    int tmp;
    
#line 117 
    tmp = net_ratelimit();
    
#line 117 
    if (tmp != 0) 
#line 117 
                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","spur immunity level %d out of range",level); else ;
    
#line 119 
    goto return_label;
  }
  else ;
  
#line 122 
  tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)39204);
  
#line 122 
  ;
  
#line 122 
  ;
  
#line 122 
  ath5k_hw_reg_write(ah,(tmp_0 & 4294967041U) | ((unsigned int)(val[level] << 1) & 255U),(unsigned short)39204);
  
#line 125 
  ah->ani_state.spur_level = level;
  
#line 126 
  if ((long)((ah->debug.level & 8192U) != 0U) != 0L) 
#line 126 
                                                     _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_ani_set_spur_immunity_level",126,level); else ;
  return_label: 
#line 127 
                return;
}


#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ani.c"
void ath5k_ani_set_firstep_level(struct ath5k_hw *ah, int level)
{
  u32 tmp_0;
  
#line 137 
  int const val[3U] = {0, 4, 8};
  
#line 139 
  if ((unsigned int)level > 2U) {
    int tmp;
    
#line 140 
    tmp = net_ratelimit();
    
#line 140 
    if (tmp != 0) 
#line 140 
                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","firstep level %d out of range",level); else ;
    
#line 141 
    goto return_label;
  }
  else ;
  
#line 144 
  tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)39000);
  
#line 144 
  ;
  
#line 144 
  ;
  
#line 144 
  ath5k_hw_reg_write(ah,(tmp_0 & 4294709247U) | ((unsigned int)(val[level] << 12) & 258048U),(unsigned short)39000);
  
#line 147 
  ah->ani_state.firstep_level = level;
  
#line 148 
  if ((long)((ah->debug.level & 8192U) != 0U) != 0L) 
#line 148 
                                                     _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_ani_set_firstep_level",148,level); else ;
  return_label: 
#line 149 
                return;
}


#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ani.c"
void ath5k_ani_set_ofdm_weak_signal_detection(struct ath5k_hw *ah, bool on)
{
  u32 tmp;
  u32 tmp_0;
  u32 tmp_1;
  u32 tmp_2;
  u32 tmp_3;
  u32 tmp_4;
  
#line 159 
  int const m1l[2U] = {127, 50};
  
#line 160 
  int const m2l[2U] = {127, 40};
  
#line 161 
  int const m1[2U] = {127, 77};
  
#line 162 
  int const m2[2U] = {127, 64};
  
#line 163 
  int const m2cnt[2U] = {31, 16};
  
#line 164 
  int const m2lcnt[2U] = {63, 48};
  
#line 166 
  tmp = ath5k_hw_reg_read(ah,(unsigned short)39020);
  
#line 166 
  ;
  
#line 166 
  ;
  
#line 166 
  ath5k_hw_reg_write(ah,(tmp & 4292886527U) | ((unsigned int)(m1l[(int)on] << 14) & 2080768U),(unsigned short)39020);
  
#line 168 
  tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)39020);
  
#line 168 
  ;
  
#line 168 
  ;
  
#line 168 
  ath5k_hw_reg_write(ah,(tmp_0 & 4028628991U) | ((unsigned int)(m2l[(int)on] << 21) & 266338304U),(unsigned short)39020);
  
#line 170 
  tmp_1 = ath5k_hw_reg_read(ah,(unsigned short)39016);
  
#line 170 
  ;
  
#line 170 
  ;
  
#line 170 
  ath5k_hw_reg_write(ah,(tmp_1 & 4278321151U) | ((unsigned int)(m1[(int)on] << 17) & 16646144U),(unsigned short)39016);
  
#line 172 
  tmp_2 = ath5k_hw_reg_read(ah,(unsigned short)39016);
  
#line 172 
  ;
  
#line 172 
  ;
  
#line 172 
  ath5k_hw_reg_write(ah,(tmp_2 & 2164260863U) | ((unsigned int)(m2[(int)on] << 24) & 2130706432U),(unsigned short)39016);
  
#line 174 
  tmp_3 = ath5k_hw_reg_read(ah,(unsigned short)39016);
  
#line 174 
  ;
  
#line 174 
  ;
  
#line 174 
  ath5k_hw_reg_write(ah,(tmp_3 & 4294967264U) | ((unsigned int)m2cnt[(int)on] & 31U),(unsigned short)39016);
  
#line 176 
  tmp_4 = ath5k_hw_reg_read(ah,(unsigned short)39020);
  
#line 176 
  ;
  
#line 176 
  ;
  
#line 176 
  ath5k_hw_reg_write(ah,(tmp_4 & 4294951167U) | ((unsigned int)(m2lcnt[(int)on] << 8) & 16128U),(unsigned short)39020);
  
#line 179 
  if ((int)on != 0) {
    u32 tmp_5;
    
#line 180 
    tmp_5 = ath5k_hw_reg_read(ah,(unsigned short)39020);
    
#line 180 
    ;
    
#line 180 
    ath5k_hw_reg_write(ah,tmp_5 | 1U,(unsigned short)39020);
  }
  else {
    u32 tmp_6;
    
#line 183 
    tmp_6 = ath5k_hw_reg_read(ah,(unsigned short)39020);
    
#line 183 
    ;
    
#line 183 
    ath5k_hw_reg_write(ah,tmp_6 & 4294967294U,(unsigned short)39020);
  }
  
#line 186 
  ah->ani_state.ofdm_weak_sig = on;
  
#line 187 
  if ((long)((ah->debug.level & 8192U) != 0U) != 0L) {
    char *tmp_7;
    
#line 187 
    if ((int)on != 0) 
#line 187 
                      tmp_7 = (char *)"on"; else 
#line 187 
                                                 tmp_7 = (char *)"off";
    
#line 187 
    ;
    
#line 187 
    _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_ani_set_ofdm_weak_signal_detection",188,tmp_7);
  }
  else ;
  
#line 188 
  return;
}


#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ani.c"
void ath5k_ani_set_cck_weak_signal_detection(struct ath5k_hw *ah, bool on)
{
  u32 tmp;
  
#line 199 
  int const val[2U] = {8, 6};
  
#line 200 
  tmp = ath5k_hw_reg_read(ah,(unsigned short)41480);
  
#line 200 
  ;
  
#line 200 
  ;
  
#line 200 
  ath5k_hw_reg_write(ah,(tmp & 4294967232U) | ((unsigned int)val[(int)on] & 63U),(unsigned short)41480);
  
#line 202 
  ah->ani_state.cck_weak_sig = on;
  
#line 203 
  if ((long)((ah->debug.level & 8192U) != 0U) != 0L) {
    char *tmp_0;
    
#line 203 
    if ((int)on != 0) 
#line 203 
                      tmp_0 = (char *)"on"; else 
#line 203 
                                                 tmp_0 = (char *)"off";
    
#line 203 
    ;
    
#line 203 
    _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_ani_set_cck_weak_signal_detection",204,tmp_0);
  }
  else ;
  
#line 204 
  return;
}


#line 223  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ani.c"
static void ath5k_ani_raise_immunity(struct ath5k_hw *ah, struct ath5k_ani_state *as, bool ofdm_trigger)
{
  unsigned long tmp;
  
#line 226 
  tmp = ewma_read((struct ewma const *)(& ah->ah_beacon_rssi_avg));
  
#line 226 
  int rssi = (int)tmp;
  
#line 228 
  if ((long)((ah->debug.level & 8192U) != 0U) != 0L) {
    char *tmp_0;
    
#line 228 
    if ((int)ofdm_trigger != 0) 
#line 228 
                                tmp_0 = (char *)"ODFM"; else 
#line 228 
                                                             tmp_0 = (char *)"CCK";
    
#line 228 
    ;
    
#line 228 
    _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_ani_raise_immunity",229,tmp_0);
  }
  else ;
  
#line 232 
  if (as->noise_imm_level <= 0) {
    
#line 233 
    ath5k_ani_set_noise_immunity_level(ah,as->noise_imm_level + 1);
    
#line 234 
    goto return_label;
  }
  else ;
  
#line 238 
  if ((int)ofdm_trigger != 0 && as->spur_level < ah->ani_state.max_spur_level) {
    
#line 240 
    ath5k_ani_set_spur_immunity_level(ah,as->spur_level + 1);
    
#line 241 
    goto return_label;
  }
  else ;
  
#line 245 
  if (ah->opmode == (unsigned int)NL80211_IFTYPE_AP) {
    
#line 246 
    if (as->firstep_level <= 1) 
#line 247 
                                ath5k_ani_set_firstep_level(ah,as->firstep_level + 1); else ;
    
#line 248 
    goto return_label;
  }
  else ;
  
#line 257 
  if (rssi > 40) {
    
#line 258 
    if ((long)((ah->debug.level & 8192U) != 0U) != 0L) 
#line 258 
                                                       _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_ani_raise_immunity",259); else ;
    
#line 262 
    if ((int)ofdm_trigger != 0 && (int)as->ofdm_weak_sig != 0) {
      
#line 263 
      ath5k_ani_set_ofdm_weak_signal_detection(ah,(_Bool)0);
      
#line 264 
      ath5k_ani_set_spur_immunity_level(ah,0);
      
#line 265 
      goto return_label;
    }
    else ;
    
#line 268 
    if (as->firstep_level <= 1) {
      
#line 269 
      ath5k_ani_set_firstep_level(ah,as->firstep_level + 1);
      
#line 270 
      goto return_label;
    }
    else ;
  }
  else 
    
#line 272 
    if (rssi > 7) {
      
#line 275 
      if ((long)((ah->debug.level & 8192U) != 0U) != 0L) 
#line 275 
                                                         _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_ani_raise_immunity",276); else ;
      
#line 277 
      if ((int)ofdm_trigger != 0 && ! as->ofdm_weak_sig) 
#line 278 
                                                         ath5k_ani_set_ofdm_weak_signal_detection(ah,(_Bool)1); else ;
      
#line 279 
      if (as->firstep_level <= 1) 
#line 280 
                                  ath5k_ani_set_firstep_level(ah,as->firstep_level + 1); else ;
      
#line 281 
      goto return_label;
    }
    else 
      
#line 282 
      if ((ah->ah_current_channel)->band == (unsigned int)IEEE80211_BAND_2GHZ) {
        
#line 285 
        if ((long)((ah->debug.level & 8192U) != 0U) != 0L) 
#line 285 
                                                           _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_ani_raise_immunity",286); else ;
        
#line 287 
        if ((int)ofdm_trigger != 0 && (int)as->ofdm_weak_sig != 0) 
#line 288 
                                                                   ath5k_ani_set_ofdm_weak_signal_detection(ah,(_Bool)0); else ;
        
#line 289 
        if (as->firstep_level > 0) 
#line 290 
                                   ath5k_ani_set_firstep_level(ah,0); else ;
        
#line 291 
        goto return_label;
      }
      else ;
  return_label: 
#line 293 
                return;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ani.c"
static void ath5k_ani_lower_immunity(struct ath5k_hw *ah, struct ath5k_ani_state *as)
{
  unsigned long tmp;
  
#line 312 
  tmp = ewma_read((struct ewma const *)(& ah->ah_beacon_rssi_avg));
  
#line 312 
  int rssi = (int)tmp;
  
#line 314 
  if ((long)((ah->debug.level & 8192U) != 0U) != 0L) 
#line 314 
                                                     _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_ani_lower_immunity",314); else ;
  
#line 316 
  if (ah->opmode == (unsigned int)NL80211_IFTYPE_AP) {
    
#line 318 
    if (as->firstep_level > 0) {
      
#line 319 
      ath5k_ani_set_firstep_level(ah,as->firstep_level + -1);
      
#line 320 
      goto return_label;
    }
    else ;
  }
  else 
    
#line 324 
    if (rssi > 40) ;
    else 
      
#line 328 
      if (rssi > 7) {
        
#line 331 
        if (! as->ofdm_weak_sig) {
          
#line 332 
          ath5k_ani_set_ofdm_weak_signal_detection(ah,(_Bool)1);
          
#line 334 
          goto return_label;
        }
        else ;
        
#line 336 
        if (as->firstep_level > 0) {
          
#line 337 
          ath5k_ani_set_firstep_level(ah,as->firstep_level + -1);
          
#line 339 
          goto return_label;
        }
        else ;
      }
      else 
        
#line 343 
        if (as->firstep_level > 0) {
          
#line 344 
          ath5k_ani_set_firstep_level(ah,as->firstep_level + -1);
          
#line 346 
          goto return_label;
        }
        else ;
  
#line 352 
  if (as->spur_level > 0) {
    
#line 353 
    ath5k_ani_set_spur_immunity_level(ah,as->spur_level + -1);
    
#line 354 
    goto return_label;
  }
  else ;
  
#line 358 
  if (as->noise_imm_level > 0) {
    
#line 359 
    ath5k_ani_set_noise_immunity_level(ah,as->noise_imm_level + -1);
    
#line 360 
    goto return_label;
  }
  else ;
  return_label: 
#line 362 
                return;
}


#line 374  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ani.c"
static int ath5k_hw_ani_get_listen_time(struct ath5k_hw *ah, struct ath5k_ani_state *as)
{
  int listen;
  
#line 376 
  struct ath_common *common = ath5k_hw_common(ah);
  
#line 379 
  ldv_spin_lock_bh_72_0(& common->cc_lock);
  
#line 381 
  ath_hw_cycle_counters_update(common);
  
#line 382 
  memcpy((void *)(& as->last_cc),(void const *)(& common->cc_ani),16UL);
  
#line 385 
  listen = ath_hw_get_listen_time(common);
  
#line 387 
  ldv_spin_unlock_bh_73_0(& common->cc_lock);
  
#line 389 
  return listen;
}


#line 406  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ani.c"
static int ath5k_ani_save_and_clear_phy_errors(struct ath5k_hw *ah, struct ath5k_ani_state *as)
{
  int __retres;
  unsigned int ofdm_err;
  unsigned int cck_err;
  
#line 411 
  if (! ah->ah_capabilities.cap_has_phyerr_counters) {
    
#line 412 
    __retres = 0;
    
#line 412 
    goto return_label;
  }
  else ;
  
#line 414 
  ofdm_err = ath5k_hw_reg_read(ah,(unsigned short)33068);
  
#line 415 
  cck_err = ath5k_hw_reg_read(ah,(unsigned short)33076);
  
#line 418 
  ath5k_hw_reg_write(ah,12582412U,(unsigned short)33068);
  
#line 420 
  ath5k_hw_reg_write(ah,12582712U,(unsigned short)33076);
  
#line 423 
  ofdm_err += 4282384884U;
  
#line 424 
  cck_err += 4282384584U;
  
#line 428 
  if (ofdm_err == 0U && cck_err == 0U) {
    
#line 429 
    __retres = 0;
    
#line 429 
    goto return_label;
  }
  else ;
  
#line 432 
  if (ofdm_err != 0U) {
    
#line 433 
    as->ofdm_errors += ofdm_err;
    
#line 434 
    as->sum_ofdm_errors += ofdm_err;
  }
  else ;
  
#line 436 
  if (cck_err != 0U) {
    
#line 437 
    as->cck_errors += cck_err;
    
#line 438 
    as->sum_cck_errors += cck_err;
  }
  else ;
  
#line 440 
  __retres = 1;
  return_label: 
#line 440 
                return __retres;
}


#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ani.c"
static void ath5k_ani_period_restart(struct ath5k_ani_state *as)
{
  
#line 453 
  as->last_ofdm_errors = as->ofdm_errors;
  
#line 454 
  as->last_cck_errors = as->cck_errors;
  
#line 455 
  as->last_listen = as->listen_time;
  
#line 457 
  as->ofdm_errors = 0U;
  
#line 458 
  as->cck_errors = 0U;
  
#line 459 
  as->listen_time = 0U;
  
#line 460 
  return;
}


#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ani.c"
void ath5k_ani_calibration(struct ath5k_hw *ah)
{
  int listen;
  int ofdm_high;
  int ofdm_low;
  int cck_high;
  int cck_low;
  
#line 477 
  struct ath5k_ani_state *as = & ah->ani_state;
  
#line 483 
  listen = ath5k_hw_ani_get_listen_time(ah,as);
  
#line 484 
  as->listen_time += (unsigned int)listen;
  
#line 486 
  if (as->ani_mode != (unsigned int)ATH5K_ANI_MODE_AUTO) 
#line 487 
                                                         goto return_label; else ;
  
#line 489 
  ath5k_ani_save_and_clear_phy_errors(ah,as);
  
#line 491 
  ofdm_high = (int)((as->listen_time * 500U) / 1000U);
  
#line 492 
  cck_high = (int)((as->listen_time * 200U) / 1000U);
  
#line 493 
  ofdm_low = (int)((as->listen_time * 200U) / 1000U);
  
#line 494 
  cck_low = (int)((as->listen_time * 100U) / 1000U);
  
#line 496 
  if ((long)((ah->debug.level & 8192U) != 0U) != 0L) 
#line 496 
                                                     _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_ani_calibration",497,as->listen_time,listen); else ;
  
#line 498 
  if ((long)((ah->debug.level & 8192U) != 0U) != 0L) 
#line 498 
                                                     _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_ani_calibration",500,as->ofdm_errors,ofdm_high,as->cck_errors,cck_high); else ;
  
#line 502 
  if (as->ofdm_errors > (unsigned int)ofdm_high || as->cck_errors > (unsigned int)cck_high) {
    
#line 504 
    bool ofdm_flag = (_Bool)(as->ofdm_errors > (unsigned int)ofdm_high);
    
#line 505 
    ath5k_ani_raise_immunity(ah,as,(_Bool)((bool)((int)ofdm_flag) != 0));
    
#line 506 
    ath5k_ani_period_restart(as);
  }
  else 
    
#line 508 
    if (as->listen_time > 500U) {
      
#line 511 
      if ((long)((ah->debug.level & 8192U) != 0U) != 0L) 
#line 511 
                                                         _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_ani_calibration",513,as->ofdm_errors,ofdm_low,as->cck_errors,cck_low); else ;
      
#line 515 
      if (as->ofdm_errors <= (unsigned int)ofdm_low && as->cck_errors <= (unsigned int)cck_low) 
        
#line 516 
        ath5k_ani_lower_immunity(ah,as); else ;
      
#line 518 
      ath5k_ani_period_restart(as);
    }
    else ;
  return_label: 
#line 520 
                return;
}


#line 539  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ani.c"
void ath5k_ani_mib_intr(struct ath5k_hw *ah)
{
  int tmp;
  
#line 541 
  struct ath5k_ani_state *as = & ah->ani_state;
  
#line 545 
  if (! ah->ah_capabilities.cap_has_phyerr_counters) 
#line 546 
                                                     goto return_label; else ;
  
#line 549 
  ath5k_hw_reg_write(ah,0U,(unsigned short)33060);
  
#line 550 
  ath5k_hw_reg_write(ah,0U,(unsigned short)33064);
  
#line 552 
  if (ah->ani_state.ani_mode != (unsigned int)ATH5K_ANI_MODE_AUTO) 
#line 553 
                                                                   goto return_label; else ;
  
#line 558 
  tmp = ath5k_ani_save_and_clear_phy_errors(ah,as);
  
#line 558 
  if (tmp == 0) 
#line 559 
                goto return_label; else ;
  
#line 561 
  if (as->ofdm_errors > 500U || as->cck_errors > 200U) 
#line 563 
                                                       ldv_tasklet_schedule_74(& ah->ani_tasklet); else ;
  return_label: 
#line 564 
                return;
}


#line 576  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ani.c"
void ath5k_ani_phy_error_report(struct ath5k_hw *ah, enum ath5k_phy_error_code phyerr)
{
  
#line 579 
  struct ath5k_ani_state *as = & ah->ani_state;
  
#line 581 
  if (phyerr == (unsigned int)AR5K_RX_PHY_ERROR_OFDM_TIMING) {
    
#line 582 
    as->ofdm_errors += 1U;
    
#line 583 
    if (as->ofdm_errors > 500U) 
#line 584 
                                ldv_tasklet_schedule_75(& ah->ani_tasklet); else ;
  }
  else 
    
#line 585 
    if (phyerr == (unsigned int)AR5K_RX_PHY_ERROR_CCK_TIMING) {
      
#line 586 
      as->cck_errors += 1U;
      
#line 587 
      if (as->cck_errors > 200U) 
#line 588 
                                 ldv_tasklet_schedule_76(& ah->ani_tasklet); else ;
    }
    else ;
  
#line 590 
  return;
}


#line 604  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ani.c"
static void ath5k_enable_phy_err_counters(struct ath5k_hw *ah)
{
  
#line 606 
  ath5k_hw_reg_write(ah,12582412U,(unsigned short)33068);
  
#line 608 
  ath5k_hw_reg_write(ah,12582712U,(unsigned short)33076);
  
#line 610 
  ath5k_hw_reg_write(ah,131072U,(unsigned short)33072);
  
#line 611 
  ath5k_hw_reg_write(ah,33554432U,(unsigned short)33080);
  
#line 614 
  ath5k_hw_reg_write(ah,0U,(unsigned short)33060);
  
#line 615 
  ath5k_hw_reg_write(ah,0U,(unsigned short)33064);
  
#line 616 
  return;
}


#line 625  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ani.c"
static void ath5k_disable_phy_err_counters(struct ath5k_hw *ah)
{
  
#line 627 
  ath5k_hw_reg_write(ah,0U,(unsigned short)33068);
  
#line 628 
  ath5k_hw_reg_write(ah,0U,(unsigned short)33076);
  
#line 629 
  ath5k_hw_reg_write(ah,0U,(unsigned short)33072);
  
#line 630 
  ath5k_hw_reg_write(ah,0U,(unsigned short)33080);
  
#line 633 
  ath5k_hw_reg_write(ah,0U,(unsigned short)33060);
  
#line 634 
  ath5k_hw_reg_write(ah,0U,(unsigned short)33064);
  
#line 635 
  return;
}


#line 645  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ani.c"
void ath5k_ani_init(struct ath5k_hw *ah, enum ath5k_ani_mode mode)
{
  
#line 648 
  if (ah->ah_version <= (unsigned int)AR5K_AR5211) 
#line 649 
                                                   goto return_label; else ;
  
#line 651 
  if (mode > (unsigned int)ATH5K_ANI_MODE_AUTO) {
    int tmp;
    
#line 652 
    tmp = net_ratelimit();
    
#line 652 
    if (tmp != 0) 
#line 652 
                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","ANI mode %d out of range",(unsigned int)mode); else ;
    
#line 653 
    goto return_label;
  }
  else ;
  
#line 657 
  memset((void *)(& ah->ani_state),0,72UL);
  
#line 660 
  if (ah->ah_mac_srev <= 111U) 
#line 661 
                               ah->ani_state.max_spur_level = 7; else 
                                                                   
#line 663 
                                                                   ah->ani_state.max_spur_level = 2;
  
#line 666 
  if (mode == (unsigned int)ATH5K_ANI_MODE_OFF) {
    
#line 667 
    if ((long)((ah->debug.level & 8192U) != 0U) != 0L) 
#line 667 
                                                       _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_ani_init",667); else ;
  }
  else 
    
#line 668 
    if (mode == (unsigned int)ATH5K_ANI_MODE_MANUAL_LOW) {
      
#line 669 
      if ((long)((ah->debug.level & 8192U) != 0U) != 0L) 
#line 669 
                                                         _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_ani_init",670); else ;
      
#line 671 
      ath5k_ani_set_noise_immunity_level(ah,0);
      
#line 672 
      ath5k_ani_set_spur_immunity_level(ah,0);
      
#line 673 
      ath5k_ani_set_firstep_level(ah,0);
      
#line 674 
      ath5k_ani_set_ofdm_weak_signal_detection(ah,(_Bool)1);
      
#line 675 
      ath5k_ani_set_cck_weak_signal_detection(ah,(_Bool)1);
    }
    else 
      
#line 676 
      if (mode == (unsigned int)ATH5K_ANI_MODE_MANUAL_HIGH) {
        
#line 677 
        if ((long)((ah->debug.level & 8192U) != 0U) != 0L) 
#line 677 
                                                           _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_ani_init",678); else ;
        
#line 679 
        ath5k_ani_set_noise_immunity_level(ah,1);
        
#line 681 
        ath5k_ani_set_spur_immunity_level(ah,ah->ani_state.max_spur_level);
        
#line 683 
        ath5k_ani_set_firstep_level(ah,2);
        
#line 684 
        ath5k_ani_set_ofdm_weak_signal_detection(ah,(_Bool)0);
        
#line 685 
        ath5k_ani_set_cck_weak_signal_detection(ah,(_Bool)0);
      }
      else 
        
#line 686 
        if (mode == (unsigned int)ATH5K_ANI_MODE_AUTO) {
          
#line 687 
          if ((long)((ah->debug.level & 8192U) != 0U) != 0L) 
#line 687 
                                                             _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_ani_init",687); else ;
          
#line 688 
          ath5k_ani_set_noise_immunity_level(ah,0);
          
#line 689 
          ath5k_ani_set_spur_immunity_level(ah,0);
          
#line 690 
          ath5k_ani_set_firstep_level(ah,0);
          
#line 691 
          ath5k_ani_set_ofdm_weak_signal_detection(ah,(_Bool)1);
          
#line 692 
          ath5k_ani_set_cck_weak_signal_detection(ah,(_Bool)0);
        }
        else ;
  
#line 699 
  if (mode == (unsigned int)ATH5K_ANI_MODE_AUTO) 
    
#line 700 
    if ((int)ah->ah_capabilities.cap_has_phyerr_counters != 0) 
#line 701 
                                                               ath5k_enable_phy_err_counters(ah);
    else {
      u32 tmp_0;
      int tmp_1;
      
#line 703 
      tmp_0 = ath5k_hw_get_rx_filter(ah);
      
#line 704 
      if (ah->ah_version == (unsigned int)AR5K_AR5211) 
#line 704 
                                                       tmp_1 = 64; else 
                                                                    
#line 704 
                                                                    tmp_1 = 256;
      
#line 703 
      ;
      
#line 703 
      ath5k_hw_set_rx_filter(ah,tmp_0 | (unsigned int)tmp_1);
    }
  else 
    
#line 706 
    if ((int)ah->ah_capabilities.cap_has_phyerr_counters != 0) 
#line 707 
                                                               ath5k_disable_phy_err_counters(ah);
    else {
      u32 tmp_2;
      int tmp_3;
      
#line 709 
      tmp_2 = ath5k_hw_get_rx_filter(ah);
      
#line 710 
      if (ah->ah_version == (unsigned int)AR5K_AR5211) 
#line 710 
                                                       tmp_3 = 64; else 
                                                                    
#line 710 
                                                                    tmp_3 = 256;
      
#line 709 
      ;
      
#line 709 
      ath5k_hw_set_rx_filter(ah,tmp_2 & (unsigned int)tmp_3);
    }
  
#line 713 
  ah->ani_state.ani_mode = mode;
  return_label: 
#line 714 
                return;
}


#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ani.c"
void ath5k_ani_print_counters(struct ath5k_hw *ah)
{
  u32 tmp_0;
  unsigned int tmp;
  u32 tmp_2;
  unsigned int tmp_1;
  u32 tmp_4;
  unsigned int tmp_3;
  u32 tmp_6;
  unsigned int tmp_5;
  u32 tmp_7;
  u32 tmp_8;
  u32 tmp_9;
  u32 tmp_10;
  u32 tmp_11;
  u32 tmp_12;
  u32 tmp_13;
  u32 tmp_14;
  
#line 733 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 733 
                                                   tmp = 32920U; else 
                                                                   
#line 733 
                                                                   tmp = 32912U;
  
#line 733 
  ;
  
#line 733 
  tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp));
  
#line 733 
  printk("\001",tmp_0);
  
#line 734 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 734 
                                                   tmp_1 = 32916U; else 
                                                                    
#line 734 
                                                                    tmp_1 = 32908U;
  
#line 734 
  ;
  
#line 734 
  tmp_2 = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_1));
  
#line 734 
  printk("\001",tmp_2);
  
#line 735 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 735 
                                                   tmp_3 = 32912U; else 
                                                                    
#line 735 
                                                                    tmp_3 = 32904U;
  
#line 735 
  ;
  
#line 735 
  tmp_4 = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_3));
  
#line 735 
  printk("\001",tmp_4);
  
#line 736 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 736 
                                                   tmp_5 = 32924U; else 
                                                                    
#line 736 
                                                                    tmp_5 = 32916U;
  
#line 736 
  ;
  
#line 736 
  tmp_6 = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_5));
  
#line 736 
  printk("\001",tmp_6);
  
#line 739 
  tmp_7 = ath5k_hw_reg_read(ah,(unsigned short)33004);
  
#line 739 
  printk("\001",tmp_7);
  
#line 740 
  tmp_8 = ath5k_hw_reg_read(ah,(unsigned short)33008);
  
#line 740 
  printk("\001",tmp_8);
  
#line 741 
  tmp_9 = ath5k_hw_reg_read(ah,(unsigned short)33012);
  
#line 741 
  printk("\001",tmp_9);
  
#line 742 
  tmp_10 = ath5k_hw_reg_read(ah,(unsigned short)33016);
  
#line 742 
  printk("\001",tmp_10);
  
#line 744 
  tmp_11 = ath5k_hw_reg_read(ah,(unsigned short)33068);
  
#line 744 
  printk("\001",tmp_11);
  
#line 746 
  tmp_12 = ath5k_hw_reg_read(ah,(unsigned short)33076);
  
#line 746 
  printk("\001",tmp_12);
  
#line 748 
  tmp_13 = ath5k_hw_reg_read(ah,(unsigned short)33060);
  
#line 748 
  printk("\001",tmp_13);
  
#line 750 
  tmp_14 = ath5k_hw_reg_read(ah,(unsigned short)33064);
  
#line 750 
  printk("\001",tmp_14);
  
#line 751 
  return;
}


#line 737  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_ani.c.aux"
static void ldv_spin_lock_bh_72_0(spinlock_t *lock)
{
  
#line 741 
  ldv_spin_model_lock((char *)"cc_lock_of_ath_common");
  
#line 743 
  spin_lock_bh_1(lock);
  
#line 744 
  return;
}


#line 747  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_ani.c.aux"
static void ldv_spin_unlock_bh_73_0(spinlock_t *lock)
{
  
#line 751 
  ldv_spin_model_unlock((char *)"cc_lock_of_ath_common");
  
#line 753 
  spin_unlock_bh_1(lock);
  
#line 754 
  return;
}


#line 757  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_ani.c.aux"
static void ldv_tasklet_schedule_74(struct tasklet_struct *t)
{
  
#line 761 
  ldv_emg_tasklet_schedule(t);
  
#line 762 
  return;
}


#line 765  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_ani.c.aux"
static void ldv_tasklet_schedule_75(struct tasklet_struct *t)
{
  
#line 769 
  ldv_emg_tasklet_schedule(t);
  
#line 770 
  return;
}


#line 773  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_ani.c.aux"
static void ldv_tasklet_schedule_76(struct tasklet_struct *t)
{
  
#line 777 
  ldv_emg_tasklet_schedule(t);
  
#line 778 
  return;
}


#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int fls(int x)
{
  int __retres;
  int r;
  
#line 440 
  ldv_inline_asm();
  
#line 464 
  __retres = r + 1;
  
#line 464 
  return __retres;
}


#line 168  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitops.h"
__inline static __s32 sign_extend32(__u32 value, int index)
{
  __s32 __retres;
  
#line 170 
  __u8 shift = (unsigned char)(31U - (unsigned int)((unsigned char)index));
  
#line 171 
  __retres = (int)(value << (int)shift) >> (int)shift;
  
#line 171 
  return __retres;
}


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
int ____ilog2_NaN(void);


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static int __ilog2_u32(u32 n)
{
  int __retres;
  int tmp;
  
#line 34 
  tmp = fls((int)n);
  
#line 34 
  __retres = tmp + -1;
  
#line 34 
  return __retres;
}


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kmalloc(size_t size, gfp_t flags);


#line 1495  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
int ath5k_hw_register_timeout(struct ath5k_hw *ah, u32 reg, u32 flag, u32 val, bool is_set);


#line 1612 
u16 ath5k_hw_radio_revision(struct ath5k_hw *ah, enum ieee80211_band band);


#line 1616 
int ath5k_hw_rfgain_opt_init(struct ath5k_hw *ah);


#line 1620 
void ath5k_hw_init_nfcal_hist(struct ath5k_hw *ah);


#line 1623 
void ath5k_hw_update_noise_floor(struct ath5k_hw *ah);


#line 1625 
bool ath5k_hw_chan_has_spur_noise(struct ath5k_hw *ah, struct ieee80211_channel *channel);


#line 1629 
void ath5k_hw_set_antenna_switch(struct ath5k_hw *ah, u8 ee_mode);


#line 1633 
int ath5k_hw_phy_init(struct ath5k_hw *ah, struct ieee80211_channel *channel, u8 mode, bool fast);


#line 1704  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
__inline static u32 ath5k_hw_bitswap(u32 val, unsigned int bits)
{
  u32 bit;
  u32 i;
  
#line 1706 
  u32 retval = 0U;
  
#line 1708 
  i = 0U;
  
#line 1708 
  goto ldv_50403;
  ldv_50402: 
#line 1709 
  ;
  
#line 1709 
  bit = (val >> i) & 1U;
  
#line 1710 
  retval = (retval << 1) | bit;
  
#line 1708 
  i += 1U;
  ldv_50403: 
#line 1709 
  ;
  
#line 1708 
  if (i < bits) 
#line 1710 
                goto ldv_50402; else 
#line 1713 
                                     goto ldv_50404;
  ldv_50404: 
#line 1714 
  ;
  
#line 1713 
  return retval;
}


#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfbuffer.h"
static struct ath5k_rf_reg const rf_regs_5111[16U] = {{.bank = (unsigned char)2U, .index = (unsigned char)0U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)3U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)1U, .field = {.len = (unsigned char)3U, .pos = (unsigned short)119U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)3U, .field = {.len = (unsigned char)3U, .pos = (unsigned short)122U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)2U, .field = {.len = (unsigned char)3U, .pos = (unsigned short)104U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)4U, .field = {.len = (unsigned char)3U, .pos = (unsigned short)107U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)7U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)95U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)9U, .field = {.len = (unsigned char)4U, .pos = (unsigned short)96U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)20U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)51U, .col = (unsigned char)3U}}, {.bank = (unsigned char)6U, .index = (unsigned char)21U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)45U, .col = (unsigned char)3U}}, {.bank = (unsigned char)7U, .index = (unsigned char)31U, .field = {.len = (unsigned char)6U, .pos = (unsigned short)29U, .col = (unsigned char)0U}}, {.bank = (unsigned char)7U, .index = (unsigned char)32U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)4U, .col = (unsigned char)0U}}, {.bank = (unsigned char)7U, .index = (unsigned char)33U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)36U, .col = (unsigned char)0U}}, {.bank = (unsigned char)7U, .index = (unsigned char)34U, .field = {.len = (unsigned char)6U, .pos = (unsigned short)37U, .col = (unsigned char)0U}}, {.bank = (unsigned char)7U, .index = (unsigned char)35U, .field = {.len = (unsigned char)5U, .pos = (unsigned short)19U, .col = (unsigned char)0U}}, {.bank = (unsigned char)7U, .index = (unsigned char)36U, .field = {.len = (unsigned char)5U, .pos = (unsigned short)24U, .col = (unsigned char)0U}}, {.bank = (unsigned char)7U, .index = (unsigned char)37U, .field = {.len = (unsigned char)2U, .pos = (unsigned short)49U, .col = (unsigned char)0U}}};

#line 210  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfbuffer.h"
static struct ath5k_ini_rfbuffer const rfb_5111[45U] = {{.rfb_bank = (unsigned char)0U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)0U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)0U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)0U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)0U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)0U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)0U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)0U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)0U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)0U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)0U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)0U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {3670016U, 3670016U, 3670016U}}, {.rfb_bank = (unsigned char)0U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)0U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)0U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 192U, 128U}}, {.rfb_bank = (unsigned char)0U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {262393U, 262399U, 262397U}}, {.rfb_bank = (unsigned char)0U, .rfb_ctrl_register = (unsigned short)39124U, .rfb_mode_data = {0U, 4U, 4U}}, {.rfb_bank = (unsigned char)1U, .rfb_ctrl_register = (unsigned short)39124U, .rfb_mode_data = {32U, 32U, 32U}}, {.rfb_bank = (unsigned char)2U, .rfb_ctrl_register = (unsigned short)39124U, .rfb_mode_data = {16U, 16U, 16U}}, {.rfb_bank = (unsigned char)3U, .rfb_ctrl_register = (unsigned short)39128U, .rfb_mode_data = {6295656U, 6295656U, 6295656U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {268435456U, 268435456U, 268435456U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {67108864U, 67108864U, 67108864U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 167772160U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {3670208U, 37224640U, 3670208U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {131078U, 6U, 131078U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {137U, 137U, 137U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {160U, 160U, 160U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {262151U, 262151U, 262151U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39124U, .rfb_mode_data = {26U, 26U, 26U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {64U, 64U, 64U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {16U, 16U, 16U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {8U, 8U, 8U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {79U, 79U, 79U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {241U, 97U, 241U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {36943U, 36940U, 36943U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {4698U, 4762U, 4698U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39116U, .rfb_mode_data = {14U, 15U, 14U}}};

#line 298  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfbuffer.h"
static struct ath5k_rf_reg const rf_regs_5112[25U] = {{.bank = (unsigned char)2U, .index = (unsigned char)0U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)1U, .col = (unsigned char)2U}}, {.bank = (unsigned char)6U, .index = (unsigned char)1U, .field = {.len = (unsigned char)3U, .pos = (unsigned short)269U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)3U, .field = {.len = (unsigned char)3U, .pos = (unsigned short)272U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)2U, .field = {.len = (unsigned char)3U, .pos = (unsigned short)261U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)4U, .field = {.len = (unsigned char)3U, .pos = (unsigned short)264U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)5U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)260U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)6U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)259U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)8U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)284U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)9U, .field = {.len = (unsigned char)2U, .pos = (unsigned short)252U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)22U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)172U, .col = (unsigned char)3U}}, {.bank = (unsigned char)6U, .index = (unsigned char)23U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)171U, .col = (unsigned char)3U}}, {.bank = (unsigned char)6U, .index = (unsigned char)24U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)170U, .col = (unsigned char)3U}}, {.bank = (unsigned char)6U, .index = (unsigned char)25U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)166U, .col = (unsigned char)3U}}, {.bank = (unsigned char)6U, .index = (unsigned char)26U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)165U, .col = (unsigned char)3U}}, {.bank = (unsigned char)6U, .index = (unsigned char)27U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)164U, .col = (unsigned char)3U}}, {.bank = (unsigned char)7U, .index = (unsigned char)31U, .field = {.len = (unsigned char)6U, .pos = (unsigned short)14U, .col = (unsigned char)0U}}, {.bank = (unsigned char)7U, .index = (unsigned char)38U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)36U, .col = (unsigned char)0U}}, {.bank = (unsigned char)7U, .index = (unsigned char)39U, .field = {.len = (unsigned char)2U, .pos = (unsigned short)37U, .col = (unsigned char)0U}}, {.bank = (unsigned char)7U, .index = (unsigned char)40U, .field = {.len = (unsigned char)4U, .pos = (unsigned short)32U, .col = (unsigned char)0U}}, {.bank = (unsigned char)7U, .index = (unsigned char)41U, .field = {.len = (unsigned char)4U, .pos = (unsigned short)58U, .col = (unsigned char)0U}}, {.bank = (unsigned char)7U, .index = (unsigned char)42U, .field = {.len = (unsigned char)4U, .pos = (unsigned short)62U, .col = (unsigned char)0U}}, {.bank = (unsigned char)7U, .index = (unsigned char)43U, .field = {.len = (unsigned char)4U, .pos = (unsigned short)66U, .col = (unsigned char)0U}}, {.bank = (unsigned char)7U, .index = (unsigned char)44U, .field = {.len = (unsigned char)4U, .pos = (unsigned short)70U, .col = (unsigned char)0U}}, {.bank = (unsigned char)7U, .index = (unsigned char)45U, .field = {.len = (unsigned char)4U, .pos = (unsigned short)74U, .col = (unsigned char)0U}}, {.bank = (unsigned char)7U, .index = (unsigned char)46U, .field = {.len = (unsigned char)4U, .pos = (unsigned short)78U, .col = (unsigned char)0U}}};

#line 327  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfbuffer.h"
static struct ath5k_ini_rfbuffer const rfb_5112[54U] = {{.rfb_bank = (unsigned char)1U, .rfb_ctrl_register = (unsigned short)39124U, .rfb_mode_data = {32U, 32U, 32U}}, {.rfb_bank = (unsigned char)2U, .rfb_ctrl_register = (unsigned short)39120U, .rfb_mode_data = {50725896U, 50725896U, 50725896U}}, {.rfb_bank = (unsigned char)3U, .rfb_ctrl_register = (unsigned short)39132U, .rfb_mode_data = {10535104U, 14729408U, 14729408U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {10485760U, 10485760U, 10485760U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {655360U, 655360U, 655360U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {6684672U, 6684672U, 6684672U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {14352384U, 14352384U, 14352384U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {15794176U, 15794176U, 15794176U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {1179648U, 1179648U, 1179648U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {1179648U, 1179648U, 1179648U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {7536640U, 7536640U, 7536640U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {786432U, 786432U, 786432U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {16711680U, 16711680U, 16711680U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {16711680U, 16711680U, 16711680U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {9109504U, 9109504U, 9109504U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {6291456U, 6291456U, 6291456U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {786432U, 786432U, 786432U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {8650752U, 8650752U, 8650752U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {6553600U, 6553600U, 6553600U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {2097152U, 2097152U, 2097152U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {2359296U, 2359296U, 2359296U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {2424832U, 2424832U, 2424832U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {1114112U, 1114112U, 1114112U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {1114112U, 1114112U, 1114112U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {5308416U, 5308416U, 5308416U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {470024192U, 470024192U, 470024192U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {655360U, 655360U, 655360U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {10551296U, 10551296U, 10551296U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {4194304U, 4194304U, 4194304U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {50921472U, 50921472U, 50921472U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {100663296U, 100663296U, 100663296U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {176U, 168U, 168U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {46U, 46U, 46U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {7096897U, 7097073U, 7096929U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {5277994U, 5277995U, 5277995U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {8659968U, 8659968U, 8659968U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {13013504U, 13013504U, 13013504U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39120U, .rfb_mode_data = {131084U, 131084U, 131084U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {148U, 148U, 148U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {145U, 145U, 145U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {10U, 18U, 18U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {128U, 128U, 128U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {193U, 193U, 193U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {96U, 96U, 96U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {240U, 240U, 240U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {34U, 34U, 34U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {146U, 146U, 146U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {212U, 212U, 212U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {5324U, 5324U, 5324U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {1164U, 1164U, 1164U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39108U, .rfb_mode_data = {3U, 3U, 3U}}};

#line 415  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfbuffer.h"
static struct ath5k_rf_reg const rf_regs_5112a[35U] = {{.bank = (unsigned char)2U, .index = (unsigned char)0U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)1U, .col = (unsigned char)2U}}, {.bank = (unsigned char)6U, .index = (unsigned char)1U, .field = {.len = (unsigned char)3U, .pos = (unsigned short)287U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)3U, .field = {.len = (unsigned char)3U, .pos = (unsigned short)290U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)2U, .field = {.len = (unsigned char)3U, .pos = (unsigned short)279U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)4U, .field = {.len = (unsigned char)3U, .pos = (unsigned short)282U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)5U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)278U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)6U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)277U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)8U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)302U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)10U, .field = {.len = (unsigned char)2U, .pos = (unsigned short)270U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)11U, .field = {.len = (unsigned char)2U, .pos = (unsigned short)257U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)22U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)176U, .col = (unsigned char)3U}}, {.bank = (unsigned char)6U, .index = (unsigned char)23U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)175U, .col = (unsigned char)3U}}, {.bank = (unsigned char)6U, .index = (unsigned char)24U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)174U, .col = (unsigned char)3U}}, {.bank = (unsigned char)6U, .index = (unsigned char)25U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)170U, .col = (unsigned char)3U}}, {.bank = (unsigned char)6U, .index = (unsigned char)26U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)169U, .col = (unsigned char)3U}}, {.bank = (unsigned char)6U, .index = (unsigned char)27U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)168U, .col = (unsigned char)3U}}, {.bank = (unsigned char)6U, .index = (unsigned char)28U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)140U, .col = (unsigned char)3U}}, {.bank = (unsigned char)6U, .index = (unsigned char)29U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)139U, .col = (unsigned char)3U}}, {.bank = (unsigned char)6U, .index = (unsigned char)12U, .field = {.len = (unsigned char)2U, .pos = (unsigned short)90U, .col = (unsigned char)2U}}, {.bank = (unsigned char)6U, .index = (unsigned char)13U, .field = {.len = (unsigned char)2U, .pos = (unsigned short)92U, .col = (unsigned char)2U}}, {.bank = (unsigned char)6U, .index = (unsigned char)14U, .field = {.len = (unsigned char)2U, .pos = (unsigned short)94U, .col = (unsigned char)2U}}, {.bank = (unsigned char)6U, .index = (unsigned char)15U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)254U, .col = (unsigned char)2U}}, {.bank = (unsigned char)6U, .index = (unsigned char)16U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)281U, .col = (unsigned char)1U}}, {.bank = (unsigned char)6U, .index = (unsigned char)17U, .field = {.len = (unsigned char)2U, .pos = (unsigned short)1U, .col = (unsigned char)3U}}, {.bank = (unsigned char)6U, .index = (unsigned char)18U, .field = {.len = (unsigned char)2U, .pos = (unsigned short)3U, .col = (unsigned char)3U}}, {.bank = (unsigned char)7U, .index = (unsigned char)31U, .field = {.len = (unsigned char)6U, .pos = (unsigned short)14U, .col = (unsigned char)0U}}, {.bank = (unsigned char)7U, .index = (unsigned char)38U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)36U, .col = (unsigned char)0U}}, {.bank = (unsigned char)7U, .index = (unsigned char)39U, .field = {.len = (unsigned char)2U, .pos = (unsigned short)37U, .col = (unsigned char)0U}}, {.bank = (unsigned char)7U, .index = (unsigned char)40U, .field = {.len = (unsigned char)4U, .pos = (unsigned short)32U, .col = (unsigned char)0U}}, {.bank = (unsigned char)7U, .index = (unsigned char)41U, .field = {.len = (unsigned char)4U, .pos = (unsigned short)58U, .col = (unsigned char)0U}}, {.bank = (unsigned char)7U, .index = (unsigned char)42U, .field = {.len = (unsigned char)4U, .pos = (unsigned short)62U, .col = (unsigned char)0U}}, {.bank = (unsigned char)7U, .index = (unsigned char)43U, .field = {.len = (unsigned char)4U, .pos = (unsigned short)66U, .col = (unsigned char)0U}}, {.bank = (unsigned char)7U, .index = (unsigned char)44U, .field = {.len = (unsigned char)4U, .pos = (unsigned short)70U, .col = (unsigned char)0U}}, {.bank = (unsigned char)7U, .index = (unsigned char)45U, .field = {.len = (unsigned char)4U, .pos = (unsigned short)74U, .col = (unsigned char)0U}}, {.bank = (unsigned char)7U, .index = (unsigned char)46U, .field = {.len = (unsigned char)4U, .pos = (unsigned short)78U, .col = (unsigned char)0U}}};

#line 454  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfbuffer.h"
static struct ath5k_ini_rfbuffer const rfb_5112a[56U] = {{.rfb_bank = (unsigned char)1U, .rfb_ctrl_register = (unsigned short)39124U, .rfb_mode_data = {32U, 32U, 32U}}, {.rfb_bank = (unsigned char)2U, .rfb_ctrl_register = (unsigned short)39120U, .rfb_mode_data = {50725896U, 50725896U, 50725896U}}, {.rfb_bank = (unsigned char)3U, .rfb_ctrl_register = (unsigned short)39132U, .rfb_mode_data = {10494144U, 14688448U, 14688448U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {251658240U, 251658240U, 251658240U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {8388608U, 8388608U, 8388608U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {2752512U, 2752512U, 2752512U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {65536U, 65536U, 65536U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {1572864U, 1572864U, 1572864U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {6291456U, 7208960U, 7208960U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {13041664U, 13041664U, 13041664U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {4915200U, 4915200U, 4915200U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {71827456U, 71827456U, 71827456U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {4980736U, 4980736U, 4980736U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {14942208U, 14942208U, 14942208U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {16515072U, 16515072U, 16515072U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {16711680U, 16711680U, 16711680U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {71237632U, 71237632U, 71237632U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {786432U, 786432U, 786432U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {35192832U, 35192832U, 35192832U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {2359296U, 2359296U, 2359296U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {11796480U, 11796480U, 11796480U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {10027008U, 10027008U, 10027008U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {5242880U, 5242880U, 5242880U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {2752512U, 2752512U, 2752512U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {1179648U, 1179648U, 1179648U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {3224502272U, 3224502272U, 3224502272U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {24379392U, 24379392U, 24379392U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {1114112U, 1114112U, 1114112U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {2250768384U, 2250768384U, 2250768384U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {830734336U, 830734336U, 830734336U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {15859840U, 15859840U, 15859840U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {2555929U, 2555929U, 2555929U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {3U, 3U, 3U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {178U, 178U, 178U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {11542660U, 11542660U, 11542660U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {4269476U, 4269476U, 4269476U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {1151520U, 1151520U, 1151520U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {1722368U, 1722368U, 1722368U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39128U, .rfb_mode_data = {721456U, 721456U, 721456U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {148U, 148U, 148U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {145U, 145U, 145U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {18U, 18U, 18U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {128U, 128U, 128U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {217U, 217U, 217U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {96U, 96U, 96U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {240U, 240U, 240U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {162U, 162U, 162U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {82U, 82U, 82U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {212U, 212U, 212U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {5324U, 5324U, 5324U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {1164U, 1164U, 1164U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39108U, .rfb_mode_data = {3U, 3U, 3U}}};

#line 527  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfbuffer.h"
static struct ath5k_rf_reg const rf_regs_2413[3U] = {{.bank = (unsigned char)2U, .index = (unsigned char)0U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)1U, .col = (unsigned char)2U}}, {.bank = (unsigned char)6U, .index = (unsigned char)1U, .field = {.len = (unsigned char)3U, .pos = (unsigned short)168U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)3U, .field = {.len = (unsigned char)3U, .pos = (unsigned short)165U, .col = (unsigned char)0U}}};

#line 536  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfbuffer.h"
static struct ath5k_ini_rfbuffer const rfb_2413[33U] = {{.rfb_bank = (unsigned char)1U, .rfb_ctrl_register = (unsigned short)39124U, .rfb_mode_data = {32U, 32U, 32U}}, {.rfb_bank = (unsigned char)2U, .rfb_ctrl_register = (unsigned short)39120U, .rfb_mode_data = {33559560U, 33559560U, 33559560U}}, {.rfb_bank = (unsigned char)3U, .rfb_ctrl_register = (unsigned short)39132U, .rfb_mode_data = {10494144U, 14688448U, 14688448U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {4026531840U, 4026531840U, 4026531840U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {50331648U, 50331648U, 50331648U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {1077936128U, 1077936128U, 1077936128U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {1694826496U, 1694826496U, 1694826496U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {4325376U, 4325376U, 4325376U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {11862016U, 11862016U, 11862016U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {196608U, 196608U, 196608U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {16187392U, 16187392U, 16187392U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {10289152U, 10289152U, 10289152U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {2228224U, 2228224U, 2228224U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {69337088U, 69337088U, 69337088U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {2293784U, 2293784U, 2293784U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {2621440U, 2621536U, 2621536U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {5243072U, 5243075U, 5243075U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {262271U, 262271U, 262271U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {1112U, 1112U, 1112U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {49152U, 49152U, 49152U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39128U, .rfb_mode_data = {4194864U, 4194864U, 4194864U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {25600U, 25600U, 25600U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {2048U, 2048U, 2048U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39116U, .rfb_mode_data = {14U, 14U, 14U}}};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfbuffer.h"
static struct ath5k_rf_reg const rf_regs_2316[3U] = {{.bank = (unsigned char)2U, .index = (unsigned char)0U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)1U, .col = (unsigned char)2U}}, {.bank = (unsigned char)6U, .index = (unsigned char)1U, .field = {.len = (unsigned char)3U, .pos = (unsigned short)178U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)3U, .field = {.len = (unsigned char)3U, .pos = (unsigned short)175U, .col = (unsigned char)0U}}};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfbuffer.h"
static struct ath5k_ini_rfbuffer const rfb_2316[35U] = {{.rfb_bank = (unsigned char)1U, .rfb_ctrl_register = (unsigned short)39124U, .rfb_mode_data = {32U, 32U, 32U}}, {.rfb_bank = (unsigned char)2U, .rfb_ctrl_register = (unsigned short)39120U, .rfb_mode_data = {33559560U, 33559560U, 33559560U}}, {.rfb_bank = (unsigned char)3U, .rfb_ctrl_register = (unsigned short)39132U, .rfb_mode_data = {10494144U, 14688448U, 14688448U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {3221225472U, 3221225472U, 3221225472U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {251658240U, 251658240U, 251658240U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {33554432U, 33554432U, 33554432U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {4160749568U, 4160749568U, 4160749568U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {2501181440U, 2501181440U, 2501181440U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {3238002688U, 3238002688U, 3238002688U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {524288U, 524288U, 524288U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {13959168U, 13959168U, 13959168U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {917504U, 917504U, 917504U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {14417920U, 14417920U, 14417920U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {7798784U, 7798784U, 7798784U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {9043968U, 9043968U, 9043968U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {277348352U, 277348352U, 277348352U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {9175136U, 9175136U, 9175136U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {10485760U, 10485888U, 10485888U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {4194304U, 4194317U, 4194317U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {1115136U, 1115136U, 1115136U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {96U, 96U, 96U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {1U, 1U, 1U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {2816U, 2816U, 2816U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {3048U, 3048U, 3048U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39104U, .rfb_mode_data = {65536U, 65536U, 65536U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {25600U, 25600U, 25600U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {2048U, 2048U, 2048U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39116U, .rfb_mode_data = {14U, 14U, 14U}}};

#line 648  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfbuffer.h"
static struct ath5k_rf_reg const rf_regs_5413[6U] = {{.bank = (unsigned char)6U, .index = (unsigned char)1U, .field = {.len = (unsigned char)3U, .pos = (unsigned short)241U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)3U, .field = {.len = (unsigned char)3U, .pos = (unsigned short)238U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)2U, .field = {.len = (unsigned char)3U, .pos = (unsigned short)247U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)4U, .field = {.len = (unsigned char)3U, .pos = (unsigned short)244U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)19U, .field = {.len = (unsigned char)3U, .pos = (unsigned short)131U, .col = (unsigned char)3U}}, {.bank = (unsigned char)6U, .index = (unsigned char)30U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)291U, .col = (unsigned char)2U}}};

#line 658  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfbuffer.h"
static struct ath5k_ini_rfbuffer const rfb_5413[43U] = {{.rfb_bank = (unsigned char)1U, .rfb_ctrl_register = (unsigned short)39124U, .rfb_mode_data = {32U, 32U, 32U}}, {.rfb_bank = (unsigned char)2U, .rfb_ctrl_register = (unsigned short)39120U, .rfb_mode_data = {8U, 8U, 8U}}, {.rfb_bank = (unsigned char)3U, .rfb_ctrl_register = (unsigned short)39132U, .rfb_mode_data = {10485952U, 14680256U, 14680256U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {855638016U, 855638016U, 855638016U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {16777216U, 16777216U, 16777216U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {520093696U, 520093696U, 520093696U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {12058624U, 12058624U, 12058624U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {11993088U, 11993088U, 11993088U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {8650752U, 8650752U, 8650752U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {9961472U, 9961472U, 9961472U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {12582912U, 12582912U, 12582912U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {16711680U, 16711680U, 16711680U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {16711680U, 16711680U, 16711680U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {16711680U, 16711680U, 16711680U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {16711680U, 16711680U, 16711680U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {14090240U, 14090240U, 14090240U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {6356992U, 6356992U, 6356992U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {16646144U, 16646144U, 16646144U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {14548992U, 14548992U, 14548992U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {8323072U, 8323072U, 8323072U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {71106560U, 71106560U, 71106560U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {7798784U, 7798784U, 7798784U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {4456448U, 4456448U, 4456448U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {9961472U, 9961472U, 9961472U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {1048704U, 1048704U, 1048704U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {376884U, 376884U, 376884U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {3211504U, 3211504U, 3211504U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {786719U, 786719U, 786719U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {5308480U, 5308480U, 5308480U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {5243098U, 5243098U, 5243098U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {16452U, 16452U, 16452U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {24768U, 24768U, 24768U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {11264U, 13824U, 13824U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39112U, .rfb_mode_data = {1027U, 263171U, 263171U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {25600U, 25600U, 25600U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {2048U, 2048U, 2048U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39116U, .rfb_mode_data = {14U, 14U, 14U}}};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfbuffer.h"
static struct ath5k_rf_reg const rf_regs_2425[3U] = {{.bank = (unsigned char)2U, .index = (unsigned char)0U, .field = {.len = (unsigned char)1U, .pos = (unsigned short)1U, .col = (unsigned char)2U}}, {.bank = (unsigned char)6U, .index = (unsigned char)1U, .field = {.len = (unsigned char)3U, .pos = (unsigned short)193U, .col = (unsigned char)0U}}, {.bank = (unsigned char)6U, .index = (unsigned char)3U, .field = {.len = (unsigned char)3U, .pos = (unsigned short)190U, .col = (unsigned char)0U}}};

#line 727  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfbuffer.h"
static struct ath5k_ini_rfbuffer const rfb_2425[36U] = {{.rfb_bank = (unsigned char)1U, .rfb_ctrl_register = (unsigned short)39124U, .rfb_mode_data = {32U, 32U, 32U}}, {.rfb_bank = (unsigned char)2U, .rfb_ctrl_register = (unsigned short)39120U, .rfb_mode_data = {33559560U, 33559560U, 33559560U}}, {.rfb_bank = (unsigned char)3U, .rfb_ctrl_register = (unsigned short)39132U, .rfb_mode_data = {10494144U, 14688448U, 14688448U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {268435456U, 268435456U, 268435456U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {2752512U, 2752512U, 2752512U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {1048576U, 1048576U, 1048576U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {131072U, 131072U, 131072U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {7536640U, 7536640U, 7536640U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {16252928U, 16252928U, 16252928U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {15138816U, 15138816U, 15138816U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {1310720U, 1310720U, 1310720U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {9502784U, 9502784U, 9502784U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {458778U, 458778U, 458778U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {4259840U, 4259840U, 4259840U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {8454144U, 8454240U, 8454240U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {133120U, 133123U, 133123U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {5728U, 5728U, 5728U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {5768U, 5768U, 5768U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39108U, .rfb_mode_data = {1U, 1U, 1U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {25600U, 25600U, 25600U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {2048U, 2048U, 2048U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39116U, .rfb_mode_data = {14U, 14U, 14U}}};

#line 771  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfbuffer.h"
static struct ath5k_ini_rfbuffer const rfb_2317[36U] = {{.rfb_bank = (unsigned char)1U, .rfb_ctrl_register = (unsigned short)39124U, .rfb_mode_data = {32U, 32U, 32U}}, {.rfb_bank = (unsigned char)2U, .rfb_ctrl_register = (unsigned short)39120U, .rfb_mode_data = {33559560U, 33559560U, 33559560U}}, {.rfb_bank = (unsigned char)3U, .rfb_ctrl_register = (unsigned short)39132U, .rfb_mode_data = {10494144U, 14688448U, 14688448U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {268435456U, 268435456U, 268435456U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {2752512U, 2752512U, 2752512U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {1048576U, 1048576U, 1048576U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {131072U, 131072U, 131072U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {7536640U, 7536640U, 7536640U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {16252928U, 16252928U, 16252928U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {15138816U, 15138816U, 15138816U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {1310976U, 1310976U, 1310976U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {9502784U, 9502784U, 9502784U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {458778U, 458778U, 458778U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {4259840U, 4259840U, 4259840U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {8454144U, 8454240U, 8454240U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {133120U, 133123U, 133123U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {5728U, 5728U, 5728U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {38536U, 38536U, 38536U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39108U, .rfb_mode_data = {1U, 1U, 1U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {25600U, 25600U, 25600U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {2048U, 2048U, 2048U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39116U, .rfb_mode_data = {14U, 14U, 14U}}};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfbuffer.h"
static struct ath5k_ini_rfbuffer const rfb_2417[36U] = {{.rfb_bank = (unsigned char)1U, .rfb_ctrl_register = (unsigned short)39124U, .rfb_mode_data = {32U, 32U, 32U}}, {.rfb_bank = (unsigned char)2U, .rfb_ctrl_register = (unsigned short)39120U, .rfb_mode_data = {33559560U, 33559560U, 33559560U}}, {.rfb_bank = (unsigned char)3U, .rfb_ctrl_register = (unsigned short)39132U, .rfb_mode_data = {10494144U, 14688448U, 14688448U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {268435456U, 268435456U, 268435456U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {2752512U, 2752512U, 2752512U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {1048576U, 1048576U, 1048576U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {131072U, 131072U, 131072U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {7536640U, 7536640U, 7536640U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {16252928U, 16252928U, 16252928U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {15138816U, 2162622464U, 2162622464U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {1310720U, 1310720U, 1310720U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {9502784U, 9502784U, 9502784U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {458778U, 34013210U, 34013210U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {4259840U, 4259840U, 4259840U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {8454144U, 8454240U, 8454240U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {133120U, 133123U, 133123U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {0U, 0U, 0U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {5728U, 5728U, 5728U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {5768U, 5768U, 5768U}}, {.rfb_bank = (unsigned char)6U, .rfb_ctrl_register = (unsigned short)39108U, .rfb_mode_data = {1U, 1U, 1U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {25600U, 25600U, 25600U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39068U, .rfb_mode_data = {2048U, 2048U, 2048U}}, {.rfb_bank = (unsigned char)7U, .rfb_ctrl_register = (unsigned short)39116U, .rfb_mode_data = {14U, 14U, 14U}}};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfgain.h"
static struct ath5k_ini_rfgain const rfgain_5111[64U] = {{.rfg_register = (unsigned short)39424U, .rfg_value = {425U, 0U}}, {.rfg_register = (unsigned short)39428U, .rfg_value = {489U, 64U}}, {.rfg_register = (unsigned short)39432U, .rfg_value = {41U, 128U}}, {.rfg_register = (unsigned short)39436U, .rfg_value = {105U, 336U}}, {.rfg_register = (unsigned short)39440U, .rfg_value = {409U, 400U}}, {.rfg_register = (unsigned short)39444U, .rfg_value = {473U, 464U}}, {.rfg_register = (unsigned short)39448U, .rfg_value = {25U, 16U}}, {.rfg_register = (unsigned short)39452U, .rfg_value = {89U, 68U}}, {.rfg_register = (unsigned short)39456U, .rfg_value = {153U, 132U}}, {.rfg_register = (unsigned short)39460U, .rfg_value = {421U, 328U}}, {.rfg_register = (unsigned short)39464U, .rfg_value = {485U, 392U}}, {.rfg_register = (unsigned short)39468U, .rfg_value = {37U, 456U}}, {.rfg_register = (unsigned short)39472U, .rfg_value = {456U, 20U}}, {.rfg_register = (unsigned short)39476U, .rfg_value = {8U, 66U}}, {.rfg_register = (unsigned short)39480U, .rfg_value = {72U, 130U}}, {.rfg_register = (unsigned short)39484U, .rfg_value = {136U, 376U}}, {.rfg_register = (unsigned short)39488U, .rfg_value = {408U, 440U}}, {.rfg_register = (unsigned short)39492U, .rfg_value = {472U, 504U}}, {.rfg_register = (unsigned short)39496U, .rfg_value = {24U, 18U}}, {.rfg_register = (unsigned short)39500U, .rfg_value = {88U, 82U}}, {.rfg_register = (unsigned short)39504U, .rfg_value = {152U, 146U}}, {.rfg_register = (unsigned short)39508U, .rfg_value = {420U, 380U}}, {.rfg_register = (unsigned short)39512U, .rfg_value = {484U, 444U}}, {.rfg_register = (unsigned short)39516U, .rfg_value = {36U, 508U}}, {.rfg_register = (unsigned short)39520U, .rfg_value = {100U, 10U}}, {.rfg_register = (unsigned short)39524U, .rfg_value = {164U, 74U}}, {.rfg_register = (unsigned short)39528U, .rfg_value = {228U, 138U}}, {.rfg_register = (unsigned short)39532U, .rfg_value = {266U, 346U}}, {.rfg_register = (unsigned short)39536U, .rfg_value = {330U, 410U}}, {.rfg_register = (unsigned short)39540U, .rfg_value = {394U, 474U}}, {.rfg_register = (unsigned short)39544U, .rfg_value = {458U, 14U}}, {.rfg_register = (unsigned short)39548U, .rfg_value = {10U, 78U}}, {.rfg_register = (unsigned short)39552U, .rfg_value = {74U, 142U}}, {.rfg_register = (unsigned short)39556U, .rfg_value = {138U, 350U}}, {.rfg_register = (unsigned short)39560U, .rfg_value = {442U, 414U}}, {.rfg_register = (unsigned short)39564U, .rfg_value = {506U, 478U}}, {.rfg_register = (unsigned short)39568U, .rfg_value = {58U, 9U}}, {.rfg_register = (unsigned short)39572U, .rfg_value = {122U, 73U}}, {.rfg_register = (unsigned short)39576U, .rfg_value = {390U, 137U}}, {.rfg_register = (unsigned short)39580U, .rfg_value = {454U, 377U}}, {.rfg_register = (unsigned short)39584U, .rfg_value = {6U, 441U}}, {.rfg_register = (unsigned short)39588U, .rfg_value = {70U, 505U}}, {.rfg_register = (unsigned short)39592U, .rfg_value = {134U, 57U}}, {.rfg_register = (unsigned short)39596U, .rfg_value = {198U, 121U}}, {.rfg_register = (unsigned short)39600U, .rfg_value = {198U, 185U}}, {.rfg_register = (unsigned short)39604U, .rfg_value = {198U, 445U}}, {.rfg_register = (unsigned short)39608U, .rfg_value = {198U, 509U}}, {.rfg_register = (unsigned short)39612U, .rfg_value = {198U, 61U}}, {.rfg_register = (unsigned short)39616U, .rfg_value = {198U, 125U}}, {.rfg_register = (unsigned short)39620U, .rfg_value = {198U, 189U}}, {.rfg_register = (unsigned short)39624U, .rfg_value = {198U, 253U}}, {.rfg_register = (unsigned short)39628U, .rfg_value = {198U, 253U}}, {.rfg_register = (unsigned short)39632U, .rfg_value = {198U, 253U}}, {.rfg_register = (unsigned short)39636U, .rfg_value = {198U, 253U}}, {.rfg_register = (unsigned short)39640U, .rfg_value = {198U, 253U}}, {.rfg_register = (unsigned short)39644U, .rfg_value = {198U, 253U}}, {.rfg_register = (unsigned short)39648U, .rfg_value = {198U, 253U}}, {.rfg_register = (unsigned short)39652U, .rfg_value = {198U, 253U}}, {.rfg_register = (unsigned short)39656U, .rfg_value = {198U, 253U}}, {.rfg_register = (unsigned short)39660U, .rfg_value = {198U, 253U}}, {.rfg_register = (unsigned short)39664U, .rfg_value = {198U, 253U}}, {.rfg_register = (unsigned short)39668U, .rfg_value = {198U, 253U}}, {.rfg_register = (unsigned short)39672U, .rfg_value = {198U, 253U}}, {.rfg_register = (unsigned short)39676U, .rfg_value = {198U, 253U}}};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfgain.h"
static struct ath5k_ini_rfgain const rfgain_5112[64U] = {{.rfg_register = (unsigned short)39424U, .rfg_value = {7U, 7U}}, {.rfg_register = (unsigned short)39428U, .rfg_value = {71U, 71U}}, {.rfg_register = (unsigned short)39432U, .rfg_value = {135U, 135U}}, {.rfg_register = (unsigned short)39436U, .rfg_value = {416U, 416U}}, {.rfg_register = (unsigned short)39440U, .rfg_value = {480U, 480U}}, {.rfg_register = (unsigned short)39444U, .rfg_value = {32U, 32U}}, {.rfg_register = (unsigned short)39448U, .rfg_value = {96U, 96U}}, {.rfg_register = (unsigned short)39452U, .rfg_value = {417U, 417U}}, {.rfg_register = (unsigned short)39456U, .rfg_value = {481U, 481U}}, {.rfg_register = (unsigned short)39460U, .rfg_value = {33U, 33U}}, {.rfg_register = (unsigned short)39464U, .rfg_value = {97U, 97U}}, {.rfg_register = (unsigned short)39468U, .rfg_value = {354U, 354U}}, {.rfg_register = (unsigned short)39472U, .rfg_value = {418U, 418U}}, {.rfg_register = (unsigned short)39476U, .rfg_value = {482U, 482U}}, {.rfg_register = (unsigned short)39480U, .rfg_value = {34U, 34U}}, {.rfg_register = (unsigned short)39484U, .rfg_value = {98U, 98U}}, {.rfg_register = (unsigned short)39488U, .rfg_value = {355U, 355U}}, {.rfg_register = (unsigned short)39492U, .rfg_value = {419U, 419U}}, {.rfg_register = (unsigned short)39496U, .rfg_value = {483U, 483U}}, {.rfg_register = (unsigned short)39500U, .rfg_value = {35U, 35U}}, {.rfg_register = (unsigned short)39504U, .rfg_value = {99U, 99U}}, {.rfg_register = (unsigned short)39508U, .rfg_value = {388U, 388U}}, {.rfg_register = (unsigned short)39512U, .rfg_value = {452U, 452U}}, {.rfg_register = (unsigned short)39516U, .rfg_value = {4U, 4U}}, {.rfg_register = (unsigned short)39520U, .rfg_value = {490U, 11U}}, {.rfg_register = (unsigned short)39524U, .rfg_value = {42U, 75U}}, {.rfg_register = (unsigned short)39528U, .rfg_value = {106U, 139U}}, {.rfg_register = (unsigned short)39532U, .rfg_value = {170U, 428U}}, {.rfg_register = (unsigned short)39536U, .rfg_value = {427U, 492U}}, {.rfg_register = (unsigned short)39540U, .rfg_value = {491U, 44U}}, {.rfg_register = (unsigned short)39544U, .rfg_value = {43U, 18U}}, {.rfg_register = (unsigned short)39548U, .rfg_value = {107U, 82U}}, {.rfg_register = (unsigned short)39552U, .rfg_value = {171U, 146U}}, {.rfg_register = (unsigned short)39556U, .rfg_value = {428U, 403U}}, {.rfg_register = (unsigned short)39560U, .rfg_value = {492U, 467U}}, {.rfg_register = (unsigned short)39564U, .rfg_value = {44U, 19U}}, {.rfg_register = (unsigned short)39568U, .rfg_value = {58U, 83U}}, {.rfg_register = (unsigned short)39572U, .rfg_value = {122U, 147U}}, {.rfg_register = (unsigned short)39576U, .rfg_value = {186U, 404U}}, {.rfg_register = (unsigned short)39580U, .rfg_value = {443U, 468U}}, {.rfg_register = (unsigned short)39584U, .rfg_value = {507U, 20U}}, {.rfg_register = (unsigned short)39588U, .rfg_value = {59U, 58U}}, {.rfg_register = (unsigned short)39592U, .rfg_value = {123U, 122U}}, {.rfg_register = (unsigned short)39596U, .rfg_value = {187U, 186U}}, {.rfg_register = (unsigned short)39600U, .rfg_value = {444U, 443U}}, {.rfg_register = (unsigned short)39604U, .rfg_value = {508U, 507U}}, {.rfg_register = (unsigned short)39608U, .rfg_value = {60U, 59U}}, {.rfg_register = (unsigned short)39612U, .rfg_value = {124U, 123U}}, {.rfg_register = (unsigned short)39616U, .rfg_value = {188U, 187U}}, {.rfg_register = (unsigned short)39620U, .rfg_value = {252U, 444U}}, {.rfg_register = (unsigned short)39624U, .rfg_value = {252U, 508U}}, {.rfg_register = (unsigned short)39628U, .rfg_value = {252U, 60U}}, {.rfg_register = (unsigned short)39632U, .rfg_value = {252U, 124U}}, {.rfg_register = (unsigned short)39636U, .rfg_value = {252U, 188U}}, {.rfg_register = (unsigned short)39640U, .rfg_value = {252U, 252U}}, {.rfg_register = (unsigned short)39644U, .rfg_value = {252U, 252U}}, {.rfg_register = (unsigned short)39648U, .rfg_value = {252U, 252U}}, {.rfg_register = (unsigned short)39652U, .rfg_value = {252U, 252U}}, {.rfg_register = (unsigned short)39656U, .rfg_value = {252U, 252U}}, {.rfg_register = (unsigned short)39660U, .rfg_value = {252U, 252U}}, {.rfg_register = (unsigned short)39664U, .rfg_value = {252U, 252U}}, {.rfg_register = (unsigned short)39668U, .rfg_value = {252U, 252U}}, {.rfg_register = (unsigned short)39672U, .rfg_value = {252U, 252U}}, {.rfg_register = (unsigned short)39676U, .rfg_value = {252U, 252U}}};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfgain.h"
static struct ath5k_ini_rfgain const rfgain_2413[64U] = {{.rfg_register = (unsigned short)39424U, .rfg_value = {0U, 0U}}, {.rfg_register = (unsigned short)39428U, .rfg_value = {0U, 64U}}, {.rfg_register = (unsigned short)39432U, .rfg_value = {0U, 128U}}, {.rfg_register = (unsigned short)39436U, .rfg_value = {0U, 385U}}, {.rfg_register = (unsigned short)39440U, .rfg_value = {0U, 449U}}, {.rfg_register = (unsigned short)39444U, .rfg_value = {0U, 1U}}, {.rfg_register = (unsigned short)39448U, .rfg_value = {0U, 65U}}, {.rfg_register = (unsigned short)39452U, .rfg_value = {0U, 129U}}, {.rfg_register = (unsigned short)39456U, .rfg_value = {0U, 360U}}, {.rfg_register = (unsigned short)39460U, .rfg_value = {0U, 424U}}, {.rfg_register = (unsigned short)39464U, .rfg_value = {0U, 488U}}, {.rfg_register = (unsigned short)39468U, .rfg_value = {0U, 40U}}, {.rfg_register = (unsigned short)39472U, .rfg_value = {0U, 104U}}, {.rfg_register = (unsigned short)39476U, .rfg_value = {0U, 393U}}, {.rfg_register = (unsigned short)39480U, .rfg_value = {0U, 457U}}, {.rfg_register = (unsigned short)39484U, .rfg_value = {0U, 9U}}, {.rfg_register = (unsigned short)39488U, .rfg_value = {0U, 73U}}, {.rfg_register = (unsigned short)39492U, .rfg_value = {0U, 137U}}, {.rfg_register = (unsigned short)39496U, .rfg_value = {0U, 400U}}, {.rfg_register = (unsigned short)39500U, .rfg_value = {0U, 464U}}, {.rfg_register = (unsigned short)39504U, .rfg_value = {0U, 16U}}, {.rfg_register = (unsigned short)39508U, .rfg_value = {0U, 80U}}, {.rfg_register = (unsigned short)39512U, .rfg_value = {0U, 144U}}, {.rfg_register = (unsigned short)39516U, .rfg_value = {0U, 401U}}, {.rfg_register = (unsigned short)39520U, .rfg_value = {0U, 465U}}, {.rfg_register = (unsigned short)39524U, .rfg_value = {0U, 17U}}, {.rfg_register = (unsigned short)39528U, .rfg_value = {0U, 81U}}, {.rfg_register = (unsigned short)39532U, .rfg_value = {0U, 145U}}, {.rfg_register = (unsigned short)39536U, .rfg_value = {0U, 376U}}, {.rfg_register = (unsigned short)39540U, .rfg_value = {0U, 440U}}, {.rfg_register = (unsigned short)39544U, .rfg_value = {0U, 504U}}, {.rfg_register = (unsigned short)39548U, .rfg_value = {0U, 56U}}, {.rfg_register = (unsigned short)39552U, .rfg_value = {0U, 120U}}, {.rfg_register = (unsigned short)39556U, .rfg_value = {0U, 409U}}, {.rfg_register = (unsigned short)39560U, .rfg_value = {0U, 473U}}, {.rfg_register = (unsigned short)39564U, .rfg_value = {0U, 25U}}, {.rfg_register = (unsigned short)39568U, .rfg_value = {0U, 89U}}, {.rfg_register = (unsigned short)39572U, .rfg_value = {0U, 153U}}, {.rfg_register = (unsigned short)39576U, .rfg_value = {0U, 217U}}, {.rfg_register = (unsigned short)39580U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39584U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39588U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39592U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39596U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39600U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39604U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39608U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39612U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39616U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39620U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39624U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39628U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39632U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39636U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39640U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39644U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39648U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39652U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39656U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39660U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39664U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39668U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39672U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39676U, .rfg_value = {0U, 249U}}};

#line 242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfgain.h"
static struct ath5k_ini_rfgain const rfgain_2316[64U] = {{.rfg_register = (unsigned short)39424U, .rfg_value = {0U, 0U}}, {.rfg_register = (unsigned short)39428U, .rfg_value = {0U, 64U}}, {.rfg_register = (unsigned short)39432U, .rfg_value = {0U, 128U}}, {.rfg_register = (unsigned short)39436U, .rfg_value = {0U, 192U}}, {.rfg_register = (unsigned short)39440U, .rfg_value = {0U, 224U}}, {.rfg_register = (unsigned short)39444U, .rfg_value = {0U, 224U}}, {.rfg_register = (unsigned short)39448U, .rfg_value = {0U, 296U}}, {.rfg_register = (unsigned short)39452U, .rfg_value = {0U, 296U}}, {.rfg_register = (unsigned short)39456U, .rfg_value = {0U, 296U}}, {.rfg_register = (unsigned short)39460U, .rfg_value = {0U, 360U}}, {.rfg_register = (unsigned short)39464U, .rfg_value = {0U, 424U}}, {.rfg_register = (unsigned short)39468U, .rfg_value = {0U, 488U}}, {.rfg_register = (unsigned short)39472U, .rfg_value = {0U, 40U}}, {.rfg_register = (unsigned short)39476U, .rfg_value = {0U, 104U}}, {.rfg_register = (unsigned short)39480U, .rfg_value = {0U, 168U}}, {.rfg_register = (unsigned short)39484U, .rfg_value = {0U, 232U}}, {.rfg_register = (unsigned short)39488U, .rfg_value = {0U, 232U}}, {.rfg_register = (unsigned short)39492U, .rfg_value = {0U, 304U}}, {.rfg_register = (unsigned short)39496U, .rfg_value = {0U, 304U}}, {.rfg_register = (unsigned short)39500U, .rfg_value = {0U, 368U}}, {.rfg_register = (unsigned short)39504U, .rfg_value = {0U, 432U}}, {.rfg_register = (unsigned short)39508U, .rfg_value = {0U, 496U}}, {.rfg_register = (unsigned short)39512U, .rfg_value = {0U, 48U}}, {.rfg_register = (unsigned short)39516U, .rfg_value = {0U, 112U}}, {.rfg_register = (unsigned short)39520U, .rfg_value = {0U, 176U}}, {.rfg_register = (unsigned short)39524U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39528U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39532U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39536U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39540U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39544U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39548U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39552U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39556U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39560U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39564U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39568U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39572U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39576U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39580U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39584U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39588U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39592U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39596U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39600U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39604U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39608U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39612U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39616U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39620U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39624U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39628U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39632U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39636U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39640U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39644U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39648U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39652U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39656U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39660U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39664U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39668U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39672U, .rfg_value = {0U, 240U}}, {.rfg_register = (unsigned short)39676U, .rfg_value = {0U, 240U}}};

#line 311  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfgain.h"
static struct ath5k_ini_rfgain const rfgain_5413[64U] = {{.rfg_register = (unsigned short)39424U, .rfg_value = {0U, 0U}}, {.rfg_register = (unsigned short)39428U, .rfg_value = {64U, 64U}}, {.rfg_register = (unsigned short)39432U, .rfg_value = {128U, 128U}}, {.rfg_register = (unsigned short)39436U, .rfg_value = {417U, 353U}}, {.rfg_register = (unsigned short)39440U, .rfg_value = {481U, 417U}}, {.rfg_register = (unsigned short)39444U, .rfg_value = {33U, 481U}}, {.rfg_register = (unsigned short)39448U, .rfg_value = {97U, 33U}}, {.rfg_register = (unsigned short)39452U, .rfg_value = {392U, 97U}}, {.rfg_register = (unsigned short)39456U, .rfg_value = {456U, 392U}}, {.rfg_register = (unsigned short)39460U, .rfg_value = {8U, 456U}}, {.rfg_register = (unsigned short)39464U, .rfg_value = {72U, 8U}}, {.rfg_register = (unsigned short)39468U, .rfg_value = {136U, 72U}}, {.rfg_register = (unsigned short)39472U, .rfg_value = {425U, 136U}}, {.rfg_register = (unsigned short)39476U, .rfg_value = {489U, 361U}}, {.rfg_register = (unsigned short)39480U, .rfg_value = {41U, 425U}}, {.rfg_register = (unsigned short)39484U, .rfg_value = {105U, 489U}}, {.rfg_register = (unsigned short)39488U, .rfg_value = {464U, 41U}}, {.rfg_register = (unsigned short)39492U, .rfg_value = {16U, 105U}}, {.rfg_register = (unsigned short)39496U, .rfg_value = {80U, 400U}}, {.rfg_register = (unsigned short)39500U, .rfg_value = {144U, 464U}}, {.rfg_register = (unsigned short)39504U, .rfg_value = {433U, 16U}}, {.rfg_register = (unsigned short)39508U, .rfg_value = {497U, 80U}}, {.rfg_register = (unsigned short)39512U, .rfg_value = {49U, 144U}}, {.rfg_register = (unsigned short)39516U, .rfg_value = {113U, 369U}}, {.rfg_register = (unsigned short)39520U, .rfg_value = {440U, 433U}}, {.rfg_register = (unsigned short)39524U, .rfg_value = {504U, 497U}}, {.rfg_register = (unsigned short)39528U, .rfg_value = {56U, 49U}}, {.rfg_register = (unsigned short)39532U, .rfg_value = {120U, 113U}}, {.rfg_register = (unsigned short)39536U, .rfg_value = {409U, 408U}}, {.rfg_register = (unsigned short)39540U, .rfg_value = {473U, 472U}}, {.rfg_register = (unsigned short)39544U, .rfg_value = {25U, 24U}}, {.rfg_register = (unsigned short)39548U, .rfg_value = {89U, 88U}}, {.rfg_register = (unsigned short)39552U, .rfg_value = {153U, 152U}}, {.rfg_register = (unsigned short)39556U, .rfg_value = {217U, 377U}}, {.rfg_register = (unsigned short)39560U, .rfg_value = {249U, 441U}}, {.rfg_register = (unsigned short)39564U, .rfg_value = {249U, 505U}}, {.rfg_register = (unsigned short)39568U, .rfg_value = {249U, 57U}}, {.rfg_register = (unsigned short)39572U, .rfg_value = {249U, 121U}}, {.rfg_register = (unsigned short)39576U, .rfg_value = {249U, 185U}}, {.rfg_register = (unsigned short)39580U, .rfg_value = {249U, 249U}}, {.rfg_register = (unsigned short)39584U, .rfg_value = {249U, 249U}}, {.rfg_register = (unsigned short)39588U, .rfg_value = {249U, 249U}}, {.rfg_register = (unsigned short)39592U, .rfg_value = {249U, 249U}}, {.rfg_register = (unsigned short)39596U, .rfg_value = {249U, 249U}}, {.rfg_register = (unsigned short)39600U, .rfg_value = {249U, 249U}}, {.rfg_register = (unsigned short)39604U, .rfg_value = {249U, 249U}}, {.rfg_register = (unsigned short)39608U, .rfg_value = {249U, 249U}}, {.rfg_register = (unsigned short)39612U, .rfg_value = {249U, 249U}}, {.rfg_register = (unsigned short)39616U, .rfg_value = {249U, 249U}}, {.rfg_register = (unsigned short)39620U, .rfg_value = {249U, 249U}}, {.rfg_register = (unsigned short)39624U, .rfg_value = {249U, 249U}}, {.rfg_register = (unsigned short)39628U, .rfg_value = {249U, 249U}}, {.rfg_register = (unsigned short)39632U, .rfg_value = {249U, 249U}}, {.rfg_register = (unsigned short)39636U, .rfg_value = {249U, 249U}}, {.rfg_register = (unsigned short)39640U, .rfg_value = {249U, 249U}}, {.rfg_register = (unsigned short)39644U, .rfg_value = {249U, 249U}}, {.rfg_register = (unsigned short)39648U, .rfg_value = {249U, 249U}}, {.rfg_register = (unsigned short)39652U, .rfg_value = {249U, 249U}}, {.rfg_register = (unsigned short)39656U, .rfg_value = {249U, 249U}}, {.rfg_register = (unsigned short)39660U, .rfg_value = {249U, 249U}}, {.rfg_register = (unsigned short)39664U, .rfg_value = {249U, 249U}}, {.rfg_register = (unsigned short)39668U, .rfg_value = {249U, 249U}}, {.rfg_register = (unsigned short)39672U, .rfg_value = {249U, 249U}}, {.rfg_register = (unsigned short)39676U, .rfg_value = {249U, 249U}}};

#line 381  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfgain.h"
static struct ath5k_ini_rfgain const rfgain_2425[64U] = {{.rfg_register = (unsigned short)39424U, .rfg_value = {0U, 0U}}, {.rfg_register = (unsigned short)39428U, .rfg_value = {0U, 64U}}, {.rfg_register = (unsigned short)39432U, .rfg_value = {0U, 128U}}, {.rfg_register = (unsigned short)39436U, .rfg_value = {0U, 385U}}, {.rfg_register = (unsigned short)39440U, .rfg_value = {0U, 449U}}, {.rfg_register = (unsigned short)39444U, .rfg_value = {0U, 1U}}, {.rfg_register = (unsigned short)39448U, .rfg_value = {0U, 65U}}, {.rfg_register = (unsigned short)39452U, .rfg_value = {0U, 129U}}, {.rfg_register = (unsigned short)39456U, .rfg_value = {0U, 392U}}, {.rfg_register = (unsigned short)39460U, .rfg_value = {0U, 456U}}, {.rfg_register = (unsigned short)39464U, .rfg_value = {0U, 8U}}, {.rfg_register = (unsigned short)39468U, .rfg_value = {0U, 72U}}, {.rfg_register = (unsigned short)39472U, .rfg_value = {0U, 136U}}, {.rfg_register = (unsigned short)39476U, .rfg_value = {0U, 393U}}, {.rfg_register = (unsigned short)39480U, .rfg_value = {0U, 457U}}, {.rfg_register = (unsigned short)39484U, .rfg_value = {0U, 9U}}, {.rfg_register = (unsigned short)39488U, .rfg_value = {0U, 73U}}, {.rfg_register = (unsigned short)39492U, .rfg_value = {0U, 137U}}, {.rfg_register = (unsigned short)39496U, .rfg_value = {0U, 432U}}, {.rfg_register = (unsigned short)39500U, .rfg_value = {0U, 496U}}, {.rfg_register = (unsigned short)39504U, .rfg_value = {0U, 48U}}, {.rfg_register = (unsigned short)39508U, .rfg_value = {0U, 112U}}, {.rfg_register = (unsigned short)39512U, .rfg_value = {0U, 369U}}, {.rfg_register = (unsigned short)39516U, .rfg_value = {0U, 433U}}, {.rfg_register = (unsigned short)39520U, .rfg_value = {0U, 497U}}, {.rfg_register = (unsigned short)39524U, .rfg_value = {0U, 49U}}, {.rfg_register = (unsigned short)39528U, .rfg_value = {0U, 113U}}, {.rfg_register = (unsigned short)39532U, .rfg_value = {0U, 440U}}, {.rfg_register = (unsigned short)39536U, .rfg_value = {0U, 504U}}, {.rfg_register = (unsigned short)39540U, .rfg_value = {0U, 56U}}, {.rfg_register = (unsigned short)39544U, .rfg_value = {0U, 120U}}, {.rfg_register = (unsigned short)39548U, .rfg_value = {0U, 184U}}, {.rfg_register = (unsigned short)39552U, .rfg_value = {0U, 441U}}, {.rfg_register = (unsigned short)39556U, .rfg_value = {0U, 505U}}, {.rfg_register = (unsigned short)39560U, .rfg_value = {0U, 57U}}, {.rfg_register = (unsigned short)39564U, .rfg_value = {0U, 121U}}, {.rfg_register = (unsigned short)39568U, .rfg_value = {0U, 185U}}, {.rfg_register = (unsigned short)39572U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39576U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39580U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39584U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39588U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39592U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39596U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39600U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39604U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39608U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39612U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39616U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39620U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39624U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39628U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39632U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39636U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39640U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39644U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39648U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39652U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39656U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39660U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39664U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39668U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39672U, .rfg_value = {0U, 249U}}, {.rfg_register = (unsigned short)39676U, .rfg_value = {0U, 249U}}};

#line 493  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfgain.h"
static struct ath5k_gain_opt const rfgain_opt_5111 = {.go_default = (unsigned char)4U, .go_steps_count = (unsigned char)9U, .go_step = {{.gos_param = {(signed char)4, (signed char)1, (signed char)1, (signed char)1}, .gos_gain = (signed char)6}, {.gos_param = {(signed char)4, (signed char)0, (signed char)1, (signed char)1}, .gos_gain = (signed char)4}, {.gos_param = {(signed char)3, (signed char)1, (signed char)1, (signed char)1}, .gos_gain = (signed char)3}, {.gos_param = {(signed char)4, (signed char)0, (signed char)0, (signed char)1}, .gos_gain = (signed char)1}, {.gos_param = {(signed char)4, (signed char)1, (signed char)1, (signed char)0}, .gos_gain = (signed char)0}, {.gos_param = {(signed char)4, (signed char)0, (signed char)1, (signed char)0}, .gos_gain = (signed char)(-2)}, {.gos_param = {(signed char)3, (signed char)1, (signed char)1, (signed char)0}, .gos_gain = (signed char)(-3)}, {.gos_param = {(signed char)4, (signed char)0, (signed char)0, (signed char)0}, .gos_gain = (signed char)(-4)}, {.gos_param = {(signed char)2, (signed char)1, (signed char)1, (signed char)0}, .gos_gain = (signed char)(-6)}}};

#line 520  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfgain.h"
static struct ath5k_gain_opt const rfgain_opt_5112 = {.go_default = (unsigned char)1U, .go_steps_count = (unsigned char)8U, .go_step = {{.gos_param = {(signed char)3, (signed char)0, (signed char)0, (signed char)0, (signed char)0, (signed char)0, (signed char)0}, .gos_gain = (signed char)6}, {.gos_param = {(signed char)2, (signed char)0, (signed char)0, (signed char)0, (signed char)0, (signed char)0, (signed char)0}, .gos_gain = (signed char)0}, {.gos_param = {(signed char)1, (signed char)0, (signed char)0, (signed char)0, (signed char)0, (signed char)0, (signed char)0}, .gos_gain = (signed char)(-3)}, {.gos_param = {(signed char)0, (signed char)0, (signed char)0, (signed char)0, (signed char)0, (signed char)0, (signed char)0}, .gos_gain = (signed char)(-6)}, {.gos_param = {(signed char)0, (signed char)1, (signed char)1, (signed char)0, (signed char)0, (signed char)0, (signed char)0}, .gos_gain = (signed char)(-8)}, {.gos_param = {(signed char)0, (signed char)1, (signed char)1, (signed char)0, (signed char)1, (signed char)1, (signed char)0}, .gos_gain = (signed char)(-10)}, {.gos_param = {(signed char)0, (signed char)1, (signed char)0, (signed char)1, (signed char)1, (signed char)1, (signed char)0}, .gos_gain = (signed char)(-13)}, {.gos_param = {(signed char)0, (signed char)1, (signed char)0, (signed char)1, (signed char)1, (signed char)0, (signed char)1}, .gos_gain = (signed char)(-16)}}};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/regd.h"
u32 ath_regd_get_band_ctl(struct ath_regulatory *, enum ieee80211_band);


#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
u16 ath5k_hw_radio_revision(struct ath5k_hw *ah, enum ieee80211_band band)
{
  u16 __retres;
  unsigned int i;
  u32 srev;
  u16 ret;
  
#line 93 
  switch ((unsigned int)band) {
    case (unsigned int)0: 
#line 94 
    ;
    
#line 95 
    ath5k_hw_reg_write(ah,16391U,(unsigned short)38912);
    
#line 96 
    goto ldv_50720;
    case (unsigned int)1: 
#line 97 
    ;
    
#line 98 
    ath5k_hw_reg_write(ah,7U,(unsigned short)38912);
    
#line 99 
    goto ldv_50720;
    default: 
#line 100 
    ;
    
#line 101 
    __retres = (unsigned short)0U;
    
#line 101 
    goto return_label;
  }
  ldv_50720: 
#line 104 
  ;
  
#line 104 
  usleep_range(2000UL,2500UL);
  
#line 107 
  ath5k_hw_reg_write(ah,7190U,(unsigned short)39120);
  
#line 109 
  i = 0U;
  
#line 109 
  goto ldv_50724;
  ldv_50723: 
#line 110 
  ;
  
#line 110 
  ath5k_hw_reg_write(ah,65536U,(unsigned short)39040);
  
#line 109 
  i += 1U;
  ldv_50724: 
#line 110 
  ;
  
#line 109 
  if (i <= 7U) 
#line 111 
               goto ldv_50723; else 
#line 114 
                                    goto ldv_50725;
  ldv_50725: 
#line 115 
  ;
  
#line 112 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) {
    u32 tmp;
    u32 tmp_0;
    
#line 113 
    tmp = ath5k_hw_reg_read(ah,(unsigned short)39936);
    
#line 113 
    srev = (tmp >> 28) & 15U;
    
#line 114 
    tmp_0 = ath5k_hw_bitswap(srev,4U);
    
#line 114 
    ret = (unsigned short)((unsigned int)((unsigned short)tmp_0) + 1U);
  }
  else {
    u32 tmp_1;
    u32 tmp_2;
    
#line 116 
    tmp_1 = ath5k_hw_reg_read(ah,(unsigned short)39936);
    
#line 116 
    srev = (tmp_1 >> 24) & 255U;
    
#line 117 
    tmp_2 = ath5k_hw_bitswap(((srev >> 4) & 15U) | ((srev << 4) & 255U),8U);
    
#line 117 
    ret = (unsigned short)tmp_2;
  }
  
#line 122 
  ath5k_hw_reg_write(ah,7U,(unsigned short)38912);
  
#line 124 
  __retres = ret;
  return_label: 
#line 124 
                return __retres;
}


#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
bool ath5k_channel_ok(struct ath5k_hw *ah, struct ieee80211_channel *channel)
{
  bool __retres;
  
#line 138 
  u16 freq = channel->center_freq;
  
#line 141 
  if (channel->band == (unsigned int)IEEE80211_BAND_2GHZ) {
    
#line 142 
    if ((int)ah->ah_capabilities.cap_range.range_2ghz_min <= (int)freq && (int)ah->ah_capabilities.cap_range.range_2ghz_max >= (int)freq) {
      
#line 144 
      __retres = (_Bool)1;
      
#line 144 
      goto return_label;
    }
    else ;
  }
  else 
    
#line 145 
    if (channel->band == (unsigned int)IEEE80211_BAND_5GHZ) {
      
#line 146 
      if ((int)ah->ah_capabilities.cap_range.range_5ghz_min <= (int)freq && (int)ah->ah_capabilities.cap_range.range_5ghz_max >= (int)freq) {
        
#line 148 
        __retres = (_Bool)1;
        
#line 148 
        goto return_label;
      }
      else ;
    }
    else ;
  
#line 150 
  __retres = (_Bool)0;
  return_label: 
#line 150 
                return __retres;
}


#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
bool ath5k_hw_chan_has_spur_noise(struct ath5k_hw *ah, struct ieee80211_channel *channel)
{
  bool __retres;
  u8 refclk_freq;
  
#line 164 
  if (((ah->ah_radio == (unsigned int)AR5K_RF5112 || ah->ah_radio == (unsigned int)AR5K_RF5413) || ah->ah_radio == (unsigned int)AR5K_RF2413) || (unsigned int)ah->ah_mac_version == 15U) 
    
#line 168 
    refclk_freq = (unsigned char)40U; else 
#line 170 
                                           refclk_freq = (unsigned char)32U;
  
#line 172 
  if ((int)channel->center_freq % (int)refclk_freq != 0 && (unsigned int)((int)channel->center_freq % (int)refclk_freq) + 4294967286U > 12U) {
    
#line 175 
    __retres = (_Bool)1;
    
#line 175 
    goto return_label;
  }
  else {
    
#line 177 
    __retres = (_Bool)0;
    
#line 177 
    goto return_label;
  }
  return_label: 
#line 172 
                return __retres;
}


#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static unsigned int ath5k_hw_rfb_op(struct ath5k_hw *ah, struct ath5k_rf_reg const *rf_regs, u32 val, u8 reg_id, bool set)
{
  unsigned int __retres;
  u8 offset;
  u8 bank;
  u8 num_bits;
  u8 col;
  u8 position;
  u16 entry;
  u32 mask;
  u32 data;
  u32 last_bit;
  u32 bits_shifted;
  u32 first_bit;
  u32 *rfb;
  s32 bits_left;
  int i;
  int tmp;
  
#line 196 
  struct ath5k_rf_reg const *rfreg = (struct ath5k_rf_reg const *)0;
  
#line 204 
  data = 0U;
  
#line 205 
  rfb = ah->ah_rf_banks;
  
#line 207 
  i = 0;
  
#line 207 
  goto ldv_50760;
  ldv_50759: 
#line 208 
  ;
  
#line 208 
  if ((int)(rf_regs + i)->index == (int)reg_id) {
    
#line 209 
    rfreg = rf_regs + i;
    
#line 210 
    goto ldv_50758;
  }
  else ;
  
#line 207 
  i += 1;
  ldv_50760: 
#line 208 
  ;
  
#line 207 
  if ((unsigned long)i < ah->ah_rf_regs_count) 
#line 209 
                                               goto ldv_50759; else 
#line 212 
                                                                    goto ldv_50758;
  ldv_50758: 
#line 213 
  ;
  
#line 214 
  if (rfb == (u32 *)0U || rfreg == (struct ath5k_rf_reg const *)0) {
    
#line 215 
    printk("\001","ath5k_hw_rfb_op");
    
#line 217 
    __retres = 0U;
    
#line 217 
    goto return_label;
  }
  else ;
  
#line 220 
  bank = rfreg->bank;
  
#line 221 
  num_bits = rfreg->field.len;
  
#line 222 
  first_bit = (unsigned int)rfreg->field.pos;
  
#line 223 
  col = rfreg->field.col;
  
#line 229 
  offset = ah->ah_offset[(int)bank];
  
#line 232 
  if (((unsigned int)col > 3U || (unsigned int)num_bits > 32U) || (unsigned int)num_bits + first_bit > 319U) {
    
#line 233 
    printk("\001","ath5k_hw_rfb_op",(int)offset);
    
#line 234 
    __retres = 0U;
    
#line 234 
    goto return_label;
  }
  else ;
  
#line 237 
  entry = (unsigned short)((int)((unsigned short)((first_bit + 4294967295U) / 8U)) + (int)((unsigned short)offset));
  
#line 238 
  position = (unsigned char)(((unsigned int)((unsigned char)first_bit) + 255U) & 7U);
  
#line 240 
  if ((int)set != 0) 
#line 241 
                     data = ath5k_hw_bitswap(val,(unsigned int)num_bits); else ;
  
#line 243 
  bits_shifted = 0U;
  
#line 243 
  bits_left = (int)num_bits;
  
#line 243 
  goto ldv_50763;
  ldv_50762: 
#line 244 
  ;
  
#line 246 
  if (8 < (int)position + bits_left) 
#line 246 
                                     tmp = 8; else 
#line 246 
                                                   tmp = (int)position + bits_left;
  
#line 246 
  last_bit = (unsigned int)tmp;
  
#line 249 
  mask = (unsigned int)((((1 << last_bit) + -1) ^ ((1 << (int)position) + -1)) << (int)col * 8);
  
#line 252 
  if ((int)set != 0) {
    
#line 253 
    *(rfb + (int)entry) &= ~ mask;
    
#line 254 
    *(rfb + (int)entry) |= ((data << (int)position) << (int)col * 8) & mask;
    
#line 255 
    data >>= 8 - (int)position;
  }
  else {
    
#line 257 
    data = ((((*(rfb + (int)entry) & mask) >> (int)col * 8) >> (int)position) << bits_shifted) | data;
    
#line 259 
    bits_shifted = (last_bit - (unsigned int)position) + bits_shifted;
  }
  
#line 262 
  bits_left -= 8 - (int)position;
  
#line 244 
  position = (unsigned char)0U;
  
#line 244 
  entry = (u16)((int)entry + 1);
  ldv_50763: 
#line 245 
  ;
  
#line 243 
  if (bits_left > 0) 
#line 245 
                     goto ldv_50762; else 
#line 248 
                                          goto ldv_50764;
  ldv_50764: 
#line 249 
  ;
  
#line 265 
  if ((int)set == 0) 
#line 265 
                     data = ath5k_hw_bitswap(data,(unsigned int)num_bits); else 
                                                                    
#line 265 
                                                                    data = 1U;
  
#line 267 
  __retres = data;
  return_label: 
#line 267 
                return __retres;
}


#line 285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
__inline static int ath5k_hw_write_ofdm_timings(struct ath5k_hw *ah, struct ieee80211_channel *channel)
{
  int __retres;
  u32 coef_scaled;
  u32 coef_exp;
  u32 coef_man;
  u32 ds_coef_exp;
  u32 ds_coef_man;
  u32 clock;
  int tmp_66;
  u32 tmp_67;
  u32 tmp_68;
  
#line 292 
  if ((long)(ah->ah_version != (unsigned int)AR5K_AR5212) != 0L || (long)((unsigned int)channel->hw_value == 1U) != 0L) {
    
#line 294 
    ldv_inline_asm();
    
#line 292 
    ;
  }
  else ;
  
#line 299 
  switch ((int)ah->ah_bwmode) {
    case 3: 
#line 300 
    ;
    
#line 301 
    clock = 80U;
    
#line 302 
    goto ldv_50776;
    case 2: 
#line 303 
    ;
    
#line 304 
    clock = 20U;
    
#line 305 
    goto ldv_50776;
    case 1: 
#line 306 
    ;
    
#line 307 
    clock = 10U;
    
#line 308 
    goto ldv_50776;
    default: 
#line 309 
    ;
    
#line 310 
    clock = 40U;
    
#line 311 
    goto ldv_50776;
  }
  ldv_50776: 
#line 313 
  ;
  
#line 313 
  coef_scaled = ((clock * 83886080U) / 2U) / (unsigned int)channel->center_freq;
  
#line 317 
  if (0 != 0) {
    int tmp_64;
    
#line 317 
    if (coef_scaled == 0U) 
#line 317 
                           tmp_64 = ____ilog2_NaN();
    else {
      int tmp_63;
      
#line 317 
      if (((unsigned long long)coef_scaled & 4611686018427387904ULL) == 0ULL) {
        int tmp_62;
        
#line 317 
        if (((unsigned long long)coef_scaled & 2305843009213693952ULL) == 0ULL) {
          int tmp_61;
          
#line 317 
          if (((unsigned long long)coef_scaled & 1152921504606846976ULL) == 0ULL) {
            int tmp_60;
            
#line 317 
            if (((unsigned long long)coef_scaled & 576460752303423488ULL) == 0ULL) {
              int tmp_59;
              
#line 317 
              if (((unsigned long long)coef_scaled & 288230376151711744ULL) == 0ULL) {
                int tmp_58;
                
#line 317 
                if (((unsigned long long)coef_scaled & 144115188075855872ULL) == 0ULL) {
                  int tmp_57;
                  
#line 317 
                  if (((unsigned long long)coef_scaled & 72057594037927936ULL) == 0ULL) {
                    int tmp_56;
                    
#line 317 
                    if (((unsigned long long)coef_scaled & 36028797018963968ULL) == 0ULL) {
                      int tmp_55;
                      
#line 317 
                      if (((unsigned long long)coef_scaled & 18014398509481984ULL) == 0ULL) {
                        int tmp_54;
                        
#line 317 
                        if (((unsigned long long)coef_scaled & 9007199254740992ULL) == 0ULL) {
                          int tmp_53;
                          
#line 317 
                          if (((unsigned long long)coef_scaled & 4503599627370496ULL) == 0ULL) {
                            int tmp_52;
                            
#line 317 
                            if (((unsigned long long)coef_scaled & 2251799813685248ULL) == 0ULL) {
                              int tmp_51;
                              
#line 317 
                              if (((unsigned long long)coef_scaled & 1125899906842624ULL) == 0ULL) {
                                int tmp_50;
                                
#line 317 
                                if (((unsigned long long)coef_scaled & 562949953421312ULL) == 0ULL) {
                                  int tmp_49;
                                  
#line 317 
                                  if (((unsigned long long)coef_scaled & 281474976710656ULL) == 0ULL) {
                                    int tmp_48;
                                    
#line 317 
                                    if (((unsigned long long)coef_scaled & 140737488355328ULL) == 0ULL) {
                                      int tmp_47;
                                      
#line 317 
                                      if (((unsigned long long)coef_scaled & 70368744177664ULL) == 0ULL) {
                                        int tmp_46;
                                        
#line 317 
                                        if (((unsigned long long)coef_scaled & 35184372088832ULL) == 0ULL) {
                                          int tmp_45;
                                          
#line 317 
                                          if (((unsigned long long)coef_scaled & 17592186044416ULL) == 0ULL) {
                                            int tmp_44;
                                            
#line 317 
                                            if (((unsigned long long)coef_scaled & 8796093022208ULL) == 0ULL) {
                                              int tmp_43;
                                              
#line 317 
                                              if (((unsigned long long)coef_scaled & 4398046511104ULL) == 0ULL) {
                                                int tmp_42;
                                                
#line 317 
                                                if (((unsigned long long)coef_scaled & 2199023255552ULL) == 0ULL) {
                                                  int tmp_41;
                                                  
#line 317 
                                                  if (((unsigned long long)coef_scaled & 1099511627776ULL) == 0ULL) {
                                                    int tmp_40;
                                                    
#line 317 
                                                    if (((unsigned long long)coef_scaled & 549755813888ULL) == 0ULL) {
                                                      int tmp_39;
                                                      
#line 317 
                                                      if (((unsigned long long)coef_scaled & 274877906944ULL) == 0ULL) {
                                                        int tmp_38;
                                                        
#line 317 
                                                        if (((unsigned long long)coef_scaled & 137438953472ULL) == 0ULL) {
                                                          int tmp_37;
                                                          
#line 317 
                                                          if (((unsigned long long)coef_scaled & 68719476736ULL) == 0ULL) {
                                                            int tmp_36;
                                                            
#line 317 
                                                            if (((unsigned long long)coef_scaled & 34359738368ULL) == 0ULL) {
                                                              int tmp_35;
                                                              
#line 317 
                                                              if (((unsigned long long)coef_scaled & 17179869184ULL) == 0ULL) {
                                                                int tmp_34;
                                                                
#line 317 
                                                                if (((unsigned long long)coef_scaled & 8589934592ULL) == 0ULL) {
                                                                  int tmp_33;
                                                                  
#line 317 
                                                                  if (
                                                                    ((unsigned long long)coef_scaled & 4294967296ULL) == 0ULL) {
                                                                    int tmp_32;
                                                                    
#line 317 
                                                                    if (
                                                                    coef_scaled >= (u32)0) {
                                                                    int tmp_31;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 1073741824ULL) == 0ULL) {
                                                                    int tmp_30;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 536870912ULL) == 0ULL) {
                                                                    int tmp_29;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 268435456ULL) == 0ULL) {
                                                                    int tmp_28;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 134217728ULL) == 0ULL) {
                                                                    int tmp_27;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 67108864ULL) == 0ULL) {
                                                                    int tmp_26;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 33554432ULL) == 0ULL) {
                                                                    int tmp_25;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 16777216ULL) == 0ULL) {
                                                                    int tmp_24;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 8388608ULL) == 0ULL) {
                                                                    int tmp_23;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 4194304ULL) == 0ULL) {
                                                                    int tmp_22;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 2097152ULL) == 0ULL) {
                                                                    int tmp_21;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 1048576ULL) == 0ULL) {
                                                                    int tmp_20;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 524288ULL) == 0ULL) {
                                                                    int tmp_19;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 262144ULL) == 0ULL) {
                                                                    int tmp_18;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 131072ULL) == 0ULL) {
                                                                    int tmp_17;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 65536ULL) == 0ULL) {
                                                                    int tmp_16;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 32768ULL) == 0ULL) {
                                                                    int tmp_15;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 16384ULL) == 0ULL) {
                                                                    int tmp_14;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 8192ULL) == 0ULL) {
                                                                    int tmp_13;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 4096ULL) == 0ULL) {
                                                                    int tmp_12;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 2048ULL) == 0ULL) {
                                                                    int tmp_11;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 1024ULL) == 0ULL) {
                                                                    int tmp_10;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 512ULL) == 0ULL) {
                                                                    int tmp_9;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 256ULL) == 0ULL) {
                                                                    int tmp_8;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 128ULL) == 0ULL) {
                                                                    int tmp_7;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 64ULL) == 0ULL) {
                                                                    int tmp_6;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 32ULL) == 0ULL) {
                                                                    int tmp_5;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 16ULL) == 0ULL) {
                                                                    int tmp_4;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 8ULL) == 0ULL) {
                                                                    int tmp_3;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 4ULL) == 0ULL) {
                                                                    int tmp_2;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 2ULL) == 0ULL) {
                                                                    int tmp_1;
                                                                    
#line 317 
                                                                    if (
                                                                    ((unsigned long long)coef_scaled & 1ULL) == 0ULL) 
                                                                    
#line 317 
                                                                    tmp_1 = ____ilog2_NaN(); else 
                                                                    
#line 317 
                                                                    tmp_1 = 0;
                                                                    
#line 317 
                                                                    tmp_2 = tmp_1;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_2 = 1;
                                                                    
#line 317 
                                                                    tmp_3 = tmp_2;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_3 = 2;
                                                                    
#line 317 
                                                                    tmp_4 = tmp_3;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_4 = 3;
                                                                    
#line 317 
                                                                    tmp_5 = tmp_4;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_5 = 4;
                                                                    
#line 317 
                                                                    tmp_6 = tmp_5;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_6 = 5;
                                                                    
#line 317 
                                                                    tmp_7 = tmp_6;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_7 = 6;
                                                                    
#line 317 
                                                                    tmp_8 = tmp_7;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_8 = 7;
                                                                    
#line 317 
                                                                    tmp_9 = tmp_8;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_9 = 8;
                                                                    
#line 317 
                                                                    tmp_10 = tmp_9;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_10 = 9;
                                                                    
#line 317 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_11 = 10;
                                                                    
#line 317 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_12 = 11;
                                                                    
#line 317 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_13 = 12;
                                                                    
#line 317 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_14 = 13;
                                                                    
#line 317 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_15 = 14;
                                                                    
#line 317 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_16 = 15;
                                                                    
#line 317 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_17 = 16;
                                                                    
#line 317 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_18 = 17;
                                                                    
#line 317 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_19 = 18;
                                                                    
#line 317 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_20 = 19;
                                                                    
#line 317 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_21 = 20;
                                                                    
#line 317 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_22 = 21;
                                                                    
#line 317 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_23 = 22;
                                                                    
#line 317 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_24 = 23;
                                                                    
#line 317 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_25 = 24;
                                                                    
#line 317 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_26 = 25;
                                                                    
#line 317 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_27 = 26;
                                                                    
#line 317 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_28 = 27;
                                                                    
#line 317 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_29 = 28;
                                                                    
#line 317 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_30 = 29;
                                                                    
#line 317 
                                                                    tmp_31 = tmp_30;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_31 = 30;
                                                                    
#line 317 
                                                                    tmp_32 = tmp_31;
                                                                    }
                                                                    else 
                                                                    
#line 317 
                                                                    tmp_32 = 31;
                                                                    
#line 317 
                                                                    tmp_33 = tmp_32;
                                                                  }
                                                                  else 
                                                                    
#line 317 
                                                                    tmp_33 = 32;
                                                                  
#line 317 
                                                                  tmp_34 = tmp_33;
                                                                }
                                                                else 
                                                                  
#line 317 
                                                                  tmp_34 = 33;
                                                                
#line 317 
                                                                tmp_35 = tmp_34;
                                                              }
                                                              else 
#line 317 
                                                                   tmp_35 = 34;
                                                              
#line 317 
                                                              tmp_36 = tmp_35;
                                                            }
                                                            else 
#line 317 
                                                                 tmp_36 = 35;
                                                            
#line 317 
                                                            tmp_37 = tmp_36;
                                                          }
                                                          else 
#line 317 
                                                               tmp_37 = 36;
                                                          
#line 317 
                                                          tmp_38 = tmp_37;
                                                        }
                                                        else 
#line 317 
                                                             tmp_38 = 37;
                                                        
#line 317 
                                                        tmp_39 = tmp_38;
                                                      }
                                                      else 
#line 317 
                                                           tmp_39 = 38;
                                                      
#line 317 
                                                      tmp_40 = tmp_39;
                                                    }
                                                    else 
#line 317 
                                                         tmp_40 = 39;
                                                    
#line 317 
                                                    tmp_41 = tmp_40;
                                                  }
                                                  else 
#line 317 
                                                       tmp_41 = 40;
                                                  
#line 317 
                                                  tmp_42 = tmp_41;
                                                }
                                                else 
#line 317 
                                                     tmp_42 = 41;
                                                
#line 317 
                                                tmp_43 = tmp_42;
                                              }
                                              else 
#line 317 
                                                   tmp_43 = 42;
                                              
#line 317 
                                              tmp_44 = tmp_43;
                                            }
                                            else 
#line 317 
                                                 tmp_44 = 43;
                                            
#line 317 
                                            tmp_45 = tmp_44;
                                          }
                                          else 
#line 317 
                                               tmp_45 = 44;
                                          
#line 317 
                                          tmp_46 = tmp_45;
                                        }
                                        else 
#line 317 
                                             tmp_46 = 45;
                                        
#line 317 
                                        tmp_47 = tmp_46;
                                      }
                                      else 
#line 317 
                                           tmp_47 = 46;
                                      
#line 317 
                                      tmp_48 = tmp_47;
                                    }
                                    else 
#line 317 
                                         tmp_48 = 47;
                                    
#line 317 
                                    tmp_49 = tmp_48;
                                  }
                                  else 
#line 317 
                                       tmp_49 = 48;
                                  
#line 317 
                                  tmp_50 = tmp_49;
                                }
                                else 
#line 317 
                                     tmp_50 = 49;
                                
#line 317 
                                tmp_51 = tmp_50;
                              }
                              else 
#line 317 
                                   tmp_51 = 50;
                              
#line 317 
                              tmp_52 = tmp_51;
                            }
                            else 
#line 317 
                                 tmp_52 = 51;
                            
#line 317 
                            tmp_53 = tmp_52;
                          }
                          else 
#line 317 
                               tmp_53 = 52;
                          
#line 317 
                          tmp_54 = tmp_53;
                        }
                        else 
#line 317 
                             tmp_54 = 53;
                        
#line 317 
                        tmp_55 = tmp_54;
                      }
                      else 
#line 317 
                           tmp_55 = 54;
                      
#line 317 
                      tmp_56 = tmp_55;
                    }
                    else 
#line 317 
                         tmp_56 = 55;
                    
#line 317 
                    tmp_57 = tmp_56;
                  }
                  else 
#line 317 
                       tmp_57 = 56;
                  
#line 317 
                  tmp_58 = tmp_57;
                }
                else 
#line 317 
                     tmp_58 = 57;
                
#line 317 
                tmp_59 = tmp_58;
              }
              else 
#line 317 
                   tmp_59 = 58;
              
#line 317 
              tmp_60 = tmp_59;
            }
            else 
#line 317 
                 tmp_60 = 59;
            
#line 317 
            tmp_61 = tmp_60;
          }
          else 
#line 317 
               tmp_61 = 60;
          
#line 317 
          tmp_62 = tmp_61;
        }
        else 
#line 317 
             tmp_62 = 61;
        
#line 317 
        tmp_63 = tmp_62;
      }
      else 
#line 317 
           tmp_63 = 62;
      
#line 317 
      tmp_64 = tmp_63;
    }
    
#line 317 
    tmp_66 = tmp_64;
  }
  else 
#line 317 
       tmp_66 = __ilog2_u32(coef_scaled);
  
#line 317 
  coef_exp = (unsigned int)tmp_66;
  
#line 320 
  if (coef_scaled == 0U || coef_exp == 0U) {
    
#line 321 
    __retres = -22;
    
#line 321 
    goto return_label;
  }
  else ;
  
#line 324 
  coef_exp = 38U - coef_exp;
  
#line 329 
  coef_man = (unsigned int)(1 << (23U - coef_exp)) + coef_scaled;
  
#line 334 
  ds_coef_man = coef_man >> (24U - coef_exp);
  
#line 335 
  ds_coef_exp = coef_exp + 4294967280U;
  
#line 337 
  tmp_67 = ath5k_hw_reg_read(ah,(unsigned short)38932);
  
#line 337 
  ;
  
#line 337 
  ;
  
#line 337 
  ath5k_hw_reg_write(ah,(tmp_67 & 131071U) | (ds_coef_man << 17),(unsigned short)38932);
  
#line 339 
  tmp_68 = ath5k_hw_reg_read(ah,(unsigned short)38932);
  
#line 339 
  ;
  
#line 339 
  ;
  
#line 339 
  ath5k_hw_reg_write(ah,(tmp_68 & 4294844415U) | ((ds_coef_exp << 13) & 122880U),(unsigned short)38932);
  
#line 342 
  __retres = 0;
  return_label: 
#line 342 
                return __retres;
}


#line 349  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
int ath5k_hw_phy_disable(struct ath5k_hw *ah)
{
  int __retres;
  
#line 352 
  ath5k_hw_reg_write(ah,2U,(unsigned short)38940);
  
#line 354 
  __retres = 0;
  
#line 354 
  return __retres;
}


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static void ath5k_hw_wait_for_synth(struct ath5k_hw *ah, struct ieee80211_channel *channel)
{
  
#line 370 
  if (ah->ah_version != (unsigned int)AR5K_AR5210) {
    u32 delay;
    u32 tmp;
    
#line 372 
    tmp = ath5k_hw_reg_read(ah,(unsigned short)39188);
    
#line 372 
    delay = tmp & 16383U;
    
#line 374 
    if ((unsigned int)channel->hw_value == 1U) 
#line 374 
                                               delay = (delay << 2) / 22U; else 
                                                                    
#line 374 
                                                                    delay /= 10U;
    
#line 376 
    if ((unsigned int)ah->ah_bwmode == 2U) 
#line 377 
                                           delay <<= 1; else ;
    
#line 378 
    if ((unsigned int)ah->ah_bwmode == 1U) 
#line 379 
                                           delay <<= 2; else ;
    
#line 382 
    usleep_range((unsigned long)(delay + 100U),(unsigned long)((delay + 50U) * 2U));
  }
  else 
#line 384 
       usleep_range(1000UL,1500UL);
  
#line 385 
  return;
}


#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
int ath5k_hw_rfgain_opt_init(struct ath5k_hw *ah)
{
  int __retres;
  
#line 423 
  switch ((unsigned int)ah->ah_radio) {
    case (unsigned int)1: 
#line 424 
    ;
    
#line 425 
    ah->ah_gain.g_step_idx = rfgain_opt_5111.go_default;
    
#line 426 
    ah->ah_gain.g_low = (unsigned char)20U;
    
#line 427 
    ah->ah_gain.g_high = (unsigned char)35U;
    
#line 428 
    ah->ah_gain.g_state = (unsigned char)1U;
    
#line 429 
    goto ldv_50792;
    case (unsigned int)2: 
#line 430 
    ;
    
#line 431 
    ah->ah_gain.g_step_idx = rfgain_opt_5112.go_default;
    
#line 432 
    ah->ah_gain.g_low = (unsigned char)20U;
    
#line 433 
    ah->ah_gain.g_high = (unsigned char)85U;
    
#line 434 
    ah->ah_gain.g_state = (unsigned char)1U;
    
#line 435 
    goto ldv_50792;
    default: 
#line 436 
    ;
    
#line 437 
    __retres = -22;
    
#line 437 
    goto return_label;
  }
  ldv_50792: 
#line 440 
  ;
  
#line 440 
  __retres = 0;
  return_label: 
#line 440 
                return __retres;
}


#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static void ath5k_hw_request_rfgain_probe(struct ath5k_hw *ah)
{
  
#line 462 
  if ((unsigned int)ah->ah_gain.g_state != 1U) 
#line 463 
                                               goto return_label; else ;
  
#line 467 
  ath5k_hw_reg_write(ah,(unsigned int)(((((int)ah->ah_txpower.txp_ofdm + -4) << 9) & 32256) | 32768),(unsigned short)39216);
  
#line 471 
  ah->ah_gain.g_state = (unsigned char)2U;
  return_label: 
#line 472 
                return;
}


#line 483  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static u32 ath5k_hw_rf_gainf_corr(struct ath5k_hw *ah)
{
  u32 __retres;
  u32 mix;
  u32 step;
  u32 *rf;
  struct ath5k_gain_opt const *go;
  struct ath5k_gain_opt_step const *g_step;
  struct ath5k_rf_reg const *rf_regs;
  unsigned int tmp;
  
#line 492 
  if (ah->ah_radio != (unsigned int)AR5K_RF5112 || (unsigned int)ah->ah_radio_5ghz_revision <= 53U) {
    
#line 494 
    __retres = 0U;
    
#line 494 
    goto return_label;
  }
  else ;
  
#line 496 
  go = & rfgain_opt_5112;
  
#line 497 
  rf_regs = (struct ath5k_rf_reg const *)(& rf_regs_5112a);
  
#line 498 
  ah->ah_rf_regs_count = 35UL;
  
#line 500 
  g_step = & go->go_step[(int)ah->ah_gain.g_step_idx];
  
#line 502 
  if (ah->ah_rf_banks == (u32 *)0U) {
    
#line 503 
    __retres = 0U;
    
#line 503 
    goto return_label;
  }
  else ;
  
#line 505 
  rf = ah->ah_rf_banks;
  
#line 506 
  ah->ah_gain.g_f_corr = (unsigned char)0U;
  
#line 509 
  tmp = ath5k_hw_rfb_op(ah,rf_regs,0U,(unsigned char)38,(_Bool)0);
  
#line 509 
  if (tmp != 1U) {
    
#line 510 
    __retres = 0U;
    
#line 510 
    goto return_label;
  }
  else ;
  
#line 513 
  step = ath5k_hw_rfb_op(ah,rf_regs,0U,(unsigned char)40,(_Bool)0);
  
#line 516 
  mix = (unsigned int)g_step->gos_param[0];
  
#line 518 
  switch (mix) {
    case (u32)3: 
#line 519 
    ;
    
#line 520 
    ah->ah_gain.g_f_corr = (unsigned char)((unsigned int)((unsigned char)step) * 2U);
    
#line 521 
    goto ldv_50811;
    case (u32)2: 
#line 522 
    ;
    
#line 523 
    ah->ah_gain.g_f_corr = (unsigned char)((unsigned int)((unsigned char)(step + 2147483643U)) * 2U);
    
#line 524 
    goto ldv_50811;
    case (u32)1: 
#line 525 
    ;
    
#line 526 
    ah->ah_gain.g_f_corr = (unsigned char)step;
    
#line 527 
    goto ldv_50811;
    default: 
#line 528 
    ;
    
#line 529 
    ah->ah_gain.g_f_corr = (unsigned char)0U;
    
#line 530 
    goto ldv_50811;
  }
  ldv_50811: 
#line 533 
  ;
  
#line 533 
  __retres = (unsigned int)ah->ah_gain.g_f_corr;
  return_label: 
#line 533 
                return __retres;
}


#line 548  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static bool ath5k_hw_rf_check_gainf_readback(struct ath5k_hw *ah)
{
  bool __retres;
  struct ath5k_rf_reg const *rf_regs;
  u32 step;
  u32 mix_ovr;
  u32 level[4U];
  u32 *rf;
  
#line 554 
  if (ah->ah_rf_banks == (u32 *)0U) {
    
#line 555 
    __retres = (_Bool)0;
    
#line 555 
    goto return_label;
  }
  else ;
  
#line 557 
  rf = ah->ah_rf_banks;
  
#line 559 
  if (ah->ah_radio == (unsigned int)AR5K_RF5111) {
    unsigned int tmp;
    unsigned int tmp_0;
    
#line 561 
    rf_regs = (struct ath5k_rf_reg const *)(& rf_regs_5111);
    
#line 562 
    ah->ah_rf_regs_count = 16UL;
    
#line 564 
    step = ath5k_hw_rfb_op(ah,rf_regs,0U,(unsigned char)34,(_Bool)0);
    
#line 567 
    level[0] = 0U;
    
#line 568 
    if (step != 63U) 
#line 568 
                     level[1] = step + 4U; else 
#line 568 
                                                level[1] = 50U;
    
#line 569 
    if (step == 63U) 
#line 569 
                     level[2] = level[0]; else 
#line 569 
                                               level[2] = 64U;
    
#line 570 
    level[3] = level[2] + 50U;
    
#line 572 
    if (step == 63U) 
#line 572 
                     tmp = 15U; else 
#line 572 
                                     tmp = 251U;
    
#line 572 
    ah->ah_gain.g_high = (unsigned char)((unsigned int)((unsigned char)level[3]) - tmp);
    
#line 574 
    if (step == 63U) 
#line 574 
                     tmp_0 = 20U; else 
#line 574 
                                       tmp_0 = 0U;
    
#line 574 
    ah->ah_gain.g_low = (unsigned char)((unsigned int)((unsigned char)level[0]) + tmp_0);
  }
  else {
    
#line 578 
    rf_regs = (struct ath5k_rf_reg const *)(& rf_regs_5112);
    
#line 579 
    ah->ah_rf_regs_count = 25UL;
    
#line 581 
    mix_ovr = ath5k_hw_rfb_op(ah,rf_regs,0U,(unsigned char)38,(_Bool)0);
    
#line 584 
    level[2] = 0U;
    
#line 584 
    level[0] = level[2];
    
#line 586 
    if (mix_ovr == 1U) {
      
#line 587 
      level[3] = 83U;
      
#line 587 
      level[1] = level[3];
    }
    else {
      
#line 589 
      level[3] = 107U;
      
#line 589 
      level[1] = level[3];
      
#line 590 
      ah->ah_gain.g_high = (unsigned char)55U;
    }
  }
  
#line 595 
  __retres = (_Bool)((((unsigned int)ah->ah_gain.g_current >= level[0] && (unsigned int)ah->ah_gain.g_current <= level[1]) || ((unsigned int)ah->ah_gain.g_current >= level[2] && (unsigned int)ah->ah_gain.g_current <= level[3])) != 0);
  return_label: 
#line 595 
                return __retres;
}


#line 608  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static s8 ath5k_hw_rf_gainf_adjust(struct ath5k_hw *ah)
{
  s8 __retres;
  struct ath5k_gain_opt const *go;
  struct ath5k_gain_opt_step const *g_step;
  
#line 612 
  int ret = 0;
  
#line 614 
  switch ((unsigned int)ah->ah_radio) {
    case (unsigned int)1: 
#line 615 
    ;
    
#line 616 
    go = & rfgain_opt_5111;
    
#line 617 
    goto ldv_50836;
    case (unsigned int)2: 
#line 618 
    ;
    
#line 619 
    go = & rfgain_opt_5112;
    
#line 620 
    goto ldv_50836;
    default: 
#line 621 
    ;
    
#line 622 
    __retres = (signed char)0;
    
#line 622 
    goto return_label;
  }
  ldv_50836: 
#line 625 
  ;
  
#line 625 
  g_step = & go->go_step[(int)ah->ah_gain.g_step_idx];
  
#line 627 
  if ((int)ah->ah_gain.g_current >= (int)ah->ah_gain.g_high) {
    
#line 630 
    if ((unsigned int)ah->ah_gain.g_step_idx == 0U) {
      
#line 631 
      __retres = (signed char)(-1);
      
#line 631 
      goto return_label;
    }
    else ;
    
#line 633 
    ah->ah_gain.g_target = ah->ah_gain.g_current;
    
#line 633 
    goto ldv_50840;
    ldv_50839: 
#line 634 
    ;
    
#line 638 
    ah->ah_gain.g_step_idx = (u8)((int)ah->ah_gain.g_step_idx - 1);
    
#line 639 
    ah->ah_gain.g_target = (unsigned char)((int)ah->ah_gain.g_target - (int)((unsigned char)(((int)go->go_step[(int)ah->ah_gain.g_step_idx].gos_gain - (int)g_step->gos_gain) * 2)));
    
#line 636 
    g_step = & go->go_step[(int)ah->ah_gain.g_step_idx];
    ldv_50840: 
#line 637 
    ;
    
#line 633 
    if ((int)ah->ah_gain.g_target >= (int)ah->ah_gain.g_high && (unsigned int)ah->ah_gain.g_step_idx != 0U) 
      
#line 637 
      goto ldv_50839; else 
#line 640 
                           goto ldv_50841;
    ldv_50841: 
#line 641 
    ;
    
#line 641 
    ret = 1;
    
#line 642 
    goto done;
  }
  else ;
  
#line 645 
  if ((int)ah->ah_gain.g_current <= (int)ah->ah_gain.g_low) {
    
#line 648 
    if ((int)ah->ah_gain.g_step_idx == (int)go->go_steps_count + -1) {
      
#line 649 
      __retres = (signed char)(-2);
      
#line 649 
      goto return_label;
    }
    else ;
    
#line 651 
    ah->ah_gain.g_target = ah->ah_gain.g_current;
    
#line 651 
    goto ldv_50844;
    ldv_50843: 
#line 652 
    ;
    
#line 656 
    ah->ah_gain.g_step_idx = (u8)((int)ah->ah_gain.g_step_idx + 1);
    
#line 657 
    ah->ah_gain.g_target = (unsigned char)((int)ah->ah_gain.g_target - (int)((unsigned char)(((int)go->go_step[(int)ah->ah_gain.g_step_idx].gos_gain - (int)g_step->gos_gain) * 2)));
    
#line 654 
    g_step = & go->go_step[(int)ah->ah_gain.g_step_idx];
    ldv_50844: 
#line 655 
    ;
    
#line 651 
    if ((int)ah->ah_gain.g_target <= (int)ah->ah_gain.g_low && (int)ah->ah_gain.g_step_idx < (int)go->go_steps_count + -1) 
      
#line 655 
      goto ldv_50843; else 
#line 658 
                           goto ldv_50845;
    ldv_50845: 
#line 659 
    ;
    
#line 659 
    ret = 2;
    
#line 660 
    goto done;
  }
  else ;
  done: 
#line 663 
  ;
  
#line 664 
  if ((long)((ah->debug.level & 32U) != 0U) != 0L) {
    int tmp;
    
#line 664 
    tmp = net_ratelimit();
    
#line 664 
    if ((long)(tmp != 0) != 0L) 
#line 664 
                                _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_hw_rf_gainf_adjust",667,ret,(int)ah->ah_gain.g_step_idx,(int)ah->ah_gain.g_current,(int)ah->ah_gain.g_target); else ;
  }
  else ;
  
#line 669 
  __retres = (signed char)ret;
  return_label: 
#line 669 
                return __retres;
}


#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
enum ath5k_rfgain ath5k_hw_gainf_calibrate(struct ath5k_hw *ah)
{
  enum ath5k_rfgain __retres;
  u32 data;
  u32 type;
  
#line 686 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 688 
  if (ah->ah_rf_banks == (u32 *)0U || (unsigned int)ah->ah_gain.g_state == 0U) {
    
#line 690 
    __retres = AR5K_RFGAIN_INACTIVE;
    
#line 690 
    goto return_label;
  }
  else ;
  
#line 694 
  if ((unsigned int)ah->ah_gain.g_state != 2U) 
#line 695 
                                               goto done; else ;
  
#line 699 
  data = ath5k_hw_reg_read(ah,(unsigned short)39216);
  
#line 702 
  if ((data & 32768U) == 0U) {
    bool tmp;
    
#line 703 
    ah->ah_gain.g_current = (unsigned char)(data >> 25);
    
#line 704 
    type = (data >> 23) & 3U;
    
#line 708 
    if (type == 2U) 
      
#line 709 
      if ((unsigned int)ah->ah_radio_5ghz_revision > 52U) 
#line 710 
                                                          ah->ah_gain.g_current = (unsigned char)((int)ah->ah_gain.g_current + (int)((unsigned char)ee->ee_cck_ofdm_gain_delta)); else 
                                                                    
#line 713 
                                                                    ah->ah_gain.g_current = (unsigned char)((unsigned int)ah->ah_gain.g_current + 5U);
    else ;
    
#line 719 
    if ((unsigned int)ah->ah_radio_5ghz_revision > 52U) {
      
#line 720 
      ath5k_hw_rf_gainf_corr(ah);
      
#line 721 
      if ((int)ah->ah_gain.g_current >= (int)ah->ah_gain.g_f_corr) 
#line 721 
                                                                   ah->ah_gain.g_current = (unsigned char)((int)ah->ah_gain.g_current - (int)ah->ah_gain.g_f_corr); else 
                                                                    
#line 721 
                                                                    ah->ah_gain.g_current = (unsigned char)0U;
    }
    else ;
    
#line 730 
    tmp = ath5k_hw_rf_check_gainf_readback(ah);
    
#line 730 
    if ((int)tmp != 0) 
      
#line 730 
      if ((int)ah->ah_gain.g_current <= (int)ah->ah_gain.g_low || (int)ah->ah_gain.g_current >= (int)ah->ah_gain.g_high) {
        s8 tmp_0;
        
#line 731 
        tmp_0 = ath5k_hw_rf_gainf_adjust(ah);
        
#line 731 
        if ((int)tmp_0 != 0) 
#line 733 
                             ah->ah_gain.g_state = (unsigned char)3U; else 
                                                                    
#line 735 
                                                                    ah->ah_gain.g_state = (unsigned char)1U;
      }
      else 
#line 735 
           ah->ah_gain.g_state = (unsigned char)1U;
    else 
#line 735 
         ah->ah_gain.g_state = (unsigned char)1U;
  }
  else ;
  done: 
#line 739 
  ;
  
#line 740 
  __retres = (enum ath5k_rfgain)ah->ah_gain.g_state;
  return_label: 
#line 740 
                return __retres;
}


#line 754  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static int ath5k_hw_rfgain_init(struct ath5k_hw *ah, enum ieee80211_band band)
{
  int __retres;
  struct ath5k_ini_rfgain const *ath5k_rfg;
  unsigned int i;
  unsigned int size;
  unsigned int index;
  
#line 759 
  switch ((unsigned int)ah->ah_radio) {
    case (unsigned int)1: 
#line 760 
    ;
    
#line 761 
    ath5k_rfg = (struct ath5k_ini_rfgain const *)(& rfgain_5111);
    
#line 762 
    size = 64U;
    
#line 763 
    goto ldv_50866;
    case (unsigned int)2: 
#line 764 
    ;
    
#line 765 
    ath5k_rfg = (struct ath5k_ini_rfgain const *)(& rfgain_5112);
    
#line 766 
    size = 64U;
    
#line 767 
    goto ldv_50866;
    case (unsigned int)3: 
#line 768 
    ;
    
#line 769 
    ath5k_rfg = (struct ath5k_ini_rfgain const *)(& rfgain_2413);
    
#line 770 
    size = 64U;
    
#line 771 
    goto ldv_50866;
    case (unsigned int)5: 
#line 772 
    ;
    
#line 773 
    ath5k_rfg = (struct ath5k_ini_rfgain const *)(& rfgain_2316);
    
#line 774 
    size = 64U;
    
#line 775 
    goto ldv_50866;
    case (unsigned int)4: 
#line 776 
    ;
    
#line 777 
    ath5k_rfg = (struct ath5k_ini_rfgain const *)(& rfgain_5413);
    
#line 778 
    size = 64U;
    
#line 779 
    goto ldv_50866;
    case (unsigned int)6: 
#line 780 
    ;
    case (unsigned int)7: 
#line 781 
    ;
    
#line 782 
    ath5k_rfg = (struct ath5k_ini_rfgain const *)(& rfgain_2425);
    
#line 783 
    size = 64U;
    
#line 784 
    goto ldv_50866;
    default: 
#line 785 
    ;
    
#line 786 
    __retres = -22;
    
#line 786 
    goto return_label;
  }
  ldv_50866: 
#line 789 
  ;
  
#line 789 
  index = (unsigned int)(band == (unsigned int)IEEE80211_BAND_2GHZ);
  
#line 791 
  i = 0U;
  
#line 791 
  goto ldv_50890;
  ldv_50889: 
#line 792 
  ;
  
#line 792 
  if ((i & 63U) != 0U) 
#line 792 
                       __const_udelay(4295UL); else ;
  
#line 793 
  ath5k_hw_reg_write(ah,(ath5k_rfg + i)->rfg_value[index],(unsigned short)((int)(ath5k_rfg + i)->rfg_register));
  
#line 791 
  i += 1U;
  ldv_50890: 
#line 792 
  ;
  
#line 791 
  if (i < size) 
#line 793 
                goto ldv_50889; else 
#line 796 
                                     goto ldv_50891;
  ldv_50891: 
#line 797 
  ;
  
#line 797 
  __retres = 0;
  return_label: 
#line 797 
                return __retres;
}


#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static int ath5k_hw_rfregs_init(struct ath5k_hw *ah, struct ieee80211_channel *channel, unsigned int mode)
{
  int __retres;
  struct ath5k_rf_reg const *rf_regs;
  struct ath5k_ini_rfbuffer const *ini_rfb;
  struct ath5k_gain_opt_step const *g_step;
  u32 *rfb;
  int i;
  
#line 821 
  struct ath5k_gain_opt const *go = (struct ath5k_gain_opt const *)0;
  
#line 823 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 824 
  u8 ee_mode = (unsigned char)0U;
  
#line 826 
  int obdb = -1;
  
#line 826 
  int bank = -1;
  
#line 828 
  switch ((unsigned int)ah->ah_radio) {
    case (unsigned int)1: 
#line 829 
    ;
    
#line 830 
    rf_regs = (struct ath5k_rf_reg const *)(& rf_regs_5111);
    
#line 831 
    ah->ah_rf_regs_count = 16UL;
    
#line 832 
    ini_rfb = (struct ath5k_ini_rfbuffer const *)(& rfb_5111);
    
#line 833 
    ah->ah_rf_banks_size = 45UL;
    
#line 834 
    go = & rfgain_opt_5111;
    
#line 835 
    goto ldv_50914;
    case (unsigned int)2: 
#line 836 
    ;
    
#line 837 
    if ((unsigned int)ah->ah_radio_5ghz_revision > 52U) {
      
#line 838 
      rf_regs = (struct ath5k_rf_reg const *)(& rf_regs_5112a);
      
#line 839 
      ah->ah_rf_regs_count = 35UL;
      
#line 840 
      ini_rfb = (struct ath5k_ini_rfbuffer const *)(& rfb_5112a);
      
#line 841 
      ah->ah_rf_banks_size = 56UL;
    }
    else {
      
#line 843 
      rf_regs = (struct ath5k_rf_reg const *)(& rf_regs_5112);
      
#line 844 
      ah->ah_rf_regs_count = 25UL;
      
#line 845 
      ini_rfb = (struct ath5k_ini_rfbuffer const *)(& rfb_5112);
      
#line 846 
      ah->ah_rf_banks_size = 54UL;
    }
    
#line 848 
    go = & rfgain_opt_5112;
    
#line 849 
    goto ldv_50914;
    case (unsigned int)3: 
#line 850 
    ;
    
#line 851 
    rf_regs = (struct ath5k_rf_reg const *)(& rf_regs_2413);
    
#line 852 
    ah->ah_rf_regs_count = 3UL;
    
#line 853 
    ini_rfb = (struct ath5k_ini_rfbuffer const *)(& rfb_2413);
    
#line 854 
    ah->ah_rf_banks_size = 33UL;
    
#line 855 
    goto ldv_50914;
    case (unsigned int)5: 
#line 856 
    ;
    
#line 857 
    rf_regs = (struct ath5k_rf_reg const *)(& rf_regs_2316);
    
#line 858 
    ah->ah_rf_regs_count = 3UL;
    
#line 859 
    ini_rfb = (struct ath5k_ini_rfbuffer const *)(& rfb_2316);
    
#line 860 
    ah->ah_rf_banks_size = 35UL;
    
#line 861 
    goto ldv_50914;
    case (unsigned int)4: 
#line 862 
    ;
    
#line 863 
    rf_regs = (struct ath5k_rf_reg const *)(& rf_regs_5413);
    
#line 864 
    ah->ah_rf_regs_count = 6UL;
    
#line 865 
    ini_rfb = (struct ath5k_ini_rfbuffer const *)(& rfb_5413);
    
#line 866 
    ah->ah_rf_banks_size = 43UL;
    
#line 867 
    goto ldv_50914;
    case (unsigned int)6: 
#line 868 
    ;
    
#line 869 
    rf_regs = (struct ath5k_rf_reg const *)(& rf_regs_2425);
    
#line 870 
    ah->ah_rf_regs_count = 3UL;
    
#line 871 
    ini_rfb = (struct ath5k_ini_rfbuffer const *)(& rfb_2317);
    
#line 872 
    ah->ah_rf_banks_size = 36UL;
    
#line 873 
    goto ldv_50914;
    case (unsigned int)7: 
#line 874 
    ;
    
#line 875 
    rf_regs = (struct ath5k_rf_reg const *)(& rf_regs_2425);
    
#line 876 
    ah->ah_rf_regs_count = 3UL;
    
#line 877 
    if (ah->ah_mac_srev <= 239U) {
      
#line 878 
      ini_rfb = (struct ath5k_ini_rfbuffer const *)(& rfb_2425);
      
#line 879 
      ah->ah_rf_banks_size = 36UL;
    }
    else {
      
#line 881 
      ini_rfb = (struct ath5k_ini_rfbuffer const *)(& rfb_2417);
      
#line 882 
      ah->ah_rf_banks_size = 36UL;
    }
    
#line 884 
    goto ldv_50914;
    default: 
#line 885 
    ;
    
#line 886 
    __retres = -22;
    
#line 886 
    goto return_label;
  }
  ldv_50914: 
#line 892 
  ;
  
#line 892 
  if (ah->ah_rf_banks == (u32 *)0U) {
    
#line 893 
    ah->ah_rf_banks = (u32 *)kmalloc(ah->ah_rf_banks_size * 4UL,208U);
    
#line 895 
    if (ah->ah_rf_banks == (u32 *)0U) {
      int tmp_0;
      
#line 896 
      tmp_0 = net_ratelimit();
      
#line 896 
      if (tmp_0 != 0) 
#line 896 
                      _ath5k_printk((struct ath5k_hw const *)ah,"\001","out of memory\n"); else ;
      
#line 897 
      __retres = -12;
      
#line 897 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 902 
  rfb = ah->ah_rf_banks;
  
#line 904 
  i = 0;
  
#line 904 
  goto ldv_50968;
  ldv_50967: 
#line 905 
  ;
  
#line 905 
  if ((unsigned int)(ini_rfb + i)->rfb_bank > 7U) {
    int tmp_1;
    
#line 906 
    tmp_1 = net_ratelimit();
    
#line 906 
    if (tmp_1 != 0) 
#line 906 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","invalid bank\n"); else ;
    
#line 907 
    __retres = -22;
    
#line 907 
    goto return_label;
  }
  else ;
  
#line 911 
  if ((int)(ini_rfb + i)->rfb_bank != bank) {
    
#line 912 
    bank = (int)(ini_rfb + i)->rfb_bank;
    
#line 913 
    ah->ah_offset[bank] = (unsigned char)i;
  }
  else ;
  
#line 916 
  *(rfb + i) = (ini_rfb + i)->rfb_mode_data[mode];
  
#line 904 
  i += 1;
  ldv_50968: 
#line 905 
  ;
  
#line 904 
  if ((unsigned long)i < ah->ah_rf_banks_size) 
#line 906 
                                               goto ldv_50967; else 
#line 909 
                                                                    goto ldv_50969;
  ldv_50969: 
#line 910 
  ;
  
#line 920 
  if (channel->band == (unsigned int)IEEE80211_BAND_2GHZ) {
    
#line 922 
    if ((unsigned int)channel->hw_value == 1U) 
#line 923 
                                               ee_mode = (unsigned char)1U; else 
                                                                    
#line 925 
                                                                    ee_mode = (unsigned char)2U;
    
#line 934 
    if ((unsigned int)ah->ah_radio + 4294967295U <= 1U) 
#line 936 
                                                        obdb = 0; else 
                                                                    
#line 938 
                                                                    obdb = 1;
    
#line 940 
    ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)ee->ee_ob[(int)ee_mode][obdb],(unsigned char)1,(_Bool)1);
    
#line 943 
    ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)ee->ee_db[(int)ee_mode][obdb],(unsigned char)3,(_Bool)1);
  }
  else 
    
#line 947 
    if (channel->band == (unsigned int)IEEE80211_BAND_5GHZ || ah->ah_radio == (unsigned int)AR5K_RF5111) {
      
#line 952 
      ee_mode = (unsigned char)0U;
      
#line 953 
      if ((unsigned int)channel->center_freq <= 5724U) {
        int tmp_4;
        
#line 953 
        if ((unsigned int)channel->center_freq <= 5499U) {
          int tmp_3;
          
#line 954 
          if ((unsigned int)channel->center_freq <= 5259U) {
            int tmp_2;
            
#line 955 
            if ((unsigned int)channel->center_freq > 4000U) 
#line 955 
                                                            tmp_2 = 0; else 
                                                                    
#line 955 
                                                                    tmp_2 = -1;
            
#line 954 
            tmp_3 = tmp_2;
          }
          else 
#line 954 
               tmp_3 = 1;
          
#line 953 
          tmp_4 = tmp_3;
        }
        else 
#line 953 
             tmp_4 = 2;
        
#line 953 
        obdb = tmp_4;
      }
      else 
#line 953 
           obdb = 3;
      
#line 958 
      if (obdb < 0) {
        
#line 959 
        __retres = -22;
        
#line 959 
        goto return_label;
      }
      else ;
      
#line 961 
      ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)ee->ee_ob[(int)ee_mode][obdb],(unsigned char)2,(_Bool)1);
      
#line 964 
      ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)ee->ee_db[(int)ee_mode][obdb],(unsigned char)4,(_Bool)1);
    }
    else ;
  
#line 968 
  g_step = & go->go_step[(int)ah->ah_gain.g_step_idx];
  
#line 971 
  if ((unsigned int)ah->ah_bwmode == 3U && ah->ah_radio != (unsigned int)AR5K_RF5413) 
    
#line 973 
    ath5k_hw_rfb_op(ah,rf_regs,1U,(unsigned char)0,(_Bool)0); else ;
  
#line 976 
  if (ah->ah_radio == (unsigned int)AR5K_RF5111) {
    
#line 979 
    if ((unsigned int)channel->hw_value != 1U) {
      unsigned int tmp_5;
      u32 tmp_7;
      unsigned int tmp_6;
      
#line 981 
      if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 981 
                                                       tmp_5 = 38916U; else 
                                                                    
#line 981 
                                                                    tmp_5 = 39236U;
      
#line 981 
      if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 981 
                                                       tmp_6 = 38916U; else 
                                                                    
#line 981 
                                                                    tmp_6 = 39236U;
      
#line 981 
      ;
      
#line 981 
      tmp_7 = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_6));
      
#line 981 
      ;
      
#line 981 
      ;
      
#line 981 
      ath5k_hw_reg_write(ah,(tmp_7 & 4294967239U) | ((unsigned int)((int)g_step->gos_param[0] << 3) & 56U),(unsigned short)((int)tmp_5));
      
#line 985 
      ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)g_step->gos_param[1],(unsigned char)21,(_Bool)1);
      
#line 988 
      ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)g_step->gos_param[2],(unsigned char)20,(_Bool)1);
      
#line 991 
      ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)g_step->gos_param[3],(unsigned char)33,(_Bool)1);
      
#line 996 
      ah->ah_gain.g_state = (unsigned char)1U;
    }
    else ;
    
#line 1002 
    ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)((unsigned int)ee->ee_xpd[(int)ee_mode] == 0U),(unsigned char)7,(_Bool)1);
    
#line 1005 
    ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)ee->ee_x_gain[(int)ee_mode],(unsigned char)9,(_Bool)1);
    
#line 1008 
    ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)ee->ee_i_gain[(int)ee_mode],(unsigned char)31,(_Bool)1);
    
#line 1011 
    ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)ee->ee_xpd[(int)ee_mode],(unsigned char)32,(_Bool)1);
    
#line 1015 
    if ((unsigned int)ah->ah_bwmode + 255U <= 1U) {
      u8 wait_i;
      
#line 1019 
      ath5k_hw_rfb_op(ah,rf_regs,31U,(unsigned char)35,(_Bool)1);
      
#line 1022 
      if ((unsigned int)ah->ah_bwmode == 1U) 
#line 1022 
                                             wait_i = (unsigned char)31U; else 
                                                                    
#line 1022 
                                                                    wait_i = (unsigned char)16U;
      
#line 1025 
      ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)wait_i,(unsigned char)36,(_Bool)1);
      
#line 1027 
      ath5k_hw_rfb_op(ah,rf_regs,3U,(unsigned char)37,(_Bool)1);
    }
    else ;
  }
  else ;
  
#line 1033 
  if (ah->ah_radio == (unsigned int)AR5K_RF5112) {
    
#line 1036 
    if ((unsigned int)channel->hw_value != 1U) {
      
#line 1038 
      ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)g_step->gos_param[0],(unsigned char)39,(_Bool)1);
      
#line 1041 
      ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)g_step->gos_param[1],(unsigned char)27,(_Bool)1);
      
#line 1044 
      ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)g_step->gos_param[2],(unsigned char)26,(_Bool)1);
      
#line 1047 
      ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)g_step->gos_param[3],(unsigned char)25,(_Bool)1);
      
#line 1050 
      ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)g_step->gos_param[4],(unsigned char)24,(_Bool)1);
      
#line 1053 
      ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)g_step->gos_param[5],(unsigned char)23,(_Bool)1);
      
#line 1056 
      ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)g_step->gos_param[6],(unsigned char)22,(_Bool)1);
      
#line 1061 
      ah->ah_gain.g_state = (unsigned char)1U;
    }
    else ;
    
#line 1066 
    ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)ee->ee_xpd[(int)ee_mode],(unsigned char)8,(_Bool)1);
    
#line 1069 
    if ((unsigned int)ah->ah_radio_5ghz_revision <= 52U) 
#line 1071 
                                                         ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)ee->ee_x_gain[(int)ee_mode],(unsigned char)9,(_Bool)1);
    else {
      
#line 1076 
      u8 *pdg_curve_to_idx = (u8 *)(& ee->ee_pdc_to_idx[(int)ee_mode]);
      
#line 1077 
      if ((unsigned int)ee->ee_pd_gains[(int)ee_mode] > 1U) {
        
#line 1078 
        ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)*pdg_curve_to_idx,(unsigned char)10,(_Bool)1);
        
#line 1081 
        ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)*(pdg_curve_to_idx + 1U),(unsigned char)11,(_Bool)1);
      }
      else {
        
#line 1085 
        ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)*pdg_curve_to_idx,(unsigned char)10,(_Bool)1);
        
#line 1088 
        ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)*pdg_curve_to_idx,(unsigned char)11,(_Bool)1);
      }
      
#line 1094 
      if (ah->ah_radio == (unsigned int)AR5K_RF5112 && ((int)ah->ah_radio_5ghz_revision & 15) > 0) {
        
#line 1096 
        ath5k_hw_rfb_op(ah,rf_regs,2U,(unsigned char)12,(_Bool)1);
        
#line 1099 
        ath5k_hw_rfb_op(ah,rf_regs,2U,(unsigned char)13,(_Bool)1);
        
#line 1102 
        ath5k_hw_rfb_op(ah,rf_regs,2U,(unsigned char)14,(_Bool)1);
        
#line 1105 
        ath5k_hw_rfb_op(ah,rf_regs,2U,(unsigned char)15,(_Bool)1);
      }
      else ;
      
#line 1110 
      if ((unsigned int)ah->ah_phy_revision > 65U) {
        
#line 1111 
        ath5k_hw_rfb_op(ah,rf_regs,1U,(unsigned char)16,(_Bool)1);
        
#line 1114 
        ath5k_hw_rfb_op(ah,rf_regs,1U,(unsigned char)17,(_Bool)1);
        
#line 1117 
        ath5k_hw_rfb_op(ah,rf_regs,1U,(unsigned char)18,(_Bool)1);
        
#line 1120 
        ath5k_hw_rfb_op(ah,rf_regs,1U,(unsigned char)29,(_Bool)1);
        
#line 1123 
        ath5k_hw_rfb_op(ah,rf_regs,1U,(unsigned char)28,(_Bool)1);
      }
      else ;
    }
    
#line 1128 
    ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)ee->ee_i_gain[(int)ee_mode],(unsigned char)31,(_Bool)1);
    
#line 1132 
    if ((unsigned int)ah->ah_bwmode + 255U <= 1U) {
      u8 pd_delay;
      
#line 1136 
      if ((unsigned int)ah->ah_bwmode == 1U) 
#line 1136 
                                             pd_delay = (unsigned char)15U; else 
                                                                    
#line 1136 
                                                                    pd_delay = (unsigned char)8U;
      
#line 1139 
      ath5k_hw_rfb_op(ah,rf_regs,(unsigned int)pd_delay,(unsigned char)44,(_Bool)1);
      
#line 1141 
      ath5k_hw_rfb_op(ah,rf_regs,15U,(unsigned char)41,(_Bool)1);
    }
    else ;
  }
  else ;
  
#line 1147 
  if (ah->ah_radio == (unsigned int)AR5K_RF5413 && channel->band == (unsigned int)IEEE80211_BAND_2GHZ) {
    
#line 1150 
    ath5k_hw_rfb_op(ah,rf_regs,1U,(unsigned char)30,(_Bool)1);
    
#line 1154 
    if (ah->ah_mac_srev + 4294967152U <= 19U) {
      u32 tmp_8;
      
#line 1156 
      tmp_8 = ath5k_hw_bitswap(6U,3U);
      
#line 1156 
      ;
      
#line 1156 
      ;
      
#line 1156 
      ath5k_hw_rfb_op(ah,rf_regs,tmp_8,(unsigned char)19,(_Bool)1);
    }
    else ;
  }
  else ;
  
#line 1162 
  i = 0;
  
#line 1162 
  goto ldv_50974;
  ldv_50973: 
#line 1163 
  ;
  
#line 1163 
  if (((unsigned int)i & 63U) != 0U) 
#line 1163 
                                     __const_udelay(4295UL); else ;
  
#line 1164 
  ath5k_hw_reg_write(ah,*(rfb + i),(unsigned short)((int)(ini_rfb + i)->rfb_ctrl_register));
  
#line 1162 
  i += 1;
  ldv_50974: 
#line 1163 
  ;
  
#line 1162 
  if ((unsigned long)i < ah->ah_rf_banks_size) 
#line 1164 
                                               goto ldv_50973; else 
#line 1167 
                                                                    goto ldv_50975;
  ldv_50975: 
#line 1168 
  ;
  
#line 1167 
  __retres = 0;
  return_label: 
#line 1167 
                return __retres;
}


#line 1183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static u32 ath5k_hw_rf5110_chan2athchan(struct ieee80211_channel *channel)
{
  u32 athchan;
  u32 tmp_0;
  int tmp;
  
#line 1189 
  tmp = ieee80211_frequency_to_channel((int)channel->center_freq);
  
#line 1187 
  tmp_0 = ath5k_hw_bitswap((unsigned int)((tmp + -24) / 2),5U);
  
#line 1187 
  athchan = (tmp_0 << 1) | 65U;
  
#line 1191 
  return athchan;
}


#line 1200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static int ath5k_hw_rf5110_channel(struct ath5k_hw *ah, struct ieee80211_channel *channel)
{
  int __retres;
  u32 data;
  
#line 1208 
  data = ath5k_hw_rf5110_chan2athchan(channel);
  
#line 1209 
  ath5k_hw_reg_write(ah,data,(unsigned short)39068);
  
#line 1210 
  ath5k_hw_reg_write(ah,0U,(unsigned short)39104);
  
#line 1211 
  usleep_range(1000UL,1500UL);
  
#line 1213 
  __retres = 0;
  
#line 1213 
  return __retres;
}


#line 1227  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static int ath5k_hw_rf5111_chan2athchan(unsigned int ieee, struct ath5k_athchan_2ghz *athchan)
{
  int __retres;
  int channel;
  
#line 1233 
  channel = (int)ieee;
  
#line 1238 
  if (channel <= 13) {
    
#line 1239 
    athchan->a2_athchan = (unsigned short)((unsigned int)((unsigned short)channel) + 115U);
    
#line 1240 
    athchan->a2_flags = 70U;
  }
  else 
    
#line 1241 
    if (channel == 14) {
      
#line 1242 
      athchan->a2_athchan = (unsigned short)124U;
      
#line 1243 
      athchan->a2_flags = 68U;
    }
    else 
      
#line 1244 
      if ((unsigned int)channel + 4294967281U <= 11U) {
        
#line 1245 
        athchan->a2_athchan = (unsigned short)((unsigned int)((unsigned short)(channel + 19)) * 4U);
        
#line 1246 
        athchan->a2_flags = 70U;
      }
      else {
        
#line 1248 
        __retres = -22;
        
#line 1248 
        goto return_label;
      }
  
#line 1250 
  __retres = 0;
  return_label: 
#line 1250 
                return __retres;
}


#line 1259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static int ath5k_hw_rf5111_channel(struct ath5k_hw *ah, struct ieee80211_channel *channel)
{
  int __retres;
  struct ath5k_athchan_2ghz ath5k_channel_2ghz;
  int tmp;
  u32 data0;
  u32 data1;
  u32 clock;
  int ret;
  
#line 1264 
  tmp = ieee80211_frequency_to_channel((int)channel->center_freq);
  
#line 1263 
  unsigned int ath5k_channel = (unsigned int)tmp;
  
#line 1271 
  data1 = 0U;
  
#line 1271 
  data0 = data1;
  
#line 1273 
  if (channel->band == (unsigned int)IEEE80211_BAND_2GHZ) {
    int tmp_0;
    u32 tmp_1;
    
#line 1276 
    tmp_0 = ieee80211_frequency_to_channel((int)channel->center_freq);
    
#line 1275 
    ret = ath5k_hw_rf5111_chan2athchan((unsigned int)tmp_0,& ath5k_channel_2ghz);
    
#line 1278 
    if (ret != 0) {
      
#line 1279 
      __retres = ret;
      
#line 1279 
      goto return_label;
    }
    else ;
    
#line 1281 
    ath5k_channel = (unsigned int)ath5k_channel_2ghz.a2_athchan;
    
#line 1282 
    tmp_1 = ath5k_hw_bitswap(ath5k_channel_2ghz.a2_flags,8U);
    
#line 1282 
    data0 = ((tmp_1 << 5) & 8160U) | 16U;
  }
  else ;
  
#line 1286 
  if (ath5k_channel <= 144U || (ath5k_channel & 1U) == 0U) {
    u32 tmp_2;
    
#line 1287 
    clock = 1U;
    
#line 1288 
    tmp_2 = ath5k_hw_bitswap(ath5k_channel + 4294967272U,8U);
    
#line 1288 
    data1 = (((tmp_2 << 2) & 1020U) | (clock << 1)) | 1025U;
  }
  else {
    u32 tmp_3;
    
#line 1291 
    clock = 0U;
    
#line 1292 
    tmp_3 = ath5k_hw_bitswap((ath5k_channel + 4294967272U) / 2U,8U);
    
#line 1292 
    data1 = (((tmp_3 << 2) & 1020U) | (clock << 1)) | 1025U;
  }
  
#line 1296 
  ath5k_hw_reg_write(ah,(data1 & 255U) | ((data0 << 8) & 65535U),(unsigned short)39068);
  
#line 1298 
  ath5k_hw_reg_write(ah,((data1 >> 8) & 255U) | (data0 & 65280U),(unsigned short)39120);
  
#line 1301 
  __retres = 0;
  return_label: 
#line 1301 
                return __retres;
}


#line 1317  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static int ath5k_hw_rf5112_channel(struct ath5k_hw *ah, struct ieee80211_channel *channel)
{
  int __retres;
  u32 data;
  u32 data0;
  u32 data1;
  u32 data2;
  u16 c;
  
#line 1323 
  data2 = 0U;
  
#line 1323 
  data1 = data2;
  
#line 1323 
  data0 = data1;
  
#line 1323 
  data = data0;
  
#line 1324 
  c = channel->center_freq;
  
#line 1331 
  if ((unsigned int)c <= 4799U) {
    
#line 1334 
    if (((int)c + -2224) % 5 == 0) {
      
#line 1336 
      data0 = (unsigned int)((((int)c + -2224) * 2) / 10);
      
#line 1337 
      data1 = 1U;
    }
    else 
      
#line 1340 
      if (((int)c + -2192) % 5 == 0) {
        
#line 1342 
        data0 = (unsigned int)((((int)c + -2192) * 2) / 10);
        
#line 1343 
        data1 = 0U;
      }
      else {
        
#line 1345 
        __retres = -22;
        
#line 1345 
        goto return_label;
      }
    
#line 1347 
    data0 = ath5k_hw_bitswap((data0 << 2) & 255U,8U);
  }
  else 
    
#line 1357 
    if ((unsigned int)c % 5U != 2U || (unsigned int)c > 5435U) 
      
#line 1358 
      if ((unsigned int)c % 20U == 0U && (unsigned int)c > 5119U) {
        
#line 1359 
        data0 = ath5k_hw_bitswap((unsigned int)(((int)c + -4800) / 20 << 2),8U);
        
#line 1360 
        data2 = ath5k_hw_bitswap(3U,2U);
      }
      else 
        
#line 1361 
        if ((unsigned int)c % 10U == 0U) {
          
#line 1362 
          data0 = ath5k_hw_bitswap((unsigned int)(((int)c + -4800) / 10 << 1),8U);
          
#line 1363 
          data2 = ath5k_hw_bitswap(2U,2U);
        }
        else 
          
#line 1364 
          if ((unsigned int)c % 5U == 0U) {
            
#line 1365 
            data0 = ath5k_hw_bitswap((unsigned int)(((int)c + -4800) / 5),8U);
            
#line 1366 
            data2 = ath5k_hw_bitswap(1U,2U);
          }
          else {
            
#line 1368 
            __retres = -22;
            
#line 1368 
            goto return_label;
          }
    else {
      
#line 1370 
      data0 = ath5k_hw_bitswap((unsigned int)((((int)c + -4802) * 10) / 25 + 1),8U);
      
#line 1371 
      data2 = ath5k_hw_bitswap(0U,2U);
    }
  
#line 1374 
  data = (((data0 << 4) | (data1 << 1)) | (data2 << 2)) | 4097U;
  
#line 1376 
  ath5k_hw_reg_write(ah,data & 255U,(unsigned short)39068);
  
#line 1377 
  ath5k_hw_reg_write(ah,(data >> 8) & 127U,(unsigned short)39128);
  
#line 1379 
  __retres = 0;
  return_label: 
#line 1379 
                return __retres;
}


#line 1391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static int ath5k_hw_rf2425_channel(struct ath5k_hw *ah, struct ieee80211_channel *channel)
{
  int __retres;
  u32 data;
  u32 data0;
  u32 data2;
  u16 c;
  
#line 1397 
  data2 = 0U;
  
#line 1397 
  data0 = data2;
  
#line 1397 
  data = data0;
  
#line 1398 
  c = channel->center_freq;
  
#line 1400 
  if ((unsigned int)c <= 4799U) {
    
#line 1401 
    data0 = ath5k_hw_bitswap((unsigned int)((int)c + -2272),8U);
    
#line 1402 
    data2 = 0U;
  }
  else 
    
#line 1404 
    if ((unsigned int)c % 5U != 2U || (unsigned int)c > 5435U) {
      
#line 1405 
      if ((unsigned int)c % 20U == 0U && (unsigned int)c <= 5119U) 
#line 1406 
                                                                   data0 = ath5k_hw_bitswap((unsigned int)(((int)c + -4800) / 20 << 2),8U);
      else 
        
#line 1407 
        if ((unsigned int)c % 10U == 0U) 
#line 1408 
                                         data0 = ath5k_hw_bitswap((unsigned int)(((int)c + -4800) / 10 << 1),8U);
        else 
          
#line 1409 
          if ((unsigned int)c % 5U == 0U) 
#line 1410 
                                          data0 = ath5k_hw_bitswap((unsigned int)(((int)c + -4800) / 5),8U);
          else {
            
#line 1412 
            __retres = -22;
            
#line 1412 
            goto return_label;
          }
      
#line 1413 
      data2 = ath5k_hw_bitswap(1U,2U);
    }
    else {
      
#line 1415 
      data0 = ath5k_hw_bitswap((unsigned int)((((int)c + -4802) * 10) / 25 + 1),8U);
      
#line 1416 
      data2 = ath5k_hw_bitswap(0U,2U);
    }
  
#line 1419 
  data = ((data0 << 4) | (data2 << 2)) | 4097U;
  
#line 1421 
  ath5k_hw_reg_write(ah,data & 255U,(unsigned short)39068);
  
#line 1422 
  ath5k_hw_reg_write(ah,(data >> 8) & 127U,(unsigned short)39128);
  
#line 1424 
  __retres = 0;
  return_label: 
#line 1424 
                return __retres;
}


#line 1436  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static int ath5k_hw_channel(struct ath5k_hw *ah, struct ieee80211_channel *channel)
{
  int __retres;
  int ret;
  int tmp_1;
  bool tmp_0;
  
#line 1444 
  tmp_0 = ath5k_channel_ok(ah,channel);
  
#line 1444 
  if (tmp_0) 
#line 1444 
             tmp_1 = 0; else 
#line 1444 
                             tmp_1 = 1;
  
#line 1444 
  if (tmp_1) {
    int tmp;
    
#line 1445 
    tmp = net_ratelimit();
    
#line 1445 
    if (tmp != 0) 
#line 1445 
                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","channel frequency (%u MHz) out of supported ",(int)channel->center_freq); else ;
    
#line 1449 
    __retres = -22;
    
#line 1449 
    goto return_label;
  }
  else ;
  
#line 1455 
  switch ((unsigned int)ah->ah_radio) {
    case (unsigned int)0: 
#line 1456 
    ;
    
#line 1457 
    ret = ath5k_hw_rf5110_channel(ah,channel);
    
#line 1458 
    goto ldv_51023;
    case (unsigned int)1: 
#line 1459 
    ;
    
#line 1460 
    ret = ath5k_hw_rf5111_channel(ah,channel);
    
#line 1461 
    goto ldv_51023;
    case (unsigned int)6: 
#line 1462 
    ;
    case (unsigned int)7: 
#line 1463 
    ;
    
#line 1464 
    ret = ath5k_hw_rf2425_channel(ah,channel);
    
#line 1465 
    goto ldv_51023;
    default: 
#line 1466 
    ;
    
#line 1467 
    ret = ath5k_hw_rf5112_channel(ah,channel);
    
#line 1468 
    goto ldv_51023;
  }
  ldv_51023: 
#line 1471 
  ;
  
#line 1471 
  if (ret != 0) {
    
#line 1472 
    __retres = ret;
    
#line 1472 
    goto return_label;
  }
  else ;
  
#line 1475 
  if ((unsigned int)channel->center_freq == 2484U) {
    u32 tmp_2;
    
#line 1476 
    tmp_2 = ath5k_hw_reg_read(ah,(unsigned short)41476);
    
#line 1476 
    ;
    
#line 1476 
    ath5k_hw_reg_write(ah,tmp_2 | 16U,(unsigned short)41476);
  }
  else {
    u32 tmp_3;
    
#line 1479 
    tmp_3 = ath5k_hw_reg_read(ah,(unsigned short)41476);
    
#line 1479 
    ;
    
#line 1479 
    ath5k_hw_reg_write(ah,tmp_3,(unsigned short)41476);
  }
  
#line 1483 
  ah->ah_current_channel = channel;
  
#line 1485 
  __retres = 0;
  return_label: 
#line 1485 
                return __retres;
}


#line 1527  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static s32 ath5k_hw_read_measured_noise_floor(struct ath5k_hw *ah)
{
  s32 val;
  u32 tmp;
  s32 tmp_0;
  
#line 1531 
  tmp = ath5k_hw_reg_read(ah,(unsigned short)39012);
  
#line 1531 
  val = (int)tmp;
  
#line 1532 
  tmp_0 = sign_extend32((unsigned int)(val >> 19) & 511U,8);
  
#line 1532 
  return tmp_0;
}


#line 1540  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
void ath5k_hw_init_nfcal_hist(struct ath5k_hw *ah)
{
  int i;
  
#line 1544 
  ah->ah_nfcal_hist.index = (short)0;
  
#line 1545 
  i = 0;
  
#line 1545 
  goto ldv_51037;
  ldv_51036: 
#line 1546 
  ;
  
#line 1546 
  ah->ah_nfcal_hist.nfval[i] = (short)(-95);
  
#line 1545 
  i += 1;
  ldv_51037: 
#line 1546 
  ;
  
#line 1545 
  if (i <= 7) 
#line 1547 
              goto ldv_51036; else 
#line 1550 
                                   goto ldv_51038;
  ldv_51038: 
#line 1551 
  ;
  
#line 1552 
  return;
}


#line 1554  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static void ath5k_hw_update_nfcal_hist(struct ath5k_hw *ah, s16 noise_floor)
{
  
#line 1556 
  struct ath5k_nfcal_hist *hist = & ah->ah_nfcal_hist;
  
#line 1557 
  hist->index = (short)((int)((short)((unsigned int)hist->index + 1U)) & 7);
  
#line 1558 
  hist->nfval[(int)hist->index] = noise_floor;
  
#line 1559 
  return;
}


#line 1566  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static s16 ath5k_hw_get_median_noise_floor(struct ath5k_hw *ah)
{
  s16 __retres;
  s16 sort[8U];
  s16 tmp;
  int i;
  int j;
  
#line 1572 
  memcpy((void *)(& sort),(void const *)(& ah->ah_nfcal_hist.nfval),16UL);
  
#line 1573 
  i = 0;
  
#line 1573 
  goto ldv_51055;
  ldv_51054: 
#line 1574 
  ;
  
#line 1574 
  j = 1;
  
#line 1574 
  goto ldv_51052;
  ldv_51051: 
#line 1575 
  ;
  
#line 1575 
  if ((int)sort[j] > (int)sort[j + -1]) {
    
#line 1576 
    tmp = sort[j];
    
#line 1577 
    sort[j] = sort[j + -1];
    
#line 1578 
    sort[j + -1] = tmp;
  }
  else ;
  
#line 1574 
  j += 1;
  ldv_51052: 
#line 1575 
  ;
  
#line 1574 
  if (8 - i > j) 
#line 1576 
                 goto ldv_51051; else 
#line 1579 
                                      goto ldv_51053;
  ldv_51053: 
#line 1580 
  ;
  
#line 1573 
  i += 1;
  ldv_51055: 
#line 1574 
  ;
  
#line 1573 
  if (i <= 6) 
#line 1575 
              goto ldv_51054; else 
#line 1578 
                                   goto ldv_51056;
  ldv_51056: 
#line 1579 
  ;
  
#line 1582 
  i = 0;
  
#line 1582 
  goto ldv_51059;
  ldv_51058: 
#line 1583 
  ;
  
#line 1583 
  if ((long)((ah->debug.level & 32U) != 0U) != 0L) {
    int tmp_0;
    
#line 1583 
    tmp_0 = net_ratelimit();
    
#line 1583 
    if ((long)(tmp_0 != 0) != 0L) 
#line 1583 
                                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_hw_get_median_noise_floor",1584,i,(int)sort[i]); else ;
  }
  else ;
  
#line 1582 
  i += 1;
  ldv_51059: 
#line 1583 
  ;
  
#line 1582 
  if (i <= 7) 
#line 1584 
              goto ldv_51058; else 
#line 1587 
                                   goto ldv_51060;
  ldv_51060: 
#line 1588 
  ;
  
#line 1586 
  __retres = sort[3];
  
#line 1586 
  return __retres;
}


#line 1598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
void ath5k_hw_update_noise_floor(struct ath5k_hw *ah)
{
  u32 val;
  s16 nf;
  s16 threshold;
  u8 ee_mode;
  u32 tmp_0;
  int tmp_1;
  s32 tmp_2;
  u32 tmp_4;
  u32 tmp_5;
  u32 tmp_6;
  
#line 1600 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 1606 
  tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)39008);
  
#line 1606 
  if ((tmp_0 & 2U) != 0U) {
    
#line 1607 
    if ((long)((ah->debug.level & 32U) != 0U) != 0L) {
      int tmp;
      
#line 1607 
      tmp = net_ratelimit();
      
#line 1607 
      if ((long)(tmp != 0) != 0L) 
#line 1607 
                                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_hw_update_noise_floor",1608); else ;
    }
    else ;
    
#line 1610 
    goto return_label;
  }
  else ;
  
#line 1613 
  ah->ah_cal_mask = (unsigned char)((unsigned int)ah->ah_cal_mask | 4U);
  
#line 1615 
  tmp_1 = ath5k_eeprom_mode_from_channel(ah,ah->ah_current_channel);
  
#line 1615 
  ee_mode = (unsigned char)tmp_1;
  
#line 1618 
  tmp_2 = ath5k_hw_read_measured_noise_floor(ah);
  
#line 1618 
  nf = (short)tmp_2;
  
#line 1619 
  threshold = ee->ee_noise_floor_thr[(int)ee_mode];
  
#line 1621 
  if ((int)nf > (int)threshold) {
    
#line 1622 
    if ((long)((ah->debug.level & 32U) != 0U) != 0L) {
      int tmp_3;
      
#line 1622 
      tmp_3 = net_ratelimit();
      
#line 1622 
      if ((long)(tmp_3 != 0) != 0L) 
#line 1622 
                                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_hw_update_noise_floor",1625,(int)nf,(int)threshold); else ;
    }
    else ;
    
#line 1627 
    nf = (short)(-95);
  }
  else ;
  
#line 1630 
  ath5k_hw_update_nfcal_hist(ah,(short)((int)nf));
  
#line 1631 
  nf = ath5k_hw_get_median_noise_floor(ah);
  
#line 1634 
  tmp_4 = ath5k_hw_reg_read(ah,(unsigned short)39012);
  
#line 1634 
  val = tmp_4 & 4294966784U;
  
#line 1635 
  val = ((unsigned int)((int)nf * 2) & 510U) | val;
  
#line 1636 
  ath5k_hw_reg_write(ah,val,(unsigned short)39012);
  
#line 1638 
  tmp_5 = ath5k_hw_reg_read(ah,(unsigned short)39008);
  
#line 1638 
  ;
  
#line 1638 
  ath5k_hw_reg_write(ah,(tmp_5 & 4294803453U) | 2U,(unsigned short)39008);
  
#line 1641 
  ath5k_hw_register_timeout(ah,39008U,2U,0U,(_Bool)0);
  
#line 1650 
  val = (val & 4294966784U) | 412U;
  
#line 1651 
  ath5k_hw_reg_write(ah,val,(unsigned short)39012);
  
#line 1652 
  tmp_6 = ath5k_hw_reg_read(ah,(unsigned short)39008);
  
#line 1652 
  ;
  
#line 1652 
  ath5k_hw_reg_write(ah,tmp_6 | 163842U,(unsigned short)39008);
  
#line 1657 
  ah->ah_noise_floor = (int)nf;
  
#line 1659 
  ah->ah_cal_mask = (unsigned char)((unsigned int)ah->ah_cal_mask & 251U);
  
#line 1661 
  if ((long)((ah->debug.level & 32U) != 0U) != 0L) {
    int tmp_7;
    
#line 1661 
    tmp_7 = net_ratelimit();
    
#line 1661 
    if ((long)(tmp_7 != 0) != 0L) 
#line 1661 
                                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_hw_update_noise_floor",1662,(int)nf); else ;
  }
  else ;
  return_label: 
#line 1662 
                return;
}


#line 1673  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static int ath5k_hw_rf5110_calibrate(struct ath5k_hw *ah, struct ieee80211_channel *channel)
{
  int __retres;
  u32 phy_sig;
  u32 phy_agc;
  u32 phy_sat;
  u32 beacon;
  int ret;
  u32 tmp;
  u32 tmp_0;
  u32 tmp_1;
  u32 tmp_2;
  u32 tmp_3;
  u32 tmp_4;
  u32 tmp_6;
  
#line 1679 
  if (((int)ah->ah_cal_mask & 1) == 0) {
    
#line 1680 
    __retres = 0;
    
#line 1680 
    goto return_label;
  }
  else ;
  
#line 1685 
  tmp = ath5k_hw_reg_read(ah,(unsigned short)32872);
  
#line 1685 
  ;
  
#line 1685 
  ath5k_hw_reg_write(ah,tmp | 96U,(unsigned short)32872);
  
#line 1687 
  beacon = ath5k_hw_reg_read(ah,(unsigned short)32804);
  
#line 1688 
  ath5k_hw_reg_write(ah,beacon & 4286578687U,(unsigned short)32804);
  
#line 1690 
  usleep_range(2000UL,2500UL);
  
#line 1695 
  tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)38920);
  
#line 1695 
  ;
  
#line 1695 
  ath5k_hw_reg_write(ah,tmp_0 | 134217728U,(unsigned short)38920);
  
#line 1696 
  __const_udelay(42950UL);
  
#line 1697 
  ret = ath5k_hw_channel(ah,channel);
  
#line 1702 
  ath5k_hw_reg_write(ah,1U,(unsigned short)38940);
  
#line 1703 
  usleep_range(1000UL,1500UL);
  
#line 1705 
  tmp_1 = ath5k_hw_reg_read(ah,(unsigned short)38920);
  
#line 1705 
  ;
  
#line 1705 
  ath5k_hw_reg_write(ah,tmp_1 & 4160749567U,(unsigned short)38920);
  
#line 1707 
  if (ret != 0) {
    
#line 1708 
    __retres = ret;
    
#line 1708 
    goto return_label;
  }
  else ;
  
#line 1715 
  phy_sig = ath5k_hw_reg_read(ah,(unsigned short)39000);
  
#line 1716 
  phy_agc = ath5k_hw_reg_read(ah,(unsigned short)39004);
  
#line 1717 
  phy_sat = ath5k_hw_reg_read(ah,(unsigned short)39016);
  
#line 1720 
  ath5k_hw_reg_write(ah,phy_sig | 66846720U,(unsigned short)39000);
  
#line 1723 
  ath5k_hw_reg_write(ah,(phy_agc & 4290773119U) | 4178048U,(unsigned short)39004);
  
#line 1728 
  ath5k_hw_reg_write(ah,(phy_sat & 4294836255U) | 4480U,(unsigned short)39016);
  
#line 1733 
  __const_udelay(85900UL);
  
#line 1735 
  tmp_2 = ath5k_hw_reg_read(ah,(unsigned short)38920);
  
#line 1735 
  ;
  
#line 1735 
  ath5k_hw_reg_write(ah,tmp_2 | 134217728U,(unsigned short)38920);
  
#line 1736 
  __const_udelay(42950UL);
  
#line 1737 
  ath5k_hw_reg_write(ah,33U,(unsigned short)39124);
  
#line 1738 
  tmp_3 = ath5k_hw_reg_read(ah,(unsigned short)38920);
  
#line 1738 
  ;
  
#line 1738 
  ath5k_hw_reg_write(ah,tmp_3 & 4160749567U,(unsigned short)38920);
  
#line 1740 
  usleep_range(1000UL,1500UL);
  
#line 1745 
  tmp_4 = ath5k_hw_reg_read(ah,(unsigned short)39008);
  
#line 1745 
  ;
  
#line 1745 
  ath5k_hw_reg_write(ah,tmp_4 | 1U,(unsigned short)39008);
  
#line 1747 
  ret = ath5k_hw_register_timeout(ah,39008U,1U,0U,(_Bool)0);
  
#line 1751 
  ath5k_hw_reg_write(ah,phy_sig,(unsigned short)39000);
  
#line 1752 
  ath5k_hw_reg_write(ah,phy_agc,(unsigned short)39004);
  
#line 1753 
  ath5k_hw_reg_write(ah,phy_sat,(unsigned short)39016);
  
#line 1755 
  if (ret != 0) {
    int tmp_5;
    
#line 1756 
    tmp_5 = net_ratelimit();
    
#line 1756 
    if (tmp_5 != 0) 
#line 1756 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","calibration timeout (%uMHz)\n",(int)channel->center_freq); else ;
    
#line 1758 
    __retres = ret;
    
#line 1758 
    goto return_label;
  }
  else ;
  
#line 1764 
  tmp_6 = ath5k_hw_reg_read(ah,(unsigned short)32872);
  
#line 1764 
  ;
  
#line 1764 
  ath5k_hw_reg_write(ah,tmp_6 & 4294967199U,(unsigned short)32872);
  
#line 1766 
  ath5k_hw_reg_write(ah,beacon,(unsigned short)32804);
  
#line 1768 
  __retres = 0;
  return_label: 
#line 1768 
                return __retres;
}


#line 1776  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static int ath5k_hw_rf511x_iq_calibrate(struct ath5k_hw *ah)
{
  int __retres;
  u32 i_pwr;
  u32 q_pwr;
  s32 iq_corr;
  s32 i_coff;
  s32 i_coffd;
  s32 q_coff;
  s32 q_coffd;
  int i;
  u32 tmp_0;
  int tmp_4;
  int tmp_8;
  u32 tmp_9;
  u32 tmp_10;
  u32 tmp_11;
  u32 tmp_12;
  u32 tmp_13;
  
#line 1783 
  if (! ah->ah_iq_cal_needed) {
    
#line 1784 
    __retres = -22;
    
#line 1784 
    goto return_label;
  }
  else {
    u32 tmp;
    
#line 1785 
    tmp = ath5k_hw_reg_read(ah,(unsigned short)39200);
    
#line 1785 
    if ((tmp & 65536U) != 0U) {
      
#line 1786 
      if ((long)((ah->debug.level & 32U) != 0U) != 0L) 
#line 1786 
                                                       _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_hw_rf511x_iq_calibrate",1787); else ;
      
#line 1788 
      __retres = -16;
      
#line 1788 
      goto return_label;
    }
    else ;
  }
  
#line 1795 
  i = 0;
  
#line 1795 
  goto ldv_51093;
  ldv_51092: 
#line 1796 
  ;
  
#line 1796 
  tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)39960);
  
#line 1796 
  iq_corr = (int)tmp_0;
  
#line 1797 
  i_pwr = ath5k_hw_reg_read(ah,(unsigned short)39952);
  
#line 1798 
  q_pwr = ath5k_hw_reg_read(ah,(unsigned short)39956);
  
#line 1799 
  if ((long)((ah->debug.level & 32U) != 0U) != 0L) 
#line 1799 
                                                   _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_hw_rf511x_iq_calibrate",1800,iq_corr,i_pwr,q_pwr); else ;
  
#line 1801 
  if (i_pwr != 0U && q_pwr != 0U) 
#line 1802 
                                  goto ldv_51091; else ;
  
#line 1795 
  i += 1;
  ldv_51093: 
#line 1796 
  ;
  
#line 1795 
  if (i <= 10) 
#line 1797 
               goto ldv_51092; else 
#line 1800 
                                    goto ldv_51091;
  ldv_51091: 
#line 1801 
  ;
  
#line 1805 
  i_coffd = (int)(((i_pwr >> 1) + (q_pwr >> 1)) >> 7);
  
#line 1807 
  if (ah->ah_version == (unsigned int)AR5K_AR5211) 
#line 1808 
                                                   q_coffd = (int)(q_pwr >> 6); else 
                                                                    
#line 1810 
                                                                    q_coffd = (int)(q_pwr >> 7);
  
#line 1815 
  if (i_coffd == 0 || q_coffd <= 1) {
    
#line 1816 
    __retres = -125;
    
#line 1816 
    goto return_label;
  }
  else ;
  
#line 1820 
  i_coff = - iq_corr / i_coffd;
  {
    int tmp_2;
    int tmp_3;
    {
      int tmp_1;
      
#line 1821 
      s32 _max1 = i_coff;
      
#line 1821 
      int _max2 = -32;
      
#line 1821 
      if (_max1 > _max2) 
#line 1821 
                         tmp_1 = _max1; else 
#line 1821 
                                             tmp_1 = _max2;
      
#line 1821 
      tmp_2 = tmp_1;
    }
    
#line 1821 
    int _min1 = tmp_2;
    
#line 1821 
    int _min2 = 31;
    
#line 1821 
    if (_min1 < _min2) 
#line 1821 
                       tmp_3 = _min1; else 
#line 1821 
                                           tmp_3 = _min2;
    
#line 1821 
    tmp_4 = tmp_3;
  }
  
#line 1821 
  i_coff = tmp_4;
  
#line 1823 
  if (ah->ah_version == (unsigned int)AR5K_AR5211) 
#line 1824 
                                                   q_coff = (int)(i_pwr / (unsigned int)q_coffd + 4294967232U); else 
                                                                    
#line 1826 
                                                                    q_coff = (int)(i_pwr / (unsigned int)q_coffd + 4294967168U);
  {
    int tmp_6;
    int tmp_7;
    {
      int tmp_5;
      
#line 1827 
      s32 _max1_0 = q_coff;
      
#line 1827 
      int _max2_0 = -16;
      
#line 1827 
      if (_max1_0 > _max2_0) 
#line 1827 
                             tmp_5 = _max1_0; else 
#line 1827 
                                                   tmp_5 = _max2_0;
      
#line 1827 
      tmp_6 = tmp_5;
    }
    
#line 1827 
    int _min1_0 = tmp_6;
    
#line 1827 
    int _min2_0 = 15;
    
#line 1827 
    if (_min1_0 < _min2_0) 
#line 1827 
                           tmp_7 = _min1_0; else 
#line 1827 
                                                 tmp_7 = _min2_0;
    
#line 1827 
    tmp_8 = tmp_7;
  }
  
#line 1827 
  q_coff = tmp_8;
  
#line 1829 
  if ((long)((ah->debug.level & 32U) != 0U) != 0L) 
#line 1829 
                                                   _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_hw_rf511x_iq_calibrate",1831,i_coff,q_coff,i_coffd,q_coffd); else ;
  
#line 1834 
  tmp_9 = ath5k_hw_reg_read(ah,(unsigned short)39200);
  
#line 1834 
  ;
  
#line 1834 
  ;
  
#line 1834 
  ath5k_hw_reg_write(ah,(tmp_9 & 4294965279U) | ((unsigned int)(i_coff << 5) & 2016U),(unsigned short)39200);
  
#line 1835 
  tmp_10 = ath5k_hw_reg_read(ah,(unsigned short)39200);
  
#line 1835 
  ;
  
#line 1835 
  ;
  
#line 1835 
  ath5k_hw_reg_write(ah,(tmp_10 & 4294967264U) | ((unsigned int)q_coff & 31U),(unsigned short)39200);
  
#line 1836 
  tmp_11 = ath5k_hw_reg_read(ah,(unsigned short)39200);
  
#line 1836 
  ;
  
#line 1836 
  ath5k_hw_reg_write(ah,tmp_11 | 2048U,(unsigned short)39200);
  
#line 1840 
  tmp_12 = ath5k_hw_reg_read(ah,(unsigned short)39200);
  
#line 1840 
  ;
  
#line 1840 
  ath5k_hw_reg_write(ah,tmp_12 | 61440U,(unsigned short)39200);
  
#line 1842 
  tmp_13 = ath5k_hw_reg_read(ah,(unsigned short)39200);
  
#line 1842 
  ;
  
#line 1842 
  ath5k_hw_reg_write(ah,tmp_13 | 65536U,(unsigned short)39200);
  
#line 1844 
  __retres = 0;
  return_label: 
#line 1844 
                return __retres;
}


#line 1857  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
int ath5k_hw_phy_calibrate(struct ath5k_hw *ah, struct ieee80211_channel *channel)
{
  int __retres;
  int ret;
  
#line 1862 
  if (ah->ah_radio == (unsigned int)AR5K_RF5110) {
    int tmp;
    
#line 1863 
    tmp = ath5k_hw_rf5110_calibrate(ah,channel);
    
#line 1863 
    __retres = tmp;
    
#line 1863 
    goto return_label;
  }
  else ;
  
#line 1865 
  ret = ath5k_hw_rf511x_iq_calibrate(ah);
  
#line 1866 
  if (ret != 0) {
    
#line 1867 
    if ((long)((ah->debug.level & 32U) != 0U) != 0L) 
#line 1867 
                                                     _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_hw_phy_calibrate",1869,(int)channel->center_freq); else ;
    
#line 1873 
    ret = 0;
  }
  else ;
  
#line 1878 
  if ((((int)ah->ah_cal_mask & 1) != 0 && (unsigned int)ah->ah_radio + 4294967295U <= 1U) && (unsigned int)channel->hw_value != 1U) 
    
#line 1882 
    ath5k_hw_request_rfgain_probe(ah); else ;
  
#line 1885 
  if (((int)ah->ah_cal_mask & 4) == 0) 
#line 1886 
                                       ath5k_hw_update_noise_floor(ah); else ;
  
#line 1888 
  __retres = ret;
  return_label: 
#line 1888 
                return __retres;
}


#line 1907  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static void ath5k_hw_set_spur_mitigation_filter(struct ath5k_hw *ah, struct ieee80211_channel *channel)
{
  u16 spur_chan_fbin;
  u16 chan_fbin;
  u16 symbol_width;
  u16 spur_detection_window;
  s32 spur_delta_phase;
  s32 spur_freq_sigma_delta;
  s32 spur_offset;
  s32 num_symbols_x16;
  u8 num_symbol_offsets;
  u8 i;
  u8 freq_band;
  
#line 1910 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 1911 
  u32 mag_mask[4U] = {0U, 0U, 0U, 0U};
  
#line 1912 
  u32 pilot_mask[2U] = {0U, 0U};
  
#line 1922 
  if (channel->band == (unsigned int)IEEE80211_BAND_2GHZ) {
    
#line 1923 
    chan_fbin = (unsigned short)((unsigned int)channel->center_freq * 10U + 42536U);
    
#line 1924 
    freq_band = (unsigned char)1U;
  }
  else {
    
#line 1926 
    chan_fbin = (unsigned short)((unsigned int)channel->center_freq * 10U + 16536U);
    
#line 1927 
    freq_band = (unsigned char)0U;
  }
  
#line 1932 
  spur_chan_fbin = (unsigned short)32768U;
  
#line 1933 
  spur_detection_window = (unsigned short)87U;
  
#line 1935 
  if ((unsigned int)ah->ah_bwmode == 3U) 
#line 1936 
                                         spur_detection_window = (unsigned short)((unsigned int)spur_detection_window * 2U); else ;
  
#line 1938 
  i = (unsigned char)0U;
  
#line 1938 
  goto ldv_51138;
  ldv_51137: 
#line 1939 
  ;
  
#line 1939 
  spur_chan_fbin = ee->ee_spur_chans[(int)i][(int)freq_band];
  
#line 1943 
  if ((unsigned int)spur_chan_fbin == 32768U) {
    
#line 1944 
    spur_chan_fbin = (unsigned short)((unsigned int)spur_chan_fbin & 16383U);
    
#line 1945 
    goto ldv_51136;
  }
  else ;
  
#line 1948 
  if ((int)chan_fbin - (int)spur_detection_window <= ((int)spur_chan_fbin & 16383) && (int)chan_fbin + (int)spur_detection_window >= ((int)spur_chan_fbin & 16383)) {
    
#line 1952 
    spur_chan_fbin = (unsigned short)((unsigned int)spur_chan_fbin & 16383U);
    
#line 1953 
    goto ldv_51136;
  }
  else ;
  
#line 1938 
  i = (u8)((int)i + 1);
  ldv_51138: 
#line 1939 
  ;
  
#line 1938 
  if ((unsigned int)i <= 4U) 
#line 1940 
                             goto ldv_51137; else 
#line 1943 
                                                  goto ldv_51136;
  ldv_51136: 
#line 1944 
  ;
  
#line 1958 
  if ((unsigned int)spur_chan_fbin != 0U) {
    u32 tmp_0;
    u32 tmp_1;
    u32 tmp_2;
    u32 tmp_3;
    u32 tmp_4;
    u32 tmp_5;
    
#line 1959 
    spur_offset = (int)spur_chan_fbin - (int)chan_fbin;
    
#line 1966 
    switch ((int)ah->ah_bwmode) {
      case 3: 
#line 1967 
      ;
      
#line 1969 
      spur_delta_phase = (spur_offset << 16) / 25;
      
#line 1970 
      spur_freq_sigma_delta = spur_delta_phase >> 10;
      
#line 1971 
      symbol_width = (unsigned short)6250U;
      
#line 1972 
      goto ldv_51140;
      case 2: 
#line 1973 
      ;
      
#line 1975 
      spur_delta_phase = (spur_offset << 18) / 25;
      
#line 1976 
      spur_freq_sigma_delta = spur_delta_phase >> 10;
      
#line 1977 
      symbol_width = (unsigned short)1562U;
      
#line 1978 
      goto ldv_51140;
      case 1: 
#line 1979 
      ;
      
#line 1981 
      spur_delta_phase = (spur_offset << 19) / 25;
      
#line 1982 
      spur_freq_sigma_delta = spur_delta_phase >> 10;
      
#line 1983 
      symbol_width = (unsigned short)781U;
      
#line 1984 
      goto ldv_51140;
      default: 
#line 1985 
      ;
      
#line 1986 
      if (channel->band == (unsigned int)IEEE80211_BAND_5GHZ) {
        
#line 1988 
        spur_delta_phase = (spur_offset << 17) / 25;
        
#line 1989 
        spur_freq_sigma_delta = spur_delta_phase >> 10;
        
#line 1991 
        symbol_width = (unsigned short)3125U;
      }
      else {
        
#line 1996 
        spur_delta_phase = (spur_offset << 17) / 25;
        
#line 1997 
        spur_freq_sigma_delta = (spur_offset << 8) / 55;
        
#line 1999 
        symbol_width = (unsigned short)3125U;
      }
      
#line 2002 
      goto ldv_51140;
    }
    ldv_51140: 
#line 2010 
    ;
    
#line 2010 
    num_symbols_x16 = (spur_offset * 1000 << 4) / (int)symbol_width;
    
#line 2013 
    if ((num_symbols_x16 & 15) == 0) 
#line 2015 
                                     num_symbol_offsets = (unsigned char)3U; else 
                                                                    
#line 2018 
                                                                    num_symbol_offsets = (unsigned char)4U;
    
#line 2020 
    i = (unsigned char)0U;
    
#line 2020 
    goto ldv_51147;
    ldv_51146: 
#line 2021 
    ;
    {
      unsigned int tmp;
      
#line 2023 
      s32 curr_sym_off = (num_symbols_x16 / 16 + (int)i) + 25;
      
#line 2031 
      if ((unsigned int)i == 0U || (int)i == (int)num_symbol_offsets + -1) 
        
#line 2031 
        tmp = 1U; else 
#line 2031 
                       tmp = 2U;
      
#line 2031 
      u8 plt_mag_map = (unsigned char)tmp;
      
#line 2035 
      if ((unsigned int)curr_sym_off <= 32U) {
        
#line 2036 
        if (curr_sym_off <= 25) 
#line 2037 
                                pilot_mask[0] |= (unsigned int)(1 << curr_sym_off);
        else 
          
#line 2038 
          if (curr_sym_off > 26) 
#line 2039 
                                 pilot_mask[0] |= (unsigned int)(1 << (curr_sym_off + -1)); else ;
      }
      else 
        
#line 2040 
        if ((unsigned int)curr_sym_off + 4294967263U <= 19U) 
#line 2041 
                                                             pilot_mask[1] |= (unsigned int)(1 << (curr_sym_off + -33)); else ;
      
#line 2044 
      if ((unsigned int)curr_sym_off + 1U <= 15U) 
#line 2045 
                                                  mag_mask[0] |= (unsigned int)((int)plt_mag_map << (curr_sym_off + 1) * 2);
      else 
        
#line 2047 
        if ((unsigned int)curr_sym_off + 4294967281U <= 15U) 
#line 2048 
                                                             mag_mask[1] |= (unsigned int)((int)plt_mag_map << (curr_sym_off + -15) * 2);
        else 
          
#line 2050 
          if ((unsigned int)curr_sym_off + 4294967265U <= 15U) 
#line 2051 
                                                               mag_mask[2] |= (unsigned int)((int)plt_mag_map << (curr_sym_off + -31) * 2);
          else 
            
#line 2053 
            if ((unsigned int)curr_sym_off + 4294967249U <= 6U) 
#line 2054 
                                                                mag_mask[3] |= (unsigned int)((int)plt_mag_map << (curr_sym_off + -47) * 2); else ;
    }
    
#line 2020 
    i = (u8)((int)i + 1);
    ldv_51147: 
#line 2021 
    ;
    
#line 2020 
    if ((int)i < (int)num_symbol_offsets) 
#line 2022 
                                          goto ldv_51146; else 
#line 2025 
                                                               goto ldv_51148;
    ldv_51148: 
#line 2026 
    ;
    
#line 2060 
    tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)39180);
    
#line 2060 
    ;
    
#line 2060 
    ath5k_hw_reg_write(ah,tmp_0 | 4278190080U,(unsigned short)39180);
    
#line 2063 
    tmp_1 = ath5k_hw_reg_read(ah,(unsigned short)39200);
    
#line 2063 
    ;
    
#line 2063 
    ath5k_hw_reg_write(ah,tmp_1 | 1879048192U,(unsigned short)39200);
    
#line 2069 
    ath5k_hw_reg_write(ah,(unsigned int)(((spur_delta_phase & 1048575) | ((spur_freq_sigma_delta << 20) & 1072693248)) | 1073741824),(unsigned short)39328);
    
#line 2078 
    ath5k_hw_reg_write(ah,pilot_mask[0],(unsigned short)39296);
    
#line 2079 
    tmp_2 = ath5k_hw_reg_read(ah,(unsigned short)39300);
    
#line 2079 
    ;
    
#line 2079 
    ;
    
#line 2079 
    ath5k_hw_reg_write(ah,(tmp_2 & 4293918720U) | (pilot_mask[1] & 1048575U),(unsigned short)39300);
    
#line 2083 
    ath5k_hw_reg_write(ah,pilot_mask[0],(unsigned short)39320);
    
#line 2084 
    tmp_3 = ath5k_hw_reg_read(ah,(unsigned short)39324);
    
#line 2084 
    ;
    
#line 2084 
    ;
    
#line 2084 
    ath5k_hw_reg_write(ah,(tmp_3 & 4293918720U) | (pilot_mask[1] & 1048575U),(unsigned short)39324);
    
#line 2089 
    ath5k_hw_reg_write(ah,mag_mask[0],(unsigned short)39168);
    
#line 2090 
    ath5k_hw_reg_write(ah,mag_mask[1],(unsigned short)39172);
    
#line 2091 
    ath5k_hw_reg_write(ah,mag_mask[2],(unsigned short)39176);
    
#line 2092 
    tmp_4 = ath5k_hw_reg_read(ah,(unsigned short)39180);
    
#line 2092 
    ;
    
#line 2092 
    ;
    
#line 2092 
    ath5k_hw_reg_write(ah,(tmp_4 & 4294950912U) | (mag_mask[3] & 16383U),(unsigned short)39180);
    
#line 2096 
    ath5k_hw_reg_write(ah,mag_mask[0],(unsigned short)39304);
    
#line 2097 
    ath5k_hw_reg_write(ah,mag_mask[1],(unsigned short)39308);
    
#line 2098 
    ath5k_hw_reg_write(ah,mag_mask[2],(unsigned short)39312);
    
#line 2099 
    tmp_5 = ath5k_hw_reg_read(ah,(unsigned short)39316);
    
#line 2099 
    ;
    
#line 2099 
    ;
    
#line 2099 
    ath5k_hw_reg_write(ah,(tmp_5 & 4294950912U) | (mag_mask[3] & 16383U),(unsigned short)39316);
  }
  else {
    u32 tmp_12;
    
#line 2103 
    tmp_12 = ath5k_hw_reg_read(ah,(unsigned short)39200);
    
#line 2103 
    if ((tmp_12 & 1073741824U) != 0U) {
      u32 tmp_6;
      u32 tmp_7;
      u32 tmp_8;
      u32 tmp_9;
      u32 tmp_10;
      u32 tmp_11;
      
#line 2106 
      tmp_6 = ath5k_hw_reg_read(ah,(unsigned short)39180);
      
#line 2106 
      ;
      
#line 2106 
      ath5k_hw_reg_write(ah,tmp_6 & 16777215U,(unsigned short)39180);
      
#line 2108 
      tmp_7 = ath5k_hw_reg_read(ah,(unsigned short)39200);
      
#line 2108 
      ;
      
#line 2108 
      ath5k_hw_reg_write(ah,tmp_7 & 2415919103U,(unsigned short)39200);
      
#line 2112 
      ath5k_hw_reg_write(ah,0U,(unsigned short)39328);
      
#line 2115 
      ath5k_hw_reg_write(ah,0U,(unsigned short)39296);
      
#line 2116 
      tmp_8 = ath5k_hw_reg_read(ah,(unsigned short)39300);
      
#line 2116 
      ;
      
#line 2116 
      ath5k_hw_reg_write(ah,tmp_8 & 4293918720U,(unsigned short)39300);
      
#line 2120 
      ath5k_hw_reg_write(ah,0U,(unsigned short)39320);
      
#line 2121 
      tmp_9 = ath5k_hw_reg_read(ah,(unsigned short)39324);
      
#line 2121 
      ;
      
#line 2121 
      ath5k_hw_reg_write(ah,tmp_9 & 4293918720U,(unsigned short)39324);
      
#line 2126 
      ath5k_hw_reg_write(ah,0U,(unsigned short)39168);
      
#line 2127 
      ath5k_hw_reg_write(ah,0U,(unsigned short)39172);
      
#line 2128 
      ath5k_hw_reg_write(ah,0U,(unsigned short)39176);
      
#line 2129 
      tmp_10 = ath5k_hw_reg_read(ah,(unsigned short)39180);
      
#line 2129 
      ;
      
#line 2129 
      ath5k_hw_reg_write(ah,tmp_10 & 4294950912U,(unsigned short)39180);
      
#line 2133 
      ath5k_hw_reg_write(ah,0U,(unsigned short)39304);
      
#line 2134 
      ath5k_hw_reg_write(ah,0U,(unsigned short)39308);
      
#line 2135 
      ath5k_hw_reg_write(ah,0U,(unsigned short)39312);
      
#line 2136 
      tmp_11 = ath5k_hw_reg_read(ah,(unsigned short)39316);
      
#line 2136 
      ;
      
#line 2136 
      ath5k_hw_reg_write(ah,tmp_11 & 4294950912U,(unsigned short)39316);
    }
    else ;
  }
  
#line 2138 
  return;
}


#line 2203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static void ath5k_hw_set_def_antenna(struct ath5k_hw *ah, u8 ant)
{
  
#line 2205 
  if (ah->ah_version != (unsigned int)AR5K_AR5210) 
#line 2206 
                                                   ath5k_hw_reg_write(ah,(unsigned int)ant & 7U,(unsigned short)32856); else ;
  
#line 2207 
  return;
}


#line 2216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static void ath5k_hw_set_fast_div(struct ath5k_hw *ah, u8 ee_mode, bool enable)
{
  
#line 2218 
  switch ((int)ee_mode) {
    u32 tmp_1;
    case 2: 
#line 2219 
    ;
    case 0: 
#line 2222 
    ;
    
#line 2223 
    if ((int)enable != 0) {
      u32 tmp;
      
#line 2224 
      tmp = ath5k_hw_reg_read(ah,(unsigned short)39008);
      
#line 2224 
      ;
      
#line 2224 
      ath5k_hw_reg_write(ah,tmp & 4294967287U,(unsigned short)39008);
    }
    else {
      u32 tmp_0;
      
#line 2227 
      tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)39008);
      
#line 2227 
      ;
      
#line 2227 
      ath5k_hw_reg_write(ah,tmp_0 | 8U,(unsigned short)39008);
    }
    
#line 2229 
    goto ldv_51160;
    case 1: 
#line 2230 
    ;
    
#line 2231 
    tmp_1 = ath5k_hw_reg_read(ah,(unsigned short)39008);
    
#line 2231 
    ;
    
#line 2231 
    ath5k_hw_reg_write(ah,tmp_1 | 8U,(unsigned short)39008);
    
#line 2233 
    goto ldv_51160;
    default: 
#line 2234 
    ;
    
#line 2235 
    goto return_label;
  }
  ldv_51160: 
#line 2238 
  ;
  
#line 2238 
  if ((int)enable != 0) {
    u32 tmp_2;
    u32 tmp_3;
    
#line 2239 
    tmp_2 = ath5k_hw_reg_read(ah,(unsigned short)39280);
    
#line 2239 
    ;
    
#line 2239 
    ath5k_hw_reg_write(ah,(tmp_2 & 4293132287U) | 1048576U,(unsigned short)39280);
    
#line 2242 
    tmp_3 = ath5k_hw_reg_read(ah,(unsigned short)41480);
    
#line 2242 
    ;
    
#line 2242 
    ath5k_hw_reg_write(ah,tmp_3 | 8192U,(unsigned short)41480);
  }
  else {
    u32 tmp_4;
    u32 tmp_5;
    
#line 2245 
    tmp_4 = ath5k_hw_reg_read(ah,(unsigned short)39280);
    
#line 2245 
    ;
    
#line 2245 
    ath5k_hw_reg_write(ah,tmp_4 & 4293132287U,(unsigned short)39280);
    
#line 2248 
    tmp_5 = ath5k_hw_reg_read(ah,(unsigned short)41480);
    
#line 2248 
    ;
    
#line 2248 
    ath5k_hw_reg_write(ah,tmp_5 & 4294959103U,(unsigned short)41480);
  }
  return_label: 
#line 2250 
                return;
}


#line 2262  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
void ath5k_hw_set_antenna_switch(struct ath5k_hw *ah, u8 ee_mode)
{
  u8 ant0;
  u8 ant1;
  u32 tmp;
  
#line 2270 
  if ((unsigned int)ah->ah_ant_mode == 1U) {
    
#line 2271 
    ant1 = (unsigned char)1U;
    
#line 2271 
    ant0 = ant1;
  }
  else 
    
#line 2272 
    if ((unsigned int)ah->ah_ant_mode == 2U) {
      
#line 2273 
      ant1 = (unsigned char)2U;
      
#line 2273 
      ant0 = ant1;
    }
    else {
      
#line 2275 
      ant0 = (unsigned char)1U;
      
#line 2276 
      ant1 = (unsigned char)2U;
    }
  
#line 2280 
  tmp = ath5k_hw_reg_read(ah,(unsigned short)39184);
  
#line 2280 
  ;
  
#line 2280 
  ;
  
#line 2280 
  ath5k_hw_reg_write(ah,((tmp & 4294966287U) | ((ah->ah_ant_ctl[(int)ee_mode][0] << 4) & 992U)) | 16U,(unsigned short)39184);
  
#line 2286 
  ath5k_hw_reg_write(ah,ah->ah_ant_ctl[(int)ee_mode][(int)ant0],(unsigned short)39264);
  
#line 2288 
  ath5k_hw_reg_write(ah,ah->ah_ant_ctl[(int)ee_mode][(int)ant1],(unsigned short)39268);
  
#line 2289 
  return;
}


#line 2298  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
void ath5k_hw_set_antenna_mode(struct ath5k_hw *ah, u8 ant_mode)
{
  bool use_def_for_tx;
  bool update_def_on_tx;
  bool use_def_for_rts;
  bool fast_div;
  bool use_def_for_sg;
  int ee_mode;
  u8 def_ant;
  u8 tx_ant;
  int tmp;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  u32 tmp_3;
  
#line 2300 
  struct ieee80211_channel *channel = ah->ah_current_channel;
  
#line 2305 
  u32 sta_id1 = 0U;
  
#line 2309 
  if (channel == (struct ieee80211_channel *)0) {
    
#line 2310 
    ah->ah_ant_mode = ant_mode;
    
#line 2311 
    goto return_label;
  }
  else ;
  
#line 2314 
  def_ant = ah->ah_def_ant;
  
#line 2316 
  ee_mode = ath5k_eeprom_mode_from_channel(ah,channel);
  
#line 2318 
  switch ((int)ant_mode) {
    case 0: 
#line 2319 
    ;
    
#line 2320 
    tx_ant = (unsigned char)0U;
    
#line 2321 
    use_def_for_tx = (_Bool)0;
    
#line 2322 
    update_def_on_tx = (_Bool)0;
    
#line 2323 
    use_def_for_rts = (_Bool)0;
    
#line 2324 
    use_def_for_sg = (_Bool)0;
    
#line 2325 
    fast_div = (_Bool)1;
    
#line 2326 
    goto ldv_51184;
    case 1: 
#line 2327 
    ;
    
#line 2328 
    def_ant = (unsigned char)1U;
    
#line 2329 
    tx_ant = (unsigned char)1U;
    
#line 2330 
    use_def_for_tx = (_Bool)1;
    
#line 2331 
    update_def_on_tx = (_Bool)0;
    
#line 2332 
    use_def_for_rts = (_Bool)1;
    
#line 2333 
    use_def_for_sg = (_Bool)1;
    
#line 2334 
    fast_div = (_Bool)0;
    
#line 2335 
    goto ldv_51184;
    case 2: 
#line 2336 
    ;
    
#line 2337 
    def_ant = (unsigned char)2U;
    
#line 2338 
    tx_ant = (unsigned char)2U;
    
#line 2339 
    use_def_for_tx = (_Bool)1;
    
#line 2340 
    update_def_on_tx = (_Bool)0;
    
#line 2341 
    use_def_for_rts = (_Bool)1;
    
#line 2342 
    use_def_for_sg = (_Bool)1;
    
#line 2343 
    fast_div = (_Bool)0;
    
#line 2344 
    goto ldv_51184;
    case 3: 
#line 2345 
    ;
    
#line 2346 
    def_ant = (unsigned char)1U;
    
#line 2347 
    tx_ant = (unsigned char)0U;
    
#line 2348 
    use_def_for_tx = (_Bool)1;
    
#line 2349 
    update_def_on_tx = (_Bool)1;
    
#line 2350 
    use_def_for_rts = (_Bool)1;
    
#line 2351 
    use_def_for_sg = (_Bool)1;
    
#line 2352 
    fast_div = (_Bool)1;
    
#line 2353 
    goto ldv_51184;
    case 4: 
#line 2354 
    ;
    
#line 2355 
    tx_ant = (unsigned char)1U;
    
#line 2356 
    use_def_for_tx = (_Bool)0;
    
#line 2357 
    update_def_on_tx = (_Bool)0;
    
#line 2358 
    use_def_for_rts = (_Bool)1;
    
#line 2359 
    use_def_for_sg = (_Bool)0;
    
#line 2360 
    fast_div = (_Bool)0;
    
#line 2361 
    goto ldv_51184;
    case 5: 
#line 2362 
    ;
    
#line 2363 
    tx_ant = (unsigned char)1U;
    
#line 2364 
    use_def_for_tx = (_Bool)1;
    
#line 2365 
    update_def_on_tx = (_Bool)0;
    
#line 2366 
    use_def_for_rts = (_Bool)1;
    
#line 2367 
    use_def_for_sg = (_Bool)0;
    
#line 2368 
    fast_div = (_Bool)1;
    
#line 2369 
    goto ldv_51184;
    case 6: 
#line 2370 
    ;
    
#line 2371 
    def_ant = (unsigned char)1U;
    
#line 2372 
    tx_ant = (unsigned char)2U;
    
#line 2373 
    use_def_for_tx = (_Bool)0;
    
#line 2374 
    update_def_on_tx = (_Bool)0;
    
#line 2375 
    use_def_for_rts = (_Bool)0;
    
#line 2376 
    use_def_for_sg = (_Bool)0;
    
#line 2377 
    fast_div = (_Bool)0;
    
#line 2378 
    goto ldv_51184;
    default: 
#line 2379 
    ;
    
#line 2380 
    goto return_label;
  }
  ldv_51184: 
#line 2383 
  ;
  
#line 2383 
  ah->ah_tx_ant = tx_ant;
  
#line 2384 
  ah->ah_ant_mode = ant_mode;
  
#line 2385 
  ah->ah_def_ant = def_ant;
  
#line 2387 
  if ((int)use_def_for_tx != 0) 
#line 2387 
                                tmp = 2097152; else 
#line 2387 
                                                    tmp = 0;
  
#line 2387 
  sta_id1 = (unsigned int)tmp | sta_id1;
  
#line 2388 
  if ((int)update_def_on_tx != 0) 
#line 2388 
                                  tmp_0 = 4194304; else 
#line 2388 
                                                        tmp_0 = 0;
  
#line 2388 
  sta_id1 = (unsigned int)tmp_0 | sta_id1;
  
#line 2389 
  if ((int)use_def_for_rts != 0) 
#line 2389 
                                 tmp_1 = 8388608; else 
#line 2389 
                                                       tmp_1 = 0;
  
#line 2389 
  sta_id1 = (unsigned int)tmp_1 | sta_id1;
  
#line 2390 
  if ((int)use_def_for_sg != 0) 
#line 2390 
                                tmp_2 = 67108864; else 
#line 2390 
                                                       tmp_2 = 0;
  
#line 2390 
  sta_id1 = (unsigned int)tmp_2 | sta_id1;
  
#line 2392 
  tmp_3 = ath5k_hw_reg_read(ah,(unsigned short)32772);
  
#line 2392 
  ;
  
#line 2392 
  ath5k_hw_reg_write(ah,tmp_3 & 4213178367U,(unsigned short)32772);
  
#line 2394 
  if (sta_id1 != 0U) {
    u32 tmp_4;
    
#line 2395 
    tmp_4 = ath5k_hw_reg_read(ah,(unsigned short)32772);
    
#line 2395 
    ;
    
#line 2395 
    ;
    
#line 2395 
    ath5k_hw_reg_write(ah,tmp_4 | sta_id1,(unsigned short)32772);
  }
  else ;
  
#line 2397 
  ath5k_hw_set_antenna_switch(ah,(unsigned char)((int)((unsigned char)ee_mode)));
  
#line 2400 
  ath5k_hw_set_fast_div(ah,(unsigned char)((int)((unsigned char)ee_mode)),(_Bool)((bool)((int)fast_div) != 0));
  
#line 2401 
  ath5k_hw_set_def_antenna(ah,(unsigned char)((int)def_ant));
  return_label: 
#line 2402 
                return;
}


#line 2422  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static s16 ath5k_get_interpolated_value(s16 target, s16 x_left, s16 x_right, s16 y_left, s16 y_right)
{
  s16 __retres;
  s16 ratio;
  s16 result;
  
#line 2429 
  if ((int)x_left == (int)x_right || (int)y_left == (int)y_right) {
    
#line 2430 
    __retres = y_left;
    
#line 2430 
    goto return_label;
  }
  else ;
  
#line 2438 
  ratio = (short)(((int)y_right * 100 + (int)y_left * -100) / ((int)x_right - (int)x_left));
  
#line 2441 
  result = (short)(((int)ratio * ((int)target - (int)x_left)) / 100 + (int)y_left);
  
#line 2443 
  __retres = result;
  return_label: 
#line 2443 
                return __retres;
}


#line 2460  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static s16 ath5k_get_linear_pcdac_min(u8 const *stepL, u8 const *stepR, s16 const *pwrL, s16 const *pwrR)
{
  s16 __retres;
  s8 tmp;
  s16 min_pwrL;
  s16 min_pwrR;
  s16 pwr_i;
  int tmp_5;
  
#line 2468 
  if ((int)*stepL == (int)*(stepL + 1U) || (int)*stepR == (int)*(stepR + 1U)) {
    int tmp_1;
    {
      int tmp_0;
      
#line 2469 
      s16 const _max1 = *pwrL;
      
#line 2469 
      s16 const _max2 = *pwrR;
      
#line 2469 
      if ((int)_max1 > (int)_max2) 
#line 2469 
                                   tmp_0 = (int)_max1; else 
#line 2469 
                                                            tmp_0 = (int)_max2;
      
#line 2469 
      tmp_1 = tmp_0;
    }
    
#line 2469 
    __retres = (short)tmp_1;
    
#line 2469 
    goto return_label;
  }
  else ;
  
#line 2471 
  if ((int)*pwrL == (int)*(pwrL + 1U)) 
#line 2472 
                                       min_pwrL = *pwrL;
  else {
    s16 tmp_2;
    
#line 2474 
    pwr_i = *pwrL;
    ldv_51214: 
#line 2475 
    ;
    
#line 2476 
    pwr_i = (s16)((int)pwr_i - 1);
    
#line 2477 
    tmp_2 = ath5k_get_interpolated_value((short)((int)pwr_i),(short)((int)*pwrL),(short)((int)*(pwrL + 1U)),(short)((int)*stepL),(short)((int)*(stepL + 1U)));
    
#line 2477 
    tmp = (signed char)tmp_2;
    
#line 2480 
    if ((int)tmp > 1) 
#line 2482 
                      goto ldv_51214; else 
#line 2485 
                                           goto ldv_51215;
    ldv_51215: 
#line 2486 
    ;
    
#line 2482 
    min_pwrL = pwr_i;
  }
  
#line 2485 
  if ((int)*pwrR == (int)*(pwrR + 1U)) 
#line 2486 
                                       min_pwrR = *pwrR;
  else {
    s16 tmp_3;
    
#line 2488 
    pwr_i = *pwrR;
    ldv_51216: 
#line 2489 
    ;
    
#line 2490 
    pwr_i = (s16)((int)pwr_i - 1);
    
#line 2491 
    tmp_3 = ath5k_get_interpolated_value((short)((int)pwr_i),(short)((int)*pwrR),(short)((int)*(pwrR + 1U)),(short)((int)*stepR),(short)((int)*(stepR + 1U)));
    
#line 2491 
    tmp = (signed char)tmp_3;
    
#line 2494 
    if ((int)tmp > 1) 
#line 2496 
                      goto ldv_51216; else 
#line 2499 
                                           goto ldv_51217;
    ldv_51217: 
#line 2500 
    ;
    
#line 2496 
    min_pwrR = pwr_i;
  }
  {
    int tmp_4;
    
#line 2500 
    s16 _max1_0 = min_pwrL;
    
#line 2500 
    s16 _max2_0 = min_pwrR;
    
#line 2500 
    if ((int)_max1_0 > (int)_max2_0) 
#line 2500 
                                     tmp_4 = (int)_max1_0; else 
#line 2500 
                                                                tmp_4 = (int)_max2_0;
    
#line 2500 
    tmp_5 = tmp_4;
  }
  
#line 2500 
  __retres = (short)tmp_5;
  return_label: 
#line 2500 
                return __retres;
}


#line 2525  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static void ath5k_create_power_curve(s16 pmin, s16 pmax, s16 const *pwr, u8 const *vpd, u8 num_points, u8 *vpd_table, u8 type)
{
  int i;
  s16 tmp;
  
#line 2530 
  u8 idx[2U] = {(unsigned char)0U, (unsigned char)1U};
  
#line 2531 
  s16 pwr_i = (short)((unsigned int)pmin * 2U);
  
#line 2534 
  if ((unsigned int)num_points <= 1U) 
#line 2535 
                                      goto return_label; else ;
  
#line 2541 
  if ((unsigned int)type == 1U) {
    
#line 2542 
    pwr_i = pmin;
    
#line 2543 
    pmin = (short)0;
    
#line 2544 
    pmax = (short)63;
  }
  else ;
  
#line 2549 
  i = 0;
  
#line 2549 
  goto ldv_51234;
  ldv_51233: 
#line 2550 
  ;
  
#line 2555 
  if ((int)*(pwr + (int)idx[1]) < (int)pwr_i && (int)idx[1] < (int)num_points + -1) {
    
#line 2556 
    idx[0] = (u8)((int)idx[0] + 1);
    
#line 2557 
    idx[1] = (u8)((int)idx[1] + 1);
  }
  else ;
  
#line 2560 
  tmp = ath5k_get_interpolated_value((short)((int)pwr_i),(short)((int)*(pwr + (int)idx[0])),(short)((int)*(pwr + (int)idx[1])),(short)((int)*(vpd + (int)idx[0])),(short)((int)*(vpd + (int)idx[1])));
  
#line 2560 
  *(vpd_table + i) = (unsigned char)tmp;
  
#line 2566 
  pwr_i = (short)((unsigned int)pwr_i + 2U);
  
#line 2550 
  i += 1;
  ldv_51234: 
#line 2551 
  ;
  
#line 2549 
  if ((int)((unsigned short)pmax) - (int)((unsigned short)pmin) >= i && i <= 63) 
    
#line 2552 
    goto ldv_51233; else 
#line 2555 
                         goto ldv_51235;
  ldv_51235: 
#line 2556 
  ;
  return_label: 
#line 2557 
                return;
}


#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static void ath5k_get_chan_pcal_surrounding_piers(struct ath5k_hw *ah, struct ieee80211_channel *channel, struct ath5k_chan_pcal_info **pcinfo_l, struct ath5k_chan_pcal_info **pcinfo_r)
{
  struct ath5k_chan_pcal_info *pcinfo;
  u8 idx_l;
  u8 idx_r;
  u8 mode;
  u8 max;
  u8 i;
  
#line 2589 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 2593 
  u32 target = (unsigned int)channel->center_freq;
  
#line 2595 
  idx_l = (unsigned char)0U;
  
#line 2596 
  idx_r = (unsigned char)0U;
  
#line 2598 
  switch ((int)channel->hw_value) {
    case 0: 
#line 2599 
    ;
    
#line 2600 
    pcinfo = (struct ath5k_chan_pcal_info *)(& ee->ee_pwr_cal_a);
    
#line 2601 
    mode = (unsigned char)0U;
    
#line 2602 
    goto ldv_51251;
    case 1: 
#line 2603 
    ;
    
#line 2604 
    pcinfo = (struct ath5k_chan_pcal_info *)(& ee->ee_pwr_cal_b);
    
#line 2605 
    mode = (unsigned char)1U;
    
#line 2606 
    goto ldv_51251;
    case 2: 
#line 2607 
    ;
    default: 
#line 2608 
    ;
    
#line 2609 
    pcinfo = (struct ath5k_chan_pcal_info *)(& ee->ee_pwr_cal_g);
    
#line 2610 
    mode = (unsigned char)2U;
    
#line 2611 
    goto ldv_51251;
  }
  ldv_51251: 
#line 2613 
  ;
  
#line 2613 
  max = (unsigned char)((unsigned int)ee->ee_n_piers[(int)mode] + 255U);
  
#line 2618 
  if ((unsigned int)pcinfo->freq > target) {
    
#line 2619 
    idx_r = (unsigned char)0U;
    
#line 2619 
    idx_l = idx_r;
    
#line 2620 
    goto done;
  }
  else ;
  
#line 2626 
  if ((unsigned int)(pcinfo + (int)max)->freq < target) {
    
#line 2627 
    idx_r = max;
    
#line 2627 
    idx_l = idx_r;
    
#line 2628 
    goto done;
  }
  else ;
  
#line 2635 
  i = (unsigned char)0U;
  
#line 2635 
  goto ldv_51257;
  ldv_51256: 
#line 2636 
  ;
  
#line 2640 
  if ((unsigned int)(pcinfo + (int)i)->freq == target) {
    
#line 2641 
    idx_r = i;
    
#line 2641 
    idx_l = idx_r;
    
#line 2642 
    goto done;
  }
  else ;
  
#line 2648 
  if ((unsigned int)(pcinfo + (int)i)->freq > target) {
    
#line 2649 
    idx_r = i;
    
#line 2650 
    idx_l = (unsigned char)((unsigned int)idx_r + 255U);
    
#line 2651 
    goto done;
  }
  else ;
  
#line 2635 
  i = (u8)((int)i + 1);
  ldv_51257: 
#line 2636 
  ;
  
#line 2635 
  if ((int)i <= (int)max) 
#line 2637 
                          goto ldv_51256; else 
#line 2640 
                                               goto ldv_51258;
  ldv_51258: 
#line 2641 
  ;
  done: 
#line 2655 
  ;
  
#line 2656 
  *pcinfo_l = pcinfo + (int)idx_l;
  
#line 2657 
  *pcinfo_r = pcinfo + (int)idx_r;
  
#line 2658 
  return;
}


#line 2673  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static void ath5k_get_rate_pcal_data(struct ath5k_hw *ah, struct ieee80211_channel *channel, struct ath5k_rate_pcal_info *rates)
{
  struct ath5k_rate_pcal_info *rpinfo;
  u8 idx_l;
  u8 idx_r;
  u8 mode;
  u8 max;
  u8 i;
  s16 tmp;
  s16 tmp_0;
  s16 tmp_1;
  s16 tmp_2;
  
#line 2677 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 2681 
  u32 target = (unsigned int)channel->center_freq;
  
#line 2683 
  idx_l = (unsigned char)0U;
  
#line 2684 
  idx_r = (unsigned char)0U;
  
#line 2686 
  switch ((int)channel->hw_value) {
    case 0: 
#line 2687 
    ;
    
#line 2688 
    rpinfo = (struct ath5k_rate_pcal_info *)(& ee->ee_rate_tpwr_a);
    
#line 2689 
    mode = (unsigned char)0U;
    
#line 2690 
    goto ldv_51273;
    case 1: 
#line 2691 
    ;
    
#line 2692 
    rpinfo = (struct ath5k_rate_pcal_info *)(& ee->ee_rate_tpwr_b);
    
#line 2693 
    mode = (unsigned char)1U;
    
#line 2694 
    goto ldv_51273;
    case 2: 
#line 2695 
    ;
    default: 
#line 2696 
    ;
    
#line 2697 
    rpinfo = (struct ath5k_rate_pcal_info *)(& ee->ee_rate_tpwr_g);
    
#line 2698 
    mode = (unsigned char)2U;
    
#line 2699 
    goto ldv_51273;
  }
  ldv_51273: 
#line 2701 
  ;
  
#line 2701 
  max = (unsigned char)((unsigned int)ee->ee_rate_target_pwr_num[(int)mode] + 255U);
  
#line 2705 
  if ((unsigned int)rpinfo->freq > target) {
    
#line 2706 
    idx_r = (unsigned char)0U;
    
#line 2706 
    idx_l = idx_r;
    
#line 2707 
    goto done;
  }
  else ;
  
#line 2710 
  if ((unsigned int)(rpinfo + (int)max)->freq < target) {
    
#line 2711 
    idx_r = max;
    
#line 2711 
    idx_l = idx_r;
    
#line 2712 
    goto done;
  }
  else ;
  
#line 2715 
  i = (unsigned char)0U;
  
#line 2715 
  goto ldv_51279;
  ldv_51278: 
#line 2716 
  ;
  
#line 2717 
  if ((unsigned int)(rpinfo + (int)i)->freq == target) {
    
#line 2718 
    idx_r = i;
    
#line 2718 
    idx_l = idx_r;
    
#line 2719 
    goto done;
  }
  else ;
  
#line 2722 
  if ((unsigned int)(rpinfo + (int)i)->freq > target) {
    
#line 2723 
    idx_r = i;
    
#line 2724 
    idx_l = (unsigned char)((unsigned int)idx_r + 255U);
    
#line 2725 
    goto done;
  }
  else ;
  
#line 2715 
  i = (u8)((int)i + 1);
  ldv_51279: 
#line 2716 
  ;
  
#line 2715 
  if ((int)i <= (int)max) 
#line 2717 
                          goto ldv_51278; else 
#line 2720 
                                               goto ldv_51280;
  ldv_51280: 
#line 2721 
  ;
  done: 
#line 2729 
  ;
  
#line 2731 
  rates->freq = (unsigned short)target;
  
#line 2734 
  tmp = ath5k_get_interpolated_value((short)((int)((short)target)),(short)((int)((short)(rpinfo + (int)idx_l)->freq)),(short)((int)((short)(rpinfo + (int)idx_r)->freq)),(short)((int)((short)(rpinfo + (int)idx_l)->target_power_6to24)),(short)((int)((short)(rpinfo + (int)idx_r)->target_power_6to24)));
  
#line 2733 
  rates->target_power_6to24 = (unsigned short)tmp;
  
#line 2740 
  tmp_0 = ath5k_get_interpolated_value((short)((int)((short)target)),(short)((int)((short)(rpinfo + (int)idx_l)->freq)),(short)((int)((short)(rpinfo + (int)idx_r)->freq)),(short)((int)((short)(rpinfo + (int)idx_l)->target_power_36)),(short)((int)((short)(rpinfo + (int)idx_r)->target_power_36)));
  
#line 2739 
  rates->target_power_36 = (unsigned short)tmp_0;
  
#line 2746 
  tmp_1 = ath5k_get_interpolated_value((short)((int)((short)target)),(short)((int)((short)(rpinfo + (int)idx_l)->freq)),(short)((int)((short)(rpinfo + (int)idx_r)->freq)),(short)((int)((short)(rpinfo + (int)idx_l)->target_power_48)),(short)((int)((short)(rpinfo + (int)idx_r)->target_power_48)));
  
#line 2745 
  rates->target_power_48 = (unsigned short)tmp_1;
  
#line 2752 
  tmp_2 = ath5k_get_interpolated_value((short)((int)((short)target)),(short)((int)((short)(rpinfo + (int)idx_l)->freq)),(short)((int)((short)(rpinfo + (int)idx_r)->freq)),(short)((int)((short)(rpinfo + (int)idx_l)->target_power_54)),(short)((int)((short)(rpinfo + (int)idx_r)->target_power_54)));
  
#line 2751 
  rates->target_power_54 = (unsigned short)tmp_2;
  
#line 2756 
  return;
}


#line 2768  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static void ath5k_get_max_ctl_power(struct ath5k_hw *ah, struct ieee80211_channel *channel)
{
  u8 rep_idx;
  u8 i;
  u8 ctl_mode;
  u32 tmp_0;
  
#line 2771 
  struct ath_regulatory *regulatory = ath5k_hw_regulatory(ah);
  
#line 2772 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 2773 
  struct ath5k_edge_power *rep = (struct ath5k_edge_power *)(& ee->ee_ctl_pwr);
  
#line 2774 
  u8 *ctl_val = (u8 *)(& ee->ee_ctl);
  
#line 2775 
  s16 max_chan_pwr = (short)((int)ah->ah_txpower.txp_max_pwr / 4);
  
#line 2776 
  s16 edge_pwr = (short)0;
  
#line 2779 
  u8 ctl_idx = (unsigned char)255U;
  
#line 2780 
  u32 target = (unsigned int)channel->center_freq;
  
#line 2782 
  tmp_0 = ath_regd_get_band_ctl(regulatory,channel->band);
  
#line 2782 
  ctl_mode = (unsigned char)tmp_0;
  
#line 2784 
  switch ((int)channel->hw_value) {
    case 0: 
#line 2785 
    ;
    
#line 2786 
    if ((unsigned int)ah->ah_bwmode == 3U) 
#line 2787 
                                           ctl_mode = (unsigned char)((unsigned int)ctl_mode | 3U); else 
                                                                    
#line 2789 
                                                                    ctl_mode = ctl_mode;
    
#line 2790 
    goto ldv_51297;
    case 2: 
#line 2791 
    ;
    
#line 2792 
    if ((unsigned int)ah->ah_bwmode == 3U) 
#line 2793 
                                           ctl_mode = (unsigned char)((unsigned int)ctl_mode | 4U); else 
                                                                    
#line 2795 
                                                                    ctl_mode = (unsigned char)((unsigned int)ctl_mode | 2U);
    
#line 2796 
    goto ldv_51297;
    case 1: 
#line 2797 
    ;
    
#line 2798 
    ctl_mode = (unsigned char)((unsigned int)ctl_mode | 1U);
    
#line 2799 
    goto ldv_51297;
    default: 
#line 2800 
    ;
    
#line 2801 
    goto return_label;
  }
  ldv_51297: 
#line 2804 
  ;
  
#line 2804 
  i = (unsigned char)0U;
  
#line 2804 
  goto ldv_51303;
  ldv_51302: 
#line 2805 
  ;
  
#line 2805 
  if ((int)*(ctl_val + (int)i) == (int)ctl_mode) {
    
#line 2806 
    ctl_idx = i;
    
#line 2807 
    goto ldv_51301;
  }
  else ;
  
#line 2804 
  i = (u8)((int)i + 1);
  ldv_51303: 
#line 2805 
  ;
  
#line 2804 
  if ((int)ee->ee_ctls > (int)i) 
#line 2806 
                                 goto ldv_51302; else 
#line 2809 
                                                      goto ldv_51301;
  ldv_51301: 
#line 2810 
  ;
  
#line 2813 
  if ((unsigned int)ctl_idx == 255U) 
#line 2814 
                                     goto return_label; else ;
  
#line 2819 
  rep_idx = (unsigned char)((unsigned int)ctl_idx * 8U);
  
#line 2827 
  i = (unsigned char)0U;
  
#line 2827 
  goto ldv_51305;
  ldv_51304: 
#line 2828 
  ;
  
#line 2828 
  rep_idx = (unsigned char)((int)rep_idx + (int)i);
  
#line 2829 
  if ((unsigned int)(rep + (int)rep_idx)->freq >= target) 
#line 2830 
                                                          edge_pwr = (short)(rep + (int)rep_idx)->edge; else ;
  
#line 2827 
  i = (u8)((int)i + 1);
  ldv_51305: 
#line 2828 
  ;
  
#line 2827 
  if ((unsigned int)i <= 7U) 
#line 2829 
                             goto ldv_51304; else 
#line 2832 
                                                  goto ldv_51306;
  ldv_51306: 
#line 2833 
  ;
  
#line 2833 
  if ((int)edge_pwr != 0) {
    int tmp_2;
    {
      int tmp_1;
      
#line 2834 
      s16 _min1 = edge_pwr;
      
#line 2834 
      s16 _min2 = max_chan_pwr;
      
#line 2834 
      if ((int)_min1 < (int)_min2) 
#line 2834 
                                   tmp_1 = (int)_min1; else 
#line 2834 
                                                            tmp_1 = (int)_min2;
      
#line 2834 
      tmp_2 = tmp_1;
    }
    
#line 2834 
    ah->ah_txpower.txp_max_pwr = (short)((unsigned int)tmp_2 * 4U);
  }
  else ;
  return_label: 
#line 2836 
                return;
}


#line 2881  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static void ath5k_fill_pwr_to_pcdac_table(struct ath5k_hw *ah, s16 *table_min, s16 *table_max)
{
  u8 pcdac_0;
  u8 pcdac_n;
  u8 pcdac_i;
  u8 pwr_idx;
  u8 i;
  s16 min_pwr;
  s16 max_pwr;
  u8 tmp;
  u8 tmp_0;
  u8 tmp_1;
  
#line 2884 
  u8 *pcdac_out = (u8 *)(& ah->ah_txpower.txp_pd_table);
  
#line 2885 
  u8 *pcdac_tmp = (u8 *)(& ah->ah_txpower.tmpL[0]);
  
#line 2890 
  min_pwr = *table_min;
  
#line 2891 
  pcdac_0 = *pcdac_tmp;
  
#line 2893 
  max_pwr = *table_max;
  
#line 2894 
  pcdac_n = *(pcdac_tmp + ((int)*table_max - (int)*table_min));
  
#line 2897 
  pcdac_i = (unsigned char)0U;
  
#line 2898 
  i = (unsigned char)0U;
  
#line 2898 
  goto ldv_51325;
  ldv_51324: 
#line 2899 
  ;
  
#line 2899 
  tmp = pcdac_i;
  
#line 2899 
  pcdac_i = (u8)((int)pcdac_i + 1);
  
#line 2899 
  *(pcdac_out + (int)tmp) = pcdac_0;
  
#line 2898 
  i = (u8)((int)i + 1);
  ldv_51325: 
#line 2899 
  ;
  
#line 2898 
  if ((int)i < (int)min_pwr) 
#line 2900 
                             goto ldv_51324; else 
#line 2903 
                                                  goto ldv_51326;
  ldv_51326: 
#line 2904 
  ;
  
#line 2902 
  pwr_idx = (unsigned char)min_pwr;
  
#line 2903 
  i = (unsigned char)0U;
  
#line 2903 
  goto ldv_51328;
  ldv_51327: 
#line 2904 
  ;
  
#line 2905 
  tmp_0 = pcdac_i;
  
#line 2905 
  pcdac_i = (u8)((int)pcdac_i + 1);
  
#line 2905 
  *(pcdac_out + (int)tmp_0) = *(pcdac_tmp + (int)i);
  
#line 2906 
  pwr_idx = (u8)((int)pwr_idx + 1);
  
#line 2904 
  i = (u8)((int)i + 1);
  ldv_51328: 
#line 2905 
  ;
  
#line 2903 
  if ((int)pwr_idx <= (int)max_pwr && (unsigned int)pcdac_i <= 63U) 
#line 2906 
                                                                    goto ldv_51327; else 
                                                                    
#line 2909 
                                                                    goto ldv_51329;
  ldv_51329: 
#line 2910 
  ;
  
#line 2910 
  goto ldv_51331;
  ldv_51330: 
#line 2911 
  ;
  
#line 2911 
  tmp_1 = pcdac_i;
  
#line 2911 
  pcdac_i = (u8)((int)pcdac_i + 1);
  
#line 2911 
  *(pcdac_out + (int)tmp_1) = pcdac_n;
  ldv_51331: 
#line 2912 
  ;
  
#line 2910 
  if ((unsigned int)pcdac_i <= 63U) 
#line 2912 
                                    goto ldv_51330; else 
#line 2915 
                                                         goto ldv_51332;
  ldv_51332: 
#line 2916 
  ;
  
#line 2917 
  return;
}


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static void ath5k_combine_linear_pcdac_curves(struct ath5k_hw *ah, s16 *table_min, s16 *table_max, u8 pdcurves)
{
  u8 *pcdac_low_pwr;
  u8 *pcdac_high_pwr;
  u8 *pcdac_tmp;
  u8 pwr;
  s16 max_pwr_idx;
  s16 min_pwr_idx;
  u8 edge_flag;
  int i;
  
#line 2934 
  u8 *pcdac_out = (u8 *)(& ah->ah_txpower.txp_pd_table);
  
#line 2941 
  s16 mid_pwr_idx = (short)0;
  
#line 2955 
  if ((unsigned int)pdcurves > 1U) {
    
#line 2956 
    pcdac_low_pwr = (u8 *)(& ah->ah_txpower.tmpL[1]);
    
#line 2957 
    pcdac_high_pwr = (u8 *)(& ah->ah_txpower.tmpL[0]);
    
#line 2958 
    mid_pwr_idx = (short)((unsigned int)((int)*(table_max + 1U) - (int)*(table_min + 1U)) + 65535U);
    
#line 2959 
    max_pwr_idx = (short)(((int)*table_max - (int)*table_min) / 2);
    
#line 2964 
    if ((int)*table_max - (int)*(table_min + 1U) > 126) 
#line 2965 
                                                        min_pwr_idx = (short)((unsigned int)*table_max + 65410U); else 
                                                                    
#line 2967 
                                                                    min_pwr_idx = *(table_min + 1U);
    
#line 2971 
    pcdac_tmp = pcdac_high_pwr;
    
#line 2973 
    edge_flag = (unsigned char)64U;
  }
  else {
    
#line 2975 
    pcdac_low_pwr = (u8 *)(& ah->ah_txpower.tmpL[1]);
    
#line 2976 
    pcdac_high_pwr = (u8 *)(& ah->ah_txpower.tmpL[0]);
    
#line 2977 
    min_pwr_idx = *table_min;
    
#line 2978 
    max_pwr_idx = (short)(((int)*table_max - (int)*table_min) / 2);
    
#line 2979 
    pcdac_tmp = pcdac_high_pwr;
    
#line 2980 
    edge_flag = (unsigned char)0U;
  }
  
#line 2984 
  ah->ah_txpower.txp_min_idx = (unsigned char)((int)min_pwr_idx / 2);
  
#line 2987 
  pwr = (unsigned char)max_pwr_idx;
  
#line 2988 
  i = 63;
  
#line 2988 
  goto ldv_51354;
  ldv_51353: 
#line 2989 
  ;
  
#line 2992 
  if ((unsigned int)edge_flag == 64U && ((int)pwr * 2 <= (int)*(table_max + 1U) - (int)*table_min || (unsigned int)pwr == 0U)) {
    
#line 2994 
    edge_flag = (unsigned char)0U;
    
#line 2995 
    pcdac_tmp = pcdac_low_pwr;
    
#line 2996 
    pwr = (unsigned char)((int)mid_pwr_idx / 2);
  }
  else ;
  
#line 3003 
  if ((unsigned int)*(pcdac_tmp + (int)pwr) == 0U && (unsigned int)edge_flag == 0U) {
    
#line 3004 
    goto ldv_51350;
    ldv_51349: 
#line 3005 
    ;
    
#line 3005 
    *(pcdac_out + i) = *(pcdac_out + ((unsigned int)i + 1U));
    
#line 3006 
    i -= 1;
    ldv_51350: 
#line 3007 
    ;
    
#line 3004 
    if (i >= 0) 
#line 3006 
                goto ldv_51349; else 
#line 3009 
                                     goto ldv_51351;
    ldv_51351: 
#line 3010 
    ;
    
#line 3008 
    goto ldv_51352;
  }
  else ;
  
#line 3011 
  *(pcdac_out + i) = (unsigned char)((int)*(pcdac_tmp + (int)pwr) | (int)edge_flag);
  
#line 3016 
  if ((unsigned int)*(pcdac_out + i) > 126U) 
#line 3017 
                                             *(pcdac_out + i) = (unsigned char)126U; else ;
  
#line 3020 
  pwr = (u8)((int)pwr - 1);
  
#line 2988 
  i -= 1;
  ldv_51354: 
#line 2989 
  ;
  
#line 2988 
  if (i >= 0) 
#line 2990 
              goto ldv_51353; else 
#line 2993 
                                   goto ldv_51352;
  ldv_51352: 
#line 2994 
  ;
  
#line 2995 
  return;
}


#line 3029  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static void ath5k_write_pcdac_table(struct ath5k_hw *ah)
{
  int i;
  
#line 3031 
  u8 *pcdac_out = (u8 *)(& ah->ah_txpower.txp_pd_table);
  
#line 3037 
  i = 0;
  
#line 3037 
  goto ldv_51361;
  ldv_51360: 
#line 3038 
  ;
  
#line 3038 
  ath5k_hw_reg_write(ah,(unsigned int)(((((int)*(pcdac_out + i * 2) << 8) & 65535) | 255) | (((int)*(pcdac_out + ((unsigned int)(i * 2) + 1U)) << 24) | 16711680)),(unsigned short)((int)((unsigned int)((int)((unsigned short)i) << 2U) + 41344U)));
  
#line 3037 
  i += 1;
  ldv_51361: 
#line 3038 
  ;
  
#line 3037 
  if (i <= 31) 
#line 3039 
               goto ldv_51360; else 
#line 3042 
                                    goto ldv_51362;
  ldv_51362: 
#line 3043 
  ;
  
#line 3044 
  return;
}


#line 3081  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static void ath5k_combine_pwr_to_pdadc_curves(struct ath5k_hw *ah, s16 *pwr_min, s16 *pwr_max, u8 pdcurves)
{
  u8 gain_boundaries[4U];
  u8 *pdadc_tmp;
  s16 pdadc_0;
  u8 pdadc_i;
  u8 pdadc_n;
  u8 pwr_step;
  u8 pdg;
  u8 max_idx;
  u8 table_size;
  u8 pd_gain_overlap;
  u32 tmp;
  u8 tmp_2;
  s16 tmp_3;
  
#line 3085 
  u8 *pdadc_out = (u8 *)(& ah->ah_txpower.txp_pd_table);
  
#line 3094 
  tmp = ath5k_hw_reg_read(ah,(unsigned short)41580);
  
#line 3094 
  pd_gain_overlap = (unsigned char)((unsigned int)((unsigned char)tmp) & 15U);
  
#line 3098 
  pdg = (unsigned char)0U;
  
#line 3098 
  pdadc_i = (unsigned char)0U;
  
#line 3098 
  goto ldv_51393;
  ldv_51392: 
#line 3099 
  ;
  
#line 3099 
  pdadc_tmp = (u8 *)(& ah->ah_txpower.tmpL[(int)pdg]);
  
#line 3101 
  if ((int)pdg == (int)pdcurves + -1) 
#line 3104 
                                      gain_boundaries[(int)pdg] = (unsigned char)((unsigned int)((unsigned char)*(pwr_max + (int)pdg)) + 4U); else 
                                                                    
#line 3108 
                                                                    gain_boundaries[(int)pdg] = (unsigned char)(((int)*(pwr_max + (int)pdg) + (int)*(pwr_min + ((unsigned int)pdg + 1U))) / 2);
  
#line 3113 
  if ((unsigned int)gain_boundaries[(int)pdg] > 63U) 
#line 3114 
                                                     gain_boundaries[(int)pdg] = (unsigned char)63U; else ;
  
#line 3118 
  if ((unsigned int)pdg == 0U) 
#line 3119 
                               pdadc_0 = (short)0; else 
#line 3122 
                                                        pdadc_0 = (short)(((int)gain_boundaries[(int)pdg + -1] - (int)*(pwr_min + (int)pdg)) - (int)pd_gain_overlap);
  
#line 3126 
  if ((int)*(pdadc_tmp + 1U) - (int)*pdadc_tmp > 1) 
#line 3127 
                                                    pwr_step = (unsigned char)((int)*(pdadc_tmp + 1U) - (int)*pdadc_tmp); else 
                                                                    
#line 3129 
                                                                    pwr_step = (unsigned char)1U;
  
#line 3133 
  goto ldv_51382;
  ldv_51381: 
#line 3134 
  ;
  {
    u8 tmp_1;
    
#line 3134 
    s16 tmp_0 = (short)((int)*pdadc_tmp + (int)pwr_step * (int)pdadc_0);
    
#line 3135 
    tmp_1 = pdadc_i;
    
#line 3135 
    pdadc_i = (u8)((int)pdadc_i + 1);
    
#line 3135 
    if ((int)tmp_0 >= 0) 
#line 3135 
                         *(pdadc_out + (int)tmp_1) = (unsigned char)tmp_0; else 
                                                                    
#line 3135 
                                                                    *(pdadc_out + (int)tmp_1) = (unsigned char)0U;
    
#line 3136 
    pdadc_0 = (s16)((int)pdadc_0 + 1);
  }
  ldv_51382: 
#line 3138 
  ;
  
#line 3133 
  if ((int)pdadc_0 < 0 && (int)pdadc_i >= 0) 
#line 3135 
                                             goto ldv_51381; else 
#line 3138 
                                                                  goto ldv_51383;
  ldv_51383: 
#line 3139 
  ;
  
#line 3140 
  pdadc_n = (unsigned char)(((int)gain_boundaries[(int)pdg] + (int)pd_gain_overlap) - (int)((unsigned char)*(pwr_min + (int)pdg)));
  
#line 3142 
  table_size = (unsigned char)((int)((unsigned char)*(pwr_max + (int)pdg)) - (int)((unsigned char)*(pwr_min + (int)pdg)));
  
#line 3143 
  if ((int)pdadc_n < (int)table_size) 
#line 3143 
                                      max_idx = pdadc_n; else 
#line 3143 
                                                              max_idx = table_size;
  
#line 3146 
  goto ldv_51385;
  ldv_51384: 
#line 3147 
  ;
  
#line 3147 
  tmp_2 = pdadc_i;
  
#line 3147 
  pdadc_i = (u8)((int)pdadc_i + 1);
  
#line 3147 
  tmp_3 = pdadc_0;
  
#line 3147 
  pdadc_0 = (s16)((int)pdadc_0 + 1);
  
#line 3147 
  *(pdadc_out + (int)tmp_2) = *(pdadc_tmp + (int)tmp_3);
  ldv_51385: 
#line 3148 
  ;
  
#line 3146 
  if ((int)pdadc_0 < (int)max_idx && (int)pdadc_i >= 0) 
#line 3148 
                                                        goto ldv_51384; else 
                                                                    
#line 3151 
                                                                    goto ldv_51386;
  ldv_51386: 
#line 3152 
  ;
  
#line 3150 
  if ((int)pdadc_n <= (int)max_idx) 
#line 3151 
                                    goto ldv_51387; else ;
  
#line 3154 
  if ((int)*(pdadc_tmp + ((unsigned long)table_size + 18446744073709551615U)) - (int)*(pdadc_tmp + ((unsigned long)table_size + 18446744073709551614U)) > 1) 
    
#line 3155 
    pwr_step = (unsigned char)((int)*(pdadc_tmp + ((unsigned long)table_size + 18446744073709551615U)) - (int)*(pdadc_tmp + ((unsigned long)table_size + 18446744073709551614U))); else 
                                                                    
#line 3158 
                                                                    pwr_step = (unsigned char)1U;
  
#line 3161 
  goto ldv_51390;
  ldv_51389: 
#line 3162 
  ;
  {
    u8 tmp_5;
    
#line 3163 
    s16 tmp_4 = (short)((int)*(pdadc_tmp + ((unsigned long)table_size + 18446744073709551615U)) + ((int)pdadc_0 - (int)max_idx) * (int)pwr_step);
    
#line 3165 
    tmp_5 = pdadc_i;
    
#line 3165 
    pdadc_i = (u8)((int)pdadc_i + 1);
    
#line 3165 
    if ((int)tmp_4 <= 127) 
#line 3165 
                           *(pdadc_out + (int)tmp_5) = (unsigned char)tmp_4; else 
                                                                    
#line 3165 
                                                                    *(pdadc_out + (int)tmp_5) = (unsigned char)127U;
    
#line 3166 
    pdadc_0 = (s16)((int)pdadc_0 + 1);
  }
  ldv_51390: 
#line 3168 
  ;
  
#line 3161 
  if ((int)pdadc_0 < (int)pdadc_n && (int)pdadc_i >= 0) 
#line 3164 
                                                        goto ldv_51389; else 
                                                                    
#line 3167 
                                                                    goto ldv_51391;
  ldv_51391: 
#line 3168 
  ;
  ldv_51387: 
#line 3169 
  ;
  
#line 3098 
  pdg = (u8)((int)pdg + 1);
  ldv_51393: 
#line 3099 
  ;
  
#line 3098 
  if ((int)pdg < (int)pdcurves) 
#line 3100 
                                goto ldv_51392; else 
#line 3103 
                                                     goto ldv_51394;
  ldv_51394: 
#line 3104 
  ;
  
#line 3170 
  goto ldv_51396;
  ldv_51395: 
#line 3171 
  ;
  
#line 3171 
  gain_boundaries[(int)pdg] = gain_boundaries[(int)pdg + -1];
  
#line 3172 
  pdg = (u8)((int)pdg + 1);
  ldv_51396: 
#line 3173 
  ;
  
#line 3170 
  if ((unsigned int)pdg <= 3U) 
#line 3172 
                               goto ldv_51395; else 
#line 3175 
                                                    goto ldv_51397;
  ldv_51397: 
#line 3176 
  ;
  
#line 3175 
  goto ldv_51399;
  ldv_51398: 
#line 3176 
  ;
  
#line 3176 
  *(pdadc_out + (int)pdadc_i) = *(pdadc_out + ((unsigned long)pdadc_i + 18446744073709551615U));
  
#line 3177 
  pdadc_i = (u8)((int)pdadc_i + 1);
  ldv_51399: 
#line 3178 
  ;
  
#line 3175 
  if ((int)pdadc_i >= 0) 
#line 3177 
                         goto ldv_51398; else 
#line 3180 
                                              goto ldv_51400;
  ldv_51400: 
#line 3181 
  ;
  
#line 3181 
  ath5k_hw_reg_write(ah,(unsigned int)((((((int)pd_gain_overlap & 15) | (((int)gain_boundaries[0] << 4) & 1008)) | (((int)gain_boundaries[1] << 10) & 65535)) | (((int)gain_boundaries[2] << 16) & 4128768)) | (((int)gain_boundaries[3] << 22) & 264241152)),(unsigned short)41580);
  
#line 3195 
  ah->ah_txpower.txp_min_idx = (unsigned char)*pwr_min;
  
#line 3196 
  return;
}


#line 3205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static void ath5k_write_pwr_to_pdadc_table(struct ath5k_hw *ah, u8 ee_mode)
{
  u32 reg;
  u8 i;
  
#line 3207 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 3208 
  u8 *pdadc_out = (u8 *)(& ah->ah_txpower.txp_pd_table);
  
#line 3209 
  u8 *pdg_to_idx = (u8 *)(& ee->ee_pdc_to_idx[(int)ee_mode]);
  
#line 3210 
  u8 pdcurves = ee->ee_pd_gains[(int)ee_mode];
  
#line 3217 
  reg = ath5k_hw_reg_read(ah,(unsigned short)41560);
  
#line 3218 
  reg &= 4290789375U;
  
#line 3231 
  reg = ((unsigned int)((int)pdcurves << 14) & 65535U) | reg;
  
#line 3233 
  switch ((int)pdcurves) {
    case 3: 
#line 3234 
    ;
    
#line 3235 
    reg = ((unsigned int)((int)*(pdg_to_idx + 2U) << 20) & 3145728U) | reg;
    case 2: 
#line 3237 
    ;
    
#line 3238 
    reg = ((unsigned int)((int)*(pdg_to_idx + 1U) << 18) & 786432U) | reg;
    case 1: 
#line 3240 
    ;
    
#line 3241 
    reg = ((unsigned int)((int)*pdg_to_idx << 16) & 196608U) | reg;
    
#line 3242 
    goto ldv_51414;
  }
  ldv_51414: 
#line 3244 
  ;
  
#line 3244 
  ath5k_hw_reg_write(ah,reg,(unsigned short)41560);
  
#line 3249 
  i = (unsigned char)0U;
  
#line 3249 
  goto ldv_51417;
  ldv_51416: 
#line 3250 
  ;
  {
    
#line 3250 
    u32 val = get_unaligned_le32((void const *)(pdadc_out + (int)i * 4));
    
#line 3251 
    ath5k_hw_reg_write(ah,val,(unsigned short)((int)((unsigned int)((int)((unsigned short)i) << 2U) + 41600U)));
  }
  
#line 3249 
  i = (u8)((int)i + 1);
  ldv_51417: 
#line 3250 
  ;
  
#line 3249 
  if ((unsigned int)i <= 31U) 
#line 3251 
                              goto ldv_51416; else 
#line 3254 
                                                   goto ldv_51418;
  ldv_51418: 
#line 3255 
  ;
  
#line 3256 
  return;
}


#line 3274  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static int ath5k_setup_channel_powertable(struct ath5k_hw *ah, struct ieee80211_channel *channel, u8 ee_mode, u8 type)
{
  int __retres;
  struct ath5k_pdgain_info *pdg_L;
  struct ath5k_pdgain_info *pdg_R;
  struct ath5k_chan_pcal_info *pcinfo_L;
  struct ath5k_chan_pcal_info *pcinfo_R;
  s16 table_min[4U];
  s16 table_max[4U];
  u8 *tmpL;
  u8 *tmpR;
  int pdg;
  int i;
  
#line 3281 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 3282 
  u8 *pdg_curve_to_idx = (u8 *)(& ee->ee_pdc_to_idx[(int)ee_mode]);
  
#line 3287 
  u32 target = (unsigned int)channel->center_freq;
  
#line 3291 
  ath5k_get_chan_pcal_surrounding_piers(ah,channel,& pcinfo_L,& pcinfo_R);
  
#line 3297 
  pdg = 0;
  
#line 3297 
  goto ldv_51461;
  ldv_51460: 
#line 3298 
  ;
  {
    int tmp_0;
    int tmp_2;
    s16 tmp_7;
    
#line 3303 
    u8 idx = *(pdg_curve_to_idx + pdg);
    
#line 3306 
    pdg_L = pcinfo_L->pd_curves + (int)idx;
    
#line 3307 
    pdg_R = pcinfo_R->pd_curves + (int)idx;
    
#line 3310 
    tmpL = (u8 *)(& ah->ah_txpower.tmpL[pdg]);
    
#line 3311 
    tmpR = (u8 *)(& ah->ah_txpower.tmpR[pdg]);
    {
      int tmp;
      
#line 3319 
      s16 _min1 = *(pdg_L->pd_pwr);
      
#line 3319 
      s16 _min2 = *(pdg_R->pd_pwr);
      
#line 3319 
      if ((int)_min1 < (int)_min2) 
#line 3319 
                                   tmp = (int)_min1; else 
#line 3319 
                                                          tmp = (int)_min2;
      
#line 3319 
      tmp_0 = tmp;
    }
    
#line 3319 
    table_min[pdg] = (short)(tmp_0 / 2);
    {
      int tmp_1;
      
#line 3322 
      s16 _max1 = *(pdg_L->pd_pwr + ((unsigned long)pdg_L->pd_points + 18446744073709551615U));
      
#line 3322 
      s16 _max2 = *(pdg_R->pd_pwr + ((unsigned long)pdg_R->pd_points + 18446744073709551615U));
      
#line 3322 
      if ((int)_max1 > (int)_max2) 
#line 3322 
                                   tmp_1 = (int)_max1; else 
#line 3322 
                                                            tmp_1 = (int)_max2;
      
#line 3322 
      tmp_2 = tmp_1;
    }
    
#line 3322 
    table_max[pdg] = (short)(tmp_2 / 2);
    
#line 3328 
    switch ((int)type) {
      int tmp_4;
      int tmp_6;
      case 1: 
#line 3329 
      ;
      {
        int tmp_3;
        
#line 3332 
        s16 _min1_0 = *(pdg_L->pd_pwr);
        
#line 3332 
        s16 _min2_0 = *(pdg_R->pd_pwr);
        
#line 3332 
        if ((int)_min1_0 < (int)_min2_0) 
#line 3332 
                                         tmp_3 = (int)_min1_0; else 
#line 3332 
                                                                    tmp_3 = (int)_min2_0;
        
#line 3332 
        tmp_4 = tmp_3;
      }
      
#line 3332 
      table_min[pdg] = (short)tmp_4;
      {
        int tmp_5;
        
#line 3336 
        s16 _max1_0 = *(pdg_L->pd_pwr + ((unsigned long)pdg_L->pd_points + 18446744073709551615U));
        
#line 3336 
        s16 _max2_0 = *(pdg_R->pd_pwr + ((unsigned long)pdg_R->pd_points + 18446744073709551615U));
        
#line 3336 
        if ((int)_max1_0 > (int)_max2_0) 
#line 3336 
                                         tmp_5 = (int)_max1_0; else 
#line 3336 
                                                                    tmp_5 = (int)_max2_0;
        
#line 3336 
        tmp_6 = tmp_5;
      }
      
#line 3335 
      table_max[pdg] = (short)tmp_6;
      
#line 3344 
      if ((unsigned int)ee->ee_pd_gains[(int)ee_mode] <= 1U || pdg != 0) {
        
#line 3346 
        table_min[pdg] = ath5k_get_linear_pcdac_min((u8 const *)pdg_L->pd_step,(u8 const *)pdg_R->pd_step,(s16 const *)pdg_L->pd_pwr,(s16 const *)pdg_R->pd_pwr);
        
#line 3356 
        if ((int)table_max[pdg] - (int)table_min[pdg] > 126) 
#line 3357 
                                                             table_min[pdg] = (short)((unsigned int)table_max[pdg] + 65410U); else ;
      }
      else ;
      case 0: 
#line 3361 
      ;
      case 2: 
#line 3362 
      ;
      
#line 3364 
      ath5k_create_power_curve((short)((int)table_min[pdg]),(short)((int)table_max[pdg]),(s16 const *)pdg_L->pd_pwr,(u8 const *)pdg_L->pd_step,(unsigned char)((int)pdg_L->pd_points),tmpL,(unsigned char)((int)type));
      
#line 3373 
      if (pcinfo_L == pcinfo_R) 
#line 3374 
                                goto ldv_51454; else ;
      
#line 3376 
      ath5k_create_power_curve((short)((int)table_min[pdg]),(short)((int)table_max[pdg]),(s16 const *)pdg_R->pd_pwr,(u8 const *)pdg_R->pd_step,(unsigned char)((int)pdg_R->pd_points),tmpR,(unsigned char)((int)type));
      
#line 3381 
      goto ldv_51455;
      default: 
#line 3382 
      ;
      
#line 3383 
      __retres = -22;
      
#line 3383 
      goto return_label;
    }
    ldv_51455: 
#line 3391 
    ;
    
#line 3391 
    i = 0;
    
#line 3391 
    goto ldv_51458;
    ldv_51457: 
#line 3392 
    ;
    
#line 3393 
    tmp_7 = ath5k_get_interpolated_value((short)((int)((short)target)),(short)((int)((short)pcinfo_L->freq)),(short)((int)((short)pcinfo_R->freq)),(short)((int)*(tmpL + i)),(short)((int)*(tmpR + i)));
    
#line 3393 
    *(tmpL + i) = (unsigned char)tmp_7;
    
#line 3392 
    i += 1;
    ldv_51458: 
#line 3393 
    ;
    
#line 3391 
    if ((int)((unsigned short)table_max[pdg]) - (int)((unsigned short)table_min[pdg]) > i && i <= 63) 
      
#line 3394 
      goto ldv_51457; else 
#line 3397 
                           goto ldv_51459;
    ldv_51459: 
#line 3398 
    ;
  }
  ldv_51454: 
#line 3400 
  ;
  
#line 3297 
  pdg += 1;
  ldv_51461: 
#line 3298 
  ;
  
#line 3297 
  if ((int)ee->ee_pd_gains[(int)ee_mode] > pdg) 
#line 3299 
                                                goto ldv_51460; else 
                                                                  
#line 3302 
                                                                  goto ldv_51462;
  ldv_51462: 
#line 3303 
  ;
  
#line 3412 
  ah->ah_txpower.txp_min_pwr = ath5k_get_interpolated_value((short)((int)((short)target)),(short)((int)((short)pcinfo_L->freq)),(short)((int)((short)pcinfo_R->freq)),(short)((int)pcinfo_L->min_pwr),(short)((int)pcinfo_R->min_pwr));
  
#line 3417 
  ah->ah_txpower.txp_max_pwr = ath5k_get_interpolated_value((short)((int)((short)target)),(short)((int)((short)pcinfo_L->freq)),(short)((int)((short)pcinfo_R->freq)),(short)((int)pcinfo_L->max_pwr),(short)((int)pcinfo_R->max_pwr));
  
#line 3423 
  switch ((int)type) {
    case 1: 
#line 3424 
    ;
    
#line 3428 
    ath5k_combine_linear_pcdac_curves(ah,(s16 *)(& table_min),(s16 *)(& table_max),(unsigned char)((int)ee->ee_pd_gains[(int)ee_mode]));
    
#line 3434 
    ah->ah_txpower.txp_offset = (short)(64U - (unsigned int)((int)table_max[0] / 2));
    
#line 3435 
    goto ldv_51464;
    case 0: 
#line 3436 
    ;
    
#line 3439 
    ath5k_fill_pwr_to_pcdac_table(ah,(s16 *)(& table_min),(s16 *)(& table_max));
    
#line 3442 
    ah->ah_txpower.txp_min_idx = (unsigned char)0U;
    
#line 3443 
    ah->ah_txpower.txp_offset = (short)0;
    
#line 3444 
    goto ldv_51464;
    case 2: 
#line 3445 
    ;
    
#line 3448 
    ath5k_combine_pwr_to_pdadc_curves(ah,(s16 *)(& table_min),(s16 *)(& table_max),(unsigned char)((int)ee->ee_pd_gains[(int)ee_mode]));
    
#line 3453 
    ah->ah_txpower.txp_offset = table_min[0];
    
#line 3454 
    goto ldv_51464;
    default: 
#line 3455 
    ;
    
#line 3456 
    __retres = -22;
    
#line 3456 
    goto return_label;
  }
  ldv_51464: 
#line 3459 
  ;
  
#line 3459 
  ah->ah_txpower.txp_setup = (_Bool)1;
  
#line 3461 
  __retres = 0;
  return_label: 
#line 3461 
                return __retres;
}


#line 3471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static void ath5k_write_channel_powertable(struct ath5k_hw *ah, u8 ee_mode, u8 type)
{
  
#line 3473 
  if ((unsigned int)type == 2U) 
#line 3474 
                                ath5k_write_pwr_to_pdadc_table(ah,(unsigned char)((int)ee_mode)); else 
                                                                    
#line 3476 
                                                                    ath5k_write_pcdac_table(ah);
  
#line 3477 
  return;
}


#line 3510  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static void ath5k_setup_rate_powertable(struct ath5k_hw *ah, u16 max_pwr, struct ath5k_rate_pcal_info *rate_info, u8 ee_mode)
{
  unsigned int i;
  u16 *rates;
  int tmp_0;
  int tmp_2;
  int tmp_4;
  int tmp_6;
  int tmp_8;
  int tmp_10;
  int tmp_12;
  int tmp_14;
  int tmp_16;
  int tmp_18;
  int tmp_20;
  int tmp_22;
  int tmp_24;
  
#line 3516 
  s16 rate_idx_scaled = (short)0;
  
#line 3520 
  max_pwr = (unsigned short)((unsigned int)max_pwr * 2U);
  {
    int tmp;
    
#line 3521 
    u16 _min1 = max_pwr;
    
#line 3521 
    unsigned short _min2 = (unsigned short)ah->ah_txpower.txp_max_pwr;
    
#line 3521 
    if ((int)_min1 < (int)_min2) 
#line 3521 
                                 tmp = (int)_min1; else 
#line 3521 
                                                        tmp = (int)_min2;
    
#line 3521 
    tmp_0 = tmp;
  }
  
#line 3521 
  max_pwr = (unsigned short)(tmp_0 / 2);
  
#line 3524 
  rates = (u16 *)(& ah->ah_txpower.txp_rates_power_table);
  
#line 3527 
  i = 0U;
  
#line 3527 
  goto ldv_51489;
  ldv_51488: 
#line 3528 
  ;
  {
    int tmp_1;
    
#line 3528 
    u16 _min1_0 = max_pwr;
    
#line 3528 
    u16 _min2_0 = rate_info->target_power_6to24;
    
#line 3528 
    if ((int)_min1_0 < (int)_min2_0) 
#line 3528 
                                     tmp_1 = (int)_min1_0; else 
#line 3528 
                                                                tmp_1 = (int)_min2_0;
    
#line 3528 
    tmp_2 = tmp_1;
  }
  
#line 3528 
  *(rates + i) = (unsigned short)tmp_2;
  
#line 3527 
  i += 1U;
  ldv_51489: 
#line 3528 
  ;
  
#line 3527 
  if (i <= 4U) 
#line 3529 
               goto ldv_51488; else 
#line 3532 
                                    goto ldv_51490;
  ldv_51490: 
#line 3533 
  ;
  {
    int tmp_3;
    
#line 3531 
    u16 _min1_1 = *rates;
    
#line 3531 
    u16 _min2_1 = rate_info->target_power_36;
    
#line 3531 
    if ((int)_min1_1 < (int)_min2_1) 
#line 3531 
                                     tmp_3 = (int)_min1_1; else 
#line 3531 
                                                                tmp_3 = (int)_min2_1;
    
#line 3531 
    tmp_4 = tmp_3;
  }
  
#line 3531 
  *(rates + 5U) = (unsigned short)tmp_4;
  {
    int tmp_5;
    
#line 3532 
    u16 _min1_2 = *rates;
    
#line 3532 
    u16 _min2_2 = rate_info->target_power_48;
    
#line 3532 
    if ((int)_min1_2 < (int)_min2_2) 
#line 3532 
                                     tmp_5 = (int)_min1_2; else 
#line 3532 
                                                                tmp_5 = (int)_min2_2;
    
#line 3532 
    tmp_6 = tmp_5;
  }
  
#line 3532 
  *(rates + 6U) = (unsigned short)tmp_6;
  {
    int tmp_7;
    
#line 3533 
    u16 _min1_3 = *rates;
    
#line 3533 
    u16 _min2_3 = rate_info->target_power_54;
    
#line 3533 
    if ((int)_min1_3 < (int)_min2_3) 
#line 3533 
                                     tmp_7 = (int)_min1_3; else 
#line 3533 
                                                                tmp_7 = (int)_min2_3;
    
#line 3533 
    tmp_8 = tmp_7;
  }
  
#line 3533 
  *(rates + 7U) = (unsigned short)tmp_8;
  {
    int tmp_9;
    
#line 3537 
    u16 _min1_4 = *rates;
    
#line 3537 
    u16 _min2_4 = rate_info->target_power_6to24;
    
#line 3537 
    if ((int)_min1_4 < (int)_min2_4) 
#line 3537 
                                     tmp_9 = (int)_min1_4; else 
#line 3537 
                                                                tmp_9 = (int)_min2_4;
    
#line 3537 
    tmp_10 = tmp_9;
  }
  
#line 3537 
  *(rates + 8U) = (unsigned short)tmp_10;
  {
    int tmp_11;
    
#line 3539 
    u16 _min1_5 = *rates;
    
#line 3539 
    u16 _min2_5 = rate_info->target_power_36;
    
#line 3539 
    if ((int)_min1_5 < (int)_min2_5) 
#line 3539 
                                     tmp_11 = (int)_min1_5; else 
#line 3539 
                                                                 tmp_11 = (int)_min2_5;
    
#line 3539 
    tmp_12 = tmp_11;
  }
  
#line 3539 
  *(rates + 9U) = (unsigned short)tmp_12;
  {
    int tmp_13;
    
#line 3541 
    u16 _min1_6 = *rates;
    
#line 3541 
    u16 _min2_6 = rate_info->target_power_36;
    
#line 3541 
    if ((int)_min1_6 < (int)_min2_6) 
#line 3541 
                                     tmp_13 = (int)_min1_6; else 
#line 3541 
                                                                 tmp_13 = (int)_min2_6;
    
#line 3541 
    tmp_14 = tmp_13;
  }
  
#line 3541 
  *(rates + 10U) = (unsigned short)tmp_14;
  {
    int tmp_15;
    
#line 3543 
    u16 _min1_7 = *rates;
    
#line 3543 
    u16 _min2_7 = rate_info->target_power_48;
    
#line 3543 
    if ((int)_min1_7 < (int)_min2_7) 
#line 3543 
                                     tmp_15 = (int)_min1_7; else 
#line 3543 
                                                                 tmp_15 = (int)_min2_7;
    
#line 3543 
    tmp_16 = tmp_15;
  }
  
#line 3543 
  *(rates + 11U) = (unsigned short)tmp_16;
  {
    int tmp_17;
    
#line 3545 
    u16 _min1_8 = *rates;
    
#line 3545 
    u16 _min2_8 = rate_info->target_power_48;
    
#line 3545 
    if ((int)_min1_8 < (int)_min2_8) 
#line 3545 
                                     tmp_17 = (int)_min1_8; else 
#line 3545 
                                                                 tmp_17 = (int)_min2_8;
    
#line 3545 
    tmp_18 = tmp_17;
  }
  
#line 3545 
  *(rates + 12U) = (unsigned short)tmp_18;
  {
    int tmp_19;
    
#line 3547 
    u16 _min1_9 = *rates;
    
#line 3547 
    u16 _min2_9 = rate_info->target_power_54;
    
#line 3547 
    if ((int)_min1_9 < (int)_min2_9) 
#line 3547 
                                     tmp_19 = (int)_min1_9; else 
#line 3547 
                                                                 tmp_19 = (int)_min2_9;
    
#line 3547 
    tmp_20 = tmp_19;
  }
  
#line 3547 
  *(rates + 13U) = (unsigned short)tmp_20;
  {
    int tmp_21;
    
#line 3549 
    u16 _min1_10 = *rates;
    
#line 3549 
    u16 _min2_10 = rate_info->target_power_54;
    
#line 3549 
    if ((int)_min1_10 < (int)_min2_10) 
#line 3549 
                                       tmp_21 = (int)_min1_10; else 
#line 3549 
                                                                    tmp_21 = (int)_min2_10;
    
#line 3549 
    tmp_22 = tmp_21;
  }
  
#line 3549 
  *(rates + 14U) = (unsigned short)tmp_22;
  {
    int tmp_23;
    
#line 3552 
    u16 _min1_11 = *rates;
    
#line 3552 
    u16 _min2_11 = rate_info->target_power_6to24;
    
#line 3552 
    if ((int)_min1_11 < (int)_min2_11) 
#line 3552 
                                       tmp_23 = (int)_min1_11; else 
#line 3552 
                                                                    tmp_23 = (int)_min2_11;
    
#line 3552 
    tmp_24 = tmp_23;
  }
  
#line 3552 
  *(rates + 15U) = (unsigned short)tmp_24;
  
#line 3558 
  if ((unsigned int)ee_mode == 2U && (unsigned int)ah->ah_phy_revision <= 65U) {
    
#line 3560 
    i = 8U;
    
#line 3560 
    goto ldv_51525;
    ldv_51524: 
#line 3561 
    ;
    
#line 3561 
    *(rates + i) = (unsigned short)((int)*(rates + i) - (int)((unsigned short)ah->ah_txpower.txp_cck_ofdm_gainf_delta));
    
#line 3560 
    i += 1U;
    ldv_51525: 
#line 3561 
    ;
    
#line 3560 
    if (i <= 15U) 
#line 3562 
                  goto ldv_51524; else 
#line 3565 
                                       goto ldv_51526;
    ldv_51526: 
#line 3566 
    ;
  }
  else ;
  
#line 3569 
  ah->ah_txpower.txp_min_pwr = (short)((unsigned int)*(rates + 7U) * 2U);
  
#line 3570 
  ah->ah_txpower.txp_cur_pwr = (short)((unsigned int)*rates * 2U);
  
#line 3575 
  ah->ah_txpower.txp_ofdm = (short)*(rates + 7U);
  
#line 3580 
  i = 0U;
  
#line 3580 
  goto ldv_51528;
  ldv_51527: 
#line 3581 
  ;
  
#line 3581 
  rate_idx_scaled = (short)((int)*(rates + i) + (int)ah->ah_txpower.txp_offset);
  
#line 3583 
  if ((int)rate_idx_scaled > 63) 
#line 3584 
                                 rate_idx_scaled = (short)63; else ;
  
#line 3585 
  if ((int)rate_idx_scaled < 0) 
#line 3586 
                                rate_idx_scaled = (short)0; else ;
  
#line 3587 
  *(rates + i) = (unsigned short)rate_idx_scaled;
  
#line 3580 
  i += 1U;
  ldv_51528: 
#line 3581 
  ;
  
#line 3580 
  if (i <= 15U) 
#line 3582 
                goto ldv_51527; else 
#line 3585 
                                     goto ldv_51529;
  ldv_51529: 
#line 3586 
  ;
  
#line 3587 
  return;
}


#line 3602  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
static int ath5k_hw_txpower(struct ath5k_hw *ah, struct ieee80211_channel *channel, u8 txpower)
{
  int __retres;
  struct ath5k_rate_pcal_info rate_info;
  int ee_mode;
  u8 type;
  int ret;
  
#line 3606 
  struct ieee80211_channel *curr_channel = ah->ah_current_channel;
  
#line 3611 
  if ((unsigned int)txpower > 63U) {
    int tmp;
    
#line 3612 
    tmp = net_ratelimit();
    
#line 3612 
    if (tmp != 0) 
#line 3612 
                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","invalid tx power: %u\n",(int)txpower); else ;
    
#line 3613 
    __retres = -22;
    
#line 3613 
    goto return_label;
  }
  else ;
  
#line 3616 
  ee_mode = ath5k_eeprom_mode_from_channel(ah,channel);
  
#line 3619 
  switch ((unsigned int)ah->ah_radio) {
    case (unsigned int)0: 
#line 3620 
    ;
    
#line 3622 
    __retres = 0;
    
#line 3622 
    goto return_label;
    case (unsigned int)1: 
#line 3623 
    ;
    
#line 3624 
    type = (unsigned char)0U;
    
#line 3625 
    goto ldv_51542;
    case (unsigned int)2: 
#line 3626 
    ;
    
#line 3627 
    type = (unsigned char)1U;
    
#line 3628 
    goto ldv_51542;
    case (unsigned int)3: 
#line 3629 
    ;
    case (unsigned int)4: 
#line 3630 
    ;
    case (unsigned int)5: 
#line 3631 
    ;
    case (unsigned int)6: 
#line 3632 
    ;
    case (unsigned int)7: 
#line 3633 
    ;
    
#line 3634 
    type = (unsigned char)2U;
    
#line 3635 
    goto ldv_51542;
    default: 
#line 3636 
    ;
    
#line 3637 
    __retres = -22;
    
#line 3637 
    goto return_label;
  }
  ldv_51542: 
#line 3644 
  ;
  
#line 3644 
  if ((! ah->ah_txpower.txp_setup || (int)channel->hw_value != (int)curr_channel->hw_value) || (int)channel->center_freq != (int)curr_channel->center_freq) {
    
#line 3649 
    int requested_txpower = ah->ah_txpower.txp_requested;
    
#line 3651 
    memset((void *)(& ah->ah_txpower),0,728UL);
    
#line 3654 
    ah->ah_txpower.txp_tpc = (_Bool)0;
    
#line 3656 
    ah->ah_txpower.txp_requested = requested_txpower;
    
#line 3659 
    ret = ath5k_setup_channel_powertable(ah,channel,(unsigned char)((int)((unsigned char)ee_mode)),(unsigned char)((int)type));
    
#line 3661 
    if (ret != 0) {
      
#line 3662 
      __retres = ret;
      
#line 3662 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 3666 
  ath5k_write_channel_powertable(ah,(unsigned char)((int)((unsigned char)ee_mode)),(unsigned char)((int)type));
  
#line 3669 
  ath5k_get_max_ctl_power(ah,channel);
  
#line 3679 
  ath5k_get_rate_pcal_data(ah,channel,& rate_info);
  
#line 3682 
  ath5k_setup_rate_powertable(ah,(unsigned short)((int)txpower),& rate_info,(unsigned char)((int)((unsigned char)ee_mode)));
  
#line 3685 
  ath5k_hw_reg_write(ah,(unsigned int)((((((int)ah->ah_txpower.txp_rates_power_table[3] << 24) & 1056964608) | (((int)ah->ah_txpower.txp_rates_power_table[2] << 16) & 4128768)) | (((int)ah->ah_txpower.txp_rates_power_table[1] << 8) & 16128)) | ((int)ah->ah_txpower.txp_rates_power_table[0] & 63)),(unsigned short)39220);
  
#line 3689 
  ath5k_hw_reg_write(ah,(unsigned int)((((((int)ah->ah_txpower.txp_rates_power_table[7] << 24) & 1056964608) | (((int)ah->ah_txpower.txp_rates_power_table[6] << 16) & 4128768)) | (((int)ah->ah_txpower.txp_rates_power_table[5] << 8) & 16128)) | ((int)ah->ah_txpower.txp_rates_power_table[4] & 63)),(unsigned short)39224);
  
#line 3693 
  ath5k_hw_reg_write(ah,(unsigned int)((((((int)ah->ah_txpower.txp_rates_power_table[10] << 24) & 1056964608) | (((int)ah->ah_txpower.txp_rates_power_table[9] << 16) & 4128768)) | (((int)ah->ah_txpower.txp_rates_power_table[15] << 8) & 16128)) | ((int)ah->ah_txpower.txp_rates_power_table[8] & 63)),(unsigned short)41524);
  
#line 3697 
  ath5k_hw_reg_write(ah,(unsigned int)((((((int)ah->ah_txpower.txp_rates_power_table[14] << 24) & 1056964608) | (((int)ah->ah_txpower.txp_rates_power_table[13] << 16) & 4128768)) | (((int)ah->ah_txpower.txp_rates_power_table[12] << 8) & 16128)) | ((int)ah->ah_txpower.txp_rates_power_table[11] & 63)),(unsigned short)41528);
  
#line 3702 
  if ((int)ah->ah_txpower.txp_tpc != 0) {
    
#line 3703 
    ath5k_hw_reg_write(ah,127U,(unsigned short)39228);
    
#line 3706 
    ath5k_hw_reg_write(ah,63U,(unsigned short)33000);
  }
  else 
#line 3712 
       ath5k_hw_reg_write(ah,63U,(unsigned short)39228);
  
#line 3716 
  __retres = 0;
  return_label: 
#line 3716 
                return __retres;
}


#line 3728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
int ath5k_hw_set_txpower_limit(struct ath5k_hw *ah, u8 txpower)
{
  int tmp_0;
  
#line 3730 
  if ((long)((ah->debug.level & 64U) != 0U) != 0L) {
    int tmp;
    
#line 3730 
    tmp = net_ratelimit();
    
#line 3730 
    if ((long)(tmp != 0) != 0L) 
#line 3730 
                                _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_hw_set_txpower_limit",3731,(int)txpower); else ;
  }
  else ;
  
#line 3733 
  tmp_0 = ath5k_hw_txpower(ah,ah->ah_current_channel,(unsigned char)((int)txpower));
  
#line 3733 
  return tmp_0;
}


#line 3755  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/phy.c"
int ath5k_hw_phy_init(struct ath5k_hw *ah, struct ieee80211_channel *channel, u8 mode, bool fast)
{
  int __retres;
  struct ieee80211_channel *curr_channel;
  int ret;
  int i;
  u32 phy_tst1;
  unsigned int tmp_1;
  u32 tmp_6;
  u32 tmp_7;
  int tmp_11;
  
#line 3761 
  ret = 0;
  
#line 3769 
  curr_channel = ah->ah_current_channel;
  
#line 3770 
  if ((int)fast != 0 && (int)channel->hw_value != (int)curr_channel->hw_value) {
    
#line 3771 
    __retres = -22;
    
#line 3771 
    goto return_label;
  }
  else ;
  
#line 3777 
  if ((int)fast != 0) {
    u32 tmp;
    u32 tmp_0;
    
#line 3778 
    tmp = ath5k_hw_reg_read(ah,(unsigned short)39292);
    
#line 3778 
    ;
    
#line 3778 
    ath5k_hw_reg_write(ah,tmp | 1U,(unsigned short)39292);
    
#line 3780 
    i = 0;
    
#line 3780 
    goto ldv_51568;
    ldv_51567: 
#line 3781 
    ;
    
#line 3781 
    tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)39968);
    
#line 3781 
    if (tmp_0 != 0U) 
#line 3782 
                     goto ldv_51566; else ;
    
#line 3783 
    __const_udelay(21475UL);
    
#line 3780 
    i += 1;
    ldv_51568: 
#line 3781 
    ;
    
#line 3780 
    if (i <= 99) 
#line 3782 
                 goto ldv_51567; else 
#line 3785 
                                      goto ldv_51566;
    ldv_51566: 
#line 3786 
    ;
    
#line 3786 
    if (i > 99) {
      
#line 3787 
      __retres = -5;
      
#line 3787 
      goto return_label;
    }
    else ;
    
#line 3790 
    ret = ath5k_hw_channel(ah,channel);
    
#line 3791 
    if (ret != 0) {
      
#line 3792 
      __retres = ret;
      
#line 3792 
      goto return_label;
    }
    else ;
    
#line 3794 
    ath5k_hw_wait_for_synth(ah,channel);
  }
  else ;
  
#line 3804 
  if (ah->ah_txpower.txp_requested != 0) 
#line 3804 
                                         tmp_1 = (unsigned int)((unsigned char)ah->ah_txpower.txp_requested) * 2U; else 
                                                                    
#line 3804 
                                                                    tmp_1 = 63U;
  
#line 3804 
  ;
  
#line 3804 
  ;
  
#line 3804 
  ret = ath5k_hw_txpower(ah,channel,(unsigned char)((int)tmp_1));
  
#line 3807 
  if (ret != 0) {
    
#line 3808 
    __retres = ret;
    
#line 3808 
    goto return_label;
  }
  else ;
  
#line 3811 
  if (ah->ah_version == (unsigned int)AR5K_AR5212 && (unsigned int)channel->hw_value != 1U) {
    
#line 3814 
    ret = ath5k_hw_write_ofdm_timings(ah,channel);
    
#line 3815 
    if (ret != 0) {
      
#line 3816 
      __retres = ret;
      
#line 3816 
      goto return_label;
    }
    else ;
    
#line 3821 
    if (ah->ah_mac_srev > 143U) 
#line 3822 
                                ath5k_hw_set_spur_mitigation_filter(ah,channel); else ;
  }
  else ;
  
#line 3834 
  if ((int)fast != 0) {
    u32 tmp_2;
    u32 tmp_3;
    
#line 3838 
    tmp_2 = ath5k_hw_reg_read(ah,(unsigned short)39292);
    
#line 3838 
    ;
    
#line 3838 
    ath5k_hw_reg_write(ah,tmp_2 & 4294967294U,(unsigned short)39292);
    
#line 3844 
    tmp_3 = ath5k_hw_reg_read(ah,(unsigned short)39008);
    
#line 3844 
    ;
    
#line 3844 
    ath5k_hw_reg_write(ah,tmp_3 | 2U,(unsigned short)39008);
    
#line 3847 
    __retres = ret;
    
#line 3847 
    goto return_label;
  }
  else ;
  
#line 3856 
  if (ah->ah_version != (unsigned int)AR5K_AR5210) {
    
#line 3862 
    ret = ath5k_hw_rfgain_init(ah,channel->band);
    
#line 3863 
    if (ret != 0) {
      
#line 3864 
      __retres = ret;
      
#line 3864 
      goto return_label;
    }
    else ;
    
#line 3866 
    usleep_range(1000UL,1500UL);
    
#line 3871 
    ret = ath5k_hw_rfregs_init(ah,channel,(unsigned int)mode);
    
#line 3872 
    if (ret != 0) {
      
#line 3873 
      __retres = ret;
      
#line 3873 
      goto return_label;
    }
    else ;
    
#line 3877 
    if (ah->ah_radio == (unsigned int)AR5K_RF5111) 
      
#line 3878 
      if ((unsigned int)mode == 1U) {
        u32 tmp_4;
        
#line 3879 
        tmp_4 = ath5k_hw_reg_read(ah,(unsigned short)48);
        
#line 3879 
        ;
        
#line 3879 
        ath5k_hw_reg_write(ah,tmp_4 | 8U,(unsigned short)48);
      }
      else {
        u32 tmp_5;
        
#line 3882 
        tmp_5 = ath5k_hw_reg_read(ah,(unsigned short)48);
        
#line 3882 
        ;
        
#line 3882 
        ath5k_hw_reg_write(ah,tmp_5 & 4294967287U,(unsigned short)48);
      }
    else ;
  }
  else 
    
#line 3886 
    if (ah->ah_version == (unsigned int)AR5K_AR5210) {
      
#line 3887 
      usleep_range(1000UL,1500UL);
      
#line 3889 
      ath5k_hw_reg_write(ah,2U,(unsigned short)38940);
      
#line 3890 
      usleep_range(1000UL,1500UL);
    }
    else ;
  
#line 3894 
  ret = ath5k_hw_channel(ah,channel);
  
#line 3895 
  if (ret != 0) {
    
#line 3896 
    __retres = ret;
    
#line 3896 
    goto return_label;
  }
  else ;
  
#line 3903 
  ath5k_hw_reg_write(ah,1U,(unsigned short)38940);
  
#line 3905 
  ath5k_hw_wait_for_synth(ah,channel);
  
#line 3911 
  phy_tst1 = ath5k_hw_reg_read(ah,(unsigned short)38920);
  
#line 3912 
  ath5k_hw_reg_write(ah,14336U,(unsigned short)38920);
  
#line 3913 
  i = 0;
  
#line 3913 
  goto ldv_51571;
  ldv_51570: 
#line 3914 
  ;
  
#line 3914 
  tmp_6 = ath5k_hw_reg_read(ah,(unsigned short)39972);
  
#line 3914 
  if ((tmp_6 & 16U) == 0U) 
#line 3915 
                           goto ldv_51569; else ;
  
#line 3916 
  usleep_range(200UL,250UL);
  
#line 3913 
  i += 1;
  ldv_51571: 
#line 3914 
  ;
  
#line 3913 
  if (i <= 20) 
#line 3915 
               goto ldv_51570; else 
#line 3918 
                                    goto ldv_51569;
  ldv_51569: 
#line 3919 
  ;
  
#line 3918 
  ath5k_hw_reg_write(ah,phy_tst1,(unsigned short)38920);
  
#line 3939 
  tmp_7 = ath5k_hw_reg_read(ah,(unsigned short)39008);
  
#line 3939 
  ;
  
#line 3939 
  ath5k_hw_reg_write(ah,tmp_7 | 3U,(unsigned short)39008);
  
#line 3944 
  ah->ah_iq_cal_needed = (_Bool)0;
  
#line 3945 
  if ((unsigned int)mode != 1U) {
    u32 tmp_8;
    u32 tmp_9;
    
#line 3946 
    ah->ah_iq_cal_needed = (_Bool)1;
    
#line 3947 
    tmp_8 = ath5k_hw_reg_read(ah,(unsigned short)39200);
    
#line 3947 
    ;
    
#line 3947 
    ath5k_hw_reg_write(ah,tmp_8 | 61440U,(unsigned short)39200);
    
#line 3949 
    tmp_9 = ath5k_hw_reg_read(ah,(unsigned short)39200);
    
#line 3949 
    ;
    
#line 3949 
    ath5k_hw_reg_write(ah,tmp_9 | 65536U,(unsigned short)39200);
  }
  else ;
  
#line 3955 
  tmp_11 = ath5k_hw_register_timeout(ah,39008U,1U,0U,(_Bool)0);
  
#line 3955 
  if (tmp_11 != 0) {
    int tmp_10;
    
#line 3957 
    tmp_10 = net_ratelimit();
    
#line 3957 
    if (tmp_10 != 0) 
#line 3957 
                     _ath5k_printk((struct ath5k_hw const *)ah,"\001","gain calibration timeout (%uMHz)\n",(int)channel->center_freq); else ;
  }
  else ;
  
#line 3962 
  ath5k_hw_set_antenna_mode(ah,(unsigned char)((int)ah->ah_ant_mode));
  
#line 3964 
  __retres = ret;
  return_label: 
#line 3964 
                return __retres;
}


#line 399  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_phy.c.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 402 
  tmp = ldv_kmalloc(size,flags);
  
#line 402 
  return tmp;
}


#line 1601  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
int ath5k_hw_set_capabilities(struct ath5k_hw *ah);


#line 1602 
int ath5k_hw_enable_pspoll(struct ath5k_hw *ah, u8 *bssid, u16 assoc_id);


#line 1603 
int ath5k_hw_disable_pspoll(struct ath5k_hw *ah);


#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/regd.h"
bool ath_is_49ghz_allowed(u16);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/caps.c"
int ath5k_hw_set_capabilities(struct ath5k_hw *ah)
{
  int __retres;
  u16 ee_header;
  
#line 35 
  struct ath5k_capabilities *caps = & ah->ah_capabilities;
  
#line 39 
  ee_header = caps->cap_eeprom.ee_header;
  
#line 41 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) {
    
#line 46 
    caps->cap_range.range_5ghz_min = (unsigned short)5120U;
    
#line 47 
    caps->cap_range.range_5ghz_max = (unsigned short)5430U;
    
#line 48 
    caps->cap_range.range_2ghz_min = (unsigned short)0U;
    
#line 49 
    caps->cap_range.range_2ghz_max = (unsigned short)0U;
    
#line 52 
    __set_bit(0L,(unsigned long volatile *)(& caps->cap_mode));
  }
  else {
    
#line 68 
    if (((int)ee_header & 1) != 0) {
      bool tmp;
      
#line 69 
      tmp = ath_is_49ghz_allowed((unsigned short)((int)caps->cap_eeprom.ee_regdomain));
      
#line 69 
      if ((int)tmp != 0) 
#line 70 
                         caps->cap_range.range_5ghz_min = (unsigned short)4920U; else 
                                                                    
#line 72 
                                                                    caps->cap_range.range_5ghz_min = (unsigned short)5005U;
      
#line 73 
      caps->cap_range.range_5ghz_max = (unsigned short)6100U;
      
#line 76 
      __set_bit(0L,(unsigned long volatile *)(& caps->cap_mode));
    }
    else ;
    
#line 81 
    if ((((int)ee_header >> 1) & 1) != 0 || ((((int)ee_header >> 2) & 1) != 0 && ah->ah_version != (unsigned int)AR5K_AR5211)) {
      
#line 85 
      caps->cap_range.range_2ghz_min = (unsigned short)2412U;
      
#line 86 
      caps->cap_range.range_2ghz_max = (unsigned short)2732U;
      
#line 91 
      if (! caps->cap_needs_2GHz_ovr) {
        
#line 92 
        if ((((int)ee_header >> 1) & 1) != 0) 
#line 93 
                                              __set_bit(1L,(unsigned long volatile *)(& caps->cap_mode)); else ;
        
#line 96 
        if ((((int)ee_header >> 2) & 1) != 0 && ah->ah_version != (unsigned int)AR5K_AR5211) 
          
#line 98 
          __set_bit(2L,(unsigned long volatile *)(& caps->cap_mode)); else ;
      }
      else ;
    }
    else ;
  }
  
#line 104 
  if (((int)ah->ah_radio_5ghz_revision & 240) == 64) 
#line 105 
                                                     __set_bit(0L,(unsigned long volatile *)(& caps->cap_mode)); else ;
  
#line 108 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 109 
                                                   caps->cap_queues.q_tx_num = (unsigned char)2U; else 
                                                                    
#line 111 
                                                                    caps->cap_queues.q_tx_num = (unsigned char)10U;
  
#line 114 
  if (ah->ah_mac_srev > 88U) 
#line 115 
                             caps->cap_has_phyerr_counters = (_Bool)1; else 
                                                                    
#line 117 
                                                                    caps->cap_has_phyerr_counters = (_Bool)0;
  
#line 120 
  if (ah->ah_version == (unsigned int)AR5K_AR5212) 
#line 121 
                                                   caps->cap_has_mrr_support = (_Bool)1; else 
                                                                    
#line 123 
                                                                    caps->cap_has_mrr_support = (_Bool)0;
  
#line 125 
  __retres = 0;
  
#line 125 
  return __retres;
}


#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/caps.c"
int ath5k_hw_enable_pspoll(struct ath5k_hw *ah, u8 *bssid, u16 assoc_id)
{
  int __retres;
  
#line 136 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) {
    u32 tmp;
    
#line 137 
    tmp = ath5k_hw_reg_read(ah,(unsigned short)32772);
    
#line 137 
    ;
    
#line 137 
    ath5k_hw_reg_write(ah,tmp & 4291821567U,(unsigned short)32772);
    
#line 139 
    __retres = 0;
    
#line 139 
    goto return_label;
  }
  else ;
  
#line 142 
  __retres = -5;
  return_label: 
#line 142 
                return __retres;
}


#line 145  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/caps.c"
int ath5k_hw_disable_pspoll(struct ath5k_hw *ah)
{
  int __retres;
  
#line 147 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) {
    u32 tmp;
    
#line 148 
    tmp = ath5k_hw_reg_read(ah,(unsigned short)32772);
    
#line 148 
    ;
    
#line 148 
    ath5k_hw_reg_write(ah,tmp | 3145728U,(unsigned short)32772);
    
#line 150 
    __retres = 0;
    
#line 150 
    goto return_label;
  }
  else ;
  
#line 153 
  __retres = -5;
  return_label: 
#line 153 
                return __retres;
}


#line 1718  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_pcie_cap(struct pci_dev *dev)
{
  int __retres;
  
#line 1720 
  __retres = (int)dev->pcie_cap;
  
#line 1720 
  return __retres;
}


#line 1729  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static bool pci_is_pcie(struct pci_dev *dev)
{
  bool __retres;
  int tmp;
  
#line 1731 
  tmp = pci_pcie_cap(dev);
  
#line 1731 
  __retres = (_Bool)(tmp != 0);
  
#line 1731 
  return __retres;
}


#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath.h"
static u8 const ath_bcast_mac[6U] = {(unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U};

#line 1491  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
int ath5k_hw_nic_wakeup(struct ath5k_hw *ah, struct ieee80211_channel *channel);


#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/attach.c"
static int ath5k_hw_post(struct ath5k_hw *ah)
{
  int __retres;
  int i;
  int c;
  u16 cur_reg;
  u32 var_pattern;
  u32 init_val;
  u32 cur_val;
  
#line 38 
  u32 const static_pattern[4U] = {1431655765U, 2863311530U, 1717986918U, 2576980377U};
  
#line 42 
  u16 const regs_0[2U] = {(unsigned short)32768U, (unsigned short)38944U};
  
#line 49 
  c = 0;
  
#line 49 
  goto ldv_52049;
  ldv_52048: 
#line 50 
  ;
  
#line 51 
  cur_reg = regs_0[c];
  
#line 54 
  init_val = ath5k_hw_reg_read(ah,(unsigned short)((int)cur_reg));
  
#line 56 
  i = 0;
  
#line 56 
  goto ldv_52043;
  ldv_52042: 
#line 57 
  ;
  
#line 57 
  var_pattern = (unsigned int)((i << 16) | i);
  
#line 58 
  ath5k_hw_reg_write(ah,var_pattern,(unsigned short)((int)cur_reg));
  
#line 59 
  cur_val = ath5k_hw_reg_read(ah,(unsigned short)((int)cur_reg));
  
#line 61 
  if (cur_val != var_pattern) {
    int tmp;
    
#line 62 
    tmp = net_ratelimit();
    
#line 62 
    if (tmp != 0) 
#line 62 
                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","POST Failed !!!\n"); else ;
    
#line 63 
    __retres = -11;
    
#line 63 
    goto return_label;
  }
  else ;
  
#line 67 
  var_pattern = 3737615U;
  
#line 68 
  ath5k_hw_reg_write(ah,var_pattern,(unsigned short)((int)cur_reg));
  
#line 56 
  i += 1;
  ldv_52043: 
#line 57 
  ;
  
#line 56 
  if (i <= 255) 
#line 58 
                goto ldv_52042; else 
#line 61 
                                     goto ldv_52044;
  ldv_52044: 
#line 62 
  ;
  
#line 71 
  i = 0;
  
#line 71 
  goto ldv_52046;
  ldv_52045: 
#line 72 
  ;
  
#line 72 
  var_pattern = static_pattern[i];
  
#line 73 
  ath5k_hw_reg_write(ah,var_pattern,(unsigned short)((int)cur_reg));
  
#line 74 
  cur_val = ath5k_hw_reg_read(ah,(unsigned short)((int)cur_reg));
  
#line 76 
  if (cur_val != var_pattern) {
    int tmp_0;
    
#line 77 
    tmp_0 = net_ratelimit();
    
#line 77 
    if (tmp_0 != 0) 
#line 77 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","POST Failed !!!\n"); else ;
    
#line 78 
    __retres = -11;
    
#line 78 
    goto return_label;
  }
  else ;
  
#line 82 
  var_pattern = 3868687U;
  
#line 83 
  ath5k_hw_reg_write(ah,var_pattern,(unsigned short)((int)cur_reg));
  
#line 71 
  i += 1;
  ldv_52046: 
#line 72 
  ;
  
#line 71 
  if (i <= 3) 
#line 73 
              goto ldv_52045; else 
#line 76 
                                   goto ldv_52047;
  ldv_52047: 
#line 77 
  ;
  
#line 87 
  ath5k_hw_reg_write(ah,init_val,(unsigned short)((int)cur_reg));
  
#line 49 
  c += 1;
  ldv_52049: 
#line 50 
  ;
  
#line 49 
  if (c <= 1) 
#line 51 
              goto ldv_52048; else 
#line 54 
                                   goto ldv_52050;
  ldv_52050: 
#line 55 
  ;
  
#line 91 
  __retres = 0;
  return_label: 
#line 91 
                return __retres;
}


#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/attach.c"
int ath5k_hw_init(struct ath5k_hw *ah)
{
  int __retres;
  struct ath5k_eeprom_info *ee;
  int ret;
  u32 srev;
  u32 tmp_0;
  int tmp_7;
  
#line 106 
  u8 const zero_mac[6U] = {};
  
#line 107 
  struct ath_common *common = ath5k_hw_common(ah);
  
#line 108 
  struct pci_dev *pdev = ah->pdev;
  
#line 116 
  ah->ah_bwmode = (unsigned char)0U;
  
#line 117 
  ah->ah_txpower.txp_tpc = (_Bool)0;
  
#line 118 
  ah->ah_imr = (enum ath5k_int)0;
  
#line 119 
  ah->ah_retry_short = (unsigned char)7U;
  
#line 120 
  ah->ah_retry_long = (unsigned char)4U;
  
#line 121 
  ah->ah_ant_mode = (unsigned char)0U;
  
#line 122 
  ah->ah_noise_floor = -95;
  
#line 123 
  ah->ani_state.ani_mode = ATH5K_ANI_MODE_AUTO;
  
#line 124 
  ah->ah_current_channel = & ah->channels[0];
  
#line 129 
  ath5k_hw_read_srev(ah);
  
#line 130 
  srev = ah->ah_mac_srev;
  
#line 131 
  if (srev <= 15U) 
#line 132 
                   ah->ah_version = AR5K_AR5210;
  else 
    
#line 133 
    if (srev <= 79U) 
#line 134 
                     ah->ah_version = AR5K_AR5211; else 
#line 136 
                                                        ah->ah_version = AR5K_AR5212;
  
#line 139 
  ah->ah_mac_version = (unsigned short)((unsigned int)((unsigned short)(srev >> 4)) & 15U);
  
#line 142 
  ret = ath5k_hw_init_desc_functions(ah);
  
#line 143 
  if (ret != 0) 
#line 144 
                goto err; else ;
  
#line 147 
  ret = ath5k_hw_nic_wakeup(ah,(struct ieee80211_channel *)0);
  
#line 148 
  if (ret != 0) 
#line 149 
                goto err; else ;
  
#line 152 
  tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)38936);
  
#line 152 
  ah->ah_phy_revision = (unsigned short)tmp_0;
  
#line 154 
  ah->ah_radio_5ghz_revision = ath5k_hw_radio_revision(ah,(enum ieee80211_band)IEEE80211_BAND_5GHZ);
  
#line 158 
  switch ((int)ah->ah_radio_5ghz_revision & 240) {
    case 16: 
#line 159 
    ;
    
#line 160 
    ah->ah_radio = AR5K_RF5111;
    
#line 161 
    ah->ah_single_chip = (_Bool)0;
    
#line 162 
    ah->ah_radio_2ghz_revision = ath5k_hw_radio_revision(ah,(enum ieee80211_band)IEEE80211_BAND_2GHZ);
    
#line 164 
    goto ldv_52062;
    case 48: 
#line 165 
    ;
    case 64: 
#line 166 
    ;
    
#line 167 
    ah->ah_radio = AR5K_RF5112;
    
#line 168 
    ah->ah_single_chip = (_Bool)0;
    
#line 169 
    ah->ah_radio_2ghz_revision = ath5k_hw_radio_revision(ah,(enum ieee80211_band)IEEE80211_BAND_2GHZ);
    
#line 171 
    goto ldv_52062;
    case 80: 
#line 172 
    ;
    
#line 173 
    ah->ah_radio = AR5K_RF2413;
    
#line 174 
    ah->ah_single_chip = (_Bool)1;
    
#line 175 
    goto ldv_52062;
    case 96: 
#line 176 
    ;
    
#line 177 
    ah->ah_radio = AR5K_RF5413;
    
#line 178 
    ah->ah_single_chip = (_Bool)1;
    
#line 179 
    goto ldv_52062;
    case 112: 
#line 180 
    ;
    
#line 181 
    ah->ah_radio = AR5K_RF2316;
    
#line 182 
    ah->ah_single_chip = (_Bool)1;
    
#line 183 
    goto ldv_52062;
    case 128: 
#line 184 
    ;
    
#line 185 
    ah->ah_radio = AR5K_RF2317;
    
#line 186 
    ah->ah_single_chip = (_Bool)1;
    
#line 187 
    goto ldv_52062;
    case 160: 
#line 188 
    ;
    
#line 189 
    if ((unsigned int)ah->ah_mac_version == 224U || (unsigned int)ah->ah_mac_version == 240U) {
      
#line 191 
      ah->ah_radio = AR5K_RF2425;
      
#line 192 
      ah->ah_single_chip = (_Bool)1;
    }
    else {
      
#line 194 
      ah->ah_radio = AR5K_RF5413;
      
#line 195 
      ah->ah_single_chip = (_Bool)1;
    }
    
#line 197 
    goto ldv_52062;
    default: 
#line 198 
    ;
    
#line 200 
    if (ah->ah_version == (unsigned int)AR5K_AR5210) {
      
#line 201 
      ah->ah_radio = AR5K_RF5110;
      
#line 202 
      ah->ah_single_chip = (_Bool)0;
    }
    else 
      
#line 203 
      if (ah->ah_version == (unsigned int)AR5K_AR5211) {
        
#line 204 
        ah->ah_radio = AR5K_RF5111;
        
#line 205 
        ah->ah_single_chip = (_Bool)0;
        
#line 206 
        ah->ah_radio_2ghz_revision = ath5k_hw_radio_revision(ah,(enum ieee80211_band)IEEE80211_BAND_2GHZ);
      }
      else 
        
#line 208 
        if ((unsigned int)ah->ah_mac_version + 65522U <= 1U || (unsigned int)ah->ah_phy_revision == 112U) {
          
#line 211 
          ah->ah_radio = AR5K_RF2425;
          
#line 212 
          ah->ah_single_chip = (_Bool)1;
          
#line 213 
          ah->ah_radio_5ghz_revision = (unsigned short)162U;
        }
        else 
          
#line 214 
          if (srev == 89U && (unsigned int)ah->ah_phy_revision == 67U) {
            
#line 216 
            ah->ah_radio = AR5K_RF5112;
            
#line 217 
            ah->ah_single_chip = (_Bool)0;
            
#line 218 
            ah->ah_radio_5ghz_revision = (unsigned short)54U;
          }
          else 
            
#line 219 
            if ((unsigned int)ah->ah_mac_version == 11U || (unsigned int)ah->ah_mac_version == 8U) {
              
#line 221 
              ah->ah_radio = AR5K_RF2316;
              
#line 222 
              ah->ah_single_chip = (_Bool)1;
              
#line 223 
              ah->ah_radio_5ghz_revision = (unsigned short)112U;
            }
            else 
              
#line 224 
              if ((unsigned int)ah->ah_mac_version == 10U || (unsigned int)ah->ah_phy_revision == 97U) {
                
#line 226 
                ah->ah_radio = AR5K_RF5413;
                
#line 227 
                ah->ah_single_chip = (_Bool)1;
                
#line 228 
                ah->ah_radio_5ghz_revision = (unsigned short)96U;
              }
              else 
                
#line 229 
                if ((unsigned int)ah->ah_mac_version == 7U || (unsigned int)ah->ah_phy_revision == 69U) {
                  
#line 231 
                  ah->ah_radio = AR5K_RF2413;
                  
#line 232 
                  ah->ah_single_chip = (_Bool)1;
                  
#line 233 
                  ah->ah_radio_5ghz_revision = (unsigned short)80U;
                }
                else {
                  int tmp_1;
                  
#line 235 
                  tmp_1 = net_ratelimit();
                  
#line 235 
                  if (tmp_1 != 0) 
#line 235 
                                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","Couldn\'t identify radio revision.\n"); else ;
                  
#line 236 
                  ret = -19;
                  
#line 237 
                  goto err;
                }
  }
  ldv_52062: 
#line 243 
  ;
  
#line 243 
  if (srev + 4294967104U <= 31U) {
    int tmp_2;
    
#line 244 
    tmp_2 = net_ratelimit();
    
#line 244 
    if (tmp_2 != 0) 
#line 244 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","Device not yet supported.\n"); else ;
    
#line 245 
    ret = -19;
    
#line 246 
    goto err;
  }
  else ;
  
#line 252 
  ret = ath5k_hw_post(ah);
  
#line 253 
  if (ret != 0) 
#line 254 
                goto err; else ;
  
#line 257 
  if (srev > 88U) {
    u32 tmp_3;
    
#line 258 
    tmp_3 = ath5k_hw_reg_read(ah,(unsigned short)16400);
    
#line 258 
    ;
    
#line 258 
    ath5k_hw_reg_write(ah,tmp_3 | 4096U,(unsigned short)16400);
  }
  else ;
  
#line 264 
  ret = ath5k_eeprom_init(ah);
  
#line 265 
  if (ret != 0) {
    int tmp_4;
    
#line 266 
    tmp_4 = net_ratelimit();
    
#line 266 
    if (tmp_4 != 0) 
#line 266 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","unable to init EEPROM\n"); else ;
    
#line 267 
    goto err;
  }
  else ;
  
#line 270 
  ee = & ah->ah_capabilities.cap_eeprom;
  
#line 275 
  if (ah->ah_version == (unsigned int)AR5K_AR5212 && pdev != (struct pci_dev *)0) {
    bool tmp_5;
    
#line 275 
    tmp_5 = pci_is_pcie(pdev);
    
#line 275 
    if ((int)tmp_5 != 0) {
      
#line 276 
      ath5k_hw_reg_write(ah,2454256640U,(unsigned short)16512);
      
#line 277 
      ath5k_hw_reg_write(ah,613566756U,(unsigned short)16512);
      
#line 280 
      ath5k_hw_reg_write(ah,671088697U,(unsigned short)16512);
      
#line 281 
      ath5k_hw_reg_write(ah,1393952804U,(unsigned short)16512);
      
#line 286 
      if ((int)ee->ee_serdes != 0) 
#line 287 
                                   ath5k_hw_reg_write(ah,3851945337U,(unsigned short)16512); else 
                                                                    
#line 289 
                                                                    ath5k_hw_reg_write(ah,4135585145U,(unsigned short)16512);
      
#line 292 
      ath5k_hw_reg_write(ah,1961983U,(unsigned short)16512);
      
#line 295 
      ath5k_hw_reg_write(ah,447397440U,(unsigned short)16512);
      
#line 296 
      ath5k_hw_reg_write(ah,3188741460U,(unsigned short)16512);
      
#line 297 
      ath5k_hw_reg_write(ah,929799U,(unsigned short)16512);
      
#line 300 
      ath5k_hw_reg_write(ah,0U,(unsigned short)16516);
      
#line 301 
      usleep_range(1000UL,1500UL);
    }
    else ;
  }
  else ;
  
#line 305 
  ret = ath5k_hw_set_capabilities(ah);
  
#line 306 
  if (ret != 0) {
    int tmp_6;
    
#line 307 
    tmp_6 = net_ratelimit();
    
#line 307 
    if (tmp_6 != 0) 
#line 307 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","unable to get device capabilities\n"); else ;
    
#line 308 
    goto err;
  }
  else ;
  
#line 313 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 313 
                                                   tmp_7 = 64; else 
#line 313 
                                                                    tmp_7 = 128;
  
#line 312 
  common->keymax = (unsigned int)tmp_7;
  
#line 315 
  if (srev > 83U && ((unsigned int)ee->ee_version <= 20479U || (((int)ee->ee_misc5 >> 1) & 1) == 0)) 
    
#line 318 
    common->crypt_caps = (enum ath_crypt_caps)((unsigned int)common->crypt_caps | 1U); else ;
  
#line 320 
  if (srev > 111U) {
    u32 tmp_8;
    
#line 321 
    common->crypt_caps = (enum ath_crypt_caps)((unsigned int)common->crypt_caps | 2U);
    
#line 322 
    tmp_8 = ath5k_hw_reg_read(ah,(unsigned short)33056);
    
#line 322 
    ;
    
#line 322 
    ath5k_hw_reg_write(ah,tmp_8 | 4U,(unsigned short)33056);
  }
  else ;
  
#line 327 
  ath5k_hw_set_lladdr(ah,(u8 const *)(& zero_mac));
  
#line 330 
  memcpy((void *)(& common->curbssid),(void const *)(& ath_bcast_mac),6UL);
  
#line 331 
  ath5k_hw_set_bssid(ah);
  
#line 332 
  ath5k_hw_set_opmode(ah,ah->opmode);
  
#line 334 
  ath5k_hw_rfgain_opt_init(ah);
  
#line 336 
  ath5k_hw_init_nfcal_hist(ah);
  
#line 339 
  ath5k_hw_set_ledstate(ah,0U);
  
#line 341 
  __retres = 0;
  
#line 341 
  goto return_label;
  err: 
#line 342 
  ;
  
#line 343 
  __retres = ret;
  return_label: 
#line 343 
                return __retres;
}


#line 350  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/attach.c"
void ath5k_hw_deinit(struct ath5k_hw *ah)
{
  
#line 352 
  __set_bit(0L,(unsigned long volatile *)(& ah->status));
  
#line 354 
  kfree((void const *)ah->ah_rf_banks);
  
#line 356 
  ath5k_eeprom_detach(ah);
  
#line 357 
  return;
}


#line 248  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
void __might_fault(char const *, int);


#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
size_t strlen(char const *);


#line 65 
char *strcpy(char *, char const *);


#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
int strncmp(char const *, char const *, __kernel_size_t);


#line 355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh_2(spinlock_t *lock)
{
  
#line 357 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 358 
  return;
}


#line 383 
static void ldv_spin_lock_bh_73(spinlock_t *lock);


#line 387 
static void ldv_spin_lock_bh_85(spinlock_t *lock);


#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh_2(spinlock_t *lock)
{
  
#line 406 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 407 
  return;
}


#line 432 
static void ldv_spin_unlock_bh_74(spinlock_t *lock);


#line 436 
static void ldv_spin_unlock_bh_86(spinlock_t *lock);


#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/vmalloc.h"
void *vmalloc(unsigned long);


#line 83 
void vfree(void const *);


#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
static int ldv_seq_open_72(struct file *ldv_func_arg1, struct seq_operations const *ldv_func_arg2);


#line 118 
ssize_t seq_read(struct file *, char *, size_t, loff_t *);


#line 119 
loff_t seq_lseek(struct file *, loff_t, int);


#line 120 
int seq_release(struct inode *, struct file *);


#line 126 
int seq_printf(struct seq_file *, char const * , ...);


#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
unsigned long _copy_from_user(void *, void const *, unsigned int);


#line 662 
void copy_from_user_overflow(void);


#line 672 
void __copy_from_user_overflow(void);


#line 693  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
__inline static unsigned long copy_from_user(void *to, void const *from, unsigned long n)
{
  
#line 695 
  int sz = -1;
  
#line 697 
  __might_fault("./arch/x86/include/asm/uaccess.h",697);
  
#line 717 
  if ((long)(sz < 0) != 0L || (long)((unsigned long)sz >= n) != 0L) 
#line 718 
                                                                    n = _copy_from_user(to,from,(unsigned int)n);
  else 
    
#line 719 
    if (0 != 0) 
#line 720 
                copy_from_user_overflow(); else 
#line 722 
                                                __copy_from_user_overflow();
  
#line 724 
  return n;
}


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kmalloc_0(size_t size, gfp_t flags);


#line 2547  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
loff_t default_llseek(struct file *, loff_t, int);


#line 2659 
loff_t noop_llseek(struct file *, loff_t, int);


#line 2812 
int simple_open(struct inode *, struct file *);


#line 2843 
ssize_t simple_read_from_buffer(void *, size_t, loff_t *, void const *, size_t);


#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugfs.h"
static struct dentry *ldv_debugfs_create_file_75(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 58 
static struct dentry *ldv_debugfs_create_file_76(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 62 
static struct dentry *ldv_debugfs_create_file_77(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 66 
static struct dentry *ldv_debugfs_create_file_78(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 70 
static struct dentry *ldv_debugfs_create_file_79(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 74 
static struct dentry *ldv_debugfs_create_file_80(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 78 
static struct dentry *ldv_debugfs_create_file_81(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 82 
static struct dentry *ldv_debugfs_create_file_82(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 86 
static struct dentry *ldv_debugfs_create_file_83(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 90 
static struct dentry *ldv_debugfs_create_file_84(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 98 
struct dentry *debugfs_create_dir(char const *, struct dentry *);


#line 134 
struct dentry *debugfs_create_bool(char const *, umode_t, struct dentry *, u32 *);


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static unsigned int ath5k_debug;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static struct reg const regs[48U] = {{.name = "AR5K_CR", .addr = 8}, {.name = "AR5K_RXDP", .addr = 12}, {.name = "AR5K_CFG", .addr = 20}, {.name = "AR5K_IER", .addr = 36}, {.name = "AR5K_BCR", .addr = 40}, {.name = "AR5K_RTSD0", .addr = 40}, {.name = "AR5K_RTSD1", .addr = 44}, {.name = "AR5K_TXCFG", .addr = 48}, {.name = "AR5K_RXCFG", .addr = 52}, {.name = "AR5K_RXJLA", .addr = 56}, {.name = "AR5K_MIBC", .addr = 64}, {.name = "AR5K_TOPS", .addr = 68}, {.name = "AR5K_RXNOFRM", .addr = 72}, {.name = "AR5K_TXNOFRM", .addr = 76}, {.name = "AR5K_RPGTO", .addr = 80}, {.name = "AR5K_RFCNT", .addr = 84}, {.name = "AR5K_MISC", .addr = 88}, {.name = "AR5K_QCUDCU_CLKGT", .addr = 92}, {.name = "AR5K_ISR", .addr = 28}, {.name = "AR5K_PISR", .addr = 128}, {.name = "AR5K_SISR0", .addr = 132}, {.name = "AR5K_SISR1", .addr = 136}, {.name = "AR5K_SISR2", .addr = 140}, {.name = "AR5K_SISR3", .addr = 144}, {.name = "AR5K_SISR4", .addr = 148}, {.name = "AR5K_IMR", .addr = 32}, {.name = "AR5K_PIMR", .addr = 160}, {.name = "AR5K_SIMR0", .addr = 164}, {.name = "AR5K_SIMR1", .addr = 168}, {.name = "AR5K_SIMR2", .addr = 172}, {.name = "AR5K_SIMR3", .addr = 176}, {.name = "AR5K_SIMR4", .addr = 180}, {.name = "AR5K_DCM_ADDR", .addr = 1024}, {.name = "AR5K_DCCFG", .addr = 1056}, {.name = "AR5K_CCFG", .addr = 1536}, {.name = "AR5K_CPC0", .addr = 1552}, {.name = "AR5K_CPC1", .addr = 1556}, {.name = "AR5K_CPC2", .addr = 1560}, {.name = "AR5K_CPC3", .addr = 1564}, {.name = "AR5K_CPCOVF", .addr = 1568}, {.name = "AR5K_RESET_CTL", .addr = 16384}, {.name = "AR5K_SLEEP_CTL", .addr = 16388}, {.name = "AR5K_INTPEND", .addr = 16392}, {.name = "AR5K_SFR", .addr = 16396}, {.name = "AR5K_PCICFG", .addr = 16400}, {.name = "AR5K_GPIOCR", .addr = 16404}, {.name = "AR5K_GPIODO", .addr = 16408}, {.name = "AR5K_SREV", .addr = 16416}};

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static void *reg_start(struct seq_file *seq, loff_t *pos)
{
  void *tmp;
  
#line 142 
  if ((unsigned long long)*pos <= 47ULL) 
#line 142 
                                         tmp = (void *)(& regs[*pos]); else 
                                                                    
#line 142 
                                                                    tmp = (void *)0;
  
#line 142 
  return tmp;
}


#line 145  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static void reg_stop(struct seq_file *seq, void *p)
{
  
#line 147 
  return;
}


#line 150  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static void *reg_next(struct seq_file *seq, void *p, loff_t *pos)
{
  void *tmp;
  
#line 152 
  *pos += 1LL;
  
#line 153 
  if ((unsigned long long)*pos <= 47ULL) 
#line 153 
                                         tmp = (void *)(& regs[*pos]); else 
                                                                    
#line 153 
                                                                    tmp = (void *)0;
  
#line 153 
  return tmp;
}


#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static int reg_show(struct seq_file *seq, void *p)
{
  int __retres;
  u32 tmp;
  
#line 158 
  struct ath5k_hw *ah = (struct ath5k_hw *)seq->private;
  
#line 159 
  struct reg *r = (struct reg *)p;
  
#line 160 
  tmp = ath5k_hw_reg_read(ah,(unsigned short)((int)((unsigned short)r->addr)));
  
#line 160 
  ;
  
#line 160 
  ;
  
#line 160 
  seq_printf(seq,"%-25s0x%08x\n",r->name,tmp);
  
#line 162 
  __retres = 0;
  
#line 162 
  return __retres;
}


#line 165  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static struct seq_operations const register_seq_ops = {.start = & reg_start, .stop = & reg_stop, .next = & reg_next, .show = & reg_show};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static int open_file_registers(struct inode *inode, struct file *file)
{
  struct seq_file *s;
  int res;
  
#line 176 
  res = ldv_seq_open_72(file,& register_seq_ops);
  
#line 177 
  if (res == 0) {
    
#line 178 
    s = (struct seq_file *)file->private_data;
    
#line 179 
    s->private = inode->i_private;
  }
  else ;
  
#line 181 
  return res;
}


#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static struct file_operations const fops_registers = {.owner = & __this_module, .llseek = & seq_lseek, .read = & seq_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & open_file_registers, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & seq_release, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static ssize_t read_file_beacon(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  char buf[500U];
  unsigned int v;
  u64 tsf;
  unsigned int tmp;
  int tmp_0;
  int tmp_2;
  u32 tmp_1;
  int tmp_5;
  u32 tmp_4;
  unsigned int tmp_3;
  unsigned int tmp_6;
  int tmp_7;
  unsigned int tmp_8;
  int tmp_9;
  unsigned int tmp_10;
  int tmp_11;
  unsigned int tmp_12;
  int tmp_13;
  int tmp_14;
  ssize_t tmp_15;
  
#line 198 
  struct ath5k_hw *ah = (struct ath5k_hw *)file->private_data;
  
#line 200 
  unsigned int len = 0U;
  
#line 204 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 204 
                                                   tmp = 32804U; else 
                                                                   
#line 204 
                                                                   tmp = 32800U;
  
#line 204 
  ;
  
#line 204 
  v = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp));
  
#line 205 
  tmp_0 = snprintf((char *)(& buf) + len,500UL - (unsigned long)len,"%-24s0x%08x\tintval: %d\tTIM: 0x%x\n",(char *)"AR5K_BEACON",v,v & 65535U,(v >> 16) & 127U);
  
#line 208 
  len = (unsigned int)tmp_0 + len;
  
#line 211 
  tmp_1 = ath5k_hw_reg_read(ah,(unsigned short)32896);
  
#line 210 
  tmp_2 = snprintf((char *)(& buf) + len,500UL - (unsigned long)len,"%-24s0x%08x\n",(char *)"AR5K_LAST_TSTP",tmp_1);
  
#line 211 
  len = (unsigned int)tmp_2 + len;
  
#line 214 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 214 
                                                   tmp_3 = 32928U; else 
                                                                    
#line 214 
                                                                    tmp_3 = 32920U;
  
#line 214 
  ;
  
#line 214 
  tmp_4 = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_3));
  
#line 213 
  tmp_5 = snprintf((char *)(& buf) + len,500UL - (unsigned long)len,"%-24s0x%08x\n\n",(char *)"AR5K_BEACON_CNT",tmp_4);
  
#line 214 
  len = (unsigned int)tmp_5 + len;
  
#line 216 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 216 
                                                   tmp_6 = 32812U; else 
                                                                    
#line 216 
                                                                    tmp_6 = 32808U;
  
#line 216 
  ;
  
#line 216 
  v = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_6));
  
#line 217 
  tmp_7 = snprintf((char *)(& buf) + len,500UL - (unsigned long)len,"%-24s0x%08x\tTU: %08x\n",(char *)"AR5K_TIMER0 (TBTT)",v,v);
  
#line 218 
  len = (unsigned int)tmp_7 + len;
  
#line 220 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 220 
                                                   tmp_8 = 32816U; else 
                                                                    
#line 220 
                                                                    tmp_8 = 32812U;
  
#line 220 
  ;
  
#line 220 
  v = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_8));
  
#line 221 
  tmp_9 = snprintf((char *)(& buf) + len,500UL - (unsigned long)len,"%-24s0x%08x\tTU: %08x\n",(char *)"AR5K_TIMER1 (DMA)",v,v >> 3);
  
#line 222 
  len = (unsigned int)tmp_9 + len;
  
#line 224 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 224 
                                                   tmp_10 = 32820U; else 
                                                                    
#line 224 
                                                                    tmp_10 = 32816U;
  
#line 224 
  ;
  
#line 224 
  v = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_10));
  
#line 225 
  tmp_11 = snprintf((char *)(& buf) + len,500UL - (unsigned long)len,"%-24s0x%08x\tTU: %08x\n",(char *)"AR5K_TIMER2 (SWBA)",v,v >> 3);
  
#line 226 
  len = (unsigned int)tmp_11 + len;
  
#line 228 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 228 
                                                   tmp_12 = 32824U; else 
                                                                    
#line 228 
                                                                    tmp_12 = 32820U;
  
#line 228 
  ;
  
#line 228 
  v = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_12));
  
#line 229 
  tmp_13 = snprintf((char *)(& buf) + len,500UL - (unsigned long)len,"%-24s0x%08x\tTU: %08x\n",(char *)"AR5K_TIMER3 (ATIM)",v,v);
  
#line 230 
  len = (unsigned int)tmp_13 + len;
  
#line 232 
  tsf = ath5k_hw_get_tsf64(ah);
  
#line 233 
  tmp_14 = snprintf((char *)(& buf) + len,500UL - (unsigned long)len,"TSF\t\t0x%016llx\tTU: %08x\n",tsf,(unsigned int)(tsf >> 10));
  
#line 235 
  len = (unsigned int)tmp_14 + len;
  
#line 237 
  if (len > 500U) 
#line 238 
                  len = 500U; else ;
  
#line 240 
  tmp_15 = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buf),(unsigned long)len);
  
#line 240 
  return tmp_15;
}


#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static ssize_t write_file_beacon(struct file *file, char const *userbuf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char buf[20U];
  size_t tmp_0;
  unsigned long tmp_1;
  int tmp_9;
  
#line 247 
  struct ath5k_hw *ah = (struct ath5k_hw *)file->private_data;
  {
    size_t tmp;
    
#line 250 
    size_t __min1 = count;
    
#line 250 
    size_t __min2 = 19UL;
    
#line 250 
    if (__min1 < __min2) 
#line 250 
                         tmp = __min1; else 
#line 250 
                                            tmp = __min2;
    
#line 250 
    tmp_0 = tmp;
  }
  
#line 250 
  count = tmp_0;
  
#line 251 
  tmp_1 = copy_from_user((void *)(& buf),(void const *)userbuf,count);
  
#line 251 
  if (tmp_1 != 0UL) {
    
#line 252 
    __retres = -14L;
    
#line 252 
    goto return_label;
  }
  else ;
  
#line 254 
  buf[count] = (char)0;
  
#line 255 
  tmp_9 = strncmp((char const *)(& buf),"disable",7UL);
  
#line 255 
  if (tmp_9 == 0) {
    unsigned int tmp_2;
    u32 tmp_4;
    unsigned int tmp_3;
    
#line 256 
    if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 256 
                                                     tmp_2 = 32804U; else 
                                                                    
#line 256 
                                                                    tmp_2 = 32800U;
    
#line 256 
    if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 256 
                                                     tmp_3 = 32804U; else 
                                                                    
#line 256 
                                                                    tmp_3 = 32800U;
    
#line 256 
    ;
    
#line 256 
    tmp_4 = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_3));
    
#line 256 
    ;
    
#line 256 
    ath5k_hw_reg_write(ah,tmp_4 & 4286578687U,(unsigned short)((int)tmp_2));
    
#line 257 
    printk("\001");
  }
  else {
    int tmp_8;
    
#line 258 
    tmp_8 = strncmp((char const *)(& buf),"enable",6UL);
    
#line 258 
    if (tmp_8 == 0) {
      unsigned int tmp_5;
      u32 tmp_7;
      unsigned int tmp_6;
      
#line 259 
      if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 259 
                                                       tmp_5 = 32804U; else 
                                                                    
#line 259 
                                                                    tmp_5 = 32800U;
      
#line 259 
      if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 259 
                                                       tmp_6 = 32804U; else 
                                                                    
#line 259 
                                                                    tmp_6 = 32800U;
      
#line 259 
      ;
      
#line 259 
      tmp_7 = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_6));
      
#line 259 
      ;
      
#line 259 
      ath5k_hw_reg_write(ah,tmp_7 | 8388608U,(unsigned short)((int)tmp_5));
      
#line 260 
      printk("\001");
    }
    else ;
  }
  
#line 262 
  __retres = (long)count;
  return_label: 
#line 262 
                return __retres;
}


#line 265  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static struct file_operations const fops_beacon = {.owner = & __this_module, .llseek = & default_llseek, .read = & read_file_beacon, .write = & write_file_beacon, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static ssize_t write_file_reset(struct file *file, char const *userbuf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  
#line 280 
  struct ath5k_hw *ah = (struct ath5k_hw *)file->private_data;
  
#line 281 
  if ((long)((ah->debug.level & 1U) != 0U) != 0L) {
    int tmp;
    
#line 281 
    tmp = net_ratelimit();
    
#line 281 
    if ((long)(tmp != 0) != 0L) 
#line 281 
                                _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","write_file_reset",281); else ;
  }
  else ;
  
#line 282 
  ieee80211_queue_work(ah->hw,& ah->reset_work);
  
#line 283 
  __retres = (long)count;
  
#line 283 
  return __retres;
}


#line 286  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static struct file_operations const fops_reset = {.owner = & __this_module, .llseek = & noop_llseek, .read = (ssize_t (*)(struct file *, char *, size_t , loff_t *))0, .write = & write_file_reset, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 300  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static struct __anonstruct_dbg_info_5410 const dbg_info[13U] = {{.level = ATH5K_DEBUG_RESET, .name = "reset", .desc = "reset and initialization"}, {.level = ATH5K_DEBUG_INTR, .name = "intr", .desc = "interrupt handling"}, {.level = ATH5K_DEBUG_MODE, .name = "mode", .desc = "mode init/setup"}, {.level = ATH5K_DEBUG_XMIT, .name = "xmit", .desc = "basic xmit operation"}, {.level = ATH5K_DEBUG_BEACON, .name = "beacon", .desc = "beacon handling"}, {.level = ATH5K_DEBUG_CALIBRATE, .name = "calib", .desc = "periodic calibration"}, {.level = ATH5K_DEBUG_TXPOWER, .name = "txpower", .desc = "transmit power setting"}, {.level = ATH5K_DEBUG_LED, .name = "led", .desc = "LED management"}, {.level = ATH5K_DEBUG_DUMPBANDS, .name = "dumpbands", .desc = "dump bands"}, {.level = ATH5K_DEBUG_DMA, .name = "dma", .desc = "dma start/stop"}, {.level = ATH5K_DEBUG_ANI, .name = "ani", .desc = "adaptive noise immunity"}, {.level = ATH5K_DEBUG_DESC, .name = "desc", .desc = "descriptor chains"}, {.level = ATH5K_DEBUG_ANY, .name = "all", .desc = "show all debug levels"}};

#line 316  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static ssize_t read_file_debug(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  char buf[700U];
  unsigned int i;
  int tmp;
  int tmp_1;
  int tmp_0;
  int tmp_3;
  int tmp_2;
  ssize_t tmp_4;
  
#line 319 
  struct ath5k_hw *ah = (struct ath5k_hw *)file->private_data;
  
#line 321 
  unsigned int len = 0U;
  
#line 324 
  tmp = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"DEBUG LEVEL: 0x%08x\n\n",ah->debug.level);
  
#line 325 
  len = (unsigned int)tmp + len;
  
#line 327 
  i = 0U;
  
#line 327 
  goto ldv_51058;
  ldv_51057: 
#line 328 
  ;
  
#line 328 
  ;
  
#line 328 
  ;
  
#line 329 
  if ((ah->debug.level & (unsigned int)dbg_info[i].level) != 0U) 
#line 329 
                                                                 tmp_0 = 43; else 
                                                                    
#line 329 
                                                                    tmp_0 = 32;
  
#line 328 
  ;
  
#line 328 
  tmp_1 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"%10s %c 0x%08x - %s\n",dbg_info[i].name,tmp_0,(unsigned int)dbg_info[i].level,dbg_info[i].desc);
  
#line 331 
  len = (unsigned int)tmp_1 + len;
  
#line 327 
  i += 1U;
  ldv_51058: 
#line 328 
  ;
  
#line 327 
  if (i <= 11U) 
#line 329 
                goto ldv_51057; else 
#line 332 
                                     goto ldv_51059;
  ldv_51059: 
#line 333 
  ;
  
#line 333 
  ;
  
#line 333 
  ;
  
#line 334 
  if (ah->debug.level == (unsigned int)dbg_info[i].level) 
#line 334 
                                                          tmp_2 = 43; else 
                                                                    
#line 334 
                                                                    tmp_2 = 32;
  
#line 333 
  ;
  
#line 333 
  tmp_3 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"%10s %c 0x%08x - %s\n",dbg_info[i].name,tmp_2,(unsigned int)dbg_info[i].level,dbg_info[i].desc);
  
#line 336 
  len = (unsigned int)tmp_3 + len;
  
#line 338 
  if (len > 700U) 
#line 339 
                  len = 700U; else ;
  
#line 341 
  tmp_4 = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buf),(unsigned long)len);
  
#line 341 
  return tmp_4;
}


#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static ssize_t write_file_debug(struct file *file, char const *userbuf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  unsigned int i;
  char buf[20U];
  size_t tmp_0;
  unsigned long tmp_1;
  int tmp_3;
  size_t tmp_2;
  
#line 348 
  struct ath5k_hw *ah = (struct ath5k_hw *)file->private_data;
  {
    size_t tmp;
    
#line 352 
    size_t __min1 = count;
    
#line 352 
    size_t __min2 = 19UL;
    
#line 352 
    if (__min1 < __min2) 
#line 352 
                         tmp = __min1; else 
#line 352 
                                            tmp = __min2;
    
#line 352 
    tmp_0 = tmp;
  }
  
#line 352 
  count = tmp_0;
  
#line 353 
  tmp_1 = copy_from_user((void *)(& buf),(void const *)userbuf,count);
  
#line 353 
  if (tmp_1 != 0UL) {
    
#line 354 
    __retres = -14L;
    
#line 354 
    goto return_label;
  }
  else ;
  
#line 356 
  buf[count] = (char)0;
  
#line 357 
  i = 0U;
  
#line 357 
  goto ldv_51077;
  ldv_51076: 
#line 358 
  ;
  
#line 358 
  tmp_2 = strlen(dbg_info[i].name);
  
#line 358 
  ;
  
#line 358 
  tmp_3 = strncmp((char const *)(& buf),dbg_info[i].name,tmp_2);
  
#line 358 
  if (tmp_3 == 0) {
    
#line 360 
    ah->debug.level ^= (unsigned int)dbg_info[i].level;
    
#line 361 
    goto ldv_51075;
  }
  else ;
  
#line 357 
  i += 1U;
  ldv_51077: 
#line 358 
  ;
  
#line 357 
  if (i <= 12U) 
#line 359 
                goto ldv_51076; else 
#line 362 
                                     goto ldv_51075;
  ldv_51075: 
#line 363 
  ;
  
#line 364 
  __retres = (long)count;
  return_label: 
#line 364 
                return __retres;
}


#line 367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static struct file_operations const fops_debug = {.owner = & __this_module, .llseek = & default_llseek, .read = & read_file_debug, .write = & write_file_debug, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 378  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static ssize_t read_file_antenna(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  char buf[700U];
  unsigned int i;
  unsigned int v;
  int tmp;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  int tmp_5;
  int tmp_6;
  int tmp_7;
  int tmp_8;
  int tmp_9;
  int tmp_10;
  int tmp_11;
  int tmp_12;
  int tmp_13;
  int tmp_14;
  ssize_t tmp_15;
  
#line 381 
  struct ath5k_hw *ah = (struct ath5k_hw *)file->private_data;
  
#line 383 
  unsigned int len = 0U;
  
#line 387 
  tmp = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"antenna mode\t%d\n",(int)ah->ah_ant_mode);
  
#line 388 
  len = (unsigned int)tmp + len;
  
#line 389 
  tmp_0 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"default antenna\t%d\n",(int)ah->ah_def_ant);
  
#line 390 
  len = (unsigned int)tmp_0 + len;
  
#line 391 
  tmp_1 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"tx antenna\t%d\n",(int)ah->ah_tx_ant);
  
#line 392 
  len = (unsigned int)tmp_1 + len;
  
#line 394 
  tmp_2 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"\nANTENNA\t\tRX\tTX\n");
  
#line 394 
  len = (unsigned int)tmp_2 + len;
  
#line 395 
  i = 1U;
  
#line 395 
  goto ldv_51094;
  ldv_51093: 
#line 396 
  ;
  
#line 396 
  tmp_3 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"[antenna %d]\t%d\t%d\n",i,ah->stats.antenna_rx[i],ah->stats.antenna_tx[i]);
  
#line 398 
  len = (unsigned int)tmp_3 + len;
  
#line 395 
  i += 1U;
  ldv_51094: 
#line 396 
  ;
  
#line 395 
  if (i <= 4U) 
#line 397 
               goto ldv_51093; else 
#line 400 
                                    goto ldv_51095;
  ldv_51095: 
#line 401 
  ;
  
#line 400 
  tmp_4 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"[invalid]\t%d\t%d\n",ah->stats.antenna_rx[0],ah->stats.antenna_tx[0]);
  
#line 401 
  len = (unsigned int)tmp_4 + len;
  
#line 403 
  v = ath5k_hw_reg_read(ah,(unsigned short)32856);
  
#line 404 
  tmp_5 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"\nAR5K_DEFAULT_ANTENNA\t0x%08x\n",v);
  
#line 405 
  len = (unsigned int)tmp_5 + len;
  
#line 407 
  v = ath5k_hw_reg_read(ah,(unsigned short)32772);
  
#line 408 
  tmp_6 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"AR5K_STA_ID1_DEFAULT_ANTENNA\t%d\n",(v & 2097152U) != 0U);
  
#line 410 
  len = (unsigned int)tmp_6 + len;
  
#line 411 
  tmp_7 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"AR5K_STA_ID1_DESC_ANTENNA\t%d\n",(v & 4194304U) != 0U);
  
#line 413 
  len = (unsigned int)tmp_7 + len;
  
#line 414 
  tmp_8 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"AR5K_STA_ID1_RTS_DEF_ANTENNA\t%d\n",(v & 8388608U) != 0U);
  
#line 416 
  len = (unsigned int)tmp_8 + len;
  
#line 417 
  tmp_9 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"AR5K_STA_ID1_SELFGEN_DEF_ANT\t%d\n",(v & 67108864U) != 0U);
  
#line 419 
  len = (unsigned int)tmp_9 + len;
  
#line 421 
  v = ath5k_hw_reg_read(ah,(unsigned short)39008);
  
#line 422 
  tmp_10 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"\nAR5K_PHY_AGCCTL_OFDM_DIV_DIS\t%d\n",(v & 8U) != 0U);
  
#line 424 
  len = (unsigned int)tmp_10 + len;
  
#line 426 
  v = ath5k_hw_reg_read(ah,(unsigned short)39280);
  
#line 427 
  tmp_11 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"AR5K_PHY_RESTART_DIV_GC\t\t%x\n",(v >> 18) & 7U);
  
#line 429 
  len = (unsigned int)tmp_11 + len;
  
#line 431 
  v = ath5k_hw_reg_read(ah,(unsigned short)41480);
  
#line 432 
  tmp_12 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"AR5K_PHY_FAST_ANT_DIV_EN\t%d\n",(v & 8192U) != 0U);
  
#line 434 
  len = (unsigned int)tmp_12 + len;
  
#line 436 
  v = ath5k_hw_reg_read(ah,(unsigned short)39264);
  
#line 437 
  tmp_13 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"\nAR5K_PHY_ANT_SWITCH_TABLE_0\t0x%08x\n",v);
  
#line 438 
  len = (unsigned int)tmp_13 + len;
  
#line 439 
  v = ath5k_hw_reg_read(ah,(unsigned short)39268);
  
#line 440 
  tmp_14 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"AR5K_PHY_ANT_SWITCH_TABLE_1\t0x%08x\n",v);
  
#line 441 
  len = (unsigned int)tmp_14 + len;
  
#line 443 
  if (len > 700U) 
#line 444 
                  len = 700U; else ;
  
#line 446 
  tmp_15 = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buf),(unsigned long)len);
  
#line 446 
  return tmp_15;
}


#line 449  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static ssize_t write_file_antenna(struct file *file, char const *userbuf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  unsigned int i;
  char buf[20U];
  size_t tmp_0;
  unsigned long tmp_1;
  int tmp_5;
  
#line 453 
  struct ath5k_hw *ah = (struct ath5k_hw *)file->private_data;
  {
    size_t tmp;
    
#line 457 
    size_t __min1 = count;
    
#line 457 
    size_t __min2 = 19UL;
    
#line 457 
    if (__min1 < __min2) 
#line 457 
                         tmp = __min1; else 
#line 457 
                                            tmp = __min2;
    
#line 457 
    tmp_0 = tmp;
  }
  
#line 457 
  count = tmp_0;
  
#line 458 
  tmp_1 = copy_from_user((void *)(& buf),(void const *)userbuf,count);
  
#line 458 
  if (tmp_1 != 0UL) {
    
#line 459 
    __retres = -14L;
    
#line 459 
    goto return_label;
  }
  else ;
  
#line 461 
  buf[count] = (char)0;
  
#line 462 
  tmp_5 = strncmp((char const *)(& buf),"diversity",9UL);
  
#line 462 
  if (tmp_5 == 0) {
    
#line 463 
    ath5k_hw_set_antenna_mode(ah,(unsigned char)0);
    
#line 464 
    printk("\001");
  }
  else {
    int tmp_4;
    
#line 465 
    tmp_4 = strncmp((char const *)(& buf),"fixed-a",7UL);
    
#line 465 
    if (tmp_4 == 0) {
      
#line 466 
      ath5k_hw_set_antenna_mode(ah,(unsigned char)1);
      
#line 467 
      printk("\001");
    }
    else {
      int tmp_3;
      
#line 468 
      tmp_3 = strncmp((char const *)(& buf),"fixed-b",7UL);
      
#line 468 
      if (tmp_3 == 0) {
        
#line 469 
        ath5k_hw_set_antenna_mode(ah,(unsigned char)2);
        
#line 470 
        printk("\001");
      }
      else {
        int tmp_2;
        
#line 471 
        tmp_2 = strncmp((char const *)(& buf),"clear",5UL);
        
#line 471 
        if (tmp_2 == 0) {
          
#line 472 
          i = 0U;
          
#line 472 
          goto ldv_51112;
          ldv_51111: 
#line 473 
          ;
          
#line 473 
          ah->stats.antenna_rx[i] = 0U;
          
#line 474 
          ah->stats.antenna_tx[i] = 0U;
          
#line 472 
          i += 1U;
          ldv_51112: 
#line 473 
          ;
          
#line 472 
          if (i <= 4U) 
#line 474 
                       goto ldv_51111; else 
#line 477 
                                            goto ldv_51113;
          ldv_51113: 
#line 478 
          ;
          
#line 476 
          printk("\001");
        }
        else ;
      }
    }
  }
  
#line 478 
  __retres = (long)count;
  return_label: 
#line 478 
                return __retres;
}


#line 481  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static struct file_operations const fops_antenna = {.owner = & __this_module, .llseek = & default_llseek, .read = & read_file_antenna, .write = & write_file_antenna, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 491  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static ssize_t read_file_misc(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  char buf[700U];
  int tmp_0;
  int tmp_1;
  int tmp_14;
  char const *tmp_13;
  ssize_t tmp_15;
  
#line 494 
  struct ath5k_hw *ah = (struct ath5k_hw *)file->private_data;
  
#line 496 
  unsigned int len = 0U;
  
#line 497 
  u32 filt = ath5k_hw_get_rx_filter(ah);
  
#line 499 
  tmp_0 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"bssid-mask: %pM\n",(u8 *)(& ah->bssidmask));
  
#line 500 
  len = (unsigned int)tmp_0 + len;
  
#line 501 
  tmp_1 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"filter-flags: 0x%x ",filt);
  
#line 502 
  len = (unsigned int)tmp_1 + len;
  
#line 503 
  if ((filt & 1U) != 0U) {
    int tmp_2;
    
#line 504 
    tmp_2 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len," UCAST");
    
#line 504 
    len = (unsigned int)tmp_2 + len;
  }
  else ;
  
#line 505 
  if ((filt & 2U) != 0U) {
    int tmp_3;
    
#line 506 
    tmp_3 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len," MCAST");
    
#line 506 
    len = (unsigned int)tmp_3 + len;
  }
  else ;
  
#line 507 
  if ((filt & 4U) != 0U) {
    int tmp_4;
    
#line 508 
    tmp_4 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len," BCAST");
    
#line 508 
    len = (unsigned int)tmp_4 + len;
  }
  else ;
  
#line 509 
  if ((filt & 8U) != 0U) {
    int tmp_5;
    
#line 510 
    tmp_5 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len," CONTROL");
    
#line 510 
    len = (unsigned int)tmp_5 + len;
  }
  else ;
  
#line 511 
  if ((filt & 16U) != 0U) {
    int tmp_6;
    
#line 512 
    tmp_6 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len," BEACON");
    
#line 512 
    len = (unsigned int)tmp_6 + len;
  }
  else ;
  
#line 513 
  if ((filt & 32U) != 0U) {
    int tmp_7;
    
#line 514 
    tmp_7 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len," PROM");
    
#line 514 
    len = (unsigned int)tmp_7 + len;
  }
  else ;
  
#line 515 
  if ((filt & 64U) != 0U) {
    int tmp_8;
    
#line 516 
    tmp_8 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len," XRPOLL");
    
#line 516 
    len = (unsigned int)tmp_8 + len;
  }
  else ;
  
#line 517 
  if ((filt & 128U) != 0U) {
    int tmp_9;
    
#line 518 
    tmp_9 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len," PROBEREQ");
    
#line 518 
    len = (unsigned int)tmp_9 + len;
  }
  else ;
  
#line 519 
  if ((filt & 256U) != 0U) {
    int tmp_10;
    
#line 520 
    tmp_10 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len," PHYERR-5212");
    
#line 520 
    len = (unsigned int)tmp_10 + len;
  }
  else ;
  
#line 521 
  if ((filt & 512U) != 0U) {
    int tmp_11;
    
#line 522 
    tmp_11 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len," RADARERR-5212");
    
#line 522 
    len = (unsigned int)tmp_11 + len;
  }
  else ;
  
#line 523 
  if ((filt & 64U) != 0U) 
#line 524 
                          snprintf((char *)(& buf) + len,700UL - (unsigned long)len," PHYERR-5211"); else ;
  
#line 525 
  if ((filt & 128U) != 0U) {
    int tmp_12;
    
#line 526 
    tmp_12 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len," RADARERR-5211");
    
#line 526 
    len = (unsigned int)tmp_12 + len;
  }
  else ;
  
#line 528 
  ;
  
#line 528 
  tmp_13 = ath_opmode_to_string(ah->opmode);
  
#line 528 
  tmp_14 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"\nopmode: %s (%d)\n",tmp_13,(unsigned int)ah->opmode);
  
#line 529 
  len = (unsigned int)tmp_14 + len;
  
#line 531 
  if (len > 700U) 
#line 532 
                  len = 700U; else ;
  
#line 534 
  tmp_15 = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buf),(unsigned long)len);
  
#line 534 
  return tmp_15;
}


#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static struct file_operations const fops_misc = {.owner = & __this_module, .llseek = (loff_t (*)(struct file *, loff_t , int ))0, .read = & read_file_misc, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static ssize_t read_file_frameerrors(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  char buf[700U];
  int i;
  int tmp;
  int tmp_1;
  unsigned int tmp_0;
  int tmp_3;
  unsigned int tmp_2;
  int tmp_6;
  unsigned int tmp_5;
  int tmp_8;
  unsigned int tmp_7;
  int tmp_10;
  unsigned int tmp_9;
  int tmp_12;
  unsigned int tmp_11;
  int tmp_14;
  unsigned int tmp_13;
  int tmp_15;
  int tmp_16;
  int tmp_17;
  int tmp_19;
  unsigned int tmp_18;
  int tmp_21;
  unsigned int tmp_20;
  int tmp_23;
  unsigned int tmp_22;
  int tmp_24;
  int tmp_25;
  ssize_t tmp_26;
  
#line 549 
  struct ath5k_hw *ah = (struct ath5k_hw *)file->private_data;
  
#line 550 
  struct ath5k_statistics *st = & ah->stats;
  
#line 552 
  unsigned int len = 0U;
  
#line 555 
  tmp = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"RX\n---------------------\n");
  
#line 556 
  len = (unsigned int)tmp + len;
  
#line 558 
  if (st->rx_all_count != 0U) 
#line 558 
                              tmp_0 = (st->rxerr_crc * 100U) / st->rx_all_count; else 
                                                                    
#line 558 
                                                                    tmp_0 = 0U;
  
#line 557 
  ;
  
#line 557 
  tmp_1 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"CRC\t%u\t(%u%%)\n",st->rxerr_crc,tmp_0);
  
#line 560 
  len = (unsigned int)tmp_1 + len;
  
#line 562 
  if (st->rx_all_count != 0U) 
#line 562 
                              tmp_2 = (st->rxerr_phy * 100U) / st->rx_all_count; else 
                                                                    
#line 562 
                                                                    tmp_2 = 0U;
  
#line 561 
  ;
  
#line 561 
  tmp_3 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"PHY\t%u\t(%u%%)\n",st->rxerr_phy,tmp_2);
  
#line 564 
  len = (unsigned int)tmp_3 + len;
  
#line 565 
  i = 0;
  
#line 565 
  goto ldv_51138;
  ldv_51137: 
#line 566 
  ;
  
#line 566 
  if (st->rxerr_phy_code[i] != 0U) {
    int tmp_4;
    
#line 567 
    tmp_4 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len," phy_err[%u]\t%u\n",i,st->rxerr_phy_code[i]);
    
#line 569 
    len = (unsigned int)tmp_4 + len;
  }
  else ;
  
#line 565 
  i += 1;
  ldv_51138: 
#line 566 
  ;
  
#line 565 
  if (i <= 31) 
#line 567 
               goto ldv_51137; else 
#line 570 
                                    goto ldv_51139;
  ldv_51139: 
#line 571 
  ;
  
#line 573 
  if (st->rx_all_count != 0U) 
#line 573 
                              tmp_5 = (st->rxerr_fifo * 100U) / st->rx_all_count; else 
                                                                    
#line 573 
                                                                    tmp_5 = 0U;
  
#line 572 
  ;
  
#line 572 
  tmp_6 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"FIFO\t%u\t(%u%%)\n",st->rxerr_fifo,tmp_5);
  
#line 575 
  len = (unsigned int)tmp_6 + len;
  
#line 577 
  if (st->rx_all_count != 0U) 
#line 577 
                              tmp_7 = (st->rxerr_decrypt * 100U) / st->rx_all_count; else 
                                                                    
#line 577 
                                                                    tmp_7 = 0U;
  
#line 576 
  ;
  
#line 576 
  tmp_8 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"decrypt\t%u\t(%u%%)\n",st->rxerr_decrypt,tmp_7);
  
#line 579 
  len = (unsigned int)tmp_8 + len;
  
#line 581 
  if (st->rx_all_count != 0U) 
#line 581 
                              tmp_9 = (st->rxerr_mic * 100U) / st->rx_all_count; else 
                                                                    
#line 581 
                                                                    tmp_9 = 0U;
  
#line 580 
  ;
  
#line 580 
  tmp_10 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"MIC\t%u\t(%u%%)\n",st->rxerr_mic,tmp_9);
  
#line 583 
  len = (unsigned int)tmp_10 + len;
  
#line 585 
  if (st->rx_all_count != 0U) 
#line 585 
                              tmp_11 = (st->rxerr_proc * 100U) / st->rx_all_count; else 
                                                                    
#line 585 
                                                                    tmp_11 = 0U;
  
#line 584 
  ;
  
#line 584 
  tmp_12 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"process\t%u\t(%u%%)\n",st->rxerr_proc,tmp_11);
  
#line 587 
  len = (unsigned int)tmp_12 + len;
  
#line 589 
  if (st->rx_all_count != 0U) 
#line 589 
                              tmp_13 = (st->rxerr_jumbo * 100U) / st->rx_all_count; else 
                                                                    
#line 589 
                                                                    tmp_13 = 0U;
  
#line 588 
  ;
  
#line 588 
  tmp_14 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"jumbo\t%u\t(%u%%)\n",st->rxerr_jumbo,tmp_13);
  
#line 591 
  len = (unsigned int)tmp_14 + len;
  
#line 592 
  tmp_15 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"[RX all\t%u]\n",st->rx_all_count);
  
#line 593 
  len = (unsigned int)tmp_15 + len;
  
#line 594 
  tmp_16 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"RX-all-bytes\t%u\n",st->rx_bytes_count);
  
#line 595 
  len = (unsigned int)tmp_16 + len;
  
#line 597 
  tmp_17 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"\nTX\n---------------------\n");
  
#line 598 
  len = (unsigned int)tmp_17 + len;
  
#line 600 
  if (st->tx_all_count != 0U) 
#line 600 
                              tmp_18 = (st->txerr_retry * 100U) / st->tx_all_count; else 
                                                                    
#line 600 
                                                                    tmp_18 = 0U;
  
#line 599 
  ;
  
#line 599 
  tmp_19 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"retry\t%u\t(%u%%)\n",st->txerr_retry,tmp_18);
  
#line 602 
  len = (unsigned int)tmp_19 + len;
  
#line 604 
  if (st->tx_all_count != 0U) 
#line 604 
                              tmp_20 = (st->txerr_fifo * 100U) / st->tx_all_count; else 
                                                                    
#line 604 
                                                                    tmp_20 = 0U;
  
#line 603 
  ;
  
#line 603 
  tmp_21 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"FIFO\t%u\t(%u%%)\n",st->txerr_fifo,tmp_20);
  
#line 606 
  len = (unsigned int)tmp_21 + len;
  
#line 608 
  if (st->tx_all_count != 0U) 
#line 608 
                              tmp_22 = (st->txerr_filt * 100U) / st->tx_all_count; else 
                                                                    
#line 608 
                                                                    tmp_22 = 0U;
  
#line 607 
  ;
  
#line 607 
  tmp_23 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"filter\t%u\t(%u%%)\n",st->txerr_filt,tmp_22);
  
#line 610 
  len = (unsigned int)tmp_23 + len;
  
#line 611 
  tmp_24 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"[TX all\t%u]\n",st->tx_all_count);
  
#line 612 
  len = (unsigned int)tmp_24 + len;
  
#line 613 
  tmp_25 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"TX-all-bytes\t%u\n",st->tx_bytes_count);
  
#line 614 
  len = (unsigned int)tmp_25 + len;
  
#line 616 
  if (len > 700U) 
#line 617 
                  len = 700U; else ;
  
#line 619 
  tmp_26 = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buf),(unsigned long)len);
  
#line 619 
  return tmp_26;
}


#line 622  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static ssize_t write_file_frameerrors(struct file *file, char const *userbuf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char buf[20U];
  size_t tmp_0;
  unsigned long tmp_1;
  int tmp_2;
  
#line 626 
  struct ath5k_hw *ah = (struct ath5k_hw *)file->private_data;
  
#line 627 
  struct ath5k_statistics *st = & ah->stats;
  {
    size_t tmp;
    
#line 630 
    size_t __min1 = count;
    
#line 630 
    size_t __min2 = 19UL;
    
#line 630 
    if (__min1 < __min2) 
#line 630 
                         tmp = __min1; else 
#line 630 
                                            tmp = __min2;
    
#line 630 
    tmp_0 = tmp;
  }
  
#line 630 
  count = tmp_0;
  
#line 631 
  tmp_1 = copy_from_user((void *)(& buf),(void const *)userbuf,count);
  
#line 631 
  if (tmp_1 != 0UL) {
    
#line 632 
    __retres = -14L;
    
#line 632 
    goto return_label;
  }
  else ;
  
#line 634 
  buf[count] = (char)0;
  
#line 635 
  tmp_2 = strncmp((char const *)(& buf),"clear",5UL);
  
#line 635 
  if (tmp_2 == 0) {
    
#line 636 
    st->rxerr_crc = 0U;
    
#line 637 
    st->rxerr_phy = 0U;
    
#line 638 
    st->rxerr_fifo = 0U;
    
#line 639 
    st->rxerr_decrypt = 0U;
    
#line 640 
    st->rxerr_mic = 0U;
    
#line 641 
    st->rxerr_proc = 0U;
    
#line 642 
    st->rxerr_jumbo = 0U;
    
#line 643 
    st->rx_all_count = 0U;
    
#line 644 
    st->txerr_retry = 0U;
    
#line 645 
    st->txerr_fifo = 0U;
    
#line 646 
    st->txerr_filt = 0U;
    
#line 647 
    st->tx_all_count = 0U;
    
#line 648 
    printk("\001");
  }
  else ;
  
#line 650 
  __retres = (long)count;
  return_label: 
#line 650 
                return __retres;
}


#line 653  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static struct file_operations const fops_frameerrors = {.owner = & __this_module, .llseek = & default_llseek, .read = & read_file_frameerrors, .write = & write_file_frameerrors, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 664  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static ssize_t read_file_ani(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  char buf[700U];
  int tmp_0;
  char *tmp;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_9;
  int tmp_10;
  int tmp_11;
  int tmp_13;
  char *tmp_12;
  int tmp_15;
  char *tmp_14;
  int tmp_16;
  int tmp_18;
  unsigned long tmp_17;
  int tmp_20;
  u32 tmp_19;
  int tmp_22;
  u32 tmp_21;
  int tmp_24;
  u32 tmp_23;
  int tmp_25;
  int tmp_26;
  int tmp_27;
  int tmp_28;
  int tmp_31;
  u32 tmp_29;
  u32 tmp_30;
  int tmp_34;
  u32 tmp_32;
  u32 tmp_33;
  ssize_t tmp_35;
  
#line 667 
  struct ath5k_hw *ah = (struct ath5k_hw *)file->private_data;
  
#line 668 
  struct ath5k_statistics *st = & ah->stats;
  
#line 669 
  struct ath5k_ani_state *as = & ah->ani_state;
  
#line 672 
  unsigned int len = 0U;
  
#line 675 
  if ((int)ah->ah_capabilities.cap_has_phyerr_counters != 0) 
#line 675 
                                                             tmp = (char *)"yes"; else 
                                                                    
#line 675 
                                                                    tmp = (char *)"no";
  
#line 674 
  tmp_0 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"HW has PHY error counters:\t%s\n",tmp);
  
#line 677 
  len = (unsigned int)tmp_0 + len;
  
#line 678 
  tmp_1 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"HW max spur immunity level:\t%d\n",as->max_spur_level);
  
#line 680 
  len = (unsigned int)tmp_1 + len;
  
#line 681 
  tmp_2 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"\nANI state\n--------------------------------------------\n");
  
#line 682 
  len = (unsigned int)tmp_2 + len;
  
#line 683 
  tmp_3 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"operating mode:\t\t\t");
  
#line 683 
  len = (unsigned int)tmp_3 + len;
  
#line 684 
  switch ((unsigned int)as->ani_mode) {
    int tmp_4;
    int tmp_5;
    int tmp_6;
    int tmp_7;
    int tmp_8;
    case (unsigned int)0: 
#line 685 
    ;
    
#line 686 
    tmp_4 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"OFF\n");
    
#line 686 
    len = (unsigned int)tmp_4 + len;
    
#line 687 
    goto ldv_51165;
    case (unsigned int)1: 
#line 688 
    ;
    
#line 689 
    tmp_5 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"MANUAL LOW\n");
    
#line 690 
    len = (unsigned int)tmp_5 + len;
    
#line 691 
    goto ldv_51165;
    case (unsigned int)2: 
#line 692 
    ;
    
#line 693 
    tmp_6 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"MANUAL HIGH\n");
    
#line 694 
    len = (unsigned int)tmp_6 + len;
    
#line 695 
    goto ldv_51165;
    case (unsigned int)3: 
#line 696 
    ;
    
#line 697 
    tmp_7 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"AUTO\n");
    
#line 697 
    len = (unsigned int)tmp_7 + len;
    
#line 698 
    goto ldv_51165;
    default: 
#line 699 
    ;
    
#line 700 
    tmp_8 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"?\?\? (not good)\n");
    
#line 701 
    len = (unsigned int)tmp_8 + len;
    
#line 702 
    goto ldv_51165;
  }
  ldv_51165: 
#line 704 
  ;
  
#line 704 
  tmp_9 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"noise immunity level:\t\t%d\n",as->noise_imm_level);
  
#line 706 
  len = (unsigned int)tmp_9 + len;
  
#line 707 
  tmp_10 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"spur immunity level:\t\t%d\n",as->spur_level);
  
#line 709 
  len = (unsigned int)tmp_10 + len;
  
#line 710 
  tmp_11 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"firstep level:\t\t\t%d\n",as->firstep_level);
  
#line 712 
  len = (unsigned int)tmp_11 + len;
  
#line 714 
  if ((int)as->ofdm_weak_sig != 0) 
#line 714 
                                   tmp_12 = (char *)"on"; else 
#line 714 
                                                               tmp_12 = (char *)"off";
  
#line 713 
  tmp_13 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"OFDM weak signal detection:\t%s\n",tmp_12);
  
#line 715 
  len = (unsigned int)tmp_13 + len;
  
#line 717 
  if ((int)as->cck_weak_sig != 0) 
#line 717 
                                  tmp_14 = (char *)"on"; else 
#line 717 
                                                              tmp_14 = (char *)"off";
  
#line 716 
  tmp_15 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"CCK weak signal detection:\t%s\n",tmp_14);
  
#line 718 
  len = (unsigned int)tmp_15 + len;
  
#line 720 
  tmp_16 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"\nMIB INTERRUPTS:\t\t%u\n",st->mib_intr);
  
#line 722 
  len = (unsigned int)tmp_16 + len;
  
#line 725 
  tmp_17 = ewma_read((struct ewma const *)(& ah->ah_beacon_rssi_avg));
  
#line 723 
  tmp_18 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"beacon RSSI average:\t%d\n",(int)tmp_17);
  
#line 725 
  len = (unsigned int)tmp_18 + len;
  
#line 734 
  if (as->last_cc.cycles != 0U) 
#line 734 
                                tmp_19 = (as->last_cc.tx_frame * 100U) / as->last_cc.cycles; else 
                                                                    
#line 734 
                                                                    tmp_19 = 0U;
  
#line 732 
  ;
  
#line 732 
  tmp_20 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"profcnt tx\t\t%u\t(%d%%)\n",as->last_cc.tx_frame,tmp_19);
  
#line 734 
  len = (unsigned int)tmp_20 + len;
  
#line 737 
  if (as->last_cc.cycles != 0U) 
#line 737 
                                tmp_21 = (as->last_cc.rx_frame * 100U) / as->last_cc.cycles; else 
                                                                    
#line 737 
                                                                    tmp_21 = 0U;
  
#line 735 
  ;
  
#line 735 
  tmp_22 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"profcnt rx\t\t%u\t(%d%%)\n",as->last_cc.rx_frame,tmp_21);
  
#line 737 
  len = (unsigned int)tmp_22 + len;
  
#line 740 
  if (as->last_cc.cycles != 0U) 
#line 740 
                                tmp_23 = (as->last_cc.rx_busy * 100U) / as->last_cc.cycles; else 
                                                                    
#line 740 
                                                                    tmp_23 = 0U;
  
#line 738 
  ;
  
#line 738 
  tmp_24 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"profcnt busy\t\t%u\t(%d%%)\n",as->last_cc.rx_busy,tmp_23);
  
#line 740 
  len = (unsigned int)tmp_24 + len;
  
#line 742 
  tmp_25 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"profcnt cycles\t\t%u\n",as->last_cc.cycles);
  
#line 743 
  len = (unsigned int)tmp_25 + len;
  
#line 744 
  tmp_26 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"listen time\t\t%d\tlast: %d\n",as->listen_time,as->last_listen);
  
#line 746 
  len = (unsigned int)tmp_26 + len;
  
#line 747 
  tmp_27 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"OFDM errors\t\t%u\tlast: %u\tsum: %u\n",as->ofdm_errors,as->last_ofdm_errors,as->sum_ofdm_errors);
  
#line 750 
  len = (unsigned int)tmp_27 + len;
  
#line 751 
  tmp_28 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"CCK errors\t\t%u\tlast: %u\tsum: %u\n",as->cck_errors,as->last_cck_errors,as->sum_cck_errors);
  
#line 754 
  len = (unsigned int)tmp_28 + len;
  
#line 757 
  tmp_29 = ath5k_hw_reg_read(ah,(unsigned short)33068);
  
#line 756 
  tmp_30 = ath5k_hw_reg_read(ah,(unsigned short)33068);
  
#line 755 
  tmp_31 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"AR5K_PHYERR_CNT1\t%x\t(=%d)\n",tmp_30,tmp_29 + 4282384884U);
  
#line 759 
  len = (unsigned int)tmp_31 + len;
  
#line 762 
  tmp_32 = ath5k_hw_reg_read(ah,(unsigned short)33076);
  
#line 761 
  tmp_33 = ath5k_hw_reg_read(ah,(unsigned short)33076);
  
#line 760 
  tmp_34 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"AR5K_PHYERR_CNT2\t%x\t(=%d)\n",tmp_33,tmp_32 + 4282384584U);
  
#line 764 
  len = (unsigned int)tmp_34 + len;
  
#line 766 
  if (len > 700U) 
#line 767 
                  len = 700U; else ;
  
#line 769 
  tmp_35 = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buf),(unsigned long)len);
  
#line 769 
  return tmp_35;
}


#line 772  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static ssize_t write_file_ani(struct file *file, char const *userbuf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char buf[20U];
  size_t tmp_0;
  unsigned long tmp_1;
  int tmp_15;
  
#line 776 
  struct ath5k_hw *ah = (struct ath5k_hw *)file->private_data;
  {
    size_t tmp;
    
#line 779 
    size_t __min1 = count;
    
#line 779 
    size_t __min2 = 19UL;
    
#line 779 
    if (__min1 < __min2) 
#line 779 
                         tmp = __min1; else 
#line 779 
                                            tmp = __min2;
    
#line 779 
    tmp_0 = tmp;
  }
  
#line 779 
  count = tmp_0;
  
#line 780 
  tmp_1 = copy_from_user((void *)(& buf),(void const *)userbuf,count);
  
#line 780 
  if (tmp_1 != 0UL) {
    
#line 781 
    __retres = -14L;
    
#line 781 
    goto return_label;
  }
  else ;
  
#line 783 
  buf[count] = (char)0;
  
#line 784 
  tmp_15 = strncmp((char const *)(& buf),"sens-low",8UL);
  
#line 784 
  if (tmp_15 == 0) 
#line 785 
                   ath5k_ani_init(ah,(enum ath5k_ani_mode)ATH5K_ANI_MODE_MANUAL_HIGH);
  else {
    int tmp_14;
    
#line 786 
    tmp_14 = strncmp((char const *)(& buf),"sens-high",9UL);
    
#line 786 
    if (tmp_14 == 0) 
#line 787 
                     ath5k_ani_init(ah,(enum ath5k_ani_mode)ATH5K_ANI_MODE_MANUAL_LOW);
    else {
      int tmp_13;
      
#line 788 
      tmp_13 = strncmp((char const *)(& buf),"ani-off",7UL);
      
#line 788 
      if (tmp_13 == 0) 
#line 789 
                       ath5k_ani_init(ah,(enum ath5k_ani_mode)ATH5K_ANI_MODE_OFF);
      else {
        int tmp_12;
        
#line 790 
        tmp_12 = strncmp((char const *)(& buf),"ani-on",6UL);
        
#line 790 
        if (tmp_12 == 0) 
#line 791 
                         ath5k_ani_init(ah,(enum ath5k_ani_mode)ATH5K_ANI_MODE_AUTO);
        else {
          int tmp_11;
          
#line 792 
          tmp_11 = strncmp((char const *)(& buf),"noise-low",9UL);
          
#line 792 
          if (tmp_11 == 0) 
#line 793 
                           ath5k_ani_set_noise_immunity_level(ah,0);
          else {
            int tmp_10;
            
#line 794 
            tmp_10 = strncmp((char const *)(& buf),"noise-high",10UL);
            
#line 794 
            if (tmp_10 == 0) 
#line 795 
                             ath5k_ani_set_noise_immunity_level(ah,1);
            else {
              int tmp_9;
              
#line 797 
              tmp_9 = strncmp((char const *)(& buf),"spur-low",8UL);
              
#line 797 
              if (tmp_9 == 0) 
#line 798 
                              ath5k_ani_set_spur_immunity_level(ah,0);
              else {
                int tmp_8;
                
#line 799 
                tmp_8 = strncmp((char const *)(& buf),"spur-high",9UL);
                
#line 799 
                if (tmp_8 == 0) 
#line 800 
                                ath5k_ani_set_spur_immunity_level(ah,ah->ani_state.max_spur_level);
                else {
                  int tmp_7;
                  
#line 802 
                  tmp_7 = strncmp((char const *)(& buf),"fir-low",7UL);
                  
#line 802 
                  if (tmp_7 == 0) 
#line 803 
                                  ath5k_ani_set_firstep_level(ah,0);
                  else {
                    int tmp_6;
                    
#line 804 
                    tmp_6 = strncmp((char const *)(& buf),"fir-high",8UL);
                    
#line 804 
                    if (tmp_6 == 0) 
#line 805 
                                    ath5k_ani_set_firstep_level(ah,2);
                    else {
                      int tmp_5;
                      
#line 806 
                      tmp_5 = strncmp((char const *)(& buf),"ofdm-off",8UL);
                      
#line 806 
                      if (tmp_5 == 0) 
#line 807 
                                      ath5k_ani_set_ofdm_weak_signal_detection(ah,(_Bool)0);
                      else {
                        int tmp_4;
                        
#line 808 
                        tmp_4 = strncmp((char const *)(& buf),"ofdm-on",7UL);
                        
#line 808 
                        if (tmp_4 == 0) 
#line 809 
                                        ath5k_ani_set_ofdm_weak_signal_detection(ah,(_Bool)1);
                        else {
                          int tmp_3;
                          
#line 810 
                          tmp_3 = strncmp((char const *)(& buf),"cck-off",7UL);
                          
#line 810 
                          if (tmp_3 == 0) 
#line 811 
                                          ath5k_ani_set_cck_weak_signal_detection(ah,(_Bool)0);
                          else {
                            int tmp_2;
                            
#line 812 
                            tmp_2 = strncmp((char const *)(& buf),"cck-on",6UL);
                            
#line 812 
                            if (tmp_2 == 0) 
#line 813 
                                            ath5k_ani_set_cck_weak_signal_detection(ah,(_Bool)1); else ;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
#line 815 
  __retres = (long)count;
  return_label: 
#line 815 
                return __retres;
}


#line 818  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static struct file_operations const fops_ani = {.owner = & __this_module, .llseek = & default_llseek, .read = & read_file_ani, .write = & write_file_ani, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 829  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static ssize_t read_file_queue(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  char buf[700U];
  struct ath5k_txq *txq;
  struct ath5k_buf *bf;
  struct ath5k_buf *bf0;
  int i;
  int n;
  int tmp;
  int tmp_1;
  char *tmp_0;
  struct ath5k_buf *tmp_2;
  struct ath5k_buf *tmp_3;
  struct ath5k_buf *tmp_4;
  int tmp_5;
  int tmp_6;
  ssize_t tmp_7;
  
#line 832 
  struct ath5k_hw *ah = (struct ath5k_hw *)file->private_data;
  
#line 834 
  unsigned int len = 0U;
  
#line 840 
  tmp = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"available txbuffers: %d\n",ah->txbuf_len);
  
#line 841 
  len = (unsigned int)tmp + len;
  
#line 843 
  i = 0;
  
#line 843 
  goto ldv_51210;
  ldv_51209: 
#line 844 
  ;
  
#line 844 
  txq = & ah->txqs[i];
  
#line 847 
  if ((int)txq->setup != 0) 
#line 847 
                            tmp_0 = (char *)""; else 
#line 847 
                                                     tmp_0 = (char *)"not ";
  
#line 846 
  ;
  
#line 846 
  tmp_1 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"%02d: %ssetup\n",i,tmp_0);
  
#line 847 
  len = (unsigned int)tmp_1 + len;
  
#line 849 
  if (! txq->setup) 
#line 850 
                    goto ldv_51199; else ;
  
#line 852 
  n = 0;
  
#line 853 
  ldv_spin_lock_bh_73(& txq->lock);
  {
    
#line 854 
    struct list_head const *__mptr = (struct list_head const *)txq->q.next;
    
#line 854 
    tmp_2 = (struct ath5k_buf *)__mptr;
  }
  
#line 854 
  bf = tmp_2;
  {
    
#line 854 
    struct list_head const *__mptr_0 = (struct list_head const *)bf->list.next;
    
#line 854 
    tmp_3 = (struct ath5k_buf *)__mptr_0;
  }
  
#line 855 
  bf0 = tmp_3;
  
#line 854 
  goto ldv_51207;
  ldv_51206: 
#line 855 
  ;
  
#line 855 
  n += 1;
  
#line 854 
  bf = bf0;
  {
    
#line 854 
    struct list_head const *__mptr_1 = (struct list_head const *)bf0->list.next;
    
#line 854 
    tmp_4 = (struct ath5k_buf *)__mptr_1;
  }
  
#line 854 
  bf0 = tmp_4;
  ldv_51207: 
#line 856 
  ;
  
#line 854 
  if (& bf->list != & txq->q) 
#line 856 
                              goto ldv_51206; else 
#line 859 
                                                   goto ldv_51208;
  ldv_51208: 
#line 860 
  ;
  
#line 856 
  ldv_spin_unlock_bh_74(& txq->lock);
  
#line 858 
  tmp_5 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"  len: %d bufs: %d\n",txq->txq_len,n);
  
#line 859 
  len = (unsigned int)tmp_5 + len;
  
#line 860 
  tmp_6 = snprintf((char *)(& buf) + len,700UL - (unsigned long)len,"  stuck: %d\n",txq->txq_stuck);
  
#line 861 
  len = (unsigned int)tmp_6 + len;
  ldv_51199: 
#line 861 
  ;
  
#line 843 
  i += 1;
  ldv_51210: 
#line 844 
  ;
  
#line 843 
  if ((unsigned int)i <= 9U) 
#line 845 
                             goto ldv_51209; else 
#line 848 
                                                  goto ldv_51211;
  ldv_51211: 
#line 849 
  ;
  
#line 864 
  if (len > 700U) 
#line 865 
                  len = 700U; else ;
  
#line 867 
  tmp_7 = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)(& buf),(unsigned long)len);
  
#line 867 
  return tmp_7;
}


#line 870  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static ssize_t write_file_queue(struct file *file, char const *userbuf, size_t count, loff_t *ppos)
{
  ssize_t __retres;
  char buf[20U];
  size_t tmp_0;
  unsigned long tmp_1;
  int tmp_3;
  
#line 874 
  struct ath5k_hw *ah = (struct ath5k_hw *)file->private_data;
  {
    size_t tmp;
    
#line 877 
    size_t __min1 = count;
    
#line 877 
    size_t __min2 = 19UL;
    
#line 877 
    if (__min1 < __min2) 
#line 877 
                         tmp = __min1; else 
#line 877 
                                            tmp = __min2;
    
#line 877 
    tmp_0 = tmp;
  }
  
#line 877 
  count = tmp_0;
  
#line 878 
  tmp_1 = copy_from_user((void *)(& buf),(void const *)userbuf,count);
  
#line 878 
  if (tmp_1 != 0UL) {
    
#line 879 
    __retres = -14L;
    
#line 879 
    goto return_label;
  }
  else ;
  
#line 881 
  buf[count] = (char)0;
  
#line 882 
  tmp_3 = strncmp((char const *)(& buf),"start",5UL);
  
#line 882 
  if (tmp_3 == 0) 
#line 883 
                  ieee80211_wake_queues(ah->hw);
  else {
    int tmp_2;
    
#line 884 
    tmp_2 = strncmp((char const *)(& buf),"stop",4UL);
    
#line 884 
    if (tmp_2 == 0) 
#line 885 
                    ieee80211_stop_queues(ah->hw); else ;
  }
  
#line 887 
  __retres = (long)count;
  return_label: 
#line 887 
                return __retres;
}


#line 891  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static struct file_operations const fops_queue = {.owner = & __this_module, .llseek = & default_llseek, .read = & read_file_queue, .write = & write_file_queue, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & simple_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = (int (*)(struct inode *, struct file *))0, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 906  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static int open_file_eeprom(struct inode *inode, struct file *file)
{
  int __retres;
  struct eeprom_private *ep;
  bool res;
  int i;
  int ret;
  u32 eesize;
  u16 val;
  u16 *buf;
  int tmp_1;
  bool tmp_0;
  
#line 909 
  struct ath5k_hw *ah = (struct ath5k_hw *)inode->i_private;
  
#line 917 
  res = ath5k_hw_nvram_read(ah,28U,& val);
  
#line 918 
  if (! res) {
    
#line 919 
    __retres = -13;
    
#line 919 
    goto return_label;
  }
  else ;
  
#line 921 
  if ((unsigned int)val == 0U) 
#line 922 
                               eesize = 1024U;
  else {
    
#line 924 
    eesize = (unsigned int)((int)val << 12) & 268369920U;
    
#line 926 
    ath5k_hw_nvram_read(ah,27U,& val);
    
#line 927 
    eesize = (unsigned int)val | eesize;
  }
  
#line 930 
  if (eesize > 4096U) {
    
#line 931 
    __retres = -22;
    
#line 931 
    goto return_label;
  }
  else ;
  
#line 935 
  buf = (u16 *)vmalloc((unsigned long)eesize);
  
#line 936 
  if (buf == (u16 *)0U) {
    
#line 937 
    ret = -12;
    
#line 938 
    goto err;
  }
  else ;
  
#line 941 
  i = 0;
  
#line 941 
  goto ldv_51241;
  ldv_51240: 
#line 942 
  ;
  
#line 942 
  tmp_0 = ath5k_hw_nvram_read(ah,(unsigned int)i,& val);
  
#line 942 
  if (tmp_0) 
#line 942 
             tmp_1 = 0; else 
#line 942 
                             tmp_1 = 1;
  
#line 942 
  if (tmp_1) {
    
#line 942 
    __retres = -5;
    
#line 942 
    goto return_label;
  }
  else ;
  
#line 943 
  *(buf + i) = val;
  
#line 941 
  i += 1;
  ldv_51241: 
#line 942 
  ;
  
#line 941 
  if ((unsigned int)i < eesize) 
#line 943 
                                goto ldv_51240; else 
#line 946 
                                                     goto ldv_51242;
  ldv_51242: 
#line 947 
  ;
  
#line 948 
  ep = (struct eeprom_private *)kmalloc_0(16UL,208U);
  
#line 949 
  if (ep == (struct eeprom_private *)0) {
    
#line 950 
    ret = -12;
    
#line 951 
    goto freebuf;
  }
  else ;
  
#line 954 
  ep->buf = buf;
  
#line 955 
  ep->len = i;
  
#line 957 
  file->private_data = (void *)ep;
  
#line 959 
  __retres = 0;
  
#line 959 
  goto return_label;
  freebuf: 
#line 961 
  ;
  
#line 962 
  vfree((void const *)buf);
  err: 
#line 963 
  ;
  
#line 964 
  __retres = ret;
  return_label: 
#line 964 
                return __retres;
}


#line 968  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static ssize_t read_file_eeprom(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  ssize_t tmp;
  
#line 971 
  struct eeprom_private *ep = (struct eeprom_private *)file->private_data;
  
#line 973 
  tmp = simple_read_from_buffer((void *)user_buf,count,ppos,(void const *)ep->buf,(unsigned long)ep->len);
  
#line 973 
  return tmp;
}


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static int release_file_eeprom(struct inode *inode, struct file *file)
{
  int __retres;
  
#line 978 
  struct eeprom_private *ep = (struct eeprom_private *)file->private_data;
  
#line 980 
  vfree((void const *)ep->buf);
  
#line 981 
  kfree((void const *)ep);
  
#line 983 
  __retres = 0;
  
#line 983 
  return __retres;
}


#line 986  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
static struct file_operations const fops_eeprom = {.owner = & __this_module, .llseek = (loff_t (*)(struct file *, loff_t , int ))0, .read = & read_file_eeprom, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & open_file_eeprom, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & release_file_eeprom, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 995  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
void ath5k_debug_init_device(struct ath5k_hw *ah)
{
  struct dentry *phydir;
  
#line 999 
  ah->debug.level = ath5k_debug;
  
#line 1001 
  phydir = debugfs_create_dir("ath5k",((ah->hw)->wiphy)->debugfsdir);
  
#line 1002 
  if (phydir == (struct dentry *)0) 
#line 1003 
                                    goto return_label; else ;
  
#line 1005 
  ldv_debugfs_create_file_75("debug",(unsigned short)384,phydir,(void *)ah,& fops_debug);
  
#line 1008 
  ldv_debugfs_create_file_76("registers",(unsigned short)256,phydir,(void *)ah,& fops_registers);
  
#line 1010 
  ldv_debugfs_create_file_77("beacon",(unsigned short)384,phydir,(void *)ah,& fops_beacon);
  
#line 1013 
  ldv_debugfs_create_file_78("reset",(unsigned short)128,phydir,(void *)ah,& fops_reset);
  
#line 1015 
  ldv_debugfs_create_file_79("antenna",(unsigned short)384,phydir,(void *)ah,& fops_antenna);
  
#line 1018 
  ldv_debugfs_create_file_80("misc",(unsigned short)256,phydir,(void *)ah,& fops_misc);
  
#line 1020 
  ldv_debugfs_create_file_81("eeprom",(unsigned short)256,phydir,(void *)ah,& fops_eeprom);
  
#line 1022 
  ldv_debugfs_create_file_82("frameerrors",(unsigned short)384,phydir,(void *)ah,& fops_frameerrors);
  
#line 1025 
  ldv_debugfs_create_file_83("ani",(unsigned short)384,phydir,(void *)ah,& fops_ani);
  
#line 1027 
  ldv_debugfs_create_file_84("queue",(unsigned short)384,phydir,(void *)ah,& fops_queue);
  
#line 1030 
  debugfs_create_bool("32khz_clock",(unsigned short)384,phydir,& ah->ah_use_32khz_clock);
  return_label: 
#line 1032 
                return;
}


#line 1037  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
void ath5k_debug_dump_bands(struct ath5k_hw *ah)
{
  unsigned int b;
  unsigned int i;
  
#line 1041 
  if ((long)((ah->debug.level & 1024U) == 0U) != 0L) 
#line 1042 
                                                     goto return_label; else ;
  
#line 1044 
  if ((long)(& ah->sbands == (struct ieee80211_supported_band (*)[3U])0) != 0L) {
    
#line 1046 
    ldv_inline_asm();
    
#line 1044 
    ;
  }
  else ;
  
#line 1046 
  b = 0U;
  
#line 1046 
  goto ldv_51279;
  ldv_51278: 
#line 1047 
  ;
  {
    char bname[6U];
    int tmp;
    
#line 1047 
    struct ieee80211_supported_band *band = & ah->sbands[b];
    
#line 1049 
    switch ((unsigned int)band->band) {
      case (unsigned int)0: 
#line 1050 
      ;
      
#line 1051 
      strcpy((char *)(& bname),"2 GHz");
      
#line 1052 
      goto ldv_51269;
      case (unsigned int)1: 
#line 1053 
      ;
      
#line 1054 
      strcpy((char *)(& bname),"5 GHz");
      
#line 1055 
      goto ldv_51269;
      default: 
#line 1056 
      ;
      
#line 1057 
      printk("\001",(unsigned int)band->band);
      
#line 1059 
      goto return_label;
    }
    ldv_51269: 
#line 1061 
    ;
    
#line 1061 
    printk("\001",(char *)(& bname),band->n_channels,band->n_bitrates);
    
#line 1063 
    printk("\001");
    
#line 1064 
    i = 0U;
    
#line 1064 
    goto ldv_51273;
    ldv_51272: 
#line 1065 
    ;
    
#line 1065 
    ;
    
#line 1065 
    ;
    
#line 1065 
    ;
    
#line 1065 
    tmp = ieee80211_frequency_to_channel((int)(band->channels + i)->center_freq);
    
#line 1065 
    printk("\001",tmp,(int)(band->channels + i)->center_freq,(int)(band->channels + i)->hw_value,(band->channels + i)->flags);
    
#line 1064 
    i += 1U;
    ldv_51273: 
#line 1065 
    ;
    
#line 1064 
    if ((unsigned int)band->n_channels > i) 
#line 1066 
                                            goto ldv_51272; else 
#line 1069 
                                                                 goto ldv_51274;
    ldv_51274: 
#line 1070 
    ;
    
#line 1071 
    printk("\001");
    
#line 1072 
    i = 0U;
    
#line 1072 
    goto ldv_51276;
    ldv_51275: 
#line 1073 
    ;
    
#line 1073 
    printk("\001",(int)(band->bitrates + i)->bitrate,(int)(band->bitrates + i)->hw_value,(band->bitrates + i)->flags,(int)(band->bitrates + i)->hw_value_short);
    
#line 1072 
    i += 1U;
    ldv_51276: 
#line 1073 
    ;
    
#line 1072 
    if ((unsigned int)band->n_bitrates > i) 
#line 1074 
                                            goto ldv_51275; else 
#line 1077 
                                                                 goto ldv_51277;
    ldv_51277: 
#line 1078 
    ;
  }
  
#line 1046 
  b += 1U;
  ldv_51279: 
#line 1047 
  ;
  
#line 1046 
  if (b <= 2U) 
#line 1048 
               goto ldv_51278; else 
#line 1051 
                                    goto ldv_51280;
  ldv_51280: 
#line 1052 
  ;
  return_label: 
#line 1053 
                return;
}


#line 1082  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
__inline static void ath5k_debug_printrxbuf(struct ath5k_buf *bf, int done, struct ath5k_rx_status *rs)
{
  int tmp_0;
  
#line 1085 
  struct ath5k_desc *ds = bf->desc;
  
#line 1086 
  struct ath5k_hw_all_rx_desc *rd = & ds->ud.ds_rx;
  
#line 1092 
  if (done != 0) {
    int tmp;
    
#line 1093 
    if ((unsigned int)rs->rs_status == 0U) 
#line 1093 
                                           tmp = 42; else 
#line 1093 
                                                          tmp = 33;
    
#line 1092 
    tmp_0 = tmp;
  }
  else 
#line 1092 
       tmp_0 = 32;
  
#line 1088 
  ;
  
#line 1088 
  ;
  
#line 1088 
  ;
  
#line 1088 
  ;
  
#line 1088 
  ;
  
#line 1088 
  ;
  
#line 1088 
  ;
  
#line 1088 
  ;
  
#line 1088 
  printk("\001",ds,bf->daddr,ds->ds_link,ds->ds_data,rd->rx_ctl.rx_control_0,rd->rx_ctl.rx_control_1,rd->rx_stat.rx_status_0,rd->rx_stat.rx_status_1,tmp_0);
  
#line 1094 
  return;
}


#line 1097  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
void ath5k_debug_printrxbuffs(struct ath5k_hw *ah)
{
  struct ath5k_desc *ds;
  struct ath5k_buf *bf;
  int status;
  u32 tmp;
  struct ath5k_buf *tmp_0;
  struct ath5k_buf *tmp_1;
  
#line 1101 
  struct ath5k_rx_status rs = {.rs_datalen = (unsigned short)0, .rs_tstamp = (unsigned short)0, .rs_status = (unsigned char)0, .rs_phyerr = (unsigned char)0, .rs_rssi = (signed char)0, .rs_keyix = (unsigned char)0, .rs_rate = (unsigned char)0, .rs_antenna = (unsigned char)0, .rs_more = (unsigned char)0};
  
#line 1104 
  if ((long)((ah->debug.level & 16384U) == 0U) != 0L) 
#line 1105 
                                                      goto return_label; else ;
  
#line 1107 
  ;
  
#line 1107 
  tmp = ath5k_hw_get_rxdp(ah);
  
#line 1107 
  printk("\001",tmp,ah->rxlink);
  
#line 1110 
  ldv_spin_lock_bh_85(& ah->rxbuflock);
  {
    
#line 1111 
    struct list_head const *__mptr = (struct list_head const *)ah->rxbuf.next;
    
#line 1111 
    tmp_0 = (struct ath5k_buf *)__mptr;
  }
  
#line 1111 
  bf = tmp_0;
  
#line 1111 
  goto ldv_51300;
  ldv_51299: 
#line 1112 
  ;
  
#line 1112 
  ds = bf->desc;
  
#line 1113 
  status = (*(ah->ah_proc_rx_desc))(ah,ds,& rs);
  
#line 1114 
  if (status == 0) 
#line 1115 
                   ath5k_debug_printrxbuf(bf,status == 0,& rs); else ;
  {
    
#line 1111 
    struct list_head const *__mptr_0 = (struct list_head const *)bf->list.next;
    
#line 1111 
    tmp_1 = (struct ath5k_buf *)__mptr_0;
  }
  
#line 1111 
  bf = tmp_1;
  ldv_51300: 
#line 1113 
  ;
  
#line 1111 
  if (& bf->list != & ah->rxbuf) 
#line 1113 
                                 goto ldv_51299; else 
#line 1116 
                                                      goto ldv_51301;
  ldv_51301: 
#line 1117 
  ;
  
#line 1117 
  ldv_spin_unlock_bh_86(& ah->rxbuflock);
  return_label: 
#line 1118 
                return;
}


#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/debug.c"
void ath5k_debug_printtxbuf(struct ath5k_hw *ah, struct ath5k_buf *bf)
{
  int done;
  int tmp_0;
  
#line 1123 
  struct ath5k_desc *ds = bf->desc;
  
#line 1124 
  struct ath5k_hw_5212_tx_desc *td = & ds->ud.ds_tx5212;
  
#line 1125 
  struct ath5k_tx_status ts = {.ts_seqnum = (unsigned short)0, .ts_tstamp = (unsigned short)0, .ts_status = (unsigned char)0, .ts_final_idx = (unsigned char)0, .ts_final_retry = (unsigned char)0, .ts_rssi = (signed char)0, .ts_shortretry = (unsigned char)0, .ts_virtcol = (unsigned char)0, .ts_antenna = (unsigned char)0};
  
#line 1128 
  if ((long)((ah->debug.level & 16384U) == 0U) != 0L) 
#line 1129 
                                                      goto return_label; else ;
  
#line 1131 
  done = (*(ah->ah_proc_tx_desc))(ah,bf->desc,& ts);
  
#line 1137 
  if (done == 0) {
    int tmp;
    
#line 1138 
    if ((unsigned int)ts.ts_status == 0U) 
#line 1138 
                                          tmp = 42; else 
#line 1138 
                                                         tmp = 33;
    
#line 1137 
    tmp_0 = tmp;
  }
  else 
#line 1137 
       tmp_0 = 32;
  
#line 1133 
  ;
  
#line 1133 
  ;
  
#line 1133 
  ;
  
#line 1133 
  ;
  
#line 1133 
  ;
  
#line 1133 
  ;
  
#line 1133 
  ;
  
#line 1133 
  ;
  
#line 1133 
  ;
  
#line 1133 
  ;
  
#line 1133 
  printk("\001",ds,bf->daddr,ds->ds_link,ds->ds_data,td->tx_ctl.tx_control_0,td->tx_ctl.tx_control_1,td->tx_ctl.tx_control_2,td->tx_ctl.tx_control_3,td->tx_stat.tx_status_0,td->tx_stat.tx_status_1,tmp_0);
  return_label: 
#line 1139 
                return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
struct file_operations *ldv_emg_alias_fops_ani_2 = (struct file_operations *)(& fops_ani);

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
struct seq_operations *ldv_emg_alias_register_seq_ops_2 = (struct seq_operations *)(& register_seq_ops);

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
struct file_operations *ldv_emg_alias_fops_reset_2 = (struct file_operations *)(& fops_reset);

#line 59  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
long long (*ldv_emg_alias_seq_lseek_3)(struct file *, long long , int ) = & seq_lseek;

#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
struct file_operations *ldv_emg_alias_fops_misc_2 = (struct file_operations *)(& fops_misc);

#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
struct file_operations *ldv_emg_alias_fops_antenna_2 = (struct file_operations *)(& fops_antenna);

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
long long (*ldv_emg_alias_default_llseek_3)(struct file *, long long , int ) = & default_llseek;

#line 63  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
long long (*ldv_emg_alias_noop_llseek_3)(struct file *, long long , int ) = & noop_llseek;

#line 64  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
int (*ldv_emg_alias_seq_release_5)(struct inode *, struct file *) = & seq_release;

#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
int (*ldv_emg_alias_simple_open_6)(struct inode *, struct file *) = & simple_open;

#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
struct file_operations *ldv_emg_alias_fops_beacon_2 = (struct file_operations *)(& fops_beacon);

#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
struct file_operations *ldv_emg_alias_fops_registers_2 = (struct file_operations *)(& fops_registers);

#line 68  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
struct file_operations *ldv_emg_alias_fops_frameerrors_2 = (struct file_operations *)(& fops_frameerrors);

#line 69  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
struct file_operations *ldv_emg_alias_fops_eeprom_2 = (struct file_operations *)(& fops_eeprom);

#line 70  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
long (*ldv_emg_alias_seq_read_4)(struct file *, char *, unsigned long , long long *) = & seq_read;

#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
struct file_operations *ldv_emg_alias_fops_queue_2 = (struct file_operations *)(& fops_queue);

#line 72  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
struct file_operations *ldv_emg_alias_fops_debug_2 = (struct file_operations *)(& fops_debug);

#line 80 
struct dentry *ldv_emg_debugfs_create_file(char *arg0, unsigned short arg1, struct dentry *arg2, void *arg3, struct file_operations *arg4);


#line 82 
int ldv_emg_seq_open(struct file *arg0, struct seq_operations *arg1);


#line 87  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
long ldv_emg_wrapper_write_file_ani_5(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 88 
  tmp = write_file_ani(arg0,(char const *)arg1,arg2,arg3);
  
#line 88 
  return tmp;
}


#line 92  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
int ldv_emg_wrapper_release_file_eeprom_4(struct inode *arg0, struct file *arg1)
{
  int tmp;
  
#line 93 
  tmp = release_file_eeprom(arg0,arg1);
  
#line 93 
  return tmp;
}


#line 97  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
void *ldv_emg_wrapper_reg_next_3(struct seq_file *arg0, void *arg1, long long *arg2)
{
  void *tmp;
  
#line 98 
  tmp = reg_next(arg0,arg1,arg2);
  
#line 98 
  return tmp;
}


#line 102  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
int ldv_emg_wrapper_open_file_registers_6(struct inode *arg0, struct file *arg1)
{
  int tmp;
  
#line 103 
  tmp = open_file_registers(arg0,arg1);
  
#line 103 
  return tmp;
}


#line 107  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
long ldv_emg_wrapper_read_file_frameerrors_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 108 
  tmp = read_file_frameerrors(arg0,arg1,arg2,arg3);
  
#line 108 
  return tmp;
}


#line 112  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
long ldv_emg_wrapper_write_file_reset_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 113 
  tmp = write_file_reset(arg0,(char const *)arg1,arg2,arg3);
  
#line 113 
  return tmp;
}


#line 117  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
long ldv_emg_wrapper_read_file_beacon_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 118 
  tmp = read_file_beacon(arg0,arg1,arg2,arg3);
  
#line 118 
  return tmp;
}


#line 122  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
long ldv_emg_wrapper_read_file_queue_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 123 
  tmp = read_file_queue(arg0,arg1,arg2,arg3);
  
#line 123 
  return tmp;
}


#line 127  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
long ldv_emg_wrapper_read_file_debug_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 128 
  tmp = read_file_debug(arg0,arg1,arg2,arg3);
  
#line 128 
  return tmp;
}


#line 132  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
long ldv_emg_wrapper_read_file_ani_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 133 
  tmp = read_file_ani(arg0,arg1,arg2,arg3);
  
#line 133 
  return tmp;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
long ldv_emg_wrapper_write_file_queue_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 138 
  tmp = write_file_queue(arg0,(char const *)arg1,arg2,arg3);
  
#line 138 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
long ldv_emg_wrapper_write_file_frameerrors_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 143 
  tmp = write_file_frameerrors(arg0,(char const *)arg1,arg2,arg3);
  
#line 143 
  return tmp;
}


#line 147  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
long ldv_emg_wrapper_read_file_antenna_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 148 
  tmp = read_file_antenna(arg0,arg1,arg2,arg3);
  
#line 148 
  return tmp;
}


#line 152  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
void ldv_emg_wrapper_reg_stop_5(struct seq_file *arg0, void *arg1)
{
  
#line 153 
  reg_stop(arg0,arg1);
  
#line 154 
  return;
}


#line 157  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
long ldv_emg_wrapper_write_file_debug_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 158 
  tmp = write_file_debug(arg0,(char const *)arg1,arg2,arg3);
  
#line 158 
  return tmp;
}


#line 162  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
long ldv_emg_wrapper_write_file_beacon_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 163 
  tmp = write_file_beacon(arg0,(char const *)arg1,arg2,arg3);
  
#line 163 
  return tmp;
}


#line 167  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
int ldv_emg_wrapper_open_file_eeprom_5(struct inode *arg0, struct file *arg1)
{
  int tmp;
  
#line 168 
  tmp = open_file_eeprom(arg0,arg1);
  
#line 168 
  return tmp;
}


#line 172  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
long ldv_emg_wrapper_write_file_antenna_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 173 
  tmp = write_file_antenna(arg0,(char const *)arg1,arg2,arg3);
  
#line 173 
  return tmp;
}


#line 177  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
long ldv_emg_wrapper_read_file_eeprom_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 178 
  tmp = read_file_eeprom(arg0,arg1,arg2,arg3);
  
#line 178 
  return tmp;
}


#line 182  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
void *ldv_emg_wrapper_reg_start_2(struct seq_file *arg0, long long *arg1)
{
  void *tmp;
  
#line 183 
  tmp = reg_start(arg0,arg1);
  
#line 183 
  return tmp;
}


#line 187  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
int ldv_emg_wrapper_reg_show_4(struct seq_file *arg0, void *arg1)
{
  int tmp;
  
#line 188 
  tmp = reg_show(arg0,arg1);
  
#line 188 
  return tmp;
}


#line 192  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
long ldv_emg_wrapper_read_file_misc_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 193 
  tmp = read_file_misc(arg0,arg1,arg2,arg3);
  
#line 193 
  return tmp;
}


#line 601  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
static void *kmalloc_0(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 604 
  tmp = ldv_kmalloc(size,flags);
  
#line 604 
  return tmp;
}


#line 868  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
static int ldv_seq_open_72(struct file *ldv_func_arg1, struct seq_operations const *ldv_func_arg2)
{
  int tmp;
  
#line 872 
  tmp = ldv_emg_seq_open(ldv_func_arg1,(struct seq_operations *)ldv_func_arg2);
  
#line 872 
  return tmp;
}


#line 876  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
static void ldv_spin_lock_bh_73(spinlock_t *lock)
{
  
#line 880 
  ldv_spin_model_lock((char *)"lock_of_ath5k_txq");
  
#line 882 
  spin_lock_bh_2(lock);
  
#line 883 
  return;
}


#line 886  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
static void ldv_spin_unlock_bh_74(spinlock_t *lock)
{
  
#line 890 
  ldv_spin_model_unlock((char *)"lock_of_ath5k_txq");
  
#line 892 
  spin_unlock_bh_2(lock);
  
#line 893 
  return;
}


#line 896  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
static struct dentry *ldv_debugfs_create_file_75(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 900 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 900 
  return tmp;
}


#line 904  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
static struct dentry *ldv_debugfs_create_file_76(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 908 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 908 
  return tmp;
}


#line 912  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
static struct dentry *ldv_debugfs_create_file_77(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 916 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 916 
  return tmp;
}


#line 920  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
static struct dentry *ldv_debugfs_create_file_78(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 924 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 924 
  return tmp;
}


#line 928  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
static struct dentry *ldv_debugfs_create_file_79(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 932 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 932 
  return tmp;
}


#line 936  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
static struct dentry *ldv_debugfs_create_file_80(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 940 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 940 
  return tmp;
}


#line 944  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
static struct dentry *ldv_debugfs_create_file_81(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 948 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 948 
  return tmp;
}


#line 952  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
static struct dentry *ldv_debugfs_create_file_82(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 956 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 956 
  return tmp;
}


#line 960  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
static struct dentry *ldv_debugfs_create_file_83(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 964 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 964 
  return tmp;
}


#line 968  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
static struct dentry *ldv_debugfs_create_file_84(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 972 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 972 
  return tmp;
}


#line 976  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
static void ldv_spin_lock_bh_85(spinlock_t *lock)
{
  
#line 980 
  ldv_spin_model_lock((char *)"rxbuflock_of_ath5k_hw");
  
#line 982 
  spin_lock_bh_2(lock);
  
#line 983 
  return;
}


#line 986  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_debug.c.aux"
static void ldv_spin_unlock_bh_86(spinlock_t *lock)
{
  
#line 990 
  ldv_spin_model_unlock((char *)"rxbuflock_of_ath5k_hw");
  
#line 992 
  spin_unlock_bh_2(lock);
  
#line 993 
  return;
}


#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/byteorder/little_endian.h"
__inline static __u16 __le16_to_cpup(__le16 const *p)
{
  __u16 __retres;
  
#line 65 
  __retres = *p;
  
#line 65 
  return __retres;
}


#line 834  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt.h"
__inline static void arch_local_irq_restore(unsigned long f)
{
  
#line 836 
  unsigned long __edi = __edi;
  
#line 836 
  unsigned long __esi = __esi;
  
#line 836 
  unsigned long __edx = __edx;
  
#line 836 
  unsigned long __ecx = __ecx;
  
#line 836 
  unsigned long __eax = __eax;
  
#line 836 
  if ((long)(pv_irq_ops.restore_fl.func == (void *)0) != 0L) {
    
#line 838 
    ldv_inline_asm();
    
#line 836 
    ;
  }
  else ;
  
#line 839 
  ldv_inline_asm();
  
#line 841 
  return;
}


#line 839  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt.h"
__inline static void arch_local_irq_disable(void)
{
  
#line 841 
  unsigned long __edi = __edi;
  
#line 841 
  unsigned long __esi = __esi;
  
#line 841 
  unsigned long __edx = __edx;
  
#line 841 
  unsigned long __ecx = __ecx;
  
#line 841 
  unsigned long __eax = __eax;
  
#line 841 
  if ((long)(pv_irq_ops.irq_disable.func == (void *)0) != 0L) {
    
#line 843 
    ldv_inline_asm();
    
#line 841 
    ;
  }
  else ;
  
#line 844 
  ldv_inline_asm();
  
#line 846 
  return;
}


#line 849  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt.h"
__inline static unsigned long arch_local_irq_save(void)
{
  unsigned long f;
  
#line 853 
  f = arch_local_save_flags();
  
#line 854 
  arch_local_irq_disable();
  
#line 855 
  return f;
}


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqflags.h"
void trace_hardirqs_on(void);


#line 21 
void trace_hardirqs_off(void);


#line 7  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/unaligned/access_ok.h"
__inline static u16 get_unaligned_le16(void const *p)
{
  u16 tmp;
  
#line 9 
  tmp = __le16_to_cpup((__le16 const *)p);
  
#line 9 
  return tmp;
}


#line 4226  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__le16 ieee80211_generic_frame_duration(struct ieee80211_hw *, struct ieee80211_vif *, enum ieee80211_band, size_t, struct ieee80211_rate *);


#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath.h"
void ath_hw_setbssidmask(struct ath_common *);


#line 1501  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
unsigned int ath5k_hw_htoclock(struct ath5k_hw *ah, unsigned int usec);


#line 1502 
unsigned int ath5k_hw_clocktoh(struct ath5k_hw *ah, unsigned int clock);


#line 1533 
int ath5k_hw_get_frame_duration(struct ath5k_hw *ah, enum ieee80211_band band, int len, struct ieee80211_rate *rate, bool shortpre);


#line 1536 
unsigned int ath5k_hw_get_default_sifs(struct ath5k_hw *ah);


#line 1557 
void ath5k_hw_pcu_init(struct ath5k_hw *ah, enum nl80211_iftype op_mode);


#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c"
static unsigned int const ack_rates_high[12U] = {0U, 1U, 1U, 1U, 4U, 4U, 6U, 6U, 8U, 8U, 8U, 8U};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c"
int ath5k_hw_get_frame_duration(struct ath5k_hw *ah, enum ieee80211_band band, int len, struct ieee80211_rate *rate, bool shortpre)
{
  int __retres;
  int sifs;
  int preamble;
  int plcp_bits;
  int sym_time;
  int bitrate;
  int bits;
  int symbols;
  int symbol_bits;
  int dur;
  
#line 121 
  if ((unsigned int)ah->ah_bwmode == 0U) {
    
#line 122 
    __le16 raw_dur = ieee80211_generic_frame_duration(ah->hw,(struct ieee80211_vif *)0,band,(unsigned long)len,rate);
    
#line 126 
    dur = (int)raw_dur;
    
#line 127 
    if ((int)shortpre != 0) 
#line 128 
                            dur += -96; else ;
    
#line 130 
    __retres = dur;
    
#line 130 
    goto return_label;
  }
  else ;
  
#line 133 
  bitrate = (int)rate->bitrate;
  
#line 134 
  preamble = 20;
  
#line 135 
  plcp_bits = 22;
  
#line 136 
  sym_time = 4;
  
#line 138 
  switch ((int)ah->ah_bwmode) {
    case 3: 
#line 139 
    ;
    
#line 140 
    sifs = 6;
    
#line 141 
    preamble = 14;
    
#line 142 
    goto ldv_50424;
    case 2: 
#line 143 
    ;
    
#line 144 
    sifs = 32;
    
#line 145 
    preamble *= 2;
    
#line 146 
    sym_time *= 2;
    
#line 147 
    bitrate = (bitrate + 1) / 2;
    
#line 148 
    goto ldv_50424;
    case 1: 
#line 149 
    ;
    
#line 150 
    sifs = 64;
    
#line 151 
    preamble *= 4;
    
#line 152 
    sym_time *= 4;
    
#line 153 
    bitrate = (bitrate + 3) / 4;
    
#line 154 
    goto ldv_50424;
    default: 
#line 155 
    ;
    
#line 156 
    sifs = 10;
    
#line 157 
    goto ldv_50424;
  }
  ldv_50424: 
#line 160 
  ;
  
#line 160 
  bits = (len << 3) + plcp_bits;
  
#line 162 
  symbol_bits = bitrate * sym_time;
  
#line 163 
  symbols = ((bits * 10 + symbol_bits) + -1) / symbol_bits;
  
#line 165 
  dur = (sifs + preamble) + sym_time * symbols;
  
#line 167 
  __retres = dur;
  return_label: 
#line 167 
                return __retres;
}


#line 175  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c"
unsigned int ath5k_hw_get_default_slottime(struct ath5k_hw *ah)
{
  unsigned int slot_time;
  
#line 177 
  struct ieee80211_channel *channel = ah->ah_current_channel;
  
#line 180 
  switch ((int)ah->ah_bwmode) {
    case 3: 
#line 181 
    ;
    
#line 182 
    slot_time = 6U;
    
#line 183 
    goto ldv_50434;
    case 2: 
#line 184 
    ;
    
#line 185 
    slot_time = 13U;
    
#line 186 
    goto ldv_50434;
    case 1: 
#line 187 
    ;
    
#line 188 
    slot_time = 21U;
    
#line 189 
    goto ldv_50434;
    case 0: 
#line 190 
    ;
    default: 
#line 191 
    ;
    
#line 192 
    slot_time = 9U;
    
#line 193 
    if ((unsigned int)channel->hw_value == 1U && ! ah->ah_short_slot) 
      
#line 194 
      slot_time = 20U; else ;
    
#line 195 
    goto ldv_50434;
  }
  ldv_50434: 
#line 198 
  ;
  
#line 198 
  return slot_time;
}


#line 206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c"
unsigned int ath5k_hw_get_default_sifs(struct ath5k_hw *ah)
{
  unsigned int sifs;
  
#line 208 
  struct ieee80211_channel *channel = ah->ah_current_channel;
  
#line 211 
  switch ((int)ah->ah_bwmode) {
    case 3: 
#line 212 
    ;
    
#line 213 
    sifs = 6U;
    
#line 214 
    goto ldv_50445;
    case 2: 
#line 215 
    ;
    
#line 216 
    sifs = 32U;
    
#line 217 
    goto ldv_50445;
    case 1: 
#line 218 
    ;
    
#line 219 
    sifs = 64U;
    
#line 220 
    goto ldv_50445;
    case 0: 
#line 221 
    ;
    
#line 222 
    sifs = 10U;
    default: 
#line 223 
    ;
    
#line 224 
    if (channel->band == (unsigned int)IEEE80211_BAND_5GHZ) 
#line 225 
                                                            sifs = 16U; else ;
    
#line 226 
    goto ldv_50445;
  }
  ldv_50445: 
#line 229 
  ;
  
#line 229 
  return sifs;
}


#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c"
void ath5k_hw_update_mib_counters(struct ath5k_hw *ah)
{
  u32 tmp_0;
  unsigned int tmp;
  u32 tmp_2;
  unsigned int tmp_1;
  u32 tmp_4;
  unsigned int tmp_3;
  u32 tmp_6;
  unsigned int tmp_5;
  u32 tmp_8;
  unsigned int tmp_7;
  
#line 245 
  struct ath5k_statistics *stats = & ah->stats;
  
#line 248 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 248 
                                                   tmp = 32920U; else 
                                                                   
#line 248 
                                                                   tmp = 32912U;
  
#line 248 
  ;
  
#line 248 
  tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp));
  
#line 248 
  stats->ack_fail += tmp_0;
  
#line 249 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 249 
                                                   tmp_1 = 32916U; else 
                                                                    
#line 249 
                                                                    tmp_1 = 32908U;
  
#line 249 
  ;
  
#line 249 
  tmp_2 = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_1));
  
#line 249 
  stats->rts_fail += tmp_2;
  
#line 250 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 250 
                                                   tmp_3 = 32912U; else 
                                                                    
#line 250 
                                                                    tmp_3 = 32904U;
  
#line 250 
  ;
  
#line 250 
  tmp_4 = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_3));
  
#line 250 
  stats->rts_ok += tmp_4;
  
#line 251 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 251 
                                                   tmp_5 = 32924U; else 
                                                                    
#line 251 
                                                                    tmp_5 = 32916U;
  
#line 251 
  ;
  
#line 251 
  tmp_6 = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_5));
  
#line 251 
  stats->fcs_error += tmp_6;
  
#line 252 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 252 
                                                   tmp_7 = 32928U; else 
                                                                    
#line 252 
                                                                    tmp_7 = 32920U;
  
#line 252 
  ;
  
#line 252 
  tmp_8 = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_7));
  
#line 252 
  stats->beacons += tmp_8;
  
#line 253 
  return;
}


#line 277  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c"
__inline static void ath5k_hw_write_rate_duration(struct ath5k_hw *ah)
{
  struct ieee80211_rate *rate;
  unsigned int i;
  
#line 282 
  u8 band = (unsigned char)0U;
  
#line 285 
  i = 0U;
  
#line 285 
  goto ldv_50464;
  ldv_50463: 
#line 286 
  ;
  {
    u32 reg;
    u16 tx_time;
    int tmp;
    int tmp_0;
    
#line 289 
    if ((int)ah->ah_ack_bitrate_high != 0) 
#line 290 
                                           rate = ah->sbands[(int)band].bitrates + ack_rates_high[i];
    else 
      
#line 292 
      if (i <= 3U) 
#line 293 
                   rate = ah->sbands[(int)band].bitrates; else 
#line 296 
                                                               rate = ah->sbands[(int)band].bitrates + 4U;
    
#line 299 
    reg = (unsigned int)(((int)rate->hw_value << 2) + 34560);
    
#line 307 
    tmp = ath5k_hw_get_frame_duration(ah,(enum ieee80211_band)band,10,rate,(_Bool)0);
    
#line 307 
    tx_time = (unsigned short)tmp;
    
#line 310 
    ath5k_hw_reg_write(ah,(unsigned int)tx_time,(unsigned short)((int)((unsigned short)reg)));
    
#line 312 
    if ((rate->flags & 1U) == 0U) 
#line 313 
                                  goto ldv_50462; else ;
    
#line 315 
    tmp_0 = ath5k_hw_get_frame_duration(ah,(enum ieee80211_band)band,10,rate,(_Bool)1);
    
#line 315 
    tx_time = (unsigned short)tmp_0;
    
#line 316 
    ath5k_hw_reg_write(ah,(unsigned int)tx_time,(unsigned short)((int)((unsigned int)((unsigned short)reg) + 16U)));
  }
  ldv_50462: 
#line 319 
  ;
  
#line 285 
  i += 1U;
  ldv_50464: 
#line 286 
  ;
  
#line 285 
  if ((unsigned int)ah->sbands[(int)band].n_bitrates > i) 
#line 287 
                                                          goto ldv_50463; else 
                                                                    
#line 290 
                                                                    goto ldv_50465;
  ldv_50465: 
#line 291 
  ;
  
#line 292 
  return;
}


#line 327  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c"
static int ath5k_hw_set_ack_timeout(struct ath5k_hw *ah, unsigned int timeout)
{
  int __retres;
  unsigned int tmp;
  u32 tmp_0;
  unsigned int tmp_1;
  
#line 329 
  tmp = ath5k_hw_clocktoh(ah,8191U);
  
#line 329 
  ;
  
#line 329 
  if (tmp <= timeout) {
    
#line 331 
    __retres = -22;
    
#line 331 
    goto return_label;
  }
  else ;
  
#line 333 
  tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)32788);
  
#line 333 
  tmp_1 = ath5k_hw_htoclock(ah,timeout);
  
#line 333 
  ;
  
#line 333 
  ath5k_hw_reg_write(ah,(tmp_0 & 4294959104U) | (tmp_1 & 8191U),(unsigned short)32788);
  
#line 336 
  __retres = 0;
  return_label: 
#line 336 
                return __retres;
}


#line 345  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c"
static int ath5k_hw_set_cts_timeout(struct ath5k_hw *ah, unsigned int timeout)
{
  int __retres;
  unsigned int tmp;
  u32 tmp_0;
  unsigned int tmp_1;
  
#line 347 
  tmp = ath5k_hw_clocktoh(ah,8191U);
  
#line 347 
  ;
  
#line 347 
  if (tmp <= timeout) {
    
#line 349 
    __retres = -22;
    
#line 349 
    goto return_label;
  }
  else ;
  
#line 351 
  tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)32788);
  
#line 351 
  tmp_1 = ath5k_hw_htoclock(ah,timeout);
  
#line 351 
  ;
  
#line 351 
  ath5k_hw_reg_write(ah,(tmp_0 & 3758161919U) | ((tmp_1 << 16) & 536805376U),(unsigned short)32788);
  
#line 354 
  __retres = 0;
  return_label: 
#line 354 
                return __retres;
}


#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c"
int ath5k_hw_set_lladdr(struct ath5k_hw *ah, u8 const *mac)
{
  int __retres;
  u32 low_id;
  u32 high_id;
  u32 pcu_reg;
  u32 tmp_0;
  u16 tmp_1;
  
#line 372 
  struct ath_common *common = ath5k_hw_common(ah);
  
#line 377 
  memcpy((void *)(& common->macaddr),(void const *)mac,6UL);
  
#line 379 
  tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)32772);
  
#line 379 
  pcu_reg = tmp_0 & 4294901760U;
  
#line 381 
  low_id = get_unaligned_le32((void const *)mac);
  
#line 382 
  tmp_1 = get_unaligned_le16((void const *)(mac + 4U));
  
#line 382 
  high_id = (unsigned int)tmp_1;
  
#line 384 
  ath5k_hw_reg_write(ah,low_id,(unsigned short)32768);
  
#line 385 
  ath5k_hw_reg_write(ah,pcu_reg | high_id,(unsigned short)32772);
  
#line 387 
  __retres = 0;
  
#line 387 
  return __retres;
}


#line 398  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c"
void ath5k_hw_set_bssid(struct ath5k_hw *ah)
{
  u32 tmp_0;
  u16 tmp_1;
  unsigned int tmp_2;
  u32 tmp_4;
  unsigned int tmp_3;
  unsigned int tmp_5;
  
#line 400 
  struct ath_common *common = ath5k_hw_common(ah);
  
#line 401 
  u16 tim_offset = (unsigned short)0U;
  
#line 406 
  if (ah->ah_version == (unsigned int)AR5K_AR5212) 
#line 407 
                                                   ath_hw_setbssidmask(common); else ;
  
#line 412 
  tmp_0 = get_unaligned_le32((void const *)(& common->curbssid));
  
#line 412 
  ;
  
#line 412 
  ath5k_hw_reg_write(ah,tmp_0,(unsigned short)32776);
  
#line 416 
  tmp_1 = get_unaligned_le16((void const *)(& common->curbssid) + 4U);
  
#line 415 
  ;
  
#line 415 
  ;
  
#line 415 
  ath5k_hw_reg_write(ah,(unsigned int)((int)tmp_1 | (((int)common->curaid << 16) & 1073676288)),(unsigned short)32780);
  
#line 420 
  if ((unsigned int)common->curaid == 0U) {
    
#line 421 
    ath5k_hw_disable_pspoll(ah);
    
#line 422 
    goto return_label;
  }
  else ;
  
#line 425 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 425 
                                                   tmp_2 = 32804U; else 
                                                                    
#line 425 
                                                                    tmp_2 = 32800U;
  
#line 425 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 425 
                                                   tmp_3 = 32804U; else 
                                                                    
#line 425 
                                                                    tmp_3 = 32800U;
  
#line 425 
  ;
  
#line 425 
  tmp_4 = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_3));
  
#line 425 
  if ((unsigned int)tim_offset != 0U) 
#line 425 
                                      tmp_5 = (unsigned int)(((int)tim_offset + 4) << 16) & 8323072U; else 
                                                                    
#line 425 
                                                                    tmp_5 = 0U;
  
#line 425 
  ;
  
#line 425 
  ath5k_hw_reg_write(ah,(tmp_4 & 4286644223U) | tmp_5,(unsigned short)((int)tmp_2));
  
#line 428 
  ath5k_hw_enable_pspoll(ah,(u8 *)0U,(unsigned short)0);
  return_label: 
#line 429 
                return;
}


#line 447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c"
void ath5k_hw_set_bssid_mask(struct ath5k_hw *ah, u8 const *mask)
{
  
#line 449 
  struct ath_common *common = ath5k_hw_common(ah);
  
#line 453 
  memcpy((void *)(& common->bssidmask),(void const *)mask,6UL);
  
#line 454 
  if (ah->ah_version == (unsigned int)AR5K_AR5212) 
#line 455 
                                                   ath_hw_setbssidmask(common); else ;
  
#line 456 
  return;
}


#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c"
void ath5k_hw_set_mcast_filter(struct ath5k_hw *ah, u32 filter0, u32 filter1)
{
  unsigned int tmp;
  unsigned int tmp_0;
  
#line 467 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 467 
                                                   tmp = 32848U; else 
                                                                   
#line 467 
                                                                   tmp = 32832U;
  
#line 467 
  ;
  
#line 467 
  ;
  
#line 467 
  ath5k_hw_reg_write(ah,filter0,(unsigned short)((int)tmp));
  
#line 468 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 468 
                                                   tmp_0 = 32852U; else 
                                                                    
#line 468 
                                                                    tmp_0 = 32836U;
  
#line 468 
  ;
  
#line 468 
  ;
  
#line 468 
  ath5k_hw_reg_write(ah,filter1,(unsigned short)((int)tmp_0));
  
#line 469 
  return;
}


#line 482  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c"
u32 ath5k_hw_get_rx_filter(struct ath5k_hw *ah)
{
  u32 data;
  unsigned int tmp;
  
#line 484 
  u32 filter = 0U;
  
#line 486 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 486 
                                                   tmp = 32844U; else 
                                                                   
#line 486 
                                                                   tmp = 32828U;
  
#line 486 
  ;
  
#line 486 
  filter = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp));
  
#line 489 
  if (ah->ah_version == (unsigned int)AR5K_AR5212) {
    
#line 490 
    data = ath5k_hw_reg_read(ah,(unsigned short)33036);
    
#line 492 
    if ((data & 32U) != 0U) {
      int tmp_0;
      
#line 493 
      if (ah->ah_version == (unsigned int)AR5K_AR5211) 
#line 493 
                                                       tmp_0 = 128; else 
                                                                    
#line 493 
                                                                    tmp_0 = 512;
      
#line 493 
      filter = (unsigned int)tmp_0 | filter;
    }
    else ;
    
#line 494 
    if ((data & 33685504U) != 0U) {
      int tmp_1;
      
#line 495 
      if (ah->ah_version == (unsigned int)AR5K_AR5211) 
#line 495 
                                                       tmp_1 = 64; else 
                                                                    
#line 495 
                                                                    tmp_1 = 256;
      
#line 495 
      filter = (unsigned int)tmp_1 | filter;
    }
    else ;
  }
  else ;
  
#line 498 
  return filter;
}


#line 511  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c"
void ath5k_hw_set_rx_filter(struct ath5k_hw *ah, u32 filter)
{
  unsigned int tmp_5;
  
#line 513 
  u32 data = 0U;
  
#line 516 
  if (ah->ah_version == (unsigned int)AR5K_AR5212) {
    int tmp;
    int tmp_0;
    
#line 517 
    if (ah->ah_version == (unsigned int)AR5K_AR5211) 
#line 517 
                                                     tmp = 128; else 
                                                                  
#line 517 
                                                                  tmp = 512;
    
#line 517 
    ;
    
#line 517 
    if (((unsigned int)tmp & filter) != 0U) 
#line 518 
                                            data |= 32U; else ;
    
#line 519 
    if (ah->ah_version == (unsigned int)AR5K_AR5211) 
#line 519 
                                                     tmp_0 = 64; else 
                                                                   
#line 519 
                                                                   tmp_0 = 256;
    
#line 519 
    ;
    
#line 519 
    if (((unsigned int)tmp_0 & filter) != 0U) 
#line 520 
                                              data |= 33685504U; else ;
  }
  else ;
  
#line 526 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) {
    int tmp_2;
    
#line 527 
    if (ah->ah_version == (unsigned int)AR5K_AR5211) 
#line 527 
                                                     tmp_2 = 128; else 
                                                                    
#line 527 
                                                                    tmp_2 = 512;
    
#line 526 
    ;
    
#line 526 
    if (((unsigned int)tmp_2 & filter) != 0U) {
      int tmp_1;
      
#line 528 
      if (ah->ah_version == (unsigned int)AR5K_AR5211) 
#line 528 
                                                       tmp_1 = 128; else 
                                                                    
#line 528 
                                                                    tmp_1 = 512;
      
#line 528 
      filter = (unsigned int)tmp_1 & filter;
      
#line 529 
      filter |= 32U;
    }
    else ;
  }
  else ;
  
#line 533 
  if (data != 0U) {
    u32 tmp_3;
    
#line 534 
    tmp_3 = ath5k_hw_reg_read(ah,(unsigned short)52);
    
#line 534 
    ;
    
#line 534 
    ath5k_hw_reg_write(ah,tmp_3 | 8U,(unsigned short)52);
  }
  else {
    u32 tmp_4;
    
#line 536 
    tmp_4 = ath5k_hw_reg_read(ah,(unsigned short)52);
    
#line 536 
    ;
    
#line 536 
    ath5k_hw_reg_write(ah,tmp_4 & 4294967287U,(unsigned short)52);
  }
  
#line 539 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 539 
                                                   tmp_5 = 32844U; else 
                                                                    
#line 539 
                                                                    tmp_5 = 32828U;
  
#line 539 
  ;
  
#line 539 
  ;
  
#line 539 
  ath5k_hw_reg_write(ah,filter & 255U,(unsigned short)((int)tmp_5));
  
#line 542 
  if (ah->ah_version == (unsigned int)AR5K_AR5212) 
#line 543 
                                                   ath5k_hw_reg_write(ah,data,(unsigned short)33036); else ;
  
#line 544 
  return;
}


#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c"
u64 ath5k_hw_get_tsf64(struct ath5k_hw *ah)
{
  u64 __retres;
  u32 tsf_lower;
  u32 tsf_upper1;
  u32 tsf_upper2;
  int i;
  unsigned long flags;
  unsigned int tmp;
  unsigned int tmp_0;
  unsigned int tmp_1;
  int tmp_3;
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 568 
  flags = arch_local_irq_save();
  
#line 568 
  trace_hardirqs_off();
  
#line 582 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 582 
                                                   tmp = 32880U; else 
                                                                   
#line 582 
                                                                   tmp = 32848U;
  
#line 582 
  ;
  
#line 582 
  tsf_upper1 = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp));
  
#line 583 
  i = 0;
  
#line 583 
  goto ldv_50520;
  ldv_50519: 
#line 584 
  ;
  
#line 584 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 584 
                                                   tmp_0 = 32876U; else 
                                                                    
#line 584 
                                                                    tmp_0 = 32844U;
  
#line 584 
  ;
  
#line 584 
  tsf_lower = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_0));
  
#line 585 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 585 
                                                   tmp_1 = 32880U; else 
                                                                    
#line 585 
                                                                    tmp_1 = 32848U;
  
#line 585 
  ;
  
#line 585 
  tsf_upper2 = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_1));
  
#line 586 
  if (tsf_upper2 == tsf_upper1) 
#line 587 
                                goto ldv_50518; else ;
  
#line 588 
  tsf_upper1 = tsf_upper2;
  
#line 583 
  i += 1;
  ldv_50520: 
#line 584 
  ;
  
#line 583 
  if (i <= 9) 
#line 585 
              goto ldv_50519; else 
#line 588 
                                   goto ldv_50518;
  ldv_50518: 
#line 589 
  ;
  {
    unsigned long __dummy_2;
    unsigned long __dummy2_2;
    
  }
  
#line 591 
  tmp_3 = arch_irqs_disabled_flags(flags);
  
#line 591 
  if (tmp_3 != 0) {
    {
      unsigned long __dummy_0;
      unsigned long __dummy2_0;
      
    }
    
#line 591 
    arch_local_irq_restore(flags);
    
#line 591 
    trace_hardirqs_off();
  }
  else {
    
#line 591 
    trace_hardirqs_on();
    {
      unsigned long __dummy_1;
      unsigned long __dummy2_1;
      
    }
    
#line 591 
    arch_local_irq_restore(flags);
  }
  {
    
#line 593 
    int __ret_warn_on = i == 10;
    
#line 593 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 593 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c",593); else ;
    
#line 593 
    long tmp_4 = (long)(__ret_warn_on != 0);
  }
  
#line 595 
  __retres = ((unsigned long long)tsf_upper1 << 32) | (unsigned long long)tsf_lower;
  
#line 595 
  return __retres;
}


#line 608  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c"
void ath5k_hw_set_tsf64(struct ath5k_hw *ah, u64 tsf64)
{
  unsigned int tmp;
  unsigned int tmp_0;
  
#line 610 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 610 
                                                   tmp = 32876U; else 
                                                                   
#line 610 
                                                                   tmp = 32844U;
  
#line 610 
  ;
  
#line 610 
  ;
  
#line 610 
  ath5k_hw_reg_write(ah,(unsigned int)tsf64,(unsigned short)((int)tmp));
  
#line 611 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 611 
                                                   tmp_0 = 32880U; else 
                                                                    
#line 611 
                                                                    tmp_0 = 32848U;
  
#line 611 
  ;
  
#line 611 
  ;
  
#line 611 
  ath5k_hw_reg_write(ah,(unsigned int)(tsf64 >> 32),(unsigned short)((int)tmp_0));
  
#line 612 
  return;
}


#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c"
void ath5k_hw_reset_tsf(struct ath5k_hw *ah)
{
  u32 val;
  u32 tmp_0;
  unsigned int tmp;
  unsigned int tmp_1;
  unsigned int tmp_2;
  
#line 625 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 625 
                                                   tmp = 32804U; else 
                                                                   
#line 625 
                                                                   tmp = 32800U;
  
#line 625 
  ;
  
#line 625 
  tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp));
  
#line 625 
  val = tmp_0 | 16777216U;
  
#line 633 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 633 
                                                   tmp_1 = 32804U; else 
                                                                    
#line 633 
                                                                    tmp_1 = 32800U;
  
#line 633 
  ;
  
#line 633 
  ;
  
#line 633 
  ath5k_hw_reg_write(ah,val,(unsigned short)((int)tmp_1));
  
#line 634 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 634 
                                                   tmp_2 = 32804U; else 
                                                                    
#line 634 
                                                                    tmp_2 = 32800U;
  
#line 634 
  ;
  
#line 634 
  ;
  
#line 634 
  ath5k_hw_reg_write(ah,val,(unsigned short)((int)tmp_2));
  
#line 635 
  return;
}


#line 647  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c"
void ath5k_hw_init_beacon_timers(struct ath5k_hw *ah, u32 next_beacon, u32 interval)
{
  u32 timer1;
  u32 timer2;
  u32 timer3;
  unsigned int tmp_3;
  unsigned int tmp_4;
  unsigned int tmp_5;
  unsigned int tmp_6;
  unsigned int tmp_7;
  u32 tmp_8;
  
#line 654 
  switch ((unsigned int)ah->opmode) {
    u32 tmp;
    int tmp_0;
    u32 tmp_1;
    case (unsigned int)6: 
#line 655 
    ;
    case (unsigned int)2: 
#line 656 
    ;
    
#line 661 
    if (ah->ah_version == (unsigned int)AR5K_AR5210) {
      
#line 662 
      timer1 = 4294967295U;
      
#line 663 
      timer2 = 4294967295U;
    }
    else {
      
#line 665 
      timer1 = 65535U;
      
#line 666 
      timer2 = 524287U;
    }
    
#line 669 
    tmp = ath5k_hw_reg_read(ah,(unsigned short)32772);
    
#line 669 
    if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 669 
                                                     tmp_0 = 2097152; else 
                                                                    
#line 669 
                                                                    tmp_0 = 1048576;
    
#line 669 
    ;
    
#line 669 
    ath5k_hw_reg_write(ah,tmp & (unsigned int)tmp_0,(unsigned short)32772);
    
#line 670 
    goto ldv_50551;
    case (unsigned int)1: 
#line 671 
    ;
    
#line 672 
    tmp_1 = ath5k_hw_reg_read(ah,(unsigned short)48);
    
#line 672 
    ;
    
#line 672 
    ath5k_hw_reg_write(ah,tmp_1 | 2048U,(unsigned short)48);
    default: 
#line 673 
    ;
    
#line 677 
    timer1 = (next_beacon + 4294967294U) << 3;
    
#line 678 
    timer2 = (next_beacon + 4294967286U) << 3;
    
#line 679 
    goto ldv_50551;
  }
  ldv_50551: 
#line 685 
  ;
  
#line 685 
  timer3 = next_beacon + 1U;
  
#line 691 
  if (ah->opmode == (unsigned int)NL80211_IFTYPE_AP || ah->opmode == (unsigned int)NL80211_IFTYPE_MESH_POINT) {
    unsigned int tmp_2;
    
#line 693 
    if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 693 
                                                     tmp_2 = 32812U; else 
                                                                    
#line 693 
                                                                    tmp_2 = 32808U;
    
#line 693 
    ;
    
#line 693 
    ath5k_hw_reg_write(ah,0U,(unsigned short)((int)tmp_2));
  }
  else ;
  
#line 695 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 695 
                                                   tmp_3 = 32812U; else 
                                                                    
#line 695 
                                                                    tmp_3 = 32808U;
  
#line 695 
  ;
  
#line 695 
  ;
  
#line 695 
  ath5k_hw_reg_write(ah,next_beacon,(unsigned short)((int)tmp_3));
  
#line 696 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 696 
                                                   tmp_4 = 32816U; else 
                                                                    
#line 696 
                                                                    tmp_4 = 32812U;
  
#line 696 
  ;
  
#line 696 
  ;
  
#line 696 
  ath5k_hw_reg_write(ah,timer1,(unsigned short)((int)tmp_4));
  
#line 697 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 697 
                                                   tmp_5 = 32820U; else 
                                                                    
#line 697 
                                                                    tmp_5 = 32816U;
  
#line 697 
  ;
  
#line 697 
  ;
  
#line 697 
  ath5k_hw_reg_write(ah,timer2,(unsigned short)((int)tmp_5));
  
#line 698 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 698 
                                                   tmp_6 = 32824U; else 
                                                                    
#line 698 
                                                                    tmp_6 = 32820U;
  
#line 698 
  ;
  
#line 698 
  ;
  
#line 698 
  ath5k_hw_reg_write(ah,timer3,(unsigned short)((int)tmp_6));
  
#line 701 
  if ((interval & 16777216U) != 0U) 
#line 702 
                                    ath5k_hw_reset_tsf(ah); else ;
  
#line 704 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 704 
                                                   tmp_7 = 32804U; else 
                                                                    
#line 704 
                                                                    tmp_7 = 32800U;
  
#line 704 
  ;
  
#line 704 
  ;
  
#line 704 
  ath5k_hw_reg_write(ah,interval & 8454143U,(unsigned short)((int)tmp_7));
  
#line 713 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 714 
                                                   ath5k_hw_reg_write(ah,262144U,(unsigned short)28); else 
                                                                    
#line 716 
                                                                    ath5k_hw_reg_write(ah,262144U,(unsigned short)128);
  
#line 721 
  tmp_8 = ath5k_hw_reg_read(ah,(unsigned short)32772);
  
#line 721 
  ;
  
#line 721 
  ath5k_hw_reg_write(ah,tmp_8 & 4294705151U,(unsigned short)32772);
  
#line 722 
  return;
}


#line 739  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c"
__inline static bool ath5k_check_timer_win(int a, int b, int window, int intval)
{
  bool __retres;
  
#line 747 
  if (((b - a == window || a - b == intval - window) || (a | 65536) - b == intval - window) || (b | 65536) - a == window) {
    
#line 751 
    __retres = (_Bool)1;
    
#line 751 
    goto return_label;
  }
  else ;
  
#line 752 
  __retres = (_Bool)0;
  return_label: 
#line 752 
                return __retres;
}


#line 795  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c"
bool ath5k_hw_check_beacon_timers(struct ath5k_hw *ah, int intval)
{
  bool __retres;
  unsigned int nbtt;
  unsigned int atim;
  unsigned int dma;
  unsigned int tmp;
  unsigned int tmp_0;
  u32 tmp_2;
  unsigned int tmp_1;
  bool tmp_3;
  
#line 799 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 799 
                                                   tmp = 32812U; else 
                                                                   
#line 799 
                                                                   tmp = 32808U;
  
#line 799 
  ;
  
#line 799 
  nbtt = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp));
  
#line 800 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 800 
                                                   tmp_0 = 32824U; else 
                                                                    
#line 800 
                                                                    tmp_0 = 32820U;
  
#line 800 
  ;
  
#line 800 
  atim = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_0));
  
#line 801 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 801 
                                                   tmp_1 = 32816U; else 
                                                                    
#line 801 
                                                                    tmp_1 = 32812U;
  
#line 801 
  ;
  
#line 801 
  tmp_2 = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_1));
  
#line 801 
  dma = tmp_2 >> 3;
  
#line 807 
  tmp_3 = ath5k_check_timer_win((int)nbtt,(int)atim,1,intval);
  
#line 807 
  if ((int)tmp_3 != 0) {
    bool tmp_4;
    
#line 807 
    tmp_4 = ath5k_check_timer_win((int)dma,(int)nbtt,2,intval);
    
#line 807 
    if ((int)tmp_4 != 0) {
      
#line 810 
      __retres = (_Bool)1;
      
#line 810 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 811 
  __retres = (_Bool)0;
  return_label: 
#line 811 
                return __retres;
}


#line 822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c"
void ath5k_hw_set_coverage_class(struct ath5k_hw *ah, u8 coverage_class)
{
  unsigned int tmp;
  unsigned int tmp_0;
  
#line 825 
  tmp = ath5k_hw_get_default_slottime(ah);
  
#line 825 
  int slot_time = (int)(tmp + (unsigned int)((int)coverage_class * 3));
  
#line 826 
  tmp_0 = ath5k_hw_get_default_sifs(ah);
  
#line 826 
  int ack_timeout = (int)(tmp_0 + (unsigned int)slot_time);
  
#line 827 
  int cts_timeout = ack_timeout;
  
#line 829 
  ath5k_hw_set_ifs_intervals(ah,(unsigned int)slot_time);
  
#line 830 
  ath5k_hw_set_ack_timeout(ah,(unsigned int)ack_timeout);
  
#line 831 
  ath5k_hw_set_cts_timeout(ah,(unsigned int)cts_timeout);
  
#line 833 
  ah->ah_coverage_class = coverage_class;
  
#line 834 
  return;
}


#line 850  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c"
void ath5k_hw_start_rx_pcu(struct ath5k_hw *ah)
{
  unsigned int tmp;
  u32 tmp_1;
  unsigned int tmp_0;
  int tmp_2;
  
#line 852 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 852 
                                                   tmp = 32872U; else 
                                                                   
#line 852 
                                                                   tmp = 32840U;
  
#line 852 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 852 
                                                   tmp_0 = 32872U; else 
                                                                    
#line 852 
                                                                    tmp_0 = 32840U;
  
#line 852 
  ;
  
#line 852 
  tmp_1 = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_0));
  
#line 852 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 852 
                                                   tmp_2 = 64; else 
#line 852 
                                                                    tmp_2 = 32;
  
#line 852 
  ;
  
#line 852 
  ath5k_hw_reg_write(ah,tmp_1 & (unsigned int)tmp_2,(unsigned short)((int)tmp));
  
#line 853 
  return;
}


#line 862  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c"
void ath5k_hw_stop_rx_pcu(struct ath5k_hw *ah)
{
  unsigned int tmp;
  u32 tmp_1;
  unsigned int tmp_0;
  int tmp_2;
  
#line 864 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 864 
                                                   tmp = 32872U; else 
                                                                   
#line 864 
                                                                   tmp = 32840U;
  
#line 864 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 864 
                                                   tmp_0 = 32872U; else 
                                                                    
#line 864 
                                                                    tmp_0 = 32840U;
  
#line 864 
  ;
  
#line 864 
  tmp_1 = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_0));
  
#line 864 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 864 
                                                   tmp_2 = 64; else 
#line 864 
                                                                    tmp_2 = 32;
  
#line 864 
  ;
  
#line 864 
  ath5k_hw_reg_write(ah,tmp_1 | (unsigned int)tmp_2,(unsigned short)((int)tmp));
  
#line 865 
  return;
}


#line 875  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c"
int ath5k_hw_set_opmode(struct ath5k_hw *ah, enum nl80211_iftype op_mode)
{
  int __retres;
  u32 pcu_reg;
  u32 beacon_reg;
  u32 low_id;
  u32 high_id;
  u32 tmp_1;
  int tmp_2;
  u16 tmp_7;
  
#line 877 
  struct ath_common *common = ath5k_hw_common(ah);
  
#line 880 
  if ((long)((ah->debug.level & 4U) != 0U) != 0L) {
    int tmp_0;
    
#line 880 
    tmp_0 = net_ratelimit();
    
#line 880 
    if ((long)(tmp_0 != 0) != 0L) 
#line 880 
                                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_hw_set_opmode",880,(unsigned int)op_mode); else ;
  }
  else ;
  
#line 883 
  tmp_1 = ath5k_hw_reg_read(ah,(unsigned short)32772);
  
#line 883 
  pcu_reg = tmp_1 & 4294901760U;
  
#line 884 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 884 
                                                   tmp_2 = 269942784; else 
                                                                    
#line 884 
                                                                    tmp_2 = 268632064;
  
#line 884 
  pcu_reg = (unsigned int)tmp_2 & pcu_reg;
  
#line 889 
  beacon_reg = 0U;
  
#line 891 
  switch ((unsigned int)op_mode) {
    int tmp_5;
    int tmp_6;
    case (unsigned int)1: 
#line 892 
    ;
    
#line 893 
    pcu_reg |= 268566528U;
    
#line 894 
    beacon_reg |= 1U;
    
#line 895 
    if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 896 
                                                     pcu_reg |= 1048576U;
    else {
      u32 tmp_3;
      
#line 898 
      tmp_3 = ath5k_hw_reg_read(ah,(unsigned short)20);
      
#line 898 
      ;
      
#line 898 
      ath5k_hw_reg_write(ah,tmp_3 | 32U,(unsigned short)20);
    }
    
#line 899 
    goto ldv_50591;
    case (unsigned int)3: 
#line 901 
    ;
    case (unsigned int)7: 
#line 902 
    ;
    
#line 903 
    pcu_reg |= 268500992U;
    
#line 904 
    beacon_reg = beacon_reg;
    
#line 905 
    if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 906 
                                                     pcu_reg |= 1048576U;
    else {
      u32 tmp_4;
      
#line 908 
      tmp_4 = ath5k_hw_reg_read(ah,(unsigned short)20);
      
#line 908 
      ;
      
#line 908 
      ath5k_hw_reg_write(ah,tmp_4 & 4294967263U,(unsigned short)20);
    }
    
#line 909 
    goto ldv_50591;
    case (unsigned int)2: 
#line 911 
    ;
    
#line 913 
    if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 913 
                                                     tmp_5 = 268697600; else 
                                                                    
#line 913 
                                                                    tmp_5 = 268435456;
    
#line 912 
    pcu_reg = (unsigned int)tmp_5 | pcu_reg;
    case (unsigned int)6: 
#line 916 
    ;
    
#line 918 
    if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 918 
                                                     tmp_6 = 269484032; else 
                                                                    
#line 918 
                                                                    tmp_6 = 268435456;
    
#line 917 
    pcu_reg = (unsigned int)tmp_6 | pcu_reg;
    
#line 920 
    goto ldv_50591;
    default: 
#line 922 
    ;
    
#line 923 
    __retres = -22;
    
#line 923 
    goto return_label;
  }
  ldv_50591: 
#line 929 
  ;
  
#line 929 
  low_id = get_unaligned_le32((void const *)(& common->macaddr));
  
#line 930 
  tmp_7 = get_unaligned_le16((void const *)(& common->macaddr) + 4U);
  
#line 930 
  high_id = (unsigned int)tmp_7;
  
#line 931 
  ath5k_hw_reg_write(ah,low_id,(unsigned short)32768);
  
#line 932 
  ath5k_hw_reg_write(ah,pcu_reg | high_id,(unsigned short)32772);
  
#line 937 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 938 
                                                   ath5k_hw_reg_write(ah,beacon_reg,(unsigned short)40); else ;
  
#line 940 
  __retres = 0;
  return_label: 
#line 940 
                return __retres;
}


#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/pcu.c"
void ath5k_hw_pcu_init(struct ath5k_hw *ah, enum nl80211_iftype op_mode)
{
  
#line 956 
  ath5k_hw_set_bssid(ah);
  
#line 959 
  ath5k_hw_set_opmode(ah,op_mode);
  
#line 965 
  if (ah->ah_version == (unsigned int)AR5K_AR5212 && (unsigned int)ah->nvifs != 0U) 
    
#line 967 
    ath5k_hw_write_rate_duration(ah); else ;
  
#line 977 
  ath5k_hw_reg_write(ah,1921U,(unsigned short)32792);
  
#line 983 
  if (ah->ah_mac_srev > 119U) {
    
#line 984 
    ath5k_hw_reg_write(ah,65706U,(unsigned short)33048);
    
#line 985 
    ath5k_hw_reg_write(ah,12816U,(unsigned short)33052);
  }
  else ;
  
#line 989 
  if (ah->ah_version == (unsigned int)AR5K_AR5212) 
#line 990 
                                                   ath5k_hw_reg_write(ah,82U,(unsigned short)33032); else ;
  
#line 998 
  if ((unsigned int)ah->ah_coverage_class != 0U) 
#line 999 
                                                 ath5k_hw_set_coverage_class(ah,(unsigned char)((int)ah->ah_coverage_class)); else ;
  
#line 1002 
  if (ah->ah_version == (unsigned int)AR5K_AR5212) {
    
#line 1003 
    u32 val = 50331648U;
    
#line 1004 
    if ((int)ah->ah_ack_bitrate_high != 0) {
      u32 tmp;
      
#line 1005 
      tmp = ath5k_hw_reg_read(ah,(unsigned short)32772);
      
#line 1005 
      ;
      
#line 1005 
      ;
      
#line 1005 
      ath5k_hw_reg_write(ah,tmp & ~ val,(unsigned short)32772);
    }
    else {
      u32 tmp_0;
      
#line 1007 
      tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)32772);
      
#line 1007 
      ;
      
#line 1007 
      ;
      
#line 1007 
      ath5k_hw_reg_write(ah,tmp_0 | val,(unsigned short)32772);
    }
  }
  else ;
  
#line 1009 
  return;
}


#line 1574  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/ath5k.h"
int ath5k_hw_init_queues(struct ath5k_hw *ah);


#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/reset.c"
int ath5k_hw_register_timeout(struct ath5k_hw *ah, u32 reg, u32 flag, u32 val, bool is_set)
{
  int i;
  u32 data;
  int tmp;
  
#line 73 
  i = 20000;
  
#line 73 
  goto ldv_52207;
  ldv_52206: 
#line 74 
  ;
  
#line 74 
  data = ath5k_hw_reg_read(ah,(unsigned short)((int)((unsigned short)reg)));
  
#line 75 
  if ((int)is_set != 0 && (data & flag) != 0U) 
#line 76 
                                               goto ldv_52205;
  else 
    
#line 77 
    if ((data & flag) == val) 
#line 78 
                              goto ldv_52205; else ;
  
#line 79 
  __const_udelay(64425UL);
  
#line 73 
  i -= 1;
  ldv_52207: 
#line 74 
  ;
  
#line 73 
  if (i > 0) 
#line 75 
             goto ldv_52206; else 
#line 78 
                                  goto ldv_52205;
  ldv_52205: 
#line 79 
  ;
  
#line 82 
  if (i <= 0) 
#line 82 
              tmp = -11; else 
#line 82 
                              tmp = 0;
  
#line 82 
  return tmp;
}


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/reset.c"
unsigned int ath5k_hw_htoclock(struct ath5k_hw *ah, unsigned int usec)
{
  unsigned int __retres;
  
#line 103 
  struct ath_common *common = ath5k_hw_common(ah);
  
#line 104 
  __retres = common->clockrate * usec;
  
#line 104 
  return __retres;
}


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/reset.c"
unsigned int ath5k_hw_clocktoh(struct ath5k_hw *ah, unsigned int clock)
{
  unsigned int __retres;
  
#line 120 
  struct ath_common *common = ath5k_hw_common(ah);
  
#line 121 
  __retres = clock / common->clockrate;
  
#line 121 
  return __retres;
}


#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/reset.c"
static void ath5k_hw_init_core_clock(struct ath5k_hw *ah)
{
  u32 usec_reg;
  u32 txlat;
  u32 rxlat;
  u32 usec;
  u32 clock;
  u32 sclock;
  u32 txf2txs;
  unsigned int tmp_1;
  
#line 134 
  struct ieee80211_channel *channel = ah->ah_current_channel;
  
#line 135 
  struct ath_common *common = ath5k_hw_common(ah);
  
#line 141 
  switch ((int)channel->hw_value) {
    case 0: 
#line 142 
    ;
    
#line 143 
    clock = 40U;
    
#line 144 
    goto ldv_52231;
    case 1: 
#line 145 
    ;
    
#line 146 
    clock = 22U;
    
#line 147 
    goto ldv_52231;
    case 2: 
#line 148 
    ;
    default: 
#line 149 
    ;
    
#line 150 
    clock = 44U;
    
#line 151 
    goto ldv_52231;
  }
  ldv_52231: 
#line 156 
  ;
  
#line 156 
  switch ((int)ah->ah_bwmode) {
    case 3: 
#line 157 
    ;
    
#line 158 
    clock *= 2U;
    
#line 159 
    goto ldv_52236;
    case 2: 
#line 160 
    ;
    
#line 161 
    clock /= 2U;
    
#line 162 
    goto ldv_52236;
    case 1: 
#line 163 
    ;
    
#line 164 
    clock /= 4U;
    
#line 165 
    goto ldv_52236;
    default: 
#line 166 
    ;
    
#line 167 
    goto ldv_52236;
  }
  ldv_52236: 
#line 170 
  ;
  
#line 170 
  common->clockrate = clock;
  
#line 176 
  usec = clock + 4294967295U;
  
#line 177 
  usec &= 127U;
  
#line 180 
  if (ah->ah_version != (unsigned int)AR5K_AR5210) {
    u32 tmp_0;
    
#line 181 
    tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)4336);
    
#line 181 
    ;
    
#line 181 
    ;
    
#line 181 
    ath5k_hw_reg_write(ah,(tmp_0 & 4293919743U) | ((clock << 10) & 1047552U),(unsigned short)4336);
  }
  else ;
  
#line 189 
  if ((unsigned int)ah->ah_radio + 4294967294U <= 4U) 
#line 192 
                                                      sclock = 39U; else 
                                                                    
#line 194 
                                                                    sclock = 31U;
  
#line 195 
  sclock = (sclock << 7) & 16256U;
  
#line 200 
  usec_reg = ath5k_hw_reg_read(ah,(unsigned short)32796);
  
#line 201 
  txlat = (usec_reg >> 14) & 511U;
  
#line 202 
  rxlat = (usec_reg >> 23) & 63U;
  
#line 207 
  txf2txs = 14U;
  
#line 214 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) {
    
#line 216 
    txlat = 54U;
    
#line 217 
    rxlat = 29U;
  }
  else ;
  
#line 220 
  if (ah->ah_mac_srev <= 63U) {
    
#line 228 
    txlat = (txlat << 14) & 1032192U;
    
#line 229 
    rxlat = (rxlat << 20) & 66060288U;
  }
  else {
    
#line 231 
    switch ((int)ah->ah_bwmode) {
      case 2: 
#line 232 
      ;
      
#line 233 
      txlat = (txlat * 2U << 14) & 8372224U;
      
#line 235 
      rxlat = 528482304U;
      
#line 237 
      txf2txs = 12U;
      
#line 238 
      goto ldv_52241;
      case 1: 
#line 239 
      ;
      
#line 240 
      txlat = (txlat * 4U << 14) & 8372224U;
      
#line 242 
      rxlat = 528482304U;
      
#line 244 
      txf2txs = 13U;
      
#line 245 
      goto ldv_52241;
      case 3: 
#line 246 
      ;
      
#line 247 
      txlat = 32U;
      
#line 248 
      rxlat = (rxlat / 2U << 23) & 528482304U;
      
#line 250 
      txf2txs = 14U;
      
#line 251 
      goto ldv_52241;
      default: 
#line 252 
      ;
      
#line 253 
      goto ldv_52241;
    }
    ldv_52241: 
#line 256 
    ;
  }
  
#line 256 
  usec_reg = ((usec | sclock) | txlat) | rxlat;
  
#line 257 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 257 
                                                   tmp_1 = 32800U; else 
                                                                    
#line 257 
                                                                    tmp_1 = 32796U;
  
#line 257 
  ;
  
#line 257 
  ;
  
#line 257 
  ath5k_hw_reg_write(ah,usec_reg,(unsigned short)((int)tmp_1));
  
#line 260 
  if (ah->ah_radio == (unsigned int)AR5K_RF5112) {
    u32 tmp_2;
    
#line 261 
    tmp_2 = ath5k_hw_reg_read(ah,(unsigned short)38948);
    
#line 261 
    ;
    
#line 261 
    ;
    
#line 261 
    ath5k_hw_reg_write(ah,(tmp_2 & 4294967280U) | (txf2txs & 15U),(unsigned short)38948);
  }
  else ;
  
#line 262 
  return;
}


#line 281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/reset.c"
static void ath5k_hw_set_sleep_clock(struct ath5k_hw *ah, bool enable)
{
  u32 scal;
  u32 spending;
  u32 sclock;
  
#line 283 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 288 
  if (((((int)ee->ee_misc1 >> 14) & 1) != 0 || (((int)ee->ee_misc1 >> 15) & 1) != 0) && (int)enable != 0) {
    u32 tmp;
    u32 tmp_0;
    u32 tmp_3;
    
#line 293 
    tmp = ath5k_hw_reg_read(ah,(unsigned short)32796);
    
#line 293 
    ;
    
#line 293 
    ath5k_hw_reg_write(ah,(tmp & 4294951039U) | 128U,(unsigned short)32796);
    
#line 295 
    tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)33028);
    
#line 295 
    ;
    
#line 295 
    ath5k_hw_reg_write(ah,(tmp_0 & 4294967040U) | 61U,(unsigned short)33028);
    
#line 299 
    ath5k_hw_reg_write(ah,31U,(unsigned short)39024);
    
#line 301 
    if (((ah->ah_radio == (unsigned int)AR5K_RF5112 || ah->ah_radio == (unsigned int)AR5K_RF5413) || ah->ah_radio == (unsigned int)AR5K_RF2316) || (unsigned int)ah->ah_mac_version == 15U) 
      
#line 305 
      spending = 20U; else 
#line 307 
                           spending = 24U;
    
#line 308 
    ath5k_hw_reg_write(ah,spending,(unsigned short)39416);
    
#line 310 
    if ((ah->ah_radio == (unsigned int)AR5K_RF5112 || ah->ah_radio == (unsigned int)AR5K_RF5413) || (unsigned int)ah->ah_mac_version == 15U) {
      u32 tmp_1;
      
#line 313 
      ath5k_hw_reg_write(ah,38U,(unsigned short)39028);
      
#line 314 
      ath5k_hw_reg_write(ah,13U,(unsigned short)39032);
      
#line 315 
      ath5k_hw_reg_write(ah,7U,(unsigned short)39408);
      
#line 316 
      ath5k_hw_reg_write(ah,63U,(unsigned short)39412);
      
#line 317 
      tmp_1 = ath5k_hw_reg_read(ah,(unsigned short)16400);
      
#line 317 
      ;
      
#line 317 
      ath5k_hw_reg_write(ah,(tmp_1 & 4244635647U) | 33554432U,(unsigned short)16400);
    }
    else {
      u32 tmp_2;
      
#line 320 
      ath5k_hw_reg_write(ah,10U,(unsigned short)39028);
      
#line 321 
      ath5k_hw_reg_write(ah,12U,(unsigned short)39032);
      
#line 322 
      ath5k_hw_reg_write(ah,3U,(unsigned short)39408);
      
#line 323 
      ath5k_hw_reg_write(ah,32U,(unsigned short)39412);
      
#line 324 
      tmp_2 = ath5k_hw_reg_read(ah,(unsigned short)16400);
      
#line 324 
      ;
      
#line 324 
      ath5k_hw_reg_write(ah,tmp_2 | 50331648U,(unsigned short)16400);
    }
    
#line 329 
    tmp_3 = ath5k_hw_reg_read(ah,(unsigned short)16400);
    
#line 329 
    ;
    
#line 329 
    ath5k_hw_reg_write(ah,tmp_3 | 2U,(unsigned short)16400);
  }
  else {
    u32 tmp_4;
    u32 tmp_5;
    u32 tmp_6;
    u32 tmp_7;
    
#line 336 
    tmp_4 = ath5k_hw_reg_read(ah,(unsigned short)16400);
    
#line 336 
    ;
    
#line 336 
    ath5k_hw_reg_write(ah,tmp_4 & 4294967293U,(unsigned short)16400);
    
#line 339 
    tmp_5 = ath5k_hw_reg_read(ah,(unsigned short)16400);
    
#line 339 
    ;
    
#line 339 
    ath5k_hw_reg_write(ah,tmp_5 & 4244635647U,(unsigned short)16400);
    
#line 343 
    ath5k_hw_reg_write(ah,31U,(unsigned short)39024);
    
#line 344 
    ath5k_hw_reg_write(ah,127U,(unsigned short)39028);
    
#line 346 
    if ((unsigned int)ah->ah_mac_version == 15U) 
#line 347 
                                                 scal = 10U;
    else 
      
#line 348 
      if ((int)ee->ee_is_hb63 != 0) 
#line 349 
                                    scal = 50U; else 
#line 351 
                                                     scal = 14U;
    
#line 352 
    ath5k_hw_reg_write(ah,scal,(unsigned short)39032);
    
#line 354 
    ath5k_hw_reg_write(ah,12U,(unsigned short)39408);
    
#line 355 
    ath5k_hw_reg_write(ah,255U,(unsigned short)39412);
    
#line 357 
    if (((ah->ah_radio == (unsigned int)AR5K_RF5112 || ah->ah_radio == (unsigned int)AR5K_RF5413) || ah->ah_radio == (unsigned int)AR5K_RF2316) || (unsigned int)ah->ah_mac_version == 15U) 
      
#line 361 
      spending = 20U; else 
#line 363 
                           spending = 24U;
    
#line 364 
    ath5k_hw_reg_write(ah,spending,(unsigned short)39416);
    
#line 367 
    tmp_6 = ath5k_hw_reg_read(ah,(unsigned short)33028);
    
#line 367 
    ;
    
#line 367 
    ath5k_hw_reg_write(ah,(tmp_6 & 4294967040U) | 1U,(unsigned short)33028);
    
#line 369 
    if (((ah->ah_radio == (unsigned int)AR5K_RF5112 || ah->ah_radio == (unsigned int)AR5K_RF5413) || ah->ah_radio == (unsigned int)AR5K_RF2316) || ah->ah_radio == (unsigned int)AR5K_RF2317) 
      
#line 373 
      sclock = 39U; else 
#line 375 
                         sclock = 31U;
    
#line 376 
    tmp_7 = ath5k_hw_reg_read(ah,(unsigned short)32796);
    
#line 376 
    ;
    
#line 376 
    ;
    
#line 376 
    ath5k_hw_reg_write(ah,(tmp_7 & 4294951039U) | ((sclock << 7) & 16256U),(unsigned short)32796);
  }
  
#line 378 
  return;
}


#line 397  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/reset.c"
static int ath5k_hw_nic_reset(struct ath5k_hw *ah, u32 val)
{
  int ret;
  unsigned int tmp;
  
#line 400 
  if (val != 0U) 
#line 400 
                 tmp = val; else 
#line 400 
                                 tmp = 4294967295U;
  
#line 400 
  u32 mask = tmp;
  
#line 403 
  ath5k_hw_reg_read(ah,(unsigned short)12);
  
#line 408 
  ath5k_hw_reg_write(ah,val,(unsigned short)16384);
  
#line 411 
  usleep_range(15UL,20UL);
  
#line 413 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) {
    
#line 414 
    val &= 15U;
    
#line 416 
    mask &= 15U;
  }
  else {
    
#line 419 
    val &= 3U;
    
#line 420 
    mask &= 3U;
  }
  
#line 423 
  ret = ath5k_hw_register_timeout(ah,16384U,mask,val,(_Bool)0);
  
#line 430 
  if ((val & 1U) == 0U) 
#line 431 
                        ath5k_hw_reg_write(ah,0U,(unsigned short)20); else ;
  
#line 433 
  return ret;
}


#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/reset.c"
static int ath5k_hw_wisoc_reset(struct ath5k_hw *ah, u32 flags)
{
  int __retres;
  unsigned int tmp;
  u32 *reg;
  u32 regval;
  
#line 448 
  if (flags != 0U) 
#line 448 
                   tmp = flags; else 
#line 448 
                                     tmp = 4294967295U;
  
#line 448 
  u32 mask = tmp;
  
#line 451 
  u32 val = 0U;
  
#line 454 
  if ((unsigned int)ah->devid > 133U) {
    
#line 455 
    reg = (u32 *)2969567236U;
    
#line 456 
    if ((mask & 1U) != 0U) 
#line 457 
                           val |= 1U; else ;
    
#line 458 
    if ((mask & 2U) != 0U) 
#line 459 
                           val |= 2U; else ;
  }
  else {
    struct platform_device *tmp_0;
    
#line 461 
    reg = (u32 *)3154128928U;
    {
      
#line 462 
      struct device const *__mptr = (struct device const *)ah->dev;
      
#line 462 
      tmp_0 = (struct platform_device *)__mptr + 18446744073709551600U;
    }
    
#line 462 
    ;
    
#line 462 
    if (tmp_0->id == 0) {
      
#line 463 
      if ((mask & 1U) != 0U) 
#line 464 
                             val |= 8192U; else ;
      
#line 465 
      if ((mask & 2U) != 0U) 
#line 466 
                             val |= 16388U; else ;
    }
    else {
      
#line 469 
      if ((mask & 1U) != 0U) 
#line 470 
                             val |= 131072U; else ;
      
#line 471 
      if ((mask & 2U) != 0U) 
#line 472 
                             val |= 262656U; else ;
    }
  }
  
#line 478 
  regval = ioread32((void *)reg);
  
#line 479 
  iowrite32(regval | val,(void *)reg);
  
#line 480 
  regval = ioread32((void *)reg);
  
#line 481 
  __const_udelay(429500UL);
  
#line 484 
  iowrite32(~ val & regval,(void *)reg);
  
#line 485 
  regval = ioread32((void *)reg);
  
#line 492 
  if ((flags & 1U) == 0U) 
#line 493 
                          ath5k_hw_reg_write(ah,0U,(unsigned short)20); else ;
  
#line 495 
  __retres = 0;
  
#line 495 
  return __retres;
}


#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/reset.c"
static int ath5k_hw_set_power_mode(struct ath5k_hw *ah, enum ath5k_power_mode mode, bool set_chip, u16 sleep_duration)
{
  int __retres;
  unsigned int i;
  u32 staid;
  u32 data;
  
#line 520 
  staid = ath5k_hw_reg_read(ah,(unsigned short)32772);
  
#line 522 
  switch ((unsigned int)mode) {
    u32 tmp;
    case (unsigned int)1: 
#line 523 
    ;
    
#line 524 
    staid &= 4292870143U;
    case (unsigned int)4: 
#line 526 
    ;
    
#line 527 
    if ((int)set_chip != 0) 
#line 528 
                            ath5k_hw_reg_write(ah,(unsigned int)((int)sleep_duration | 131072),(unsigned short)16388); else ;
    
#line 533 
    staid |= 262144U;
    
#line 534 
    goto ldv_52280;
    case (unsigned int)3: 
#line 536 
    ;
    
#line 537 
    if ((int)set_chip != 0) 
#line 538 
                            ath5k_hw_reg_write(ah,65536U,(unsigned short)16388); else ;
    
#line 541 
    staid |= 262144U;
    
#line 542 
    goto ldv_52280;
    case (unsigned int)2: 
#line 544 
    ;
    
#line 546 
    staid &= 4294705151U;
    
#line 548 
    if (! set_chip) 
#line 549 
                    goto commit; else ;
    
#line 551 
    data = ath5k_hw_reg_read(ah,(unsigned short)16388);
    
#line 556 
    if ((data & 4290772992U) != 0U) 
#line 557 
                                    data = 0U; else 
#line 560 
                                                    data &= 4294770687U;
    
#line 562 
    ath5k_hw_reg_write(ah,data,(unsigned short)16388);
    
#line 564 
    usleep_range(15UL,20UL);
    
#line 566 
    i = 200U;
    
#line 566 
    goto ldv_52286;
    ldv_52285: 
#line 567 
    ;
    
#line 568 
    tmp = ath5k_hw_reg_read(ah,(unsigned short)16400);
    
#line 568 
    if ((tmp & 65536U) == 0U) 
#line 570 
                              goto ldv_52284; else ;
    
#line 573 
    usleep_range(50UL,75UL);
    
#line 574 
    ath5k_hw_reg_write(ah,data,(unsigned short)16388);
    
#line 566 
    i -= 1U;
    ldv_52286: 
#line 567 
    ;
    
#line 566 
    if (i != 0U) 
#line 568 
                 goto ldv_52285; else 
#line 571 
                                      goto ldv_52284;
    ldv_52284: 
#line 572 
    ;
    
#line 579 
    if (i == 0U) {
      
#line 580 
      __retres = -5;
      
#line 580 
      goto return_label;
    }
    else ;
    
#line 582 
    goto ldv_52280;
    default: 
#line 584 
    ;
    
#line 585 
    __retres = -22;
    
#line 585 
    goto return_label;
  }
  ldv_52280: 
#line 588 
  ;
  commit: 
#line 588 
  ;
  
#line 589 
  ath5k_hw_reg_write(ah,staid,(unsigned short)32772);
  
#line 591 
  __retres = 0;
  return_label: 
#line 591 
                return __retres;
}


#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/reset.c"
int ath5k_hw_on_hold(struct ath5k_hw *ah)
{
  int __retres;
  u32 bus_flags;
  int ret;
  enum ath_bus_type tmp;
  int tmp_2;
  
#line 609 
  struct pci_dev *pdev = ah->pdev;
  
#line 613 
  tmp = ath5k_get_bus_type(ah);
  
#line 613 
  if (tmp == (unsigned int)ATH_AHB) {
    
#line 614 
    __retres = 0;
    
#line 614 
    goto return_label;
  }
  else ;
  
#line 617 
  ret = ath5k_hw_set_power_mode(ah,(enum ath5k_power_mode)AR5K_PM_AWAKE,(_Bool)1,(unsigned short)0);
  
#line 618 
  if (ret != 0) {
    int tmp_0;
    
#line 619 
    tmp_0 = net_ratelimit();
    
#line 619 
    if (tmp_0 != 0) 
#line 619 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","failed to wakeup the MAC Chip\n"); else ;
    
#line 620 
    __retres = ret;
    
#line 620 
    goto return_label;
  }
  else ;
  
#line 631 
  if (pdev != (struct pci_dev *)0) {
    bool tmp_1;
    
#line 631 
    tmp_1 = pci_is_pcie(pdev);
    
#line 631 
    if ((int)tmp_1 != 0) 
#line 631 
                         tmp_2 = 0; else 
#line 631 
                                         tmp_2 = 16;
  }
  else 
#line 631 
       tmp_2 = 16;
  
#line 631 
  bus_flags = (unsigned int)tmp_2;
  
#line 633 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) {
    
#line 634 
    ret = ath5k_hw_nic_reset(ah,31U);
    
#line 637 
    usleep_range(2000UL,2500UL);
  }
  else 
#line 639 
       ret = ath5k_hw_nic_reset(ah,bus_flags | 3U);
  
#line 643 
  if (ret != 0) {
    int tmp_3;
    
#line 644 
    tmp_3 = net_ratelimit();
    
#line 644 
    if (tmp_3 != 0) 
#line 644 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","failed to put device on warm reset\n"); else ;
    
#line 645 
    __retres = -5;
    
#line 645 
    goto return_label;
  }
  else ;
  
#line 649 
  ret = ath5k_hw_set_power_mode(ah,(enum ath5k_power_mode)AR5K_PM_AWAKE,(_Bool)1,(unsigned short)0);
  
#line 650 
  if (ret != 0) {
    int tmp_4;
    
#line 651 
    tmp_4 = net_ratelimit();
    
#line 651 
    if (tmp_4 != 0) 
#line 651 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","failed to put device on hold\n"); else ;
    
#line 652 
    __retres = ret;
    
#line 652 
    goto return_label;
  }
  else ;
  
#line 655 
  __retres = ret;
  return_label: 
#line 655 
                return __retres;
}


#line 669  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/reset.c"
int ath5k_hw_nic_wakeup(struct ath5k_hw *ah, struct ieee80211_channel *channel)
{
  int __retres;
  u32 turbo;
  u32 mode;
  u32 clock;
  u32 bus_flags;
  int ret;
  enum ath_bus_type tmp_0;
  int tmp_2;
  enum ath_bus_type tmp_6;
  
#line 671 
  struct pci_dev *pdev = ah->pdev;
  
#line 675 
  turbo = 0U;
  
#line 676 
  mode = 0U;
  
#line 677 
  clock = 0U;
  
#line 679 
  tmp_0 = ath5k_get_bus_type(ah);
  
#line 679 
  if (tmp_0 != (unsigned int)ATH_AHB) 
#line 679 
                                      goto _LOR;
  else 
    
#line 679 
    if (channel != (struct ieee80211_channel *)0) {
      _LOR: {
              
#line 681 
              ret = ath5k_hw_set_power_mode(ah,(enum ath5k_power_mode)AR5K_PM_AWAKE,(_Bool)1,(unsigned short)0);
              
#line 682 
              if (ret != 0) {
                int tmp;
                
#line 683 
                tmp = net_ratelimit();
                
#line 683 
                if (tmp != 0) 
#line 683 
                              _ath5k_printk((struct ath5k_hw const *)ah,"\001","failed to wakeup the MAC Chip\n"); else ;
                
#line 684 
                __retres = ret;
                
#line 684 
                goto return_label;
              }
              else ;
            }
    }
    else ;
  
#line 696 
  if (pdev != (struct pci_dev *)0) {
    bool tmp_1;
    
#line 696 
    tmp_1 = pci_is_pcie(pdev);
    
#line 696 
    if ((int)tmp_1 != 0) 
#line 696 
                         tmp_2 = 0; else 
#line 696 
                                         tmp_2 = 16;
  }
  else 
#line 696 
       tmp_2 = 16;
  
#line 696 
  bus_flags = (unsigned int)tmp_2;
  
#line 698 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) {
    
#line 699 
    ret = ath5k_hw_nic_reset(ah,31U);
    
#line 702 
    usleep_range(2000UL,2500UL);
  }
  else {
    enum ath_bus_type tmp_3;
    
#line 704 
    tmp_3 = ath5k_get_bus_type(ah);
    
#line 704 
    if (tmp_3 == (unsigned int)ATH_AHB) 
#line 705 
                                        ret = ath5k_hw_wisoc_reset(ah,3U); else 
                                                                    
#line 708 
                                                                    ret = ath5k_hw_nic_reset(ah,bus_flags | 3U);
  }
  
#line 712 
  if (ret != 0) {
    int tmp_4;
    
#line 713 
    tmp_4 = net_ratelimit();
    
#line 713 
    if (tmp_4 != 0) 
#line 713 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","failed to reset the MAC Chip\n"); else ;
    
#line 714 
    __retres = -5;
    
#line 714 
    goto return_label;
  }
  else ;
  
#line 718 
  ret = ath5k_hw_set_power_mode(ah,(enum ath5k_power_mode)AR5K_PM_AWAKE,(_Bool)1,(unsigned short)0);
  
#line 719 
  if (ret != 0) {
    int tmp_5;
    
#line 720 
    tmp_5 = net_ratelimit();
    
#line 720 
    if (tmp_5 != 0) 
#line 720 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","failed to resume the MAC Chip\n"); else ;
    
#line 721 
    __retres = ret;
    
#line 721 
    goto return_label;
  }
  else ;
  
#line 727 
  tmp_6 = ath5k_get_bus_type(ah);
  
#line 727 
  if (tmp_6 == (unsigned int)ATH_AHB) 
#line 728 
                                      ret = ath5k_hw_wisoc_reset(ah,0U); else 
                                                                    
#line 730 
                                                                    ret = ath5k_hw_nic_reset(ah,0U);
  
#line 732 
  if (ret != 0) {
    int tmp_7;
    
#line 733 
    tmp_7 = net_ratelimit();
    
#line 733 
    if (tmp_7 != 0) 
#line 733 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","failed to warm reset the MAC Chip\n"); else ;
    
#line 734 
    __retres = -5;
    
#line 734 
    goto return_label;
  }
  else ;
  
#line 739 
  if (channel == (struct ieee80211_channel *)0) {
    
#line 740 
    __retres = 0;
    
#line 740 
    goto return_label;
  }
  else ;
  
#line 742 
  if (ah->ah_version != (unsigned int)AR5K_AR5210) {
    
#line 747 
    if (ah->ah_radio > (unsigned int)AR5K_RF5111) {
      
#line 748 
      mode = 8U;
      
#line 749 
      clock = 64U;
    }
    else {
      
#line 751 
      mode = 0U;
      
#line 752 
      clock = 0U;
    }
    
#line 755 
    if (channel->band == (unsigned int)IEEE80211_BAND_2GHZ) {
      int tmp_8;
      
#line 756 
      mode |= 2U;
      
#line 757 
      if (ah->ah_version == (unsigned int)AR5K_AR5211) 
#line 757 
                                                       tmp_8 = 25; else 
                                                                    
#line 757 
                                                                    tmp_8 = 171;
      
#line 757 
      clock = (unsigned int)tmp_8 | clock;
      
#line 759 
      if ((unsigned int)channel->hw_value == 1U) 
#line 760 
                                                 mode |= 1U;
      else 
        
#line 769 
        if (ah->ah_version == (unsigned int)AR5K_AR5211) 
#line 770 
                                                         mode = mode; else 
                                                                    
#line 772 
                                                                    mode |= 4U;
    }
    else 
      
#line 774 
      if (channel->band == (unsigned int)IEEE80211_BAND_5GHZ) {
        
#line 775 
        mode = mode;
        
#line 779 
        if (ah->ah_radio == (unsigned int)AR5K_RF5413) 
#line 780 
                                                       clock = 4U;
        else {
          int tmp_9;
          
#line 782 
          if (ah->ah_version == (unsigned int)AR5K_AR5211) 
#line 782 
                                                           tmp_9 = 24; else 
                                                                    
#line 782 
                                                                    tmp_9 = 170;
          
#line 782 
          clock = (unsigned int)tmp_9 | clock;
        }
      }
      else {
        int tmp_10;
        
#line 784 
        tmp_10 = net_ratelimit();
        
#line 784 
        if (tmp_10 != 0) 
#line 784 
                         _ath5k_printk((struct ath5k_hw const *)ah,"\001","invalid radio frequency mode\n"); else ;
        
#line 785 
        __retres = -22;
        
#line 785 
        goto return_label;
      }
    
#line 791 
    if ((unsigned int)ah->ah_bwmode == 3U) {
      
#line 792 
      turbo = 1U;
      
#line 793 
      if (ah->ah_radio != (unsigned int)AR5K_RF2425) 
#line 794 
                                                     turbo |= 2U; else ;
    }
    else 
      
#line 795 
      if ((unsigned int)ah->ah_bwmode != 0U) {
        
#line 796 
        if (ah->ah_radio == (unsigned int)AR5K_RF5413) {
          int tmp_11;
          
#line 798 
          if ((unsigned int)ah->ah_bwmode == 2U) 
#line 798 
                                                 tmp_11 = 32; else 
#line 798 
                                                                   tmp_11 = 64;
          
#line 797 
          mode = (unsigned int)tmp_11 | mode;
        }
        else 
          
#line 800 
          if (ah->ah_version == (unsigned int)AR5K_AR5212) {
            int tmp_12;
            
#line 802 
            if ((unsigned int)ah->ah_bwmode == 2U) 
#line 802 
                                                   tmp_12 = 256; else 
                                                                   
#line 802 
                                                                   tmp_12 = 512;
            
#line 801 
            clock = (unsigned int)tmp_12 | clock;
          }
          else ;
      }
      else ;
  }
  else 
    
#line 810 
    if ((unsigned int)ah->ah_bwmode == 3U) 
#line 811 
                                           ath5k_hw_reg_write(ah,1U,(unsigned short)38916); else ;
  
#line 815 
  if (ah->ah_version != (unsigned int)AR5K_AR5210) {
    u32 tmp_13;
    
#line 818 
    tmp_13 = ath5k_hw_reg_read(ah,(unsigned short)39036);
    
#line 818 
    ;
    
#line 818 
    if (tmp_13 != clock) {
      
#line 819 
      ath5k_hw_reg_write(ah,clock,(unsigned short)39036);
      
#line 820 
      usleep_range(300UL,350UL);
    }
    else ;
    
#line 824 
    ath5k_hw_reg_write(ah,mode,(unsigned short)41472);
    
#line 825 
    ath5k_hw_reg_write(ah,turbo,(unsigned short)38916);
  }
  else ;
  
#line 828 
  __retres = 0;
  return_label: 
#line 828 
                return __retres;
}


#line 848  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/reset.c"
static void ath5k_hw_tweak_initval_settings(struct ath5k_hw *ah, struct ieee80211_channel *channel)
{
  
#line 851 
  if (ah->ah_version == (unsigned int)AR5K_AR5212 && (unsigned int)ah->ah_phy_revision > 65U) {
    u32 tmp;
    u32 tmp_0;
    
#line 855 
    ath5k_hw_reg_write(ah,172034U,(unsigned short)38956);
    
#line 867 
    tmp = ath5k_hw_reg_read(ah,(unsigned short)41512);
    
#line 867 
    ;
    
#line 867 
    ath5k_hw_reg_write(ah,tmp & 4294966783U,(unsigned short)41512);
    
#line 870 
    tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)41512);
    
#line 870 
    ;
    
#line 870 
    ath5k_hw_reg_write(ah,(tmp_0 & 4294837247U) | 2048U,(unsigned short)41512);
    
#line 874 
    ath5k_hw_reg_write(ah,15U,(unsigned short)32864);
  }
  else ;
  
#line 878 
  if ((unsigned int)ah->ah_phy_revision > 66U) 
#line 879 
                                               ath5k_hw_reg_write(ah,0U,(unsigned short)41556); else ;
  
#line 882 
  if ((unsigned int)ah->ah_phy_revision > 67U) {
    u32 tmp_1;
    
#line 883 
    tmp_1 = ath5k_hw_reg_read(ah,(unsigned short)48);
    
#line 883 
    ;
    
#line 883 
    ath5k_hw_reg_write(ah,tmp_1 & 4294934527U,(unsigned short)48);
  }
  else ;
  
#line 887 
  if ((ah->ah_radio == (unsigned int)AR5K_RF5413 || ah->ah_radio == (unsigned int)AR5K_RF2317) || (unsigned int)ah->ah_mac_version == 15U) {
    u32 tmp_2;
    
#line 890 
    u32 fast_adc = 1U;
    
#line 892 
    if ((unsigned int)channel->center_freq == 2462U || (unsigned int)channel->center_freq == 2467U) 
      
#line 894 
      fast_adc = 0U; else ;
    
#line 897 
    tmp_2 = ath5k_hw_reg_read(ah,(unsigned short)41548);
    
#line 897 
    ;
    
#line 897 
    if (tmp_2 != fast_adc) 
#line 898 
                           ath5k_hw_reg_write(ah,fast_adc,(unsigned short)41548); else ;
  }
  else ;
  
#line 903 
  if (ah->ah_radio == (unsigned int)AR5K_RF5112 && (unsigned int)ah->ah_radio_5ghz_revision <= 52U) {
    u32 data;
    unsigned int tmp_3;
    
#line 907 
    ath5k_hw_reg_write(ah,0U,(unsigned short)41476);
    
#line 909 
    if (channel->band == (unsigned int)IEEE80211_BAND_5GHZ) 
#line 910 
                                                            data = 4290252832U; else 
                                                                    
#line 912 
                                                                    data = 4290252064U;
    
#line 913 
    if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 913 
                                                     tmp_3 = 38916U; else 
                                                                    
#line 913 
                                                                    tmp_3 = 39236U;
    
#line 913 
    ;
    
#line 913 
    ;
    
#line 913 
    ath5k_hw_reg_write(ah,data,(unsigned short)((int)tmp_3));
  }
  else ;
  
#line 916 
  if (ah->ah_mac_srev <= 63U) {
    u32 tmp_4;
    
#line 918 
    ath5k_hw_reg_write(ah,0U,(unsigned short)92);
    
#line 920 
    ath5k_hw_reg_write(ah,8U,(unsigned short)39032);
    
#line 923 
    tmp_4 = ath5k_hw_reg_read(ah,(unsigned short)32840);
    
#line 923 
    ;
    
#line 923 
    ath5k_hw_reg_write(ah,tmp_4 | 1024U,(unsigned short)32840);
  }
  else ;
  
#line 927 
  if ((unsigned int)ah->ah_bwmode != 0U) {
    
#line 931 
    if ((unsigned int)ah->ah_bwmode == 3U) {
      u32 tmp_5;
      
#line 933 
      tmp_5 = ath5k_hw_reg_read(ah,(unsigned short)38980);
      
#line 933 
      ;
      
#line 933 
      ath5k_hw_reg_write(ah,(tmp_5 & 4294967168U) | 37U,(unsigned short)38980);
      
#line 940 
      if (ah->ah_version == (unsigned int)AR5K_AR5212) {
        u32 tmp_6;
        
#line 941 
        tmp_6 = ath5k_hw_reg_read(ah,(unsigned short)38980);
        
#line 941 
        ;
        
#line 941 
        ath5k_hw_reg_write(ah,tmp_6 & 4294951039U,(unsigned short)38980);
      }
      else ;
      
#line 945 
      if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 947 
                                                       ath5k_hw_reg_write(ah,1862279203U,(unsigned short)38916); else ;
    }
    else 
      
#line 954 
      if (ah->ah_mac_srev + 4294967152U <= 16U) {
        u32 tmp_7;
        
#line 956 
        tmp_7 = ath5k_hw_reg_read(ah,(unsigned short)39236);
        
#line 956 
        ;
        
#line 956 
        ath5k_hw_reg_write(ah,tmp_7 | 3U,(unsigned short)39236);
      }
      else ;
  }
  else 
    
#line 960 
    if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 962 
                                                     ath5k_hw_reg_write(ah,1862275104U,(unsigned short)38916); else ;
  
#line 963 
  return;
}


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/reset.c"
static void ath5k_hw_commit_eeprom_settings(struct ath5k_hw *ah, struct ieee80211_channel *channel)
{
  s16 cck_ofdm_pwr_delta;
  u8 ee_mode;
  int tmp;
  u32 tmp_10;
  u32 tmp_11;
  bool tmp_14;
  
#line 979 
  struct ath5k_eeprom_info *ee = & ah->ah_capabilities.cap_eeprom;
  
#line 984 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 985 
                                                   goto return_label; else ;
  
#line 987 
  tmp = ath5k_eeprom_mode_from_channel(ah,channel);
  
#line 987 
  ee_mode = (unsigned char)tmp;
  
#line 990 
  if ((unsigned int)channel->center_freq == 2484U) 
#line 991 
                                                   cck_ofdm_pwr_delta = (short)((((int)ee->ee_cck_ofdm_power_delta - (int)ee->ee_scaled_cck_delta) * 2) / 10); else 
                                                                    
#line 995 
                                                                    cck_ofdm_pwr_delta = (short)(((int)ee->ee_cck_ofdm_power_delta * 2) / 10);
  
#line 1000 
  if ((unsigned int)ah->ah_phy_revision > 65U) 
    
#line 1001 
    if ((unsigned int)channel->hw_value == 2U) 
#line 1002 
                                               ath5k_hw_reg_write(ah,(unsigned int)(((- ((int)ee->ee_cck_ofdm_gain_delta) << 6) & 4032) | ((- ((int)cck_ofdm_pwr_delta) << 18) & 16515072)),(unsigned short)39244); else 
                                                                    
#line 1009 
                                                                    ath5k_hw_reg_write(ah,0U,(unsigned short)39244);
  else {
    
#line 1013 
    ah->ah_txpower.txp_cck_ofdm_pwr_delta = cck_ofdm_pwr_delta;
    
#line 1014 
    ah->ah_txpower.txp_cck_ofdm_gainf_delta = (short)ee->ee_cck_ofdm_gain_delta;
  }
  
#line 1020 
  ath5k_hw_set_antenna_switch(ah,(unsigned char)((int)ee_mode));
  
#line 1023 
  ath5k_hw_reg_write(ah,(unsigned int)(((int)ee->ee_noise_floor_thr[(int)ee_mode] & 511) | 512),(unsigned short)39272);
  
#line 1027 
  if ((unsigned int)ah->ah_bwmode == 3U && (unsigned int)ah->ah_capabilities.cap_eeprom.ee_version > 20479U) {
    u32 tmp_0;
    u32 tmp_1;
    u32 tmp_2;
    u32 tmp_3;
    u32 tmp_4;
    
#line 1030 
    tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)38980);
    
#line 1030 
    ;
    
#line 1030 
    ;
    
#line 1030 
    ath5k_hw_reg_write(ah,(tmp_0 & 4294951039U) | ((unsigned int)((int)ee->ee_switch_settling_turbo[(int)ee_mode] << 7) & 16256U),(unsigned short)38980);
    
#line 1035 
    tmp_1 = ath5k_hw_reg_read(ah,(unsigned short)38984);
    
#line 1035 
    ;
    
#line 1035 
    ;
    
#line 1035 
    ath5k_hw_reg_write(ah,(tmp_1 & 4294709247U) | ((unsigned int)((int)ee->ee_atn_tx_rx_turbo[(int)ee_mode] << 12) & 258048U),(unsigned short)38984);
    
#line 1040 
    tmp_2 = ath5k_hw_reg_read(ah,(unsigned short)38992);
    
#line 1040 
    ;
    
#line 1040 
    ;
    
#line 1040 
    ath5k_hw_reg_write(ah,(tmp_2 & 4294967040U) | ((unsigned int)ee->ee_adc_desired_size_turbo[(int)ee_mode] & 255U),(unsigned short)38992);
    
#line 1044 
    tmp_3 = ath5k_hw_reg_read(ah,(unsigned short)38992);
    
#line 1044 
    ;
    
#line 1044 
    ;
    
#line 1044 
    ath5k_hw_reg_write(ah,(tmp_3 & 4294902015U) | ((unsigned int)((int)ee->ee_pga_desired_size_turbo[(int)ee_mode] << 8) & 65535U),(unsigned short)38992);
    
#line 1049 
    tmp_4 = ath5k_hw_reg_read(ah,(unsigned short)41484);
    
#line 1049 
    ;
    
#line 1049 
    ;
    
#line 1049 
    ath5k_hw_reg_write(ah,(tmp_4 & 4278452223U) | ((unsigned int)((int)ee->ee_margin_tx_rx_turbo[(int)ee_mode] << 18) & 16515072U),(unsigned short)41484);
  }
  else {
    u32 tmp_5;
    u32 tmp_6;
    u32 tmp_7;
    u32 tmp_8;
    
#line 1055 
    tmp_5 = ath5k_hw_reg_read(ah,(unsigned short)38980);
    
#line 1055 
    ;
    
#line 1055 
    ;
    
#line 1055 
    ath5k_hw_reg_write(ah,(tmp_5 & 4294951039U) | ((unsigned int)((int)ee->ee_switch_settling[(int)ee_mode] << 7) & 16256U),(unsigned short)38980);
    
#line 1060 
    tmp_6 = ath5k_hw_reg_read(ah,(unsigned short)38984);
    
#line 1060 
    ;
    
#line 1060 
    ;
    
#line 1060 
    ath5k_hw_reg_write(ah,(tmp_6 & 4294709247U) | ((unsigned int)((int)ee->ee_atn_tx_rx[(int)ee_mode] << 12) & 258048U),(unsigned short)38984);
    
#line 1065 
    tmp_7 = ath5k_hw_reg_read(ah,(unsigned short)38992);
    
#line 1065 
    ;
    
#line 1065 
    ;
    
#line 1065 
    ath5k_hw_reg_write(ah,(tmp_7 & 4294967040U) | ((unsigned int)ee->ee_adc_desired_size[(int)ee_mode] & 255U),(unsigned short)38992);
    
#line 1069 
    tmp_8 = ath5k_hw_reg_read(ah,(unsigned short)38992);
    
#line 1069 
    ;
    
#line 1069 
    ;
    
#line 1069 
    ath5k_hw_reg_write(ah,(tmp_8 & 4294902015U) | ((unsigned int)((int)ee->ee_pga_desired_size[(int)ee_mode] << 8) & 65535U),(unsigned short)38992);
    
#line 1074 
    if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version > 16384U) {
      u32 tmp_9;
      
#line 1075 
      tmp_9 = ath5k_hw_reg_read(ah,(unsigned short)41484);
      
#line 1075 
      ;
      
#line 1075 
      ;
      
#line 1075 
      ath5k_hw_reg_write(ah,(tmp_9 & 4278452223U) | ((unsigned int)((int)ee->ee_margin_tx_rx[(int)ee_mode] << 18) & 16515072U),(unsigned short)41484);
    }
    else ;
  }
  
#line 1081 
  ath5k_hw_reg_write(ah,(unsigned int)(((((int)ee->ee_tx_end2xpa_disable[(int)ee_mode] << 24) | ((int)ee->ee_tx_end2xpa_disable[(int)ee_mode] << 16)) | ((int)ee->ee_tx_frm2xpa_enable[(int)ee_mode] << 8)) | (int)ee->ee_tx_frm2xpa_enable[(int)ee_mode]),(unsigned short)38964);
  
#line 1088 
  tmp_10 = ath5k_hw_reg_read(ah,(unsigned short)38952);
  
#line 1088 
  ;
  
#line 1088 
  ;
  
#line 1088 
  ath5k_hw_reg_write(ah,(tmp_10 & 4294902015U) | ((unsigned int)((int)ee->ee_tx_end2xlna_enable[(int)ee_mode] << 8) & 65535U),(unsigned short)38952);
  
#line 1093 
  tmp_11 = ath5k_hw_reg_read(ah,(unsigned short)39012);
  
#line 1093 
  ;
  
#line 1093 
  ;
  
#line 1093 
  ath5k_hw_reg_write(ah,(tmp_11 & 4294447103U) | ((unsigned int)((int)ee->ee_thr_62[(int)ee_mode] << 12) & 520192U),(unsigned short)39012);
  
#line 1100 
  tmp_14 = ath5k_hw_chan_has_spur_noise(ah,channel);
  
#line 1100 
  if ((int)tmp_14 != 0) {
    u32 tmp_12;
    
#line 1101 
    tmp_12 = ath5k_hw_reg_read(ah,(unsigned short)39204);
    
#line 1101 
    ;
    
#line 1101 
    ;
    
#line 1101 
    ath5k_hw_reg_write(ah,(tmp_12 & 4294967041U) | ((unsigned int)(((int)ee->ee_false_detect[(int)ee_mode] + 2) << 1) & 255U),(unsigned short)39204);
  }
  else {
    u32 tmp_13;
    
#line 1106 
    tmp_13 = ath5k_hw_reg_read(ah,(unsigned short)39204);
    
#line 1106 
    ;
    
#line 1106 
    ath5k_hw_reg_write(ah,(tmp_13 & 4294967041U) | 4U,(unsigned short)39204);
  }
  
#line 1112 
  if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version > 16383U) {
    u32 tmp_15;
    u32 tmp_16;
    u32 tmp_17;
    
#line 1113 
    tmp_15 = ath5k_hw_reg_read(ah,(unsigned short)39200);
    
#line 1113 
    ;
    
#line 1113 
    ;
    
#line 1113 
    ath5k_hw_reg_write(ah,(tmp_15 & 4294965279U) | ((unsigned int)((int)ee->ee_i_cal[(int)ee_mode] << 5) & 2016U),(unsigned short)39200);
    
#line 1115 
    tmp_16 = ath5k_hw_reg_read(ah,(unsigned short)39200);
    
#line 1115 
    ;
    
#line 1115 
    ;
    
#line 1115 
    ath5k_hw_reg_write(ah,(tmp_16 & 4294967264U) | ((unsigned int)ee->ee_q_cal[(int)ee_mode] & 31U),(unsigned short)39200);
    
#line 1117 
    tmp_17 = ath5k_hw_reg_read(ah,(unsigned short)39200);
    
#line 1117 
    ;
    
#line 1117 
    ath5k_hw_reg_write(ah,tmp_17 | 2048U,(unsigned short)39200);
  }
  else ;
  
#line 1121 
  if ((unsigned int)ah->ah_capabilities.cap_eeprom.ee_version > 20480U) 
    
#line 1122 
    ath5k_hw_reg_write(ah,0U,(unsigned short)39392); else ;
  return_label: 
#line 1123 
                return;
}


#line 1146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/reset.c"
int ath5k_hw_reset(struct ath5k_hw *ah, enum nl80211_iftype op_mode, struct ieee80211_channel *channel, bool fast, bool skip_pcu)
{
  int __retres;
  u32 s_seq[10U];
  u32 s_led[3U];
  u32 tsf_up;
  u32 tsf_lo;
  u8 mode;
  int i;
  int ret;
  u32 tmp_6;
  u32 tmp_9;
  unsigned int tmp_11;
  u32 tmp_13;
  unsigned int tmp_12;
  
#line 1153 
  tsf_up = 0U;
  
#line 1154 
  tsf_lo = 0U;
  
#line 1155 
  mode = (unsigned char)0U;
  
#line 1162 
  if (((int)fast != 0 && ah->ah_radio != (unsigned int)AR5K_RF2413) && ah->ah_radio != (unsigned int)AR5K_RF5413) 
    
#line 1164 
    fast = (_Bool)0; else ;
  
#line 1169 
  if (ah->ah_version == (unsigned int)AR5K_AR5212) 
#line 1170 
                                                   ath5k_hw_set_sleep_clock(ah,(_Bool)0); else ;
  
#line 1172 
  mode = (unsigned char)channel->hw_value;
  
#line 1173 
  switch ((int)mode) {
    int tmp_1;
    case 0: 
#line 1174 
    ;
    
#line 1175 
    goto ldv_52332;
    case 2: 
#line 1176 
    ;
    
#line 1177 
    if (ah->ah_version <= (unsigned int)AR5K_AR5211) {
      int tmp;
      
#line 1178 
      tmp = net_ratelimit();
      
#line 1178 
      if (tmp != 0) 
#line 1178 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","G mode not available on 5210/5211"); else ;
      
#line 1180 
      __retres = -22;
      
#line 1180 
      goto return_label;
    }
    else ;
    
#line 1182 
    goto ldv_52332;
    case 1: 
#line 1183 
    ;
    
#line 1184 
    if (ah->ah_version == (unsigned int)AR5K_AR5210) {
      int tmp_0;
      
#line 1185 
      tmp_0 = net_ratelimit();
      
#line 1185 
      if (tmp_0 != 0) 
#line 1185 
                      _ath5k_printk((struct ath5k_hw const *)ah,"\001","B mode not available on 5210"); else ;
      
#line 1187 
      __retres = -22;
      
#line 1187 
      goto return_label;
    }
    else ;
    
#line 1189 
    goto ldv_52332;
    default: 
#line 1190 
    ;
    
#line 1191 
    tmp_1 = net_ratelimit();
    
#line 1191 
    if (tmp_1 != 0) 
#line 1191 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","invalid channel: %d\n",(int)channel->center_freq); else ;
    
#line 1193 
    __retres = -22;
    
#line 1193 
    goto return_label;
  }
  ldv_52332: 
#line 1200 
  ;
  
#line 1200 
  if ((int)fast != 0) {
    
#line 1201 
    ret = ath5k_hw_phy_init(ah,channel,(unsigned char)((int)mode),(_Bool)1);
    
#line 1202 
    if (ret != 0) {
      
#line 1203 
      if ((long)((ah->debug.level & 1U) != 0U) != 0L) {
        int tmp_2;
        
#line 1203 
        tmp_2 = net_ratelimit();
        
#line 1203 
        if ((long)(tmp_2 != 0) != 0L) 
#line 1203 
                                      _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_hw_reset",1204); else ;
      }
      else ;
      
#line 1207 
      ret = 0;
    }
    else {
      
#line 1209 
      if ((long)((ah->debug.level & 1U) != 0U) != 0L) {
        int tmp_3;
        
#line 1209 
        tmp_3 = net_ratelimit();
        
#line 1209 
        if ((long)(tmp_3 != 0) != 0L) 
#line 1209 
                                      _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_hw_reset",1210); else ;
      }
      else ;
      
#line 1211 
      __retres = 0;
      
#line 1211 
      goto return_label;
    }
  }
  else ;
  
#line 1218 
  if (ah->ah_version != (unsigned int)AR5K_AR5210) {
    
#line 1224 
    if (ah->ah_mac_srev <= 63U) {
      
#line 1226 
      i = 0;
      
#line 1226 
      goto ldv_52338;
      ldv_52337: 
#line 1227 
      ;
      
#line 1227 
      s_seq[i] = ath5k_hw_reg_read(ah,(unsigned short)((int)((unsigned int)((int)((unsigned short)i) << 2U) + 4416U)));
      
#line 1226 
      i += 1;
      ldv_52338: 
#line 1227 
      ;
      
#line 1226 
      if (i <= 9) 
#line 1228 
                  goto ldv_52337; else 
#line 1231 
                                       goto ldv_52339;
      ldv_52339: 
#line 1232 
      ;
    }
    else 
#line 1231 
         s_seq[0] = ath5k_hw_reg_read(ah,(unsigned short)4416);
    
#line 1248 
    if (ah->ah_version == (unsigned int)AR5K_AR5211) {
      unsigned int tmp_4;
      unsigned int tmp_5;
      
#line 1249 
      if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 1249 
                                                       tmp_4 = 32880U; else 
                                                                    
#line 1249 
                                                                    tmp_4 = 32848U;
      
#line 1249 
      ;
      
#line 1249 
      tsf_up = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_4));
      
#line 1250 
      if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 1250 
                                                       tmp_5 = 32876U; else 
                                                                    
#line 1250 
                                                                    tmp_5 = 32844U;
      
#line 1250 
      ;
      
#line 1250 
      tsf_lo = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_5));
    }
    else ;
  }
  else ;
  
#line 1256 
  tmp_6 = ath5k_hw_reg_read(ah,(unsigned short)16400);
  
#line 1256 
  s_led[0] = tmp_6 & 16646240U;
  
#line 1258 
  s_led[1] = ath5k_hw_reg_read(ah,(unsigned short)16404);
  
#line 1259 
  s_led[2] = ath5k_hw_reg_read(ah,(unsigned short)16408);
  
#line 1267 
  if (ah->ah_version == (unsigned int)AR5K_AR5212 && ah->ah_radio <= (unsigned int)AR5K_RF5112) {
    
#line 1269 
    if (! fast && ah->ah_rf_banks != (u32 *)0U) 
#line 1270 
                                                ath5k_hw_gainf_calibrate(ah); else ;
  }
  else ;
  
#line 1274 
  ret = ath5k_hw_nic_wakeup(ah,channel);
  
#line 1275 
  if (ret != 0) {
    
#line 1276 
    __retres = ret;
    
#line 1276 
    goto return_label;
  }
  else ;
  
#line 1279 
  if (ah->ah_mac_srev > 63U) 
#line 1280 
                             ath5k_hw_reg_write(ah,7U,(unsigned short)38912); else 
                                                                    
#line 1282 
                                                                    ath5k_hw_reg_write(ah,71U,(unsigned short)38912);
  
#line 1286 
  ret = ath5k_hw_write_initvals(ah,(unsigned char)((int)mode),(_Bool)((bool)((int)skip_pcu) != 0));
  
#line 1287 
  if (ret != 0) {
    
#line 1288 
    __retres = ret;
    
#line 1288 
    goto return_label;
  }
  else ;
  
#line 1291 
  ath5k_hw_init_core_clock(ah);
  
#line 1298 
  ath5k_hw_tweak_initval_settings(ah,channel);
  
#line 1301 
  ath5k_hw_commit_eeprom_settings(ah,channel);
  
#line 1309 
  if (ah->ah_version != (unsigned int)AR5K_AR5210) {
    
#line 1310 
    if (ah->ah_mac_srev <= 63U) {
      
#line 1311 
      i = 0;
      
#line 1311 
      goto ldv_52341;
      ldv_52340: 
#line 1312 
      ;
      
#line 1312 
      ath5k_hw_reg_write(ah,s_seq[i],(unsigned short)((int)((unsigned int)((int)((unsigned short)i) << 2U) + 4416U)));
      
#line 1311 
      i += 1;
      ldv_52341: 
#line 1312 
      ;
      
#line 1311 
      if (i <= 9) 
#line 1313 
                  goto ldv_52340; else 
#line 1316 
                                       goto ldv_52342;
      ldv_52342: 
#line 1317 
      ;
    }
    else 
#line 1315 
         ath5k_hw_reg_write(ah,s_seq[0],(unsigned short)4416);
    
#line 1319 
    if (ah->ah_version == (unsigned int)AR5K_AR5211) {
      unsigned int tmp_7;
      unsigned int tmp_8;
      
#line 1320 
      if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 1320 
                                                       tmp_7 = 32880U; else 
                                                                    
#line 1320 
                                                                    tmp_7 = 32848U;
      
#line 1320 
      ;
      
#line 1320 
      ;
      
#line 1320 
      ath5k_hw_reg_write(ah,tsf_up,(unsigned short)((int)tmp_7));
      
#line 1321 
      if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 1321 
                                                       tmp_8 = 32876U; else 
                                                                    
#line 1321 
                                                                    tmp_8 = 32844U;
      
#line 1321 
      ;
      
#line 1321 
      ;
      
#line 1321 
      ath5k_hw_reg_write(ah,tsf_lo,(unsigned short)((int)tmp_8));
    }
    else ;
  }
  else ;
  
#line 1326 
  tmp_9 = ath5k_hw_reg_read(ah,(unsigned short)16400);
  
#line 1326 
  ;
  
#line 1326 
  ;
  
#line 1326 
  ath5k_hw_reg_write(ah,tmp_9 | s_led[0],(unsigned short)16400);
  
#line 1329 
  ath5k_hw_reg_write(ah,s_led[1],(unsigned short)16404);
  
#line 1330 
  ath5k_hw_reg_write(ah,s_led[2],(unsigned short)16408);
  
#line 1335 
  ath5k_hw_pcu_init(ah,op_mode);
  
#line 1340 
  ret = ath5k_hw_phy_init(ah,channel,(unsigned char)((int)mode),(_Bool)0);
  
#line 1341 
  if (ret != 0) {
    int tmp_10;
    
#line 1342 
    tmp_10 = net_ratelimit();
    
#line 1342 
    if (tmp_10 != 0) 
#line 1342 
                     _ath5k_printk((struct ath5k_hw const *)ah,"\001","failed to initialize PHY (%i) !\n",ret); else ;
    
#line 1344 
    __retres = ret;
    
#line 1344 
    goto return_label;
  }
  else ;
  
#line 1350 
  ret = ath5k_hw_init_queues(ah);
  
#line 1351 
  if (ret != 0) {
    
#line 1352 
    __retres = ret;
    
#line 1352 
    goto return_label;
  }
  else ;
  
#line 1358 
  ath5k_hw_dma_init(ah);
  
#line 1370 
  if ((ah->ah_use_32khz_clock != 0U && ah->ah_version == (unsigned int)AR5K_AR5212) && op_mode != (unsigned int)NL80211_IFTYPE_AP) 
    
#line 1372 
    ath5k_hw_set_sleep_clock(ah,(_Bool)1); else ;
  
#line 1377 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 1377 
                                                   tmp_11 = 32804U; else 
                                                                    
#line 1377 
                                                                    tmp_11 = 32800U;
  
#line 1377 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) 
#line 1377 
                                                   tmp_12 = 32804U; else 
                                                                    
#line 1377 
                                                                    tmp_12 = 32800U;
  
#line 1377 
  ;
  
#line 1377 
  tmp_13 = ath5k_hw_reg_read(ah,(unsigned short)((int)tmp_12));
  
#line 1377 
  ;
  
#line 1377 
  ath5k_hw_reg_write(ah,tmp_13 & 4286578687U,(unsigned short)((int)tmp_11));
  
#line 1378 
  ath5k_hw_reset_tsf(ah);
  
#line 1379 
  __retres = 0;
  return_label: 
#line 1379 
                return __retres;
}


#line 333  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
int kstrtoint(char const *, unsigned int, int *);


#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
int sysfs_create_group(struct kobject *, struct attribute_group const *);


#line 255 
void sysfs_remove_group(struct kobject *, struct attribute_group const *);


#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static ssize_t ath5k_attr_show_ani_mode(struct device *dev, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_0;
  
#line 49 
  struct ieee80211_hw *hw = dev_get_drvdata((struct device const *)dev);
  
#line 49 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 49 
  tmp_0 = snprintf(buf,4096UL,"%d\n",(unsigned int)ah->ani_state.ani_mode);
  
#line 49 
  __retres = (long)tmp_0;
  
#line 49 
  return __retres;
}


#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static ssize_t ath5k_attr_store_ani_mode(struct device *dev, struct device_attribute *attr, char const *buf, size_t count)
{
  ssize_t __retres;
  int val;
  int ret;
  
#line 49 
  struct ieee80211_hw *hw = dev_get_drvdata((struct device const *)dev);
  
#line 49 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 49 
  ret = kstrtoint(buf,10U,& val);
  
#line 49 
  if (ret < 0) {
    
#line 49 
    __retres = (long)ret;
    
#line 49 
    goto return_label;
  }
  else ;
  
#line 49 
  ath5k_ani_init(ah,(enum ath5k_ani_mode)val);
  
#line 49 
  __retres = (long)count;
  return_label: 
#line 49 
                return __retres;
}


#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static struct device_attribute dev_attr_ani_mode = {.attr = {.name = "ani_mode", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & ath5k_attr_show_ani_mode, .store = & ath5k_attr_store_ani_mode};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static ssize_t ath5k_attr_show_noise_immunity_level(struct device *dev, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_0;
  
#line 50 
  struct ieee80211_hw *hw = dev_get_drvdata((struct device const *)dev);
  
#line 50 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 50 
  tmp_0 = snprintf(buf,4096UL,"%d\n",ah->ani_state.noise_imm_level);
  
#line 50 
  __retres = (long)tmp_0;
  
#line 50 
  return __retres;
}


#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static ssize_t ath5k_attr_store_noise_immunity_level(struct device *dev, struct device_attribute *attr, char const *buf, size_t count)
{
  ssize_t __retres;
  int val;
  int ret;
  
#line 50 
  struct ieee80211_hw *hw = dev_get_drvdata((struct device const *)dev);
  
#line 50 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 50 
  ret = kstrtoint(buf,10U,& val);
  
#line 50 
  if (ret < 0) {
    
#line 50 
    __retres = (long)ret;
    
#line 50 
    goto return_label;
  }
  else ;
  
#line 50 
  ath5k_ani_set_noise_immunity_level(ah,val);
  
#line 50 
  __retres = (long)count;
  return_label: 
#line 50 
                return __retres;
}


#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static struct device_attribute dev_attr_noise_immunity_level = {.attr = {.name = "noise_immunity_level", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & ath5k_attr_show_noise_immunity_level, .store = & ath5k_attr_store_noise_immunity_level};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static ssize_t ath5k_attr_show_spur_level(struct device *dev, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_0;
  
#line 52 
  struct ieee80211_hw *hw = dev_get_drvdata((struct device const *)dev);
  
#line 52 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 52 
  tmp_0 = snprintf(buf,4096UL,"%d\n",ah->ani_state.spur_level);
  
#line 52 
  __retres = (long)tmp_0;
  
#line 52 
  return __retres;
}


#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static ssize_t ath5k_attr_store_spur_level(struct device *dev, struct device_attribute *attr, char const *buf, size_t count)
{
  ssize_t __retres;
  int val;
  int ret;
  
#line 52 
  struct ieee80211_hw *hw = dev_get_drvdata((struct device const *)dev);
  
#line 52 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 52 
  ret = kstrtoint(buf,10U,& val);
  
#line 52 
  if (ret < 0) {
    
#line 52 
    __retres = (long)ret;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 52 
  ath5k_ani_set_spur_immunity_level(ah,val);
  
#line 52 
  __retres = (long)count;
  return_label: 
#line 52 
                return __retres;
}


#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static struct device_attribute dev_attr_spur_level = {.attr = {.name = "spur_level", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & ath5k_attr_show_spur_level, .store = & ath5k_attr_store_spur_level};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static ssize_t ath5k_attr_show_firstep_level(struct device *dev, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_0;
  
#line 54 
  struct ieee80211_hw *hw = dev_get_drvdata((struct device const *)dev);
  
#line 54 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 54 
  tmp_0 = snprintf(buf,4096UL,"%d\n",ah->ani_state.firstep_level);
  
#line 54 
  __retres = (long)tmp_0;
  
#line 54 
  return __retres;
}


#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static ssize_t ath5k_attr_store_firstep_level(struct device *dev, struct device_attribute *attr, char const *buf, size_t count)
{
  ssize_t __retres;
  int val;
  int ret;
  
#line 54 
  struct ieee80211_hw *hw = dev_get_drvdata((struct device const *)dev);
  
#line 54 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 54 
  ret = kstrtoint(buf,10U,& val);
  
#line 54 
  if (ret < 0) {
    
#line 54 
    __retres = (long)ret;
    
#line 54 
    goto return_label;
  }
  else ;
  
#line 54 
  ath5k_ani_set_firstep_level(ah,val);
  
#line 54 
  __retres = (long)count;
  return_label: 
#line 54 
                return __retres;
}


#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static struct device_attribute dev_attr_firstep_level = {.attr = {.name = "firstep_level", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & ath5k_attr_show_firstep_level, .store = & ath5k_attr_store_firstep_level};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static ssize_t ath5k_attr_show_ofdm_weak_signal_detection(struct device *dev, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_0;
  
#line 56 
  struct ieee80211_hw *hw = dev_get_drvdata((struct device const *)dev);
  
#line 56 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 56 
  tmp_0 = snprintf(buf,4096UL,"%d\n",(int)ah->ani_state.ofdm_weak_sig);
  
#line 56 
  __retres = (long)tmp_0;
  
#line 56 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static ssize_t ath5k_attr_store_ofdm_weak_signal_detection(struct device *dev, struct device_attribute *attr, char const *buf, size_t count)
{
  ssize_t __retres;
  int val;
  int ret;
  
#line 56 
  struct ieee80211_hw *hw = dev_get_drvdata((struct device const *)dev);
  
#line 56 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 56 
  ret = kstrtoint(buf,10U,& val);
  
#line 56 
  if (ret < 0) {
    
#line 56 
    __retres = (long)ret;
    
#line 56 
    goto return_label;
  }
  else ;
  
#line 56 
  ath5k_ani_set_ofdm_weak_signal_detection(ah,(_Bool)(val != 0));
  
#line 56 
  __retres = (long)count;
  return_label: 
#line 56 
                return __retres;
}


#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static struct device_attribute dev_attr_ofdm_weak_signal_detection = {.attr = {.name = "ofdm_weak_signal_detection", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & ath5k_attr_show_ofdm_weak_signal_detection, .store = & ath5k_attr_store_ofdm_weak_signal_detection};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static ssize_t ath5k_attr_show_cck_weak_signal_detection(struct device *dev, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_0;
  
#line 58 
  struct ieee80211_hw *hw = dev_get_drvdata((struct device const *)dev);
  
#line 58 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 58 
  tmp_0 = snprintf(buf,4096UL,"%d\n",(int)ah->ani_state.cck_weak_sig);
  
#line 58 
  __retres = (long)tmp_0;
  
#line 58 
  return __retres;
}


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static ssize_t ath5k_attr_store_cck_weak_signal_detection(struct device *dev, struct device_attribute *attr, char const *buf, size_t count)
{
  ssize_t __retres;
  int val;
  int ret;
  
#line 58 
  struct ieee80211_hw *hw = dev_get_drvdata((struct device const *)dev);
  
#line 58 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 58 
  ret = kstrtoint(buf,10U,& val);
  
#line 58 
  if (ret < 0) {
    
#line 58 
    __retres = (long)ret;
    
#line 58 
    goto return_label;
  }
  else ;
  
#line 58 
  ath5k_ani_set_cck_weak_signal_detection(ah,(_Bool)(val != 0));
  
#line 58 
  __retres = (long)count;
  return_label: 
#line 58 
                return __retres;
}


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static struct device_attribute dev_attr_cck_weak_signal_detection = {.attr = {.name = "cck_weak_signal_detection", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & ath5k_attr_show_cck_weak_signal_detection, .store = & ath5k_attr_store_cck_weak_signal_detection};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static ssize_t ath5k_attr_show_spur_level_max(struct device *dev, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_0;
  
#line 60 
  struct ieee80211_hw *hw = dev_get_drvdata((struct device const *)dev);
  
#line 60 
  struct ath5k_hw *ah = (struct ath5k_hw *)hw->priv;
  
#line 60 
  tmp_0 = snprintf(buf,4096UL,"%d\n",ah->ani_state.max_spur_level);
  
#line 60 
  __retres = (long)tmp_0;
  
#line 60 
  return __retres;
}


#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static struct device_attribute dev_attr_spur_level_max = {.attr = {.name = "spur_level_max", .mode = (unsigned short)292U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & ath5k_attr_show_spur_level_max, .store = (ssize_t (*)(struct device *, struct device_attribute *, char const *, size_t ))0};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static ssize_t ath5k_attr_show_noise_immunity_level_max(struct device *dev, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp;
  
#line 66 
  tmp = snprintf(buf,4096UL,"%d\n",1);
  
#line 66 
  __retres = (long)tmp;
  
#line 66 
  return __retres;
}


#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static struct device_attribute dev_attr_noise_immunity_level_max = {.attr = {.name = "noise_immunity_level_max", .mode = (unsigned short)292U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & ath5k_attr_show_noise_immunity_level_max, .store = (ssize_t (*)(struct device *, struct device_attribute *, char const *, size_t ))0};

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static ssize_t ath5k_attr_show_firstep_level_max(struct device *dev, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp;
  
#line 75 
  tmp = snprintf(buf,4096UL,"%d\n",2);
  
#line 75 
  __retres = (long)tmp;
  
#line 75 
  return __retres;
}


#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static struct device_attribute dev_attr_firstep_level_max = {.attr = {.name = "firstep_level_max", .mode = (unsigned short)292U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & ath5k_attr_show_firstep_level_max, .store = (ssize_t (*)(struct device *, struct device_attribute *, char const *, size_t ))0};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static struct attribute *ath5k_sysfs_entries_ani[10U] = {& dev_attr_ani_mode.attr, & dev_attr_noise_immunity_level.attr, & dev_attr_spur_level.attr, & dev_attr_firstep_level.attr, & dev_attr_ofdm_weak_signal_detection.attr, & dev_attr_cck_weak_signal_detection.attr, & dev_attr_noise_immunity_level_max.attr, & dev_attr_spur_level_max.attr, & dev_attr_firstep_level_max.attr, (struct attribute *)0};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
static struct attribute_group ath5k_attribute_group_ani = {.name = "ani", .is_visible = (umode_t (*)(struct kobject *, struct attribute *, int ))0, .attrs = (struct attribute **)(& ath5k_sysfs_entries_ani), .bin_attrs = (struct bin_attribute **)0};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
int ath5k_sysfs_register(struct ath5k_hw *ah)
{
  int __retres;
  int err;
  
#line 104 
  struct device *dev = ah->dev;
  
#line 107 
  err = sysfs_create_group(& dev->kobj,(struct attribute_group const *)(& ath5k_attribute_group_ani));
  
#line 108 
  if (err != 0) {
    int tmp;
    
#line 109 
    tmp = net_ratelimit();
    
#line 109 
    if (tmp != 0) 
#line 109 
                  _ath5k_printk((struct ath5k_hw const *)ah,"\001","failed to create sysfs group\n"); else ;
    
#line 110 
    __retres = err;
    
#line 110 
    goto return_label;
  }
  else ;
  
#line 113 
  __retres = 0;
  return_label: 
#line 113 
                return __retres;
}


#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/sysfs.c"
void ath5k_sysfs_unregister(struct ath5k_hw *ah)
{
  
#line 119 
  struct device *dev = ah->dev;
  
#line 121 
  sysfs_remove_group(& dev->kobj,(struct attribute_group const *)(& ath5k_attribute_group_ani));
  
#line 122 
  return;
}


#line 479  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int fls64(__u64 x)
{
  int __retres;
  
#line 481 
  int bitpos = -1;
  
#line 482 
  ldv_inline_asm();
  
#line 490 
  __retres = bitpos + 1;
  
#line 490 
  return __retres;
}


#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitops.h"
__inline static unsigned int fls_long(unsigned long l)
{
  unsigned int __retres;
  int tmp_0;
  
#line 178 
  tmp_0 = fls64((unsigned long long)l);
  
#line 178 
  __retres = (unsigned int)tmp_0;
  
#line 178 
  return __retres;
}


#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static bool is_power_of_2(unsigned long n)
{
  bool __retres;
  
#line 54 
  __retres = (_Bool)((n != 0UL && ((n + 18446744073709551615UL) & n) == 0UL) != 0);
  
#line 54 
  return __retres;
}


#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static unsigned long __roundup_pow_of_two(unsigned long n)
{
  unsigned long __retres;
  unsigned int tmp;
  
#line 63 
  tmp = fls_long(n + 18446744073709551615UL);
  
#line 63 
  __retres = 1UL << tmp;
  
#line 63 
  return __retres;
}


#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/qcu.c"
u32 ath5k_hw_num_tx_pending(struct ath5k_hw *ah, unsigned int queue)
{
  u32 __retres;
  u32 pending;
  
#line 66 
  if ((unsigned int)ah->ah_capabilities.cap_queues.q_tx_num <= queue) {
    
#line 66 
    __retres = 0U;
    
#line 66 
    goto return_label;
  }
  else ;
  
#line 69 
  if (ah->ah_txq[queue].tqi_type == (unsigned int)AR5K_TX_QUEUE_INACTIVE) {
    
#line 70 
    __retres = 0U;
    
#line 70 
    goto return_label;
  }
  else ;
  
#line 73 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) {
    
#line 74 
    __retres = 0U;
    
#line 74 
    goto return_label;
  }
  else ;
  
#line 76 
  pending = ath5k_hw_reg_read(ah,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 2560U)));
  
#line 77 
  pending &= 3U;
  
#line 82 
  if (pending == 0U) {
    u32 tmp;
    
#line 82 
    tmp = ath5k_hw_reg_read(ah,(unsigned short)2112);
    
#line 82 
    ;
    
#line 82 
    if ((tmp & (unsigned int)(1 << queue)) != 0U) {
      
#line 83 
      __retres = 1U;
      
#line 83 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 85 
  __retres = pending;
  return_label: 
#line 85 
                return __retres;
}


#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/qcu.c"
void ath5k_hw_release_tx_queue(struct ath5k_hw *ah, unsigned int queue)
{
  int tmp;
  {
    
#line 96 
    int __ret_warn_on = (unsigned int)ah->ah_capabilities.cap_queues.q_tx_num <= queue;
    
#line 96 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 96 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/qcu.c",96); else ;
    
#line 96 
    tmp = (long)(__ret_warn_on != 0);
  }
  
#line 96 
  if ((long)tmp != 0L) 
#line 97 
                       goto return_label; else ;
  
#line 100 
  ah->ah_txq[queue].tqi_type = AR5K_TX_QUEUE_INACTIVE;
  
#line 102 
  ah->ah_txq_status &= (unsigned int)(~ (1 << queue));
  return_label: 
#line 103 
                return;
}


#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/qcu.c"
static u16 ath5k_cw_validate(u16 cw_req)
{
  u16 __retres;
  int tmp_0;
  bool tmp_1;
  bool tmp_2;
  {
    int tmp;
    
#line 114 
    u16 _min1 = cw_req;
    
#line 114 
    unsigned short _min2 = (unsigned short)1023U;
    
#line 114 
    if ((int)_min1 < (int)_min2) 
#line 114 
                                 tmp = (int)_min1; else 
#line 114 
                                                        tmp = (int)_min2;
    
#line 114 
    tmp_0 = tmp;
  }
  
#line 114 
  cw_req = (unsigned short)tmp_0;
  
#line 117 
  tmp_1 = is_power_of_2((unsigned long)((int)cw_req + 1));
  
#line 117 
  if ((int)tmp_1 != 0) {
    
#line 118 
    __retres = cw_req;
    
#line 118 
    goto return_label;
  }
  else ;
  
#line 121 
  tmp_2 = is_power_of_2((unsigned long)cw_req);
  
#line 121 
  if ((int)tmp_2 != 0) {
    
#line 122 
    __retres = (unsigned short)((unsigned int)cw_req + 65535U);
    
#line 122 
    goto return_label;
  }
  else ;
  
#line 126 
  if (0 != 0) {
    unsigned int tmp_72;
    
#line 126 
    if ((unsigned int)cw_req != 1U) {
      unsigned long tmp_71;
      
#line 126 
      if (0 != 0) {
        unsigned long tmp_69;
        
#line 126 
        if ((int)cw_req + -1 <= 0) {
          int tmp_3;
          
#line 126 
          tmp_3 = ____ilog2_NaN();
          
#line 126 
          tmp_69 = 1UL << (tmp_3 + 1);
        }
        else {
          unsigned long tmp_68;
          
#line 126 
          if ((int)cw_req + -1 >= 0) {
            unsigned long tmp_67;
            
#line 126 
            if (((unsigned long long)((int)cw_req + -1) & 4611686018427387904ULL) == 0ULL) {
              unsigned long tmp_66;
              
#line 126 
              if (((unsigned long long)((int)cw_req + -1) & 2305843009213693952ULL) == 0ULL) {
                unsigned long tmp_65;
                
#line 126 
                if (((unsigned long long)((int)cw_req + -1) & 1152921504606846976ULL) == 0ULL) {
                  unsigned long tmp_64;
                  
#line 126 
                  if (((unsigned long long)((int)cw_req + -1) & 576460752303423488ULL) == 0ULL) {
                    unsigned long tmp_63;
                    
#line 126 
                    if (((unsigned long long)((int)cw_req + -1) & 288230376151711744ULL) == 0ULL) {
                      unsigned long tmp_62;
                      
#line 126 
                      if (((unsigned long long)((int)cw_req + -1) & 144115188075855872ULL) == 0ULL) {
                        unsigned long tmp_61;
                        
#line 126 
                        if (((unsigned long long)((int)cw_req + -1) & 72057594037927936ULL) == 0ULL) {
                          unsigned long tmp_60;
                          
#line 126 
                          if (((unsigned long long)((int)cw_req + -1) & 36028797018963968ULL) == 0ULL) {
                            unsigned long tmp_59;
                            
#line 126 
                            if (((unsigned long long)((int)cw_req + -1) & 18014398509481984ULL) == 0ULL) {
                              unsigned long tmp_58;
                              
#line 126 
                              if (((unsigned long long)((int)cw_req + -1) & 9007199254740992ULL) == 0ULL) {
                                unsigned long tmp_57;
                                
#line 126 
                                if (((unsigned long long)((int)cw_req + -1) & 4503599627370496ULL) == 0ULL) {
                                  unsigned long tmp_56;
                                  
#line 126 
                                  if (((unsigned long long)((int)cw_req + -1) & 2251799813685248ULL) == 0ULL) {
                                    unsigned long tmp_55;
                                    
#line 126 
                                    if (((unsigned long long)((int)cw_req + -1) & 1125899906842624ULL) == 0ULL) {
                                      unsigned long tmp_54;
                                      
#line 126 
                                      if (((unsigned long long)((int)cw_req + -1) & 562949953421312ULL) == 0ULL) {
                                        unsigned long tmp_53;
                                        
#line 126 
                                        if (((unsigned long long)((int)cw_req + -1) & 281474976710656ULL) == 0ULL) {
                                          unsigned long tmp_52;
                                          
#line 126 
                                          if (((unsigned long long)((int)cw_req + -1) & 140737488355328ULL) == 0ULL) {
                                            unsigned long tmp_51;
                                            
#line 126 
                                            if (((unsigned long long)((int)cw_req + -1) & 70368744177664ULL) == 0ULL) {
                                              unsigned long tmp_50;
                                              
#line 126 
                                              if (((unsigned long long)((int)cw_req + -1) & 35184372088832ULL) == 0ULL) {
                                                unsigned long tmp_49;
                                                
#line 126 
                                                if (((unsigned long long)((int)cw_req + -1) & 17592186044416ULL) == 0ULL) {
                                                  unsigned long tmp_48;
                                                  
#line 126 
                                                  if (((unsigned long long)((int)cw_req + -1) & 8796093022208ULL) == 0ULL) {
                                                    unsigned long tmp_47;
                                                    
#line 126 
                                                    if (((unsigned long long)((int)cw_req + -1) & 4398046511104ULL) == 0ULL) {
                                                      unsigned long tmp_46;
                                                      
#line 126 
                                                      if (((unsigned long long)((int)cw_req + -1) & 2199023255552ULL) == 0ULL) {
                                                        unsigned long tmp_45;
                                                        
#line 126 
                                                        if (((unsigned long long)((int)cw_req + -1) & 1099511627776ULL) == 0ULL) {
                                                          unsigned long tmp_44;
                                                          
#line 126 
                                                          if (((unsigned long long)((int)cw_req + -1) & 549755813888ULL) == 0ULL) {
                                                            unsigned long tmp_43;
                                                            
#line 126 
                                                            if (((unsigned long long)((int)cw_req + -1) & 274877906944ULL) == 0ULL) {
                                                              unsigned long tmp_42;
                                                              
#line 126 
                                                              if (((unsigned long long)((int)cw_req + -1) & 137438953472ULL) == 0ULL) {
                                                                unsigned long tmp_41;
                                                                
#line 126 
                                                                if (((unsigned long long)((int)cw_req + -1) & 68719476736ULL) == 0ULL) {
                                                                  unsigned long tmp_40;
                                                                  
#line 126 
                                                                  if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 34359738368ULL) == 0ULL) {
                                                                    unsigned long tmp_39;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 17179869184ULL) == 0ULL) {
                                                                    unsigned long tmp_38;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 8589934592ULL) == 0ULL) {
                                                                    unsigned long tmp_37;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 4294967296ULL) == 0ULL) {
                                                                    unsigned long tmp_36;
                                                                    
#line 126 
                                                                    if (
                                                                    (int)cw_req + -1 >= 0) {
                                                                    unsigned long tmp_35;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 1073741824ULL) == 0ULL) {
                                                                    unsigned long tmp_34;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 536870912ULL) == 0ULL) {
                                                                    unsigned long tmp_33;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 268435456ULL) == 0ULL) {
                                                                    unsigned long tmp_32;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 134217728ULL) == 0ULL) {
                                                                    unsigned long tmp_31;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 67108864ULL) == 0ULL) {
                                                                    unsigned long tmp_30;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 33554432ULL) == 0ULL) {
                                                                    unsigned long tmp_29;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 16777216ULL) == 0ULL) {
                                                                    unsigned long tmp_28;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 8388608ULL) == 0ULL) {
                                                                    unsigned long tmp_27;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 4194304ULL) == 0ULL) {
                                                                    unsigned long tmp_26;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 2097152ULL) == 0ULL) {
                                                                    unsigned long tmp_25;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 1048576ULL) == 0ULL) {
                                                                    unsigned long tmp_24;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 524288ULL) == 0ULL) {
                                                                    unsigned long tmp_23;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 262144ULL) == 0ULL) {
                                                                    unsigned long tmp_22;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 131072ULL) == 0ULL) {
                                                                    unsigned long tmp_21;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 65536ULL) == 0ULL) {
                                                                    unsigned long tmp_20;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 32768ULL) == 0ULL) {
                                                                    unsigned long tmp_19;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 16384ULL) == 0ULL) {
                                                                    unsigned long tmp_18;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 8192ULL) == 0ULL) {
                                                                    unsigned long tmp_17;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 4096ULL) == 0ULL) {
                                                                    unsigned long tmp_16;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 2048ULL) == 0ULL) {
                                                                    unsigned long tmp_15;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 1024ULL) == 0ULL) {
                                                                    unsigned long tmp_14;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 512ULL) == 0ULL) {
                                                                    unsigned long tmp_13;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 256ULL) == 0ULL) {
                                                                    unsigned long tmp_12;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 128ULL) == 0ULL) {
                                                                    unsigned long tmp_11;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 64ULL) == 0ULL) {
                                                                    unsigned long tmp_10;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 32ULL) == 0ULL) {
                                                                    unsigned long tmp_9;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 16ULL) == 0ULL) {
                                                                    unsigned long tmp_8;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 8ULL) == 0ULL) {
                                                                    unsigned long tmp_7;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 4ULL) == 0ULL) {
                                                                    unsigned long tmp_6;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 2ULL) == 0ULL) {
                                                                    unsigned long tmp_5;
                                                                    
#line 126 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_req + -1) & 1ULL) == 0ULL) {
                                                                    int tmp_4;
                                                                    
#line 126 
                                                                    tmp_4 = ____ilog2_NaN();
                                                                    
#line 126 
                                                                    tmp_5 = 1UL << (tmp_4 + 1);
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_5 = 2UL;
                                                                    
#line 126 
                                                                    tmp_6 = tmp_5;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_6 = 4UL;
                                                                    
#line 126 
                                                                    tmp_7 = tmp_6;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_7 = 8UL;
                                                                    
#line 126 
                                                                    tmp_8 = tmp_7;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_8 = 16UL;
                                                                    
#line 126 
                                                                    tmp_9 = tmp_8;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_9 = 32UL;
                                                                    
#line 126 
                                                                    tmp_10 = tmp_9;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_10 = 64UL;
                                                                    
#line 126 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_11 = 128UL;
                                                                    
#line 126 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_12 = 256UL;
                                                                    
#line 126 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_13 = 512UL;
                                                                    
#line 126 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_14 = 1024UL;
                                                                    
#line 126 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_15 = 2048UL;
                                                                    
#line 126 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_16 = 4096UL;
                                                                    
#line 126 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_17 = 8192UL;
                                                                    
#line 126 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_18 = 16384UL;
                                                                    
#line 126 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_19 = 32768UL;
                                                                    
#line 126 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_20 = 65536UL;
                                                                    
#line 126 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_21 = 131072UL;
                                                                    
#line 126 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_22 = 262144UL;
                                                                    
#line 126 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_23 = 524288UL;
                                                                    
#line 126 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_24 = 1048576UL;
                                                                    
#line 126 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_25 = 2097152UL;
                                                                    
#line 126 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_26 = 4194304UL;
                                                                    
#line 126 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_27 = 8388608UL;
                                                                    
#line 126 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_28 = 16777216UL;
                                                                    
#line 126 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_29 = 33554432UL;
                                                                    
#line 126 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_30 = 67108864UL;
                                                                    
#line 126 
                                                                    tmp_31 = tmp_30;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_31 = 134217728UL;
                                                                    
#line 126 
                                                                    tmp_32 = tmp_31;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_32 = 268435456UL;
                                                                    
#line 126 
                                                                    tmp_33 = tmp_32;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_33 = 536870912UL;
                                                                    
#line 126 
                                                                    tmp_34 = tmp_33;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_34 = 1073741824UL;
                                                                    
#line 126 
                                                                    tmp_35 = tmp_34;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_35 = 2147483648UL;
                                                                    
#line 126 
                                                                    tmp_36 = tmp_35;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_36 = 4294967296UL;
                                                                    
#line 126 
                                                                    tmp_37 = tmp_36;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_37 = 8589934592UL;
                                                                    
#line 126 
                                                                    tmp_38 = tmp_37;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_38 = 17179869184UL;
                                                                    
#line 126 
                                                                    tmp_39 = tmp_38;
                                                                    }
                                                                    else 
                                                                    
#line 126 
                                                                    tmp_39 = 34359738368UL;
                                                                    
#line 126 
                                                                    tmp_40 = tmp_39;
                                                                  }
                                                                  else 
                                                                    
#line 126 
                                                                    tmp_40 = 68719476736UL;
                                                                  
#line 126 
                                                                  tmp_41 = tmp_40;
                                                                }
                                                                else 
                                                                  
#line 126 
                                                                  tmp_41 = 137438953472UL;
                                                                
#line 126 
                                                                tmp_42 = tmp_41;
                                                              }
                                                              else 
#line 126 
                                                                   tmp_42 = 274877906944UL;
                                                              
#line 126 
                                                              tmp_43 = tmp_42;
                                                            }
                                                            else 
#line 126 
                                                                 tmp_43 = 549755813888UL;
                                                            
#line 126 
                                                            tmp_44 = tmp_43;
                                                          }
                                                          else 
#line 126 
                                                               tmp_44 = 1099511627776UL;
                                                          
#line 126 
                                                          tmp_45 = tmp_44;
                                                        }
                                                        else 
#line 126 
                                                             tmp_45 = 2199023255552UL;
                                                        
#line 126 
                                                        tmp_46 = tmp_45;
                                                      }
                                                      else 
#line 126 
                                                           tmp_46 = 4398046511104UL;
                                                      
#line 126 
                                                      tmp_47 = tmp_46;
                                                    }
                                                    else 
#line 126 
                                                         tmp_47 = 8796093022208UL;
                                                    
#line 126 
                                                    tmp_48 = tmp_47;
                                                  }
                                                  else 
#line 126 
                                                       tmp_48 = 17592186044416UL;
                                                  
#line 126 
                                                  tmp_49 = tmp_48;
                                                }
                                                else 
#line 126 
                                                     tmp_49 = 35184372088832UL;
                                                
#line 126 
                                                tmp_50 = tmp_49;
                                              }
                                              else 
#line 126 
                                                   tmp_50 = 70368744177664UL;
                                              
#line 126 
                                              tmp_51 = tmp_50;
                                            }
                                            else 
#line 126 
                                                 tmp_51 = 140737488355328UL;
                                            
#line 126 
                                            tmp_52 = tmp_51;
                                          }
                                          else 
#line 126 
                                               tmp_52 = 281474976710656UL;
                                          
#line 126 
                                          tmp_53 = tmp_52;
                                        }
                                        else 
#line 126 
                                             tmp_53 = 562949953421312UL;
                                        
#line 126 
                                        tmp_54 = tmp_53;
                                      }
                                      else 
#line 126 
                                           tmp_54 = 1125899906842624UL;
                                      
#line 126 
                                      tmp_55 = tmp_54;
                                    }
                                    else 
#line 126 
                                         tmp_55 = 2251799813685248UL;
                                    
#line 126 
                                    tmp_56 = tmp_55;
                                  }
                                  else 
#line 126 
                                       tmp_56 = 4503599627370496UL;
                                  
#line 126 
                                  tmp_57 = tmp_56;
                                }
                                else 
#line 126 
                                     tmp_57 = 9007199254740992UL;
                                
#line 126 
                                tmp_58 = tmp_57;
                              }
                              else 
#line 126 
                                   tmp_58 = 18014398509481984UL;
                              
#line 126 
                              tmp_59 = tmp_58;
                            }
                            else 
#line 126 
                                 tmp_59 = 36028797018963968UL;
                            
#line 126 
                            tmp_60 = tmp_59;
                          }
                          else 
#line 126 
                               tmp_60 = 72057594037927936UL;
                          
#line 126 
                          tmp_61 = tmp_60;
                        }
                        else 
#line 126 
                             tmp_61 = 144115188075855872UL;
                        
#line 126 
                        tmp_62 = tmp_61;
                      }
                      else 
#line 126 
                           tmp_62 = 288230376151711744UL;
                      
#line 126 
                      tmp_63 = tmp_62;
                    }
                    else 
#line 126 
                         tmp_63 = 576460752303423488UL;
                    
#line 126 
                    tmp_64 = tmp_63;
                  }
                  else 
#line 126 
                       tmp_64 = 1152921504606846976UL;
                  
#line 126 
                  tmp_65 = tmp_64;
                }
                else 
#line 126 
                     tmp_65 = 2305843009213693952UL;
                
#line 126 
                tmp_66 = tmp_65;
              }
              else 
#line 126 
                   tmp_66 = 4611686018427387904UL;
              
#line 126 
              tmp_67 = tmp_66;
            }
            else 
#line 126 
                 tmp_67 = 9223372036854775808UL;
            
#line 126 
            tmp_68 = tmp_67;
          }
          else 
#line 126 
               tmp_68 = 0UL;
          
#line 126 
          tmp_69 = tmp_68;
        }
        
#line 126 
        tmp_71 = tmp_69;
      }
      else {
        int tmp_70;
        
#line 126 
        tmp_70 = __ilog2_u32((unsigned int)((int)cw_req + -1));
        
#line 126 
        tmp_71 = 1UL << (tmp_70 + 1);
      }
      
#line 126 
      tmp_72 = (unsigned int)((unsigned short)tmp_71) + 65535U;
    }
    else 
#line 126 
         tmp_72 = 0U;
    
#line 126 
    cw_req = (unsigned short)tmp_72;
  }
  else {
    unsigned long tmp_73;
    
#line 126 
    tmp_73 = __roundup_pow_of_two((unsigned long)cw_req);
    
#line 126 
    cw_req = (unsigned short)((unsigned int)((unsigned short)tmp_73) + 65535U);
  }
  
#line 128 
  __retres = cw_req;
  return_label: 
#line 128 
                return __retres;
}


#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/qcu.c"
int ath5k_hw_get_tx_queueprops(struct ath5k_hw *ah, int queue, struct ath5k_txq_info *queue_info)
{
  int __retres;
  
#line 141 
  memcpy((void *)queue_info,(void const *)(& ah->ah_txq[queue]),32UL);
  
#line 142 
  __retres = 0;
  
#line 142 
  return __retres;
}


#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/qcu.c"
int ath5k_hw_set_tx_queueprops(struct ath5k_hw *ah, int queue, struct ath5k_txq_info const *qinfo)
{
  int __retres;
  struct ath5k_txq_info *qi;
  int tmp_0;
  
#line 159 
  if ((int)ah->ah_capabilities.cap_queues.q_tx_num <= queue) {
    
#line 159 
    __retres = 0;
    
#line 159 
    goto return_label;
  }
  else ;
  
#line 161 
  qi = & ah->ah_txq[queue];
  
#line 163 
  if (qi->tqi_type == (unsigned int)AR5K_TX_QUEUE_INACTIVE) {
    
#line 164 
    __retres = -5;
    
#line 164 
    goto return_label;
  }
  else ;
  
#line 167 
  qi->tqi_type = qinfo->tqi_type;
  
#line 168 
  qi->tqi_subtype = qinfo->tqi_subtype;
  
#line 169 
  qi->tqi_flags = qinfo->tqi_flags;
  {
    int tmp;
    
#line 175 
    u8 const _min1 = qinfo->tqi_aifs;
    
#line 175 
    unsigned char _min2 = (unsigned char)252U;
    
#line 175 
    if ((int)_min1 < (int)_min2) 
#line 175 
                                 tmp = (int)_min1; else 
#line 175 
                                                        tmp = (int)_min2;
    
#line 175 
    tmp_0 = tmp;
  }
  
#line 175 
  qi->tqi_aifs = (unsigned char)tmp_0;
  
#line 176 
  qi->tqi_cw_min = ath5k_cw_validate((unsigned short)((int)qinfo->tqi_cw_min));
  
#line 177 
  qi->tqi_cw_max = ath5k_cw_validate((unsigned short)((int)qinfo->tqi_cw_max));
  
#line 178 
  qi->tqi_cbr_period = qinfo->tqi_cbr_period;
  
#line 179 
  qi->tqi_cbr_overflow_limit = qinfo->tqi_cbr_overflow_limit;
  
#line 180 
  qi->tqi_burst_time = qinfo->tqi_burst_time;
  
#line 181 
  qi->tqi_ready_time = qinfo->tqi_ready_time;
  
#line 185 
  if ((qinfo->tqi_type == (unsigned int)AR5K_TX_QUEUE_DATA && (unsigned int)qinfo->tqi_subtype + 4294967294U <= 1U) || qinfo->tqi_type == (unsigned int)AR5K_TX_QUEUE_UAPSD) 
    
#line 189 
    qi->tqi_flags = (unsigned short)((unsigned int)qi->tqi_flags | 4096U); else ;
  
#line 191 
  __retres = 0;
  return_label: 
#line 191 
                return __retres;
}


#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/qcu.c"
int ath5k_hw_setup_tx_queue(struct ath5k_hw *ah, enum ath5k_tx_queue queue_type, struct ath5k_txq_info *queue_info)
{
  int __retres;
  unsigned int queue;
  int ret;
  
#line 213 
  if ((unsigned int)ah->ah_capabilities.cap_queues.q_tx_num == 2U) {
    
#line 214 
    switch ((unsigned int)queue_type) {
      case (unsigned int)1: 
#line 215 
      ;
      
#line 216 
      queue = 0U;
      
#line 217 
      goto ldv_50444;
      case (unsigned int)2: 
#line 218 
      ;
      case (unsigned int)3: 
#line 219 
      ;
      
#line 220 
      queue = 1U;
      
#line 221 
      goto ldv_50444;
      default: 
#line 222 
      ;
      
#line 223 
      __retres = -22;
      
#line 223 
      goto return_label;
    }
    ldv_50444: 
#line 225 
    ;
  }
  else {
    
#line 226 
    switch ((unsigned int)queue_type) {
      case (unsigned int)1: 
#line 227 
      ;
      
#line 228 
      queue = (unsigned int)queue_info->tqi_subtype;
      
#line 229 
      goto ldv_50449;
      case (unsigned int)4: 
#line 230 
      ;
      
#line 231 
      queue = 7U;
      
#line 232 
      goto ldv_50449;
      case (unsigned int)2: 
#line 233 
      ;
      
#line 234 
      queue = 9U;
      
#line 235 
      goto ldv_50449;
      case (unsigned int)3: 
#line 236 
      ;
      
#line 237 
      queue = 8U;
      
#line 238 
      goto ldv_50449;
      default: 
#line 239 
      ;
      
#line 240 
      __retres = -22;
      
#line 240 
      goto return_label;
    }
    ldv_50449: 
#line 242 
    ;
  }
  
#line 247 
  memset((void *)(& ah->ah_txq[queue]),0,32UL);
  
#line 248 
  ah->ah_txq[queue].tqi_type = queue_type;
  
#line 250 
  if (queue_info != (struct ath5k_txq_info *)0) {
    
#line 251 
    queue_info->tqi_type = queue_type;
    
#line 252 
    ret = ath5k_hw_set_tx_queueprops(ah,(int)queue,(struct ath5k_txq_info const *)queue_info);
    
#line 253 
    if (ret != 0) {
      
#line 254 
      __retres = ret;
      
#line 254 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 262 
  ah->ah_txq_status |= (unsigned int)(1 << queue);
  
#line 264 
  __retres = (int)queue;
  return_label: 
#line 264 
                return __retres;
}


#line 281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/qcu.c"
void ath5k_hw_set_tx_retry_limits(struct ath5k_hw *ah, unsigned int queue)
{
  
#line 285 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) {
    
#line 286 
    struct ath5k_txq_info *tq = & ah->ah_txq[queue];
    
#line 288 
    if (queue != 0U) 
#line 289 
                     goto return_label; else ;
    
#line 291 
    ath5k_hw_reg_write(ah,(unsigned int)((((((int)tq->tqi_cw_min << 20) | (((int)ah->ah_retry_long << 14) & 1032192)) | (((int)ah->ah_retry_short << 8) & 16128)) | (((int)ah->ah_retry_long << 4) & 255)) | ((int)ah->ah_retry_short & 15)),(unsigned short)32796);
  }
  else {
    int tmp_0;
    
#line 304 
    ;
    {
      int tmp;
      
#line 309 
      u8 _max1 = ah->ah_retry_long;
      
#line 309 
      u8 _max2 = ah->ah_retry_short;
      
#line 309 
      if ((int)_max1 > (int)_max2) 
#line 309 
                                   tmp = (int)_max1; else 
#line 309 
                                                          tmp = (int)_max2;
      
#line 309 
      tmp_0 = tmp;
    }
    
#line 304 
    ;
    
#line 304 
    ;
    
#line 304 
    ath5k_hw_reg_write(ah,(unsigned int)((((int)ah->ah_retry_long & 15) | (((int)ah->ah_retry_long << 8) & 16128)) | ((tmp_0 << 14) & 1032192)),(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 4224U)));
  }
  return_label: 
#line 312 
                return;
}


#line 324  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/qcu.c"
int ath5k_hw_reset_tx_queue(struct ath5k_hw *ah, unsigned int queue)
{
  int __retres;
  u32 tmp;
  u32 tmp_9;
  u32 tmp_10;
  
#line 326 
  struct ath5k_txq_info *tq = & ah->ah_txq[queue];
  
#line 328 
  if ((unsigned int)ah->ah_capabilities.cap_queues.q_tx_num <= queue) {
    
#line 328 
    __retres = 0;
    
#line 328 
    goto return_label;
  }
  else ;
  
#line 330 
  tq = & ah->ah_txq[queue];
  
#line 334 
  if (ah->ah_version == (unsigned int)AR5K_AR5210 || tq->tqi_type == (unsigned int)AR5K_TX_QUEUE_INACTIVE) {
    
#line 336 
    __retres = 0;
    
#line 336 
    goto return_label;
  }
  else ;
  
#line 342 
  ath5k_hw_reg_write(ah,(unsigned int)((((int)tq->tqi_cw_min & 1023) | (((int)tq->tqi_cw_max << 10) & 1047552)) | (((int)tq->tqi_aifs << 20) & 267386880)),(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 4160U)));
  
#line 351 
  ath5k_hw_set_tx_retry_limits(ah,queue);
  
#line 359 
  ;
  
#line 359 
  tmp = ath5k_hw_reg_read(ah,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 4352U)));
  
#line 359 
  ;
  
#line 359 
  ath5k_hw_reg_write(ah,tmp | 256U,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 4352U)));
  
#line 363 
  if ((unsigned int)ah->ah_mac_version <= 63U) {
    u32 tmp_0;
    
#line 364 
    ;
    
#line 364 
    tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 4352U)));
    
#line 364 
    ;
    
#line 364 
    ath5k_hw_reg_write(ah,tmp_0 | 16777216U,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 4352U)));
  }
  else ;
  
#line 368 
  if (tq->tqi_cbr_period != 0U) {
    u32 tmp_1;
    
#line 369 
    ath5k_hw_reg_write(ah,(tq->tqi_cbr_period & 16777215U) | (tq->tqi_cbr_overflow_limit << 24),(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 2240U)));
    
#line 375 
    ;
    
#line 375 
    tmp_1 = ath5k_hw_reg_read(ah,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 2496U)));
    
#line 375 
    ;
    
#line 375 
    ath5k_hw_reg_write(ah,tmp_1 | 1U,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 2496U)));
    
#line 378 
    if (tq->tqi_cbr_overflow_limit != 0U) {
      u32 tmp_2;
      
#line 379 
      ;
      
#line 379 
      tmp_2 = ath5k_hw_reg_read(ah,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 2496U)));
      
#line 379 
      ;
      
#line 379 
      ath5k_hw_reg_write(ah,tmp_2 | 256U,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 2496U)));
    }
    else ;
  }
  else ;
  
#line 384 
  if (tq->tqi_ready_time != 0U && tq->tqi_type != (unsigned int)AR5K_TX_QUEUE_CAB) 
    
#line 385 
    ath5k_hw_reg_write(ah,(tq->tqi_ready_time & 16777215U) | 16777216U,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 2304U))); else ;
  
#line 390 
  if (tq->tqi_burst_time != 0U) {
    
#line 391 
    ath5k_hw_reg_write(ah,(tq->tqi_burst_time & 1048575U) | 1048576U,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 4288U)));
    
#line 396 
    if (((int)tq->tqi_flags & 768) != 0) {
      u32 tmp_3;
      
#line 397 
      ;
      
#line 397 
      tmp_3 = ath5k_hw_reg_read(ah,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 2496U)));
      
#line 397 
      ;
      
#line 397 
      ath5k_hw_reg_write(ah,tmp_3 | 512U,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 2496U)));
    }
    else ;
  }
  else ;
  
#line 402 
  if (((int)tq->tqi_flags & 512) != 0) 
#line 403 
                                       ath5k_hw_reg_write(ah,2097152U,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 4352U))); else ;
  
#line 407 
  if (((int)tq->tqi_flags & 2048) != 0) 
#line 408 
                                        ath5k_hw_reg_write(ah,512U,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 4352U))); else ;
  
#line 414 
  switch ((unsigned int)tq->tqi_type) {
    u32 tmp_4;
    u32 tmp_5;
    u32 tmp_6;
    u32 tmp_7;
    u32 tmp_8;
    case (unsigned int)2: 
#line 415 
    ;
    
#line 416 
    ;
    
#line 416 
    tmp_4 = ath5k_hw_reg_read(ah,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 2496U)));
    
#line 416 
    ;
    
#line 416 
    ath5k_hw_reg_write(ah,tmp_4 | 194U,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 2496U)));
    
#line 421 
    ;
    
#line 421 
    tmp_5 = ath5k_hw_reg_read(ah,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 4352U)));
    
#line 421 
    ;
    
#line 421 
    ath5k_hw_reg_write(ah,tmp_5 | 2949120U,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 4352U)));
    
#line 427 
    goto ldv_50468;
    case (unsigned int)3: 
#line 429 
    ;
    
#line 431 
    ;
    
#line 431 
    tmp_6 = ath5k_hw_reg_read(ah,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 2496U)));
    
#line 431 
    ;
    
#line 431 
    ath5k_hw_reg_write(ah,tmp_6 | 98U,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 2496U)));
    
#line 436 
    ath5k_hw_reg_write(ah,(tq->tqi_ready_time + 4194296U) * 1024U | 16777216U,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 2304U)));
    
#line 443 
    ;
    
#line 443 
    tmp_7 = ath5k_hw_reg_read(ah,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 4352U)));
    
#line 443 
    ;
    
#line 443 
    ath5k_hw_reg_write(ah,tmp_7 | 262144U,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 4352U)));
    
#line 446 
    goto ldv_50468;
    case (unsigned int)4: 
#line 448 
    ;
    
#line 449 
    ;
    
#line 449 
    tmp_8 = ath5k_hw_reg_read(ah,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 2496U)));
    
#line 449 
    ;
    
#line 449 
    ath5k_hw_reg_write(ah,tmp_8 | 32U,(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 2496U)));
    
#line 451 
    goto ldv_50468;
    case (unsigned int)1: 
#line 453 
    ;
    default: 
#line 454 
    ;
    
#line 455 
    goto ldv_50468;
  }
  ldv_50468: 
#line 464 
  ;
  
#line 464 
  if (((int)tq->tqi_flags & 1) != 0) 
#line 465 
                                     ah->ah_txq_imr_txok |= (unsigned int)(1 << queue); else ;
  
#line 467 
  if (((int)tq->tqi_flags & 2) != 0) 
#line 468 
                                     ah->ah_txq_imr_txerr |= (unsigned int)(1 << queue); else ;
  
#line 470 
  if (((int)tq->tqi_flags & 16) != 0) 
#line 471 
                                      ah->ah_txq_imr_txurn |= (unsigned int)(1 << queue); else ;
  
#line 473 
  if (((int)tq->tqi_flags & 8) != 0) 
#line 474 
                                     ah->ah_txq_imr_txdesc |= (unsigned int)(1 << queue); else ;
  
#line 476 
  if (((int)tq->tqi_flags & 4) != 0) 
#line 477 
                                     ah->ah_txq_imr_txeol |= (unsigned int)(1 << queue); else ;
  
#line 479 
  if (((int)tq->tqi_flags & 32) != 0) 
#line 480 
                                      ah->ah_txq_imr_cbrorn |= (unsigned int)(1 << queue); else ;
  
#line 482 
  if (((int)tq->tqi_flags & 64) != 0) 
#line 483 
                                      ah->ah_txq_imr_cbrurn |= (unsigned int)(1 << queue); else ;
  
#line 485 
  if (((int)tq->tqi_flags & 128) != 0) 
#line 486 
                                       ah->ah_txq_imr_qtrig |= (unsigned int)(1 << queue); else ;
  
#line 488 
  if (((int)tq->tqi_flags & 256) != 0) 
#line 489 
                                       ah->ah_txq_imr_nofrm |= (unsigned int)(1 << queue); else ;
  
#line 494 
  ah->ah_txq_imr_txok &= ah->ah_txq_status;
  
#line 495 
  ah->ah_txq_imr_txerr &= ah->ah_txq_status;
  
#line 496 
  ah->ah_txq_imr_txurn &= ah->ah_txq_status;
  
#line 497 
  ah->ah_txq_imr_txdesc &= ah->ah_txq_status;
  
#line 498 
  ah->ah_txq_imr_txeol &= ah->ah_txq_status;
  
#line 499 
  ah->ah_txq_imr_cbrorn &= ah->ah_txq_status;
  
#line 500 
  ah->ah_txq_imr_cbrurn &= ah->ah_txq_status;
  
#line 501 
  ah->ah_txq_imr_qtrig &= ah->ah_txq_status;
  
#line 502 
  ah->ah_txq_imr_nofrm &= ah->ah_txq_status;
  
#line 504 
  ath5k_hw_reg_write(ah,(ah->ah_txq_imr_txok & 1023U) | ((ah->ah_txq_imr_txdesc << 16) & 67043328U),(unsigned short)164);
  
#line 510 
  ath5k_hw_reg_write(ah,(ah->ah_txq_imr_txerr & 1023U) | ((ah->ah_txq_imr_txeol << 16) & 67043328U),(unsigned short)168);
  
#line 517 
  tmp_9 = ath5k_hw_reg_read(ah,(unsigned short)172);
  
#line 517 
  ;
  
#line 517 
  ath5k_hw_reg_write(ah,tmp_9 & 4294966272U,(unsigned short)172);
  
#line 518 
  tmp_10 = ath5k_hw_reg_read(ah,(unsigned short)172);
  
#line 518 
  ;
  
#line 518 
  ;
  
#line 518 
  ath5k_hw_reg_write(ah,tmp_10 | (ah->ah_txq_imr_txurn & 1023U),(unsigned short)172);
  
#line 522 
  ath5k_hw_reg_write(ah,(ah->ah_txq_imr_cbrorn & 1023U) | ((ah->ah_txq_imr_cbrurn << 16) & 67043328U),(unsigned short)176);
  
#line 528 
  ath5k_hw_reg_write(ah,ah->ah_txq_imr_qtrig & 1023U,(unsigned short)180);
  
#line 532 
  ath5k_hw_reg_write(ah,(ah->ah_txq_imr_nofrm << 10) & 1047552U,(unsigned short)76);
  
#line 537 
  if (ah->ah_txq_imr_nofrm == 0U) 
#line 538 
                                  ath5k_hw_reg_write(ah,0U,(unsigned short)76); else ;
  
#line 541 
  ath5k_hw_reg_write(ah,(unsigned int)(1 << queue),(unsigned short)((int)((unsigned int)((int)((unsigned short)queue) << 2U) + 4096U)));
  
#line 543 
  __retres = 0;
  return_label: 
#line 543 
                return __retres;
}


#line 559  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/qcu.c"
int ath5k_hw_set_ifs_intervals(struct ath5k_hw *ah, unsigned int slot_time)
{
  int __retres;
  enum ieee80211_band band;
  struct ieee80211_supported_band *sband;
  struct ieee80211_rate *rate;
  u32 ack_tx_time;
  u32 eifs;
  u32 eifs_clock;
  u32 sifs;
  u32 sifs_clock;
  u32 rate_flags;
  u32 i;
  int tmp_0;
  int tmp_1;
  u32 tmp_2;
  
#line 561 
  struct ieee80211_channel *channel = ah->ah_current_channel;
  
#line 566 
  u32 slot_time_clock = ath5k_hw_htoclock(ah,slot_time);
  
#line 569 
  if (slot_time <= 5U || slot_time_clock > 65535U) {
    
#line 570 
    __retres = -22;
    
#line 570 
    goto return_label;
  }
  else ;
  
#line 572 
  sifs = ath5k_hw_get_default_sifs(ah);
  
#line 573 
  sifs_clock = ath5k_hw_htoclock(ah,sifs + 4294967294U);
  
#line 599 
  if (channel->band == (unsigned int)IEEE80211_BAND_5GHZ) 
#line 600 
                                                          band = IEEE80211_BAND_5GHZ; else 
                                                                    
#line 602 
                                                                    band = IEEE80211_BAND_2GHZ;
  
#line 604 
  switch ((int)ah->ah_bwmode) {
    case 1: 
#line 605 
    ;
    
#line 606 
    rate_flags = 32U;
    
#line 607 
    goto ldv_50490;
    case 2: 
#line 608 
    ;
    
#line 609 
    rate_flags = 64U;
    
#line 610 
    goto ldv_50490;
    default: 
#line 611 
    ;
    
#line 612 
    rate_flags = 0U;
    
#line 613 
    goto ldv_50490;
  }
  ldv_50490: 
#line 615 
  ;
  
#line 615 
  sband = & ah->sbands[(unsigned int)band];
  
#line 616 
  rate = (struct ieee80211_rate *)0;
  
#line 617 
  i = 0U;
  
#line 617 
  goto ldv_50496;
  ldv_50495: 
#line 618 
  ;
  
#line 618 
  if (((sband->bitrates + i)->flags & rate_flags) != rate_flags) 
#line 619 
                                                                 goto ldv_50493; else ;
  
#line 620 
  rate = sband->bitrates + i;
  
#line 621 
  goto ldv_50494;
  ldv_50493: 
#line 622 
  ;
  
#line 617 
  i += 1U;
  ldv_50496: 
#line 618 
  ;
  
#line 617 
  if ((unsigned int)sband->n_bitrates > i) 
#line 619 
                                           goto ldv_50495; else 
#line 622 
                                                                goto ldv_50494;
  ldv_50494: 
#line 623 
  ;
  {
    
#line 623 
    int __ret_warn_on = rate == (struct ieee80211_rate *)0;
    
#line 623 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 623 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/qcu.c",623); else ;
    
#line 623 
    tmp_0 = (long)(__ret_warn_on != 0);
  }
  
#line 623 
  if ((long)tmp_0 != 0L) {
    
#line 624 
    __retres = -22;
    
#line 624 
    goto return_label;
  }
  else ;
  
#line 626 
  tmp_1 = ath5k_hw_get_frame_duration(ah,band,10,rate,(_Bool)0);
  
#line 626 
  ack_tx_time = (unsigned int)tmp_1;
  
#line 629 
  eifs = (ack_tx_time + sifs) + slot_time * 2U;
  
#line 630 
  eifs_clock = ath5k_hw_htoclock(ah,eifs);
  
#line 633 
  if (ah->ah_version == (unsigned int)AR5K_AR5210) {
    u32 pifs;
    u32 pifs_clock;
    u32 difs;
    u32 difs_clock;
    
#line 637 
    ath5k_hw_reg_write(ah,slot_time_clock,(unsigned short)32784);
    
#line 640 
    eifs_clock = (eifs_clock << 12) & 67104768U;
    
#line 643 
    pifs = slot_time + sifs;
    
#line 644 
    pifs_clock = ath5k_hw_htoclock(ah,pifs);
    
#line 645 
    pifs_clock &= 4095U;
    
#line 648 
    difs = slot_time * 2U + sifs;
    
#line 649 
    difs_clock = ath5k_hw_htoclock(ah,difs);
    
#line 652 
    ath5k_hw_reg_write(ah,(difs_clock << 11) | sifs_clock,(unsigned short)32832);
    
#line 657 
    ath5k_hw_reg_write(ah,(pifs_clock | eifs_clock) | 67108864U,(unsigned short)32836);
    
#line 661 
    __retres = 0;
    
#line 661 
    goto return_label;
  }
  else ;
  
#line 665 
  ath5k_hw_reg_write(ah,slot_time_clock,(unsigned short)4208);
  
#line 668 
  ath5k_hw_reg_write(ah,eifs_clock,(unsigned short)4272);
  
#line 671 
  tmp_2 = ath5k_hw_reg_read(ah,(unsigned short)4336);
  
#line 671 
  ;
  
#line 671 
  ;
  
#line 671 
  ath5k_hw_reg_write(ah,(tmp_2 & 4294966287U) | ((sifs << 4) & 1008U),(unsigned short)4336);
  
#line 676 
  ath5k_hw_reg_write(ah,sifs_clock,(unsigned short)4144);
  
#line 678 
  __retres = 0;
  return_label: 
#line 678 
                return __retres;
}


#line 690  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/qcu.c"
int ath5k_hw_init_queues(struct ath5k_hw *ah)
{
  int __retres;
  int i;
  int ret;
  
#line 702 
  if (ah->ah_version != (unsigned int)AR5K_AR5210) {
    
#line 703 
    i = 0;
    
#line 703 
    goto ldv_50509;
    ldv_50508: 
#line 704 
    ;
    
#line 704 
    ret = ath5k_hw_reset_tx_queue(ah,(unsigned int)i);
    
#line 705 
    if (ret != 0) {
      int tmp;
      
#line 706 
      tmp = net_ratelimit();
      
#line 706 
      if (tmp != 0) 
#line 706 
                    _ath5k_printk((struct ath5k_hw const *)ah,"\001","failed to reset TX queue #%d\n",i); else ;
      
#line 708 
      __retres = ret;
      
#line 708 
      goto return_label;
    }
    else ;
    
#line 703 
    i += 1;
    ldv_50509: 
#line 704 
    ;
    
#line 703 
    if ((int)ah->ah_capabilities.cap_queues.q_tx_num > i) 
#line 705 
                                                          goto ldv_50508; else 
                                                                    
#line 708 
                                                                    goto ldv_50510;
    ldv_50510: 
#line 709 
    ;
  }
  else 
#line 715 
       ath5k_hw_set_tx_retry_limits(ah,0U);
  
#line 718 
  if ((unsigned int)ah->ah_bwmode == 3U) {
    u32 tmp_0;
    
#line 719 
    tmp_0 = ath5k_hw_reg_read(ah,(unsigned short)4336);
    
#line 719 
    ;
    
#line 719 
    ath5k_hw_reg_write(ah,tmp_0 | 8U,(unsigned short)4336);
  }
  else ;
  
#line 725 
  if ((unsigned int)ah->ah_coverage_class == 0U) {
    
#line 726 
    unsigned int slot_time = ath5k_hw_get_default_slottime(ah);
    
#line 727 
    ath5k_hw_set_ifs_intervals(ah,slot_time);
  }
  else ;
  
#line 730 
  __retres = 0;
  return_label: 
#line 730 
                return __retres;
}


#line 585  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static void ldv_tasklet_init_72(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3);


#line 4257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
void wiphy_rfkill_set_hw_state(struct wiphy *, bool);


#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfkill.c"
__inline static void ath5k_rfkill_disable(struct ath5k_hw *ah)
{
  
#line 41 
  if ((long)(ah->debug.level != 0U) != 0L) {
    int tmp;
    
#line 41 
    tmp = net_ratelimit();
    
#line 41 
    if ((long)(tmp != 0) != 0L) 
#line 41 
                                _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_rfkill_disable",42,(int)ah->rf_kill.gpio,(int)ah->rf_kill.polarity); else ;
  }
  else ;
  
#line 43 
  ath5k_hw_set_gpio_output(ah,(unsigned int)ah->rf_kill.gpio);
  
#line 44 
  ath5k_hw_set_gpio(ah,(unsigned int)ah->rf_kill.gpio,(unsigned int)(! ah->rf_kill.polarity));
  
#line 45 
  return;
}


#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfkill.c"
__inline static void ath5k_rfkill_enable(struct ath5k_hw *ah)
{
  
#line 50 
  if ((long)(ah->debug.level != 0U) != 0L) {
    int tmp;
    
#line 50 
    tmp = net_ratelimit();
    
#line 50 
    if ((long)(tmp != 0) != 0L) 
#line 50 
                                _ath5k_printk((struct ath5k_hw const *)ah,"\001","(%s:%d): ","ath5k_rfkill_enable",51,(int)ah->rf_kill.gpio,(int)ah->rf_kill.polarity); else ;
  }
  else ;
  
#line 52 
  ath5k_hw_set_gpio_output(ah,(unsigned int)ah->rf_kill.gpio);
  
#line 53 
  ath5k_hw_set_gpio(ah,(unsigned int)ah->rf_kill.gpio,(unsigned int)ah->rf_kill.polarity);
  
#line 54 
  return;
}


#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfkill.c"
__inline static void ath5k_rfkill_set_intr(struct ath5k_hw *ah, bool enable)
{
  u32 curval;
  int tmp;
  
#line 60 
  ath5k_hw_set_gpio_input(ah,(unsigned int)ah->rf_kill.gpio);
  
#line 61 
  curval = ath5k_hw_get_gpio(ah,(unsigned int)ah->rf_kill.gpio);
  
#line 63 
  if ((int)enable != 0) 
#line 63 
                        tmp = curval != 0U; else 
#line 63 
                                                 tmp = curval == 0U;
  
#line 62 
  ;
  
#line 62 
  ;
  
#line 62 
  ath5k_hw_set_gpio_intr(ah,(unsigned int)ah->rf_kill.gpio,(unsigned int)tmp);
  
#line 64 
  return;
}


#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfkill.c"
static bool ath5k_is_rfkill_set(struct ath5k_hw *ah)
{
  bool __retres;
  u32 tmp;
  
#line 71 
  tmp = ath5k_hw_get_gpio(ah,(unsigned int)ah->rf_kill.gpio);
  
#line 71 
  ;
  
#line 71 
  __retres = (_Bool)(tmp == (unsigned int)ah->rf_kill.polarity);
  
#line 71 
  return __retres;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfkill.c"
static void ath5k_tasklet_rfkill_toggle(unsigned long data)
{
  bool blocked;
  
#line 78 
  struct ath5k_hw *ah = (struct ath5k_hw *)data;
  
#line 81 
  blocked = ath5k_is_rfkill_set(ah);
  
#line 82 
  wiphy_rfkill_set_hw_state((ah->hw)->wiphy,(_Bool)((bool)((int)blocked) != 0));
  
#line 83 
  return;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfkill.c"
void ath5k_rfkill_hw_start(struct ath5k_hw *ah)
{
  
#line 90 
  ah->rf_kill.gpio = (unsigned short)ah->ah_capabilities.cap_eeprom.ee_rfkill_pin;
  
#line 91 
  ah->rf_kill.polarity = ah->ah_capabilities.cap_eeprom.ee_rfkill_pol;
  
#line 93 
  ldv_tasklet_init_72(& ah->rf_kill.toggleq,& ath5k_tasklet_rfkill_toggle,(unsigned long)ah);
  
#line 96 
  ath5k_rfkill_disable(ah);
  
#line 99 
  if ((((int)ah->ah_capabilities.cap_eeprom.ee_header >> 14) & 1) != 0) 
    
#line 100 
    ath5k_rfkill_set_intr(ah,(_Bool)1); else ;
  
#line 101 
  return;
}


#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/ath/ath5k/rfkill.c"
void ath5k_rfkill_hw_stop(struct ath5k_hw *ah)
{
  
#line 108 
  if ((((int)ah->ah_capabilities.cap_eeprom.ee_header >> 14) & 1) != 0) 
    
#line 109 
    ath5k_rfkill_set_intr(ah,(_Bool)0); else ;
  
#line 111 
  tasklet_kill(& ah->rf_kill.toggleq);
  
#line 114 
  ath5k_rfkill_enable(ah);
  
#line 115 
  return;
}


#line 740  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/weaver/.tmp_rfkill.c.aux"
static void ldv_tasklet_init_72(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3)
{
  
#line 744 
  ldv_emg_tasklet_init(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 745 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err_or_null(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
__inline static void *ERR_PTR_0(long error)
{
  void *__retres;
  
#line 25 
  __retres = (void *)error;
  
#line 25 
  return __retres;
}


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
void rtnl_lock(void);


#line 28 
void rtnl_unlock(void);


#line 130  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_15(void *arg0);


#line 132 
void *ldv_character_driver_scenario_21(void *arg0);


#line 135 
void *ldv_character_driver_scenario_19(void *arg0);


#line 136 
void ldv_dispatch_irq_register_12_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 137 
void *ldv_character_driver_scenario_22(void *arg0);


#line 140 
void *ldv_character_driver_scenario_24(void *arg0);


#line 141 
void *ldv_character_driver_scenario_17(void *arg0);


#line 142 
void *ldv_pci_scenario_18(void *arg0);


#line 143 
void ldv_dispatch_deregister_7_2(struct ieee80211_hw *arg0);


#line 145 
void *ldv_traverse_kernel_items_scenario_25(void *arg0);


#line 146 
void *ldv_interrupt_scenario_16(void *arg0);


#line 148 
void ldv_dispatch_register_11_3(struct file_operations *arg0);


#line 149 
void *ldv_initialization_1(void *arg0);


#line 150 
void ldv_dispatch_irq_deregister_10_1(int arg0);


#line 152 
void *ldv_character_driver_scenario_26(void *arg0);


#line 153 
void *ldv_pm_ops_scenario_20(void *arg0);


#line 154 
int main(void);


#line 155 
void *ldv_ieee80211_scenario_13(void *arg0);


#line 157 
void ldv_dispatch_deregister_2_1(struct pci_driver *arg0);


#line 158 
void *ldv_character_driver_scenario_23(void *arg0);


#line 159 
void *ldv_character_driver_scenario_27(void *arg0);


#line 161 
void *ldv_character_driver_scenario_14(void *arg0);


#line 162 
void ldv_dispatch_register_5_1(struct seq_file *arg0, struct seq_operations *arg1);


#line 163 
void ldv_dispatch_register_6_3(struct pci_driver *arg0);


#line 164 
void ldv_dispatch_register_8_3(struct ieee80211_hw *arg0);


#line 167  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_25;

#line 168  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_14;

#line 169  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_21;

#line 170  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_19;

#line 171  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_24;

#line 172  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_15;

#line 173  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_23;

#line 174  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_17;

#line 175  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_13;

#line 176  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_26;

#line 177  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_16;

#line 178  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_27;

#line 179  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_22;

#line 180  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_18;

#line 181  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_20;

#line 185  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_tasklet_init(struct tasklet_struct *arg0, void (*arg1)(unsigned long ), unsigned long arg2)
{
  
#line 190 
  arg0->func = arg1;
  
#line 191 
  arg0->data = arg2;
  
#line 192 
  arg0->count.counter = 0;
  
#line 196 
  goto return_label;
  return_label: 
#line 198 
                return;
}


#line 203  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_15(void *arg0)
{
  void *__retres;
  struct file *ldv_15_resource_1;
  int ldv_15_ldv_param_2_3;
  long long ldv_15_ldv_param_1_2;
  char *ldv_15_ldv_param_1_4;
  struct inode *ldv_15_resource_0;
  unsigned long ldv_15_size_cnt;
  long long *ldv_15_ldv_param_3_5;
  char *ldv_15_ldv_param_1_6;
  long long *ldv_15_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 214 
  struct file_operations *ldv_15_container = ldv_emg_alias_fops_debug_2;
  
#line 215 
  int ldv_15_ret = ldv_undef_int();
  
#line 218 
  struct ldv_struct_character_driver_scenario_14 *data = (struct ldv_struct_character_driver_scenario_14 *)arg0;
  
#line 222 
  ldv_15_ret = ldv_undef_int();
  
#line 225 
  if (data != (struct ldv_struct_character_driver_scenario_14 *)0) {
    
#line 226 
    ldv_15_container = data->arg0;
    
#line 227 
    ldv_free((void *)data);
  }
  else ;
  
#line 232 
  ldv_15_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 233 
  tmp_1 = ldv_undef_int();
  
#line 233 
  ldv_15_size_cnt = (unsigned long)tmp_1;
  
#line 240 
  goto ldv_main_15;
  
#line 242 
  __retres = (void *)0;
  
#line 242 
  goto return_label;
  ldv_main_15: 
#line 245 
  ;
  
#line 248 
  tmp_3 = ldv_undef_int();
  
#line 248 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 251 
    ldv_15_ret = (*ldv_emg_alias_simple_open_6)(ldv_15_resource_0,ldv_15_resource_1);
    
#line 253 
    ldv_15_ret = ldv_filter_err_code(ldv_15_ret);
    
#line 256 
    tmp_2 = ldv_undef_int();
    
#line 256 
    if (tmp_2 != 0) {
      
#line 258 
      __VERIFIER_assume(ldv_15_ret == 0);
      
#line 265 
      goto ldv_call_15;
    }
    else {
      
#line 269 
      __VERIFIER_assume(ldv_15_ret != 0);
      
#line 276 
      goto ldv_main_15;
    }
  }
  else {
    
#line 281 
    ldv_free((void *)ldv_15_resource_0);
    
#line 289 
    __retres = (void *)0;
    
#line 289 
    goto return_label;
  }
  
#line 292 
  __retres = (void *)0;
  
#line 292 
  goto return_label;
  ldv_call_15: 
#line 295 
  ;
  
#line 298 
  tmp_4 = ldv_undef_int();
  
#line 298 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 299 
    ;
    
#line 301 
    ldv_15_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 302 
    ldv_15_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 311 
    __VERIFIER_assume(ldv_15_size_cnt <= 2147479552UL);
    
#line 313 
    ldv_emg_wrapper_write_file_debug_4(ldv_15_resource_1,ldv_15_ldv_param_1_6,ldv_15_size_cnt,ldv_15_ldv_param_3_7);
    
#line 317 
    ldv_free((void *)ldv_15_ldv_param_1_6);
    
#line 318 
    ldv_free((void *)ldv_15_ldv_param_3_7);
    
#line 325 
    goto ldv_call_15;
    case 2: 
#line 328 
    ;
    
#line 330 
    if (ldv_15_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 332 
      (*(ldv_15_container->release))(ldv_15_resource_0,ldv_15_resource_1); else ;
    
#line 340 
    goto ldv_main_15;
    case 3: 
#line 343 
    ;
    
#line 347 
    tmp_9 = ldv_undef_int();
    
#line 347 
    if (tmp_9 != 0) 
#line 350 
                    (*ldv_emg_alias_default_llseek_3)(ldv_15_resource_1,ldv_15_ldv_param_1_2,ldv_15_ldv_param_2_3);
    else {
      
#line 356 
      ldv_15_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 357 
      ldv_15_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 362 
      ldv_emg_wrapper_read_file_debug_3(ldv_15_resource_1,ldv_15_ldv_param_1_4,ldv_15_size_cnt,ldv_15_ldv_param_3_5);
      
#line 366 
      ldv_free((void *)ldv_15_ldv_param_1_4);
      
#line 367 
      ldv_free((void *)ldv_15_ldv_param_3_5);
    }
    
#line 371 
    goto ldv_51717;
    default: 
#line 373 
    ;
    
#line 373 
    __VERIFIER_assume(0);
  }
  ldv_51717: 
#line 382 
  ;
  
#line 382 
  goto ldv_call_15;
  
#line 384 
  __retres = (void *)0;
  return_label: 
#line 384 
                return __retres;
}


#line 389  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 392 
  struct pci_driver *ldv_6_pci_driver = ldv_emg_alias_ath5k_pci_driver_2;
  
#line 396 
  tmp_0 = ldv_undef_int();
  
#line 396 
  if (tmp_0 != 0) {
    
#line 398 
    ldv_6_pci_driver = arg0;
    
#line 402 
    ldv_dispatch_register_6_3(ldv_6_pci_driver);
    
#line 406 
    __retres = 0;
    
#line 406 
    goto return_label;
  }
  else {
    int tmp;
    
#line 413 
    tmp = ldv_undef_int_negative();
    
#line 413 
    __retres = tmp;
    
#line 413 
    goto return_label;
  }
  return_label: 
#line 396 
                return __retres;
}


#line 423  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_21(void *arg0)
{
  void *__retres;
  struct file *ldv_21_resource_1;
  int ldv_21_ldv_param_2_3;
  long long ldv_21_ldv_param_1_2;
  char *ldv_21_ldv_param_1_4;
  struct inode *ldv_21_resource_0;
  unsigned long ldv_21_size_cnt;
  long long *ldv_21_ldv_param_3_5;
  char *ldv_21_ldv_param_1_6;
  long long *ldv_21_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 434 
  struct file_operations *ldv_21_container = ldv_emg_alias_fops_beacon_2;
  
#line 435 
  int ldv_21_ret = ldv_undef_int();
  
#line 438 
  struct ldv_struct_character_driver_scenario_14 *data = (struct ldv_struct_character_driver_scenario_14 *)arg0;
  
#line 442 
  ldv_21_ret = ldv_undef_int();
  
#line 445 
  if (data != (struct ldv_struct_character_driver_scenario_14 *)0) {
    
#line 446 
    ldv_21_container = data->arg0;
    
#line 447 
    ldv_free((void *)data);
  }
  else ;
  
#line 452 
  ldv_21_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 453 
  tmp_1 = ldv_undef_int();
  
#line 453 
  ldv_21_size_cnt = (unsigned long)tmp_1;
  
#line 460 
  goto ldv_main_21;
  
#line 462 
  __retres = (void *)0;
  
#line 462 
  goto return_label;
  ldv_main_21: 
#line 465 
  ;
  
#line 468 
  tmp_3 = ldv_undef_int();
  
#line 468 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 471 
    ldv_21_ret = (*ldv_emg_alias_simple_open_6)(ldv_21_resource_0,ldv_21_resource_1);
    
#line 473 
    ldv_21_ret = ldv_filter_err_code(ldv_21_ret);
    
#line 476 
    tmp_2 = ldv_undef_int();
    
#line 476 
    if (tmp_2 != 0) {
      
#line 478 
      __VERIFIER_assume(ldv_21_ret == 0);
      
#line 485 
      goto ldv_call_21;
    }
    else {
      
#line 489 
      __VERIFIER_assume(ldv_21_ret != 0);
      
#line 496 
      goto ldv_main_21;
    }
  }
  else {
    
#line 501 
    ldv_free((void *)ldv_21_resource_0);
    
#line 509 
    __retres = (void *)0;
    
#line 509 
    goto return_label;
  }
  
#line 512 
  __retres = (void *)0;
  
#line 512 
  goto return_label;
  ldv_call_21: 
#line 515 
  ;
  
#line 518 
  tmp_4 = ldv_undef_int();
  
#line 518 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 519 
    ;
    
#line 521 
    ldv_21_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 522 
    ldv_21_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 531 
    __VERIFIER_assume(ldv_21_size_cnt <= 2147479552UL);
    
#line 533 
    ldv_emg_wrapper_write_file_beacon_4(ldv_21_resource_1,ldv_21_ldv_param_1_6,ldv_21_size_cnt,ldv_21_ldv_param_3_7);
    
#line 537 
    ldv_free((void *)ldv_21_ldv_param_3_7);
    
#line 538 
    ldv_free((void *)ldv_21_ldv_param_1_6);
    
#line 545 
    goto ldv_call_21;
    case 2: 
#line 548 
    ;
    
#line 550 
    if (ldv_21_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 552 
      (*(ldv_21_container->release))(ldv_21_resource_0,ldv_21_resource_1); else ;
    
#line 560 
    goto ldv_main_21;
    case 3: 
#line 563 
    ;
    
#line 567 
    tmp_9 = ldv_undef_int();
    
#line 567 
    if (tmp_9 != 0) 
#line 570 
                    (*ldv_emg_alias_default_llseek_3)(ldv_21_resource_1,ldv_21_ldv_param_1_2,ldv_21_ldv_param_2_3);
    else {
      
#line 576 
      ldv_21_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 577 
      ldv_21_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 582 
      ldv_emg_wrapper_read_file_beacon_3(ldv_21_resource_1,ldv_21_ldv_param_1_4,ldv_21_size_cnt,ldv_21_ldv_param_3_5);
      
#line 586 
      ldv_free((void *)ldv_21_ldv_param_1_4);
      
#line 587 
      ldv_free((void *)ldv_21_ldv_param_3_5);
    }
    
#line 591 
    goto ldv_51745;
    default: 
#line 593 
    ;
    
#line 593 
    __VERIFIER_assume(0);
  }
  ldv_51745: 
#line 602 
  ;
  
#line 602 
  goto ldv_call_21;
  
#line 604 
  __retres = (void *)0;
  return_label: 
#line 604 
                return __retres;
}


#line 609  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
struct dentry *ldv_emg_debugfs_create_file(char *arg0, unsigned short arg1, struct dentry *arg2, void *arg3, struct file_operations *arg4)
{
  struct dentry *__retres;
  struct dentry *ldv_11_dentry;
  struct file_operations *ldv_11_file_operations;
  int tmp_1;
  
#line 617 
  tmp_1 = ldv_undef_int();
  
#line 617 
  if (tmp_1 != 0) {
    
#line 619 
    ldv_11_dentry = (struct dentry *)ldv_xmalloc_unknown_size(0UL);
    
#line 620 
    ldv_11_file_operations = arg4;
    
#line 624 
    ldv_dispatch_register_11_3(ldv_11_file_operations);
    
#line 628 
    __retres = ldv_11_dentry;
    
#line 628 
    goto return_label;
  }
  else {
    struct dentry *tmp_0;
    
#line 635 
    tmp_0 = (struct dentry *)ERR_PTR_0(-19L);
    
#line 635 
    __retres = tmp_0;
    
#line 635 
    goto return_label;
  }
  return_label: 
#line 617 
                return __retres;
}


#line 645  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_6_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_18 *cf_arg_18;
  int tmp;
  
#line 648 
  tmp = ldv_undef_int();
  
#line 648 
  switch (tmp) {
    case 0: 
#line 649 
    ;
    
#line 650 
    cf_arg_18 = (struct ldv_struct_pci_scenario_18 *)ldv_xmalloc(16UL);
    
#line 651 
    cf_arg_18->arg0 = arg0;
    
#line 652 
    ret = pthread_create(& ldv_thread_18,(pthread_attr_t const *)0,& ldv_pci_scenario_18,(void *)cf_arg_18);
    
#line 653 
    __VERIFIER_assume(ret == 0);
    
#line 654 
    goto ldv_51762;
    default: 
#line 656 
    ;
    
#line 656 
    __VERIFIER_assume(0);
  }
  ldv_51762: 
#line 657 
  ;
  
#line 658 
  return;
}


#line 662  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_19(void *arg0)
{
  void *__retres;
  struct file *ldv_19_resource_1;
  char *ldv_19_ldv_param_1_2;
  unsigned long ldv_19_size_cnt;
  char *ldv_19_ldv_param_1_4;
  long long *ldv_19_ldv_param_3_3;
  long long *ldv_19_ldv_param_3_5;
  struct inode *ldv_19_resource_0;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 670 
  struct file_operations *ldv_19_container = ldv_emg_alias_fops_misc_2;
  
#line 672 
  int ldv_19_ret = ldv_undef_int();
  
#line 675 
  struct ldv_struct_character_driver_scenario_14 *data = (struct ldv_struct_character_driver_scenario_14 *)arg0;
  
#line 679 
  ldv_19_ret = ldv_undef_int();
  
#line 682 
  if (data != (struct ldv_struct_character_driver_scenario_14 *)0) {
    
#line 683 
    ldv_19_container = data->arg0;
    
#line 684 
    ldv_free((void *)data);
  }
  else ;
  
#line 689 
  ldv_19_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 690 
  tmp_1 = ldv_undef_int();
  
#line 690 
  ldv_19_size_cnt = (unsigned long)tmp_1;
  
#line 697 
  goto ldv_main_19;
  
#line 699 
  __retres = (void *)0;
  
#line 699 
  goto return_label;
  ldv_main_19: 
#line 702 
  ;
  
#line 705 
  tmp_3 = ldv_undef_int();
  
#line 705 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 708 
    ldv_19_ret = (*ldv_emg_alias_simple_open_6)(ldv_19_resource_0,ldv_19_resource_1);
    
#line 710 
    ldv_19_ret = ldv_filter_err_code(ldv_19_ret);
    
#line 713 
    tmp_2 = ldv_undef_int();
    
#line 713 
    if (tmp_2 != 0) {
      
#line 715 
      __VERIFIER_assume(ldv_19_ret == 0);
      
#line 722 
      goto ldv_call_19;
    }
    else {
      
#line 726 
      __VERIFIER_assume(ldv_19_ret != 0);
      
#line 733 
      goto ldv_main_19;
    }
  }
  else {
    
#line 738 
    ldv_free((void *)ldv_19_resource_0);
    
#line 746 
    __retres = (void *)0;
    
#line 746 
    goto return_label;
  }
  
#line 749 
  __retres = (void *)0;
  
#line 749 
  goto return_label;
  ldv_call_19: 
#line 752 
  ;
  
#line 755 
  tmp_4 = ldv_undef_int();
  
#line 755 
  switch (tmp_4) {
    case 1: 
#line 756 
    ;
    
#line 758 
    ldv_19_ldv_param_3_3 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 759 
    ldv_19_ldv_param_1_2 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 764 
    ldv_emg_wrapper_read_file_misc_3(ldv_19_resource_1,ldv_19_ldv_param_1_2,ldv_19_size_cnt,ldv_19_ldv_param_3_3);
    
#line 768 
    ldv_free((void *)ldv_19_ldv_param_3_3);
    
#line 769 
    ldv_free((void *)ldv_19_ldv_param_1_2);
    
#line 776 
    goto ldv_call_19;
    case 2: 
#line 779 
    ;
    
#line 781 
    ldv_19_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 782 
    ldv_19_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 786 
    if (ldv_19_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 792 
      __VERIFIER_assume(ldv_19_size_cnt <= 2147479552UL);
      
#line 794 
      (*(ldv_19_container->write))(ldv_19_resource_1,(char const *)ldv_19_ldv_param_1_4,ldv_19_size_cnt,ldv_19_ldv_param_3_5);
    }
    else ;
    
#line 799 
    ldv_free((void *)ldv_19_ldv_param_3_5);
    
#line 800 
    ldv_free((void *)ldv_19_ldv_param_1_4);
    
#line 807 
    goto ldv_call_19;
    case 3: 
#line 810 
    ;
    
#line 812 
    if (ldv_19_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 814 
      (*(ldv_19_container->release))(ldv_19_resource_0,ldv_19_resource_1); else ;
    
#line 822 
    goto ldv_main_19;
    default: 
#line 825 
    ;
    
#line 825 
    __VERIFIER_assume(0);
  }
  
#line 828 
  __retres = (void *)0;
  return_label: 
#line 828 
                return __retres;
}


#line 833  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_12_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_16 *cf_arg_16;
  int tmp;
  
#line 836 
  tmp = ldv_undef_int();
  
#line 836 
  switch (tmp) {
    case 0: 
#line 837 
    ;
    
#line 838 
    cf_arg_16 = (struct ldv_struct_interrupt_scenario_16 *)ldv_xmalloc(32UL);
    
#line 839 
    cf_arg_16->arg0 = arg0;
    
#line 840 
    cf_arg_16->arg1 = arg1;
    
#line 841 
    cf_arg_16->arg2 = arg2;
    
#line 842 
    cf_arg_16->arg3 = arg3;
    
#line 843 
    ret = pthread_create(& ldv_thread_16,(pthread_attr_t const *)0,& ldv_interrupt_scenario_16,(void *)cf_arg_16);
    
#line 844 
    __VERIFIER_assume(ret == 0);
    
#line 845 
    goto ldv_51796;
    default: 
#line 847 
    ;
    
#line 847 
    __VERIFIER_assume(0);
  }
  ldv_51796: 
#line 848 
  ;
  
#line 849 
  return;
}


#line 853  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_22(void *arg0)
{
  void *__retres;
  struct file *ldv_22_resource_1;
  int ldv_22_ldv_param_2_3;
  long long ldv_22_ldv_param_1_2;
  char *ldv_22_ldv_param_1_4;
  struct inode *ldv_22_resource_0;
  unsigned long ldv_22_size_cnt;
  long long *ldv_22_ldv_param_3_5;
  char *ldv_22_ldv_param_1_6;
  long long *ldv_22_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 864 
  struct file_operations *ldv_22_container = ldv_emg_alias_fops_antenna_2;
  
#line 865 
  int ldv_22_ret = ldv_undef_int();
  
#line 868 
  struct ldv_struct_character_driver_scenario_14 *data = (struct ldv_struct_character_driver_scenario_14 *)arg0;
  
#line 872 
  ldv_22_ret = ldv_undef_int();
  
#line 875 
  if (data != (struct ldv_struct_character_driver_scenario_14 *)0) {
    
#line 876 
    ldv_22_container = data->arg0;
    
#line 877 
    ldv_free((void *)data);
  }
  else ;
  
#line 882 
  ldv_22_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 883 
  tmp_1 = ldv_undef_int();
  
#line 883 
  ldv_22_size_cnt = (unsigned long)tmp_1;
  
#line 890 
  goto ldv_main_22;
  
#line 892 
  __retres = (void *)0;
  
#line 892 
  goto return_label;
  ldv_main_22: 
#line 895 
  ;
  
#line 898 
  tmp_3 = ldv_undef_int();
  
#line 898 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 901 
    ldv_22_ret = (*ldv_emg_alias_simple_open_6)(ldv_22_resource_0,ldv_22_resource_1);
    
#line 903 
    ldv_22_ret = ldv_filter_err_code(ldv_22_ret);
    
#line 906 
    tmp_2 = ldv_undef_int();
    
#line 906 
    if (tmp_2 != 0) {
      
#line 908 
      __VERIFIER_assume(ldv_22_ret == 0);
      
#line 915 
      goto ldv_call_22;
    }
    else {
      
#line 919 
      __VERIFIER_assume(ldv_22_ret != 0);
      
#line 926 
      goto ldv_main_22;
    }
  }
  else {
    
#line 931 
    ldv_free((void *)ldv_22_resource_0);
    
#line 939 
    __retres = (void *)0;
    
#line 939 
    goto return_label;
  }
  
#line 942 
  __retres = (void *)0;
  
#line 942 
  goto return_label;
  ldv_call_22: 
#line 945 
  ;
  
#line 948 
  tmp_4 = ldv_undef_int();
  
#line 948 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 949 
    ;
    
#line 951 
    ldv_22_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 952 
    ldv_22_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 961 
    __VERIFIER_assume(ldv_22_size_cnt <= 2147479552UL);
    
#line 963 
    ldv_emg_wrapper_write_file_antenna_4(ldv_22_resource_1,ldv_22_ldv_param_1_6,ldv_22_size_cnt,ldv_22_ldv_param_3_7);
    
#line 967 
    ldv_free((void *)ldv_22_ldv_param_1_6);
    
#line 968 
    ldv_free((void *)ldv_22_ldv_param_3_7);
    
#line 975 
    goto ldv_call_22;
    case 2: 
#line 978 
    ;
    
#line 980 
    if (ldv_22_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 982 
      (*(ldv_22_container->release))(ldv_22_resource_0,ldv_22_resource_1); else ;
    
#line 990 
    goto ldv_main_22;
    case 3: 
#line 993 
    ;
    
#line 997 
    tmp_9 = ldv_undef_int();
    
#line 997 
    if (tmp_9 != 0) 
#line 1000 
                    (*ldv_emg_alias_default_llseek_3)(ldv_22_resource_1,ldv_22_ldv_param_1_2,ldv_22_ldv_param_2_3);
    else {
      
#line 1006 
      ldv_22_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1007 
      ldv_22_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1012 
      ldv_emg_wrapper_read_file_antenna_3(ldv_22_resource_1,ldv_22_ldv_param_1_4,ldv_22_size_cnt,ldv_22_ldv_param_3_5);
      
#line 1016 
      ldv_free((void *)ldv_22_ldv_param_3_5);
      
#line 1017 
      ldv_free((void *)ldv_22_ldv_param_1_4);
    }
    
#line 1021 
    goto ldv_51818;
    default: 
#line 1023 
    ;
    
#line 1023 
    __VERIFIER_assume(0);
  }
  ldv_51818: 
#line 1032 
  ;
  
#line 1032 
  goto ldv_call_22;
  
#line 1034 
  __retres = (void *)0;
  return_label: 
#line 1034 
                return __retres;
}


#line 1039  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
struct ieee80211_hw *ldv_emg_ieee80211_alloc_hw(unsigned long arg0, struct ieee80211_ops *arg1)
{
  struct ieee80211_hw *__retres;
  struct ieee80211_hw *ldv_8_ieee80211_hw;
  int tmp_0;
  
#line 1042 
  struct ieee80211_ops *ldv_8_ieee80211_ops = (struct ieee80211_ops *)(& ath5k_hw_ops);
  
#line 1047 
  tmp_0 = ldv_undef_int();
  
#line 1047 
  if (tmp_0 != 0) {
    
#line 1049 
    ldv_8_ieee80211_ops = arg1;
    
#line 1050 
    ldv_8_ieee80211_hw = (struct ieee80211_hw *)ldv_xmalloc_unknown_size(0UL);
    
#line 1054 
    ldv_dispatch_register_8_3(ldv_8_ieee80211_hw);
    
#line 1058 
    __retres = ldv_8_ieee80211_hw;
    
#line 1058 
    goto return_label;
  }
  else {
    
#line 1065 
    __retres = (struct ieee80211_hw *)0;
    
#line 1065 
    goto return_label;
  }
  return_label: 
#line 1047 
                return __retres;
}


#line 1075  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_tasklet_hi_schedule(struct tasklet_struct *arg0)
{
  unsigned long ldv_3_ldv_param_0_2;
  struct tasklet_struct *ldv_3_tasklet_struct;
  
#line 1082 
  ldv_3_tasklet_struct = arg0;
  
#line 1089 
  if (ldv_3_tasklet_struct->count.counter == 0) 
#line 1091 
                                                (*ldv_emg_alias_None_2)(ldv_3_ldv_param_0_2); else ;
  
#line 1099 
  goto return_label;
  return_label: 
#line 1101 
                return;
}


#line 1106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_11_3(struct file_operations *arg0)
{
  int ret;
  struct ldv_struct_character_driver_scenario_14 *cf_arg_17;
  struct ldv_struct_character_driver_scenario_14 *cf_arg_19;
  struct ldv_struct_character_driver_scenario_14 *cf_arg_21;
  struct ldv_struct_character_driver_scenario_14 *cf_arg_22;
  struct ldv_struct_character_driver_scenario_14 *cf_arg_23;
  struct ldv_struct_character_driver_scenario_14 *cf_arg_24;
  struct ldv_struct_character_driver_scenario_14 *cf_arg_26;
  struct ldv_struct_character_driver_scenario_14 *cf_arg_27;
  struct ldv_struct_character_driver_scenario_14 *cf_arg_14;
  struct ldv_struct_character_driver_scenario_14 *cf_arg_15;
  int tmp;
  
#line 1118 
  tmp = ldv_undef_int();
  
#line 1118 
  switch (tmp) {
    case 0: 
#line 1119 
    ;
    
#line 1120 
    cf_arg_17 = (struct ldv_struct_character_driver_scenario_14 *)ldv_xmalloc(16UL);
    
#line 1121 
    cf_arg_17->arg0 = arg0;
    
#line 1122 
    ret = pthread_create(& ldv_thread_17,(pthread_attr_t const *)0,& ldv_character_driver_scenario_17,(void *)cf_arg_17);
    
#line 1123 
    __VERIFIER_assume(ret == 0);
    
#line 1124 
    goto ldv_51846;
    case 1: 
#line 1126 
    ;
    
#line 1127 
    cf_arg_19 = (struct ldv_struct_character_driver_scenario_14 *)ldv_xmalloc(16UL);
    
#line 1128 
    cf_arg_19->arg0 = arg0;
    
#line 1129 
    ret = pthread_create(& ldv_thread_19,(pthread_attr_t const *)0,& ldv_character_driver_scenario_19,(void *)cf_arg_19);
    
#line 1130 
    __VERIFIER_assume(ret == 0);
    
#line 1131 
    goto ldv_51846;
    case 2: 
#line 1133 
    ;
    
#line 1134 
    cf_arg_21 = (struct ldv_struct_character_driver_scenario_14 *)ldv_xmalloc(16UL);
    
#line 1135 
    cf_arg_21->arg0 = arg0;
    
#line 1136 
    ret = pthread_create(& ldv_thread_21,(pthread_attr_t const *)0,& ldv_character_driver_scenario_21,(void *)cf_arg_21);
    
#line 1137 
    __VERIFIER_assume(ret == 0);
    
#line 1138 
    goto ldv_51846;
    case 3: 
#line 1140 
    ;
    
#line 1141 
    cf_arg_22 = (struct ldv_struct_character_driver_scenario_14 *)ldv_xmalloc(16UL);
    
#line 1142 
    cf_arg_22->arg0 = arg0;
    
#line 1143 
    ret = pthread_create(& ldv_thread_22,(pthread_attr_t const *)0,& ldv_character_driver_scenario_22,(void *)cf_arg_22);
    
#line 1144 
    __VERIFIER_assume(ret == 0);
    
#line 1145 
    goto ldv_51846;
    case 4: 
#line 1147 
    ;
    
#line 1148 
    cf_arg_23 = (struct ldv_struct_character_driver_scenario_14 *)ldv_xmalloc(16UL);
    
#line 1149 
    cf_arg_23->arg0 = arg0;
    
#line 1150 
    ret = pthread_create(& ldv_thread_23,(pthread_attr_t const *)0,& ldv_character_driver_scenario_23,(void *)cf_arg_23);
    
#line 1151 
    __VERIFIER_assume(ret == 0);
    
#line 1152 
    goto ldv_51846;
    case 5: 
#line 1154 
    ;
    
#line 1155 
    cf_arg_24 = (struct ldv_struct_character_driver_scenario_14 *)ldv_xmalloc(16UL);
    
#line 1156 
    cf_arg_24->arg0 = arg0;
    
#line 1157 
    ret = pthread_create(& ldv_thread_24,(pthread_attr_t const *)0,& ldv_character_driver_scenario_24,(void *)cf_arg_24);
    
#line 1158 
    __VERIFIER_assume(ret == 0);
    
#line 1159 
    goto ldv_51846;
    case 6: 
#line 1161 
    ;
    
#line 1162 
    cf_arg_26 = (struct ldv_struct_character_driver_scenario_14 *)ldv_xmalloc(16UL);
    
#line 1163 
    cf_arg_26->arg0 = arg0;
    
#line 1164 
    ret = pthread_create(& ldv_thread_26,(pthread_attr_t const *)0,& ldv_character_driver_scenario_26,(void *)cf_arg_26);
    
#line 1165 
    __VERIFIER_assume(ret == 0);
    
#line 1166 
    goto ldv_51846;
    case 7: 
#line 1168 
    ;
    
#line 1169 
    cf_arg_27 = (struct ldv_struct_character_driver_scenario_14 *)ldv_xmalloc(16UL);
    
#line 1170 
    cf_arg_27->arg0 = arg0;
    
#line 1171 
    ret = pthread_create(& ldv_thread_27,(pthread_attr_t const *)0,& ldv_character_driver_scenario_27,(void *)cf_arg_27);
    
#line 1172 
    __VERIFIER_assume(ret == 0);
    
#line 1173 
    goto ldv_51846;
    case 8: 
#line 1175 
    ;
    
#line 1176 
    cf_arg_14 = (struct ldv_struct_character_driver_scenario_14 *)ldv_xmalloc(16UL);
    
#line 1177 
    cf_arg_14->arg0 = arg0;
    
#line 1178 
    ret = pthread_create(& ldv_thread_14,(pthread_attr_t const *)0,& ldv_character_driver_scenario_14,(void *)cf_arg_14);
    
#line 1179 
    __VERIFIER_assume(ret == 0);
    
#line 1180 
    goto ldv_51846;
    case 9: 
#line 1182 
    ;
    
#line 1183 
    cf_arg_15 = (struct ldv_struct_character_driver_scenario_14 *)ldv_xmalloc(16UL);
    
#line 1184 
    cf_arg_15->arg0 = arg0;
    
#line 1185 
    ret = pthread_create(& ldv_thread_15,(pthread_attr_t const *)0,& ldv_character_driver_scenario_15,(void *)cf_arg_15);
    
#line 1186 
    __VERIFIER_assume(ret == 0);
    
#line 1187 
    goto ldv_51846;
    default: 
#line 1189 
    ;
    
#line 1189 
    __VERIFIER_assume(0);
  }
  ldv_51846: 
#line 1190 
  ;
  
#line 1191 
  return;
}


#line 1195  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pm_ops_scenario_20(void *arg0)
{
  void *__retres;
  struct device *ldv_20_device;
  int tmp;
  
#line 1198 
  struct dev_pm_ops *ldv_20_pm_ops = ldv_emg_alias_ath5k_pm_ops_3;
  
#line 1209 
  goto ldv_do_20;
  
#line 1211 
  __retres = (void *)0;
  
#line 1211 
  goto return_label;
  ldv_do_20: 
#line 1214 
  ;
  
#line 1217 
  tmp = ldv_undef_int();
  
#line 1217 
  switch (tmp) {
    int tmp_0;
    case 1: 
#line 1218 
    ;
    
#line 1220 
    if (ldv_20_pm_ops->runtime_idle != (int (*)(struct device *))0) 
#line 1222 
                                                                    (*(ldv_20_pm_ops->runtime_idle))(ldv_20_device); else ;
    
#line 1230 
    goto ldv_do_20;
    case 2: 
#line 1233 
    ;
    
#line 1235 
    if (ldv_20_pm_ops->runtime_suspend != (int (*)(struct device *))0) 
      
#line 1237 
      (*(ldv_20_pm_ops->runtime_suspend))(ldv_20_device); else ;
    
#line 1242 
    if (ldv_20_pm_ops->runtime_resume != (int (*)(struct device *))0) 
      
#line 1244 
      (*(ldv_20_pm_ops->runtime_resume))(ldv_20_device); else ;
    
#line 1252 
    goto ldv_do_20;
    case 3: 
#line 1255 
    ;
    
#line 1257 
    if (ldv_20_pm_ops->prepare != (int (*)(struct device *))0) 
#line 1259 
                                                               (*(ldv_20_pm_ops->prepare))(ldv_20_device); else ;
    
#line 1263 
    tmp_0 = ldv_undef_int();
    
#line 1263 
    switch (tmp_0) {
      int tmp_1;
      int tmp_2;
      int tmp_3;
      case 1: 
#line 1264 
      ;
      
#line 1267 
      ldv_emg_wrapper_ath5k_pci_suspend_2(ldv_20_device);
      
#line 1270 
      tmp_1 = ldv_undef_int();
      
#line 1270 
      if (tmp_1 != 0) {
        
#line 1272 
        if (ldv_20_pm_ops->suspend_noirq != (int (*)(struct device *))0) 
          
#line 1274 
          (*(ldv_20_pm_ops->suspend_noirq))(ldv_20_device); else ;
        
#line 1279 
        if (ldv_20_pm_ops->resume_noirq != (int (*)(struct device *))0) 
          
#line 1281 
          (*(ldv_20_pm_ops->resume_noirq))(ldv_20_device); else ;
      }
      else {
        
#line 1288 
        if (ldv_20_pm_ops->suspend_late != (int (*)(struct device *))0) 
          
#line 1290 
          (*(ldv_20_pm_ops->suspend_late))(ldv_20_device); else ;
        
#line 1295 
        if (ldv_20_pm_ops->resume_early != (int (*)(struct device *))0) 
          
#line 1297 
          (*(ldv_20_pm_ops->resume_early))(ldv_20_device); else ;
      }
      
#line 1304 
      ldv_emg_wrapper_ath5k_pci_resume_4(ldv_20_device);
      
#line 1307 
      goto ldv_51867;
      case 2: 
#line 1309 
      ;
      
#line 1312 
      ldv_emg_wrapper_ath5k_pci_suspend_2(ldv_20_device);
      
#line 1315 
      tmp_2 = ldv_undef_int();
      
#line 1315 
      if (tmp_2 != 0) {
        
#line 1317 
        if (ldv_20_pm_ops->freeze_late != (int (*)(struct device *))0) 
          
#line 1319 
          (*(ldv_20_pm_ops->freeze_late))(ldv_20_device); else ;
        
#line 1324 
        if (ldv_20_pm_ops->thaw_early != (int (*)(struct device *))0) 
          
#line 1326 
          (*(ldv_20_pm_ops->thaw_early))(ldv_20_device); else ;
      }
      else {
        
#line 1333 
        if (ldv_20_pm_ops->freeze_noirq != (int (*)(struct device *))0) 
          
#line 1335 
          (*(ldv_20_pm_ops->freeze_noirq))(ldv_20_device); else ;
        
#line 1340 
        if (ldv_20_pm_ops->thaw_noirq != (int (*)(struct device *))0) 
          
#line 1342 
          (*(ldv_20_pm_ops->thaw_noirq))(ldv_20_device); else ;
      }
      
#line 1349 
      ldv_emg_wrapper_ath5k_pci_resume_4(ldv_20_device);
      
#line 1352 
      goto ldv_51867;
      case 3: 
#line 1354 
      ;
      
#line 1357 
      ldv_emg_wrapper_ath5k_pci_suspend_2(ldv_20_device);
      
#line 1360 
      tmp_3 = ldv_undef_int();
      
#line 1360 
      if (tmp_3 != 0) {
        
#line 1362 
        if (ldv_20_pm_ops->poweroff_late != (int (*)(struct device *))0) 
          
#line 1364 
          (*(ldv_20_pm_ops->poweroff_late))(ldv_20_device); else ;
        
#line 1369 
        if (ldv_20_pm_ops->restore_early != (int (*)(struct device *))0) 
          
#line 1371 
          (*(ldv_20_pm_ops->restore_early))(ldv_20_device); else ;
      }
      else {
        
#line 1378 
        if (ldv_20_pm_ops->poweroff_noirq != (int (*)(struct device *))0) 
          
#line 1380 
          (*(ldv_20_pm_ops->poweroff_noirq))(ldv_20_device); else ;
        
#line 1385 
        if (ldv_20_pm_ops->restore_noirq != (int (*)(struct device *))0) 
          
#line 1387 
          (*(ldv_20_pm_ops->restore_noirq))(ldv_20_device); else ;
      }
      
#line 1394 
      ldv_emg_wrapper_ath5k_pci_resume_4(ldv_20_device);
      
#line 1397 
      goto ldv_51867;
      default: 
#line 1399 
      ;
      
#line 1399 
      __VERIFIER_assume(0);
    }
    ldv_51867: 
#line 1402 
    ;
    
#line 1402 
    if (ldv_20_pm_ops->complete != (void (*)(struct device *))0) 
#line 1404 
                                                                 (*(ldv_20_pm_ops->complete))(ldv_20_device); else ;
    
#line 1412 
    goto ldv_do_20;
    case 4: 
#line 1415 
    ;
    
#line 1421 
    __retres = (void *)0;
    
#line 1421 
    goto return_label;
    default: 
#line 1424 
    ;
    
#line 1424 
    __VERIFIER_assume(0);
  }
  
#line 1427 
  __retres = (void *)0;
  return_label: 
#line 1427 
                return __retres;
}


#line 1432  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_7_2(struct ieee80211_hw *arg0)
{
  int ret;
  struct ldv_struct_ieee80211_scenario_13 *cf_arg_13;
  int tmp;
  
#line 1435 
  tmp = ldv_undef_int();
  
#line 1435 
  switch (tmp) {
    case 0: 
#line 1436 
    ;
    
#line 1437 
    ret = pthread_join(ldv_thread_13,(void **)0);
    
#line 1438 
    __VERIFIER_assume(ret == 0);
    
#line 1439 
    goto ldv_51879;
    default: 
#line 1441 
    ;
    
#line 1441 
    __VERIFIER_assume(0);
  }
  ldv_51879: 
#line 1442 
  ;
  
#line 1443 
  return;
}


#line 1447  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_ieee80211_free_hw(struct ieee80211_hw *arg0)
{
  struct ieee80211_hw *ldv_7_ieee80211_hw;
  
#line 1453 
  ldv_dispatch_deregister_7_2(ldv_7_ieee80211_hw);
  
#line 1457 
  ldv_free((void *)ldv_7_ieee80211_hw);
  
#line 1461 
  goto return_label;
  return_label: 
#line 1463 
                return;
}


#line 1468  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_8_3(struct ieee80211_hw *arg0)
{
  int ret;
  struct ldv_struct_ieee80211_scenario_13 *cf_arg_13;
  int tmp;
  
#line 1471 
  tmp = ldv_undef_int();
  
#line 1471 
  switch (tmp) {
    case 0: 
#line 1472 
    ;
    
#line 1473 
    cf_arg_13 = (struct ldv_struct_ieee80211_scenario_13 *)ldv_xmalloc(16UL);
    
#line 1474 
    cf_arg_13->arg0 = arg0;
    
#line 1475 
    ret = pthread_create(& ldv_thread_13,(pthread_attr_t const *)0,& ldv_ieee80211_scenario_13,(void *)cf_arg_13);
    
#line 1476 
    __VERIFIER_assume(ret == 0);
    
#line 1477 
    goto ldv_51891;
    default: 
#line 1479 
    ;
    
#line 1479 
    __VERIFIER_assume(0);
  }
  ldv_51891: 
#line 1480 
  ;
  
#line 1481 
  return;
}


#line 1485  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_16(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_16_ret_val;
  int ldv_16_line;
  void *ldv_16_data;
  enum irqreturn (*ldv_16_thread)(int , void *);
  int tmp;
  
#line 1491 
  enum irqreturn (*ldv_16_callback)(int , void *) = & ldv_emg_wrapper_ath5k_intr_2;
  
#line 1494 
  struct ldv_struct_interrupt_scenario_16 *data = (struct ldv_struct_interrupt_scenario_16 *)arg0;
  
#line 1499 
  if (data != (struct ldv_struct_interrupt_scenario_16 *)0) {
    
#line 1500 
    ldv_16_line = data->arg0;
    
#line 1501 
    ldv_16_callback = data->arg1;
    
#line 1502 
    ldv_16_thread = data->arg2;
    
#line 1503 
    ldv_16_data = data->arg3;
    
#line 1504 
    ldv_free((void *)data);
  }
  else ;
  
#line 1510 
  ldv_switch_to_interrupt_context();
  
#line 1512 
  ldv_16_ret_val = ldv_emg_wrapper_ath5k_intr_2(ldv_16_line,ldv_16_data);
  
#line 1514 
  ldv_switch_to_process_context();
  
#line 1517 
  tmp = ldv_undef_int();
  
#line 1517 
  if (tmp != 0) {
    
#line 1519 
    __VERIFIER_assume(ldv_16_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 1523 
    if (ldv_16_thread != (enum irqreturn (*)(int , void *))0) 
#line 1525 
                                                              (*ldv_16_thread)(ldv_16_line,ldv_16_data); else ;
  }
  else 
#line 1532 
       __VERIFIER_assume(ldv_16_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 1541 
  __retres = (void *)0;
  
#line 1541 
  goto return_label;
  
#line 1543 
  __retres = (void *)0;
  return_label: 
#line 1543 
                return __retres;
}


#line 1548  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_12_line;
  void *ldv_12_data;
  enum irqreturn (*ldv_12_thread)(int , void *);
  int tmp_0;
  
#line 1553 
  enum irqreturn (*ldv_12_callback)(int , void *) = & ldv_emg_wrapper_ath5k_intr_2;
  
#line 1558 
  tmp_0 = ldv_undef_int();
  
#line 1558 
  if (tmp_0 != 0) {
    
#line 1560 
    ldv_12_line = (int)arg0;
    
#line 1561 
    ldv_12_callback = arg1;
    
#line 1562 
    ldv_12_thread = (enum irqreturn (*)(int , void *))0;
    
#line 1563 
    ldv_12_data = arg4;
    
#line 1567 
    ldv_dispatch_irq_register_12_3(ldv_12_line,ldv_12_callback,ldv_12_thread,ldv_12_data);
    
#line 1571 
    __retres = 0;
    
#line 1571 
    goto return_label;
  }
  else {
    int tmp;
    
#line 1578 
    tmp = ldv_undef_int_negative();
    
#line 1578 
    __retres = tmp;
    
#line 1578 
    goto return_label;
  }
  return_label: 
#line 1558 
                return __retres;
}


#line 1588  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 1595 
  ldv_1_ret = ldv_emg_ath5k_pci_driver_init();
  
#line 1596 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 1599 
  tmp = ldv_undef_int();
  
#line 1599 
  if (tmp != 0) {
    
#line 1601 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 1605 
    __retres = (void *)0;
    
#line 1605 
    goto return_label;
  }
  else {
    
#line 1609 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 1614 
    ldv_emg_ath5k_pci_driver_exit();
    
#line 1618 
    __retres = (void *)0;
    
#line 1618 
    goto return_label;
  }
  
#line 1621 
  __retres = (void *)0;
  return_label: 
#line 1621 
                return __retres;
}


#line 1626  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_10_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_10 *cf_arg_16;
  int tmp;
  
#line 1629 
  tmp = ldv_undef_int();
  
#line 1629 
  switch (tmp) {
    case 0: 
#line 1630 
    ;
    
#line 1631 
    ret = pthread_join(ldv_thread_16,(void **)0);
    
#line 1632 
    __VERIFIER_assume(ret == 0);
    
#line 1633 
    goto ldv_51933;
    default: 
#line 1635 
    ;
    
#line 1635 
    __VERIFIER_assume(0);
  }
  ldv_51933: 
#line 1636 
  ;
  
#line 1637 
  return;
}


#line 1641  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_10_line;
  
#line 1647 
  ldv_10_line = (int)arg0;
  
#line 1651 
  ldv_dispatch_irq_deregister_10_1(ldv_10_line);
  
#line 1655 
  goto return_label;
  return_label: 
#line 1657 
                return;
}


#line 1662  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_26(void *arg0)
{
  void *__retres;
  struct file *ldv_26_resource_1;
  int ldv_26_ldv_param_2_3;
  long long ldv_26_ldv_param_1_2;
  char *ldv_26_ldv_param_1_4;
  struct inode *ldv_26_resource_0;
  unsigned long ldv_26_size_cnt;
  long long *ldv_26_ldv_param_3_5;
  char *ldv_26_ldv_param_1_6;
  long long *ldv_26_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 1673 
  struct file_operations *ldv_26_container = ldv_emg_alias_fops_ani_2;
  
#line 1674 
  int ldv_26_ret = ldv_undef_int();
  
#line 1677 
  struct ldv_struct_character_driver_scenario_14 *data = (struct ldv_struct_character_driver_scenario_14 *)arg0;
  
#line 1681 
  ldv_26_ret = ldv_undef_int();
  
#line 1684 
  if (data != (struct ldv_struct_character_driver_scenario_14 *)0) {
    
#line 1685 
    ldv_26_container = data->arg0;
    
#line 1686 
    ldv_free((void *)data);
  }
  else ;
  
#line 1691 
  ldv_26_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 1692 
  tmp_1 = ldv_undef_int();
  
#line 1692 
  ldv_26_size_cnt = (unsigned long)tmp_1;
  
#line 1699 
  goto ldv_main_26;
  
#line 1701 
  __retres = (void *)0;
  
#line 1701 
  goto return_label;
  ldv_main_26: 
#line 1704 
  ;
  
#line 1707 
  tmp_3 = ldv_undef_int();
  
#line 1707 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 1710 
    ldv_26_ret = (*ldv_emg_alias_simple_open_6)(ldv_26_resource_0,ldv_26_resource_1);
    
#line 1712 
    ldv_26_ret = ldv_filter_err_code(ldv_26_ret);
    
#line 1715 
    tmp_2 = ldv_undef_int();
    
#line 1715 
    if (tmp_2 != 0) {
      
#line 1717 
      __VERIFIER_assume(ldv_26_ret == 0);
      
#line 1724 
      goto ldv_call_26;
    }
    else {
      
#line 1728 
      __VERIFIER_assume(ldv_26_ret != 0);
      
#line 1735 
      goto ldv_main_26;
    }
  }
  else {
    
#line 1740 
    ldv_free((void *)ldv_26_resource_0);
    
#line 1748 
    __retres = (void *)0;
    
#line 1748 
    goto return_label;
  }
  
#line 1751 
  __retres = (void *)0;
  
#line 1751 
  goto return_label;
  ldv_call_26: 
#line 1754 
  ;
  
#line 1757 
  tmp_4 = ldv_undef_int();
  
#line 1757 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 1758 
    ;
    
#line 1760 
    ldv_26_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 1761 
    ldv_26_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 1770 
    __VERIFIER_assume(ldv_26_size_cnt <= 2147479552UL);
    
#line 1772 
    ldv_emg_wrapper_write_file_ani_5(ldv_26_resource_1,ldv_26_ldv_param_1_6,ldv_26_size_cnt,ldv_26_ldv_param_3_7);
    
#line 1776 
    ldv_free((void *)ldv_26_ldv_param_3_7);
    
#line 1777 
    ldv_free((void *)ldv_26_ldv_param_1_6);
    
#line 1784 
    goto ldv_call_26;
    case 2: 
#line 1787 
    ;
    
#line 1789 
    if (ldv_26_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 1791 
      (*(ldv_26_container->release))(ldv_26_resource_0,ldv_26_resource_1); else ;
    
#line 1799 
    goto ldv_main_26;
    case 3: 
#line 1802 
    ;
    
#line 1806 
    tmp_9 = ldv_undef_int();
    
#line 1806 
    if (tmp_9 != 0) 
#line 1809 
                    (*ldv_emg_alias_default_llseek_3)(ldv_26_resource_1,ldv_26_ldv_param_1_2,ldv_26_ldv_param_2_3);
    else {
      
#line 1815 
      ldv_26_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1816 
      ldv_26_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1821 
      ldv_emg_wrapper_read_file_ani_4(ldv_26_resource_1,ldv_26_ldv_param_1_4,ldv_26_size_cnt,ldv_26_ldv_param_3_5);
      
#line 1825 
      ldv_free((void *)ldv_26_ldv_param_1_4);
      
#line 1826 
      ldv_free((void *)ldv_26_ldv_param_3_5);
    }
    
#line 1830 
    goto ldv_51960;
    default: 
#line 1832 
    ;
    
#line 1832 
    __VERIFIER_assume(0);
  }
  ldv_51960: 
#line 1841 
  ;
  
#line 1841 
  goto ldv_call_26;
  
#line 1843 
  __retres = (void *)0;
  return_label: 
#line 1843 
                return __retres;
}


#line 1848  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_17(void *arg0)
{
  void *__retres;
  struct file *ldv_17_resource_1;
  int ldv_17_ldv_param_2_3;
  long long ldv_17_ldv_param_1_2;
  char *ldv_17_ldv_param_1_4;
  struct inode *ldv_17_resource_0;
  unsigned long ldv_17_size_cnt;
  long long *ldv_17_ldv_param_3_5;
  char *ldv_17_ldv_param_1_6;
  long long *ldv_17_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 1859 
  struct file_operations *ldv_17_container = ldv_emg_alias_fops_frameerrors_2;
  
#line 1860 
  int ldv_17_ret = ldv_undef_int();
  
#line 1863 
  struct ldv_struct_character_driver_scenario_14 *data = (struct ldv_struct_character_driver_scenario_14 *)arg0;
  
#line 1867 
  ldv_17_ret = ldv_undef_int();
  
#line 1870 
  if (data != (struct ldv_struct_character_driver_scenario_14 *)0) {
    
#line 1871 
    ldv_17_container = data->arg0;
    
#line 1872 
    ldv_free((void *)data);
  }
  else ;
  
#line 1877 
  ldv_17_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 1878 
  tmp_1 = ldv_undef_int();
  
#line 1878 
  ldv_17_size_cnt = (unsigned long)tmp_1;
  
#line 1885 
  goto ldv_main_17;
  
#line 1887 
  __retres = (void *)0;
  
#line 1887 
  goto return_label;
  ldv_main_17: 
#line 1890 
  ;
  
#line 1893 
  tmp_3 = ldv_undef_int();
  
#line 1893 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 1896 
    ldv_17_ret = (*ldv_emg_alias_simple_open_6)(ldv_17_resource_0,ldv_17_resource_1);
    
#line 1898 
    ldv_17_ret = ldv_filter_err_code(ldv_17_ret);
    
#line 1901 
    tmp_2 = ldv_undef_int();
    
#line 1901 
    if (tmp_2 != 0) {
      
#line 1903 
      __VERIFIER_assume(ldv_17_ret == 0);
      
#line 1910 
      goto ldv_call_17;
    }
    else {
      
#line 1914 
      __VERIFIER_assume(ldv_17_ret != 0);
      
#line 1921 
      goto ldv_main_17;
    }
  }
  else {
    
#line 1926 
    ldv_free((void *)ldv_17_resource_0);
    
#line 1934 
    __retres = (void *)0;
    
#line 1934 
    goto return_label;
  }
  
#line 1937 
  __retres = (void *)0;
  
#line 1937 
  goto return_label;
  ldv_call_17: 
#line 1940 
  ;
  
#line 1943 
  tmp_4 = ldv_undef_int();
  
#line 1943 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 1944 
    ;
    
#line 1946 
    ldv_17_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 1947 
    ldv_17_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 1956 
    __VERIFIER_assume(ldv_17_size_cnt <= 2147479552UL);
    
#line 1958 
    ldv_emg_wrapper_write_file_frameerrors_4(ldv_17_resource_1,ldv_17_ldv_param_1_6,ldv_17_size_cnt,ldv_17_ldv_param_3_7);
    
#line 1962 
    ldv_free((void *)ldv_17_ldv_param_1_6);
    
#line 1963 
    ldv_free((void *)ldv_17_ldv_param_3_7);
    
#line 1970 
    goto ldv_call_17;
    case 2: 
#line 1973 
    ;
    
#line 1975 
    if (ldv_17_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 1977 
      (*(ldv_17_container->release))(ldv_17_resource_0,ldv_17_resource_1); else ;
    
#line 1985 
    goto ldv_main_17;
    case 3: 
#line 1988 
    ;
    
#line 1992 
    tmp_9 = ldv_undef_int();
    
#line 1992 
    if (tmp_9 != 0) 
#line 1995 
                    (*ldv_emg_alias_default_llseek_3)(ldv_17_resource_1,ldv_17_ldv_param_1_2,ldv_17_ldv_param_2_3);
    else {
      
#line 2001 
      ldv_17_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 2002 
      ldv_17_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 2007 
      ldv_emg_wrapper_read_file_frameerrors_3(ldv_17_resource_1,ldv_17_ldv_param_1_4,ldv_17_size_cnt,ldv_17_ldv_param_3_5);
      
#line 2011 
      ldv_free((void *)ldv_17_ldv_param_1_4);
      
#line 2012 
      ldv_free((void *)ldv_17_ldv_param_3_5);
    }
    
#line 2016 
    goto ldv_51982;
    default: 
#line 2018 
    ;
    
#line 2018 
    __VERIFIER_assume(0);
  }
  ldv_51982: 
#line 2027 
  ;
  
#line 2027 
  goto ldv_call_17;
  
#line 2029 
  __retres = (void *)0;
  return_label: 
#line 2029 
                return __retres;
}


#line 2034  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 2037 
  ldv_initialize();
  
#line 2040 
  ldv_initialization_1((void *)0);
  
#line 2042 
  __retres = 0;
  
#line 2042 
  return __retres;
}


#line 2047  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_14(void *arg0)
{
  void *__retres;
  struct file *ldv_14_resource_1;
  int ldv_14_ldv_param_2_3;
  long long ldv_14_ldv_param_1_2;
  char *ldv_14_ldv_param_1_4;
  struct inode *ldv_14_resource_0;
  unsigned long ldv_14_size_cnt;
  long long *ldv_14_ldv_param_3_5;
  char *ldv_14_ldv_param_1_6;
  long long *ldv_14_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 2058 
  struct file_operations *ldv_14_container = ldv_emg_alias_fops_queue_2;
  
#line 2059 
  int ldv_14_ret = ldv_undef_int();
  
#line 2062 
  struct ldv_struct_character_driver_scenario_14 *data = (struct ldv_struct_character_driver_scenario_14 *)arg0;
  
#line 2066 
  ldv_14_ret = ldv_undef_int();
  
#line 2069 
  if (data != (struct ldv_struct_character_driver_scenario_14 *)0) {
    
#line 2070 
    ldv_14_container = data->arg0;
    
#line 2071 
    ldv_free((void *)data);
  }
  else ;
  
#line 2076 
  ldv_14_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 2077 
  tmp_1 = ldv_undef_int();
  
#line 2077 
  ldv_14_size_cnt = (unsigned long)tmp_1;
  
#line 2084 
  goto ldv_main_14;
  
#line 2086 
  __retres = (void *)0;
  
#line 2086 
  goto return_label;
  ldv_main_14: 
#line 2089 
  ;
  
#line 2092 
  tmp_3 = ldv_undef_int();
  
#line 2092 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 2095 
    ldv_14_ret = (*ldv_emg_alias_simple_open_6)(ldv_14_resource_0,ldv_14_resource_1);
    
#line 2097 
    ldv_14_ret = ldv_filter_err_code(ldv_14_ret);
    
#line 2100 
    tmp_2 = ldv_undef_int();
    
#line 2100 
    if (tmp_2 != 0) {
      
#line 2102 
      __VERIFIER_assume(ldv_14_ret == 0);
      
#line 2109 
      goto ldv_call_14;
    }
    else {
      
#line 2113 
      __VERIFIER_assume(ldv_14_ret != 0);
      
#line 2120 
      goto ldv_main_14;
    }
  }
  else {
    
#line 2125 
    ldv_free((void *)ldv_14_resource_0);
    
#line 2133 
    __retres = (void *)0;
    
#line 2133 
    goto return_label;
  }
  
#line 2136 
  __retres = (void *)0;
  
#line 2136 
  goto return_label;
  ldv_call_14: 
#line 2139 
  ;
  
#line 2142 
  tmp_4 = ldv_undef_int();
  
#line 2142 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 2143 
    ;
    
#line 2145 
    ldv_14_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 2146 
    ldv_14_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 2155 
    __VERIFIER_assume(ldv_14_size_cnt <= 2147479552UL);
    
#line 2157 
    ldv_emg_wrapper_write_file_queue_4(ldv_14_resource_1,ldv_14_ldv_param_1_6,ldv_14_size_cnt,ldv_14_ldv_param_3_7);
    
#line 2161 
    ldv_free((void *)ldv_14_ldv_param_3_7);
    
#line 2162 
    ldv_free((void *)ldv_14_ldv_param_1_6);
    
#line 2169 
    goto ldv_call_14;
    case 2: 
#line 2172 
    ;
    
#line 2174 
    if (ldv_14_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 2176 
      (*(ldv_14_container->release))(ldv_14_resource_0,ldv_14_resource_1); else ;
    
#line 2184 
    goto ldv_main_14;
    case 3: 
#line 2187 
    ;
    
#line 2191 
    tmp_9 = ldv_undef_int();
    
#line 2191 
    if (tmp_9 != 0) 
#line 2194 
                    (*ldv_emg_alias_default_llseek_3)(ldv_14_resource_1,ldv_14_ldv_param_1_2,ldv_14_ldv_param_2_3);
    else {
      
#line 2200 
      ldv_14_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 2201 
      ldv_14_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 2206 
      ldv_emg_wrapper_read_file_queue_3(ldv_14_resource_1,ldv_14_ldv_param_1_4,ldv_14_size_cnt,ldv_14_ldv_param_3_5);
      
#line 2210 
      ldv_free((void *)ldv_14_ldv_param_3_5);
      
#line 2211 
      ldv_free((void *)ldv_14_ldv_param_1_4);
    }
    
#line 2215 
    goto ldv_52007;
    default: 
#line 2217 
    ;
    
#line 2217 
    __VERIFIER_assume(0);
  }
  ldv_52007: 
#line 2226 
  ;
  
#line 2226 
  goto ldv_call_14;
  
#line 2228 
  __retres = (void *)0;
  return_label: 
#line 2228 
                return __retres;
}


#line 2233  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_tasklet_schedule(struct tasklet_struct *arg0)
{
  unsigned long ldv_9_ldv_param_0_2;
  struct tasklet_struct *ldv_9_tasklet_struct;
  
#line 2240 
  ldv_9_tasklet_struct = arg0;
  
#line 2247 
  if (ldv_9_tasklet_struct->count.counter == 0) 
#line 2249 
                                                (*ldv_emg_alias_None_2)(ldv_9_ldv_param_0_2); else ;
  
#line 2257 
  goto return_label;
  return_label: 
#line 2259 
                return;
}


#line 2264  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 2267 
  struct pci_driver *ldv_2_pci_driver = ldv_emg_alias_ath5k_pci_driver_2;
  
#line 2270 
  ldv_2_pci_driver = arg0;
  
#line 2274 
  ldv_dispatch_deregister_2_1(ldv_2_pci_driver);
  
#line 2278 
  goto return_label;
  return_label: 
#line 2280 
                return;
}


#line 2285  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_2_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_18 *cf_arg_18;
  int tmp;
  
#line 2288 
  tmp = ldv_undef_int();
  
#line 2288 
  switch (tmp) {
    case 0: 
#line 2289 
    ;
    
#line 2290 
    ret = pthread_join(ldv_thread_18,(void **)0);
    
#line 2291 
    __VERIFIER_assume(ret == 0);
    
#line 2292 
    goto ldv_52024;
    default: 
#line 2294 
    ;
    
#line 2294 
    __VERIFIER_assume(0);
  }
  ldv_52024: 
#line 2295 
  ;
  
#line 2296 
  return;
}


#line 2300  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_23(void *arg0)
{
  void *__retres;
  struct file *ldv_23_resource_1;
  int ldv_23_ldv_param_2_3;
  long long ldv_23_ldv_param_1_2;
  char *ldv_23_ldv_param_1_4;
  unsigned long ldv_23_size_cnt;
  long long *ldv_23_ldv_param_3_5;
  struct inode *ldv_23_resource_0;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 2309 
  struct file_operations *ldv_23_container = ldv_emg_alias_fops_reset_2;
  
#line 2310 
  int ldv_23_ret = ldv_undef_int();
  
#line 2313 
  struct ldv_struct_character_driver_scenario_14 *data = (struct ldv_struct_character_driver_scenario_14 *)arg0;
  
#line 2317 
  ldv_23_ret = ldv_undef_int();
  
#line 2320 
  if (data != (struct ldv_struct_character_driver_scenario_14 *)0) {
    
#line 2321 
    ldv_23_container = data->arg0;
    
#line 2322 
    ldv_free((void *)data);
  }
  else ;
  
#line 2327 
  ldv_23_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 2328 
  tmp_1 = ldv_undef_int();
  
#line 2328 
  ldv_23_size_cnt = (unsigned long)tmp_1;
  
#line 2335 
  goto ldv_main_23;
  
#line 2337 
  __retres = (void *)0;
  
#line 2337 
  goto return_label;
  ldv_main_23: 
#line 2340 
  ;
  
#line 2343 
  tmp_3 = ldv_undef_int();
  
#line 2343 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 2346 
    ldv_23_ret = (*ldv_emg_alias_simple_open_6)(ldv_23_resource_0,ldv_23_resource_1);
    
#line 2348 
    ldv_23_ret = ldv_filter_err_code(ldv_23_ret);
    
#line 2351 
    tmp_2 = ldv_undef_int();
    
#line 2351 
    if (tmp_2 != 0) {
      
#line 2353 
      __VERIFIER_assume(ldv_23_ret == 0);
      
#line 2360 
      goto ldv_call_23;
    }
    else {
      
#line 2364 
      __VERIFIER_assume(ldv_23_ret != 0);
      
#line 2371 
      goto ldv_main_23;
    }
  }
  else {
    
#line 2376 
    ldv_free((void *)ldv_23_resource_0);
    
#line 2384 
    __retres = (void *)0;
    
#line 2384 
    goto return_label;
  }
  
#line 2387 
  __retres = (void *)0;
  
#line 2387 
  goto return_label;
  ldv_call_23: 
#line 2390 
  ;
  
#line 2393 
  tmp_4 = ldv_undef_int();
  
#line 2393 
  switch (tmp_4) {
    case 1: 
#line 2394 
    ;
    
#line 2400 
    (*ldv_emg_alias_noop_llseek_3)(ldv_23_resource_1,ldv_23_ldv_param_1_2,ldv_23_ldv_param_2_3);
    
#line 2410 
    goto ldv_call_23;
    case 2: 
#line 2413 
    ;
    
#line 2415 
    ldv_23_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 2416 
    ldv_23_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 2425 
    __VERIFIER_assume(ldv_23_size_cnt <= 2147479552UL);
    
#line 2427 
    ldv_emg_wrapper_write_file_reset_4(ldv_23_resource_1,ldv_23_ldv_param_1_4,ldv_23_size_cnt,ldv_23_ldv_param_3_5);
    
#line 2431 
    ldv_free((void *)ldv_23_ldv_param_1_4);
    
#line 2432 
    ldv_free((void *)ldv_23_ldv_param_3_5);
    
#line 2439 
    goto ldv_call_23;
    case 3: 
#line 2442 
    ;
    
#line 2444 
    if (ldv_23_container->release != (int (*)(struct inode *, struct file *))0) 
      
#line 2446 
      (*(ldv_23_container->release))(ldv_23_resource_0,ldv_23_resource_1); else ;
    
#line 2454 
    goto ldv_main_23;
    default: 
#line 2457 
    ;
    
#line 2457 
    __VERIFIER_assume(0);
  }
  
#line 2460 
  __retres = (void *)0;
  return_label: 
#line 2460 
                return __retres;
}


#line 2465  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_27(void *arg0)
{
  void *__retres;
  struct file *ldv_27_resource_1;
  int ldv_27_ldv_param_2_3;
  long long ldv_27_ldv_param_1_2;
  char *ldv_27_ldv_param_1_4;
  struct inode *ldv_27_resource_0;
  unsigned long ldv_27_size_cnt;
  long long *ldv_27_ldv_param_3_5;
  char *ldv_27_ldv_param_1_6;
  long long *ldv_27_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 2476 
  struct file_operations *ldv_27_container = ldv_emg_alias_fops_registers_2;
  
#line 2477 
  int ldv_27_ret = ldv_undef_int();
  
#line 2480 
  struct ldv_struct_character_driver_scenario_14 *data = (struct ldv_struct_character_driver_scenario_14 *)arg0;
  
#line 2484 
  ldv_27_ret = ldv_undef_int();
  
#line 2487 
  if (data != (struct ldv_struct_character_driver_scenario_14 *)0) {
    
#line 2488 
    ldv_27_container = data->arg0;
    
#line 2489 
    ldv_free((void *)data);
  }
  else ;
  
#line 2494 
  ldv_27_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 2495 
  tmp_1 = ldv_undef_int();
  
#line 2495 
  ldv_27_size_cnt = (unsigned long)tmp_1;
  
#line 2502 
  goto ldv_main_27;
  
#line 2504 
  __retres = (void *)0;
  
#line 2504 
  goto return_label;
  ldv_main_27: 
#line 2507 
  ;
  
#line 2510 
  tmp_3 = ldv_undef_int();
  
#line 2510 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 2513 
    ldv_27_ret = ldv_emg_wrapper_open_file_registers_6(ldv_27_resource_0,ldv_27_resource_1);
    
#line 2515 
    ldv_27_ret = ldv_filter_err_code(ldv_27_ret);
    
#line 2518 
    tmp_2 = ldv_undef_int();
    
#line 2518 
    if (tmp_2 != 0) {
      
#line 2520 
      __VERIFIER_assume(ldv_27_ret == 0);
      
#line 2527 
      goto ldv_call_27;
    }
    else {
      
#line 2531 
      __VERIFIER_assume(ldv_27_ret != 0);
      
#line 2538 
      goto ldv_main_27;
    }
  }
  else {
    
#line 2543 
    ldv_free((void *)ldv_27_resource_0);
    
#line 2551 
    __retres = (void *)0;
    
#line 2551 
    goto return_label;
  }
  
#line 2554 
  __retres = (void *)0;
  
#line 2554 
  goto return_label;
  ldv_call_27: 
#line 2557 
  ;
  
#line 2560 
  tmp_4 = ldv_undef_int();
  
#line 2560 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 2561 
    ;
    
#line 2563 
    ldv_27_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 2564 
    ldv_27_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 2568 
    if (ldv_27_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 2574 
      __VERIFIER_assume(ldv_27_size_cnt <= 2147479552UL);
      
#line 2576 
      (*(ldv_27_container->write))(ldv_27_resource_1,(char const *)ldv_27_ldv_param_1_6,ldv_27_size_cnt,ldv_27_ldv_param_3_7);
    }
    else ;
    
#line 2581 
    ldv_free((void *)ldv_27_ldv_param_3_7);
    
#line 2582 
    ldv_free((void *)ldv_27_ldv_param_1_6);
    
#line 2589 
    goto ldv_call_27;
    case 2: 
#line 2592 
    ;
    
#line 2595 
    (*ldv_emg_alias_seq_release_5)(ldv_27_resource_0,ldv_27_resource_1);
    
#line 2602 
    goto ldv_main_27;
    case 3: 
#line 2605 
    ;
    
#line 2609 
    tmp_9 = ldv_undef_int();
    
#line 2609 
    if (tmp_9 != 0) 
#line 2612 
                    (*ldv_emg_alias_seq_lseek_3)(ldv_27_resource_1,ldv_27_ldv_param_1_2,ldv_27_ldv_param_2_3);
    else {
      
#line 2618 
      ldv_27_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 2619 
      ldv_27_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 2624 
      (*ldv_emg_alias_seq_read_4)(ldv_27_resource_1,ldv_27_ldv_param_1_4,ldv_27_size_cnt,ldv_27_ldv_param_3_5);
      
#line 2628 
      ldv_free((void *)ldv_27_ldv_param_1_4);
      
#line 2629 
      ldv_free((void *)ldv_27_ldv_param_3_5);
    }
    
#line 2633 
    goto ldv_52065;
    default: 
#line 2635 
    ;
    
#line 2635 
    __VERIFIER_assume(0);
  }
  ldv_52065: 
#line 2644 
  ;
  
#line 2644 
  goto ldv_call_27;
  
#line 2646 
  __retres = (void *)0;
  return_label: 
#line 2646 
                return __retres;
}


#line 2651  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_seq_open(struct file *arg0, struct seq_operations *arg1)
{
  int __retres;
  struct seq_file *ldv_5_seq_file;
  struct file *ldv_5_file;
  
#line 2655 
  struct seq_operations *ldv_5_ops = ldv_emg_alias_register_seq_ops_2;
  
#line 2659 
  ldv_5_seq_file = (struct seq_file *)ldv_xmalloc_unknown_size(0UL);
  
#line 2660 
  ldv_5_ops = arg1;
  
#line 2661 
  ldv_5_file->private_data = (void *)ldv_5_seq_file;
  
#line 2665 
  ldv_dispatch_register_5_1(ldv_5_seq_file,ldv_5_ops);
  
#line 2666 
  ;
  
#line 2666 
  __retres = 0;
  
#line 2666 
  return __retres;
}


#line 2674  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_ieee80211_scenario_13(void *arg0)
{
  void *__retres;
  unsigned short ldv_13_ldv_param_2_17;
  unsigned int ldv_13_ldv_param_2_28;
  unsigned int *ldv_13_ldv_param_1_29;
  unsigned int *ldv_13_ldv_param_4_7;
  unsigned int *ldv_13_ldv_param_1_4;
  struct ieee80211_sta *ldv_13_ldv_param_3_14;
  struct ieee80211_vif *ldv_13_ldv_param_1_26;
  struct sk_buff *ldv_13_ldv_param_2_20;
  enum set_key_cmd *ldv_13_ldv_param_1_12;
  struct ieee80211_vif *ldv_13_ldv_param_1_16;
  struct ieee80211_vif *ldv_13_ldv_param_1_21;
  struct ieee80211_vif *ldv_13_ldv_param_1_35;
  struct ieee80211_hw *ldv_13_resource;
  unsigned int *ldv_13_ldv_param_3_6;
  struct ieee80211_vif *ldv_13_ldv_param_1_37;
  struct ieee80211_vif *ldv_13_ldv_param_1_36;
  struct ieee80211_vif *ldv_13_ldv_param_2_13;
  unsigned int ldv_13_ldv_param_1_39;
  unsigned long long ldv_13_ldv_param_2_22;
  unsigned long long ldv_13_ldv_param_3_25;
  struct ieee80211_low_level_stats *ldv_13_ldv_param_1_3;
  struct survey_info *ldv_13_ldv_param_2_10;
  struct ieee80211_vif *ldv_13_ldv_param_1_34;
  unsigned int ldv_13_ldv_param_2_40;
  unsigned int *ldv_13_ldv_param_2_24;
  struct ieee80211_tx_queue_params *ldv_13_ldv_param_3_18;
  struct netdev_hw_addr_list *ldv_13_ldv_param_1_2;
  unsigned int ldv_13_ldv_param_1_11;
  short ldv_13_ldv_param_1_8;
  struct ieee80211_key_conf *ldv_13_ldv_param_4_15;
  unsigned int ldv_13_ldv_param_1_27;
  unsigned int ldv_13_ldv_param_1_23;
  unsigned int *ldv_13_ldv_param_2_5;
  struct cfg80211_wowlan *ldv_13_ldv_param_1_42;
  struct ieee80211_vif *ldv_13_ldv_param_1_41;
  unsigned int *ldv_13_ldv_param_2_30;
  struct ieee80211_vif *ldv_13_ldv_param_1_31;
  int ldv_13_ldv_param_1_9;
  struct ieee80211_tx_control *ldv_13_ldv_param_1_19;
  unsigned char *ldv_13_ldv_param_2_38;
  struct ieee80211_bss_conf *ldv_13_ldv_param_2_32;
  unsigned int ldv_13_ldv_param_3_33;
  int tmp_1;
  int tmp_2;
  
#line 2695 
  struct ieee80211_ops *ldv_13_container = (struct ieee80211_ops *)(& ath5k_hw_ops);
  
#line 2720 
  int ldv_13_ret = ldv_undef_int();
  
#line 2722 
  struct ldv_struct_ieee80211_scenario_13 *data = (struct ldv_struct_ieee80211_scenario_13 *)arg0;
  
#line 2726 
  ldv_13_ret = ldv_undef_int();
  
#line 2729 
  if (data != (struct ldv_struct_ieee80211_scenario_13 *)0) {
    
#line 2730 
    ldv_13_resource = data->arg0;
    
#line 2731 
    ldv_free((void *)data);
  }
  else ;
  
#line 2739 
  goto ldv_main_13;
  
#line 2741 
  __retres = (void *)0;
  
#line 2741 
  goto return_label;
  ldv_main_13: 
#line 2744 
  ;
  
#line 2747 
  tmp_1 = ldv_undef_int();
  
#line 2747 
  if (tmp_1 != 0) {
    int tmp_0;
    
#line 2750 
    rtnl_lock();
    
#line 2752 
    ldv_13_ret = ath5k_start(ldv_13_resource);
    
#line 2754 
    ldv_13_ret = ldv_filter_err_code(ldv_13_ret);
    
#line 2755 
    rtnl_unlock();
    
#line 2758 
    tmp_0 = ldv_undef_int();
    
#line 2758 
    if (tmp_0 != 0) {
      
#line 2760 
      __VERIFIER_assume(ldv_13_ret == 0);
      
#line 2767 
      goto ldv_started_13;
    }
    else {
      
#line 2771 
      __VERIFIER_assume(ldv_13_ret != 0);
      
#line 2778 
      goto ldv_main_13;
    }
  }
  else {
    
#line 2787 
    __retres = (void *)0;
    
#line 2787 
    goto return_label;
  }
  
#line 2790 
  __retres = (void *)0;
  
#line 2790 
  goto return_label;
  ldv_started_13: 
#line 2793 
  ;
  
#line 2796 
  tmp_2 = ldv_undef_int();
  
#line 2796 
  switch (tmp_2) {
    int tmp_5;
    case 1: 
#line 2797 
    ;
    
#line 2799 
    ldv_13_ldv_param_1_42 = (struct cfg80211_wowlan *)ldv_xmalloc_unknown_size(0UL);
    
#line 2803 
    if (ldv_13_container->suspend != (int (*)(struct ieee80211_hw *, struct cfg80211_wowlan *))0) 
      
#line 2805 
      (*(ldv_13_container->suspend))(ldv_13_resource,ldv_13_ldv_param_1_42); else ;
    
#line 2810 
    ldv_free((void *)ldv_13_ldv_param_1_42);
    
#line 2814 
    if (ldv_13_container->resume != (int (*)(struct ieee80211_hw *))0) 
      
#line 2816 
      (*(ldv_13_container->resume))(ldv_13_resource); else ;
    
#line 2824 
    goto ldv_started_13;
    case 2: 
#line 2827 
    ;
    
#line 2830 
    rtnl_lock();
    
#line 2832 
    ath5k_stop(ldv_13_resource);
    
#line 2834 
    rtnl_unlock();
    
#line 2841 
    goto ldv_main_13;
    case 3: 
#line 2844 
    ;
    
#line 2846 
    ldv_13_ldv_param_1_2 = (struct netdev_hw_addr_list *)ldv_xmalloc_unknown_size(0UL);
    
#line 2849 
    tmp_5 = ldv_undef_int();
    
#line 2849 
    switch (tmp_5) {
      case 1: 
#line 2850 
      ;
      
#line 2853 
      ldv_emg_wrapper_ath5k_prepare_multicast_2(ldv_13_resource,ldv_13_ldv_param_1_2);
      
#line 2856 
      goto ldv_52128;
      case 2: 
#line 2858 
      ;
      
#line 2860 
      ldv_13_ldv_param_1_41 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 2865 
      ldv_emg_wrapper_ath5k_remove_interface_16(ldv_13_resource,ldv_13_ldv_param_1_41);
      
#line 2869 
      ldv_free((void *)ldv_13_ldv_param_1_41);
      
#line 2872 
      goto ldv_52128;
      case 3: 
#line 2874 
      ;
      
#line 2880 
      ldv_emg_wrapper_ath5k_set_antenna_11(ldv_13_resource,ldv_13_ldv_param_1_39,ldv_13_ldv_param_2_40);
      
#line 2886 
      goto ldv_52128;
      case 4: 
#line 2888 
      ;
      
#line 2890 
      ldv_13_ldv_param_1_37 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 2891 
      ldv_13_ldv_param_2_38 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 2896 
      ldv_emg_wrapper_ath5k_sw_scan_start_20(ldv_13_resource,ldv_13_ldv_param_1_37,ldv_13_ldv_param_2_38);
      
#line 2900 
      ldv_free((void *)ldv_13_ldv_param_1_37);
      
#line 2901 
      ldv_free((void *)ldv_13_ldv_param_2_38);
      
#line 2904 
      goto ldv_52128;
      case 5: 
#line 2906 
      ;
      
#line 2908 
      ldv_13_ldv_param_1_36 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 2913 
      ldv_emg_wrapper_ath5k_sw_scan_complete_19(ldv_13_resource,ldv_13_ldv_param_1_36);
      
#line 2917 
      ldv_free((void *)ldv_13_ldv_param_1_36);
      
#line 2920 
      goto ldv_52128;
      case 6: 
#line 2922 
      ;
      
#line 2924 
      ldv_13_ldv_param_1_35 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 2929 
      ldv_emg_wrapper_ath5k_get_tsf_21(ldv_13_resource,ldv_13_ldv_param_1_35);
      
#line 2933 
      ldv_free((void *)ldv_13_ldv_param_1_35);
      
#line 2936 
      goto ldv_52128;
      case 7: 
#line 2938 
      ;
      
#line 2940 
      ldv_13_ldv_param_1_34 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 2945 
      ldv_emg_wrapper_ath5k_add_interface_18(ldv_13_resource,ldv_13_ldv_param_1_34);
      
#line 2949 
      ldv_free((void *)ldv_13_ldv_param_1_34);
      
#line 2952 
      goto ldv_52128;
      case 8: 
#line 2954 
      ;
      
#line 2956 
      ldv_13_ldv_param_1_31 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 2957 
      ldv_13_ldv_param_2_32 = (struct ieee80211_bss_conf *)ldv_xmalloc_unknown_size(0UL);
      
#line 2962 
      ldv_emg_wrapper_ath5k_bss_info_changed_17(ldv_13_resource,ldv_13_ldv_param_1_31,ldv_13_ldv_param_2_32,ldv_13_ldv_param_3_33);
      
#line 2966 
      ldv_free((void *)ldv_13_ldv_param_1_31);
      
#line 2967 
      ldv_free((void *)ldv_13_ldv_param_2_32);
      
#line 2970 
      goto ldv_52128;
      case 9: 
#line 2972 
      ;
      
#line 2974 
      ldv_13_ldv_param_2_30 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
      
#line 2975 
      ldv_13_ldv_param_1_29 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
      
#line 2980 
      ldv_emg_wrapper_ath5k_get_antenna_22(ldv_13_resource,ldv_13_ldv_param_1_29,ldv_13_ldv_param_2_30);
      
#line 2984 
      ldv_free((void *)ldv_13_ldv_param_2_30);
      
#line 2985 
      ldv_free((void *)ldv_13_ldv_param_1_29);
      
#line 2988 
      goto ldv_52128;
      case 10: 
#line 2990 
      ;
      
#line 2996 
      ldv_emg_wrapper_ath5k_set_ringparam_4(ldv_13_resource,ldv_13_ldv_param_1_27,ldv_13_ldv_param_2_28);
      
#line 3002 
      goto ldv_52128;
      case 11: 
#line 3004 
      ;
      
#line 3006 
      ldv_13_ldv_param_1_26 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 3011 
      ldv_emg_wrapper_ath5k_reset_tsf_14(ldv_13_resource,ldv_13_ldv_param_1_26);
      
#line 3015 
      ldv_free((void *)ldv_13_ldv_param_1_26);
      
#line 3018 
      goto ldv_52128;
      case 12: 
#line 3020 
      ;
      
#line 3022 
      ldv_13_ldv_param_2_24 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
      
#line 3027 
      ldv_emg_wrapper_ath5k_configure_filter_13(ldv_13_resource,ldv_13_ldv_param_1_23,ldv_13_ldv_param_2_24,ldv_13_ldv_param_3_25);
      
#line 3031 
      ldv_free((void *)ldv_13_ldv_param_2_24);
      
#line 3034 
      goto ldv_52128;
      case 13: 
#line 3036 
      ;
      
#line 3038 
      ldv_13_ldv_param_1_21 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 3043 
      ldv_emg_wrapper_ath5k_set_tsf_12(ldv_13_resource,ldv_13_ldv_param_1_21,ldv_13_ldv_param_2_22);
      
#line 3047 
      ldv_free((void *)ldv_13_ldv_param_1_21);
      
#line 3050 
      goto ldv_52128;
      case 14: 
#line 3052 
      ;
      
#line 3054 
      ldv_13_ldv_param_1_19 = (struct ieee80211_tx_control *)ldv_xmalloc_unknown_size(0UL);
      
#line 3055 
      ldv_13_ldv_param_2_20 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 3060 
      ldv_emg_wrapper_ath5k_tx_10(ldv_13_resource,ldv_13_ldv_param_1_19,ldv_13_ldv_param_2_20);
      
#line 3064 
      ldv_free((void *)ldv_13_ldv_param_1_19);
      
#line 3065 
      ldv_free((void *)ldv_13_ldv_param_2_20);
      
#line 3068 
      goto ldv_52128;
      case 15: 
#line 3070 
      ;
      
#line 3072 
      ldv_13_ldv_param_1_16 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 3073 
      ldv_13_ldv_param_3_18 = (struct ieee80211_tx_queue_params *)ldv_xmalloc_unknown_size(0UL);
      
#line 3078 
      ldv_emg_wrapper_ath5k_conf_tx_9(ldv_13_resource,ldv_13_ldv_param_1_16,(unsigned short)((int)ldv_13_ldv_param_2_17),ldv_13_ldv_param_3_18);
      
#line 3082 
      ldv_free((void *)ldv_13_ldv_param_1_16);
      
#line 3083 
      ldv_free((void *)ldv_13_ldv_param_3_18);
      
#line 3086 
      goto ldv_52128;
      case 16: 
#line 3088 
      ;
      
#line 3090 
      ldv_13_ldv_param_1_12 = (enum set_key_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 3091 
      ldv_13_ldv_param_2_13 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 3092 
      ldv_13_ldv_param_3_14 = (struct ieee80211_sta *)ldv_xmalloc_unknown_size(0UL);
      
#line 3093 
      ldv_13_ldv_param_4_15 = (struct ieee80211_key_conf *)ldv_xmalloc_unknown_size(0UL);
      
#line 3098 
      ldv_emg_wrapper_ath5k_set_key_8(ldv_13_resource,*ldv_13_ldv_param_1_12,ldv_13_ldv_param_2_13,ldv_13_ldv_param_3_14,ldv_13_ldv_param_4_15);
      
#line 3102 
      ldv_free((void *)ldv_13_ldv_param_1_12);
      
#line 3103 
      ldv_free((void *)ldv_13_ldv_param_2_13);
      
#line 3104 
      ldv_free((void *)ldv_13_ldv_param_3_14);
      
#line 3105 
      ldv_free((void *)ldv_13_ldv_param_4_15);
      
#line 3108 
      goto ldv_52128;
      case 17: 
#line 3110 
      ;
      
#line 3116 
      ldv_emg_wrapper_ath5k_config_7(ldv_13_resource,ldv_13_ldv_param_1_11);
      
#line 3122 
      goto ldv_52128;
      case 18: 
#line 3124 
      ;
      
#line 3126 
      ldv_13_ldv_param_2_10 = (struct survey_info *)ldv_xmalloc_unknown_size(0UL);
      
#line 3131 
      ldv_emg_wrapper_ath5k_get_survey_6(ldv_13_resource,ldv_13_ldv_param_1_9,ldv_13_ldv_param_2_10);
      
#line 3135 
      ldv_free((void *)ldv_13_ldv_param_2_10);
      
#line 3138 
      goto ldv_52128;
      case 19: 
#line 3140 
      ;
      
#line 3146 
      ldv_emg_wrapper_ath5k_set_coverage_class_5(ldv_13_resource,(short)((int)ldv_13_ldv_param_1_8));
      
#line 3152 
      goto ldv_52128;
      case 20: 
#line 3154 
      ;
      
#line 3156 
      ldv_13_ldv_param_2_5 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
      
#line 3157 
      ldv_13_ldv_param_1_4 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
      
#line 3158 
      ldv_13_ldv_param_4_7 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
      
#line 3159 
      ldv_13_ldv_param_3_6 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
      
#line 3164 
      ldv_emg_wrapper_ath5k_get_ringparam_15(ldv_13_resource,ldv_13_ldv_param_1_4,ldv_13_ldv_param_2_5,ldv_13_ldv_param_3_6,ldv_13_ldv_param_4_7);
      
#line 3168 
      ldv_free((void *)ldv_13_ldv_param_2_5);
      
#line 3169 
      ldv_free((void *)ldv_13_ldv_param_1_4);
      
#line 3170 
      ldv_free((void *)ldv_13_ldv_param_4_7);
      
#line 3171 
      ldv_free((void *)ldv_13_ldv_param_3_6);
      
#line 3174 
      goto ldv_52128;
      case 21: 
#line 3176 
      ;
      
#line 3178 
      ldv_13_ldv_param_1_3 = (struct ieee80211_low_level_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 3183 
      ldv_emg_wrapper_ath5k_get_stats_3(ldv_13_resource,ldv_13_ldv_param_1_3);
      
#line 3187 
      ldv_free((void *)ldv_13_ldv_param_1_3);
      
#line 3190 
      goto ldv_52128;
      default: 
#line 3192 
      ;
      
#line 3192 
      __VERIFIER_assume(0);
    }
    ldv_52128: 
#line 3194 
    ;
    
#line 3194 
    goto ldv_52150;
    default: 
#line 3196 
    ;
    
#line 3196 
    __VERIFIER_assume(0);
  }
  ldv_52150: 
#line 3199 
  ;
  
#line 3199 
  ldv_free((void *)ldv_13_ldv_param_1_2);
  
#line 3206 
  goto ldv_started_13;
  
#line 3208 
  __retres = (void *)0;
  return_label: 
#line 3208 
                return __retres;
}


#line 3213  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_5_1(struct seq_file *arg0, struct seq_operations *arg1)
{
  int ret;
  struct ldv_struct_traverse_kernel_items_scenario_25 *cf_arg_25;
  int tmp;
  
#line 3216 
  tmp = ldv_undef_int();
  
#line 3216 
  switch (tmp) {
    case 0: 
#line 3217 
    ;
    
#line 3218 
    cf_arg_25 = (struct ldv_struct_traverse_kernel_items_scenario_25 *)ldv_xmalloc(24UL);
    
#line 3219 
    cf_arg_25->arg0 = arg0;
    
#line 3220 
    cf_arg_25->arg1 = arg1;
    
#line 3221 
    ret = pthread_create(& ldv_thread_25,(pthread_attr_t const *)0,& ldv_traverse_kernel_items_scenario_25,(void *)cf_arg_25);
    
#line 3222 
    __VERIFIER_assume(ret == 0);
    
#line 3223 
    goto ldv_52159;
    default: 
#line 3225 
    ;
    
#line 3225 
    __VERIFIER_assume(0);
  }
  ldv_52159: 
#line 3226 
  ;
  
#line 3227 
  return;
}


#line 3231  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_18(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_18_resource_1;
  struct pci_device_id *ldv_18_ldv_param_1_2;
  struct pm_message ldv_18_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 3236 
  struct pci_driver *ldv_18_container = ldv_emg_alias_ath5k_pci_driver_2;
  
#line 3237 
  int ldv_18_ret = ldv_undef_int();
  
#line 3240 
  struct ldv_struct_pci_scenario_18 *data = (struct ldv_struct_pci_scenario_18 *)arg0;
  
#line 3244 
  ldv_18_ret = ldv_undef_int();
  
#line 3247 
  if (data != (struct ldv_struct_pci_scenario_18 *)0) {
    
#line 3248 
    ldv_18_container = data->arg0;
    
#line 3249 
    ldv_free((void *)data);
  }
  else ;
  
#line 3260 
  goto ldv_main_18;
  
#line 3262 
  __retres = (void *)0;
  
#line 3262 
  goto return_label;
  ldv_main_18: 
#line 3265 
  ;
  
#line 3268 
  tmp_2 = ldv_undef_int();
  
#line 3268 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 3270 
    ldv_18_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 3275 
    ldv_pre_probe();
    
#line 3277 
    ldv_18_ret = ldv_emg_wrapper_ath5k_pci_probe_2(ldv_18_resource_1,ldv_18_ldv_param_1_2);
    
#line 3279 
    ldv_18_ret = ldv_post_probe(ldv_18_ret);
    
#line 3283 
    ldv_free((void *)ldv_18_ldv_param_1_2);
    
#line 3286 
    tmp_1 = ldv_undef_int();
    
#line 3286 
    if (tmp_1 != 0) {
      
#line 3288 
      __VERIFIER_assume(ldv_18_ret == 0);
      
#line 3295 
      goto ldv_call_18;
    }
    else {
      
#line 3299 
      __VERIFIER_assume(ldv_18_ret != 0);
      
#line 3306 
      goto ldv_main_18;
    }
  }
  else {
    
#line 3318 
    __retres = (void *)0;
    
#line 3318 
    goto return_label;
  }
  
#line 3321 
  __retres = (void *)0;
  
#line 3321 
  goto return_label;
  ldv_call_18: 
#line 3324 
  ;
  
#line 3327 
  tmp_3 = ldv_undef_int();
  
#line 3327 
  switch (tmp_3) {
    case 1: 
#line 3328 
    ;
    
#line 3337 
    goto ldv_call_18;
    case 2: 
#line 3340 
    ;
    
#line 3342 
    if (ldv_18_container->suspend != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 3344 
      ldv_18_ret = (*(ldv_18_container->suspend))(ldv_18_resource_1,ldv_18_resource_0);
      
#line 3346 
      ldv_18_ret = ldv_filter_err_code(ldv_18_ret);
    }
    else 
#line 3348 
         ldv_18_ret = ldv_undef_int();
    
#line 3353 
    if (ldv_18_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 3355 
      ldv_18_ret = (*(ldv_18_container->suspend_late))(ldv_18_resource_1,ldv_18_resource_0);
      
#line 3357 
      ldv_18_ret = ldv_filter_err_code(ldv_18_ret);
    }
    else 
#line 3359 
         ldv_18_ret = ldv_undef_int();
    
#line 3364 
    if (ldv_18_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 3366 
      (*(ldv_18_container->resume_early))(ldv_18_resource_1); else ;
    
#line 3371 
    if (ldv_18_container->resume != (int (*)(struct pci_dev *))0) 
#line 3373 
                                                                  (*(ldv_18_container->resume))(ldv_18_resource_1); else ;
    
#line 3381 
    goto ldv_call_18;
    case 3: 
#line 3384 
    ;
    
#line 3386 
    if (ldv_18_container->shutdown != (void (*)(struct pci_dev *))0) 
      
#line 3388 
      (*(ldv_18_container->shutdown))(ldv_18_resource_1); else ;
    
#line 3394 
    ldv_emg_wrapper_ath5k_pci_remove_3(ldv_18_resource_1);
    
#line 3401 
    goto ldv_main_18;
    default: 
#line 3404 
    ;
    
#line 3404 
    __VERIFIER_assume(0);
  }
  
#line 3407 
  __retres = (void *)0;
  return_label: 
#line 3407 
                return __retres;
}


#line 3412  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_24(void *arg0)
{
  void *__retres;
  struct file *ldv_24_resource_1;
  char *ldv_24_ldv_param_1_2;
  unsigned long ldv_24_size_cnt;
  char *ldv_24_ldv_param_1_4;
  long long *ldv_24_ldv_param_3_3;
  long long *ldv_24_ldv_param_3_5;
  struct inode *ldv_24_resource_0;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 3420 
  struct file_operations *ldv_24_container = ldv_emg_alias_fops_eeprom_2;
  
#line 3422 
  int ldv_24_ret = ldv_undef_int();
  
#line 3425 
  struct ldv_struct_character_driver_scenario_14 *data = (struct ldv_struct_character_driver_scenario_14 *)arg0;
  
#line 3429 
  ldv_24_ret = ldv_undef_int();
  
#line 3432 
  if (data != (struct ldv_struct_character_driver_scenario_14 *)0) {
    
#line 3433 
    ldv_24_container = data->arg0;
    
#line 3434 
    ldv_free((void *)data);
  }
  else ;
  
#line 3439 
  ldv_24_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 3440 
  tmp_1 = ldv_undef_int();
  
#line 3440 
  ldv_24_size_cnt = (unsigned long)tmp_1;
  
#line 3447 
  goto ldv_main_24;
  
#line 3449 
  __retres = (void *)0;
  
#line 3449 
  goto return_label;
  ldv_main_24: 
#line 3452 
  ;
  
#line 3455 
  tmp_3 = ldv_undef_int();
  
#line 3455 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 3458 
    ldv_24_ret = ldv_emg_wrapper_open_file_eeprom_5(ldv_24_resource_0,ldv_24_resource_1);
    
#line 3460 
    ldv_24_ret = ldv_filter_err_code(ldv_24_ret);
    
#line 3463 
    tmp_2 = ldv_undef_int();
    
#line 3463 
    if (tmp_2 != 0) {
      
#line 3465 
      __VERIFIER_assume(ldv_24_ret == 0);
      
#line 3472 
      goto ldv_call_24;
    }
    else {
      
#line 3476 
      __VERIFIER_assume(ldv_24_ret != 0);
      
#line 3483 
      goto ldv_main_24;
    }
  }
  else {
    
#line 3488 
    ldv_free((void *)ldv_24_resource_0);
    
#line 3496 
    __retres = (void *)0;
    
#line 3496 
    goto return_label;
  }
  
#line 3499 
  __retres = (void *)0;
  
#line 3499 
  goto return_label;
  ldv_call_24: 
#line 3502 
  ;
  
#line 3505 
  tmp_4 = ldv_undef_int();
  
#line 3505 
  switch (tmp_4) {
    case 1: 
#line 3506 
    ;
    
#line 3508 
    ldv_24_ldv_param_3_3 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 3509 
    ldv_24_ldv_param_1_2 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 3514 
    ldv_emg_wrapper_read_file_eeprom_3(ldv_24_resource_1,ldv_24_ldv_param_1_2,ldv_24_size_cnt,ldv_24_ldv_param_3_3);
    
#line 3518 
    ldv_free((void *)ldv_24_ldv_param_3_3);
    
#line 3519 
    ldv_free((void *)ldv_24_ldv_param_1_2);
    
#line 3526 
    goto ldv_call_24;
    case 2: 
#line 3529 
    ;
    
#line 3531 
    ldv_24_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 3532 
    ldv_24_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 3536 
    if (ldv_24_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 3542 
      __VERIFIER_assume(ldv_24_size_cnt <= 2147479552UL);
      
#line 3544 
      (*(ldv_24_container->write))(ldv_24_resource_1,(char const *)ldv_24_ldv_param_1_4,ldv_24_size_cnt,ldv_24_ldv_param_3_5);
    }
    else ;
    
#line 3549 
    ldv_free((void *)ldv_24_ldv_param_3_5);
    
#line 3550 
    ldv_free((void *)ldv_24_ldv_param_1_4);
    
#line 3557 
    goto ldv_call_24;
    case 3: 
#line 3560 
    ;
    
#line 3563 
    ldv_emg_wrapper_release_file_eeprom_4(ldv_24_resource_0,ldv_24_resource_1);
    
#line 3570 
    goto ldv_main_24;
    default: 
#line 3573 
    ;
    
#line 3573 
    __VERIFIER_assume(0);
  }
  
#line 3576 
  __retres = (void *)0;
  return_label: 
#line 3576 
                return __retres;
}


#line 3581  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath5k/ath5k.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_traverse_kernel_items_scenario_25(void *arg0)
{
  void *__retres;
  void *ldv_25_ldv_param_1_2;
  long long *ldv_25_index;
  struct seq_file *ldv_25_seq_file;
  void *ldv_25_ldv_param_1_3;
  void *ldv_25_ldv_param_1_4;
  int tmp_2;
  int tmp_6;
  
#line 3587 
  struct seq_operations *ldv_25_ops = ldv_emg_alias_register_seq_ops_2;
  
#line 3588 
  int ldv_25_show_ret = ldv_undef_int();
  
#line 3591 
  void *ldv_25_ret = ldv_undef_ptr();
  
#line 3593 
  struct ldv_struct_traverse_kernel_items_scenario_25 *data = (struct ldv_struct_traverse_kernel_items_scenario_25 *)arg0;
  
#line 3597 
  ldv_25_show_ret = ldv_undef_int();
  
#line 3600 
  if (data != (struct ldv_struct_traverse_kernel_items_scenario_25 *)0) {
    
#line 3601 
    ldv_25_seq_file = data->arg0;
    
#line 3602 
    ldv_25_ops = data->arg1;
    
#line 3603 
    ldv_free((void *)data);
  }
  else ;
  
#line 3608 
  ldv_25_index = (long long *)ldv_xmalloc_unknown_size(0UL);
  
#line 3615 
  goto ldv_outer_loop_25;
  
#line 3617 
  __retres = (void *)0;
  
#line 3617 
  goto return_label;
  ldv_outer_loop_25: 
#line 3620 
  ;
  
#line 3623 
  tmp_2 = ldv_undef_int();
  
#line 3623 
  if (tmp_2 != 0) {
    
#line 3626 
    *ldv_25_index = 0LL;
    
#line 3628 
    ldv_25_ret = ldv_emg_wrapper_reg_start_2(ldv_25_seq_file,ldv_25_index);
    
#line 3635 
    goto ldv_inner_loop_25;
  }
  else {
    
#line 3639 
    ldv_free((void *)ldv_25_index);
    
#line 3647 
    __retres = (void *)0;
    
#line 3647 
    goto return_label;
  }
  
#line 3650 
  __retres = (void *)0;
  
#line 3650 
  goto return_label;
  ldv_inner_loop_25: 
#line 3653 
  ;
  
#line 3656 
  tmp_6 = ldv_undef_int();
  
#line 3656 
  if (tmp_6 != 0) {
    long tmp_3;
    int tmp_4;
    
#line 3658 
    tmp_3 = ldv_is_err_or_null((void const *)ldv_25_ret);
    
#line 3658 
    __VERIFIER_assume(tmp_3 == 0L);
    
#line 3662 
    ldv_25_ldv_param_1_3 = ldv_xmalloc_unknown_size(0UL);
    
#line 3667 
    ldv_25_show_ret = ldv_emg_wrapper_reg_show_4(ldv_25_seq_file,ldv_25_ldv_param_1_3);
    
#line 3671 
    ldv_free(ldv_25_ldv_param_1_3);
    
#line 3674 
    tmp_4 = ldv_undef_int();
    
#line 3674 
    if (tmp_4 != 0) {
      
#line 3676 
      __VERIFIER_assume(ldv_25_show_ret >= 0);
      
#line 3680 
      ldv_25_ldv_param_1_2 = ldv_xmalloc_unknown_size(0UL);
      
#line 3685 
      ldv_25_ret = ldv_emg_wrapper_reg_next_3(ldv_25_seq_file,ldv_25_ldv_param_1_2,ldv_25_index);
      
#line 3689 
      ldv_free(ldv_25_ldv_param_1_2);
      
#line 3696 
      goto ldv_inner_loop_25;
    }
    else {
      
#line 3700 
      ldv_25_ldv_param_1_4 = ldv_xmalloc_unknown_size(0UL);
      
#line 3705 
      ldv_25_seq_file->index = *ldv_25_index;
      
#line 3707 
      ldv_emg_wrapper_reg_stop_5(ldv_25_seq_file,ldv_25_ldv_param_1_4);
      
#line 3709 
      ldv_25_seq_file->index = *ldv_25_index;
      
#line 3713 
      ldv_free(ldv_25_ldv_param_1_4);
      
#line 3720 
      goto ldv_outer_loop_25;
    }
  }
  else {
    long tmp_5;
    
#line 3725 
    tmp_5 = ldv_is_err_or_null((void const *)ldv_25_ret);
    
#line 3725 
    __VERIFIER_assume((int)tmp_5);
    
#line 3729 
    ldv_25_ldv_param_1_4 = ldv_xmalloc_unknown_size(0UL);
    
#line 3734 
    ldv_25_seq_file->index = *ldv_25_index;
    
#line 3736 
    ldv_emg_wrapper_reg_stop_5(ldv_25_seq_file,ldv_25_ldv_param_1_4);
    
#line 3738 
    ldv_25_seq_file->index = *ldv_25_index;
    
#line 3742 
    ldv_free(ldv_25_ldv_param_1_4);
    
#line 3749 
    goto ldv_outer_loop_25;
  }
  
#line 3752 
  __retres = (void *)0;
  return_label: 
#line 3752 
                return __retres;
}


