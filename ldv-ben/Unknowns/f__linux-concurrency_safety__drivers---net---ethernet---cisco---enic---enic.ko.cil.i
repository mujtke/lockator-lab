/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_api.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugobjects.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 239 
enum hrtimer_restart;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 1170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_47 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_46 {
   struct __anonstruct_47 __anonCompField___anonunion_46_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_46 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/prefetch.h"
struct vm_area_struct;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmdebug.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mpspec.h"
struct workqueue_struct;

#line 153 
struct work_struct;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_112 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_112 nodemask_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_113 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_113 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist.h"
union __anonunion_144 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_144 __anonCompField_idr_layer_31 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct dentry;

#line 186 
struct iattr;

#line 187 
struct super_block;

#line 188 
struct file_system_type;

#line 189 
struct kernfs_open_node;

#line 190 
struct kernfs_iattrs;

#line 213 
struct kernfs_root;

#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_149 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_149 __anonCompField_kernfs_node_32 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171 
struct vm_operations_struct;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 281 
struct inode;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_150 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_150 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_151 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_151 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct bin_attribute;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 796  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct rw_semaphore;

#line 797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct dma_map_ops;

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203 
struct of_device_id;

#line 203 
struct acpi_device_id;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 1272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_152 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_152 __anonCompField_iov_iter_33 ;
   unsigned long nr_segs ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_158 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_159 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_157 {
   struct __anonstruct_158 __anonCompField___anonunion_157_36 ;
   struct __anonstruct_159 __anonCompField___anonunion_157_37 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_157 __anonCompField_uprobe_task_38 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_160 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_162 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_166 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_165 {
   atomic_t _mapcount ;
   struct __anonstruct_166 __anonCompField___anonunion_165_41 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_164 {
   union __anonunion_165 __anonCompField___anonstruct_164_42 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_163 {
   unsigned long counters ;
   struct __anonstruct_164 __anonCompField___anonunion_163_43 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_161 {
   union __anonunion_162 __anonCompField___anonstruct_161_40 ;
   union __anonunion_163 __anonCompField___anonstruct_161_44 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_168 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_169 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_167 {
   struct list_head lru ;
   struct __anonstruct_168 __anonCompField___anonunion_167_46 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_169 __anonCompField___anonunion_167_47 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_170 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_160 __anonCompField_page_39 ;
   struct __anonstruct_161 __anonCompField_page_45 ;
   union __anonunion_167 __anonCompField_page_48 ;
   union __anonunion_170 __anonCompField_page_49 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_171 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_171 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct user_struct;

#line 66 
struct writeback_control;

#line 67 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 18 
struct pid;

#line 19 
struct cred;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_174 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_174 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_175 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_175 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_176 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_176 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_177 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_177 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_178 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_178 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_179 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_179 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_180 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_180 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_181 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_181 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_182 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_183 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_182 ifr_ifrn ;
   union __anonunion_ifr_ifru_183 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_188 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_187 {
   struct __anonstruct_188 __anonCompField___anonunion_187_50 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_187 __anonCompField_lockref_51 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_190 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_189 {
   struct __anonstruct_190 __anonCompField___anonunion_189_52 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_189 __anonCompField_qstr_53 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_191 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_191 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_195 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_194 {
   struct __anonstruct_195 __anonCompField___anonunion_194_54 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_194 __anonCompField_radix_tree_node_55 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 428 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 435  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct block_device;

#line 31 
struct io_context;

#line 32 
struct cgroup_subsys_state;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct backing_dev_info;

#line 61 
struct export_operations;

#line 63 
struct pipe_inode_info;

#line 65 
struct kstatfs;

#line 66 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_200 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_200 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_201 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_201 __anonCompField_kqid_57 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_204 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_205 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_206 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_204 __anonCompField_inode_58 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_205 __anonCompField_inode_59 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_206 __anonCompField_inode_60 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_207 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_207 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 947 
struct net;

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19 
struct fasync_struct;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_209 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_208 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_209 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_208 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1061 
struct files_struct;

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_210 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_210 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_212 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_213 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_214 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_215 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_217 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_216 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_217 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_218 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_219 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_211 {
   int _pad[28U] ;
   struct __anonstruct__kill_212 _kill ;
   struct __anonstruct__timer_213 _timer ;
   struct __anonstruct__rt_214 _rt ;
   struct __anonstruct__sigchld_215 _sigchld ;
   struct __anonstruct__sigfault_216 _sigfault ;
   struct __anonstruct__sigpoll_218 _sigpoll ;
   struct __anonstruct__sigsys_219 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_211 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_222 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_223 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_225 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_224 {
   struct keyring_index_key index_key ;
   struct __anonstruct_225 __anonCompField___anonunion_224_63 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_226 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_228 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_227 {
   union __anonunion_payload_228 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_222 __anonCompField_key_61 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_223 __anonCompField_key_62 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_224 __anonCompField_key_64 ;
   union __anonunion_type_data_226 type_data ;
   union __anonunion_227 __anonCompField_key_65 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 327 
struct cgroup;

#line 328 
struct cgroup_root;

#line 329 
struct cgroup_subsys;

#line 330 
struct cgroup_taskset;

#line 372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 134 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct reclaim_state;

#line 846  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1172 
struct uts_namespace;

#line 1173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_257 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_257 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_25013 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_262 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_263 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_25013 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_262 __anonCompField_nf_bridge_info_72 ;
   union __anonunion_263 __anonCompField_nf_bridge_info_73 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_266 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_265 {
   u64 v64 ;
   struct __anonstruct_266 __anonCompField___anonunion_265_74 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_265 __anonCompField_skb_mstamp_75 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_269 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_268 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_269 __anonCompField___anonstruct_268_76 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_267 {
   struct __anonstruct_268 __anonCompField___anonunion_267_77 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_271 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_270 {
   __wsum csum ;
   struct __anonstruct_271 __anonCompField___anonunion_270_79 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_272 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_273 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_274 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_267 __anonCompField_sk_buff_78 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_270 __anonCompField_sk_buff_80 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_272 __anonCompField_sk_buff_81 ;
   __u32 secmark ;
   union __anonunion_273 __anonCompField_sk_buff_82 ;
   union __anonunion_274 __anonCompField_sk_buff_83 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118 
struct proc_dir_entry;

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_291 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_291 possible_net_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_27944 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_27944 phy_interface_t;

#line 126 
enum ldv_27997 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_27997 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 1628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_29709 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_29710 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_304 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_305 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_306 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_304 adj_list ;
   struct __anonstruct_all_adj_list_305 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_29709 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_29710 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_306 __anonCompField_net_device_93 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_resource.h"
enum vnic_devcmd_cmd {
    CMD_NONE = 0,
    CMD_MCPU_FW_INFO_OLD = 1073856513,
    CMD_MCPU_FW_INFO = 3221340161,
    CMD_DEV_SPEC = 3221340162,
    CMD_STATS_CLEAR = 16891907,
    CMD_STATS_DUMP = 1073856516,
    CMD_PACKET_FILTER = 1090535431,
    CMD_PACKET_FILTER_ALL = 1090633735,
    CMD_HANG_NOTIFY = 114696,
    CMD_GET_MAC_ADDR = 2147532809,
    CMD_ADDR_ADD = 1090568204,
    CMD_ADDR_DEL = 1090568205,
    CMD_VLAN_ADD = 1090535438,
    CMD_VLAN_DEL = 1090535439,
    CMD_NIC_CFG = 1090633744,
    CMD_RSS_KEY = 1073758225,
    CMD_RSS_CPU = 1073758226,
    CMD_SOFT_RESET = 16891923,
    CMD_SOFT_RESET_STATUS = 2147598356,
    CMD_NOTIFY = 3221340181,
    CMD_UNDI = 1073758230,
    CMD_OPEN = 1090633751,
    CMD_OPEN_STATUS = 2147598360,
    CMD_CLOSE = 114713,
    CMD_INIT_v1 = 2164375578,
    CMD_INIT_PROV_INFO = 1073758235,
    CMD_ENABLE = 1090633756,
    CMD_ENABLE_WAIT = 1073856540,
    CMD_DISABLE = 114717,
    CMD_STATS_DUMP_ALL = 1073856542,
    CMD_INIT_STATUS = 2147598367,
    CMD_INT13 = 1073774624,
    CMD_LOGICAL_UPLINK = 1090535457,
    CMD_DEINIT = 16891938,
    CMD_INIT = 1090633763,
    CMD_CAPABILITY = 3221340196,
    CMD_PERBI = 3221258277,
    CMD_IAR = 1090633766,
    CMD_HANG_RESET = 114727,
    CMD_HANG_RESET_STATUS = 2147598376,
    CMD_IG_VLAN_REWRITE_MODE = 3221241897,
    CMD_PROXY_BY_BDF = 3221340202,
    CMD_PROXY_BY_INDEX = 3221340203,
    CMD_CONFIG_INFO_GET = 3221340204,
    CMD_INT13_ALL = 1073856557,
    CMD_SET_DEFAULT_VLAN = 3221340206,
    CMD_INIT_PROV_INFO2 = 1073758255,
    CMD_ENABLE2 = 1073758256,
    CMD_STATUS = 3221340209,
    CMD_INTR_COAL_CONVERT = 2147598386,
    CMD_SET_MAC_ADDR = 1073758263,
    CMD_PROV_INFO_UPDATE = 1073758264,
    CMD_ADD_FILTER = 3221241914,
    CMD_DEL_FILTER = 1073758267,
    CMD_QP_ENABLE = 1073758268,
    CMD_QP_DISABLE = 1073758269,
    CMD_QP_STATS_DUMP = 1073758270,
    CMD_QP_STATS_CLEAR = 1073758271
};

#line 638  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_devcmd.h"
struct vnic_dev_bar {
   void *vaddr ;
   dma_addr_t bus_addr ;
   unsigned long len ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.h"
struct vnic_dev_ring {
   void *descs ;
   size_t size ;
   dma_addr_t base_addr ;
   size_t base_align ;
   void *descs_unaligned ;
   size_t size_unaligned ;
   dma_addr_t base_addr_unaligned ;
   unsigned int desc_size ;
   unsigned int desc_count ;
   unsigned int desc_avail ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_313 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_313 __anonCompField_pci_dev_94 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmapool.h"
struct msix_entry {
   u32 vector ;
   u16 entry ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/cq_desc.h"
struct vnic_cq_ctrl {
   u64 ring_base ;
   u32 ring_size ;
   u32 pad0 ;
   u32 flow_control_enable ;
   u32 pad1 ;
   u32 color_enable ;
   u32 pad2 ;
   u32 cq_head ;
   u32 pad3 ;
   u32 cq_tail ;
   u32 pad4 ;
   u32 cq_tail_color ;
   u32 pad5 ;
   u32 interrupt_enable ;
   u32 pad6 ;
   u32 cq_entry_enable ;
   u32 pad7 ;
   u32 cq_message_enable ;
   u32 pad8 ;
   u32 interrupt_offset ;
   u32 pad9 ;
   u64 cq_message_addr ;
   u32 pad10 ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_cq.h"
struct vnic_rx_bytes_counter {
   unsigned int small_pkt_bytes_cnt ;
   unsigned int large_pkt_bytes_cnt ;
};

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_cq.h"
struct vnic_cq {
   unsigned int index ;
   struct vnic_dev *vdev ;
   struct vnic_cq_ctrl *ctrl ;
   struct vnic_dev_ring ring ;
   unsigned int to_clean ;
   unsigned int last_color ;
   unsigned int interrupt_offset ;
   struct vnic_rx_bytes_counter pkt_size_counter ;
   unsigned int cur_rx_coal_timeval ;
   unsigned int tobe_rx_coal_timeval ;
   ktime_t prev_ts ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_cq.h"
struct vnic_wq_ctrl {
   u64 ring_base ;
   u32 ring_size ;
   u32 pad0 ;
   u32 posted_index ;
   u32 pad1 ;
   u32 cq_index ;
   u32 pad2 ;
   u32 enable ;
   u32 pad3 ;
   u32 running ;
   u32 pad4 ;
   u32 fetch_index ;
   u32 pad5 ;
   u32 dca_value ;
   u32 pad6 ;
   u32 error_interrupt_enable ;
   u32 pad7 ;
   u32 error_interrupt_offset ;
   u32 pad8 ;
   u32 error_status ;
   u32 pad9 ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_wq.h"
struct vnic_wq_buf {
   struct vnic_wq_buf *next ;
   dma_addr_t dma_addr ;
   void *os_buf ;
   unsigned int len ;
   unsigned int index ;
   int sop ;
   void *desc ;
   uint64_t wr_id ;
   uint8_t cq_entry ;
   uint8_t desc_skip_cnt ;
   uint8_t compressed_send ;
   struct vnic_wq_buf *prev ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_wq.h"
struct vnic_wq {
   unsigned int index ;
   struct vnic_dev *vdev ;
   struct vnic_wq_ctrl *ctrl ;
   struct vnic_dev_ring ring ;
   struct vnic_wq_buf *bufs[64U] ;
   struct vnic_wq_buf *to_use ;
   struct vnic_wq_buf *to_clean ;
   unsigned int pkts_outstanding ;
};

#line 176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_wq.h"
struct vnic_rq_ctrl {
   u64 ring_base ;
   u32 ring_size ;
   u32 pad0 ;
   u32 posted_index ;
   u32 pad1 ;
   u32 cq_index ;
   u32 pad2 ;
   u32 enable ;
   u32 pad3 ;
   u32 running ;
   u32 pad4 ;
   u32 fetch_index ;
   u32 pad5 ;
   u32 error_interrupt_enable ;
   u32 pad6 ;
   u32 error_interrupt_offset ;
   u32 pad7 ;
   u32 error_status ;
   u32 pad8 ;
   u32 dropped_packet_count ;
   u32 pad9 ;
   u32 dropped_packet_count_rc ;
   u32 pad10 ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.h"
struct vnic_rq_buf {
   struct vnic_rq_buf *next ;
   dma_addr_t dma_addr ;
   void *os_buf ;
   unsigned int os_buf_index ;
   unsigned int len ;
   unsigned int index ;
   void *desc ;
   uint64_t wr_id ;
};

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.h"
struct vnic_rq {
   unsigned int index ;
   struct vnic_dev *vdev ;
   struct vnic_rq_ctrl *ctrl ;
   struct vnic_dev_ring ring ;
   struct vnic_rq_buf *bufs[64U] ;
   struct vnic_rq_buf *to_use ;
   struct vnic_rq_buf *to_clean ;
   void *os_buf_head ;
   unsigned int pkts_outstanding ;
   atomic_t bpoll_state ;
};

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_res.h"
struct enic;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_res.h"
struct vnic_enet_config {
   u32 flags ;
   u32 wq_desc_count ;
   u32 rq_desc_count ;
   u16 mtu ;
   u16 intr_timer_deprecated ;
   u8 intr_timer_type ;
   u8 intr_mode ;
   char devname[16U] ;
   u32 intr_timer_usec ;
   u16 loop_tag ;
   u16 vf_rq_count ;
   u16 num_arfs ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_enet.h"
struct vnic_intr_ctrl {
   u32 coalescing_timer ;
   u32 pad0 ;
   u32 coalescing_value ;
   u32 pad1 ;
   u32 coalescing_type ;
   u32 pad2 ;
   u32 mask_on_assertion ;
   u32 pad3 ;
   u32 mask ;
   u32 pad4 ;
   u32 int_credits ;
   u32 pad5 ;
   u32 int_credit_return ;
   u32 pad6 ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_intr.h"
struct vnic_intr {
   unsigned int index ;
   struct vnic_dev *vdev ;
   struct vnic_intr_ctrl *ctrl ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_stats.h"
struct vnic_gen_stats {
   u64 dma_map_error ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rss.h"
struct enic_msix_entry {
   int requested ;
   char devname[16U] ;
   irqreturn_t (*isr)(int , void *) ;
   void *devid ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic.h"
struct enic_rx_coal {
   u32 small_pkt_range_start ;
   u32 large_pkt_range_start ;
   u32 range_end ;
   u32 use_adaptive_rx_coalesce ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic.h"
struct enic_port_profile {
   u32 set ;
   u8 request ;
   char name[40U] ;
   u8 instance_uuid[16U] ;
   u8 host_uuid[16U] ;
   u8 vf_mac[6U] ;
   u8 mac_addr[6U] ;
};

#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic.h"
struct enic_rfs_flw_tbl {
   u16 max ;
   int free ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(10))) toclean : 10 ;
   struct hlist_head ht_head[1024U] ;
   spinlock_t lock ;
   struct timer_list rfs_may_expire ;
};

#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic.h"
struct enic {
   struct net_device *netdev ;
   struct pci_dev *pdev ;
   struct vnic_enet_config config ;
   struct vnic_dev_bar bar[6U] ;
   struct vnic_dev *vdev ;
   struct timer_list notify_timer ;
   struct work_struct reset ;
   struct work_struct change_mtu_work ;
   struct msix_entry msix_entry[18U] ;
   struct enic_msix_entry msix[18U] ;
   u32 msg_enable ;
   spinlock_t devcmd_lock ;
   u8 mac_addr[6U] ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned int mc_count ;
   unsigned int uc_count ;
   u32 port_mtu ;
   struct enic_rx_coal rx_coalesce_setting ;
   u32 rx_coalesce_usecs ;
   u32 tx_coalesce_usecs ;
   u16 num_vfs ;
   spinlock_t enic_api_lock ;
   struct enic_port_profile *pp ;
   struct vnic_wq wq[8U] ;
   spinlock_t wq_lock[8U] ;
   unsigned int wq_count ;
   u16 loop_enable ;
   u16 loop_tag ;
   struct vnic_rq rq[8U] ;
   unsigned int rq_count ;
   u64 rq_truncated_pkts ;
   u64 rq_bad_fcs ;
   struct napi_struct napi[16U] ;
   struct vnic_intr intr[18U] ;
   unsigned int intr_count ;
   u32 *legacy_pba ;
   struct vnic_cq cq[16U] ;
   unsigned int cq_count ;
   struct enic_rfs_flw_tbl rfs_h ;
   u32 rx_copybreak ;
   u8 rss_key[40U] ;
   struct vnic_gen_stats gen_stats ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/cq_enet_desc.h"
enum vnic_res_type {
    RES_TYPE_EOL = 0,
    RES_TYPE_WQ = 1,
    RES_TYPE_RQ = 2,
    RES_TYPE_CQ = 3,
    RES_TYPE_RSVD1 = 4,
    RES_TYPE_NIC_CFG = 5,
    RES_TYPE_RSVD2 = 6,
    RES_TYPE_RSVD3 = 7,
    RES_TYPE_RSVD4 = 8,
    RES_TYPE_RSVD5 = 9,
    RES_TYPE_INTR_CTRL = 10,
    RES_TYPE_INTR_TABLE = 11,
    RES_TYPE_INTR_PBA = 12,
    RES_TYPE_INTR_PBA_LEGACY = 13,
    RES_TYPE_RSVD6 = 14,
    RES_TYPE_RSVD7 = 15,
    RES_TYPE_DEVCMD = 16,
    RES_TYPE_PASS_THRU_PAGE = 17,
    RES_TYPE_MAX = 18
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_devcmd.h"
enum vnic_dev_intr_mode {
    VNIC_DEV_INTR_MODE_UNKNOWN = 0,
    VNIC_DEV_INTR_MODE_INTX = 1,
    VNIC_DEV_INTR_MODE_MSI = 2,
    VNIC_DEV_INTR_MODE_MSIX = 3
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __le16;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __le32;

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u64 __le64;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __sum16;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11806 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 223  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_802 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_802 __anonCompField_kernel_param_49 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 74 
struct exception_table_entry;

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
enum ldv_26971 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_26971 socket_state;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_917 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_917 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 767 
struct rtable;

#line 890 
enum pkt_hash_types {
    PKT_HASH_TYPE_NONE = 0,
    PKT_HASH_TYPE_L2 = 1,
    PKT_HASH_TYPE_L3 = 2,
    PKT_HASH_TYPE_L4 = 3
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib_device {
   atomic_long_t mibs[6U] ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib_device {
   atomic_long_t mibs[512U] ;
};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct xfrm_policy;

#line 98 
struct xfrm_state;

#line 114 
struct request_sock;

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum gro_result {
    GRO_MERGED = 0,
    GRO_MERGED_FREE = 1,
    GRO_HELD = 2,
    GRO_NORMAL = 3,
    GRO_DROP = 4
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum gro_result gro_result_t;

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 646  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct iphdr {
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) ihl : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) version : 4 ;
   __u8 tos ;
   __be16 tot_len ;
   __be16 id ;
   __be16 frag_off ;
   __u8 ttl ;
   __u8 protocol ;
   __sum16 check ;
   __be32 saddr ;
   __be32 daddr ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ipv6.h"
struct ipv6hdr {
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) priority : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) version : 4 ;
   __u8 flow_lbl[3U] ;
   __be16 payload_len ;
   __u8 nexthdr ;
   __u8 hop_limit ;
   struct in6_addr saddr ;
   struct in6_addr daddr ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_pinfo ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   struct ipv6_stable_secret stable_secret ;
   void *sysctl ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uaccess.h"
struct page_counter {
   atomic_long_t count ;
   unsigned long limit ;
   struct page_counter *parent ;
   unsigned long watermark ;
   unsigned long failcnt ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cacheflush.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/filter.h"
struct bpf_insn {
   __u8 code ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) dst_reg : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/bpf.h"
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4
};

#line 273 
struct bpf_prog_aux;

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
union __anonunion_968 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   bool jited ;
   bool gpl_compatible ;
   u32 len ;
   enum bpf_prog_type type ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(struct sk_buff const *, struct bpf_insn const *) ;
   union __anonunion_968 __anonCompField_bpf_prog_100 ;
};

#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sk_filter {
   atomic_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_nulls.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   unsigned long _key ;
};

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct nla_policy {
   u16 type ;
   u16 len ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char const *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   int maxtype ;
   struct nla_policy const *policy ;
   int (*validate)(struct nlattr **, struct nlattr **) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device const *) ;
   int (*fill_info)(struct sk_buff *, struct net_device const *) ;
   size_t (*get_xstats_size)(struct net_device const *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device const *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   int slave_maxtype ;
   struct nla_policy const *slave_policy ;
   int (*slave_validate)(struct nlattr **, struct nlattr **) ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **) ;
   size_t (*get_slave_size)(struct net_device const *, struct net_device const *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device const *, struct net_device const *) ;
   struct net *(*get_link_net)(struct net_device const *) ;
};

#line 171 
struct neigh_table;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   void (*neigh_cleanup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   atomic_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
};

#line 129 
struct neigh_ops;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   atomic_t refcnt ;
   struct sk_buff_head arp_queue ;
   unsigned int arp_queue_len_bytes ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops const *ops ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 key[0U] ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_table {
   int family ;
   int entry_size ;
   int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void const *, struct net_device const *, __u32 *) ;
   bool (*key_eq)(struct neighbour const *, void const *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};

#line 519 
struct dn_route;

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
union __anonunion_976 {
   struct dst_entry *next ;
   struct rtable *rt_next ;
   struct rt6_info *rt6_next ;
   struct dn_route *dn_next ;
};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct dst_entry {
   struct callback_head callback_head ;
   struct dst_entry *child ;
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct dst_entry *path ;
   struct dst_entry *from ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   unsigned short pending_confirm ;
   short error ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   __u32 tclassid ;
   long __pad_to_align_refcnt[2U] ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   union __anonunion_976 __anonCompField_dst_entry_101 ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_socket_lock_t_977 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef struct __anonstruct_socket_lock_t_977 socket_lock_t;

#line 124 
struct proto;

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u32 __portpair;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u64 __addrpair;

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_979 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_978 {
   __addrpair skc_addrpair ;
   struct __anonstruct_979 __anonCompField___anonunion_978_102 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_980 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_982 {
   __be16 skc_dport ;
   __u16 skc_num ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_981 {
   __portpair skc_portpair ;
   struct __anonstruct_982 __anonCompField___anonunion_981_105 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_983 {
   struct hlist_node skc_bind_node ;
   struct hlist_nulls_node skc_portaddr_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_984 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock_common {
   union __anonunion_978 __anonCompField_sock_common_103 ;
   union __anonunion_980 __anonCompField_sock_common_104 ;
   union __anonunion_981 __anonCompField_sock_common_106 ;
   unsigned short skc_family ;
   unsigned char volatile skc_state ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) skc_reuse : 4 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_reuseport : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_ipv6only : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_983 __anonCompField_sock_common_107 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_984 __anonCompField_sock_common_108 ;
   int skc_tx_queue_mapping ;
   atomic_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
};

#line 219 
struct cg_proto;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_sk_backlog_985 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_985 sk_backlog ;
   int sk_forward_alloc ;
   __u32 sk_rxhash ;
   u16 sk_incoming_cpu ;
   __u32 sk_txhash ;
   unsigned int sk_napi_id ;
   unsigned int sk_ll_usec ;
   atomic_t sk_drops ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   struct socket_wq *sk_wq ;
   struct xfrm_policy *sk_policy[2U] ;
   unsigned long sk_flags ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   spinlock_t sk_dst_lock ;
   atomic_t sk_wmem_alloc ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   struct sk_buff_head sk_write_queue ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) sk_shutdown : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_tx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_rx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) sk_userlocks : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) sk_protocol : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) sk_type : 16 ;
   int sk_wmem_queued ;
   gfp_t sk_allocation ;
   u32 sk_pacing_rate ;
   u32 sk_max_pacing_rate ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   u16 sk_gso_max_segs ;
   int sk_rcvlowat ;
   unsigned long sk_lingertime ;
   struct sk_buff_head sk_error_queue ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   __u32 sk_priority ;
   __u32 sk_cgrp_prioidx ;
   struct pid *sk_peer_pid ;
   struct cred const *sk_peer_cred ;
   long sk_rcvtimeo ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u32 sk_tskey ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   struct page_frag sk_frag ;
   struct sk_buff *sk_send_head ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   void *sk_security ;
   __u32 sk_mark ;
   u32 sk_classid ;
   struct cg_proto *sk_cgrp ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
};

#line 914 
struct request_sock_ops;

#line 915 
struct timewait_sock_ops;

#line 916 
struct inet_hashinfo;

#line 917 
struct raw_hashinfo;

#line 932 
struct udp_table;

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_h_988 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
};

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   void (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   void (*clear_sk)(struct sock *, int ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock const *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   int *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   int slab_flags ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_988 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*init_cgroup)(struct mem_cgroup *, struct cgroup_subsys *) ;
   void (*destroy_cgroup)(struct mem_cgroup *) ;
   struct cg_proto *(*proto_cgroup)(struct mem_cgroup *) ;
};

#line 1054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct cg_proto {
   struct page_counter memory_allocated ;
   struct percpu_counter sockets_allocated ;
   int memory_pressure ;
   long sysctl_mem[3U] ;
   unsigned long flags ;
   struct mem_cgroup *memcg ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jhash.h"
struct request_sock_ops {
   int family ;
   int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock const *) ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   struct sock *rsk_listener ;
   u16 mss ;
   u8 num_retrans ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cookie_ts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) num_timeout : 7 ;
   u32 window_clamp ;
   u32 rcv_wnd ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops const *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};

#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_connection_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_timewait_sock.h"
struct tcphdr {
   __be16 source ;
   __be16 dest ;
   __be32 seq ;
   __be32 ack_seq ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) res1 : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) doff : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) fin : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syn : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rst : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) psh : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ack : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) urg : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ece : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cwr : 1 ;
   __be16 window ;
   __sum16 check ;
   __be16 urg_ptr ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ip6_sf_list {
   struct ip6_sf_list *sf_next ;
   struct in6_addr sf_addr ;
   unsigned long sf_count[2U] ;
   unsigned char sf_gsresp ;
   unsigned char sf_oldin ;
   unsigned char sf_crcount ;
};

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifmcaddr6 {
   struct in6_addr mca_addr ;
   struct inet6_dev *idev ;
   struct ifmcaddr6 *next ;
   struct ip6_sf_list *mca_sources ;
   struct ip6_sf_list *mca_tomb ;
   unsigned int mca_sfmode ;
   unsigned char mca_crcount ;
   unsigned long mca_sfcount[2U] ;
   struct timer_list mca_timer ;
   unsigned int mca_flags ;
   int mca_users ;
   atomic_t mca_refcnt ;
   spinlock_t mca_lock ;
   unsigned long mca_cstamp ;
   unsigned long mca_tstamp ;
};

#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifacaddr6 {
   struct in6_addr aca_addr ;
   struct inet6_dev *aca_idev ;
   struct rt6_info *aca_rt ;
   struct ifacaddr6 *aca_next ;
   int aca_users ;
   atomic_t aca_refcnt ;
   unsigned long aca_cstamp ;
   unsigned long aca_tstamp ;
};

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ipv6_devstat {
   struct proc_dir_entry *proc_dir_entry ;
   struct ipstats_mib *ipv6 ;
   struct icmpv6_mib_device *icmpv6dev ;
   struct icmpv6msg_mib_device *icmpv6msgdev ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct inet6_dev {
   struct net_device *dev ;
   struct list_head addr_list ;
   struct ifmcaddr6 *mc_list ;
   struct ifmcaddr6 *mc_tomb ;
   spinlock_t mc_lock ;
   unsigned char mc_qrv ;
   unsigned char mc_gq_running ;
   unsigned char mc_ifc_count ;
   unsigned char mc_dad_count ;
   unsigned long mc_v1_seen ;
   unsigned long mc_qi ;
   unsigned long mc_qri ;
   unsigned long mc_maxdelay ;
   struct timer_list mc_gq_timer ;
   struct timer_list mc_ifc_timer ;
   struct timer_list mc_dad_timer ;
   struct ifacaddr6 *ac_list ;
   rwlock_t lock ;
   atomic_t refcnt ;
   __u32 if_flags ;
   int dead ;
   u8 rndid[8U] ;
   struct timer_list regen_timer ;
   struct list_head tempaddr_list ;
   struct in6_addr token ;
   struct neigh_parms *nd_parms ;
   struct ipv6_devconf cnf ;
   struct ipv6_devstat stats ;
   struct timer_list rs_timer ;
   __u8 rs_probes ;
   __u8 addr_gen_mode ;
   unsigned long tstamp ;
   struct callback_head rcu ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
union __anonunion_1007 {
   __be32 a4 ;
   __be32 a6[4U] ;
   struct in6_addr in6 ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
struct inetpeer_addr_base {
   union __anonunion_1007 __anonCompField_inetpeer_addr_base_110 ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inetpeer_addr {
   struct inetpeer_addr_base addr ;
   __u16 family ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_1008 {
   struct list_head gc_list ;
   struct callback_head gc_rcu ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct __anonstruct_1010 {
   atomic_t rid ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_1009 {
   struct __anonstruct_1010 __anonCompField___anonunion_1009_112 ;
   struct callback_head rcu ;
   struct inet_peer *gc_next ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer {
   struct inet_peer *avl_left ;
   struct inet_peer *avl_right ;
   struct inetpeer_addr daddr ;
   __u32 avl_height ;
   u32 metrics[16U] ;
   u32 rate_tokens ;
   unsigned long rate_last ;
   union __anonunion_1008 __anonCompField_inet_peer_111 ;
   union __anonunion_1009 __anonCompField_inet_peer_113 ;
   __u32 dtime ;
   atomic_t refcnt ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer_base {
   struct inet_peer *root ;
   seqlock_t lock ;
   int total ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct uncached_list;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct rtable {
   struct dst_entry dst ;
   int rt_genid ;
   unsigned int rt_flags ;
   __u16 rt_type ;
   __u8 rt_is_input ;
   __u8 rt_uses_gateway ;
   int rt_iif ;
   __be32 rt_gateway ;
   u32 rt_pmtu ;
   struct list_head rt_uncached ;
   struct uncached_list *rt_uncached_list ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ip6_checksum.h"
struct __anonstruct_near_1012 {
   u16 index ;
   u16 dist ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ip6_checksum.h"
struct cpu_rmap {
   struct kref refcount ;
   u16 size ;
   u16 used ;
   void **obj ;
   struct __anonstruct_near_1012 near[0U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/busy_poll.h"
struct pidmap {
   atomic_t nr_free ;
   void *page ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid_namespace.h"
struct fs_pin;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid_namespace.h"
struct pid_namespace {
   struct kref kref ;
   struct pidmap pidmap[128U] ;
   struct callback_head rcu ;
   int last_pid ;
   unsigned int nr_hashed ;
   struct task_struct *child_reaper ;
   struct kmem_cache *pid_cachep ;
   unsigned int level ;
   struct pid_namespace *parent ;
   struct vfsmount *proc_mnt ;
   struct dentry *proc_self ;
   struct dentry *proc_thread_self ;
   struct fs_pin *bacct ;
   struct user_namespace *user_ns ;
   struct work_struct proc_work ;
   kgid_t pid_gid ;
   int hide_pid ;
   int reboot ;
   struct ns_common ns ;
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crash_dump.h"
struct cq_desc {
   __le16 completed_index ;
   __le16 q_number ;
   u8 type_specfic[11U] ;
   u8 type_color ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/cq_enet_desc.h"
struct cq_enet_rq_desc {
   __le16 completed_index_flags ;
   __le16 q_number_rss_type_flags ;
   __le32 rss_hash ;
   __le16 bytes_written_flags ;
   __le16 vlan ;
   __le16 checksum_fcoe ;
   u8 flags ;
   u8 type_color ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.h"
struct vnic_stats;

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_intr.h"
struct vnic_tx_stats {
   u64 tx_frames_ok ;
   u64 tx_unicast_frames_ok ;
   u64 tx_multicast_frames_ok ;
   u64 tx_broadcast_frames_ok ;
   u64 tx_bytes_ok ;
   u64 tx_unicast_bytes_ok ;
   u64 tx_multicast_bytes_ok ;
   u64 tx_broadcast_bytes_ok ;
   u64 tx_drops ;
   u64 tx_errors ;
   u64 tx_tso ;
   u64 rsvd[16U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_stats.h"
struct vnic_rx_stats {
   u64 rx_frames_ok ;
   u64 rx_frames_total ;
   u64 rx_unicast_frames_ok ;
   u64 rx_multicast_frames_ok ;
   u64 rx_broadcast_frames_ok ;
   u64 rx_bytes_ok ;
   u64 rx_unicast_bytes_ok ;
   u64 rx_multicast_bytes_ok ;
   u64 rx_broadcast_bytes_ok ;
   u64 rx_drop ;
   u64 rx_no_bufs ;
   u64 rx_errors ;
   u64 rx_rss ;
   u64 rx_crc_errors ;
   u64 rx_frames_64 ;
   u64 rx_frames_127 ;
   u64 rx_frames_255 ;
   u64 rx_frames_511 ;
   u64 rx_frames_1023 ;
   u64 rx_frames_1518 ;
   u64 rx_frames_to_max ;
   u64 rsvd[16U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_stats.h"
struct vnic_stats {
   struct vnic_tx_stats tx ;
   struct vnic_rx_stats rx ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_vic.h"
struct wq_enet_desc {
   __le64 address ;
   __le16 length ;
   __le16 mss_loopback ;
   __le16 header_length_flags ;
   __le16 vlan_tag ;
};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/wq_enet_desc.h"
struct rq_enet_desc {
   __le64 address ;
   __le16 length_type ;
   u8 reserved[6U] ;
};

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_nic.h"
struct __anonstruct_key_1020 {
   u8 b[10U] ;
   u8 b_pad[6U] ;
};

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_nic.h"
union vnic_rss_key {
   struct __anonstruct_key_1020 key[4U] ;
   u64 raw[8U] ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rss.h"
struct __anonstruct_cpu_1021 {
   u8 b[4U] ;
   u8 b_pad[4U] ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rss.h"
union vnic_rss_cpu {
   struct __anonstruct_cpu_1021 cpu[32U] ;
   u64 raw[32U] ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic.h"
struct enic_intr_mod_range {
   u32 small_pkt_range_start ;
   u32 large_pkt_range_start ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic.h"
struct enic_intr_mod_table {
   u32 rx_rate ;
   u32 range_percent ;
};

#line 627  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
struct vic_provinfo_tlv {
   u16 type ;
   u16 length ;
   u8 value[0U] ;
};

#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_vic.h"
struct vic_provinfo {
   u8 oui[3U] ;
   u8 type ;
   u32 length ;
   u32 num_tlvs ;
   struct vic_provinfo_tlv tlv[0U] ;
};

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_resource.h"
struct vnic_devcmd_fw_info {
   char fw_version[32U] ;
   char fw_build[32U] ;
   char hw_version[32U] ;
   char hw_serial_number[32U] ;
   u16 asic_type ;
   u16 asic_rev ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_ether.h"
struct flow_dissector_key_control {
   u16 thoff ;
   u16 addr_type ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct flow_dissector_key_basic {
   __be16 n_proto ;
   u8 ip_proto ;
   u8 padding ;
};

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct flow_dissector_key_tags {
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) vlan_id : 12 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(20))) flow_label : 20 ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct flow_dissector_key_keyid {
   __be32 keyid ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct flow_dissector_key_ipv4_addrs {
   __be32 src ;
   __be32 dst ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct flow_dissector_key_ipv6_addrs {
   struct in6_addr src ;
   struct in6_addr dst ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct flow_dissector_key_tipc_addrs {
   __be32 srcnode ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
union __anonunion_2754 {
   struct flow_dissector_key_ipv4_addrs v4addrs ;
   struct flow_dissector_key_ipv6_addrs v6addrs ;
   struct flow_dissector_key_tipc_addrs tipcaddrs ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct flow_dissector_key_addrs {
   union __anonunion_2754 __anonCompField_flow_dissector_key_addrs_69 ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct __anonstruct_2756 {
   __be16 src ;
   __be16 dst ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
union __anonunion_2755 {
   __be32 ports ;
   struct __anonstruct_2756 __anonCompField___anonunion_2755_70 ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct flow_dissector_key_ports {
   union __anonunion_2755 __anonCompField_flow_dissector_key_ports_71 ;
};

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct flow_keys {
   struct flow_dissector_key_control control ;
   struct flow_dissector_key_basic basic ;
   struct flow_dissector_key_tags tags ;
   struct flow_dissector_key_keyid keyid ;
   struct flow_dissector_key_ports ports ;
   struct flow_dissector_key_addrs addrs ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic.h"
struct enic_rfs_fltr_node {
   struct flow_keys keys ;
   u32 flow_id ;
   u16 fltr_id ;
   u16 rq_id ;
   struct hlist_node node ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_clsf.h"
struct enic_stat {
   char name[32U] ;
   unsigned int index ;
};

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct flow_dissector {
   unsigned int used_keys ;
   unsigned short offset[11U] ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_devcmd.h"
struct filter_usnic_id {
   u32 flags ;
   u16 vlan ;
   u16 ethtype ;
   u8 proto_version ;
   u32 usnic_id ;
};

#line 536  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_devcmd.h"
struct filter_ipv4_5tuple {
   u32 flags ;
   u32 protocol ;
   u32 src_addr ;
   u32 dst_addr ;
   u16 src_port ;
   u16 dst_port ;
};

#line 552  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_devcmd.h"
struct filter_mac_vlan {
   u32 flags ;
   u16 vlan ;
   u8 mac_addr[6U] ;
};

#line 581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_devcmd.h"
union __anonunion_u_3497 {
   struct filter_usnic_id usnic ;
   struct filter_ipv4_5tuple ipv4 ;
   struct filter_mac_vlan mac_vlan ;
};

#line 581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_devcmd.h"
struct filter {
   u32 type ;
   union __anonunion_u_3497 u ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 u_int32_t;

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct vnic_resource_header {
   u32 magic ;
   u32 version ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_resource.h"
struct mgmt_barmap_hdr {
   u32 magic ;
   u32 version ;
   u16 lif ;
   u16 pci_slot ;
   char serial[16U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_resource.h"
struct vnic_resource {
   u8 type ;
   u8 bar ;
   u8 pad[2U] ;
   u32 bar_offset ;
   u32 count ;
};

#line 468  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_devcmd.h"
struct vnic_devcmd_notify {
   u32 csum ;
   u32 link_state ;
   u32 port_speed ;
   u32 mtu ;
   u32 msglvl ;
   u32 uif ;
   u32 status ;
   u32 error ;
   u32 link_down_cnt ;
   u32 perbi_rebuild_cnt ;
};

#line 566  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_devcmd.h"
union __anonunion_u_3728 {
   u32 rq_idx ;
};

#line 566  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_devcmd.h"
struct filter_action {
   u32 type ;
   union __anonunion_u_3728 u ;
};

#line 596  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_devcmd.h"
struct filter_tlv {
   u_int32_t type ;
   u_int32_t length ;
   u_int32_t val[0U] ;
};

#line 610  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_devcmd.h"
struct vnic_devcmd {
   u32 status ;
   u32 cmd ;
   u64 args[15U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_stats.h"
enum vnic_proxy_type {
    PROXY_NONE = 0,
    PROXY_BY_BDF = 1,
    PROXY_BY_INDEX = 2
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_stats.h"
struct vnic_res {
   void *vaddr ;
   dma_addr_t bus_addr ;
   unsigned int count ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
struct vnic_intr_coal_timer_info {
   u32 mul ;
   u32 div ;
   u32 max_usec ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
struct vnic_dev {
   void *priv ;
   struct pci_dev *pdev ;
   struct vnic_res res[18U] ;
   enum vnic_dev_intr_mode intr_mode ;
   struct vnic_devcmd *devcmd ;
   struct vnic_devcmd_notify *notify ;
   struct vnic_devcmd_notify notify_copy ;
   dma_addr_t notify_pa ;
   u32 notify_sz ;
   dma_addr_t linkstatus_pa ;
   struct vnic_stats *stats ;
   dma_addr_t stats_pa ;
   struct vnic_devcmd_fw_info *fw_info ;
   dma_addr_t fw_info_pa ;
   enum vnic_proxy_type proxy ;
   u32 proxy_index ;
   u64 args[15U] ;
   struct vnic_intr_coal_timer_info intr_coal_timer_info ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_free_irq_3 {
   int arg0 ;
   int signal_pending ;
};

#line 19  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_14 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_17 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_13 {
   struct net_device *arg0 ;
   int signal_pending ;
};

#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_timer_scenario_16 {
   struct timer_list *arg0 ;
   int signal_pending ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 30 
void _raw_spin_lock_bh(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 42 
void _raw_spin_unlock_bh(raw_spinlock_t *);


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_72(spinlock_t *lock);


#line 359  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh(spinlock_t *lock)
{
  
#line 361 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 362 
  return;
}


#line 387 
static void ldv_spin_lock_bh_73(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 407 
static void ldv_spin_unlock_75(spinlock_t *lock);


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh(spinlock_t *lock)
{
  
#line 410 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 411 
  return;
}


#line 436 
static void ldv_spin_unlock_bh_74(spinlock_t *lock);


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_api.c.aux"
void ldv_spin_model_lock(char *);


#line 75 
void ldv_spin_model_unlock(char *);


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.h"
int vnic_dev_cmd(struct vnic_dev *vdev, enum vnic_devcmd_cmd cmd, u64 *a0, u64 *a1, int wait);


#line 88 
void vnic_dev_cmd_proxy_by_index_start(struct vnic_dev *vdev, u16 index);


#line 89 
void vnic_dev_cmd_proxy_end(struct vnic_dev *vdev);


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_api.h"
int enic_api_devcmd_proxy_by_index(struct net_device *netdev, int vf, enum vnic_devcmd_cmd cmd, u64 *a0, u64 *a1, int wait);


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_api.c"
int enic_api_devcmd_proxy_by_index(struct net_device *netdev, int vf, enum vnic_devcmd_cmd cmd, u64 *a0, u64 *a1, int wait)
{
  int err;
  
#line 33 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 34 
  struct vnic_dev *vdev = enic->vdev;
  
#line 36 
  ldv_spin_lock_72(& enic->enic_api_lock);
  
#line 37 
  ldv_spin_lock_bh_73(& enic->devcmd_lock);
  
#line 39 
  vnic_dev_cmd_proxy_by_index_start(vdev,(unsigned short)((int)((unsigned short)vf)));
  
#line 40 
  err = vnic_dev_cmd(vdev,cmd,a0,a1,wait);
  
#line 41 
  vnic_dev_cmd_proxy_end(vdev);
  
#line 43 
  ldv_spin_unlock_bh_74(& enic->devcmd_lock);
  
#line 44 
  ldv_spin_unlock_75(& enic->enic_api_lock);
  
#line 46 
  return err;
}


#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_api.c"
static char const __kstrtab_enic_api_devcmd_proxy_by_index[31U] = {(char)'e', (char)'n', (char)'i', (char)'c', (char)'_', (char)'a', (char)'p', (char)'i', (char)'_', (char)'d', (char)'e', (char)'v', (char)'c', (char)'m', (char)'d', (char)'_', (char)'p', (char)'r', (char)'o', (char)'x', (char)'y', (char)'_', (char)'b', (char)'y', (char)'_', (char)'i', (char)'n', (char)'d', (char)'e', (char)'x', (char)'\000'};

#line 48 
struct kernel_symbol const __ksymtab_enic_api_devcmd_proxy_by_index;


#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_api.c"
struct kernel_symbol const __ksymtab_enic_api_devcmd_proxy_by_index = {.value = (unsigned long)(& enic_api_devcmd_proxy_by_index), .name = (char const *)(& __kstrtab_enic_api_devcmd_proxy_by_index)};

#line 738  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_api.c.aux"
static void ldv_spin_lock_72(spinlock_t *lock)
{
  
#line 742 
  ldv_spin_model_lock((char *)"enic_api_lock_of_enic");
  
#line 744 
  spin_lock(lock);
  
#line 745 
  return;
}


#line 748  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_api.c.aux"
static void ldv_spin_lock_bh_73(spinlock_t *lock)
{
  
#line 752 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 754 
  spin_lock_bh(lock);
  
#line 755 
  return;
}


#line 758  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_api.c.aux"
static void ldv_spin_unlock_bh_74(spinlock_t *lock)
{
  
#line 762 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 764 
  spin_unlock_bh(lock);
  
#line 765 
  return;
}


#line 768  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_api.c.aux"
static void ldv_spin_unlock_75(spinlock_t *lock)
{
  
#line 772 
  ldv_spin_model_unlock((char *)"enic_api_lock_of_enic");
  
#line 774 
  spin_unlock(lock);
  
#line 775 
  return;
}


#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
void dev_err(struct device const *, char const * , ...);


#line 1089 
void _dev_info(struct device const *, char const * , ...);


#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.h"
unsigned int vnic_dev_get_res_count(struct vnic_dev *vdev, enum vnic_res_type type);


#line 79 
void *vnic_dev_get_res(struct vnic_dev *vdev, enum vnic_res_type type, unsigned int index);


#line 92 
int vnic_dev_spec(struct vnic_dev *vdev, unsigned int offset, unsigned int size, void *value);


#line 100 
int vnic_dev_get_mac_addr(struct vnic_dev *vdev, u8 *mac_addr);


#line 120 
enum vnic_dev_intr_mode vnic_dev_get_intr_mode(struct vnic_dev *vdev);


#line 123 
u32 vnic_dev_get_intr_coal_timer_max(struct vnic_dev *vdev);


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_cq.h"
void vnic_cq_free(struct vnic_cq *cq);


#line 114 
int vnic_cq_alloc(struct vnic_dev *vdev, struct vnic_cq *cq, unsigned int index, unsigned int desc_count, unsigned int desc_size);


#line 116 
void vnic_cq_init(struct vnic_cq *cq, unsigned int flow_control_enable, unsigned int color_enable, unsigned int cq_head, unsigned int cq_tail, unsigned int cq_tail_color, unsigned int interrupt_enable, unsigned int cq_entry_enable, unsigned int cq_message_enable, unsigned int interrupt_offset, u64 cq_message_addr);


#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_wq.h"
void vnic_wq_free(struct vnic_wq *wq);


#line 167 
int vnic_wq_alloc(struct vnic_dev *vdev, struct vnic_wq *wq, unsigned int index, unsigned int desc_count, unsigned int desc_size);


#line 169 
void vnic_wq_init(struct vnic_wq *wq, unsigned int cq_index, unsigned int error_interrupt_enable, unsigned int error_interrupt_offset);


#line 285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.h"
void vnic_rq_free(struct vnic_rq *rq);


#line 286 
int vnic_rq_alloc(struct vnic_dev *vdev, struct vnic_rq *rq, unsigned int index, unsigned int desc_count, unsigned int desc_size);


#line 288 
void vnic_rq_init(struct vnic_rq *rq, unsigned int cq_index, unsigned int error_interrupt_enable, unsigned int error_interrupt_offset);


#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_intr.h"
void vnic_intr_free(struct vnic_intr *intr);


#line 103 
int vnic_intr_alloc(struct vnic_dev *vdev, struct vnic_intr *intr, unsigned int index);


#line 105 
void vnic_intr_init(struct vnic_intr *intr, u32 coalescing_timer, unsigned int coalescing_type, unsigned int mask_on_assertion);


#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_nic.h"
__inline static void vnic_set_nic_cfg(u32 *nic_cfg, u8 rss_default_cpu, u8 rss_hash_type, u8 rss_hash_bits, u8 rss_base_cpu, u8 rss_enable, u8 tso_ipid_split_en, u8 ig_vlan_strip_en)
{
  
#line 57 
  *nic_cfg = ((((((unsigned int)rss_default_cpu | ((unsigned int)rss_hash_type << 8U)) | (((unsigned int)rss_hash_bits << 16U) & 458752U)) | (((unsigned int)rss_base_cpu << 19U) & 3670016U)) | (((unsigned int)rss_enable << 22U) & 4194304U)) | (((unsigned int)tso_ipid_split_en << 23U) & 8388608U)) | (((unsigned int)ig_vlan_strip_en << 24U) & 16777216U);
  
#line 70 
  return;
}


#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_res.h"
int enic_get_vnic_config(struct enic *enic);


#line 141 
int enic_add_vlan(struct enic *enic, u16 vlanid);


#line 142 
int enic_del_vlan(struct enic *enic, u16 vlanid);


#line 143 
int enic_set_nic_cfg(struct enic *enic, u8 rss_default_cpu, u8 rss_hash_type, u8 rss_hash_bits, u8 rss_base_cpu, u8 rss_enable, u8 tso_ipid_split_en, u8 ig_vlan_strip_en);


#line 146 
int enic_set_rss_key(struct enic *enic, dma_addr_t key_pa, u64 len);


#line 147 
int enic_set_rss_cpu(struct enic *enic, dma_addr_t cpu_pa, u64 len);


#line 148 
void enic_get_res_counts(struct enic *enic);


#line 149 
void enic_init_vnic_resources(struct enic *enic);


#line 150 
int enic_alloc_vnic_resources(struct enic *enic);


#line 151 
void enic_free_vnic_resources(struct enic *enic);


#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic.h"
__inline static struct device *enic_get_dev(struct enic *enic)
{
  struct device *__retres;
  
#line 196 
  __retres = & (enic->pdev)->dev;
  
#line 196 
  return __retres;
}


#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_res.c"
int enic_get_vnic_config(struct enic *enic)
{
  int __retres;
  int err;
  u32 tmp_12;
  u32 tmp_16;
  int tmp_20;
  u32 tmp_23;
  struct device *tmp_24;
  char *tmp_26;
  char *tmp_29;
  char *tmp_30;
  char *tmp_31;
  char *tmp_32;
  char *tmp_33;
  char *tmp_34;
  struct device *tmp_35;
  
#line 44 
  struct vnic_enet_config *c = & enic->config;
  
#line 47 
  err = vnic_dev_get_mac_addr(enic->vdev,(u8 *)(& enic->mac_addr));
  
#line 48 
  if (err != 0) {
    struct device *tmp;
    
#line 49 
    ;
    
#line 49 
    tmp = enic_get_dev(enic);
    
#line 49 
    dev_err((struct device const *)tmp,"Error getting MAC addr, %d\n",err);
    
#line 51 
    __retres = err;
    
#line 51 
    goto return_label;
  }
  else ;
  
#line 66 
  err = vnic_dev_spec(enic->vdev,0U,4U,(void *)(& c->flags));
  
#line 66 
  if (err != 0) {
    struct device *tmp_0;
    
#line 66 
    ;
    
#line 66 
    tmp_0 = enic_get_dev(enic);
    
#line 66 
    dev_err((struct device const *)tmp_0,"Error getting %s, %d\n",(char *)"flags",err);
    
#line 66 
    __retres = err;
    
#line 66 
    goto return_label;
  }
  else ;
  
#line 67 
  err = vnic_dev_spec(enic->vdev,4U,4U,(void *)(& c->wq_desc_count));
  
#line 67 
  if (err != 0) {
    struct device *tmp_1;
    
#line 67 
    ;
    
#line 67 
    tmp_1 = enic_get_dev(enic);
    
#line 67 
    dev_err((struct device const *)tmp_1,"Error getting %s, %d\n",(char *)"wq_desc_count",err);
    
#line 67 
    __retres = err;
    
#line 67 
    goto return_label;
  }
  else ;
  
#line 68 
  err = vnic_dev_spec(enic->vdev,8U,4U,(void *)(& c->rq_desc_count));
  
#line 68 
  if (err != 0) {
    struct device *tmp_2;
    
#line 68 
    ;
    
#line 68 
    tmp_2 = enic_get_dev(enic);
    
#line 68 
    dev_err((struct device const *)tmp_2,"Error getting %s, %d\n",(char *)"rq_desc_count",err);
    
#line 68 
    __retres = err;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 69 
  err = vnic_dev_spec(enic->vdev,12U,2U,(void *)(& c->mtu));
  
#line 69 
  if (err != 0) {
    struct device *tmp_3;
    
#line 69 
    ;
    
#line 69 
    tmp_3 = enic_get_dev(enic);
    
#line 69 
    dev_err((struct device const *)tmp_3,"Error getting %s, %d\n",(char *)"mtu",err);
    
#line 69 
    __retres = err;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 70 
  err = vnic_dev_spec(enic->vdev,16U,1U,(void *)(& c->intr_timer_type));
  
#line 70 
  if (err != 0) {
    struct device *tmp_4;
    
#line 70 
    ;
    
#line 70 
    tmp_4 = enic_get_dev(enic);
    
#line 70 
    dev_err((struct device const *)tmp_4,"Error getting %s, %d\n",(char *)"intr_timer_type",err);
    
#line 70 
    __retres = err;
    
#line 70 
    goto return_label;
  }
  else ;
  
#line 71 
  err = vnic_dev_spec(enic->vdev,17U,1U,(void *)(& c->intr_mode));
  
#line 71 
  if (err != 0) {
    struct device *tmp_5;
    
#line 71 
    ;
    
#line 71 
    tmp_5 = enic_get_dev(enic);
    
#line 71 
    dev_err((struct device const *)tmp_5,"Error getting %s, %d\n",(char *)"intr_mode",err);
    
#line 71 
    __retres = err;
    
#line 71 
    goto return_label;
  }
  else ;
  
#line 72 
  err = vnic_dev_spec(enic->vdev,36U,4U,(void *)(& c->intr_timer_usec));
  
#line 72 
  if (err != 0) {
    struct device *tmp_6;
    
#line 72 
    ;
    
#line 72 
    tmp_6 = enic_get_dev(enic);
    
#line 72 
    dev_err((struct device const *)tmp_6,"Error getting %s, %d\n",(char *)"intr_timer_usec",err);
    
#line 72 
    __retres = err;
    
#line 72 
    goto return_label;
  }
  else ;
  
#line 73 
  err = vnic_dev_spec(enic->vdev,40U,2U,(void *)(& c->loop_tag));
  
#line 73 
  if (err != 0) {
    struct device *tmp_7;
    
#line 73 
    ;
    
#line 73 
    tmp_7 = enic_get_dev(enic);
    
#line 73 
    dev_err((struct device const *)tmp_7,"Error getting %s, %d\n",(char *)"loop_tag",err);
    
#line 73 
    __retres = err;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 74 
  err = vnic_dev_spec(enic->vdev,44U,2U,(void *)(& c->num_arfs));
  
#line 74 
  if (err != 0) {
    struct device *tmp_8;
    
#line 74 
    ;
    
#line 74 
    tmp_8 = enic_get_dev(enic);
    
#line 74 
    dev_err((struct device const *)tmp_8,"Error getting %s, %d\n",(char *)"num_arfs",err);
    
#line 74 
    __retres = err;
    
#line 74 
    goto return_label;
  }
  else ;
  {
    u32 tmp_10;
    u32 tmp_11;
    
#line 77 
    u32 __min1 = 4096U;
    {
      u32 tmp_9;
      
#line 77 
      u32 __max1 = 64U;
      
#line 77 
      u32 __max2 = c->wq_desc_count;
      
#line 77 
      if (__max1 > __max2) 
#line 77 
                           tmp_9 = __max1; else 
#line 77 
                                                tmp_9 = __max2;
      
#line 77 
      tmp_10 = tmp_9;
    }
    
#line 77 
    u32 __min2 = tmp_10;
    
#line 77 
    if (__min1 < __min2) 
#line 77 
                         tmp_11 = __min1; else 
#line 77 
                                               tmp_11 = __min2;
    
#line 77 
    tmp_12 = tmp_11;
  }
  
#line 76 
  c->wq_desc_count = tmp_12;
  
#line 80 
  c->wq_desc_count &= 4294967264U;
  {
    u32 tmp_14;
    u32 tmp_15;
    
#line 83 
    u32 __min1_0 = 4096U;
    {
      u32 tmp_13;
      
#line 83 
      u32 __max1_0 = 64U;
      
#line 83 
      u32 __max2_0 = c->rq_desc_count;
      
#line 83 
      if (__max1_0 > __max2_0) 
#line 83 
                               tmp_13 = __max1_0; else 
#line 83 
                                                       tmp_13 = __max2_0;
      
#line 83 
      tmp_14 = tmp_13;
    }
    
#line 83 
    u32 __min2_0 = tmp_14;
    
#line 83 
    if (__min1_0 < __min2_0) 
#line 83 
                             tmp_15 = __min1_0; else 
#line 83 
                                                     tmp_15 = __min2_0;
    
#line 83 
    tmp_16 = tmp_15;
  }
  
#line 82 
  c->rq_desc_count = tmp_16;
  
#line 86 
  c->rq_desc_count &= 4294967264U;
  
#line 88 
  if ((unsigned int)c->mtu == 0U) 
#line 89 
                                  c->mtu = (unsigned short)1500U; else ;
  {
    int tmp_18;
    int tmp_19;
    
#line 90 
    u16 __min1_1 = (unsigned short)9000U;
    {
      int tmp_17;
      
#line 90 
      u16 __max1_1 = (unsigned short)68U;
      
#line 90 
      u16 __max2_1 = c->mtu;
      
#line 90 
      if ((int)__max1_1 > (int)__max2_1) 
#line 90 
                                         tmp_17 = (int)__max1_1; else 
                                                                   
#line 90 
                                                                   tmp_17 = (int)__max2_1;
      
#line 90 
      tmp_18 = tmp_17;
    }
    
#line 90 
    u16 __min2_1 = (unsigned short)tmp_18;
    
#line 90 
    if ((int)__min1_1 < (int)__min2_1) 
#line 90 
                                       tmp_19 = (int)__min1_1; else 
#line 90 
                                                                    tmp_19 = (int)__min2_1;
    
#line 90 
    tmp_20 = tmp_19;
  }
  
#line 90 
  c->mtu = (unsigned short)tmp_20;
  {
    u32 tmp_22;
    
#line 94 
    u32 __min1_2 = c->intr_timer_usec;
    
#line 94 
    u32 __min2_2 = vnic_dev_get_intr_coal_timer_max(enic->vdev);
    
#line 94 
    if (__min1_2 < __min2_2) 
#line 94 
                             tmp_22 = __min1_2; else 
#line 94 
                                                     tmp_22 = __min2_2;
    
#line 94 
    tmp_23 = tmp_22;
  }
  
#line 94 
  c->intr_timer_usec = tmp_23;
  
#line 97 
  ;
  
#line 97 
  ;
  
#line 97 
  ;
  
#line 97 
  ;
  
#line 97 
  tmp_24 = enic_get_dev(enic);
  
#line 97 
  _dev_info((struct device const *)tmp_24,"vNIC MAC addr %pM wq/rq %d/%d mtu %d\n",(u8 *)(& enic->mac_addr),c->wq_desc_count,c->rq_desc_count,(int)c->mtu);
  
#line 101 
  ;
  
#line 101 
  ;
  
#line 101 
  if ((unsigned int)c->intr_timer_type != 0U) {
    char *tmp_25;
    
#line 101 
    if ((unsigned int)c->intr_timer_type == 1U) 
#line 101 
                                                tmp_25 = (char *)"idle"; else 
                                                                    
#line 101 
                                                                    tmp_25 = (char *)"unknown";
    
#line 101 
    tmp_26 = tmp_25;
  }
  else 
#line 101 
       tmp_26 = (char *)"min";
  
#line 101 
  if ((unsigned int)c->intr_mode != 2U) {
    char *tmp_28;
    
#line 101 
    if ((unsigned int)c->intr_mode != 1U) {
      char *tmp_27;
      
#line 101 
      if ((unsigned int)c->intr_mode == 0U) 
#line 101 
                                            tmp_27 = (char *)"any"; else 
                                                                    
#line 101 
                                                                    tmp_27 = (char *)"unknown";
      
#line 101 
      tmp_28 = tmp_27;
    }
    else 
#line 101 
         tmp_28 = (char *)"MSI";
    
#line 101 
    tmp_29 = tmp_28;
  }
  else 
#line 101 
       tmp_29 = (char *)"INTx";
  
#line 101 
  if ((int)(enic->config.flags >> 4) & 1) 
#line 101 
                                          tmp_30 = (char *)"yes"; else 
                                                                    
#line 101 
                                                                    tmp_30 = (char *)"no";
  
#line 101 
  if ((int)(enic->config.flags >> 1) & 1) 
#line 101 
                                          tmp_31 = (char *)"yes"; else 
                                                                    
#line 101 
                                                                    tmp_31 = (char *)"no";
  
#line 101 
  if ((int)enic->config.flags & 1) 
#line 101 
                                   tmp_32 = (char *)"yes"; else 
#line 101 
                                                                tmp_32 = (char *)"no";
  
#line 101 
  if ((int)(enic->config.flags >> 2) & 1) 
#line 101 
                                          tmp_33 = (char *)"yes"; else 
                                                                    
#line 101 
                                                                    tmp_33 = (char *)"no";
  
#line 101 
  if ((int)(enic->config.flags >> 3) & 1) 
#line 101 
                                          tmp_34 = (char *)"yes"; else 
                                                                    
#line 101 
                                                                    tmp_34 = (char *)"no";
  
#line 101 
  tmp_35 = enic_get_dev(enic);
  
#line 101 
  _dev_info((struct device const *)tmp_35,"vNIC csum tx/rx %s/%s ",tmp_34,tmp_33,tmp_32,tmp_31,tmp_30,tmp_29,tmp_26,c->intr_timer_usec,(int)c->loop_tag);
  
#line 119 
  __retres = 0;
  return_label: 
#line 119 
                return __retres;
}


#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_res.c"
int enic_add_vlan(struct enic *enic, u16 vlanid)
{
  int err;
  
#line 124 
  u64 a0 = (unsigned long long)vlanid;
  
#line 124 
  u64 a1 = 0ULL;
  
#line 125 
  int wait = 1000;
  
#line 128 
  err = vnic_dev_cmd(enic->vdev,(enum vnic_devcmd_cmd)CMD_VLAN_ADD,& a0,& a1,wait);
  
#line 129 
  if (err != 0) {
    struct device *tmp;
    
#line 130 
    ;
    
#line 130 
    tmp = enic_get_dev(enic);
    
#line 130 
    dev_err((struct device const *)tmp,"Can\'t add vlan id, %d\n",err);
  }
  else ;
  
#line 132 
  return err;
}


#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_res.c"
int enic_del_vlan(struct enic *enic, u16 vlanid)
{
  int err;
  
#line 137 
  u64 a0 = (unsigned long long)vlanid;
  
#line 137 
  u64 a1 = 0ULL;
  
#line 138 
  int wait = 1000;
  
#line 141 
  err = vnic_dev_cmd(enic->vdev,(enum vnic_devcmd_cmd)CMD_VLAN_DEL,& a0,& a1,wait);
  
#line 142 
  if (err != 0) {
    struct device *tmp;
    
#line 143 
    ;
    
#line 143 
    tmp = enic_get_dev(enic);
    
#line 143 
    dev_err((struct device const *)tmp,"Can\'t delete vlan id, %d\n",err);
  }
  else ;
  
#line 145 
  return err;
}


#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_res.c"
int enic_set_nic_cfg(struct enic *enic, u8 rss_default_cpu, u8 rss_hash_type, u8 rss_hash_bits, u8 rss_base_cpu, u8 rss_enable, u8 tso_ipid_split_en, u8 ig_vlan_strip_en)
{
  u64 a0;
  u64 a1;
  u32 nic_cfg;
  int tmp;
  
#line 154 
  int wait = 1000;
  
#line 156 
  vnic_set_nic_cfg(& nic_cfg,(unsigned char)((int)rss_default_cpu),(unsigned char)((int)rss_hash_type),(unsigned char)((int)rss_hash_bits),(unsigned char)((int)rss_base_cpu),(unsigned char)((int)rss_enable),(unsigned char)((int)tso_ipid_split_en),(unsigned char)((int)ig_vlan_strip_en));
  
#line 160 
  a0 = (unsigned long long)nic_cfg;
  
#line 161 
  a1 = 0ULL;
  
#line 163 
  tmp = vnic_dev_cmd(enic->vdev,(enum vnic_devcmd_cmd)CMD_NIC_CFG,& a0,& a1,wait);
  
#line 163 
  return tmp;
}


#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_res.c"
int enic_set_rss_key(struct enic *enic, dma_addr_t key_pa, u64 len)
{
  int tmp;
  
#line 168 
  u64 a0 = key_pa;
  
#line 168 
  u64 a1 = len;
  
#line 169 
  int wait = 1000;
  
#line 171 
  tmp = vnic_dev_cmd(enic->vdev,(enum vnic_devcmd_cmd)CMD_RSS_KEY,& a0,& a1,wait);
  
#line 171 
  return tmp;
}


#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_res.c"
int enic_set_rss_cpu(struct enic *enic, dma_addr_t cpu_pa, u64 len)
{
  int tmp;
  
#line 176 
  u64 a0 = cpu_pa;
  
#line 176 
  u64 a1 = len;
  
#line 177 
  int wait = 1000;
  
#line 179 
  tmp = vnic_dev_cmd(enic->vdev,(enum vnic_devcmd_cmd)CMD_RSS_CPU,& a0,& a1,wait);
  
#line 179 
  return tmp;
}


#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_res.c"
void enic_free_vnic_resources(struct enic *enic)
{
  unsigned int i;
  
#line 186 
  i = 0U;
  
#line 186 
  goto ldv_46173;
  ldv_46172: 
#line 187 
  ;
  
#line 187 
  vnic_wq_free(& enic->wq[i]);
  
#line 186 
  i += 1U;
  ldv_46173: 
#line 187 
  ;
  
#line 186 
  if (enic->wq_count > i) 
#line 188 
                          goto ldv_46172; else 
#line 191 
                                               goto ldv_46174;
  ldv_46174: 
#line 192 
  ;
  
#line 188 
  i = 0U;
  
#line 188 
  goto ldv_46176;
  ldv_46175: 
#line 189 
  ;
  
#line 189 
  vnic_rq_free(& enic->rq[i]);
  
#line 188 
  i += 1U;
  ldv_46176: 
#line 189 
  ;
  
#line 188 
  if (enic->rq_count > i) 
#line 190 
                          goto ldv_46175; else 
#line 193 
                                               goto ldv_46177;
  ldv_46177: 
#line 194 
  ;
  
#line 190 
  i = 0U;
  
#line 190 
  goto ldv_46179;
  ldv_46178: 
#line 191 
  ;
  
#line 191 
  vnic_cq_free(& enic->cq[i]);
  
#line 190 
  i += 1U;
  ldv_46179: 
#line 191 
  ;
  
#line 190 
  if (enic->cq_count > i) 
#line 192 
                          goto ldv_46178; else 
#line 195 
                                               goto ldv_46180;
  ldv_46180: 
#line 196 
  ;
  
#line 192 
  i = 0U;
  
#line 192 
  goto ldv_46182;
  ldv_46181: 
#line 193 
  ;
  
#line 193 
  vnic_intr_free(& enic->intr[i]);
  
#line 192 
  i += 1U;
  ldv_46182: 
#line 193 
  ;
  
#line 192 
  if (enic->intr_count > i) 
#line 194 
                            goto ldv_46181; else 
#line 197 
                                                 goto ldv_46183;
  ldv_46183: 
#line 198 
  ;
  
#line 199 
  return;
}


#line 196  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_res.c"
void enic_get_res_counts(struct enic *enic)
{
  struct device *tmp;
  
#line 198 
  enic->wq_count = vnic_dev_get_res_count(enic->vdev,(enum vnic_res_type)RES_TYPE_WQ);
  
#line 199 
  enic->rq_count = vnic_dev_get_res_count(enic->vdev,(enum vnic_res_type)RES_TYPE_RQ);
  
#line 200 
  enic->cq_count = vnic_dev_get_res_count(enic->vdev,(enum vnic_res_type)RES_TYPE_CQ);
  
#line 201 
  enic->intr_count = vnic_dev_get_res_count(enic->vdev,(enum vnic_res_type)RES_TYPE_INTR_CTRL);
  
#line 204 
  ;
  
#line 204 
  ;
  
#line 204 
  ;
  
#line 204 
  ;
  
#line 204 
  tmp = enic_get_dev(enic);
  
#line 204 
  _dev_info((struct device const *)tmp,"vNIC resources avail: wq %d rq %d cq %d intr %d\n",enic->wq_count,enic->rq_count,enic->cq_count,enic->intr_count);
  
#line 205 
  return;
}


#line 210  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_res.c"
void enic_init_vnic_resources(struct enic *enic)
{
  enum vnic_dev_intr_mode intr_mode;
  unsigned int mask_on_assertion;
  unsigned int interrupt_offset;
  unsigned int error_interrupt_enable;
  unsigned int error_interrupt_offset;
  unsigned int cq_index;
  unsigned int i;
  
#line 220 
  intr_mode = vnic_dev_get_intr_mode(enic->vdev);
  
#line 230 
  switch ((unsigned int)intr_mode) {
    case (unsigned int)1: 
#line 231 
    ;
    case (unsigned int)3: 
#line 232 
    ;
    
#line 233 
    error_interrupt_enable = 1U;
    
#line 234 
    error_interrupt_offset = enic->intr_count + 4294967294U;
    
#line 235 
    goto ldv_46199;
    default: 
#line 236 
    ;
    
#line 237 
    error_interrupt_enable = 0U;
    
#line 238 
    error_interrupt_offset = 0U;
    
#line 239 
    goto ldv_46199;
  }
  ldv_46199: 
#line 242 
  ;
  
#line 242 
  i = 0U;
  
#line 242 
  goto ldv_46202;
  ldv_46201: 
#line 243 
  ;
  
#line 243 
  cq_index = i;
  
#line 244 
  vnic_rq_init(& enic->rq[i],cq_index,error_interrupt_enable,error_interrupt_offset);
  
#line 242 
  i += 1U;
  ldv_46202: 
#line 243 
  ;
  
#line 242 
  if (enic->rq_count > i) 
#line 244 
                          goto ldv_46201; else 
#line 247 
                                               goto ldv_46203;
  ldv_46203: 
#line 248 
  ;
  
#line 250 
  i = 0U;
  
#line 250 
  goto ldv_46205;
  ldv_46204: 
#line 251 
  ;
  
#line 251 
  cq_index = enic->rq_count + i;
  
#line 252 
  vnic_wq_init(& enic->wq[i],cq_index,error_interrupt_enable,error_interrupt_offset);
  
#line 250 
  i += 1U;
  ldv_46205: 
#line 251 
  ;
  
#line 250 
  if (enic->wq_count > i) 
#line 252 
                          goto ldv_46204; else 
#line 255 
                                               goto ldv_46206;
  ldv_46206: 
#line 256 
  ;
  
#line 264 
  i = 0U;
  
#line 264 
  goto ldv_46211;
  ldv_46210: 
#line 265 
  ;
  
#line 266 
  switch ((unsigned int)intr_mode) {
    case (unsigned int)3: 
#line 267 
    ;
    
#line 268 
    interrupt_offset = i;
    
#line 269 
    goto ldv_46208;
    default: 
#line 270 
    ;
    
#line 271 
    interrupt_offset = 0U;
    
#line 272 
    goto ldv_46208;
  }
  ldv_46208: 
#line 275 
  ;
  
#line 275 
  vnic_cq_init(& enic->cq[i],0U,1U,0U,0U,1U,1U,1U,0U,interrupt_offset,0ULL);
  
#line 264 
  i += 1U;
  ldv_46211: 
#line 265 
  ;
  
#line 264 
  if (enic->cq_count > i) 
#line 266 
                          goto ldv_46210; else 
#line 269 
                                               goto ldv_46212;
  ldv_46212: 
#line 270 
  ;
  
#line 294 
  switch ((unsigned int)intr_mode) {
    case (unsigned int)2: 
#line 295 
    ;
    case (unsigned int)3: 
#line 296 
    ;
    
#line 297 
    mask_on_assertion = 1U;
    
#line 298 
    goto ldv_46215;
    default: 
#line 299 
    ;
    
#line 300 
    mask_on_assertion = 0U;
    
#line 301 
    goto ldv_46215;
  }
  ldv_46215: 
#line 304 
  ;
  
#line 304 
  i = 0U;
  
#line 304 
  goto ldv_46218;
  ldv_46217: 
#line 305 
  ;
  
#line 305 
  vnic_intr_init(& enic->intr[i],enic->config.intr_timer_usec,(unsigned int)enic->config.intr_timer_type,mask_on_assertion);
  
#line 304 
  i += 1U;
  ldv_46218: 
#line 305 
  ;
  
#line 304 
  if (enic->intr_count > i) 
#line 306 
                            goto ldv_46217; else 
#line 309 
                                                 goto ldv_46219;
  ldv_46219: 
#line 310 
  ;
  
#line 311 
  return;
}


#line 312  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_res.c"
int enic_alloc_vnic_resources(struct enic *enic)
{
  int __retres;
  enum vnic_dev_intr_mode intr_mode;
  unsigned int i;
  int err;
  char *tmp_1;
  struct device *tmp_2;
  
#line 318 
  intr_mode = vnic_dev_get_intr_mode(enic->vdev);
  
#line 320 
  if (intr_mode != (unsigned int)VNIC_DEV_INTR_MODE_INTX) {
    char *tmp_0;
    
#line 320 
    if (intr_mode != (unsigned int)VNIC_DEV_INTR_MODE_MSI) {
      char *tmp;
      
#line 320 
      if (intr_mode == (unsigned int)VNIC_DEV_INTR_MODE_MSIX) 
#line 320 
                                                              tmp = (char *)"MSI-X"; else 
                                                                    
#line 320 
                                                                    tmp = (char *)"unknown";
      
#line 320 
      tmp_0 = tmp;
    }
    else 
#line 320 
         tmp_0 = (char *)"MSI";
    
#line 320 
    tmp_1 = tmp_0;
  }
  else 
#line 320 
       tmp_1 = (char *)"legacy PCI INTx";
  
#line 320 
  ;
  
#line 320 
  ;
  
#line 320 
  ;
  
#line 320 
  ;
  
#line 320 
  tmp_2 = enic_get_dev(enic);
  
#line 320 
  _dev_info((struct device const *)tmp_2,"vNIC resources used:  ",enic->wq_count,enic->rq_count,enic->cq_count,enic->intr_count,tmp_1);
  
#line 332 
  i = 0U;
  
#line 332 
  goto ldv_46228;
  ldv_46227: 
#line 333 
  ;
  
#line 333 
  err = vnic_wq_alloc(enic->vdev,& enic->wq[i],i,enic->config.wq_desc_count,16U);
  
#line 336 
  if (err != 0) 
#line 337 
                goto err_out_cleanup; else ;
  
#line 332 
  i += 1U;
  ldv_46228: 
#line 333 
  ;
  
#line 332 
  if (enic->wq_count > i) 
#line 334 
                          goto ldv_46227; else 
#line 337 
                                               goto ldv_46229;
  ldv_46229: 
#line 338 
  ;
  
#line 340 
  i = 0U;
  
#line 340 
  goto ldv_46231;
  ldv_46230: 
#line 341 
  ;
  
#line 341 
  err = vnic_rq_alloc(enic->vdev,& enic->rq[i],i,enic->config.rq_desc_count,16U);
  
#line 344 
  if (err != 0) 
#line 345 
                goto err_out_cleanup; else ;
  
#line 340 
  i += 1U;
  ldv_46231: 
#line 341 
  ;
  
#line 340 
  if (enic->rq_count > i) 
#line 342 
                          goto ldv_46230; else 
#line 345 
                                               goto ldv_46232;
  ldv_46232: 
#line 346 
  ;
  
#line 348 
  i = 0U;
  
#line 348 
  goto ldv_46234;
  ldv_46233: 
#line 349 
  ;
  
#line 349 
  if (enic->rq_count > i) 
#line 350 
                          err = vnic_cq_alloc(enic->vdev,& enic->cq[i],i,enic->config.rq_desc_count,16U); else 
                                                                    
#line 354 
                                                                    err = vnic_cq_alloc(enic->vdev,& enic->cq[i],i,enic->config.wq_desc_count,16U);
  
#line 357 
  if (err != 0) 
#line 358 
                goto err_out_cleanup; else ;
  
#line 348 
  i += 1U;
  ldv_46234: 
#line 349 
  ;
  
#line 348 
  if (enic->cq_count > i) 
#line 350 
                          goto ldv_46233; else 
#line 353 
                                               goto ldv_46235;
  ldv_46235: 
#line 354 
  ;
  
#line 361 
  i = 0U;
  
#line 361 
  goto ldv_46237;
  ldv_46236: 
#line 362 
  ;
  
#line 362 
  err = vnic_intr_alloc(enic->vdev,& enic->intr[i],i);
  
#line 363 
  if (err != 0) 
#line 364 
                goto err_out_cleanup; else ;
  
#line 361 
  i += 1U;
  ldv_46237: 
#line 362 
  ;
  
#line 361 
  if (enic->intr_count > i) 
#line 363 
                            goto ldv_46236; else 
#line 366 
                                                 goto ldv_46238;
  ldv_46238: 
#line 367 
  ;
  
#line 370 
  enic->legacy_pba = (u32 *)vnic_dev_get_res(enic->vdev,(enum vnic_res_type)RES_TYPE_INTR_PBA_LEGACY,0U);
  
#line 372 
  if (enic->legacy_pba == (u32 *)0U && intr_mode == (unsigned int)VNIC_DEV_INTR_MODE_INTX) {
    struct device *tmp_4;
    
#line 373 
    tmp_4 = enic_get_dev(enic);
    
#line 373 
    dev_err((struct device const *)tmp_4,"Failed to hook legacy pba resource\n");
    
#line 375 
    err = -19;
    
#line 376 
    goto err_out_cleanup;
  }
  else ;
  
#line 379 
  __retres = 0;
  
#line 379 
  goto return_label;
  err_out_cleanup: 
#line 381 
  ;
  
#line 382 
  enic_free_vnic_resources(enic);
  
#line 384 
  __retres = err;
  return_label: 
#line 384 
                return __retres;
}

void __builtin_prefetch(void const * , ...);

void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/fvtp/.tmp_enic_main.c"
void ldv_inline_asm(void);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
int snprintf(char *, size_t, char const * , ...);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-defs.h"
void __bad_size_call_parameter(void);


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bug.h"
void warn_slowpath_null(char const *, int const);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cmpxchg.h"
void __cmpxchg_wrong_size(void);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int atomic_read(atomic_t const *v)
{
  int __retres;
  int const volatile *tmp;
  {
    
#line 27 
    int const __var = 0;
    
#line 27 
    tmp = (int const volatile *)(& v->counter);
  }
  
#line 27 
  __retres = *tmp;
  
#line 27 
  return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static void atomic_set(atomic_t *v, int i)
{
  
#line 39 
  v->counter = i;
  
#line 40 
  return;
}


#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int atomic_cmpxchg(atomic_t *v, int old, int new)
{
  int tmp;
  {
    int __ret;
    
#line 181 
    int __old = old;
    
#line 181 
    int __new = new;
    
#line 181 
    switch (4UL) {
      case (unsigned long)1: 
#line 181 
      ;
      {
        
#line 181 
        u8 volatile *__ptr = (u8 volatile *)(& v->counter);
        
#line 182 
        ldv_inline_asm();
        
#line 181 
        goto ldv_5991;
      }
      case (unsigned long)2: 
#line 181 
      ;
      {
        
#line 181 
        u16 volatile *__ptr_0 = (u16 volatile *)(& v->counter);
        
#line 182 
        ldv_inline_asm();
        
#line 181 
        goto ldv_5991;
      }
      case (unsigned long)4: 
#line 181 
      ;
      {
        
#line 181 
        u32 volatile *__ptr_1 = (u32 volatile *)(& v->counter);
        
#line 182 
        ldv_inline_asm();
        
#line 181 
        goto ldv_5991;
      }
      case (unsigned long)8: 
#line 181 
      ;
      {
        
#line 181 
        u64 volatile *__ptr_2 = (u64 volatile *)(& v->counter);
        
#line 182 
        ldv_inline_asm();
        
#line 181 
        goto ldv_5991;
      }
      default: 
#line 181 
      ;
      
#line 181 
      __cmpxchg_wrong_size();
    }
    ldv_5991: 
#line 181 
    ;
    
#line 181 
    tmp = __ret;
  }
  
#line 181 
  return tmp;
}


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static int preempt_count(void)
{
  int __retres;
  int tmp;
  {
    int pfo_ret__;
    
#line 22 
    switch (4UL) {
      case (unsigned long)1: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)2: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)4: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)8: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      default: 
#line 22 
      ;
      
#line 22 
      __bad_percpu_size();
    }
    ldv_6320: 
#line 22 
    ;
    
#line 22 
    tmp = pfo_ret__;
  }
  
#line 22 
  __retres = tmp & 2147483647;
  
#line 22 
  return __retres;
}


#line 7  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
void __local_bh_disable_ip(unsigned long, unsigned int);


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
__inline static void local_bh_disable(void)
{
  __here_0: 
#line 18 
  ;
  
#line 18 
  __local_bh_disable_ip((unsigned long)((void *)0),512U);
  
#line 20 
  return;
}


#line 22 
void __local_bh_enable_ip(unsigned long, unsigned int);


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
__inline static void local_bh_enable(void)
{
  __here_0: 
#line 31 
  ;
  
#line 31 
  __local_bh_enable_ip((unsigned long)((void *)0),512U);
  
#line 33 
  return;
}


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_0(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 346 
static void ldv_spin_lock_60(spinlock_t *lock);


#line 358 
static void ldv_spin_lock_75(spinlock_t *lock);


#line 362 
static void ldv_spin_lock_80(spinlock_t *lock);


#line 366 
static void ldv_spin_lock_106(spinlock_t *lock);


#line 367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh_0(spinlock_t *lock)
{
  
#line 369 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 370 
  return;
}


#line 395 
static void ldv_spin_lock_bh_84(spinlock_t *lock);


#line 399 
static void ldv_spin_lock_bh_86(spinlock_t *lock);


#line 403 
static void ldv_spin_lock_bh_95(spinlock_t *lock);


#line 407 
static void ldv_spin_lock_bh_100(spinlock_t *lock);


#line 411 
static void ldv_spin_lock_bh_102(spinlock_t *lock);


#line 415 
static void ldv_spin_lock_bh_104(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_0(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 395 
static void ldv_spin_unlock_63(spinlock_t *lock);


#line 407 
static void ldv_spin_unlock_76(spinlock_t *lock);


#line 411 
static void ldv_spin_unlock_81(spinlock_t *lock);


#line 415 
static void ldv_spin_unlock_82(spinlock_t *lock);


#line 419 
static void ldv_spin_unlock_107(spinlock_t *lock);


#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh_0(spinlock_t *lock)
{
  
#line 422 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 423 
  return;
}


#line 452 
static void ldv_spin_unlock_bh_85(spinlock_t *lock);


#line 456 
static void ldv_spin_unlock_bh_87(spinlock_t *lock);


#line 460 
static void ldv_spin_unlock_bh_96(spinlock_t *lock);


#line 464 
static void ldv_spin_unlock_bh_101(spinlock_t *lock);


#line 468 
static void ldv_spin_unlock_bh_103(spinlock_t *lock);


#line 472 
static void ldv_spin_unlock_bh_105(spinlock_t *lock);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
__inline static s64 ktime_divns(ktime_t const kt, s64 div)
{
  s64 __retres;
  {
    
#line 194 
    int __ret_warn_on = div < 0LL;
    
#line 194 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 194 
                                          warn_slowpath_null("include/linux/ktime.h",194); else ;
    
#line 194 
    long tmp = (long)(__ret_warn_on != 0);
  }
  
#line 195 
  __retres = kt.tv64 / div;
  
#line 195 
  return __retres;
}


#line 199  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
__inline static s64 ktime_to_us(ktime_t const kt)
{
  s64 tmp;
  
#line 201 
  tmp = ktime_divns(kt,1000LL);
  
#line 201 
  return tmp;
}


#line 209  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
__inline static s64 ktime_us_delta(ktime_t const later, ktime_t const earlier)
{
  s64 tmp;
  
#line 211 
  ktime_t __constr_expr_12 = {.tv64 = later.tv64 - earlier.tv64};
  
#line 211 
  tmp = ktime_to_us(__constr_expr_12);
  
#line 211 
  return tmp;
}


#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timekeeping.h"
ktime_t ktime_get(void);


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 177 
static int ldv_mod_timer_88(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 181 
static int ldv_mod_timer_97(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 236 
static int ldv_del_timer_sync_98(struct timer_list *ldv_func_arg1);


#line 240 
static int ldv_del_timer_sync_99(struct timer_list *ldv_func_arg1);


#line 252 
unsigned long round_jiffies(unsigned long);


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void __init_work(struct work_struct *, int);


#line 444 
bool cancel_work_sync(struct work_struct *);


#line 560 
static bool ldv_schedule_work_77(struct work_struct *work);


#line 564 
static bool ldv_schedule_work_78(struct work_struct *work);


#line 568 
static bool ldv_schedule_work_79(struct work_struct *work);


#line 572 
static bool ldv_schedule_work_83(struct work_struct *work);


#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
void iounmap(void volatile *);


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/iomap.h"
unsigned int ioread32(void *);


#line 37 
void iowrite32(u32, void *);


#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci_iomap.h"
void *pci_iomap(struct pci_dev *, int, unsigned long);


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hardirq.h"
void synchronize_irq(unsigned int);


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_92(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 145 
static int ldv_request_irq_93(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 149 
static int ldv_request_irq_94(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 161 
static void ldv_free_irq_89(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 165 
static void ldv_free_irq_90(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 169 
static void ldv_free_irq_91(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 1085 
void dev_warn(struct device const *, char const * , ...);


#line 424  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
long schedule_timeout_uninterruptible(long);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 542 
static void *kcalloc(size_t n, size_t size, gfp_t flags);


#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
int pci_find_ext_capability(struct pci_dev *, int);


#line 861 
int pci_bus_read_config_word(struct pci_bus *, unsigned int, int, u16 *);


#line 887  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_word(struct pci_dev const *dev, int where, u16 *val)
{
  int tmp;
  
#line 889 
  tmp = pci_bus_read_config_word(dev->bus,dev->devfn,where,val);
  
#line 889 
  return tmp;
}


#line 953 
int pci_enable_device_mem(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 1094 
int pci_request_regions(struct pci_dev *, char const *);


#line 1096 
void pci_release_regions(struct pci_dev *);


#line 1146 
static int ldv___pci_register_driver_113(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_114(struct pci_driver *ldv_func_arg1);


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page const *page)
{
  void *__retres;
  
#line 947 
  __retres = (void *)((unsigned long)((unsigned long long)(((long)page + 24189255811072L) / 64L) << 12) + 18446612132314218496UL);
  
#line 947 
  return __retres;
}


#line 1212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
void pci_disable_msi(struct pci_dev *);


#line 1216 
void pci_disable_msix(struct pci_dev *);


#line 1219 
int pci_enable_msi_range(struct pci_dev *, int, int);


#line 1220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_enable_msi_exact(struct pci_dev *dev, int nvec)
{
  int __retres;
  
#line 1222 
  int rc = pci_enable_msi_range(dev,nvec,nvec);
  
#line 1223 
  if (rc < 0) {
    
#line 1224 
    __retres = rc;
    
#line 1224 
    goto return_label;
  }
  else ;
  
#line 1225 
  __retres = 0;
  return_label: 
#line 1225 
                return __retres;
}


#line 1227 
int pci_enable_msix_range(struct pci_dev *, struct msix_entry *, int, int);


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 42 
void debug_dma_mapping_error(struct device *, dma_addr_t);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 59 
void debug_dma_sync_single_for_cpu(struct device *, dma_addr_t, size_t, int);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_page(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t addr;
  void *tmp_0;
  int tmp_1;
  
#line 80 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 83 
  ;
  
#line 83 
  tmp_0 = lowmem_page_address((struct page const *)page);
  
#line 83 
  ;
  
#line 83 
  kmemcheck_mark_initialized(tmp_0 + offset,(unsigned int)size);
  
#line 84 
  tmp_1 = valid_dma_direction((int)dir);
  
#line 84 
  if ((long)(tmp_1 == 0) != 0L) {
    
#line 86 
    ldv_inline_asm();
    
#line 84 
    ;
  }
  else ;
  
#line 85 
  addr = (*(ops->map_page))(dev,page,offset,size,dir,(struct dma_attrs *)0);
  
#line 86 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr,(_Bool)0);
  
#line 88 
  return addr;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_page(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 94 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 96 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 96 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 98 
    ldv_inline_asm();
    
#line 96 
    ;
  }
  else ;
  
#line 97 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 98 
    (*(ops->unmap_page))(dev,addr,size,dir,(struct dma_attrs *)0); else ;
  
#line 99 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)0);
  
#line 100 
  return;
}


#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_for_cpu(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 106 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 108 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 108 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 110 
    ldv_inline_asm();
    
#line 108 
    ;
  }
  else ;
  
#line 109 
  if (ops->sync_single_for_cpu != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 110 
    (*(ops->sync_single_for_cpu))(dev,addr,size,dir); else ;
  
#line 111 
  debug_dma_sync_single_for_cpu(dev,addr,size,(int)dir);
  
#line 112 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  int __retres;
  
#line 49 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 50 
  debug_dma_mapping_error(dev,dma_addr);
  
#line 51 
  if (ops->mapping_error != (int (*)(struct device *, dma_addr_t ))0) {
    int tmp_0;
    
#line 52 
    tmp_0 = (*(ops->mapping_error))(dev,dma_addr);
    
#line 52 
    __retres = tmp_0;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 54 
  __retres = dma_addr == 0ULL;
  return_label: 
#line 54 
                return __retres;
}


#line 60 
int dma_supported(struct device *, u64);


#line 61 
int dma_set_mask(struct device *, u64);


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_coherent_mask(struct device *dev, u64 mask)
{
  int __retres;
  int tmp;
  
#line 103 
  tmp = dma_supported(dev,mask);
  
#line 103 
  if (tmp == 0) {
    
#line 104 
    __retres = -5;
    
#line 104 
    goto return_label;
  }
  else ;
  
#line 105 
  dev->coherent_dma_mask = mask;
  
#line 106 
  __retres = 0;
  return_label: 
#line 106 
                return __retres;
}


#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static void *dma_zalloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_handle, gfp_t flag)
{
  
#line 186 
  void *ret = dma_alloc_attrs(dev,size,dma_handle,flag | 32768U,(struct dma_attrs *)0);
  
#line 188 
  return ret;
}


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void *pci_alloc_consistent(struct pci_dev *hwdev, size_t size, dma_addr_t *dma_handle)
{
  void *tmp_0;
  struct device *tmp;
  
#line 19 
  ;
  
#line 19 
  ;
  
#line 19 
  if (hwdev != (struct pci_dev *)0) 
#line 19 
                                    tmp = & hwdev->dev; else 
#line 19 
                                                             tmp = (struct device *)0;
  
#line 19 
  tmp_0 = dma_alloc_attrs(tmp,size,dma_handle,32U,(struct dma_attrs *)0);
  
#line 19 
  return tmp_0;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void *pci_zalloc_consistent(struct pci_dev *hwdev, size_t size, dma_addr_t *dma_handle)
{
  void *tmp_0;
  struct device *tmp;
  
#line 26 
  ;
  
#line 26 
  ;
  
#line 26 
  if (hwdev != (struct pci_dev *)0) 
#line 26 
                                    tmp = & hwdev->dev; else 
#line 26 
                                                             tmp = (struct device *)0;
  
#line 26 
  tmp_0 = dma_zalloc_coherent(tmp,size,dma_handle,32U);
  
#line 26 
  return tmp_0;
}


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_free_consistent(struct pci_dev *hwdev, size_t size, void *vaddr, dma_addr_t dma_handle)
{
  struct device *tmp;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  if (hwdev != (struct pci_dev *)0) 
#line 34 
                                    tmp = & hwdev->dev; else 
#line 34 
                                                             tmp = (struct device *)0;
  
#line 34 
  dma_free_attrs(tmp,size,vaddr,dma_handle,(struct dma_attrs *)0);
  
#line 35 
  return;
}


#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static dma_addr_t pci_map_single(struct pci_dev *hwdev, void *ptr, size_t size, int direction)
{
  dma_addr_t tmp_0;
  struct device *tmp;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  if (hwdev != (struct pci_dev *)0) 
#line 40 
                                    tmp = & hwdev->dev; else 
#line 40 
                                                             tmp = (struct device *)0;
  
#line 40 
  tmp_0 = dma_map_single_attrs(tmp,ptr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 40 
  return tmp_0;
}


#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_unmap_single(struct pci_dev *hwdev, dma_addr_t dma_addr, size_t size, int direction)
{
  struct device *tmp;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  if (hwdev != (struct pci_dev *)0) 
#line 47 
                                    tmp = & hwdev->dev; else 
#line 47 
                                                             tmp = (struct device *)0;
  
#line 47 
  dma_unmap_single_attrs(tmp,dma_addr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 48 
  return;
}


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_unmap_page(struct pci_dev *hwdev, dma_addr_t dma_address, size_t size, int direction)
{
  struct device *tmp;
  
#line 61 
  ;
  
#line 61 
  ;
  
#line 61 
  ;
  
#line 61 
  if (hwdev != (struct pci_dev *)0) 
#line 61 
                                    tmp = & hwdev->dev; else 
#line 61 
                                                             tmp = (struct device *)0;
  
#line 61 
  dma_unmap_page(tmp,dma_address,size,(enum dma_data_direction)direction);
  
#line 62 
  return;
}


#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_dma_sync_single_for_cpu(struct pci_dev *hwdev, dma_addr_t dma_handle, size_t size, int direction)
{
  struct device *tmp;
  
#line 82 
  ;
  
#line 82 
  ;
  
#line 82 
  ;
  
#line 82 
  if (hwdev != (struct pci_dev *)0) 
#line 82 
                                    tmp = & hwdev->dev; else 
#line 82 
                                                             tmp = (struct device *)0;
  
#line 82 
  dma_sync_single_for_cpu(tmp,dma_handle,size,(enum dma_data_direction)direction);
  
#line 83 
  return;
}


#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_dma_mapping_error(struct pci_dev *pdev, dma_addr_t dma_addr)
{
  int tmp;
  
#line 109 
  tmp = dma_mapping_error(& pdev->dev,dma_addr);
  
#line 109 
  return tmp;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 115 
  tmp = dma_set_mask(& dev->dev,mask);
  
#line 115 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_consistent_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 120 
  tmp = dma_set_coherent_mask(& dev->dev,mask);
  
#line 120 
  return tmp;
}


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  
#line 1478 
  dev_set_drvdata(& pdev->dev,data);
  
#line 1479 
  return;
}


#line 1672 
int pci_enable_sriov(struct pci_dev *, int);


#line 1673 
void pci_disable_sriov(struct pci_dev *);


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
void get_random_bytes(void *, int);


#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
int net_ratelimit(void);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static __sum16 csum_fold(__wsum sum)
{
  __sum16 __retres;
  
#line 24 
  ldv_inline_asm();
  
#line 29 
  __retres = (unsigned short)(~ sum >> 16);
  
#line 29 
  return __retres;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static __wsum csum_tcpudp_nofold(__be32 saddr, __be32 daddr, unsigned short len, unsigned short proto, __wsum sum)
{
  
#line 89 
  ldv_inline_asm();
  
#line 97 
  return sum;
}


#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static __sum16 csum_tcpudp_magic(__be32 saddr, __be32 daddr, unsigned short len, unsigned short proto, __wsum sum)
{
  __sum16 tmp_0;
  __wsum tmp;
  
#line 116 
  tmp = csum_tcpudp_nofold(saddr,daddr,(unsigned short)((int)len),(unsigned short)((int)proto),sum);
  
#line 116 
  tmp_0 = csum_fold(tmp);
  
#line 116 
  return tmp_0;
}


#line 179 
__sum16 csum_ipv6_magic(struct in6_addr const *, struct in6_addr const *, __u32, unsigned short, __wsum);


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_frag_size(skb_frag_t const *frag)
{
  unsigned int __retres;
  
#line 232 
  __retres = frag->size;
  
#line 232 
  return __retres;
}


#line 775 
void consume_skb(struct sk_buff *);


#line 926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_set_hash(struct sk_buff *skb, __u32 hash, enum pkt_hash_types type)
{
  
#line 928 
  skb->l4_hash = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))(type == (unsigned int)PKT_HASH_TYPE_L4);
  
#line 929 
  skb->sw_hash = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
  
#line 930 
  skb->hash = hash;
  
#line 931 
  return;
}


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_nonlinear(struct sk_buff const *skb)
{
  bool __retres;
  
#line 1569 
  __retres = (_Bool)(skb->data_len != 0U);
  
#line 1569 
  return __retres;
}


#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1574 
  __retres = skb->len - skb->data_len;
  
#line 1574 
  return __retres;
}


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1719 
unsigned char *__pskb_pull_tail(struct sk_buff *, int);


#line 1750  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headroom(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1752 
  __retres = (unsigned int)((long)skb->data - (long)skb->head);
  
#line 1752 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_transport_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1882 
  __retres = skb->head + (int)skb->transport_header;
  
#line 1882 
  return __retres;
}


#line 1897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_network_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1899 
  __retres = skb->head + (int)skb->network_header;
  
#line 1899 
  return __retres;
}


#line 1962  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_checksum_start_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned int tmp;
  
#line 1964 
  tmp = skb_headroom(skb);
  
#line 1964 
  ;
  
#line 1964 
  __retres = (int)((unsigned int)skb->__anonCompField_sk_buff_80.__anonCompField___anonunion_270_79.csum_start - tmp);
  
#line 1964 
  return __retres;
}


#line 1967  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_transport_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned char *tmp;
  
#line 1969 
  tmp = skb_transport_header(skb);
  
#line 1969 
  ;
  
#line 1969 
  __retres = (int)((long)tmp - (long)skb->data);
  
#line 1969 
  return __retres;
}


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *__netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length, gfp_t gfp)
{
  
#line 2179 
  struct sk_buff *skb = __netdev_alloc_skb(dev,length,gfp);
  
#line 2183 
  return skb;
}


#line 2186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2189 
  tmp = __netdev_alloc_skb_ip_align(dev,length,32U);
  
#line 2189 
  return tmp;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t const *frag)
{
  struct page *__retres;
  
#line 2274 
  __retres = frag->page.p;
  
#line 2274 
  return __retres;
}


#line 2390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static dma_addr_t skb_frag_dma_map(struct device *dev, skb_frag_t const *frag, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t tmp_0;
  struct page *tmp;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  tmp = skb_frag_page(frag);
  
#line 2395 
  ;
  
#line 2395 
  tmp_0 = dma_map_page(dev,tmp,(unsigned long)frag->page_offset + offset,size,dir);
  
#line 2395 
  return tmp_0;
}


#line 2545  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int __skb_linearize(struct sk_buff *skb)
{
  int tmp_0;
  unsigned char *tmp;
  
#line 2547 
  tmp = __pskb_pull_tail(skb,(int)skb->data_len);
  
#line 2547 
  if (tmp != (unsigned char *)0U) 
#line 2547 
                                  tmp_0 = 0; else 
#line 2547 
                                                  tmp_0 = -12;
  
#line 2547 
  return tmp_0;
}


#line 2557  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_linearize(struct sk_buff *skb)
{
  int tmp_1;
  bool tmp;
  
#line 2559 
  tmp = skb_is_nonlinear((struct sk_buff const *)skb);
  
#line 2559 
  if ((int)tmp != 0) 
#line 2559 
                     tmp_1 = __skb_linearize(skb); else 
#line 2559 
                                                        tmp_1 = 0;
  
#line 2559 
  return tmp_1;
}


#line 3295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static u16 skb_get_queue_mapping(struct sk_buff const *skb)
{
  u16 __retres;
  
#line 3297 
  __retres = skb->queue_mapping;
  
#line 3297 
  return __retres;
}


#line 3305  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_record_rx_queue(struct sk_buff *skb, u16 rx_queue)
{
  
#line 3307 
  skb->queue_mapping = (unsigned short)((unsigned int)rx_queue + 1U);
  
#line 3308 
  return;
}


#line 392  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule_irqoff(struct napi_struct *);


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_disable_pending(struct napi_struct *n)
{
  bool __retres;
  int tmp;
  
#line 396 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& n->state));
  
#line 396 
  __retres = (_Bool)(tmp != 0);
  
#line 396 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_schedule_prep(struct napi_struct *n)
{
  bool __retres;
  int tmp_2;
  int tmp_0;
  bool tmp;
  
#line 410 
  tmp = napi_disable_pending(n);
  
#line 410 
  if (tmp) 
#line 410 
           tmp_0 = 0; else 
#line 410 
                           tmp_0 = 1;
  
#line 410 
  if (tmp_0) {
    int tmp_1;
    
#line 410 
    tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& n->state));
    
#line 410 
    if (tmp_1 == 0) 
#line 410 
                    tmp_2 = 1; else 
#line 410 
                                    tmp_2 = 0;
  }
  else 
#line 410 
       tmp_2 = 0;
  
#line 410 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 410 
  return __retres;
}


#line 433  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_schedule_irqoff(struct napi_struct *n)
{
  bool tmp;
  
#line 435 
  tmp = napi_schedule_prep(n);
  
#line 435 
  if ((int)tmp != 0) 
#line 436 
                     __napi_schedule_irqoff(n); else ;
  
#line 437 
  return;
}


#line 450 
void napi_complete_done(struct napi_struct *, int);


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_complete(struct napi_struct *n)
{
  
#line 460 
  napi_complete_done(n,0);
  
#line 461 
  return;
}


#line 478 
void napi_hash_add(struct napi_struct *);


#line 487 
void napi_hash_del(struct napi_struct *);


#line 496 
void napi_disable(struct napi_struct *);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  int tmp;
  
#line 507 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 507 
  if ((long)(tmp == 0) != 0L) {
    
#line 509 
    ldv_inline_asm();
    
#line 507 
    ;
  }
  else ;
  
#line 509 
  ldv_inline_asm();
  
#line 509 
  set_bit(0L,(unsigned long volatile *)(& n->state));
  
#line 510 
  return;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1911 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);


#line 1920 
void netif_napi_del(struct napi_struct *);


#line 2108 
int call_netdevice_notifiers(unsigned long, struct net_device *);


#line 2205 
static void ldv_free_netdev_110(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_112(struct net_device *ldv_func_arg1);


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_wake_all_queues(struct net_device *dev)
{
  unsigned int i;
  
#line 2559 
  i = 0U;
  
#line 2559 
  goto ldv_44959;
  ldv_44958: 
#line 2560 
  ;
  {
    
#line 2560 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 2561 
    netif_tx_wake_queue(txq);
  }
  
#line 2559 
  i += 1U;
  ldv_44959: 
#line 2560 
  ;
  
#line 2559 
  if (dev->num_tx_queues > i) 
#line 2561 
                              goto ldv_44958; else 
#line 2564 
                                                   goto ldv_44960;
  ldv_44960: 
#line 2565 
  ;
  
#line 2566 
  return;
}


#line 2565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_stop_queue(struct netdev_queue *dev_queue)
{
  
#line 2567 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2568 
  return;
}


#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_tx_queue_stopped(struct netdev_queue const *dev_queue)
{
  bool __retres;
  int tmp;
  
#line 2586 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev_queue->state));
  
#line 2586 
  __retres = (_Bool)(tmp != 0);
  
#line 2586 
  return __retres;
}


#line 2600  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_xmit_stopped(struct netdev_queue const *dev_queue)
{
  bool __retres;
  
#line 2602 
  __retres = (_Bool)((dev_queue->state & 3UL) != 0UL);
  
#line 2602 
  return __retres;
}


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 2829 
void netif_wake_subqueue(struct net_device *, u16);


#line 2867 
int netif_set_real_num_tx_queues(struct net_device *, unsigned int);


#line 2870 
int netif_set_real_num_rx_queues(struct net_device *, unsigned int);


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2943 
int netif_receive_skb_sk(struct sock *, struct sk_buff *);


#line 2944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int netif_receive_skb(struct sk_buff *skb)
{
  int tmp;
  
#line 2946 
  tmp = netif_receive_skb_sk(skb->sk,skb);
  
#line 2946 
  return tmp;
}


#line 2948 
gro_result_t napi_gro_receive(struct napi_struct *, struct sk_buff *);


#line 2949 
void napi_gro_flush(struct napi_struct *, bool);


#line 3038  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_carrier_ok(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 3040 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& dev->state));
  
#line 3040 
  __retres = (_Bool)(tmp == 0);
  
#line 3040 
  return __retres;
}


#line 3047 
void netif_carrier_on(struct net_device *);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_lock(struct netdev_queue *txq, int cpu)
{
  
#line 3172 
  ldv_spin_lock_60(& txq->_xmit_lock);
  
#line 3173 
  txq->xmit_lock_owner = cpu;
  
#line 3174 
  return;
}


#line 3190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_unlock(struct netdev_queue *txq)
{
  
#line 3192 
  txq->xmit_lock_owner = -1;
  
#line 3193 
  ldv_spin_unlock_63(& txq->_xmit_lock);
  
#line 3194 
  return;
}


#line 3282  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_disable(struct net_device *dev)
{
  unsigned int i;
  int cpu;
  int tmp_3;
  
#line 3287 
  local_bh_disable();
  {
    int pscr_ret__;
    {
      
#line 3288 
      void const *__vpp_verify = (void const *)0;
      
#line 3288 
      void const *tmp = __vpp_verify;
    }
    
#line 3288 
    switch (4UL) {
      int tmp_0;
      int tmp_0_0;
      int tmp_1;
      int tmp_2;
      case (unsigned long)1: 
#line 3288 
      ;
      {
        int pfo_ret__;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45520;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45520;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45520;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45520;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_45520: 
#line 3288 
        ;
        
#line 3288 
        tmp_0 = pfo_ret__;
      }
      
#line 3288 
      pscr_ret__ = tmp_0;
      
#line 3288 
      goto ldv_45526;
      case (unsigned long)2: 
#line 3288 
      ;
      {
        int pfo_ret___0;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45530;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45530;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45530;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45530;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_45530: 
#line 3288 
        ;
        
#line 3288 
        tmp_0_0 = pfo_ret___0;
      }
      
#line 3288 
      pscr_ret__ = tmp_0_0;
      
#line 3288 
      goto ldv_45526;
      case (unsigned long)4: 
#line 3288 
      ;
      {
        int pfo_ret___1;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45539;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45539;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45539;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45539;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_45539: 
#line 3288 
        ;
        
#line 3288 
        tmp_1 = pfo_ret___1;
      }
      
#line 3288 
      pscr_ret__ = tmp_1;
      
#line 3288 
      goto ldv_45526;
      case (unsigned long)8: 
#line 3288 
      ;
      {
        int pfo_ret___2;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45548;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45548;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45548;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45548;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_45548: 
#line 3288 
        ;
        
#line 3288 
        tmp_2 = pfo_ret___2;
      }
      
#line 3288 
      pscr_ret__ = tmp_2;
      
#line 3288 
      goto ldv_45526;
      default: 
#line 3288 
      ;
      
#line 3288 
      __bad_size_call_parameter();
      
#line 3288 
      goto ldv_45526;
    }
    ldv_45526: 
#line 3288 
    ;
    
#line 3288 
    tmp_3 = pscr_ret__;
  }
  
#line 3288 
  cpu = tmp_3;
  
#line 3289 
  i = 0U;
  
#line 3289 
  goto ldv_45558;
  ldv_45557: 
#line 3290 
  ;
  {
    
#line 3290 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 3292 
    __netif_tx_lock(txq,cpu);
    
#line 3293 
    netif_tx_stop_queue(txq);
    
#line 3294 
    __netif_tx_unlock(txq);
  }
  
#line 3289 
  i += 1U;
  ldv_45558: 
#line 3290 
  ;
  
#line 3289 
  if (dev->num_tx_queues > i) 
#line 3291 
                              goto ldv_45557; else 
#line 3294 
                                                   goto ldv_45559;
  ldv_45559: 
#line 3295 
  ;
  
#line 3296 
  local_bh_enable();
  
#line 3297 
  return;
}


#line 3355 
static int ldv_register_netdev_109(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_111(struct net_device *ldv_func_arg1);


#line 3368 
int __hw_addr_sync_dev(struct netdev_hw_addr_list *, struct net_device *, int (*)(struct net_device *, unsigned char const *), int (*)(struct net_device *, unsigned char const *));


#line 3373 
void __hw_addr_unsync_dev(struct netdev_hw_addr_list *, struct net_device *, int (*)(struct net_device *, unsigned char const *));


#line 3398  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int __dev_uc_sync(struct net_device *dev, int (*sync)(struct net_device *, unsigned char const *), int (*unsync)(struct net_device *, unsigned char const *))
{
  int tmp;
  
#line 3404 
  tmp = __hw_addr_sync_dev(& dev->uc,dev,sync,unsync);
  
#line 3404 
  return tmp;
}


#line 3414  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __dev_uc_unsync(struct net_device *dev, int (*unsync)(struct net_device *, unsigned char const *))
{
  
#line 3418 
  __hw_addr_unsync_dev(& dev->uc,dev,unsync);
  
#line 3419 
  return;
}


#line 3442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int __dev_mc_sync(struct net_device *dev, int (*sync)(struct net_device *, unsigned char const *), int (*unsync)(struct net_device *, unsigned char const *))
{
  int tmp;
  
#line 3448 
  tmp = __hw_addr_sync_dev(& dev->mc,dev,sync,unsync);
  
#line 3448 
  return tmp;
}


#line 3458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __dev_mc_unsync(struct net_device *dev, int (*unsync)(struct net_device *, unsigned char const *))
{
  
#line 3462 
  __hw_addr_unsync_dev(& dev->mc,dev,unsync);
  
#line 3463 
  return;
}


#line 3549 
void netdev_rss_key_fill(void *, size_t);


#line 3828 
void netdev_err(struct net_device const *, char const * , ...);


#line 3830 
void netdev_warn(struct net_device const *, char const * , ...);


#line 3834 
void netdev_info(struct net_device const *, char const * , ...);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 47 
int eth_validate_addr(struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_108(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 const *addr)
{
  bool __retres;
  int tmp_3;
  int tmp_0;
  bool tmp;
  
#line 190 
  tmp = is_multicast_ether_addr(addr);
  
#line 190 
  if (tmp) 
#line 190 
           tmp_0 = 0; else 
#line 190 
                           tmp_0 = 1;
  
#line 190 
  if (tmp_0) {
    int tmp_2;
    bool tmp_1;
    
#line 190 
    tmp_1 = is_zero_ether_addr(addr);
    
#line 190 
    if (tmp_1) 
#line 190 
               tmp_2 = 0; else 
#line 190 
                               tmp_2 = 1;
    
#line 190 
    if (tmp_2) 
#line 190 
               tmp_3 = 1; else 
#line 190 
                               tmp_3 = 0;
  }
  else 
#line 190 
       tmp_3 = 0;
  
#line 190 
  __retres = (_Bool)(tmp_3 != 0);
  
#line 190 
  return __retres;
}


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_random_addr(u8 *addr)
{
  
#line 220 
  get_random_bytes((void *)addr,6);
  
#line 221 
  *addr = (unsigned char)((unsigned int)*addr & 254U);
  
#line 222 
  *addr = (unsigned char)((unsigned int)*addr | 2U);
  
#line 223 
  return;
}


#line 244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_zero_addr(u8 *addr)
{
  
#line 246 
  memset((void *)addr,0,6UL);
  
#line 247 
  return;
}


#line 258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_hw_addr_random(struct net_device *dev)
{
  
#line 260 
  dev->addr_assign_type = (unsigned char)1U;
  
#line 261 
  eth_random_addr(dev->dev_addr);
  
#line 262 
  return;
}


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
void rtnl_lock(void);


#line 28 
void rtnl_unlock(void);


#line 409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static void __vlan_hwaccel_put_tag(struct sk_buff *skb, __be16 vlan_proto, u16 vlan_tci)
{
  
#line 412 
  skb->vlan_proto = vlan_proto;
  
#line 413 
  skb->vlan_tci = (unsigned short)((unsigned int)vlan_tci | 4096U);
  
#line 414 
  return;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ip.h"
__inline static struct iphdr *ip_hdr(struct sk_buff const *skb)
{
  struct iphdr *tmp;
  
#line 25 
  tmp = (struct iphdr *)skb_network_header(skb);
  
#line 25 
  return tmp;
}


#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
int nla_put(struct sk_buff *, int, int, void const *);


#line 669  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static void *nla_data(struct nlattr const *nla)
{
  void *__retres;
  
#line 671 
  __retres = (void *)nla + 4U;
  
#line 671 
  return __retres;
}


#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static int nla_put_u16(struct sk_buff *skb, int attrtype, u16 value)
{
  int tmp;
  
#line 759 
  tmp = nla_put(skb,attrtype,2,(void const *)(& value));
  
#line 759 
  return tmp;
}


#line 1037  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netlink.h"
__inline static u8 nla_get_u8(struct nlattr const *nla)
{
  u8 __retres;
  void *tmp;
  
#line 1039 
  tmp = nla_data(nla);
  
#line 1039 
  __retres = *((u8 *)tmp);
  
#line 1039 
  return __retres;
}


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static struct tcphdr *tcp_hdr(struct sk_buff const *skb)
{
  struct tcphdr *tmp;
  
#line 29 
  tmp = (struct tcphdr *)skb_transport_header(skb);
  
#line 29 
  return tmp;
}


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static unsigned int tcp_hdrlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  struct tcphdr *tmp;
  
#line 34 
  tmp = tcp_hdr(skb);
  
#line 34 
  ;
  
#line 34 
  __retres = (unsigned int)((int)tmp->doff * 4);
  
#line 34 
  return __retres;
}


#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
__inline static struct ipv6hdr *ipv6_hdr(struct sk_buff const *skb)
{
  struct ipv6hdr *tmp;
  
#line 76 
  tmp = (struct ipv6hdr *)skb_network_header(skb);
  
#line 76 
  return tmp;
}


#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpu_rmap.h"
struct cpu_rmap *alloc_cpu_rmap(unsigned int, gfp_t);


#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpu_rmap.h"
__inline static struct cpu_rmap *alloc_irq_cpu_rmap(unsigned int size)
{
  struct cpu_rmap *tmp;
  
#line 63 
  tmp = alloc_cpu_rmap(size,208U);
  
#line 63 
  return tmp;
}


#line 65 
void free_irq_cpu_rmap(struct cpu_rmap *);


#line 67 
int irq_cpu_rmap_add(struct cpu_rmap *, int);


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/busy_poll.h"
__inline static void skb_mark_napi_id(struct sk_buff *skb, struct napi_struct *napi)
{
  
#line 124 
  skb->__anonCompField_sk_buff_81.napi_id = napi->napi_id;
  
#line 125 
  return;
}


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crash_dump.h"
extern unsigned long long elfcorehdr_addr;


#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crash_dump.h"
__inline static int is_kdump_kernel(void)
{
  int __retres;
  
#line 56 
  __retres = elfcorehdr_addr != 18446744073709551615ULL;
  
#line 56 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/cq_desc.h"
__inline static void cq_desc_dec(struct cq_desc const *desc_arg, u8 *type, u8 *color, u16 *q_number, u16 *completed_index)
{
  
#line 59 
  struct cq_desc const *desc = desc_arg;
  
#line 60 
  u8 const type_color = desc->type_color;
  
#line 62 
  *color = (unsigned char)((int)type_color >> 7);
  
#line 63 
  ldv_inline_asm();
  
#line 74 
  *type = (unsigned char)((unsigned int)type_color & 15U);
  
#line 75 
  *q_number = (unsigned short)((unsigned int)desc->q_number & 1023U);
  
#line 76 
  *completed_index = (unsigned short)((unsigned int)desc->completed_index & 4095U);
  
#line 77 
  return;
}


#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/cq_enet_desc.h"
__inline static void cq_enet_rq_desc_dec(struct cq_enet_rq_desc *desc, u8 *type, u8 *color, u16 *q_number, u16 *completed_index, u8 *ingress_port, u8 *fcoe, u8 *eop, u8 *sop, u8 *rss_type, u8 *csum_not_calc, u32 *rss_hash, u16 *bytes_written, u8 *packet_error, u8 *vlan_stripped, u16 *vlan_tci, u16 *checksum, u8 *fcoe_sof, u8 *fcoe_fc_crc_ok, u8 *fcoe_enc_error, u8 *fcoe_eof, u8 *tcp_udp_csum_ok, u8 *udp, u8 *tcp, u8 *ipv4_csum_ok, u8 *ipv6, u8 *ipv4, u8 *ipv4_fragment, u8 *fcs_ok)
{
  u16 completed_index_flags;
  u16 q_number_rss_type_flags;
  u16 bytes_written_flags;
  
#line 117 
  cq_desc_dec((struct cq_desc const *)desc,type,color,q_number,completed_index);
  
#line 120 
  completed_index_flags = desc->completed_index_flags;
  
#line 121 
  q_number_rss_type_flags = desc->q_number_rss_type_flags;
  
#line 123 
  bytes_written_flags = desc->bytes_written_flags;
  
#line 125 
  *ingress_port = (unsigned char)((unsigned int)((unsigned char)((int)completed_index_flags >> 12)) & 1U);
  
#line 127 
  *fcoe = (unsigned char)((unsigned int)((unsigned char)((int)completed_index_flags >> 13)) & 1U);
  
#line 129 
  *eop = (unsigned char)((unsigned int)((unsigned char)((int)completed_index_flags >> 14)) & 1U);
  
#line 131 
  *sop = (unsigned char)((unsigned int)((unsigned char)((int)completed_index_flags >> 15)) & 1U);
  
#line 134 
  *rss_type = (unsigned char)((unsigned int)((unsigned char)((int)q_number_rss_type_flags >> 10)) & 15U);
  
#line 136 
  *csum_not_calc = (unsigned char)((unsigned int)((unsigned char)((int)q_number_rss_type_flags >> 14)) & 1U);
  
#line 139 
  *rss_hash = desc->rss_hash;
  
#line 141 
  *bytes_written = (unsigned short)((unsigned int)bytes_written_flags & 16383U);
  
#line 143 
  *packet_error = (unsigned char)((unsigned int)((unsigned char)((int)bytes_written_flags >> 14)) & 1U);
  
#line 145 
  *vlan_stripped = (unsigned char)((unsigned int)((unsigned char)((int)bytes_written_flags >> 15)) & 1U);
  
#line 151 
  *vlan_tci = desc->vlan;
  
#line 153 
  if ((unsigned int)*fcoe != 0U) {
    
#line 154 
    *fcoe_sof = (unsigned char)desc->checksum_fcoe;
    
#line 156 
    *fcoe_fc_crc_ok = (unsigned char)((unsigned int)desc->flags & 1U);
    
#line 158 
    *fcoe_enc_error = (unsigned char)((unsigned int)((unsigned char)((int)desc->flags >> 1)) & 1U);
    
#line 160 
    *fcoe_eof = (unsigned char)((int)desc->checksum_fcoe >> 8);
    
#line 163 
    *checksum = (unsigned short)0U;
  }
  else {
    
#line 165 
    *fcoe_sof = (unsigned char)0U;
    
#line 166 
    *fcoe_fc_crc_ok = (unsigned char)0U;
    
#line 167 
    *fcoe_enc_error = (unsigned char)0U;
    
#line 168 
    *fcoe_eof = (unsigned char)0U;
    
#line 169 
    *checksum = desc->checksum_fcoe;
  }
  
#line 172 
  *tcp_udp_csum_ok = (unsigned char)((unsigned int)desc->flags & 1U);
  
#line 174 
  *udp = (unsigned char)((unsigned int)((unsigned char)((int)desc->flags >> 1)) & 1U);
  
#line 175 
  *tcp = (unsigned char)((unsigned int)((unsigned char)((int)desc->flags >> 2)) & 1U);
  
#line 176 
  *ipv4_csum_ok = (unsigned char)((unsigned int)((unsigned char)((int)desc->flags >> 3)) & 1U);
  
#line 178 
  *ipv6 = (unsigned char)((unsigned int)((unsigned char)((int)desc->flags >> 4)) & 1U);
  
#line 179 
  *ipv4 = (unsigned char)((unsigned int)((unsigned char)((int)desc->flags >> 5)) & 1U);
  
#line 180 
  *ipv4_fragment = (unsigned char)((unsigned int)((unsigned char)((int)desc->flags >> 6)) & 1U);
  
#line 182 
  *fcs_ok = (unsigned char)((int)desc->flags >> 7);
  
#line 183 
  return;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.h"
void *vnic_dev_priv(struct vnic_dev *vdev);


#line 101 
int vnic_dev_notify_set(struct vnic_dev *vdev, u16 intr);


#line 103 
int vnic_dev_link_status(struct vnic_dev *vdev);


#line 104 
u32 vnic_dev_port_speed(struct vnic_dev *vdev);


#line 105 
u32 vnic_dev_msg_lvl(struct vnic_dev *vdev);


#line 106 
u32 vnic_dev_mtu(struct vnic_dev *vdev);


#line 107 
int vnic_dev_close(struct vnic_dev *vdev);


#line 110 
int vnic_dev_open(struct vnic_dev *vdev, int arg);


#line 111 
int vnic_dev_open_done(struct vnic_dev *vdev, int *done);


#line 112 
int vnic_dev_init(struct vnic_dev *vdev, int arg);


#line 114 
void vnic_dev_intr_coal_timer_info_default(struct vnic_dev *vdev);


#line 116 
int vnic_dev_hang_reset(struct vnic_dev *vdev, int arg);


#line 117 
int vnic_dev_hang_reset_done(struct vnic_dev *vdev, int *done);


#line 118 
void vnic_dev_set_intr_mode(struct vnic_dev *vdev, enum vnic_dev_intr_mode intr_mode);


#line 124 
void vnic_dev_unregister(struct vnic_dev *vdev);


#line 127 
struct vnic_dev *vnic_dev_register(struct vnic_dev *vdev, void *priv, struct pci_dev *pdev, struct vnic_dev_bar *bar, unsigned int num_bars);


#line 135 
int vnic_dev_set_mac_addr(struct vnic_dev *vdev, u8 *mac_addr);


#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_intr.h"
__inline static void vnic_intr_unmask(struct vnic_intr *intr)
{
  
#line 56 
  iowrite32(0U,(void *)(& (intr->ctrl)->mask));
  
#line 57 
  return;
}


#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_intr.h"
__inline static void vnic_intr_mask(struct vnic_intr *intr)
{
  
#line 61 
  iowrite32(1U,(void *)(& (intr->ctrl)->mask));
  
#line 62 
  return;
}


#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_intr.h"
__inline static int vnic_intr_masked(struct vnic_intr *intr)
{
  int __retres;
  unsigned int tmp;
  
#line 66 
  tmp = ioread32((void *)(& (intr->ctrl)->mask));
  
#line 66 
  __retres = (int)tmp;
  
#line 66 
  return __retres;
}


#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_intr.h"
__inline static void vnic_intr_return_credits(struct vnic_intr *intr, unsigned int credits, int unmask, int reset_timer)
{
  int tmp;
  int tmp_0;
  
#line 76 
  if (unmask != 0) 
#line 76 
                   tmp = 65536; else 
#line 76 
                                     tmp = 0;
  
#line 77 
  if (reset_timer != 0) 
#line 77 
                        tmp_0 = 131072; else 
#line 77 
                                             tmp_0 = 0;
  
#line 75 
  u32 int_credit_return = ((credits & 65535U) | (unsigned int)tmp) | (unsigned int)tmp_0;
  
#line 79 
  iowrite32(int_credit_return,(void *)(& (intr->ctrl)->int_credit_return));
  
#line 80 
  return;
}


#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_intr.h"
__inline static unsigned int vnic_intr_credits(struct vnic_intr *intr)
{
  unsigned int tmp;
  
#line 84 
  tmp = ioread32((void *)(& (intr->ctrl)->int_credits));
  
#line 84 
  return tmp;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_intr.h"
__inline static void vnic_intr_return_all_credits(struct vnic_intr *intr)
{
  
#line 89 
  unsigned int credits = vnic_intr_credits(intr);
  
#line 90 
  int unmask = 1;
  
#line 91 
  int reset_timer = 1;
  
#line 93 
  vnic_intr_return_credits(intr,credits,unmask,reset_timer);
  
#line 94 
  return;
}


#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_intr.h"
__inline static u32 vnic_intr_legacy_pba(u32 *legacy_pba)
{
  u32 tmp;
  
#line 99 
  tmp = ioread32((void *)legacy_pba);
  
#line 99 
  return tmp;
}


#line 107 
void vnic_intr_coalescing_timer_set(struct vnic_intr *intr, u32 coalescing_timer);


#line 109 
void vnic_intr_clean(struct vnic_intr *intr);


#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/wq_enet_desc.h"
__inline static void wq_enet_desc_enc(struct wq_enet_desc *desc, u64 address, u16 length, u16 mss, u16 header_length, u8 offload_mode, u8 eop, u8 cq_entry, u8 fcoe_encap, u8 vlan_tag_insert, u16 vlan_tag, u8 loopback)
{
  
#line 58 
  desc->address = address;
  
#line 59 
  desc->length = (unsigned short)((unsigned int)length & 16383U);
  
#line 60 
  desc->mss_loopback = (unsigned short)(((int)mss << 2) | (((int)loopback << 1) & 2));
  
#line 62 
  desc->header_length_flags = (unsigned short)(((((((int)header_length & 1023) | (((int)offload_mode << 10) & 3072)) | (((int)eop << 12) & 4096)) | (((int)cq_entry << 13) & 8192)) | (((int)fcoe_encap << 14) & 16384)) | ((int)vlan_tag_insert << 15));
  
#line 69 
  desc->vlan_tag = vlan_tag;
  
#line 70 
  return;
}


#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/rq_enet_desc.h"
__inline static void rq_enet_desc_enc(struct rq_enet_desc *desc, u64 address, u8 type, u16 length)
{
  
#line 46 
  desc->address = address;
  
#line 47 
  desc->length_type = (unsigned short)(((int)length & 16383) | ((int)type << 14));
  
#line 48 
  return;
}


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_cq.h"
__inline static unsigned int vnic_cq_service(struct vnic_cq *cq, unsigned int work_to_do, int (*q_service)(struct vnic_dev *, struct cq_desc *, u8 , u16 , u16 , void *), void *opaque)
{
  struct cq_desc *cq_desc;
  u16 q_number;
  u16 completed_index;
  u8 type;
  u8 color;
  int tmp;
  
#line 79 
  unsigned int work_done = 0U;
  
#line 83 
  cq_desc = (struct cq_desc *)cq->ring.descs + cq->ring.desc_size * cq->to_clean;
  
#line 85 
  cq_desc_dec((struct cq_desc const *)cq_desc,& type,& color,& q_number,& completed_index);
  
#line 88 
  goto ldv_54758;
  ldv_54757: 
#line 89 
  ;
  
#line 90 
  tmp = (*q_service)(cq->vdev,cq_desc,(unsigned char)((int)type),(unsigned short)((int)q_number),(unsigned short)((int)completed_index),opaque);
  
#line 90 
  if (tmp != 0) 
#line 92 
                goto ldv_54756; else ;
  
#line 94 
  cq->to_clean += 1U;
  
#line 95 
  if (cq->to_clean == cq->ring.desc_count) {
    
#line 96 
    cq->to_clean = 0U;
    
#line 97 
    cq->last_color = (unsigned int)(cq->last_color == 0U);
  }
  else ;
  
#line 100 
  cq_desc = (struct cq_desc *)cq->ring.descs + cq->ring.desc_size * cq->to_clean;
  
#line 102 
  cq_desc_dec((struct cq_desc const *)cq_desc,& type,& color,& q_number,& completed_index);
  
#line 105 
  work_done += 1U;
  
#line 106 
  if (work_done >= work_to_do) 
#line 107 
                               goto ldv_54756; else ;
  ldv_54758: 
#line 108 
  ;
  
#line 88 
  if ((unsigned int)color != cq->last_color) 
#line 90 
                                             goto ldv_54757; else 
#line 93 
                                                                  goto ldv_54756;
  ldv_54756: 
#line 94 
  ;
  
#line 110 
  return work_done;
}


#line 121 
void vnic_cq_clean(struct vnic_cq *cq);


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_wq.h"
__inline static unsigned int vnic_wq_desc_avail(struct vnic_wq *wq)
{
  unsigned int __retres;
  
#line 94 
  __retres = wq->ring.desc_avail;
  
#line 94 
  return __retres;
}


#line 103  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_wq.h"
__inline static void *vnic_wq_next_desc(struct vnic_wq *wq)
{
  void *__retres;
  
#line 105 
  __retres = (wq->to_use)->desc;
  
#line 105 
  return __retres;
}


#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_wq.h"
__inline static void vnic_wq_doorbell(struct vnic_wq *wq)
{
  
#line 110 
  ldv_inline_asm();
  
#line 116 
  iowrite32((wq->to_use)->index,(void *)(& (wq->ctrl)->posted_index));
  
#line 117 
  return;
}


#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_wq.h"
__inline static void vnic_wq_post(struct vnic_wq *wq, void *os_buf, dma_addr_t dma_addr, unsigned int len, int sop, int eop, uint8_t desc_skip_cnt, uint8_t cq_entry, uint8_t compressed_send, uint64_t wrid)
{
  
#line 125 
  struct vnic_wq_buf *buf = wq->to_use;
  
#line 127 
  buf->sop = sop;
  
#line 128 
  buf->cq_entry = cq_entry;
  
#line 129 
  buf->compressed_send = compressed_send;
  
#line 130 
  buf->desc_skip_cnt = desc_skip_cnt;
  
#line 131 
  if (eop != 0) 
#line 131 
                buf->os_buf = os_buf; else 
#line 131 
                                           buf->os_buf = (void *)0;
  
#line 132 
  buf->dma_addr = dma_addr;
  
#line 133 
  buf->len = len;
  
#line 134 
  buf->wr_id = wrid;
  
#line 136 
  buf = buf->next;
  
#line 137 
  wq->to_use = buf;
  
#line 139 
  wq->ring.desc_avail -= (unsigned int)desc_skip_cnt;
  
#line 140 
  return;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_wq.h"
__inline static void vnic_wq_service(struct vnic_wq *wq, struct cq_desc *cq_desc, u16 completed_index, void (*buf_service)(struct vnic_wq *, struct cq_desc *, struct vnic_wq_buf *, void *), void *opaque)
{
  struct vnic_wq_buf *buf;
  
#line 150 
  buf = wq->to_clean;
  ldv_54863: 
#line 151 
  ;
  
#line 153 
  (*buf_service)(wq,cq_desc,buf,opaque);
  
#line 155 
  wq->ring.desc_avail += 1U;
  
#line 157 
  wq->to_clean = buf->next;
  
#line 159 
  if (buf->index == (unsigned int)completed_index) 
#line 160 
                                                   goto ldv_54862; else ;
  
#line 162 
  buf = wq->to_clean;
  
#line 153 
  goto ldv_54863;
  ldv_54862: 
#line 154 
  ;
  
#line 155 
  return;
}


#line 172 
unsigned int vnic_wq_error_status(struct vnic_wq *wq);


#line 173 
void vnic_wq_enable(struct vnic_wq *wq);


#line 174 
int vnic_wq_disable(struct vnic_wq *wq);


#line 175 
void vnic_wq_clean(struct vnic_wq *wq, void (*buf_clean)(struct vnic_wq *, struct vnic_wq_buf *));


#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.h"
__inline static unsigned int vnic_rq_desc_avail(struct vnic_rq *rq)
{
  unsigned int __retres;
  
#line 103 
  __retres = rq->ring.desc_avail;
  
#line 103 
  return __retres;
}


#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.h"
__inline static unsigned int vnic_rq_desc_used(struct vnic_rq *rq)
{
  unsigned int __retres;
  
#line 109 
  __retres = (rq->ring.desc_count - rq->ring.desc_avail) + 4294967295U;
  
#line 109 
  return __retres;
}


#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.h"
__inline static void *vnic_rq_next_desc(struct vnic_rq *rq)
{
  void *__retres;
  
#line 114 
  __retres = (rq->to_use)->desc;
  
#line 114 
  return __retres;
}


#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.h"
__inline static void vnic_rq_post(struct vnic_rq *rq, void *os_buf, unsigned int os_buf_index, dma_addr_t dma_addr, unsigned int len, uint64_t wrid)
{
  
#line 127 
  struct vnic_rq_buf *buf = rq->to_use;
  
#line 129 
  buf->os_buf = os_buf;
  
#line 130 
  buf->os_buf_index = os_buf_index;
  
#line 131 
  buf->dma_addr = dma_addr;
  
#line 132 
  buf->len = len;
  
#line 133 
  buf->wr_id = wrid;
  
#line 135 
  buf = buf->next;
  
#line 136 
  rq->to_use = buf;
  
#line 137 
  rq->ring.desc_avail -= 1U;
  
#line 146 
  if ((buf->index & 15U) == 0U) {
    
#line 148 
    ldv_inline_asm();
    
#line 153 
    iowrite32(buf->index,(void *)(& (rq->ctrl)->posted_index));
  }
  else ;
  
#line 155 
  return;
}


#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.h"
__inline static void vnic_rq_service(struct vnic_rq *rq, struct cq_desc *cq_desc, u16 completed_index, int desc_return, void (*buf_service)(struct vnic_rq *, struct cq_desc *, struct vnic_rq_buf *, int , void *), void *opaque)
{
  struct vnic_rq_buf *buf;
  int skipped;
  
#line 176 
  buf = rq->to_clean;
  ldv_54980: 
#line 177 
  ;
  
#line 179 
  skipped = buf->index != (unsigned int)completed_index;
  
#line 181 
  (*buf_service)(rq,cq_desc,buf,skipped,opaque);
  
#line 183 
  if (desc_return == 0) 
#line 184 
                        rq->ring.desc_avail += 1U; else ;
  
#line 186 
  rq->to_clean = buf->next;
  
#line 188 
  if (skipped == 0) 
#line 189 
                    goto ldv_54979; else ;
  
#line 191 
  buf = rq->to_clean;
  
#line 179 
  goto ldv_54980;
  ldv_54979: 
#line 180 
  ;
  
#line 181 
  return;
}


#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.h"
__inline static int vnic_rq_fill(struct vnic_rq *rq, int (*buf_fill)(struct vnic_rq *))
{
  int __retres;
  int err;
  unsigned int tmp;
  
#line 200 
  goto ldv_54988;
  ldv_54987: 
#line 201 
  ;
  
#line 202 
  err = (*buf_fill)(rq);
  
#line 203 
  if (err != 0) {
    
#line 204 
    __retres = err;
    
#line 204 
    goto return_label;
  }
  else ;
  ldv_54988: 
#line 205 
  ;
  
#line 200 
  tmp = vnic_rq_desc_avail(rq);
  
#line 200 
  if (tmp != 0U) 
#line 202 
                 goto ldv_54987; else 
#line 205 
                                      goto ldv_54989;
  ldv_54989: 
#line 206 
  ;
  
#line 207 
  __retres = 0;
  return_label: 
#line 207 
                return __retres;
}


#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.h"
__inline static void enic_busy_poll_init_lock(struct vnic_rq *rq)
{
  
#line 213 
  atomic_set(& rq->bpoll_state,0);
  
#line 214 
  return;
}


#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.h"
__inline static bool enic_poll_lock_napi(struct vnic_rq *rq)
{
  bool __retres;
  
#line 218 
  int rc = atomic_cmpxchg(& rq->bpoll_state,0,1);
  
#line 221 
  __retres = (_Bool)(rc == 0);
  
#line 221 
  return __retres;
}


#line 224  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.h"
__inline static void enic_poll_unlock_napi(struct vnic_rq *rq, struct napi_struct *napi)
{
  {
    int tmp;
    
#line 227 
    tmp = atomic_read((atomic_t const *)(& rq->bpoll_state));
    
#line 227 
    int __ret_warn_on = tmp != 1;
    
#line 227 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 227 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.h",227); else ;
    
#line 227 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 228 
  napi_gro_flush(napi,(_Bool)0);
  
#line 229 
  atomic_set(& rq->bpoll_state,0);
  
#line 230 
  return;
}


#line 232  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.h"
__inline static bool enic_poll_lock_poll(struct vnic_rq *rq)
{
  bool __retres;
  
#line 234 
  int rc = atomic_cmpxchg(& rq->bpoll_state,0,2);
  
#line 237 
  __retres = (_Bool)(rc == 0);
  
#line 237 
  return __retres;
}


#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.h"
__inline static void enic_poll_unlock_poll(struct vnic_rq *rq)
{
  {
    int tmp;
    
#line 243 
    tmp = atomic_read((atomic_t const *)(& rq->bpoll_state));
    
#line 243 
    int __ret_warn_on = tmp != 2;
    
#line 243 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 243 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.h",243); else ;
    
#line 243 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 244 
  atomic_set(& rq->bpoll_state,0);
  
#line 245 
  return;
}


#line 247  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.h"
__inline static bool enic_poll_busy_polling(struct vnic_rq *rq)
{
  bool __retres;
  int tmp;
  
#line 249 
  tmp = atomic_read((atomic_t const *)(& rq->bpoll_state));
  
#line 249 
  __retres = (_Bool)((tmp & 2) != 0);
  
#line 249 
  return __retres;
}


#line 291 
unsigned int vnic_rq_error_status(struct vnic_rq *rq);


#line 292 
void vnic_rq_enable(struct vnic_rq *rq);


#line 293 
int vnic_rq_disable(struct vnic_rq *rq);


#line 294 
void vnic_rq_clean(struct vnic_rq *rq, void (*buf_clean)(struct vnic_rq *, struct vnic_rq_buf *));


#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_res.h"
__inline static void enic_queue_wq_desc_ex(struct vnic_wq *wq, void *os_buf, dma_addr_t dma_addr, unsigned int len, unsigned int mss_or_csum_offset, unsigned int hdr_len, int vlan_tag_insert, unsigned int vlan_tag, int offload_mode, int cq_entry, int sop, int eop, int loopback)
{
  
#line 49 
  struct wq_enet_desc *desc = vnic_wq_next_desc(wq);
  
#line 50 
  u8 desc_skip_cnt = (unsigned char)1U;
  
#line 51 
  u8 compressed_send = (unsigned char)0U;
  
#line 52 
  u64 wrid = 0ULL;
  
#line 54 
  wq_enet_desc_enc(desc,dma_addr,(unsigned short)((int)((unsigned short)len)),(unsigned short)((int)((unsigned short)mss_or_csum_offset)),(unsigned short)((int)((unsigned short)hdr_len)),(unsigned char)((int)((unsigned char)offload_mode)),(unsigned char)((int)((unsigned char)eop)),(unsigned char)((int)((unsigned char)cq_entry)),(unsigned char)0,(unsigned char)((int)((unsigned char)vlan_tag_insert)),(unsigned short)((int)((unsigned short)vlan_tag)),(unsigned char)((int)((unsigned char)loopback)));
  
#line 65 
  vnic_wq_post(wq,os_buf,dma_addr,len,sop,eop,(unsigned char)((int)desc_skip_cnt),(unsigned char)((int)((unsigned char)cq_entry)),(unsigned char)((int)compressed_send),wrid);
  
#line 67 
  return;
}


#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_res.h"
__inline static void enic_queue_wq_desc_cont(struct vnic_wq *wq, void *os_buf, dma_addr_t dma_addr, unsigned int len, int eop, int loopback)
{
  
#line 73 
  enic_queue_wq_desc_ex(wq,os_buf,dma_addr,len,0U,0U,0,0U,0,eop,0,eop,loopback);
  
#line 74 
  return;
}


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_res.h"
__inline static void enic_queue_wq_desc(struct vnic_wq *wq, void *os_buf, dma_addr_t dma_addr, unsigned int len, int vlan_tag_insert, unsigned int vlan_tag, int eop, int loopback)
{
  
#line 82 
  enic_queue_wq_desc_ex(wq,os_buf,dma_addr,len,0U,0U,vlan_tag_insert,vlan_tag,0,eop,1,eop,loopback);
  
#line 83 
  return;
}


#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_res.h"
__inline static void enic_queue_wq_desc_csum_l4(struct vnic_wq *wq, void *os_buf, dma_addr_t dma_addr, unsigned int len, unsigned int csum_offset, unsigned int hdr_len, int vlan_tag_insert, unsigned int vlan_tag, int eop, int loopback)
{
  
#line 105 
  enic_queue_wq_desc_ex(wq,os_buf,dma_addr,len,csum_offset,hdr_len,vlan_tag_insert,vlan_tag,2,eop,1,eop,loopback);
  
#line 106 
  return;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_res.h"
__inline static void enic_queue_wq_desc_tso(struct vnic_wq *wq, void *os_buf, dma_addr_t dma_addr, unsigned int len, unsigned int mss, unsigned int hdr_len, int vlan_tag_insert, unsigned int vlan_tag, int eop, int loopback)
{
  
#line 116 
  enic_queue_wq_desc_ex(wq,os_buf,dma_addr,len,mss,hdr_len,vlan_tag_insert,vlan_tag,3,eop,1,eop,loopback);
  
#line 117 
  return;
}


#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_res.h"
__inline static void enic_queue_rq_desc(struct vnic_rq *rq, void *os_buf, unsigned int os_buf_index, dma_addr_t dma_addr, unsigned int len)
{
  
#line 126 
  struct rq_enet_desc *desc = vnic_rq_next_desc(rq);
  
#line 127 
  u64 wrid = 0ULL;
  
#line 128 
  u8 type = (unsigned char)(os_buf_index != 0U);
  
#line 131 
  rq_enet_desc_enc(desc,dma_addr,(unsigned char)((int)type),(unsigned short)((int)((unsigned short)len)));
  
#line 135 
  vnic_rq_post(rq,os_buf,os_buf_index,dma_addr,len,wrid);
  
#line 136 
  return;
}


#line 199  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic.h"
__inline static unsigned int enic_cq_rq(struct enic *enic, unsigned int rq)
{
  
#line 201 
  return rq;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic.h"
__inline static unsigned int enic_cq_wq(struct enic *enic, unsigned int wq)
{
  unsigned int __retres;
  
#line 206 
  __retres = enic->rq_count + wq;
  
#line 206 
  return __retres;
}


#line 209  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic.h"
__inline static unsigned int enic_legacy_io_intr(void)
{
  unsigned int __retres;
  
#line 211 
  __retres = 0U;
  
#line 211 
  return __retres;
}


#line 214  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic.h"
__inline static unsigned int enic_legacy_err_intr(void)
{
  unsigned int __retres;
  
#line 216 
  __retres = 1U;
  
#line 216 
  return __retres;
}


#line 219  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic.h"
__inline static unsigned int enic_legacy_notify_intr(void)
{
  unsigned int __retres;
  
#line 221 
  __retres = 2U;
  
#line 221 
  return __retres;
}


#line 224  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic.h"
__inline static unsigned int enic_msix_rq_intr(struct enic *enic, unsigned int rq)
{
  unsigned int __retres;
  unsigned int tmp;
  
#line 227 
  tmp = enic_cq_rq(enic,rq);
  
#line 227 
  ;
  
#line 227 
  __retres = enic->cq[tmp].interrupt_offset;
  
#line 227 
  return __retres;
}


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic.h"
__inline static unsigned int enic_msix_wq_intr(struct enic *enic, unsigned int wq)
{
  unsigned int __retres;
  unsigned int tmp;
  
#line 233 
  tmp = enic_cq_wq(enic,wq);
  
#line 233 
  ;
  
#line 233 
  __retres = enic->cq[tmp].interrupt_offset;
  
#line 233 
  return __retres;
}


#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic.h"
__inline static unsigned int enic_msix_err_intr(struct enic *enic)
{
  unsigned int __retres;
  
#line 238 
  __retres = enic->rq_count + enic->wq_count;
  
#line 238 
  return __retres;
}


#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic.h"
__inline static unsigned int enic_msix_notify_intr(struct enic *enic)
{
  unsigned int __retres;
  
#line 243 
  __retres = (enic->rq_count + enic->wq_count) + 1U;
  
#line 243 
  return __retres;
}


#line 246  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic.h"
__inline static int enic_dma_map_check(struct enic *enic, dma_addr_t dma_addr)
{
  int __retres;
  int tmp_0;
  
#line 248 
  tmp_0 = pci_dma_mapping_error(enic->pdev,dma_addr);
  
#line 248 
  if ((long)(tmp_0 != 0) != 0L) {
    int tmp;
    
#line 249 
    tmp = net_ratelimit();
    
#line 249 
    if (tmp != 0) 
#line 249 
                  printk("\001",(char *)(& (enic->netdev)->name)); else ;
    
#line 251 
    enic->gen_stats.dma_map_error += 1ULL;
    
#line 253 
    __retres = -12;
    
#line 253 
    goto return_label;
  }
  else ;
  
#line 256 
  __retres = 0;
  return_label: 
#line 256 
                return __retres;
}


#line 259 
void enic_reset_addr_lists(struct enic *enic);


#line 260 
int enic_sriov_enabled(struct enic *enic);


#line 261 
int enic_is_valid_vf(struct enic *enic, int vf);


#line 262 
int enic_is_dynamic(struct enic *enic);


#line 263 
void enic_set_ethtool_ops(struct net_device *netdev);


#line 264 
int __enic_set_rsskey(struct enic *enic);


#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_dev.h"
int enic_dev_stats_dump(struct enic *enic, struct vnic_stats **vstats);


#line 44 
int enic_dev_add_station_addr(struct enic *enic);


#line 45 
int enic_dev_del_station_addr(struct enic *enic);


#line 46 
int enic_dev_packet_filter(struct enic *enic, int directed, int multicast, int broadcast, int promisc, int allmulti);


#line 48 
int enic_dev_add_addr(struct enic *enic, u8 const *addr);


#line 49 
int enic_dev_del_addr(struct enic *enic, u8 const *addr);


#line 50 
int enic_vlan_rx_add_vid(struct net_device *netdev, __be16 proto, u16 vid);


#line 51 
int enic_vlan_rx_kill_vid(struct net_device *netdev, __be16 proto, u16 vid);


#line 52 
int enic_dev_notify_unset(struct enic *enic);


#line 53 
int enic_dev_hang_notify(struct enic *enic);


#line 54 
int enic_dev_set_ig_vlan_rewrite_mode(struct enic *enic);


#line 55 
int enic_dev_enable(struct enic *enic);


#line 56 
int enic_dev_disable(struct enic *enic);


#line 57 
int enic_dev_intr_coal_timer_info(struct enic *enic);


#line 58 
int enic_dev_status_to_errno(int devcmd_status);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_pp.h"
int enic_process_set_pp_request(struct enic *enic, int vf, struct enic_port_profile *prev_pp, int *restore_pp);


#line 32 
int enic_process_get_pp_request(struct enic *enic, int vf, int request, u16 *response);


#line 34 
int enic_is_valid_pp_vf(struct enic *enic, int vf, int *err);


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_clsf.h"
void enic_rfs_flw_tbl_init(struct enic *enic);


#line 12 
void enic_rfs_flw_tbl_free(struct enic *enic);


#line 16 
int enic_rx_flow_steer(struct net_device *dev, struct sk_buff const *skb, u16 rxq_index, u32 flow_id);


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static struct pci_device_id const enic_id_table[4U] = {{.vendor = 4407U, .device = 67U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4407U, .device = 68U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4407U, .device = 113U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
struct pci_device_id const __mod_pci__enic_id_table_device_table[4U];

#line 92  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static struct enic_intr_mod_table mod_table[11U] = {{.rx_rate = 4000U, .range_percent = 0U}, {.rx_rate = 4400U, .range_percent = 10U}, {.rx_rate = 5060U, .range_percent = 20U}, {.rx_rate = 5230U, .range_percent = 30U}, {.rx_rate = 5540U, .range_percent = 40U}, {.rx_rate = 5820U, .range_percent = 50U}, {.rx_rate = 6120U, .range_percent = 60U}, {.rx_rate = 6435U, .range_percent = 70U}, {.rx_rate = 6745U, .range_percent = 80U}, {.rx_rate = 7000U, .range_percent = 90U}, {.rx_rate = 4294967295U, .range_percent = 100U}};

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static struct enic_intr_mod_range mod_range[3U] = {{.small_pkt_range_start = 0U, .large_pkt_range_start = 0U}, {.small_pkt_range_start = 0U, .large_pkt_range_start = 3U}, {.small_pkt_range_start = 3U, .large_pkt_range_start = 6U}};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
int enic_is_dynamic(struct enic *enic)
{
  int __retres;
  
#line 117 
  __retres = (unsigned int)(enic->pdev)->device == 68U;
  
#line 117 
  return __retres;
}


#line 120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
int enic_sriov_enabled(struct enic *enic)
{
  int __retres;
  
#line 122 
  __retres = (int)enic->priv_flags & 1;
  
#line 122 
  return __retres;
}


#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_is_sriov_vf(struct enic *enic)
{
  int __retres;
  
#line 127 
  __retres = (unsigned int)(enic->pdev)->device == 113U;
  
#line 127 
  return __retres;
}


#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
int enic_is_valid_vf(struct enic *enic, int vf)
{
  int __retres;
  
#line 133 
  __retres = (vf >= 0 && (int)enic->num_vfs > vf) != 0;
  
#line 133 
  return __retres;
}


#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_free_wq_buf(struct vnic_wq *wq, struct vnic_wq_buf *buf)
{
  
#line 141 
  struct enic *enic = vnic_dev_priv(wq->vdev);
  
#line 143 
  if (buf->sop != 0) 
#line 144 
                     pci_unmap_single(enic->pdev,buf->dma_addr,(unsigned long)buf->len,1); else 
                                                                    
#line 147 
                                                                    pci_unmap_page(enic->pdev,buf->dma_addr,(unsigned long)buf->len,1);
  
#line 150 
  if (buf->os_buf != (void *)0) 
#line 151 
                                dev_kfree_skb_any((struct sk_buff *)buf->os_buf); else ;
  
#line 152 
  return;
}


#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_wq_free_buf(struct vnic_wq *wq, struct cq_desc *cq_desc, struct vnic_wq_buf *buf, void *opaque)
{
  
#line 157 
  enic_free_wq_buf(wq,buf);
  
#line 158 
  return;
}


#line 160  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_wq_service(struct vnic_dev *vdev, struct cq_desc *cq_desc, u8 type, u16 q_number, u16 completed_index, void *opaque)
{
  int __retres;
  bool tmp_1;
  struct netdev_queue *tmp_0;
  
#line 163 
  struct enic *enic = vnic_dev_priv(vdev);
  
#line 165 
  ldv_spin_lock_75(& enic->wq_lock[(int)q_number]);
  
#line 167 
  vnic_wq_service(& enic->wq[(int)q_number],cq_desc,(unsigned short)((int)completed_index),& enic_wq_free_buf,opaque);
  
#line 171 
  tmp_0 = netdev_get_tx_queue((struct net_device const *)enic->netdev,(unsigned int)q_number);
  
#line 171 
  tmp_1 = netif_tx_queue_stopped((struct netdev_queue const *)tmp_0);
  
#line 171 
  if ((int)tmp_1 != 0) {
    unsigned int tmp_2;
    
#line 171 
    tmp_2 = vnic_wq_desc_avail(& enic->wq[(int)q_number]);
    
#line 171 
    if (tmp_2 > 21U) 
#line 174 
                     netif_wake_subqueue(enic->netdev,(unsigned short)((int)q_number)); else ;
  }
  else ;
  
#line 176 
  ldv_spin_unlock_76(& enic->wq_lock[(int)q_number]);
  
#line 178 
  __retres = 0;
  
#line 178 
  return __retres;
}


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_log_q_error(struct enic *enic)
{
  unsigned int i;
  u32 error_status;
  
#line 186 
  i = 0U;
  
#line 186 
  goto ldv_55459;
  ldv_55458: 
#line 187 
  ;
  
#line 187 
  error_status = vnic_wq_error_status(& enic->wq[i]);
  
#line 188 
  if (error_status != 0U) 
#line 189 
                          netdev_err((struct net_device const *)enic->netdev,"WQ[%d] error_status %d\n",i,error_status); else ;
  
#line 186 
  i += 1U;
  ldv_55459: 
#line 187 
  ;
  
#line 186 
  if (enic->wq_count > i) 
#line 188 
                          goto ldv_55458; else 
#line 191 
                                               goto ldv_55460;
  ldv_55460: 
#line 192 
  ;
  
#line 193 
  i = 0U;
  
#line 193 
  goto ldv_55462;
  ldv_55461: 
#line 194 
  ;
  
#line 194 
  error_status = vnic_rq_error_status(& enic->rq[i]);
  
#line 195 
  if (error_status != 0U) 
#line 196 
                          netdev_err((struct net_device const *)enic->netdev,"RQ[%d] error_status %d\n",i,error_status); else ;
  
#line 193 
  i += 1U;
  ldv_55462: 
#line 194 
  ;
  
#line 193 
  if (enic->rq_count > i) 
#line 195 
                          goto ldv_55461; else 
#line 198 
                                               goto ldv_55463;
  ldv_55463: 
#line 199 
  ;
  
#line 200 
  return;
}


#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_msglvl_check(struct enic *enic)
{
  
#line 203 
  u32 msg_enable = vnic_dev_msg_lvl(enic->vdev);
  
#line 205 
  if (enic->msg_enable != msg_enable) {
    
#line 206 
    netdev_info((struct net_device const *)enic->netdev,"msg lvl changed from 0x%x to 0x%x\n",enic->msg_enable,msg_enable);
    
#line 208 
    enic->msg_enable = msg_enable;
  }
  else ;
  
#line 210 
  return;
}


#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_mtu_check(struct enic *enic)
{
  
#line 214 
  u32 mtu = vnic_dev_mtu(enic->vdev);
  
#line 215 
  struct net_device *netdev = enic->netdev;
  
#line 217 
  if (mtu != 0U && enic->port_mtu != mtu) {
    int tmp_4;
    
#line 218 
    enic->port_mtu = mtu;
    
#line 219 
    tmp_4 = enic_is_dynamic(enic);
    
#line 219 
    if (tmp_4 != 0) 
#line 219 
                    goto _LOR;
    else {
      int tmp_5;
      
#line 219 
      tmp_5 = enic_is_sriov_vf(enic);
      
#line 219 
      if (tmp_5 != 0) {
        _LOR: {
                int tmp_3;
                {
                  int tmp_1;
                  int tmp_2;
                  
#line 220 
                  int __max1 = 68;
                  {
                    int tmp_0;
                    
#line 220 
                    int __min1 = 9000;
                    
#line 220 
                    int __min2 = (int)mtu;
                    
#line 220 
                    if (__min1 < __min2) 
#line 220 
                                         tmp_0 = __min1; else 
#line 220 
                                                              tmp_0 = __min2;
                    
#line 220 
                    tmp_1 = tmp_0;
                  }
                  
#line 220 
                  int __max2 = tmp_1;
                  
#line 220 
                  if (__max1 > __max2) 
#line 220 
                                       tmp_2 = __max1; else 
#line 220 
                                                            tmp_2 = __max2;
                  
#line 220 
                  tmp_3 = tmp_2;
                }
                
#line 220 
                mtu = (unsigned int)tmp_3;
                
#line 222 
                if (netdev->mtu != mtu) 
#line 223 
                                        ldv_schedule_work_77(& enic->change_mtu_work); else ;
              }
      }
      else 
        
#line 225 
        if (netdev->mtu > mtu) 
#line 226 
                               netdev_warn((struct net_device const *)netdev,"interface MTU (%d) set higher ",netdev->mtu,mtu); else ;
    }
  }
  else ;
  
#line 231 
  return;
}


#line 234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_link_check(struct enic *enic)
{
  bool tmp_0;
  
#line 236 
  int link_status = vnic_dev_link_status(enic->vdev);
  
#line 237 
  tmp_0 = netif_carrier_ok((struct net_device const *)enic->netdev);
  
#line 237 
  int carrier_ok = (int)tmp_0;
  
#line 239 
  if (link_status != 0 && carrier_ok == 0) {
    
#line 240 
    netdev_info((struct net_device const *)enic->netdev,"Link UP\n");
    
#line 241 
    netif_carrier_on(enic->netdev);
  }
  else 
    
#line 242 
    if (link_status == 0 && carrier_ok != 0) {
      
#line 243 
      netdev_info((struct net_device const *)enic->netdev,"Link DOWN\n");
      
#line 244 
      netif_carrier_off(enic->netdev);
    }
    else ;
  
#line 246 
  return;
}


#line 248  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_notify_check(struct enic *enic)
{
  
#line 250 
  enic_msglvl_check(enic);
  
#line 251 
  enic_mtu_check(enic);
  
#line 252 
  enic_link_check(enic);
  
#line 253 
  return;
}


#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static irqreturn_t enic_isr_legacy(int irq, void *data)
{
  irqreturn_t __retres;
  u32 pba;
  
#line 259 
  struct net_device *netdev = (struct net_device *)data;
  
#line 260 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 261 
  unsigned int io_intr = enic_legacy_io_intr();
  
#line 262 
  unsigned int err_intr = enic_legacy_err_intr();
  
#line 263 
  unsigned int notify_intr = enic_legacy_notify_intr();
  
#line 266 
  vnic_intr_mask(& enic->intr[io_intr]);
  
#line 268 
  pba = vnic_intr_legacy_pba(enic->legacy_pba);
  
#line 269 
  if (pba == 0U) {
    
#line 270 
    vnic_intr_unmask(& enic->intr[io_intr]);
    
#line 271 
    __retres = IRQ_NONE;
    
#line 271 
    goto return_label;
  }
  else ;
  
#line 274 
  if (((unsigned int)(1 << notify_intr) & pba) != 0U) {
    
#line 275 
    enic_notify_check(enic);
    
#line 276 
    vnic_intr_return_all_credits(& enic->intr[notify_intr]);
  }
  else ;
  
#line 279 
  if (((unsigned int)(1 << err_intr) & pba) != 0U) {
    
#line 280 
    vnic_intr_return_all_credits(& enic->intr[err_intr]);
    
#line 281 
    enic_log_q_error(enic);
    
#line 283 
    ldv_schedule_work_78(& enic->reset);
    
#line 284 
    __retres = IRQ_HANDLED;
    
#line 284 
    goto return_label;
  }
  else ;
  
#line 287 
  if (((unsigned int)(1 << io_intr) & pba) != 0U) 
#line 288 
                                                  napi_schedule_irqoff(& enic->napi[0]); else 
                                                                    
#line 290 
                                                                    vnic_intr_unmask(& enic->intr[io_intr]);
  
#line 292 
  __retres = IRQ_HANDLED;
  return_label: 
#line 292 
                return __retres;
}


#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static irqreturn_t enic_isr_msi(int irq, void *data)
{
  irqreturn_t __retres;
  
#line 297 
  struct enic *enic = (struct enic *)data;
  
#line 315 
  napi_schedule_irqoff(& enic->napi[0]);
  
#line 317 
  __retres = IRQ_HANDLED;
  
#line 317 
  return __retres;
}


#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static irqreturn_t enic_isr_msix(int irq, void *data)
{
  irqreturn_t __retres;
  
#line 322 
  struct napi_struct *napi = (struct napi_struct *)data;
  
#line 324 
  napi_schedule_irqoff(napi);
  
#line 326 
  __retres = IRQ_HANDLED;
  
#line 326 
  return __retres;
}


#line 329  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static irqreturn_t enic_isr_msix_err(int irq, void *data)
{
  irqreturn_t __retres;
  
#line 331 
  struct enic *enic = (struct enic *)data;
  
#line 332 
  unsigned int intr = enic_msix_err_intr(enic);
  
#line 334 
  vnic_intr_return_all_credits(& enic->intr[intr]);
  
#line 336 
  enic_log_q_error(enic);
  
#line 339 
  ldv_schedule_work_79(& enic->reset);
  
#line 341 
  __retres = IRQ_HANDLED;
  
#line 341 
  return __retres;
}


#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static irqreturn_t enic_isr_msix_notify(int irq, void *data)
{
  irqreturn_t __retres;
  
#line 346 
  struct enic *enic = (struct enic *)data;
  
#line 347 
  unsigned int intr = enic_msix_notify_intr(enic);
  
#line 349 
  enic_notify_check(enic);
  
#line 350 
  vnic_intr_return_all_credits(& enic->intr[intr]);
  
#line 352 
  __retres = IRQ_HANDLED;
  
#line 352 
  return __retres;
}


#line 355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_queue_wq_skb_cont(struct enic *enic, struct vnic_wq *wq, struct sk_buff *skb, unsigned int len_left, int loopback)
{
  int __retres;
  skb_frag_t const *frag;
  dma_addr_t dma_addr;
  unsigned char *tmp;
  unsigned int tmp_0;
  unsigned int tmp_1;
  int tmp_2;
  unsigned int tmp_3;
  
#line 363 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 363 
  frag = (skb_frag_t const *)(& ((struct skb_shared_info *)tmp)->frags);
  
#line 363 
  goto ldv_55529;
  ldv_55528: 
#line 364 
  ;
  
#line 364 
  tmp_0 = skb_frag_size(frag);
  
#line 364 
  len_left -= tmp_0;
  
#line 366 
  tmp_1 = skb_frag_size(frag);
  
#line 365 
  ;
  
#line 365 
  ;
  
#line 365 
  dma_addr = skb_frag_dma_map(& (enic->pdev)->dev,frag,0UL,(unsigned long)tmp_1,(enum dma_data_direction)DMA_TO_DEVICE);
  
#line 368 
  tmp_2 = enic_dma_map_check(enic,dma_addr);
  
#line 368 
  if ((long)(tmp_2 != 0) != 0L) {
    
#line 369 
    __retres = -12;
    
#line 369 
    goto return_label;
  }
  else ;
  
#line 370 
  ;
  
#line 370 
  ;
  
#line 370 
  tmp_3 = skb_frag_size(frag);
  
#line 370 
  ;
  
#line 370 
  ;
  
#line 370 
  ;
  
#line 370 
  enic_queue_wq_desc_cont(wq,(void *)skb,dma_addr,tmp_3,len_left == 0U,loopback);
  
#line 363 
  frag += 1;
  ldv_55529: 
#line 364 
  ;
  
#line 363 
  if (len_left != 0U) 
#line 365 
                      goto ldv_55528; else 
#line 368 
                                           goto ldv_55530;
  ldv_55530: 
#line 369 
  ;
  
#line 375 
  __retres = 0;
  return_label: 
#line 375 
                return __retres;
}


#line 378  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_queue_wq_skb_vlan(struct enic *enic, struct vnic_wq *wq, struct sk_buff *skb, int vlan_tag_insert, unsigned int vlan_tag, int loopback)
{
  int __retres;
  dma_addr_t dma_addr;
  int tmp_0;
  
#line 382 
  unsigned int head_len = skb_headlen((struct sk_buff const *)skb);
  
#line 383 
  unsigned int len_left = skb->len - head_len;
  
#line 384 
  int eop = len_left == 0U;
  
#line 386 
  int err = 0;
  
#line 388 
  dma_addr = pci_map_single(enic->pdev,(void *)skb->data,(unsigned long)head_len,1);
  
#line 390 
  tmp_0 = enic_dma_map_check(enic,dma_addr);
  
#line 390 
  if ((long)(tmp_0 != 0) != 0L) {
    
#line 391 
    __retres = -12;
    
#line 391 
    goto return_label;
  }
  else ;
  
#line 398 
  enic_queue_wq_desc(wq,(void *)skb,dma_addr,head_len,vlan_tag_insert,vlan_tag,eop,loopback);
  
#line 401 
  if (eop == 0) 
#line 402 
                err = enic_queue_wq_skb_cont(enic,wq,skb,len_left,loopback); else ;
  
#line 404 
  __retres = err;
  return_label: 
#line 404 
                return __retres;
}


#line 407  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_queue_wq_skb_csum_l4(struct enic *enic, struct vnic_wq *wq, struct sk_buff *skb, int vlan_tag_insert, unsigned int vlan_tag, int loopback)
{
  int __retres;
  int tmp_0;
  dma_addr_t dma_addr;
  int tmp_1;
  
#line 411 
  unsigned int head_len = skb_headlen((struct sk_buff const *)skb);
  
#line 412 
  unsigned int len_left = skb->len - head_len;
  
#line 413 
  tmp_0 = skb_checksum_start_offset((struct sk_buff const *)skb);
  
#line 413 
  unsigned int hdr_len = (unsigned int)tmp_0;
  
#line 414 
  unsigned int csum_offset = (unsigned int)skb->__anonCompField_sk_buff_80.__anonCompField___anonunion_270_79.csum_offset + hdr_len;
  
#line 415 
  int eop = len_left == 0U;
  
#line 417 
  int err = 0;
  
#line 419 
  dma_addr = pci_map_single(enic->pdev,(void *)skb->data,(unsigned long)head_len,1);
  
#line 421 
  tmp_1 = enic_dma_map_check(enic,dma_addr);
  
#line 421 
  if ((long)(tmp_1 != 0) != 0L) {
    
#line 422 
    __retres = -12;
    
#line 422 
    goto return_label;
  }
  else ;
  
#line 429 
  enic_queue_wq_desc_csum_l4(wq,(void *)skb,dma_addr,head_len,csum_offset,hdr_len,vlan_tag_insert,vlan_tag,eop,loopback);
  
#line 433 
  if (eop == 0) 
#line 434 
                err = enic_queue_wq_skb_cont(enic,wq,skb,len_left,loopback); else ;
  
#line 436 
  __retres = err;
  return_label: 
#line 436 
                return __retres;
}


#line 439  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_queue_wq_skb_tso(struct enic *enic, struct vnic_wq *wq, struct sk_buff *skb, unsigned int mss, int vlan_tag_insert, unsigned int vlan_tag, int loopback)
{
  int __retres;
  int tmp_0;
  unsigned int tmp_1;
  unsigned int len;
  dma_addr_t dma_addr;
  skb_frag_t *frag;
  unsigned int tmp_12;
  int tmp_13;
  unsigned char *tmp_14;
  unsigned int tmp_15;
  unsigned int tmp_17;
  int tmp_18;
  
#line 444 
  unsigned int frag_len_left = skb_headlen((struct sk_buff const *)skb);
  
#line 445 
  unsigned int len_left = skb->len - frag_len_left;
  
#line 446 
  tmp_0 = skb_transport_offset((struct sk_buff const *)skb);
  
#line 446 
  tmp_1 = tcp_hdrlen((struct sk_buff const *)skb);
  
#line 446 
  unsigned int hdr_len = (unsigned int)tmp_0 + tmp_1;
  
#line 447 
  int eop = len_left == 0U;
  
#line 450 
  unsigned int offset = 0U;
  
#line 458 
  if ((unsigned int)skb->protocol == 8U) {
    struct iphdr *tmp_2;
    struct tcphdr *tmp_3;
    __sum16 tmp_6;
    struct iphdr *tmp_4;
    struct iphdr *tmp_5;
    
#line 459 
    tmp_2 = ip_hdr((struct sk_buff const *)skb);
    
#line 459 
    tmp_2->check = (unsigned short)0U;
    
#line 460 
    tmp_3 = tcp_hdr((struct sk_buff const *)skb);
    
#line 461 
    tmp_4 = ip_hdr((struct sk_buff const *)skb);
    
#line 460 
    tmp_5 = ip_hdr((struct sk_buff const *)skb);
    
#line 460 
    tmp_6 = csum_tcpudp_magic(tmp_5->saddr,tmp_4->daddr,(unsigned short)0,(unsigned short)6,0U);
    
#line 460 
    tmp_3->check = (unsigned short)(~ ((int)tmp_6));
  }
  else 
    
#line 462 
    if ((unsigned int)skb->protocol == 56710U) {
      struct tcphdr *tmp_7;
      __sum16 tmp_10;
      struct ipv6hdr *tmp_8;
      struct ipv6hdr *tmp_9;
      
#line 463 
      tmp_7 = tcp_hdr((struct sk_buff const *)skb);
      
#line 464 
      tmp_8 = ipv6_hdr((struct sk_buff const *)skb);
      
#line 463 
      tmp_9 = ipv6_hdr((struct sk_buff const *)skb);
      
#line 463 
      tmp_10 = csum_ipv6_magic((struct in6_addr const *)(& tmp_9->saddr),(struct in6_addr const *)(& tmp_8->daddr),0U,(unsigned short)6,0U);
      
#line 463 
      tmp_7->check = (unsigned short)(~ ((int)tmp_10));
    }
    else ;
  
#line 470 
  goto ldv_55580;
  ldv_55579: 
#line 471 
  ;
  {
    unsigned int tmp_11;
    
#line 471 
    unsigned int _min1 = frag_len_left;
    
#line 471 
    unsigned int _min2 = 16384U;
    
#line 471 
    if (_min1 < _min2) 
#line 471 
                       tmp_11 = _min1; else 
#line 471 
                                            tmp_11 = _min2;
    
#line 471 
    tmp_12 = tmp_11;
  }
  
#line 471 
  len = tmp_12;
  
#line 472 
  dma_addr = pci_map_single(enic->pdev,(void *)(skb->data + offset),(unsigned long)len,1);
  
#line 474 
  tmp_13 = enic_dma_map_check(enic,dma_addr);
  
#line 474 
  if ((long)(tmp_13 != 0) != 0L) {
    
#line 475 
    __retres = -12;
    
#line 475 
    goto return_label;
  }
  else ;
  
#line 476 
  enic_queue_wq_desc_tso(wq,(void *)skb,dma_addr,len,mss,hdr_len,vlan_tag_insert,vlan_tag,(eop != 0 && len == frag_len_left) != 0,loopback);
  
#line 479 
  frag_len_left -= len;
  
#line 480 
  offset += len;
  ldv_55580: 
#line 481 
  ;
  
#line 470 
  if (frag_len_left != 0U) 
#line 472 
                           goto ldv_55579; else 
#line 475 
                                                goto ldv_55581;
  ldv_55581: 
#line 476 
  ;
  
#line 483 
  if (eop != 0) {
    
#line 484 
    __retres = 0;
    
#line 484 
    goto return_label;
  }
  else ;
  
#line 489 
  tmp_14 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 489 
  frag = (skb_frag_t *)(& ((struct skb_shared_info *)tmp_14)->frags);
  
#line 489 
  goto ldv_55589;
  ldv_55588: 
#line 490 
  ;
  
#line 490 
  tmp_15 = skb_frag_size((skb_frag_t const *)frag);
  
#line 490 
  len_left -= tmp_15;
  
#line 491 
  frag_len_left = skb_frag_size((skb_frag_t const *)frag);
  
#line 492 
  offset = 0U;
  
#line 494 
  goto ldv_55586;
  ldv_55585: 
#line 495 
  ;
  {
    unsigned int tmp_16;
    
#line 495 
    unsigned int _min1_0 = frag_len_left;
    
#line 495 
    unsigned int _min2_0 = 16384U;
    
#line 495 
    if (_min1_0 < _min2_0) 
#line 495 
                           tmp_16 = _min1_0; else 
#line 495 
                                                  tmp_16 = _min2_0;
    
#line 495 
    tmp_17 = tmp_16;
  }
  
#line 495 
  len = tmp_17;
  
#line 497 
  dma_addr = skb_frag_dma_map(& (enic->pdev)->dev,(skb_frag_t const *)frag,(unsigned long)offset,(unsigned long)len,(enum dma_data_direction)DMA_TO_DEVICE);
  
#line 500 
  tmp_18 = enic_dma_map_check(enic,dma_addr);
  
#line 500 
  if ((long)(tmp_18 != 0) != 0L) {
    
#line 501 
    __retres = -12;
    
#line 501 
    goto return_label;
  }
  else ;
  
#line 502 
  enic_queue_wq_desc_cont(wq,(void *)skb,dma_addr,len,(len_left == 0U && len == frag_len_left) != 0,loopback);
  
#line 506 
  frag_len_left -= len;
  
#line 507 
  offset += len;
  ldv_55586: 
#line 508 
  ;
  
#line 494 
  if (frag_len_left != 0U) 
#line 496 
                           goto ldv_55585; else 
#line 499 
                                                goto ldv_55587;
  ldv_55587: 
#line 500 
  ;
  
#line 489 
  frag += 1;
  ldv_55589: 
#line 490 
  ;
  
#line 489 
  if (len_left != 0U) 
#line 491 
                      goto ldv_55588; else 
#line 494 
                                           goto ldv_55590;
  ldv_55590: 
#line 495 
  ;
  
#line 511 
  __retres = 0;
  return_label: 
#line 511 
                return __retres;
}


#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
__inline static void enic_queue_wq_skb(struct enic *enic, struct vnic_wq *wq, struct sk_buff *skb)
{
  unsigned char *tmp;
  int err;
  
#line 517 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 517 
  unsigned int mss = (unsigned int)((struct skb_shared_info *)tmp)->gso_size;
  
#line 518 
  unsigned int vlan_tag = 0U;
  
#line 519 
  int vlan_tag_insert = 0;
  
#line 520 
  int loopback = 0;
  
#line 523 
  if (((int)skb->vlan_tci & 4096) != 0) {
    
#line 525 
    vlan_tag_insert = 1;
    
#line 526 
    vlan_tag = (unsigned int)skb->vlan_tci & 4294963199U;
  }
  else 
    
#line 527 
    if ((unsigned int)enic->loop_enable != 0U) {
      
#line 528 
      vlan_tag = (unsigned int)enic->loop_tag;
      
#line 529 
      loopback = 1;
    }
    else ;
  
#line 532 
  if (mss != 0U) 
#line 533 
                 err = enic_queue_wq_skb_tso(enic,wq,skb,mss,vlan_tag_insert,vlan_tag,loopback);
  else 
    
#line 536 
    if ((unsigned int)*((unsigned char *)skb + 145UL) == 6U) 
#line 537 
                                                             err = enic_queue_wq_skb_csum_l4(enic,wq,skb,vlan_tag_insert,vlan_tag,loopback); else 
                                                                    
#line 540 
                                                                    err = enic_queue_wq_skb_vlan(enic,wq,skb,vlan_tag_insert,vlan_tag,loopback);
  
#line 542 
  if ((long)(err != 0) != 0L) {
    struct vnic_wq_buf *buf;
    
#line 545 
    buf = (wq->to_use)->prev;
    
#line 549 
    goto ldv_55603;
    ldv_55602: 
#line 550 
    ;
    
#line 550 
    enic_free_wq_buf(wq,buf);
    
#line 551 
    wq->ring.desc_avail += 1U;
    
#line 552 
    buf = buf->prev;
    ldv_55603: 
#line 553 
    ;
    
#line 549 
    if (buf->os_buf == (void *)0 && buf->next != wq->to_clean) 
#line 551 
                                                               goto ldv_55602; else 
                                                                    
#line 554 
                                                                    goto ldv_55604;
    ldv_55604: 
#line 555 
    ;
    
#line 554 
    wq->to_use = buf->next;
    
#line 555 
    consume_skb(skb);
  }
  else ;
  
#line 557 
  return;
}


#line 560  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static netdev_tx_t enic_hard_start_xmit(struct sk_buff *skb, struct net_device *netdev)
{
  netdev_tx_t __retres;
  struct vnic_wq *wq;
  unsigned int txq_map;
  struct netdev_queue *txq;
  u16 tmp_0;
  unsigned char *tmp_1;
  unsigned int tmp_4;
  unsigned char *tmp_5;
  unsigned int tmp_6;
  
#line 563 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 568 
  if (skb->len == 0U) {
    
#line 569 
    dev_kfree_skb_any(skb);
    
#line 570 
    __retres = NETDEV_TX_OK;
    
#line 570 
    goto return_label;
  }
  else ;
  
#line 573 
  tmp_0 = skb_get_queue_mapping((struct sk_buff const *)skb);
  
#line 573 
  txq_map = (unsigned int)tmp_0 % enic->wq_count;
  
#line 574 
  wq = & enic->wq[txq_map];
  
#line 575 
  txq = netdev_get_tx_queue((struct net_device const *)netdev,txq_map);
  
#line 582 
  tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 582 
  ;
  
#line 582 
  if ((unsigned int)((struct skb_shared_info *)tmp_1)->gso_size == 0U) {
    unsigned char *tmp_2;
    
#line 583 
    tmp_2 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 583 
    ;
    
#line 583 
    if ((int)((struct skb_shared_info *)tmp_2)->nr_frags + 1 > 16) {
      int tmp_3;
      
#line 583 
      tmp_3 = skb_linearize(skb);
      
#line 583 
      if (tmp_3 != 0) {
        
#line 585 
        dev_kfree_skb_any(skb);
        
#line 586 
        __retres = NETDEV_TX_OK;
        
#line 586 
        goto return_label;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 589 
  ldv_spin_lock_80(& enic->wq_lock[txq_map]);
  
#line 591 
  tmp_4 = vnic_wq_desc_avail(wq);
  
#line 592 
  tmp_5 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 591 
  ;
  
#line 591 
  if (tmp_4 < (unsigned int)((int)((struct skb_shared_info *)tmp_5)->nr_frags + 5)) {
    
#line 593 
    netif_tx_stop_queue(txq);
    
#line 595 
    netdev_err((struct net_device const *)netdev,"BUG! Tx ring full when queue awake!\n");
    
#line 596 
    ldv_spin_unlock_81(& enic->wq_lock[txq_map]);
    
#line 597 
    __retres = NETDEV_TX_BUSY;
    
#line 597 
    goto return_label;
  }
  else ;
  
#line 600 
  enic_queue_wq_skb(enic,wq,skb);
  
#line 602 
  tmp_6 = vnic_wq_desc_avail(wq);
  
#line 602 
  if (tmp_6 <= 21U) 
#line 603 
                    netif_tx_stop_queue(txq); else ;
  
#line 604 
  if ((unsigned int)*((unsigned char *)skb + 142UL) == 0U) 
#line 605 
                                                           vnic_wq_doorbell(wq);
  else {
    bool tmp_7;
    
#line 604 
    tmp_7 = netif_xmit_stopped((struct netdev_queue const *)txq);
    
#line 604 
    if ((int)tmp_7 != 0) 
#line 605 
                         vnic_wq_doorbell(wq); else ;
  }
  
#line 607 
  ldv_spin_unlock_82(& enic->wq_lock[txq_map]);
  
#line 609 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 609 
                return __retres;
}


#line 613  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static struct rtnl_link_stats64 *enic_get_stats(struct net_device *netdev, struct rtnl_link_stats64 *net_stats)
{
  struct rtnl_link_stats64 *__retres;
  struct vnic_stats *stats;
  int err;
  
#line 616 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 620 
  err = enic_dev_stats_dump(enic,& stats);
  
#line 625 
  if (err == -12) {
    
#line 626 
    __retres = net_stats;
    
#line 626 
    goto return_label;
  }
  else ;
  
#line 628 
  net_stats->tx_packets = stats->tx.tx_frames_ok;
  
#line 629 
  net_stats->tx_bytes = stats->tx.tx_bytes_ok;
  
#line 630 
  net_stats->tx_errors = stats->tx.tx_errors;
  
#line 631 
  net_stats->tx_dropped = stats->tx.tx_drops;
  
#line 633 
  net_stats->rx_packets = stats->rx.rx_frames_ok;
  
#line 634 
  net_stats->rx_bytes = stats->rx.rx_bytes_ok;
  
#line 635 
  net_stats->rx_errors = stats->rx.rx_errors;
  
#line 636 
  net_stats->multicast = stats->rx.rx_multicast_frames_ok;
  
#line 637 
  net_stats->rx_over_errors = enic->rq_truncated_pkts;
  
#line 638 
  net_stats->rx_crc_errors = enic->rq_bad_fcs;
  
#line 639 
  net_stats->rx_dropped = stats->rx.rx_no_bufs + stats->rx.rx_drop;
  
#line 641 
  __retres = net_stats;
  return_label: 
#line 641 
                return __retres;
}


#line 644  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_mc_sync(struct net_device *netdev, u8 const *mc_addr)
{
  int __retres;
  
#line 646 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 648 
  if (enic->mc_count == 32U) {
    
#line 649 
    unsigned int mc_count = (unsigned int)netdev->mc.count;
    
#line 651 
    netdev_warn((struct net_device const *)netdev,"Registering only %d out of %d multicast addresses\n",32,mc_count);
    
#line 654 
    __retres = -28;
    
#line 654 
    goto return_label;
  }
  else ;
  
#line 657 
  enic_dev_add_addr(enic,mc_addr);
  
#line 658 
  enic->mc_count += 1U;
  
#line 660 
  __retres = 0;
  return_label: 
#line 660 
                return __retres;
}


#line 663  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_mc_unsync(struct net_device *netdev, u8 const *mc_addr)
{
  int __retres;
  
#line 665 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 667 
  enic_dev_del_addr(enic,mc_addr);
  
#line 668 
  enic->mc_count -= 1U;
  
#line 670 
  __retres = 0;
  
#line 670 
  return __retres;
}


#line 673  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_uc_sync(struct net_device *netdev, u8 const *uc_addr)
{
  int __retres;
  
#line 675 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 677 
  if (enic->uc_count == 32U) {
    
#line 678 
    unsigned int uc_count = (unsigned int)netdev->uc.count;
    
#line 680 
    netdev_warn((struct net_device const *)netdev,"Registering only %d out of %d unicast addresses\n",32,uc_count);
    
#line 683 
    __retres = -28;
    
#line 683 
    goto return_label;
  }
  else ;
  
#line 686 
  enic_dev_add_addr(enic,uc_addr);
  
#line 687 
  enic->uc_count += 1U;
  
#line 689 
  __retres = 0;
  return_label: 
#line 689 
                return __retres;
}


#line 692  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_uc_unsync(struct net_device *netdev, u8 const *uc_addr)
{
  int __retres;
  
#line 694 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 696 
  enic_dev_del_addr(enic,uc_addr);
  
#line 697 
  enic->uc_count -= 1U;
  
#line 699 
  __retres = 0;
  
#line 699 
  return __retres;
}


#line 702  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
void enic_reset_addr_lists(struct enic *enic)
{
  
#line 704 
  struct net_device *netdev = enic->netdev;
  
#line 706 
  __dev_uc_unsync(netdev,(int (*)(struct net_device *, unsigned char const *))0);
  
#line 707 
  __dev_mc_unsync(netdev,(int (*)(struct net_device *, unsigned char const *))0);
  
#line 709 
  enic->mc_count = 0U;
  
#line 710 
  enic->uc_count = 0U;
  
#line 711 
  enic->flags = 0U;
  
#line 712 
  return;
}


#line 714  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_set_mac_addr(struct net_device *netdev, char *addr)
{
  int __retres;
  int tmp_6;
  
#line 716 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 718 
  tmp_6 = enic_is_dynamic(enic);
  
#line 718 
  if (tmp_6 != 0) 
#line 718 
                  goto _LOR;
  else {
    int tmp_7;
    
#line 718 
    tmp_7 = enic_is_sriov_vf(enic);
    
#line 718 
    if (tmp_7 != 0) {
      _LOR: {
              int tmp_1;
              bool tmp_0;
              
#line 719 
              tmp_0 = is_valid_ether_addr((u8 const *)addr);
              
#line 719 
              if (tmp_0) 
#line 719 
                         tmp_1 = 0; else 
#line 719 
                                         tmp_1 = 1;
              
#line 719 
              if (tmp_1) {
                int tmp_3;
                bool tmp_2;
                
#line 719 
                tmp_2 = is_zero_ether_addr((u8 const *)addr);
                
#line 719 
                if (tmp_2) 
#line 719 
                           tmp_3 = 0; else 
#line 719 
                                           tmp_3 = 1;
                
#line 719 
                if (tmp_3) {
                  
#line 720 
                  __retres = -99;
                  
#line 720 
                  goto return_label;
                }
                else ;
              }
              else ;
            }
    }
    else {
      int tmp_5;
      bool tmp_4;
      
#line 722 
      tmp_4 = is_valid_ether_addr((u8 const *)addr);
      
#line 722 
      if (tmp_4) 
#line 722 
                 tmp_5 = 0; else 
#line 722 
                                 tmp_5 = 1;
      
#line 722 
      if (tmp_5) {
        
#line 723 
        __retres = -99;
        
#line 723 
        goto return_label;
      }
      else ;
    }
  }
  
#line 726 
  memcpy((void *)netdev->dev_addr,(void const *)addr,(unsigned long)netdev->addr_len);
  
#line 728 
  __retres = 0;
  return_label: 
#line 728 
                return __retres;
}


#line 731  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_set_mac_address_dynamic(struct net_device *netdev, void *p)
{
  int __retres;
  int err;
  bool tmp_0;
  bool tmp_1;
  
#line 733 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 734 
  struct sockaddr *saddr = (struct sockaddr *)p;
  
#line 735 
  char *addr = (char *)(& saddr->sa_data);
  
#line 738 
  tmp_0 = netif_running((struct net_device const *)enic->netdev);
  
#line 738 
  if ((int)tmp_0 != 0) {
    
#line 739 
    err = enic_dev_del_station_addr(enic);
    
#line 740 
    if (err != 0) {
      
#line 741 
      __retres = err;
      
#line 741 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 744 
  err = enic_set_mac_addr(netdev,addr);
  
#line 745 
  if (err != 0) {
    
#line 746 
    __retres = err;
    
#line 746 
    goto return_label;
  }
  else ;
  
#line 748 
  tmp_1 = netif_running((struct net_device const *)enic->netdev);
  
#line 748 
  if ((int)tmp_1 != 0) {
    
#line 749 
    err = enic_dev_add_station_addr(enic);
    
#line 750 
    if (err != 0) {
      
#line 751 
      __retres = err;
      
#line 751 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 754 
  __retres = err;
  return_label: 
#line 754 
                return __retres;
}


#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_set_mac_address(struct net_device *netdev, void *p)
{
  int __retres;
  int err;
  int tmp_0;
  
#line 759 
  struct sockaddr *saddr = (struct sockaddr *)p;
  
#line 760 
  char *addr = (char *)(& saddr->sa_data);
  
#line 761 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 764 
  err = enic_dev_del_station_addr(enic);
  
#line 765 
  if (err != 0) {
    
#line 766 
    __retres = err;
    
#line 766 
    goto return_label;
  }
  else ;
  
#line 768 
  err = enic_set_mac_addr(netdev,addr);
  
#line 769 
  if (err != 0) {
    
#line 770 
    __retres = err;
    
#line 770 
    goto return_label;
  }
  else ;
  
#line 772 
  tmp_0 = enic_dev_add_station_addr(enic);
  
#line 772 
  __retres = tmp_0;
  return_label: 
#line 772 
                return __retres;
}


#line 776  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_set_rx_mode(struct net_device *netdev)
{
  int tmp_0;
  int tmp_1;
  
#line 778 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 779 
  int directed = 1;
  
#line 780 
  int multicast = (int)(netdev->flags >> 12) & 1;
  
#line 781 
  int broadcast = (int)(netdev->flags >> 1) & 1;
  
#line 782 
  int promisc = ((netdev->flags & 256U) != 0U || netdev->uc.count > 32) != 0;
  
#line 784 
  int allmulti = ((netdev->flags & 512U) != 0U || netdev->mc.count > 32) != 0;
  
#line 787 
  if (allmulti != 0) 
#line 787 
                     tmp_0 = 512; else 
#line 787 
                                       tmp_0 = 0;
  
#line 788 
  if (promisc != 0) 
#line 788 
                    tmp_1 = 256; else 
#line 788 
                                      tmp_1 = 0;
  
#line 786 
  unsigned int flags = (netdev->flags | (unsigned int)tmp_0) | (unsigned int)tmp_1;
  
#line 790 
  if (enic->flags != flags) {
    
#line 791 
    enic->flags = flags;
    
#line 792 
    enic_dev_packet_filter(enic,directed,multicast,broadcast,promisc,allmulti);
  }
  else ;
  
#line 796 
  if (promisc == 0) {
    
#line 797 
    __dev_uc_sync(netdev,& enic_uc_sync,& enic_uc_unsync);
    
#line 798 
    if (allmulti == 0) 
#line 799 
                       __dev_mc_sync(netdev,& enic_mc_sync,& enic_mc_unsync); else ;
  }
  else ;
  
#line 801 
  return;
}


#line 804  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_tx_timeout(struct net_device *netdev)
{
  
#line 806 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 807 
  ldv_schedule_work_83(& enic->reset);
  
#line 808 
  return;
}


#line 810  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_set_vf_mac(struct net_device *netdev, int vf, u8 *mac)
{
  int __retres;
  struct enic_port_profile *pp;
  int err;
  int tmp_0;
  bool tmp_3;
  
#line 812 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 816 
  tmp_0 = enic_is_valid_pp_vf(enic,vf,& err);
  
#line 816 
  if (tmp_0 != 0) 
    
#line 816 
    if (vf == -1) 
#line 816 
                  pp = enic->pp; else 
#line 816 
                                      pp = enic->pp + vf;
  else 
#line 816 
       pp = (struct enic_port_profile *)0;
  
#line 817 
  if (err != 0) {
    
#line 818 
    __retres = err;
    
#line 818 
    goto return_label;
  }
  else ;
  
#line 820 
  tmp_3 = is_valid_ether_addr((u8 const *)mac);
  
#line 820 
  if ((int)tmp_3 != 0) 
#line 820 
                       goto _LOR;
  else {
    bool tmp_4;
    
#line 820 
    tmp_4 = is_zero_ether_addr((u8 const *)mac);
    
#line 820 
    if ((int)tmp_4 != 0) 
      _LOR: 
#line 821 
            if (vf == -1) {
              
#line 822 
              memcpy((void *)(& pp->vf_mac),(void const *)mac,6UL);
              
#line 823 
              __retres = 0;
              
#line 823 
              goto return_label;
            }
            else {
              int tmp_1;
              int tmp_2;
              
#line 828 
              ldv_spin_lock_bh_84(& enic->devcmd_lock);
              
#line 828 
              tmp_1 = enic_is_valid_vf(enic,vf);
              
#line 828 
              if (tmp_1 != 0) {
                
#line 828 
                vnic_dev_cmd_proxy_by_index_start(enic->vdev,(unsigned short)((int)((unsigned short)vf)));
                
#line 828 
                err = vnic_dev_set_mac_addr(enic->vdev,mac);
                
#line 828 
                vnic_dev_cmd_proxy_end(enic->vdev);
              }
              else 
#line 828 
                   err = vnic_dev_set_mac_addr(enic->vdev,mac);
              
#line 828 
              ldv_spin_unlock_bh_85(& enic->devcmd_lock);
              
#line 830 
              tmp_2 = enic_dev_status_to_errno(err);
              
#line 830 
              __retres = tmp_2;
              
#line 830 
              goto return_label;
            }
    else {
      
#line 833 
      __retres = -22;
      
#line 833 
      goto return_label;
    }
  }
  return_label: 
#line 820 
                return __retres;
}


#line 836  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_set_vf_port(struct net_device *netdev, int vf, struct nlattr **port)
{
  int __retres;
  struct enic_port_profile prev_pp;
  struct enic_port_profile *pp;
  int tmp_0;
  
#line 839 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 842 
  int err = 0;
  
#line 842 
  int restore_pp = 1;
  
#line 844 
  tmp_0 = enic_is_valid_pp_vf(enic,vf,& err);
  
#line 844 
  if (tmp_0 != 0) 
    
#line 844 
    if (vf == -1) 
#line 844 
                  pp = enic->pp; else 
#line 844 
                                      pp = enic->pp + vf;
  else 
#line 844 
       pp = (struct enic_port_profile *)0;
  
#line 845 
  if (err != 0) {
    
#line 846 
    __retres = err;
    
#line 846 
    goto return_label;
  }
  else ;
  
#line 848 
  if (*(port + 6U) == (struct nlattr *)0) {
    
#line 849 
    __retres = -95;
    
#line 849 
    goto return_label;
  }
  else ;
  
#line 851 
  memcpy((void *)(& prev_pp),(void const *)pp,92UL);
  
#line 852 
  memset((void *)pp,0,92UL);
  
#line 854 
  pp->set |= 2U;
  
#line 855 
  pp->request = nla_get_u8((struct nlattr const *)*(port + 6U));
  
#line 857 
  if (*(port + 2U) != (struct nlattr *)0) {
    void *tmp_1;
    
#line 858 
    pp->set |= 4U;
    
#line 859 
    tmp_1 = nla_data((struct nlattr const *)*(port + 2U));
    
#line 859 
    ;
    
#line 859 
    memcpy((void *)(& pp->name),(void const *)tmp_1,40UL);
  }
  else ;
  
#line 863 
  if (*(port + 4U) != (struct nlattr *)0) {
    void *tmp_2;
    
#line 864 
    pp->set |= 8U;
    
#line 866 
    tmp_2 = nla_data((struct nlattr const *)*(port + 4U));
    
#line 865 
    ;
    
#line 865 
    memcpy((void *)(& pp->instance_uuid),(void const *)tmp_2,16UL);
  }
  else ;
  
#line 869 
  if (*(port + 5U) != (struct nlattr *)0) {
    void *tmp_3;
    
#line 870 
    pp->set |= 16U;
    
#line 872 
    tmp_3 = nla_data((struct nlattr const *)*(port + 5U));
    
#line 871 
    ;
    
#line 871 
    memcpy((void *)(& pp->host_uuid),(void const *)tmp_3,16UL);
  }
  else ;
  
#line 875 
  if (vf == -1) {
    int tmp_5;
    bool tmp_4;
    bool tmp_6;
    
#line 877 
    tmp_4 = is_zero_ether_addr((u8 const *)(& prev_pp.vf_mac));
    
#line 877 
    if (tmp_4) 
#line 877 
               tmp_5 = 0; else 
#line 877 
                               tmp_5 = 1;
    
#line 877 
    if (tmp_5) 
#line 878 
               memcpy((void *)(& pp->mac_addr),(void const *)(& prev_pp.vf_mac),6UL); else ;
    
#line 880 
    tmp_6 = is_zero_ether_addr((u8 const *)netdev->dev_addr);
    
#line 880 
    if ((int)tmp_6 != 0) 
#line 881 
                         eth_hw_addr_random(netdev); else ;
  }
  else {
    int tmp_7;
    
#line 884 
    ldv_spin_lock_bh_86(& enic->devcmd_lock);
    
#line 884 
    tmp_7 = enic_is_valid_vf(enic,vf);
    
#line 884 
    if (tmp_7 != 0) {
      
#line 884 
      vnic_dev_cmd_proxy_by_index_start(enic->vdev,(unsigned short)((int)((unsigned short)vf)));
      
#line 884 
      err = vnic_dev_get_mac_addr(enic->vdev,(u8 *)(& pp->mac_addr));
      
#line 884 
      vnic_dev_cmd_proxy_end(enic->vdev);
    }
    else 
#line 884 
         err = vnic_dev_get_mac_addr(enic->vdev,(u8 *)(& pp->mac_addr));
    
#line 884 
    ldv_spin_unlock_bh_87(& enic->devcmd_lock);
    
#line 886 
    if (err != 0) {
      int tmp_8;
      
#line 887 
      netdev_err((struct net_device const *)netdev,"Error getting mac for vf %d\n",vf);
      
#line 888 
      memcpy((void *)pp,(void const *)(& prev_pp),92UL);
      
#line 889 
      tmp_8 = enic_dev_status_to_errno(err);
      
#line 889 
      __retres = tmp_8;
      
#line 889 
      goto return_label;
    }
    else ;
  }
  
#line 893 
  err = enic_process_set_pp_request(enic,vf,& prev_pp,& restore_pp);
  
#line 894 
  if (err != 0) 
    
#line 895 
    if (restore_pp != 0) 
#line 899 
                         memcpy((void *)pp,(void const *)(& prev_pp),92UL);
    else {
      
#line 901 
      memset((void *)pp,0,92UL);
      
#line 902 
      if (vf == -1) 
#line 903 
                    eth_zero_addr(netdev->dev_addr); else ;
    }
  else {
    
#line 909 
    pp->set |= 1U;
    
#line 912 
    if ((unsigned int)pp->request == 3U) {
      
#line 913 
      eth_zero_addr((u8 *)(& pp->mac_addr));
      
#line 914 
      if (vf == -1) 
#line 915 
                    eth_zero_addr(netdev->dev_addr); else ;
    }
    else ;
  }
  
#line 919 
  if (vf == -1) 
#line 920 
                eth_zero_addr((u8 *)(& pp->vf_mac)); else ;
  
#line 922 
  __retres = err;
  return_label: 
#line 922 
                return __retres;
}


#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_get_vf_port(struct net_device *netdev, int vf, struct sk_buff *skb)
{
  int __retres;
  struct enic_port_profile *pp;
  int err;
  int tmp_0;
  int tmp_1;
  
#line 928 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 929 
  u16 response = (unsigned short)256U;
  
#line 933 
  tmp_0 = enic_is_valid_pp_vf(enic,vf,& err);
  
#line 933 
  if (tmp_0 != 0) 
    
#line 933 
    if (vf == -1) 
#line 933 
                  pp = enic->pp; else 
#line 933 
                                      pp = enic->pp + vf;
  else 
#line 933 
       pp = (struct enic_port_profile *)0;
  
#line 934 
  if (err != 0) {
    
#line 935 
    __retres = err;
    
#line 935 
    goto return_label;
  }
  else ;
  
#line 937 
  if ((pp->set & 1U) == 0U) {
    
#line 938 
    __retres = -61;
    
#line 938 
    goto return_label;
  }
  else ;
  
#line 940 
  err = enic_process_get_pp_request(enic,vf,(int)pp->request,& response);
  
#line 941 
  if (err != 0) {
    
#line 942 
    __retres = err;
    
#line 942 
    goto return_label;
  }
  else ;
  
#line 944 
  tmp_1 = nla_put_u16(skb,6,(unsigned short)((int)pp->request));
  
#line 944 
  if (tmp_1 != 0) 
#line 953 
                  goto nla_put_failure;
  else {
    int tmp_2;
    
#line 944 
    tmp_2 = nla_put_u16(skb,7,(unsigned short)((int)response));
    
#line 944 
    if (tmp_2 != 0) 
#line 953 
                    goto nla_put_failure;
    else 
      
#line 945 
      if ((pp->set & 4U) != 0U) {
        int tmp_3;
        
#line 946 
        tmp_3 = nla_put(skb,2,40,(void const *)(& pp->name));
        
#line 946 
        if (tmp_3 != 0) 
#line 953 
                        goto nla_put_failure; else 
#line 944 
                                                   goto _LAND_0;
      }
      else {
        _LAND_0: 
#line 947 
        ;
        
#line 947 
        if ((pp->set & 8U) != 0U) {
          int tmp_4;
          
#line 948 
          tmp_4 = nla_put(skb,4,16,(void const *)(& pp->instance_uuid));
          
#line 948 
          if (tmp_4 != 0) 
#line 953 
                          goto nla_put_failure; else 
#line 944 
                                                     goto _LAND;
        }
        else {
          _LAND: 
#line 950 
          ;
          
#line 950 
          if ((pp->set & 16U) != 0U) {
            int tmp_5;
            
#line 951 
            tmp_5 = nla_put(skb,5,16,(void const *)(& pp->host_uuid));
            
#line 951 
            if (tmp_5 != 0) 
#line 953 
                            goto nla_put_failure; else ;
          }
          else ;
        }
      }
  }
  
#line 954 
  __retres = 0;
  
#line 954 
  goto return_label;
  nla_put_failure: 
#line 956 
  ;
  
#line 957 
  __retres = -90;
  return_label: 
#line 957 
                return __retres;
}


#line 960  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_free_rq_buf(struct vnic_rq *rq, struct vnic_rq_buf *buf)
{
  
#line 962 
  struct enic *enic = vnic_dev_priv(rq->vdev);
  
#line 964 
  if (buf->os_buf == (void *)0) 
#line 965 
                                goto return_label; else ;
  
#line 967 
  pci_unmap_single(enic->pdev,buf->dma_addr,(unsigned long)buf->len,2);
  
#line 969 
  dev_kfree_skb_any((struct sk_buff *)buf->os_buf);
  
#line 970 
  buf->os_buf = (void *)0;
  return_label: 
#line 971 
                return;
}


#line 973  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_rq_alloc_buf(struct vnic_rq *rq)
{
  int __retres;
  struct sk_buff *skb;
  dma_addr_t dma_addr;
  int tmp_0;
  
#line 975 
  struct enic *enic = vnic_dev_priv(rq->vdev);
  
#line 976 
  struct net_device *netdev = enic->netdev;
  
#line 978 
  unsigned int len = netdev->mtu + 18U;
  
#line 979 
  unsigned int os_buf_index = 0U;
  
#line 981 
  struct vnic_rq_buf *buf = rq->to_use;
  
#line 983 
  if (buf->os_buf != (void *)0) {
    
#line 984 
    enic_queue_rq_desc(rq,buf->os_buf,os_buf_index,buf->dma_addr,buf->len);
    
#line 987 
    __retres = 0;
    
#line 987 
    goto return_label;
  }
  else ;
  
#line 989 
  skb = netdev_alloc_skb_ip_align(netdev,len);
  
#line 990 
  if (skb == (struct sk_buff *)0) {
    
#line 991 
    __retres = -12;
    
#line 991 
    goto return_label;
  }
  else ;
  
#line 993 
  dma_addr = pci_map_single(enic->pdev,(void *)skb->data,(unsigned long)len,2);
  
#line 995 
  tmp_0 = enic_dma_map_check(enic,dma_addr);
  
#line 995 
  if ((long)(tmp_0 != 0) != 0L) {
    
#line 996 
    consume_skb(skb);
    
#line 997 
    __retres = -12;
    
#line 997 
    goto return_label;
  }
  else ;
  
#line 1000 
  enic_queue_rq_desc(rq,(void *)skb,os_buf_index,dma_addr,len);
  
#line 1003 
  __retres = 0;
  return_label: 
#line 1003 
                return __retres;
}


#line 1006  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_intr_update_pkt_size(struct vnic_rx_bytes_counter *pkt_size, u32 pkt_len)
{
  
#line 1009 
  if (pkt_len > 999U) 
#line 1010 
                      pkt_size->large_pkt_bytes_cnt += pkt_len; else 
                                                                  
#line 1012 
                                                                  pkt_size->small_pkt_bytes_cnt += pkt_len;
  
#line 1013 
  return;
}


#line 1015  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static bool enic_rxcopybreak(struct net_device *netdev, struct sk_buff **skb, struct vnic_rq_buf *buf, u16 len)
{
  bool __retres;
  struct sk_buff *new_skb;
  
#line 1018 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 1021 
  if ((unsigned int)len > enic->rx_copybreak) {
    
#line 1022 
    __retres = (_Bool)0;
    
#line 1022 
    goto return_label;
  }
  else ;
  
#line 1023 
  new_skb = netdev_alloc_skb_ip_align(netdev,(unsigned int)len);
  
#line 1024 
  if (new_skb == (struct sk_buff *)0) {
    
#line 1025 
    __retres = (_Bool)0;
    
#line 1025 
    goto return_label;
  }
  else ;
  
#line 1026 
  pci_dma_sync_single_for_cpu(enic->pdev,buf->dma_addr,(unsigned long)len,2);
  
#line 1028 
  memcpy((void *)new_skb->data,(void const *)(*skb)->data,(unsigned long)len);
  
#line 1029 
  *skb = new_skb;
  
#line 1031 
  __retres = (_Bool)1;
  return_label: 
#line 1031 
                return __retres;
}


#line 1034  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_rq_indicate_buf(struct vnic_rq *rq, struct cq_desc *cq_desc, struct vnic_rq_buf *buf, int skipped, void *opaque)
{
  struct sk_buff *skb;
  unsigned int tmp_0;
  u8 type;
  u8 color;
  u8 eop;
  u8 sop;
  u8 ingress_port;
  u8 vlan_stripped;
  u8 fcoe;
  u8 fcoe_sof;
  u8 fcoe_fc_crc_ok;
  u8 fcoe_enc_error;
  u8 fcoe_eof;
  u8 tcp_udp_csum_ok;
  u8 udp;
  u8 tcp;
  u8 ipv4_csum_ok;
  u8 ipv6;
  u8 ipv4;
  u8 ipv4_fragment;
  u8 fcs_ok;
  u8 rss_type;
  u8 csum_not_calc;
  u8 packet_error;
  u16 q_number;
  u16 completed_index;
  u16 bytes_written;
  u16 vlan_tci;
  u16 checksum;
  u32 rss_hash;
  
#line 1038 
  struct enic *enic = vnic_dev_priv(rq->vdev);
  
#line 1039 
  struct net_device *netdev = enic->netdev;
  
#line 1041 
  tmp_0 = enic_cq_rq(enic,rq->index);
  
#line 1041 
  struct vnic_cq *cq = & enic->cq[tmp_0];
  
#line 1051 
  if (skipped != 0) 
#line 1052 
                    goto return_label; else ;
  
#line 1054 
  skb = (struct sk_buff *)buf->os_buf;
  
#line 1056 
  cq_enet_rq_desc_dec((struct cq_enet_rq_desc *)cq_desc,& type,& color,& q_number,& completed_index,& ingress_port,& fcoe,& eop,& sop,& rss_type,& csum_not_calc,& rss_hash,& bytes_written,& packet_error,& vlan_stripped,& vlan_tci,& checksum,& fcoe_sof,& fcoe_fc_crc_ok,& fcoe_enc_error,& fcoe_eof,& tcp_udp_csum_ok,& udp,& tcp,& ipv4_csum_ok,& ipv6,& ipv4,& ipv4_fragment,& fcs_ok);
  
#line 1066 
  if ((unsigned int)packet_error != 0U) {
    
#line 1068 
    if ((unsigned int)fcs_ok == 0U) {
      
#line 1069 
      if ((unsigned int)bytes_written != 0U) 
#line 1070 
                                             enic->rq_bad_fcs += 1ULL;
      else 
        
#line 1071 
        if ((unsigned int)bytes_written == 0U) 
#line 1072 
                                               enic->rq_truncated_pkts += 1ULL; else ;
    }
    else ;
    
#line 1075 
    pci_unmap_single(enic->pdev,buf->dma_addr,(unsigned long)buf->len,2);
    
#line 1077 
    dev_kfree_skb_any(skb);
    
#line 1078 
    buf->os_buf = (void *)0;
    
#line 1080 
    goto return_label;
  }
  else ;
  
#line 1083 
  if ((unsigned int)eop != 0U && (unsigned int)bytes_written != 0U) {
    int tmp_2;
    bool tmp_1;
    bool tmp_4;
    
#line 1088 
    tmp_1 = enic_rxcopybreak(netdev,& skb,buf,(unsigned short)((int)bytes_written));
    
#line 1088 
    if (tmp_1) 
#line 1088 
               tmp_2 = 0; else 
#line 1088 
                               tmp_2 = 1;
    
#line 1088 
    if (tmp_2) {
      
#line 1089 
      buf->os_buf = (void *)0;
      
#line 1090 
      pci_unmap_single(enic->pdev,buf->dma_addr,(unsigned long)buf->len,2);
    }
    else ;
    
#line 1093 
    __builtin_prefetch((void const *)skb->data);
    
#line 1095 
    skb_put(skb,(unsigned int)bytes_written);
    
#line 1096 
    skb->protocol = eth_type_trans(skb,netdev);
    
#line 1097 
    skb_record_rx_queue(skb,(unsigned short)((int)q_number));
    
#line 1098 
    if ((netdev->features & 8589934592ULL) != 0ULL) {
      int tmp_3;
      
#line 1104 
      if (((int)rss_type & 84) != 0) 
#line 1104 
                                     tmp_3 = 3; else 
#line 1104 
                                                     tmp_3 = 2;
      
#line 1099 
      ;
      
#line 1099 
      ;
      
#line 1099 
      skb_set_hash(skb,rss_hash,(enum pkt_hash_types)tmp_3);
    }
    else ;
    
#line 1112 
    if (((netdev->features & 17179869184ULL) != 0ULL && (unsigned int)tcp_udp_csum_ok != 0U) && (unsigned int)ipv4_csum_ok != 0U) 
      
#line 1114 
      skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))1U; else ;
    
#line 1116 
    if ((unsigned int)vlan_stripped != 0U) 
#line 1117 
                                           __vlan_hwaccel_put_tag(skb,(unsigned short)129,(unsigned short)((int)vlan_tci)); else ;
    
#line 1119 
    skb_mark_napi_id(skb,& enic->napi[rq->index]);
    
#line 1120 
    tmp_4 = enic_poll_busy_polling(rq);
    
#line 1120 
    if ((int)tmp_4 != 0) 
#line 1120 
                         goto _LOR;
    else 
      
#line 1120 
      if ((netdev->features & 16384ULL) == 0ULL) _LOR: 
#line 1122 
                                                       netif_receive_skb(skb); else 
                                                                    
#line 1124 
                                                                    napi_gro_receive(& enic->napi[(int)q_number],skb);
    
#line 1125 
    if (enic->rx_coalesce_setting.use_adaptive_rx_coalesce != 0U) 
#line 1126 
                                                                  enic_intr_update_pkt_size(& cq->pkt_size_counter,(unsigned int)bytes_written); else ;
  }
  else {
    
#line 1133 
    pci_unmap_single(enic->pdev,buf->dma_addr,(unsigned long)buf->len,2);
    
#line 1135 
    dev_kfree_skb_any(skb);
    
#line 1136 
    buf->os_buf = (void *)0;
  }
  return_label: 
#line 1138 
                return;
}


#line 1140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_rq_service(struct vnic_dev *vdev, struct cq_desc *cq_desc, u8 type, u16 q_number, u16 completed_index, void *opaque)
{
  int __retres;
  
#line 1143 
  struct enic *enic = vnic_dev_priv(vdev);
  
#line 1145 
  vnic_rq_service(& enic->rq[(int)q_number],cq_desc,(unsigned short)((int)completed_index),0,& enic_rq_indicate_buf,opaque);
  
#line 1149 
  __retres = 0;
  
#line 1149 
  return __retres;
}


#line 1152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_poll(struct napi_struct *napi, int budget)
{
  int __retres;
  unsigned int work_done;
  unsigned int wq_work_done;
  int err;
  int tmp_4;
  bool tmp_3;
  
#line 1154 
  struct net_device *netdev = napi->dev;
  
#line 1155 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 1156 
  unsigned int cq_rq = enic_cq_rq(enic,0U);
  
#line 1157 
  unsigned int cq_wq = enic_cq_wq(enic,0U);
  
#line 1158 
  unsigned int intr = enic_legacy_io_intr();
  
#line 1159 
  unsigned int rq_work_to_do = (unsigned int)budget;
  
#line 1160 
  unsigned int wq_work_to_do = 4294967295U;
  
#line 1161 
  unsigned int rq_work_done = 0U;
  
#line 1164 
  wq_work_done = vnic_cq_service(& enic->cq[cq_wq],wq_work_to_do,& enic_wq_service,(void *)0);
  
#line 1167 
  tmp_3 = enic_poll_lock_napi(& enic->rq[cq_rq]);
  
#line 1167 
  if (tmp_3) 
#line 1167 
             tmp_4 = 0; else 
#line 1167 
                             tmp_4 = 1;
  
#line 1167 
  if (tmp_4) {
    
#line 1168 
    if (wq_work_done != 0U) 
#line 1169 
                            vnic_intr_return_credits(& enic->intr[intr],wq_work_done,0,0); else ;
    
#line 1173 
    __retres = budget;
    
#line 1173 
    goto return_label;
  }
  else ;
  
#line 1176 
  if (budget > 0) 
#line 1177 
                  rq_work_done = vnic_cq_service(& enic->cq[cq_rq],rq_work_to_do,& enic_rq_service,(void *)0); else ;
  
#line 1185 
  work_done = rq_work_done + wq_work_done;
  
#line 1187 
  if (work_done != 0U) 
#line 1188 
                       vnic_intr_return_credits(& enic->intr[intr],work_done,0,0); else ;
  
#line 1193 
  err = vnic_rq_fill(& enic->rq[0],& enic_rq_alloc_buf);
  
#line 1194 
  enic_poll_unlock_napi(& enic->rq[cq_rq],napi);
  
#line 1200 
  if (err != 0) 
#line 1201 
                rq_work_done = rq_work_to_do; else ;
  
#line 1203 
  if (rq_work_done < rq_work_to_do) {
    
#line 1209 
    napi_complete(napi);
    
#line 1210 
    vnic_intr_unmask(& enic->intr[intr]);
  }
  else ;
  
#line 1213 
  __retres = (int)rq_work_done;
  return_label: 
#line 1213 
                return __retres;
}


#line 1216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_set_int_moderation(struct enic *enic, struct vnic_rq *rq)
{
  unsigned int tmp_0;
  
#line 1218 
  unsigned int intr = enic_msix_rq_intr(enic,rq->index);
  
#line 1219 
  tmp_0 = enic_cq_rq(enic,rq->index);
  
#line 1219 
  struct vnic_cq *cq = & enic->cq[tmp_0];
  
#line 1220 
  u32 timer = cq->tobe_rx_coal_timeval;
  
#line 1222 
  if (cq->tobe_rx_coal_timeval != cq->cur_rx_coal_timeval) {
    
#line 1223 
    vnic_intr_coalescing_timer_set(& enic->intr[intr],timer);
    
#line 1224 
    cq->cur_rx_coal_timeval = cq->tobe_rx_coal_timeval;
  }
  else ;
  
#line 1226 
  return;
}


#line 1228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_calc_int_moderation(struct enic *enic, struct vnic_rq *rq)
{
  unsigned int tmp;
  int index;
  u32 timer;
  u32 range_start;
  u32 traffic;
  u64 delta;
  s64 tmp_1;
  
#line 1230 
  struct enic_rx_coal *rx_coal = & enic->rx_coalesce_setting;
  
#line 1231 
  tmp = enic_cq_rq(enic,rq->index);
  
#line 1231 
  struct vnic_cq *cq = & enic->cq[tmp];
  
#line 1232 
  struct vnic_rx_bytes_counter *pkt_size_counter = & cq->pkt_size_counter;
  
#line 1238 
  ktime_t now = ktime_get();
  
#line 1240 
  tmp_1 = ktime_us_delta(now,cq->prev_ts);
  
#line 1240 
  delta = (unsigned long long)tmp_1;
  
#line 1241 
  if (delta <= 99ULL) 
#line 1242 
                      goto return_label; else ;
  
#line 1243 
  cq->prev_ts = now;
  
#line 1245 
  traffic = pkt_size_counter->large_pkt_bytes_cnt + pkt_size_counter->small_pkt_bytes_cnt;
  
#line 1255 
  traffic <<= 3;
  
#line 1256 
  if (delta <= 4294967295ULL) 
#line 1256 
                              traffic /= (unsigned int)delta; else 
#line 1256 
                                                                   traffic = 0U;
  
#line 1258 
  index = 0;
  
#line 1258 
  goto ldv_55821;
  ldv_55820: 
#line 1259 
  ;
  
#line 1259 
  if (mod_table[index].rx_rate > traffic) 
#line 1260 
                                          goto ldv_55819; else ;
  
#line 1258 
  index += 1;
  ldv_55821: 
#line 1259 
  ;
  
#line 1258 
  if (index <= 9) 
#line 1260 
                  goto ldv_55820; else 
#line 1263 
                                       goto ldv_55819;
  ldv_55819: 
#line 1264 
  ;
  
#line 1261 
  if (pkt_size_counter->small_pkt_bytes_cnt > pkt_size_counter->large_pkt_bytes_cnt << 1) 
    
#line 1261 
    range_start = rx_coal->small_pkt_range_start; else 
#line 1261 
                                                       range_start = rx_coal->large_pkt_range_start;
  
#line 1265 
  timer = ((rx_coal->range_end - range_start) * mod_table[index].range_percent) / 100U + range_start;
  
#line 1268 
  cq->tobe_rx_coal_timeval = (cq->tobe_rx_coal_timeval + timer) >> 1;
  
#line 1270 
  pkt_size_counter->large_pkt_bytes_cnt = 0U;
  
#line 1271 
  pkt_size_counter->small_pkt_bytes_cnt = 0U;
  return_label: 
#line 1272 
                return;
}


#line 1275  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_free_rx_cpu_rmap(struct enic *enic)
{
  
#line 1277 
  free_irq_cpu_rmap((enic->netdev)->rx_cpu_rmap);
  
#line 1278 
  (enic->netdev)->rx_cpu_rmap = (struct cpu_rmap *)0;
  
#line 1279 
  return;
}


#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_set_rx_cpu_rmap(struct enic *enic)
{
  int i;
  int res;
  enum vnic_dev_intr_mode tmp;
  
#line 1285 
  tmp = vnic_dev_get_intr_mode(enic->vdev);
  
#line 1285 
  if (tmp == (unsigned int)VNIC_DEV_INTR_MODE_MSIX) {
    
#line 1286 
    (enic->netdev)->rx_cpu_rmap = alloc_irq_cpu_rmap(enic->rq_count);
    
#line 1287 
    if ((long)((enic->netdev)->rx_cpu_rmap == (struct cpu_rmap *)0) != 0L) 
      
#line 1288 
      goto return_label; else ;
    
#line 1289 
    i = 0;
    
#line 1289 
    goto ldv_55831;
    ldv_55830: 
#line 1290 
    ;
    
#line 1290 
    res = irq_cpu_rmap_add((enic->netdev)->rx_cpu_rmap,(int)enic->msix_entry[i].vector);
    
#line 1292 
    if ((long)(res != 0) != 0L) {
      
#line 1293 
      enic_free_rx_cpu_rmap(enic);
      
#line 1294 
      goto return_label;
    }
    else ;
    
#line 1289 
    i += 1;
    ldv_55831: 
#line 1290 
    ;
    
#line 1289 
    if (enic->rq_count > (unsigned int)i) 
#line 1291 
                                          goto ldv_55830; else 
#line 1294 
                                                               goto ldv_55832;
    ldv_55832: 
#line 1295 
    ;
  }
  else ;
  return_label: 
#line 1297 
                return;
}


#line 1313  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_busy_poll(struct napi_struct *napi)
{
  int __retres;
  unsigned int work_done;
  int tmp_3;
  bool tmp_2;
  
#line 1315 
  struct net_device *netdev = napi->dev;
  
#line 1316 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 1317 
  unsigned int rq = (unsigned int)(((long)napi - (long)(& enic->napi[0])) / 280L);
  
#line 1318 
  unsigned int cq = enic_cq_rq(enic,rq);
  
#line 1319 
  unsigned int intr = enic_msix_rq_intr(enic,rq);
  
#line 1320 
  unsigned int work_to_do = 4294967295U;
  
#line 1323 
  tmp_2 = enic_poll_lock_poll(& enic->rq[rq]);
  
#line 1323 
  if (tmp_2) 
#line 1323 
             tmp_3 = 0; else 
#line 1323 
                             tmp_3 = 1;
  
#line 1323 
  if (tmp_3) {
    
#line 1324 
    __retres = -2;
    
#line 1324 
    goto return_label;
  }
  else ;
  
#line 1325 
  work_done = vnic_cq_service(& enic->cq[cq],work_to_do,& enic_rq_service,(void *)0);
  
#line 1328 
  if (work_done != 0U) 
#line 1329 
                       vnic_intr_return_credits(& enic->intr[intr],work_done,0,0); else ;
  
#line 1331 
  vnic_rq_fill(& enic->rq[rq],& enic_rq_alloc_buf);
  
#line 1332 
  if (enic->rx_coalesce_setting.use_adaptive_rx_coalesce != 0U) 
#line 1333 
                                                                enic_calc_int_moderation(enic,& enic->rq[rq]); else ;
  
#line 1334 
  enic_poll_unlock_poll(& enic->rq[rq]);
  
#line 1336 
  __retres = (int)work_done;
  return_label: 
#line 1336 
                return __retres;
}


#line 1340  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_poll_msix_wq(struct napi_struct *napi, int budget)
{
  int __retres;
  unsigned int cq;
  unsigned int intr;
  unsigned int wq_work_done;
  unsigned int wq_irq;
  
#line 1342 
  struct net_device *netdev = napi->dev;
  
#line 1343 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 1344 
  unsigned int wq_index = (unsigned int)(((long)napi - (long)(& enic->napi[0])) / 280L) - enic->rq_count;
  
#line 1345 
  struct vnic_wq *wq = & enic->wq[wq_index];
  
#line 1348 
  unsigned int wq_work_to_do = 4294967295U;
  
#line 1352 
  wq_irq = wq->index;
  
#line 1353 
  cq = enic_cq_wq(enic,wq_irq);
  
#line 1354 
  intr = enic_msix_wq_intr(enic,wq_irq);
  
#line 1355 
  wq_work_done = vnic_cq_service(& enic->cq[cq],wq_work_to_do,& enic_wq_service,(void *)0);
  
#line 1358 
  vnic_intr_return_credits(& enic->intr[intr],wq_work_done,0,1);
  
#line 1361 
  if (wq_work_done == 0U) {
    
#line 1362 
    napi_complete(napi);
    
#line 1363 
    vnic_intr_unmask(& enic->intr[intr]);
    
#line 1364 
    __retres = 0;
    
#line 1364 
    goto return_label;
  }
  else ;
  
#line 1367 
  __retres = budget;
  return_label: 
#line 1367 
                return __retres;
}


#line 1370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_poll_msix_rq(struct napi_struct *napi, int budget)
{
  int __retres;
  int err;
  int tmp_3;
  bool tmp_2;
  
#line 1372 
  struct net_device *netdev = napi->dev;
  
#line 1373 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 1374 
  unsigned int rq = (unsigned int)(((long)napi - (long)(& enic->napi[0])) / 280L);
  
#line 1375 
  unsigned int cq = enic_cq_rq(enic,rq);
  
#line 1376 
  unsigned int intr = enic_msix_rq_intr(enic,rq);
  
#line 1377 
  unsigned int work_to_do = (unsigned int)budget;
  
#line 1378 
  unsigned int work_done = 0U;
  
#line 1381 
  tmp_2 = enic_poll_lock_napi(& enic->rq[rq]);
  
#line 1381 
  if (tmp_2) 
#line 1381 
             tmp_3 = 0; else 
#line 1381 
                             tmp_3 = 1;
  
#line 1381 
  if (tmp_3) {
    
#line 1382 
    __retres = budget;
    
#line 1382 
    goto return_label;
  }
  else ;
  
#line 1386 
  if (budget > 0) 
#line 1387 
                  work_done = vnic_cq_service(& enic->cq[cq],work_to_do,& enic_rq_service,(void *)0); else ;
  
#line 1395 
  if (work_done != 0U) 
#line 1396 
                       vnic_intr_return_credits(& enic->intr[intr],work_done,0,0); else ;
  
#line 1401 
  err = vnic_rq_fill(& enic->rq[rq],& enic_rq_alloc_buf);
  
#line 1407 
  if (err != 0) 
#line 1408 
                work_done = work_to_do; else ;
  
#line 1409 
  if (enic->rx_coalesce_setting.use_adaptive_rx_coalesce != 0U) 
#line 1415 
                                                                enic_calc_int_moderation(enic,& enic->rq[rq]); else ;
  
#line 1417 
  enic_poll_unlock_napi(& enic->rq[rq],napi);
  
#line 1418 
  if (work_done < work_to_do) {
    
#line 1424 
    napi_complete(napi);
    
#line 1425 
    if (enic->rx_coalesce_setting.use_adaptive_rx_coalesce != 0U) 
#line 1426 
                                                                  enic_set_int_moderation(enic,& enic->rq[rq]); else ;
    
#line 1427 
    vnic_intr_unmask(& enic->intr[intr]);
  }
  else ;
  
#line 1430 
  __retres = (int)work_done;
  return_label: 
#line 1430 
                return __retres;
}


#line 1433  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_notify_timer(unsigned long data)
{
  unsigned long tmp;
  
#line 1435 
  struct enic *enic = (struct enic *)data;
  
#line 1437 
  enic_notify_check(enic);
  
#line 1439 
  tmp = round_jiffies(jiffies + 500UL);
  
#line 1439 
  ;
  
#line 1439 
  ldv_mod_timer_88(& enic->notify_timer,tmp);
  
#line 1441 
  return;
}


#line 1443  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_free_intr(struct enic *enic)
{
  unsigned int i;
  enum vnic_dev_intr_mode tmp;
  
#line 1445 
  struct net_device *netdev = enic->netdev;
  
#line 1448 
  enic_free_rx_cpu_rmap(enic);
  
#line 1449 
  tmp = vnic_dev_get_intr_mode(enic->vdev);
  
#line 1449 
  switch ((unsigned int)tmp) {
    case (unsigned int)1: 
#line 1450 
    ;
    
#line 1451 
    ldv_free_irq_89((enic->pdev)->irq,(void *)netdev);
    
#line 1452 
    goto ldv_55878;
    case (unsigned int)2: 
#line 1453 
    ;
    
#line 1454 
    ldv_free_irq_90((enic->pdev)->irq,(void *)enic);
    
#line 1455 
    goto ldv_55878;
    case (unsigned int)3: 
#line 1456 
    ;
    
#line 1457 
    i = 0U;
    
#line 1457 
    goto ldv_55885;
    ldv_55884: 
#line 1458 
    ;
    
#line 1458 
    if (enic->msix[i].requested != 0) 
#line 1459 
                                      ldv_free_irq_91(enic->msix_entry[i].vector,enic->msix[i].devid); else ;
    
#line 1457 
    i += 1U;
    ldv_55885: 
#line 1458 
    ;
    
#line 1457 
    if (i <= 17U) 
#line 1459 
                  goto ldv_55884; else 
#line 1462 
                                       goto ldv_55886;
    ldv_55886: 
#line 1463 
    ;
    
#line 1461 
    goto ldv_55878;
    default: 
#line 1462 
    ;
    
#line 1463 
    goto ldv_55878;
  }
  ldv_55878: 
#line 1465 
  ;
  
#line 1466 
  return;
}


#line 1467  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_request_intr(struct enic *enic)
{
  unsigned int i;
  unsigned int intr;
  enum vnic_dev_intr_mode tmp;
  
#line 1469 
  struct net_device *netdev = enic->netdev;
  
#line 1471 
  int err = 0;
  
#line 1473 
  enic_set_rx_cpu_rmap(enic);
  
#line 1474 
  tmp = vnic_dev_get_intr_mode(enic->vdev);
  
#line 1474 
  switch ((unsigned int)tmp) {
    case (unsigned int)1: 
#line 1476 
    ;
    
#line 1478 
    err = ldv_request_irq_92((enic->pdev)->irq,& enic_isr_legacy,128UL,(char const *)(& netdev->name),(void *)netdev);
    
#line 1480 
    goto ldv_55896;
    case (unsigned int)2: 
#line 1482 
    ;
    
#line 1484 
    err = ldv_request_irq_93((enic->pdev)->irq,& enic_isr_msi,0UL,(char const *)(& netdev->name),(void *)enic);
    
#line 1486 
    goto ldv_55896;
    case (unsigned int)3: 
#line 1488 
    ;
    
#line 1490 
    i = 0U;
    
#line 1490 
    goto ldv_55900;
    ldv_55899: 
#line 1491 
    ;
    
#line 1491 
    intr = enic_msix_rq_intr(enic,i);
    
#line 1492 
    snprintf((char *)(& enic->msix[intr].devname),16UL,"%.11s-rx-%d",(char *)(& netdev->name),i);
    
#line 1495 
    enic->msix[intr].isr = & enic_isr_msix;
    
#line 1496 
    enic->msix[intr].devid = (void *)(& enic->napi[i]);
    
#line 1490 
    i += 1U;
    ldv_55900: 
#line 1491 
    ;
    
#line 1490 
    if (enic->rq_count > i) 
#line 1492 
                            goto ldv_55899; else 
#line 1495 
                                                 goto ldv_55901;
    ldv_55901: 
#line 1496 
    ;
    
#line 1499 
    i = 0U;
    
#line 1499 
    goto ldv_55904;
    ldv_55903: 
#line 1500 
    ;
    {
      unsigned int tmp_0;
      
#line 1500 
      tmp_0 = enic_cq_wq(enic,i);
      
#line 1500 
      int wq = (int)tmp_0;
      
#line 1502 
      intr = enic_msix_wq_intr(enic,i);
      
#line 1503 
      snprintf((char *)(& enic->msix[intr].devname),16UL,"%.11s-tx-%d",(char *)(& netdev->name),i);
      
#line 1506 
      enic->msix[intr].isr = & enic_isr_msix;
      
#line 1507 
      enic->msix[intr].devid = (void *)(& enic->napi[wq]);
    }
    
#line 1499 
    i += 1U;
    ldv_55904: 
#line 1500 
    ;
    
#line 1499 
    if (enic->wq_count > i) 
#line 1501 
                            goto ldv_55903; else 
#line 1504 
                                                 goto ldv_55905;
    ldv_55905: 
#line 1505 
    ;
    
#line 1510 
    intr = enic_msix_err_intr(enic);
    
#line 1511 
    snprintf((char *)(& enic->msix[intr].devname),16UL,"%.11s-err",(char *)(& netdev->name));
    
#line 1514 
    enic->msix[intr].isr = & enic_isr_msix_err;
    
#line 1515 
    enic->msix[intr].devid = (void *)enic;
    
#line 1517 
    intr = enic_msix_notify_intr(enic);
    
#line 1518 
    snprintf((char *)(& enic->msix[intr].devname),16UL,"%.11s-notify",(char *)(& netdev->name));
    
#line 1521 
    enic->msix[intr].isr = & enic_isr_msix_notify;
    
#line 1522 
    enic->msix[intr].devid = (void *)enic;
    
#line 1524 
    i = 0U;
    
#line 1524 
    goto ldv_55910;
    ldv_55909: 
#line 1525 
    ;
    
#line 1525 
    enic->msix[i].requested = 0;
    
#line 1524 
    i += 1U;
    ldv_55910: 
#line 1525 
    ;
    
#line 1524 
    if (i <= 17U) 
#line 1526 
                  goto ldv_55909; else 
#line 1529 
                                       goto ldv_55911;
    ldv_55911: 
#line 1530 
    ;
    
#line 1527 
    i = 0U;
    
#line 1527 
    goto ldv_55914;
    ldv_55913: 
#line 1528 
    ;
    
#line 1528 
    err = ldv_request_irq_94(enic->msix_entry[i].vector,enic->msix[i].isr,0UL,(char const *)(& enic->msix[i].devname),enic->msix[i].devid);
    
#line 1532 
    if (err != 0) {
      
#line 1533 
      enic_free_intr(enic);
      
#line 1534 
      goto ldv_55912;
    }
    else ;
    
#line 1536 
    enic->msix[i].requested = 1;
    
#line 1527 
    i += 1U;
    ldv_55914: 
#line 1528 
    ;
    
#line 1527 
    if (enic->intr_count > i) 
#line 1529 
                              goto ldv_55913; else 
#line 1532 
                                                   goto ldv_55912;
    ldv_55912: 
#line 1533 
    ;
    
#line 1539 
    goto ldv_55896;
    default: 
#line 1541 
    ;
    
#line 1542 
    goto ldv_55896;
  }
  ldv_55896: 
#line 1545 
  ;
  
#line 1545 
  return err;
}


#line 1548  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_synchronize_irqs(struct enic *enic)
{
  unsigned int i;
  enum vnic_dev_intr_mode tmp;
  
#line 1552 
  tmp = vnic_dev_get_intr_mode(enic->vdev);
  
#line 1552 
  switch ((unsigned int)tmp) {
    case (unsigned int)1: 
#line 1553 
    ;
    case (unsigned int)2: 
#line 1554 
    ;
    
#line 1555 
    synchronize_irq((enic->pdev)->irq);
    
#line 1556 
    goto ldv_55922;
    case (unsigned int)3: 
#line 1557 
    ;
    
#line 1558 
    i = 0U;
    
#line 1558 
    goto ldv_55925;
    ldv_55924: 
#line 1559 
    ;
    
#line 1559 
    synchronize_irq(enic->msix_entry[i].vector);
    
#line 1558 
    i += 1U;
    ldv_55925: 
#line 1559 
    ;
    
#line 1558 
    if (enic->intr_count > i) 
#line 1560 
                              goto ldv_55924; else 
#line 1563 
                                                   goto ldv_55926;
    ldv_55926: 
#line 1564 
    ;
    
#line 1560 
    goto ldv_55922;
    default: 
#line 1561 
    ;
    
#line 1562 
    goto ldv_55922;
  }
  ldv_55922: 
#line 1564 
  ;
  
#line 1565 
  return;
}


#line 1566  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_set_rx_coal_setting(struct enic *enic)
{
  unsigned int speed;
  enum vnic_dev_intr_mode tmp;
  
#line 1569 
  int index = -1;
  
#line 1570 
  struct enic_rx_coal *rx_coal = & enic->rx_coalesce_setting;
  
#line 1573 
  tmp = vnic_dev_get_intr_mode(enic->vdev);
  
#line 1573 
  if (tmp != (unsigned int)VNIC_DEV_INTR_MODE_MSIX) {
    
#line 1574 
    netdev_info((struct net_device const *)enic->netdev,"INTR mode is not MSIX, Not initializing adaptive coalescing");
    
#line 1575 
    goto return_label;
  }
  else ;
  
#line 1582 
  speed = vnic_dev_port_speed(enic->vdev);
  
#line 1583 
  if (speed > 10000U) 
#line 1584 
                      index = 2;
  else 
    
#line 1585 
    if (speed > 4000U) 
#line 1586 
                       index = 1; else 
#line 1588 
                                       index = 0;
  
#line 1590 
  rx_coal->small_pkt_range_start = mod_range[index].small_pkt_range_start;
  
#line 1591 
  rx_coal->large_pkt_range_start = mod_range[index].large_pkt_range_start;
  
#line 1592 
  rx_coal->range_end = 125U;
  
#line 1595 
  index = 0;
  
#line 1595 
  goto ldv_55935;
  ldv_55934: 
#line 1596 
  ;
  
#line 1596 
  enic->cq[index].cur_rx_coal_timeval = enic->config.intr_timer_usec;
  
#line 1595 
  index += 1;
  ldv_55935: 
#line 1596 
  ;
  
#line 1595 
  if (enic->rq_count > (unsigned int)index) 
#line 1597 
                                            goto ldv_55934; else 
#line 1600 
                                                                 goto ldv_55936;
  ldv_55936: 
#line 1601 
  ;
  
#line 1599 
  rx_coal->use_adaptive_rx_coalesce = 1U;
  return_label: 
#line 1600 
                return;
}


#line 1602  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_dev_notify_set(struct enic *enic)
{
  int err;
  enum vnic_dev_intr_mode tmp;
  
#line 1606 
  ldv_spin_lock_bh_95(& enic->devcmd_lock);
  
#line 1607 
  tmp = vnic_dev_get_intr_mode(enic->vdev);
  
#line 1607 
  switch ((unsigned int)tmp) {
    unsigned int tmp_0;
    unsigned int tmp_1;
    case (unsigned int)1: 
#line 1608 
    ;
    
#line 1609 
    tmp_0 = enic_legacy_notify_intr();
    
#line 1609 
    ;
    
#line 1609 
    err = vnic_dev_notify_set(enic->vdev,(unsigned short)((int)((unsigned short)tmp_0)));
    
#line 1611 
    goto ldv_55942;
    case (unsigned int)3: 
#line 1612 
    ;
    
#line 1613 
    tmp_1 = enic_msix_notify_intr(enic);
    
#line 1613 
    ;
    
#line 1613 
    err = vnic_dev_notify_set(enic->vdev,(unsigned short)((int)((unsigned short)tmp_1)));
    
#line 1615 
    goto ldv_55942;
    default: 
#line 1616 
    ;
    
#line 1617 
    err = vnic_dev_notify_set(enic->vdev,(unsigned short)65535);
    
#line 1618 
    goto ldv_55942;
  }
  ldv_55942: 
#line 1620 
  ;
  
#line 1620 
  ldv_spin_unlock_bh_96(& enic->devcmd_lock);
  
#line 1622 
  return err;
}


#line 1625  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_notify_timer_start(struct enic *enic)
{
  enum vnic_dev_intr_mode tmp;
  
#line 1627 
  tmp = vnic_dev_get_intr_mode(enic->vdev);
  
#line 1627 
  switch ((unsigned int)tmp) {
    case (unsigned int)2: 
#line 1628 
    ;
    
#line 1629 
    ldv_mod_timer_97(& enic->notify_timer,jiffies);
    
#line 1630 
    goto ldv_55949;
    default: 
#line 1631 
    ;
    
#line 1633 
    goto ldv_55949;
  }
  ldv_55949: 
#line 1635 
  ;
  
#line 1636 
  return;
}


#line 1638  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_open(struct net_device *netdev)
{
  int __retres;
  unsigned int i;
  int err;
  unsigned int tmp_0;
  int tmp_1;
  enum vnic_dev_intr_mode tmp_4;
  
#line 1640 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 1644 
  err = enic_request_intr(enic);
  
#line 1645 
  if (err != 0) {
    
#line 1646 
    netdev_err((struct net_device const *)netdev,"Unable to request irq.\n");
    
#line 1647 
    __retres = err;
    
#line 1647 
    goto return_label;
  }
  else ;
  
#line 1650 
  err = enic_dev_notify_set(enic);
  
#line 1651 
  if (err != 0) {
    
#line 1652 
    netdev_err((struct net_device const *)netdev,"Failed to alloc notify buffer, aborting.\n");
    
#line 1654 
    goto err_out_free_intr;
  }
  else ;
  
#line 1657 
  i = 0U;
  
#line 1657 
  goto ldv_55960;
  ldv_55959: 
#line 1658 
  ;
  
#line 1658 
  vnic_rq_fill(& enic->rq[i],& enic_rq_alloc_buf);
  
#line 1660 
  tmp_0 = vnic_rq_desc_used(& enic->rq[i]);
  
#line 1660 
  if (tmp_0 == 0U) {
    
#line 1661 
    netdev_err((struct net_device const *)netdev,"Unable to alloc receive buffers\n");
    
#line 1662 
    err = -12;
    
#line 1663 
    goto err_out_free_rq;
  }
  else ;
  
#line 1657 
  i += 1U;
  ldv_55960: 
#line 1658 
  ;
  
#line 1657 
  if (enic->rq_count > i) 
#line 1659 
                          goto ldv_55959; else 
#line 1662 
                                               goto ldv_55961;
  ldv_55961: 
#line 1663 
  ;
  
#line 1667 
  i = 0U;
  
#line 1667 
  goto ldv_55963;
  ldv_55962: 
#line 1668 
  ;
  
#line 1668 
  vnic_wq_enable(& enic->wq[i]);
  
#line 1667 
  i += 1U;
  ldv_55963: 
#line 1668 
  ;
  
#line 1667 
  if (enic->wq_count > i) 
#line 1669 
                          goto ldv_55962; else 
#line 1672 
                                               goto ldv_55964;
  ldv_55964: 
#line 1673 
  ;
  
#line 1669 
  i = 0U;
  
#line 1669 
  goto ldv_55966;
  ldv_55965: 
#line 1670 
  ;
  
#line 1670 
  vnic_rq_enable(& enic->rq[i]);
  
#line 1669 
  i += 1U;
  ldv_55966: 
#line 1670 
  ;
  
#line 1669 
  if (enic->rq_count > i) 
#line 1671 
                          goto ldv_55965; else 
#line 1674 
                                               goto ldv_55967;
  ldv_55967: 
#line 1675 
  ;
  
#line 1672 
  tmp_1 = enic_is_dynamic(enic);
  
#line 1672 
  if (tmp_1 == 0) {
    int tmp_2;
    
#line 1672 
    tmp_2 = enic_is_sriov_vf(enic);
    
#line 1672 
    if (tmp_2 == 0) 
#line 1673 
                    enic_dev_add_station_addr(enic); else ;
  }
  else ;
  
#line 1675 
  enic_set_rx_mode(netdev);
  
#line 1677 
  netif_tx_wake_all_queues(netdev);
  
#line 1679 
  i = 0U;
  
#line 1679 
  goto ldv_55969;
  ldv_55968: 
#line 1680 
  ;
  
#line 1680 
  enic_busy_poll_init_lock(& enic->rq[i]);
  
#line 1681 
  napi_enable(& enic->napi[i]);
  
#line 1679 
  i += 1U;
  ldv_55969: 
#line 1680 
  ;
  
#line 1679 
  if (enic->rq_count > i) 
#line 1681 
                          goto ldv_55968; else 
#line 1684 
                                               goto ldv_55970;
  ldv_55970: 
#line 1685 
  ;
  
#line 1683 
  tmp_4 = vnic_dev_get_intr_mode(enic->vdev);
  
#line 1683 
  if (tmp_4 == (unsigned int)VNIC_DEV_INTR_MODE_MSIX) {
    unsigned int tmp_3;
    
#line 1684 
    i = 0U;
    
#line 1684 
    goto ldv_55972;
    ldv_55971: 
#line 1685 
    ;
    
#line 1685 
    tmp_3 = enic_cq_wq(enic,i);
    
#line 1685 
    ;
    
#line 1685 
    napi_enable(& enic->napi[tmp_3]);
    
#line 1684 
    i += 1U;
    ldv_55972: 
#line 1685 
    ;
    
#line 1684 
    if (enic->wq_count > i) 
#line 1686 
                            goto ldv_55971; else 
#line 1689 
                                                 goto ldv_55973;
    ldv_55973: 
#line 1690 
    ;
  }
  else ;
  
#line 1686 
  enic_dev_enable(enic);
  
#line 1688 
  i = 0U;
  
#line 1688 
  goto ldv_55975;
  ldv_55974: 
#line 1689 
  ;
  
#line 1689 
  vnic_intr_unmask(& enic->intr[i]);
  
#line 1688 
  i += 1U;
  ldv_55975: 
#line 1689 
  ;
  
#line 1688 
  if (enic->intr_count > i) 
#line 1690 
                            goto ldv_55974; else 
#line 1693 
                                                 goto ldv_55976;
  ldv_55976: 
#line 1694 
  ;
  
#line 1691 
  enic_notify_timer_start(enic);
  
#line 1692 
  enic_rfs_flw_tbl_init(enic);
  
#line 1694 
  __retres = 0;
  
#line 1694 
  goto return_label;
  err_out_free_rq: 
#line 1696 
  ;
  
#line 1697 
  i = 0U;
  
#line 1697 
  goto ldv_55978;
  ldv_55977: 
#line 1698 
  ;
  
#line 1698 
  vnic_rq_clean(& enic->rq[i],& enic_free_rq_buf);
  
#line 1697 
  i += 1U;
  ldv_55978: 
#line 1698 
  ;
  
#line 1697 
  if (enic->rq_count > i) 
#line 1699 
                          goto ldv_55977; else 
#line 1702 
                                               goto ldv_55979;
  ldv_55979: 
#line 1703 
  ;
  
#line 1699 
  enic_dev_notify_unset(enic);
  err_out_free_intr: 
#line 1700 
  ;
  
#line 1701 
  enic_free_intr(enic);
  
#line 1703 
  __retres = err;
  return_label: 
#line 1703 
                return __retres;
}


#line 1707  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_stop(struct net_device *netdev)
{
  int __retres;
  unsigned int i;
  int err;
  int tmp_2;
  bool tmp_1;
  enum vnic_dev_intr_mode tmp_4;
  int tmp_5;
  
#line 1709 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 1713 
  i = 0U;
  
#line 1713 
  goto ldv_55987;
  ldv_55986: 
#line 1714 
  ;
  
#line 1714 
  vnic_intr_mask(& enic->intr[i]);
  
#line 1715 
  vnic_intr_masked(& enic->intr[i]);
  
#line 1713 
  i += 1U;
  ldv_55987: 
#line 1714 
  ;
  
#line 1713 
  if (enic->intr_count > i) 
#line 1715 
                            goto ldv_55986; else 
#line 1718 
                                                 goto ldv_55988;
  ldv_55988: 
#line 1719 
  ;
  
#line 1718 
  enic_synchronize_irqs(enic);
  
#line 1720 
  ldv_del_timer_sync_98(& enic->notify_timer);
  
#line 1721 
  enic_rfs_flw_tbl_free(enic);
  
#line 1723 
  enic_dev_disable(enic);
  
#line 1725 
  i = 0U;
  
#line 1725 
  goto ldv_55997;
  ldv_55996: 
#line 1726 
  ;
  
#line 1726 
  napi_disable(& enic->napi[i]);
  
#line 1727 
  local_bh_disable();
  
#line 1728 
  goto ldv_55994;
  ldv_55993: 
#line 1729 
  ;
  
#line 1729 
  if (1) 
#line 1729 
         __const_udelay(4295000UL);
  else {
    
#line 1729 
    unsigned long __ms = 1UL;
    {
      unsigned long tmp_0;
      
#line 1729 
      goto ldv_55991;
      ldv_55990: 
#line 1730 
      ;
      
#line 1729 
      __const_udelay(4295000UL);
      ldv_55991: 
#line 1731 
      ;
      
#line 1729 
      tmp_0 = __ms;
      
#line 1729 
      __ms -= 1UL;
      
#line 1729 
      ;
      
#line 1729 
      if (tmp_0 != 0UL) 
#line 1731 
                        goto ldv_55990; else 
#line 1734 
                                             goto ldv_55992;
      ldv_55992: 
#line 1735 
      ;
    }
  }
  ldv_55994: 
#line 1738 
  ;
  
#line 1728 
  tmp_1 = enic_poll_lock_napi(& enic->rq[i]);
  
#line 1728 
  if (tmp_1) 
#line 1728 
             tmp_2 = 0; else 
#line 1728 
                             tmp_2 = 1;
  
#line 1728 
  if (tmp_2) 
#line 1730 
             goto ldv_55993; else 
#line 1733 
                                  goto ldv_55995;
  ldv_55995: 
#line 1734 
  ;
  
#line 1730 
  local_bh_enable();
  
#line 1725 
  i += 1U;
  ldv_55997: 
#line 1726 
  ;
  
#line 1725 
  if (enic->rq_count > i) 
#line 1727 
                          goto ldv_55996; else 
#line 1730 
                                               goto ldv_55998;
  ldv_55998: 
#line 1731 
  ;
  
#line 1733 
  netif_carrier_off(netdev);
  
#line 1734 
  netif_tx_disable(netdev);
  
#line 1735 
  tmp_4 = vnic_dev_get_intr_mode(enic->vdev);
  
#line 1735 
  if (tmp_4 == (unsigned int)VNIC_DEV_INTR_MODE_MSIX) {
    unsigned int tmp_3;
    
#line 1736 
    i = 0U;
    
#line 1736 
    goto ldv_56000;
    ldv_55999: 
#line 1737 
    ;
    
#line 1737 
    tmp_3 = enic_cq_wq(enic,i);
    
#line 1737 
    ;
    
#line 1737 
    napi_disable(& enic->napi[tmp_3]);
    
#line 1736 
    i += 1U;
    ldv_56000: 
#line 1737 
    ;
    
#line 1736 
    if (enic->wq_count > i) 
#line 1738 
                            goto ldv_55999; else 
#line 1741 
                                                 goto ldv_56001;
    ldv_56001: 
#line 1742 
    ;
  }
  else ;
  
#line 1739 
  tmp_5 = enic_is_dynamic(enic);
  
#line 1739 
  if (tmp_5 == 0) {
    int tmp_6;
    
#line 1739 
    tmp_6 = enic_is_sriov_vf(enic);
    
#line 1739 
    if (tmp_6 == 0) 
#line 1740 
                    enic_dev_del_station_addr(enic); else ;
  }
  else ;
  
#line 1742 
  i = 0U;
  
#line 1742 
  goto ldv_56003;
  ldv_56002: 
#line 1743 
  ;
  
#line 1743 
  err = vnic_wq_disable(& enic->wq[i]);
  
#line 1744 
  if (err != 0) {
    
#line 1745 
    __retres = err;
    
#line 1745 
    goto return_label;
  }
  else ;
  
#line 1742 
  i += 1U;
  ldv_56003: 
#line 1743 
  ;
  
#line 1742 
  if (enic->wq_count > i) 
#line 1744 
                          goto ldv_56002; else 
#line 1747 
                                               goto ldv_56004;
  ldv_56004: 
#line 1748 
  ;
  
#line 1747 
  i = 0U;
  
#line 1747 
  goto ldv_56006;
  ldv_56005: 
#line 1748 
  ;
  
#line 1748 
  err = vnic_rq_disable(& enic->rq[i]);
  
#line 1749 
  if (err != 0) {
    
#line 1750 
    __retres = err;
    
#line 1750 
    goto return_label;
  }
  else ;
  
#line 1747 
  i += 1U;
  ldv_56006: 
#line 1748 
  ;
  
#line 1747 
  if (enic->rq_count > i) 
#line 1749 
                          goto ldv_56005; else 
#line 1752 
                                               goto ldv_56007;
  ldv_56007: 
#line 1753 
  ;
  
#line 1753 
  enic_dev_notify_unset(enic);
  
#line 1754 
  enic_free_intr(enic);
  
#line 1756 
  i = 0U;
  
#line 1756 
  goto ldv_56009;
  ldv_56008: 
#line 1757 
  ;
  
#line 1757 
  vnic_wq_clean(& enic->wq[i],& enic_free_wq_buf);
  
#line 1756 
  i += 1U;
  ldv_56009: 
#line 1757 
  ;
  
#line 1756 
  if (enic->wq_count > i) 
#line 1758 
                          goto ldv_56008; else 
#line 1761 
                                               goto ldv_56010;
  ldv_56010: 
#line 1762 
  ;
  
#line 1758 
  i = 0U;
  
#line 1758 
  goto ldv_56012;
  ldv_56011: 
#line 1759 
  ;
  
#line 1759 
  vnic_rq_clean(& enic->rq[i],& enic_free_rq_buf);
  
#line 1758 
  i += 1U;
  ldv_56012: 
#line 1759 
  ;
  
#line 1758 
  if (enic->rq_count > i) 
#line 1760 
                          goto ldv_56011; else 
#line 1763 
                                               goto ldv_56013;
  ldv_56013: 
#line 1764 
  ;
  
#line 1760 
  i = 0U;
  
#line 1760 
  goto ldv_56015;
  ldv_56014: 
#line 1761 
  ;
  
#line 1761 
  vnic_cq_clean(& enic->cq[i]);
  
#line 1760 
  i += 1U;
  ldv_56015: 
#line 1761 
  ;
  
#line 1760 
  if (enic->cq_count > i) 
#line 1762 
                          goto ldv_56014; else 
#line 1765 
                                               goto ldv_56016;
  ldv_56016: 
#line 1766 
  ;
  
#line 1762 
  i = 0U;
  
#line 1762 
  goto ldv_56018;
  ldv_56017: 
#line 1763 
  ;
  
#line 1763 
  vnic_intr_clean(& enic->intr[i]);
  
#line 1762 
  i += 1U;
  ldv_56018: 
#line 1763 
  ;
  
#line 1762 
  if (enic->intr_count > i) 
#line 1764 
                            goto ldv_56017; else 
#line 1767 
                                                 goto ldv_56019;
  ldv_56019: 
#line 1768 
  ;
  
#line 1765 
  __retres = 0;
  return_label: 
#line 1765 
                return __retres;
}


#line 1768  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_change_mtu(struct net_device *netdev, int new_mtu)
{
  int __retres;
  bool tmp_0;
  int tmp_1;
  
#line 1770 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 1771 
  tmp_0 = netif_running((struct net_device const *)netdev);
  
#line 1771 
  int running = (int)tmp_0;
  
#line 1773 
  if ((unsigned int)new_mtu + 4294967228U > 8932U) {
    
#line 1774 
    __retres = -22;
    
#line 1774 
    goto return_label;
  }
  else ;
  
#line 1776 
  tmp_1 = enic_is_dynamic(enic);
  
#line 1776 
  if (tmp_1 != 0) {
    
#line 1777 
    __retres = -95;
    
#line 1777 
    goto return_label;
  }
  else {
    int tmp_2;
    
#line 1776 
    tmp_2 = enic_is_sriov_vf(enic);
    
#line 1776 
    if (tmp_2 != 0) {
      
#line 1777 
      __retres = -95;
      
#line 1777 
      goto return_label;
    }
    else ;
  }
  
#line 1779 
  if (running != 0) 
#line 1780 
                    enic_stop(netdev); else ;
  
#line 1782 
  netdev->mtu = (unsigned int)new_mtu;
  
#line 1784 
  if (netdev->mtu > enic->port_mtu) 
#line 1785 
                                    netdev_warn((struct net_device const *)netdev,"interface MTU (%d) set higher than port MTU (%d)\n",netdev->mtu,enic->port_mtu); else ;
  
#line 1789 
  if (running != 0) 
#line 1790 
                    enic_open(netdev); else ;
  
#line 1792 
  __retres = 0;
  return_label: 
#line 1792 
                return __retres;
}


#line 1795  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_change_mtu_work(struct work_struct *work)
{
  struct enic *tmp;
  u32 tmp_0;
  int err;
  unsigned int i;
  int tmp_4;
  unsigned int tmp_5;
  {
    
#line 1797 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 1797 
    tmp = (struct enic *)__mptr + 18446744073709551192U;
  }
  
#line 1797 
  struct enic *enic = tmp;
  
#line 1798 
  struct net_device *netdev = enic->netdev;
  
#line 1799 
  tmp_0 = vnic_dev_mtu(enic->vdev);
  
#line 1799 
  int new_mtu = (int)tmp_0;
  {
    int tmp_2;
    int tmp_3;
    
#line 1803 
    int __max1 = 68;
    {
      int tmp_1;
      
#line 1803 
      int __min1 = 9000;
      
#line 1803 
      int __min2 = new_mtu;
      
#line 1803 
      if (__min1 < __min2) 
#line 1803 
                           tmp_1 = __min1; else 
#line 1803 
                                                tmp_1 = __min2;
      
#line 1803 
      tmp_2 = tmp_1;
    }
    
#line 1803 
    int __max2 = tmp_2;
    
#line 1803 
    if (__max1 > __max2) 
#line 1803 
                         tmp_3 = __max1; else 
#line 1803 
                                              tmp_3 = __max2;
    
#line 1803 
    tmp_4 = tmp_3;
  }
  
#line 1803 
  new_mtu = tmp_4;
  
#line 1805 
  rtnl_lock();
  
#line 1808 
  ldv_del_timer_sync_99(& enic->notify_timer);
  
#line 1810 
  i = 0U;
  
#line 1810 
  goto ldv_56043;
  ldv_56042: 
#line 1811 
  ;
  
#line 1811 
  napi_disable(& enic->napi[i]);
  
#line 1810 
  i += 1U;
  ldv_56043: 
#line 1811 
  ;
  
#line 1810 
  if (enic->rq_count > i) 
#line 1812 
                          goto ldv_56042; else 
#line 1815 
                                               goto ldv_56044;
  ldv_56044: 
#line 1816 
  ;
  
#line 1813 
  vnic_intr_mask(& enic->intr[0]);
  
#line 1814 
  enic_synchronize_irqs(enic);
  
#line 1815 
  err = vnic_rq_disable(& enic->rq[0]);
  
#line 1816 
  if (err != 0) {
    
#line 1817 
    rtnl_unlock();
    
#line 1818 
    netdev_err((struct net_device const *)netdev,"Unable to disable RQ.\n");
    
#line 1819 
    goto return_label;
  }
  else ;
  
#line 1821 
  vnic_rq_clean(& enic->rq[0],& enic_free_rq_buf);
  
#line 1822 
  vnic_cq_clean(& enic->cq[0]);
  
#line 1823 
  vnic_intr_clean(& enic->intr[0]);
  
#line 1826 
  netdev->mtu = (unsigned int)new_mtu;
  
#line 1827 
  vnic_rq_fill(& enic->rq[0],& enic_rq_alloc_buf);
  
#line 1829 
  tmp_5 = vnic_rq_desc_used(& enic->rq[0]);
  
#line 1829 
  if (tmp_5 == 0U) {
    
#line 1830 
    rtnl_unlock();
    
#line 1831 
    netdev_err((struct net_device const *)netdev,"Unable to alloc receive buffers.\n");
    
#line 1832 
    goto return_label;
  }
  else ;
  
#line 1836 
  vnic_rq_enable(& enic->rq[0]);
  
#line 1837 
  napi_enable(& enic->napi[0]);
  
#line 1838 
  vnic_intr_unmask(& enic->intr[0]);
  
#line 1839 
  enic_notify_timer_start(enic);
  
#line 1841 
  rtnl_unlock();
  
#line 1843 
  netdev_info((struct net_device const *)netdev,"interface MTU set as %d\n",netdev->mtu);
  return_label: 
#line 1844 
                return;
}


#line 1847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_poll_controller(struct net_device *netdev)
{
  unsigned int i;
  unsigned int intr;
  enum vnic_dev_intr_mode tmp_0;
  
#line 1849 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 1850 
  struct vnic_dev *vdev = enic->vdev;
  
#line 1853 
  tmp_0 = vnic_dev_get_intr_mode(vdev);
  
#line 1853 
  switch ((unsigned int)tmp_0) {
    unsigned int tmp_1;
    case (unsigned int)3: 
#line 1854 
    ;
    
#line 1855 
    i = 0U;
    
#line 1855 
    goto ldv_56054;
    ldv_56053: 
#line 1856 
    ;
    
#line 1856 
    intr = enic_msix_rq_intr(enic,i);
    
#line 1857 
    enic_isr_msix((int)enic->msix_entry[intr].vector,(void *)(& enic->napi[i]));
    
#line 1855 
    i += 1U;
    ldv_56054: 
#line 1856 
    ;
    
#line 1855 
    if (enic->rq_count > i) 
#line 1857 
                            goto ldv_56053; else 
#line 1860 
                                                 goto ldv_56055;
    ldv_56055: 
#line 1861 
    ;
    
#line 1861 
    i = 0U;
    
#line 1861 
    goto ldv_56057;
    ldv_56056: 
#line 1862 
    ;
    
#line 1862 
    intr = enic_msix_wq_intr(enic,i);
    
#line 1864 
    tmp_1 = enic_cq_wq(enic,i);
    
#line 1863 
    ;
    
#line 1863 
    ;
    
#line 1863 
    enic_isr_msix((int)enic->msix_entry[intr].vector,(void *)(& enic->napi[tmp_1]));
    
#line 1861 
    i += 1U;
    ldv_56057: 
#line 1862 
    ;
    
#line 1861 
    if (enic->wq_count > i) 
#line 1863 
                            goto ldv_56056; else 
#line 1866 
                                                 goto ldv_56058;
    ldv_56058: 
#line 1867 
    ;
    
#line 1867 
    goto ldv_56059;
    case (unsigned int)2: 
#line 1868 
    ;
    
#line 1869 
    enic_isr_msi((int)(enic->pdev)->irq,(void *)enic);
    
#line 1870 
    goto ldv_56059;
    case (unsigned int)1: 
#line 1871 
    ;
    
#line 1872 
    enic_isr_legacy((int)(enic->pdev)->irq,(void *)netdev);
    
#line 1873 
    goto ldv_56059;
    default: 
#line 1874 
    ;
    
#line 1875 
    goto ldv_56059;
  }
  ldv_56059: 
#line 1877 
  ;
  
#line 1878 
  return;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_dev_wait(struct vnic_dev *vdev, int (*start)(struct vnic_dev *, int ), int (*finished)(struct vnic_dev *, int *), int arg)
{
  int __retres;
  unsigned long time;
  int done;
  int err;
  int tmp;
  int tmp_0;
  
#line 1889 
  tmp = preempt_count();
  
#line 1889 
  if ((long)(((unsigned long)tmp & 2096896UL) != 0UL) != 0L) {
    
#line 1891 
    ldv_inline_asm();
    
#line 1889 
    ;
  }
  else ;
  
#line 1891 
  err = (*start)(vdev,arg);
  
#line 1892 
  if (err != 0) {
    
#line 1893 
    __retres = err;
    
#line 1893 
    goto return_label;
  }
  else ;
  
#line 1898 
  time = jiffies + 500UL;
  ldv_56082: 
#line 1899 
  ;
  
#line 1901 
  err = (*finished)(vdev,& done);
  
#line 1902 
  if (err != 0) {
    
#line 1903 
    __retres = err;
    
#line 1903 
    goto return_label;
  }
  else ;
  
#line 1905 
  if (done != 0) {
    
#line 1906 
    __retres = 0;
    
#line 1906 
    goto return_label;
  }
  else ;
  
#line 1908 
  schedule_timeout_uninterruptible(25L);
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
#line 1910 
    tmp_0 = 1;
  }
  
#line 1910 
  if (tmp_0 != 0) {
    int tmp_1;
    {
      unsigned long __dummy_0;
      unsigned long volatile __dummy2_0;
      
#line 1910 
      tmp_1 = 1;
    }
    
#line 1910 
    if (tmp_1 != 0) {
      
#line 1910 
      if ((long)(jiffies - time) < 0L) 
#line 1912 
                                       goto ldv_56082; else 
#line 1915 
                                                            goto ldv_56083;
    }
    else 
#line 1915 
         goto ldv_56083;
  }
  else 
#line 1915 
       goto ldv_56083;
  ldv_56083: 
#line 1916 
  ;
  
#line 1912 
  __retres = -110;
  return_label: 
#line 1912 
                return __retres;
}


#line 1915  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_dev_open(struct enic *enic)
{
  int err;
  
#line 1919 
  err = enic_dev_wait(enic->vdev,& vnic_dev_open,& vnic_dev_open_done,0);
  
#line 1921 
  if (err != 0) {
    struct device *tmp;
    
#line 1922 
    ;
    
#line 1922 
    tmp = enic_get_dev(enic);
    
#line 1922 
    dev_err((struct device const *)tmp,"vNIC device open failed, err %d\n",err);
  }
  else ;
  
#line 1925 
  return err;
}


#line 1928  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_dev_hang_reset(struct enic *enic)
{
  int err;
  
#line 1932 
  err = enic_dev_wait(enic->vdev,& vnic_dev_hang_reset,& vnic_dev_hang_reset_done,0);
  
#line 1934 
  if (err != 0) 
#line 1935 
                netdev_err((struct net_device const *)enic->netdev,"vNIC hang reset failed, err %d\n",err); else ;
  
#line 1938 
  return err;
}


#line 1941  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
int __enic_set_rsskey(struct enic *enic)
{
  int __retres;
  union vnic_rss_key *rss_key_buf_va;
  dma_addr_t rss_key_buf_pa;
  int i;
  int kidx;
  int bidx;
  int err;
  
#line 1947 
  rss_key_buf_va = (union vnic_rss_key *)pci_zalloc_consistent(enic->pdev,64UL,& rss_key_buf_pa);
  
#line 1950 
  if (rss_key_buf_va == (union vnic_rss_key *)0) {
    
#line 1951 
    __retres = -12;
    
#line 1951 
    goto return_label;
  }
  else ;
  
#line 1953 
  i = 0;
  
#line 1953 
  goto ldv_56102;
  ldv_56101: 
#line 1954 
  ;
  
#line 1954 
  kidx = i / 10;
  
#line 1955 
  bidx = i % 10;
  
#line 1956 
  rss_key_buf_va->key[kidx].b[bidx] = enic->rss_key[i];
  
#line 1953 
  i += 1;
  ldv_56102: 
#line 1954 
  ;
  
#line 1953 
  if (i <= 39) 
#line 1955 
               goto ldv_56101; else 
#line 1958 
                                    goto ldv_56103;
  ldv_56103: 
#line 1959 
  ;
  
#line 1958 
  ldv_spin_lock_bh_100(& enic->devcmd_lock);
  
#line 1959 
  err = enic_set_rss_key(enic,rss_key_buf_pa,64ULL);
  
#line 1962 
  ldv_spin_unlock_bh_101(& enic->devcmd_lock);
  
#line 1964 
  pci_free_consistent(enic->pdev,64UL,(void *)rss_key_buf_va,rss_key_buf_pa);
  
#line 1967 
  __retres = err;
  return_label: 
#line 1967 
                return __retres;
}


#line 1970  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_set_rsskey(struct enic *enic)
{
  int tmp;
  
#line 1972 
  netdev_rss_key_fill((void *)(& enic->rss_key),40UL);
  
#line 1974 
  tmp = __enic_set_rsskey(enic);
  
#line 1974 
  return tmp;
}


#line 1977  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_set_rsscpu(struct enic *enic, u8 rss_hash_bits)
{
  int __retres;
  dma_addr_t rss_cpu_buf_pa;
  unsigned int i;
  int err;
  
#line 1980 
  union vnic_rss_cpu *rss_cpu_buf_va = (union vnic_rss_cpu *)0;
  
#line 1984 
  rss_cpu_buf_va = (union vnic_rss_cpu *)pci_alloc_consistent(enic->pdev,256UL,& rss_cpu_buf_pa);
  
#line 1986 
  if (rss_cpu_buf_va == (union vnic_rss_cpu *)0) {
    
#line 1987 
    __retres = -12;
    
#line 1987 
    goto return_label;
  }
  else ;
  
#line 1989 
  i = 0U;
  
#line 1989 
  goto ldv_56116;
  ldv_56115: 
#line 1990 
  ;
  
#line 1990 
  rss_cpu_buf_va->cpu[i / 4U].b[i & 3U] = (unsigned char)(i % enic->rq_count);
  
#line 1989 
  i += 1U;
  ldv_56116: 
#line 1990 
  ;
  
#line 1989 
  if ((unsigned int)(1 << (int)rss_hash_bits) > i) 
#line 1991 
                                                   goto ldv_56115; else 
                                                                    
#line 1994 
                                                                    goto ldv_56117;
  ldv_56117: 
#line 1995 
  ;
  
#line 1992 
  ldv_spin_lock_bh_102(& enic->devcmd_lock);
  
#line 1993 
  err = enic_set_rss_cpu(enic,rss_cpu_buf_pa,256ULL);
  
#line 1996 
  ldv_spin_unlock_bh_103(& enic->devcmd_lock);
  
#line 1998 
  pci_free_consistent(enic->pdev,256UL,(void *)rss_cpu_buf_va,rss_cpu_buf_pa);
  
#line 2001 
  __retres = err;
  return_label: 
#line 2001 
                return __retres;
}


#line 2004  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_set_niccfg(struct enic *enic, u8 rss_default_cpu, u8 rss_hash_type, u8 rss_hash_bits, u8 rss_base_cpu, u8 rss_enable)
{
  int err;
  
#line 2007 
  u8 const tso_ipid_split_en = (unsigned char)0U;
  
#line 2008 
  u8 const ig_vlan_strip_en = (unsigned char)1U;
  
#line 2014 
  ldv_spin_lock_bh_104(& enic->devcmd_lock);
  
#line 2015 
  err = enic_set_nic_cfg(enic,(unsigned char)((int)rss_default_cpu),(unsigned char)((int)rss_hash_type),(unsigned char)((int)rss_hash_bits),(unsigned char)((int)rss_base_cpu),(unsigned char)((int)rss_enable),(unsigned char)((int)tso_ipid_split_en),(unsigned char)((int)ig_vlan_strip_en));
  
#line 2020 
  ldv_spin_unlock_bh_105(& enic->devcmd_lock);
  
#line 2022 
  return err;
}


#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_set_rss_nic_cfg(struct enic *enic)
{
  int tmp_2;
  
#line 2027 
  struct device *dev = enic_get_dev(enic);
  
#line 2028 
  u8 const rss_default_cpu = (unsigned char)0U;
  
#line 2029 
  u8 const rss_hash_type = (unsigned char)30U;
  
#line 2033 
  u8 const rss_hash_bits = (unsigned char)7U;
  
#line 2034 
  u8 const rss_base_cpu = (unsigned char)0U;
  
#line 2035 
  u8 rss_enable = (unsigned char)(((int)(enic->config.flags >> 4) & 1 && enic->rq_count > 1U) != 0);
  
#line 2037 
  if ((unsigned int)rss_enable != 0U) {
    int tmp_1;
    
#line 2038 
    tmp_1 = enic_set_rsskey(enic);
    
#line 2038 
    if (tmp_1 == 0) {
      int tmp_0;
      
#line 2039 
      tmp_0 = enic_set_rsscpu(enic,(unsigned char)((int)rss_hash_bits));
      
#line 2039 
      if (tmp_0 != 0) {
        
#line 2040 
        rss_enable = (unsigned char)0U;
        
#line 2041 
        dev_warn((struct device const *)dev,"RSS disabled, ");
      }
      else ;
    }
    else {
      
#line 2045 
      rss_enable = (unsigned char)0U;
      
#line 2046 
      dev_warn((struct device const *)dev,"RSS disabled, Failed to set RSS key.\n");
    }
  }
  else ;
  
#line 2050 
  tmp_2 = enic_set_niccfg(enic,(unsigned char)((int)rss_default_cpu),(unsigned char)((int)rss_hash_type),(unsigned char)((int)rss_hash_bits),(unsigned char)((int)rss_base_cpu),(unsigned char)((int)rss_enable));
  
#line 2050 
  return tmp_2;
}


#line 2054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_reset(struct work_struct *work)
{
  struct enic *tmp;
  int tmp_1;
  bool tmp_0;
  {
    
#line 2056 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 2056 
    tmp = (struct enic *)__mptr + 18446744073709551272U;
  }
  
#line 2056 
  struct enic *enic = tmp;
  
#line 2058 
  tmp_0 = netif_running((struct net_device const *)enic->netdev);
  
#line 2058 
  if (tmp_0) 
#line 2058 
             tmp_1 = 0; else 
#line 2058 
                             tmp_1 = 1;
  
#line 2058 
  if (tmp_1) 
#line 2059 
             goto return_label; else ;
  
#line 2061 
  rtnl_lock();
  
#line 2063 
  ldv_spin_lock_106(& enic->enic_api_lock);
  
#line 2064 
  enic_dev_hang_notify(enic);
  
#line 2065 
  enic_stop(enic->netdev);
  
#line 2066 
  enic_dev_hang_reset(enic);
  
#line 2067 
  enic_reset_addr_lists(enic);
  
#line 2068 
  enic_init_vnic_resources(enic);
  
#line 2069 
  enic_set_rss_nic_cfg(enic);
  
#line 2070 
  enic_dev_set_ig_vlan_rewrite_mode(enic);
  
#line 2071 
  enic_open(enic->netdev);
  
#line 2072 
  ldv_spin_unlock_107(& enic->enic_api_lock);
  
#line 2073 
  call_netdevice_notifiers(3UL,enic->netdev);
  
#line 2075 
  rtnl_unlock();
  return_label: 
#line 2076 
                return;
}


#line 2078  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_set_intr_mode(struct enic *enic)
{
  int __retres;
  unsigned int tmp_0;
  unsigned int tmp_2;
  unsigned int i;
  {
    unsigned int tmp;
    
#line 2080 
    unsigned int __min1 = enic->rq_count;
    
#line 2080 
    unsigned int __min2 = 8U;
    
#line 2080 
    if (__min1 < __min2) 
#line 2080 
                         tmp = __min1; else 
#line 2080 
                                            tmp = __min2;
    
#line 2080 
    tmp_0 = tmp;
  }
  
#line 2080 
  unsigned int n = tmp_0;
  {
    unsigned int tmp_1;
    
#line 2081 
    unsigned int __min1_0 = enic->wq_count;
    
#line 2081 
    unsigned int __min2_0 = 8U;
    
#line 2081 
    if (__min1_0 < __min2_0) 
#line 2081 
                             tmp_1 = __min1_0; else 
#line 2081 
                                                    tmp_1 = __min2_0;
    
#line 2081 
    tmp_2 = tmp_1;
  }
  
#line 2081 
  unsigned int m = tmp_2;
  
#line 2094 
  if ((long)((n + m) + 2U > 18U) != 0L) {
    
#line 2096 
    ldv_inline_asm();
    
#line 2094 
    ;
  }
  else ;
  
#line 2095 
  i = 0U;
  
#line 2095 
  goto ldv_56160;
  ldv_56159: 
#line 2096 
  ;
  
#line 2096 
  enic->msix_entry[i].entry = (unsigned short)i;
  
#line 2095 
  i += 1U;
  ldv_56160: 
#line 2096 
  ;
  
#line 2095 
  if ((n + m) + 2U > i) 
#line 2097 
                        goto ldv_56159; else 
#line 2100 
                                             goto ldv_56161;
  ldv_56161: 
#line 2101 
  ;
  
#line 2101 
  if ((((((int)(enic->config.flags >> 4) & 1 && (unsigned int)enic->config.intr_mode == 0U) && enic->rq_count >= n) && enic->wq_count >= m) && enic->cq_count >= n + m) && enic->intr_count >= (n + m) + 2U) {
    int tmp_3;
    
#line 2108 
    tmp_3 = pci_enable_msix_range(enic->pdev,(struct msix_entry *)(& enic->msix_entry),(int)((n + m) + 2U),(int)((n + m) + 2U));
    
#line 2108 
    if (tmp_3 > 0) {
      
#line 2111 
      enic->rq_count = n;
      
#line 2112 
      enic->wq_count = m;
      
#line 2113 
      enic->cq_count = n + m;
      
#line 2114 
      enic->intr_count = (n + m) + 2U;
      
#line 2116 
      vnic_dev_set_intr_mode(enic->vdev,(enum vnic_dev_intr_mode)VNIC_DEV_INTR_MODE_MSIX);
      
#line 2119 
      __retres = 0;
      
#line 2119 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2123 
  if (((((unsigned int)enic->config.intr_mode == 0U && enic->rq_count != 0U) && enic->wq_count >= m) && enic->cq_count >= m + 1U) && enic->intr_count >= m + 3U) {
    int tmp_4;
    
#line 2128 
    tmp_4 = pci_enable_msix_range(enic->pdev,(struct msix_entry *)(& enic->msix_entry),(int)(m + 3U),(int)(m + 3U));
    
#line 2128 
    if (tmp_4 > 0) {
      
#line 2131 
      enic->rq_count = 1U;
      
#line 2132 
      enic->wq_count = m;
      
#line 2133 
      enic->cq_count = m + 1U;
      
#line 2134 
      enic->intr_count = m + 3U;
      
#line 2136 
      vnic_dev_set_intr_mode(enic->vdev,(enum vnic_dev_intr_mode)VNIC_DEV_INTR_MODE_MSIX);
      
#line 2139 
      __retres = 0;
      
#line 2139 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2148 
  if (((((unsigned int)enic->config.intr_mode <= 1U && enic->rq_count != 0U) && enic->wq_count != 0U) && enic->cq_count > 1U) && enic->intr_count != 0U) {
    int tmp_5;
    
#line 2152 
    tmp_5 = pci_enable_msi_exact(enic->pdev,1);
    
#line 2152 
    if (tmp_5 == 0) {
      
#line 2155 
      enic->rq_count = 1U;
      
#line 2156 
      enic->wq_count = 1U;
      
#line 2157 
      enic->cq_count = 2U;
      
#line 2158 
      enic->intr_count = 1U;
      
#line 2160 
      vnic_dev_set_intr_mode(enic->vdev,(enum vnic_dev_intr_mode)VNIC_DEV_INTR_MODE_MSI);
      
#line 2162 
      __retres = 0;
      
#line 2162 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2173 
  if (((((unsigned int)enic->config.intr_mode <= 2U && enic->rq_count != 0U) && enic->wq_count != 0U) && enic->cq_count > 1U) && enic->intr_count > 2U) {
    
#line 2179 
    enic->rq_count = 1U;
    
#line 2180 
    enic->wq_count = 1U;
    
#line 2181 
    enic->cq_count = 2U;
    
#line 2182 
    enic->intr_count = 3U;
    
#line 2184 
    vnic_dev_set_intr_mode(enic->vdev,(enum vnic_dev_intr_mode)VNIC_DEV_INTR_MODE_INTX);
    
#line 2186 
    __retres = 0;
    
#line 2186 
    goto return_label;
  }
  else ;
  
#line 2189 
  vnic_dev_set_intr_mode(enic->vdev,(enum vnic_dev_intr_mode)VNIC_DEV_INTR_MODE_UNKNOWN);
  
#line 2191 
  __retres = -22;
  return_label: 
#line 2191 
                return __retres;
}


#line 2194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_clear_intr_mode(struct enic *enic)
{
  enum vnic_dev_intr_mode tmp;
  
#line 2196 
  tmp = vnic_dev_get_intr_mode(enic->vdev);
  
#line 2196 
  switch ((unsigned int)tmp) {
    case (unsigned int)3: 
#line 2197 
    ;
    
#line 2198 
    pci_disable_msix(enic->pdev);
    
#line 2199 
    goto ldv_56166;
    case (unsigned int)2: 
#line 2200 
    ;
    
#line 2201 
    pci_disable_msi(enic->pdev);
    
#line 2202 
    goto ldv_56166;
    default: 
#line 2203 
    ;
    
#line 2204 
    goto ldv_56166;
  }
  ldv_56166: 
#line 2207 
  ;
  
#line 2207 
  vnic_dev_set_intr_mode(enic->vdev,(enum vnic_dev_intr_mode)VNIC_DEV_INTR_MODE_UNKNOWN);
  
#line 2208 
  return;
}


#line 2210  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static struct net_device_ops const enic_netdev_dynamic_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & enic_open, .ndo_stop = & enic_stop, .ndo_start_xmit = & enic_hard_start_xmit, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & enic_set_rx_mode, .ndo_set_mac_address = & enic_set_mac_address_dynamic, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = (int (*)(struct net_device *, struct ifreq *, int ))0, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & enic_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & enic_tx_timeout, .ndo_get_stats64 = & enic_get_stats, .ndo_get_stats = (struct net_device_stats *(*)(struct net_device *))0, .ndo_vlan_rx_add_vid = & enic_vlan_rx_add_vid, .ndo_vlan_rx_kill_vid = & enic_vlan_rx_kill_vid, .ndo_poll_controller = & enic_poll_controller, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = & enic_busy_poll, .ndo_set_vf_mac = & enic_set_vf_mac, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = & enic_set_vf_port, .ndo_get_vf_port = & enic_get_vf_port, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = & enic_rx_flow_steer, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = (int (*)(struct net_device *, netdev_features_t ))0, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 2236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static struct net_device_ops const enic_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & enic_open, .ndo_stop = & enic_stop, .ndo_start_xmit = & enic_hard_start_xmit, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & enic_set_rx_mode, .ndo_set_mac_address = & enic_set_mac_address, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = (int (*)(struct net_device *, struct ifreq *, int ))0, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & enic_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & enic_tx_timeout, .ndo_get_stats64 = & enic_get_stats, .ndo_get_stats = (struct net_device_stats *(*)(struct net_device *))0, .ndo_vlan_rx_add_vid = & enic_vlan_rx_add_vid, .ndo_vlan_rx_kill_vid = & enic_vlan_rx_kill_vid, .ndo_poll_controller = & enic_poll_controller, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = & enic_busy_poll, .ndo_set_vf_mac = & enic_set_vf_mac, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = & enic_set_vf_port, .ndo_get_vf_port = & enic_get_vf_port, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = & enic_rx_flow_steer, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = (int (*)(struct net_device *, netdev_features_t ))0, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 2262  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_dev_deinit(struct enic *enic)
{
  unsigned int i;
  enum vnic_dev_intr_mode tmp_0;
  
#line 2266 
  i = 0U;
  
#line 2266 
  goto ldv_56176;
  ldv_56175: 
#line 2267 
  ;
  
#line 2267 
  napi_hash_del(& enic->napi[i]);
  
#line 2268 
  netif_napi_del(& enic->napi[i]);
  
#line 2266 
  i += 1U;
  ldv_56176: 
#line 2267 
  ;
  
#line 2266 
  if (enic->rq_count > i) 
#line 2268 
                          goto ldv_56175; else 
#line 2271 
                                               goto ldv_56177;
  ldv_56177: 
#line 2272 
  ;
  
#line 2270 
  tmp_0 = vnic_dev_get_intr_mode(enic->vdev);
  
#line 2270 
  if (tmp_0 == (unsigned int)VNIC_DEV_INTR_MODE_MSIX) {
    unsigned int tmp;
    
#line 2271 
    i = 0U;
    
#line 2271 
    goto ldv_56179;
    ldv_56178: 
#line 2272 
    ;
    
#line 2272 
    tmp = enic_cq_wq(enic,i);
    
#line 2272 
    ;
    
#line 2272 
    netif_napi_del(& enic->napi[tmp]);
    
#line 2271 
    i += 1U;
    ldv_56179: 
#line 2272 
    ;
    
#line 2271 
    if (enic->wq_count > i) 
#line 2273 
                            goto ldv_56178; else 
#line 2276 
                                                 goto ldv_56180;
    ldv_56180: 
#line 2277 
    ;
  }
  else ;
  
#line 2274 
  enic_free_vnic_resources(enic);
  
#line 2275 
  enic_clear_intr_mode(enic);
  
#line 2276 
  return;
}


#line 2278  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_kdump_kernel_config(struct enic *enic)
{
  int tmp_2;
  
#line 2280 
  tmp_2 = is_kdump_kernel();
  
#line 2280 
  if (tmp_2 != 0) {
    struct device *tmp;
    int tmp_1;
    
#line 2281 
    tmp = enic_get_dev(enic);
    
#line 2281 
    _dev_info((struct device const *)tmp,"Running from within kdump kernel. Using minimal resources\n");
    
#line 2282 
    enic->rq_count = 1U;
    
#line 2283 
    enic->wq_count = 1U;
    
#line 2284 
    enic->config.rq_desc_count = 64U;
    
#line 2285 
    enic->config.wq_desc_count = 64U;
    {
      int tmp_0;
      
#line 2286 
      u16 __min1 = (unsigned short)1500U;
      
#line 2286 
      u16 __min2 = enic->config.mtu;
      
#line 2286 
      if ((int)__min1 < (int)__min2) 
#line 2286 
                                     tmp_0 = (int)__min1; else 
#line 2286 
                                                               tmp_0 = (int)__min2;
      
#line 2286 
      tmp_1 = tmp_0;
    }
    
#line 2286 
    enic->config.mtu = (unsigned short)tmp_1;
  }
  else ;
  
#line 2289 
  return;
}


#line 2290  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_dev_init(struct enic *enic)
{
  int __retres;
  unsigned int i;
  int err;
  enum vnic_dev_intr_mode tmp_0;
  
#line 2292 
  struct device *dev = enic_get_dev(enic);
  
#line 2293 
  struct net_device *netdev = enic->netdev;
  
#line 2298 
  err = enic_dev_intr_coal_timer_info(enic);
  
#line 2299 
  if (err != 0) {
    
#line 2300 
    dev_warn((struct device const *)dev,"Using default conversion factor for ");
    
#line 2302 
    vnic_dev_intr_coal_timer_info_default(enic->vdev);
  }
  else ;
  
#line 2308 
  err = enic_get_vnic_config(enic);
  
#line 2309 
  if (err != 0) {
    
#line 2310 
    dev_err((struct device const *)dev,"Get vNIC configuration failed, aborting\n");
    
#line 2311 
    __retres = err;
    
#line 2311 
    goto return_label;
  }
  else ;
  
#line 2317 
  enic_get_res_counts(enic);
  
#line 2321 
  enic_kdump_kernel_config(enic);
  
#line 2327 
  err = enic_set_intr_mode(enic);
  
#line 2328 
  if (err != 0) {
    
#line 2329 
    dev_err((struct device const *)dev,"Failed to set intr mode based on resource ");
    
#line 2331 
    __retres = err;
    
#line 2331 
    goto return_label;
  }
  else ;
  
#line 2337 
  err = enic_alloc_vnic_resources(enic);
  
#line 2338 
  if (err != 0) {
    
#line 2339 
    dev_err((struct device const *)dev,"Failed to alloc vNIC resources, aborting\n");
    
#line 2340 
    goto err_out_free_vnic_resources;
  }
  else ;
  
#line 2343 
  enic_init_vnic_resources(enic);
  
#line 2345 
  err = enic_set_rss_nic_cfg(enic);
  
#line 2346 
  if (err != 0) {
    
#line 2347 
    dev_err((struct device const *)dev,"Failed to config nic, aborting\n");
    
#line 2348 
    goto err_out_free_vnic_resources;
  }
  else ;
  
#line 2351 
  tmp_0 = vnic_dev_get_intr_mode(enic->vdev);
  
#line 2351 
  switch ((unsigned int)tmp_0) {
    unsigned int tmp_1;
    default: 
#line 2352 
    ;
    
#line 2353 
    netif_napi_add(netdev,& enic->napi[0],& enic_poll,64);
    
#line 2354 
    napi_hash_add(& enic->napi[0]);
    
#line 2355 
    goto ldv_56196;
    case (unsigned int)3: 
#line 2356 
    ;
    
#line 2357 
    i = 0U;
    
#line 2357 
    goto ldv_56199;
    ldv_56198: 
#line 2358 
    ;
    
#line 2358 
    netif_napi_add(netdev,& enic->napi[i],& enic_poll_msix_rq,64);
    
#line 2360 
    napi_hash_add(& enic->napi[i]);
    
#line 2357 
    i += 1U;
    ldv_56199: 
#line 2358 
    ;
    
#line 2357 
    if (enic->rq_count > i) 
#line 2359 
                            goto ldv_56198; else 
#line 2362 
                                                 goto ldv_56200;
    ldv_56200: 
#line 2363 
    ;
    
#line 2362 
    i = 0U;
    
#line 2362 
    goto ldv_56202;
    ldv_56201: 
#line 2363 
    ;
    
#line 2363 
    tmp_1 = enic_cq_wq(enic,i);
    
#line 2363 
    ;
    
#line 2363 
    ;
    
#line 2363 
    netif_napi_add(netdev,& enic->napi[tmp_1],& enic_poll_msix_wq,64);
    
#line 2362 
    i += 1U;
    ldv_56202: 
#line 2363 
    ;
    
#line 2362 
    if (enic->wq_count > i) 
#line 2364 
                            goto ldv_56201; else 
#line 2367 
                                                 goto ldv_56203;
    ldv_56203: 
#line 2368 
    ;
    
#line 2365 
    goto ldv_56196;
  }
  ldv_56196: 
#line 2368 
  ;
  
#line 2368 
  __retres = 0;
  
#line 2368 
  goto return_label;
  err_out_free_vnic_resources: 
#line 2370 
  ;
  
#line 2371 
  enic_clear_intr_mode(enic);
  
#line 2372 
  enic_free_vnic_resources(enic);
  
#line 2374 
  __retres = err;
  return_label: 
#line 2374 
                return __retres;
}


#line 2377  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_iounmap(struct enic *enic)
{
  unsigned int i;
  
#line 2381 
  i = 0U;
  
#line 2381 
  goto ldv_56212;
  ldv_56211: 
#line 2382 
  ;
  
#line 2382 
  if (enic->bar[i].vaddr != (void *)0) 
#line 2383 
                                       iounmap((void volatile *)enic->bar[i].vaddr); else ;
  
#line 2381 
  i += 1U;
  ldv_56212: 
#line 2382 
  ;
  
#line 2381 
  if (i <= 5U) 
#line 2383 
               goto ldv_56211; else 
#line 2386 
                                    goto ldv_56213;
  ldv_56213: 
#line 2387 
  ;
  
#line 2388 
  return;
}


#line 2386  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_probe(struct pci_dev *pdev, struct pci_device_id const *ent)
{
  int __retres;
  struct net_device *netdev;
  struct enic *enic;
  unsigned int i;
  int err;
  resource_size_t tmp_0;
  int tmp_2;
  int tmp_3;
  int tmp_5;
  
#line 2388 
  struct device *dev = & pdev->dev;
  
#line 2391 
  int using_dac = 0;
  
#line 2395 
  int pos = 0;
  
#line 2397 
  int num_pps = 1;
  
#line 2403 
  netdev = ldv_alloc_etherdev_mqs_108(28096,8U,8U);
  
#line 2405 
  if (netdev == (struct net_device *)0) {
    
#line 2406 
    __retres = -12;
    
#line 2406 
    goto return_label;
  }
  else ;
  
#line 2408 
  pci_set_drvdata(pdev,(void *)netdev);
  
#line 2410 
  netdev->dev.parent = & pdev->dev;
  
#line 2412 
  enic = (struct enic *)netdev_priv((struct net_device const *)netdev);
  
#line 2413 
  enic->netdev = netdev;
  
#line 2414 
  enic->pdev = pdev;
  
#line 2419 
  err = pci_enable_device_mem(pdev);
  
#line 2420 
  if (err != 0) {
    
#line 2421 
    dev_err((struct device const *)dev,"Cannot enable PCI device, aborting\n");
    
#line 2422 
    goto err_out_free_netdev;
  }
  else ;
  
#line 2425 
  err = pci_request_regions(pdev,"enic");
  
#line 2426 
  if (err != 0) {
    
#line 2427 
    dev_err((struct device const *)dev,"Cannot request PCI regions, aborting\n");
    
#line 2428 
    goto err_out_disable_device;
  }
  else ;
  
#line 2431 
  pci_set_master(pdev);
  
#line 2438 
  err = pci_set_dma_mask(pdev,18446744073709551615ULL);
  
#line 2439 
  if (err != 0) {
    
#line 2440 
    err = pci_set_dma_mask(pdev,4294967295ULL);
    
#line 2441 
    if (err != 0) {
      
#line 2442 
      dev_err((struct device const *)dev,"No usable DMA configuration, aborting\n");
      
#line 2443 
      goto err_out_release_regions;
    }
    else ;
    
#line 2445 
    err = pci_set_consistent_dma_mask(pdev,4294967295ULL);
    
#line 2446 
    if (err != 0) {
      
#line 2447 
      dev_err((struct device const *)dev,"Unable to obtain %u-bit DMA ",32);
      
#line 2449 
      goto err_out_release_regions;
    }
    else ;
  }
  else {
    
#line 2452 
    err = pci_set_consistent_dma_mask(pdev,18446744073709551615ULL);
    
#line 2453 
    if (err != 0) {
      
#line 2454 
      dev_err((struct device const *)dev,"Unable to obtain %u-bit DMA ",64);
      
#line 2456 
      goto err_out_release_regions;
    }
    else ;
    
#line 2458 
    using_dac = 1;
  }
  
#line 2464 
  i = 0U;
  
#line 2464 
  goto ldv_56235;
  ldv_56234: 
#line 2465 
  ;
  
#line 2465 
  if ((pdev->resource[i].flags & 512UL) == 0UL) 
#line 2466 
                                                goto ldv_56232; else ;
  
#line 2467 
  if (pdev->resource[i].start != 0ULL || pdev->resource[i].end != pdev->resource[i].start) 
    
#line 2467 
    tmp_0 = (pdev->resource[i].end - pdev->resource[i].start) + 1ULL; else 
                                                                    
#line 2467 
                                                                    tmp_0 = 0ULL;
  
#line 2467 
  enic->bar[i].len = (unsigned long)tmp_0;
  
#line 2468 
  enic->bar[i].vaddr = pci_iomap(pdev,(int)i,enic->bar[i].len);
  
#line 2469 
  if (enic->bar[i].vaddr == (void *)0) {
    
#line 2470 
    dev_err((struct device const *)dev,"Cannot memory-map BAR %d, aborting\n",i);
    
#line 2471 
    err = -19;
    
#line 2472 
    goto err_out_iounmap;
  }
  else ;
  
#line 2474 
  enic->bar[i].bus_addr = pdev->resource[i].start;
  ldv_56232: 
#line 2475 
  ;
  
#line 2464 
  i += 1U;
  ldv_56235: 
#line 2465 
  ;
  
#line 2464 
  if (i <= 5U) 
#line 2466 
               goto ldv_56234; else 
#line 2469 
                                    goto ldv_56236;
  ldv_56236: 
#line 2470 
  ;
  
#line 2480 
  enic->vdev = vnic_dev_register((struct vnic_dev *)0,(void *)enic,pdev,(struct vnic_dev_bar *)(& enic->bar),6U);
  
#line 2482 
  if (enic->vdev == (struct vnic_dev *)0) {
    
#line 2483 
    dev_err((struct device const *)dev,"vNIC registration failed, aborting\n");
    
#line 2484 
    err = -19;
    
#line 2485 
    goto err_out_iounmap;
  }
  else ;
  
#line 2490 
  pos = pci_find_ext_capability(pdev,16);
  
#line 2491 
  if (pos != 0) {
    
#line 2492 
    pci_read_config_word((struct pci_dev const *)pdev,pos + 14,& enic->num_vfs);
    
#line 2494 
    if ((unsigned int)enic->num_vfs != 0U) {
      
#line 2495 
      err = pci_enable_sriov(pdev,(int)enic->num_vfs);
      
#line 2496 
      if (err != 0) {
        
#line 2497 
        dev_err((struct device const *)dev,"SRIOV enable failed, aborting.",err);
        
#line 2500 
        goto err_out_vnic_unregister;
      }
      else ;
      
#line 2502 
      enic->priv_flags |= 1U;
      
#line 2503 
      num_pps = (int)enic->num_vfs;
    }
    else ;
  }
  else ;
  
#line 2509 
  enic->pp = (struct enic_port_profile *)kcalloc((unsigned long)num_pps,92UL,208U);
  
#line 2510 
  if (enic->pp == (struct enic_port_profile *)0) {
    
#line 2511 
    err = -12;
    
#line 2512 
    goto err_out_disable_sriov_pp;
  }
  else ;
  
#line 2518 
  err = enic_dev_open(enic);
  
#line 2519 
  if (err != 0) {
    
#line 2520 
    dev_err((struct device const *)dev,"vNIC dev open failed, aborting\n");
    
#line 2521 
    goto err_out_disable_sriov;
  }
  else ;
  
#line 2527 
  spinlock_check(& enic->devcmd_lock);
  {
    struct lock_class_key __key;
    
#line 2527 
    __raw_spin_lock_init(& enic->devcmd_lock.__anonCompField_spinlock_18.rlock,"&(&enic->devcmd_lock)->rlock",& __key);
  }
  
#line 2528 
  spinlock_check(& enic->enic_api_lock);
  {
    struct lock_class_key __key_0;
    
#line 2528 
    __raw_spin_lock_init(& enic->enic_api_lock.__anonCompField_spinlock_18.rlock,"&(&enic->enic_api_lock)->rlock",& __key_0);
  }
  
#line 2534 
  err = enic_dev_set_ig_vlan_rewrite_mode(enic);
  
#line 2535 
  if (err != 0) {
    
#line 2536 
    dev_err((struct device const *)dev,"Failed to set ingress vlan rewrite mode, aborting.\n");
    
#line 2538 
    goto err_out_dev_close;
  }
  else ;
  
#line 2549 
  netif_carrier_off(netdev);
  
#line 2556 
  tmp_2 = enic_is_dynamic(enic);
  
#line 2556 
  if (tmp_2 == 0) {
    
#line 2557 
    err = vnic_dev_init(enic->vdev,0);
    
#line 2558 
    if (err != 0) {
      
#line 2559 
      dev_err((struct device const *)dev,"vNIC dev init failed, aborting\n");
      
#line 2560 
      goto err_out_dev_close;
    }
    else ;
  }
  else ;
  
#line 2564 
  err = enic_dev_init(enic);
  
#line 2565 
  if (err != 0) {
    
#line 2566 
    dev_err((struct device const *)dev,"Device initialization failed, aborting\n");
    
#line 2567 
    goto err_out_dev_close;
  }
  else ;
  
#line 2570 
  netif_set_real_num_tx_queues(netdev,enic->wq_count);
  
#line 2571 
  netif_set_real_num_rx_queues(netdev,enic->rq_count);
  {
    struct lock_class_key __key_1;
    
#line 2576 
    init_timer_key(& enic->notify_timer,0U,"(&enic->notify_timer)",& __key_1);
  }
  
#line 2577 
  enic->notify_timer.function = & enic_notify_timer;
  
#line 2578 
  enic->notify_timer.data = (unsigned long)enic;
  
#line 2580 
  enic_set_rx_coal_setting(enic);
  {
    struct lock_class_key __key_2;
    
#line 2581 
    __init_work(& enic->reset,0);
    
#line 2581 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 2581 
    enic->reset.data = __constr_expr_37;
    
#line 2581 
    lockdep_init_map(& enic->reset.lockdep_map,"(&enic->reset)",& __key_2,0);
    
#line 2581 
    INIT_LIST_HEAD(& enic->reset.entry);
    
#line 2581 
    enic->reset.func = & enic_reset;
  }
  {
    struct lock_class_key __key_3;
    
#line 2582 
    __init_work(& enic->change_mtu_work,0);
    
#line 2582 
    atomic_long_t __constr_expr_38 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 2582 
    enic->change_mtu_work.data = __constr_expr_38;
    
#line 2582 
    lockdep_init_map(& enic->change_mtu_work.lockdep_map,"(&enic->change_mtu_work)",& __key_3,0);
    
#line 2582 
    INIT_LIST_HEAD(& enic->change_mtu_work.entry);
    
#line 2582 
    enic->change_mtu_work.func = & enic_change_mtu_work;
  }
  
#line 2584 
  i = 0U;
  
#line 2584 
  goto ldv_56253;
  ldv_56252: 
#line 2585 
  ;
  
#line 2585 
  spinlock_check(& enic->wq_lock[i]);
  {
    struct lock_class_key __key_4;
    
#line 2585 
    __raw_spin_lock_init(& enic->wq_lock[i].__anonCompField_spinlock_18.rlock,"&(&enic->wq_lock[i])->rlock",& __key_4);
  }
  
#line 2584 
  i += 1U;
  ldv_56253: 
#line 2585 
  ;
  
#line 2584 
  if (enic->wq_count > i) 
#line 2586 
                          goto ldv_56252; else 
#line 2589 
                                               goto ldv_56254;
  ldv_56254: 
#line 2590 
  ;
  
#line 2590 
  enic->port_mtu = (unsigned int)enic->config.mtu;
  
#line 2591 
  enic_change_mtu(netdev,(int)enic->port_mtu);
  
#line 2593 
  err = enic_set_mac_addr(netdev,(char *)(& enic->mac_addr));
  
#line 2594 
  if (err != 0) {
    
#line 2595 
    dev_err((struct device const *)dev,"Invalid MAC address, aborting\n");
    
#line 2596 
    goto err_out_dev_deinit;
  }
  else ;
  
#line 2599 
  enic->tx_coalesce_usecs = enic->config.intr_timer_usec;
  
#line 2603 
  enic->rx_coalesce_usecs = enic->tx_coalesce_usecs;
  
#line 2605 
  tmp_3 = enic_is_dynamic(enic);
  
#line 2605 
  if (tmp_3 != 0) 
#line 2605 
                  goto _LOR;
  else {
    int tmp_4;
    
#line 2605 
    tmp_4 = enic_is_sriov_vf(enic);
    
#line 2605 
    if (tmp_4 != 0) _LOR: 
#line 2606 
                          netdev->netdev_ops = & enic_netdev_dynamic_ops; else 
                                                                    
#line 2608 
                                                                    netdev->netdev_ops = & enic_netdev_ops;
  }
  
#line 2610 
  netdev->watchdog_timeo = 500;
  
#line 2611 
  enic_set_ethtool_ops(netdev);
  
#line 2613 
  netdev->features |= 384ULL;
  
#line 2614 
  if ((int)(enic->config.flags >> 11) & 1) {
    
#line 2615 
    netdev->features &= 18446744073709551487ULL;
    
#line 2616 
    enic->loop_enable = (unsigned short)1U;
    
#line 2617 
    enic->loop_tag = enic->config.loop_tag;
    
#line 2618 
    _dev_info((struct device const *)dev,"loopback tag=0x%04x\n",(int)enic->loop_tag);
  }
  else ;
  
#line 2620 
  if ((int)(enic->config.flags >> 3) & 1) 
#line 2621 
                                          netdev->hw_features |= 9ULL; else ;
  
#line 2622 
  if ((int)enic->config.flags & 1) 
#line 2623 
                                   netdev->hw_features |= 1638400ULL; else ;
  
#line 2625 
  if ((int)(enic->config.flags >> 4) & 1) 
#line 2626 
                                          netdev->hw_features |= 8589934592ULL; else ;
  
#line 2627 
  if ((int)(enic->config.flags >> 2) & 1) 
#line 2628 
                                          netdev->hw_features |= 17179869184ULL; else ;
  
#line 2630 
  netdev->features |= netdev->hw_features;
  
#line 2633 
  netdev->hw_features |= 4294967296ULL;
  
#line 2636 
  if (using_dac != 0) 
#line 2637 
                      netdev->features |= 32ULL; else ;
  
#line 2639 
  netdev->priv_flags |= 131072U;
  
#line 2641 
  err = ldv_register_netdev_109(netdev);
  
#line 2642 
  if (err != 0) {
    
#line 2643 
    dev_err((struct device const *)dev,"Cannot register net device, aborting\n");
    
#line 2644 
    goto err_out_dev_deinit;
  }
  else ;
  
#line 2646 
  enic->rx_copybreak = 256U;
  
#line 2648 
  __retres = 0;
  
#line 2648 
  goto return_label;
  err_out_dev_deinit: 
#line 2650 
  ;
  
#line 2651 
  enic_dev_deinit(enic);
  err_out_dev_close: 
#line 2652 
  ;
  
#line 2653 
  vnic_dev_close(enic->vdev);
  err_out_disable_sriov: 
#line 2654 
  ;
  
#line 2655 
  kfree((void const *)enic->pp);
  err_out_disable_sriov_pp: 
#line 2656 
  ;
  
#line 2658 
  tmp_5 = enic_sriov_enabled(enic);
  
#line 2658 
  if (tmp_5 != 0) {
    
#line 2659 
    pci_disable_sriov(pdev);
    
#line 2660 
    enic->priv_flags &= 4294967294U;
  }
  else ;
  err_out_vnic_unregister: 
#line 2662 
  ;
  
#line 2664 
  vnic_dev_unregister(enic->vdev);
  err_out_iounmap: 
#line 2665 
  ;
  
#line 2666 
  enic_iounmap(enic);
  err_out_release_regions: 
#line 2667 
  ;
  
#line 2668 
  pci_release_regions(pdev);
  err_out_disable_device: 
#line 2669 
  ;
  
#line 2670 
  pci_disable_device(pdev);
  err_out_free_netdev: 
#line 2671 
  ;
  
#line 2672 
  ldv_free_netdev_110(netdev);
  
#line 2674 
  __retres = err;
  return_label: 
#line 2674 
                return __retres;
}


#line 2677  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_remove(struct pci_dev *pdev)
{
  
#line 2679 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 2681 
  if (netdev != (struct net_device *)0) {
    int tmp_1;
    
#line 2682 
    struct enic *enic = netdev_priv((struct net_device const *)netdev);
    
#line 2684 
    cancel_work_sync(& enic->reset);
    
#line 2685 
    cancel_work_sync(& enic->change_mtu_work);
    
#line 2686 
    ldv_unregister_netdev_111(netdev);
    
#line 2687 
    enic_dev_deinit(enic);
    
#line 2688 
    vnic_dev_close(enic->vdev);
    
#line 2690 
    tmp_1 = enic_sriov_enabled(enic);
    
#line 2690 
    if (tmp_1 != 0) {
      
#line 2691 
      pci_disable_sriov(pdev);
      
#line 2692 
      enic->priv_flags &= 4294967294U;
    }
    else ;
    
#line 2695 
    kfree((void const *)enic->pp);
    
#line 2696 
    vnic_dev_unregister(enic->vdev);
    
#line 2697 
    enic_iounmap(enic);
    
#line 2698 
    pci_release_regions(pdev);
    
#line 2699 
    pci_disable_device(pdev);
    
#line 2700 
    ldv_free_netdev_112(netdev);
  }
  else ;
  
#line 2702 
  return;
}


#line 2704  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static struct pci_driver enic_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "enic", .id_table = (struct pci_device_id const *)(& enic_id_table), .probe = & enic_probe, .remove = & enic_remove, .suspend = (int (*)(struct pci_dev *, pm_message_t ))0, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = (int (*)(struct pci_dev *))0, .shutdown = (void (*)(struct pci_dev *))0, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = (struct pci_error_handlers const *)0, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = (struct dev_pm_ops const *)0, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 2711  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static int enic_init_module(void)
{
  int tmp;
  
#line 2713 
  printk("\001",(char *)"Cisco VIC Ethernet NIC Driver",(char *)"2.1.1.83");
  
#line 2715 
  tmp = ldv___pci_register_driver_113(& enic_driver,& __this_module,"enic");
  
#line 2715 
  return tmp;
}


#line 2718  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_main.c"
static void enic_cleanup_module(void)
{
  
#line 2720 
  ldv_pci_unregister_driver_114(& enic_driver);
  
#line 2721 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
int (*ldv_emg_alias_eth_validate_addr_5)(struct net_device *) = & eth_validate_addr;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
struct pci_driver *ldv_emg_alias_enic_driver_2 = & enic_driver;

#line 60 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 61 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 62 
_Bool ldv_emg_schedule_work(struct work_struct *arg0);


#line 63 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 64 
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1);


#line 65 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 66 
int ldv_emg_del_timer_sync(struct timer_list *arg0);


#line 67 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 68 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 69 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 70 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
int ldv_emg_enic_init_module(void)
{
  int tmp;
  
#line 75 
  tmp = enic_init_module();
  
#line 75 
  return tmp;
}


#line 78  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
void ldv_emg_wrapper_enic_poll_controller_28(struct net_device *arg0)
{
  
#line 79 
  enic_poll_controller(arg0);
  
#line 80 
  return;
}


#line 83  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
int ldv_emg_wrapper_enic_stop_2(struct net_device *arg0)
{
  int tmp;
  
#line 84 
  tmp = enic_stop(arg0);
  
#line 84 
  return tmp;
}


#line 88  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
enum netdev_tx ldv_emg_wrapper_enic_hard_start_xmit_14(struct sk_buff *arg0, struct net_device *arg1)
{
  enum netdev_tx tmp;
  
#line 89 
  tmp = enic_hard_start_xmit(arg0,arg1);
  
#line 89 
  return tmp;
}


#line 93  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
int ldv_emg_wrapper_enic_set_mac_address_dynamic_15(struct net_device *arg0, void *arg1)
{
  int tmp;
  
#line 94 
  tmp = enic_set_mac_address_dynamic(arg0,arg1);
  
#line 94 
  return tmp;
}


#line 98  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
int ldv_emg_wrapper_enic_probe_2(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 99 
  tmp = enic_probe(arg0,(struct pci_device_id const *)arg1);
  
#line 99 
  return tmp;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
enum irqreturn ldv_emg_wrapper_enic_isr_legacy_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 104 
  tmp = enic_isr_legacy(arg0,arg1);
  
#line 104 
  return tmp;
}


#line 108  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
struct rtnl_link_stats64 *ldv_emg_wrapper_enic_get_stats_4(struct net_device *arg0, struct rtnl_link_stats64 *arg1)
{
  struct rtnl_link_stats64 *tmp;
  
#line 109 
  tmp = enic_get_stats(arg0,arg1);
  
#line 109 
  return tmp;
}


#line 113  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
int ldv_emg_wrapper_enic_busy_poll_27(struct napi_struct *arg0)
{
  int tmp;
  
#line 114 
  tmp = enic_busy_poll(arg0);
  
#line 114 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
void ldv_emg_enic_cleanup_module(void)
{
  
#line 119 
  enic_cleanup_module();
  
#line 120 
  return;
}


#line 122  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
int ldv_emg_wrapper_enic_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 123 
  tmp = enic_open(arg0);
  
#line 123 
  return tmp;
}


#line 127  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
void ldv_emg_wrapper_enic_tx_timeout_24(struct net_device *arg0)
{
  
#line 128 
  enic_tx_timeout(arg0);
  
#line 129 
  return;
}


#line 132  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
enum irqreturn ldv_emg_wrapper_enic_isr_msi_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 133 
  tmp = enic_isr_msi(arg0,arg1);
  
#line 133 
  return tmp;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
int ldv_emg_wrapper_enic_set_vf_mac_29(struct net_device *arg0, int arg1, unsigned char *arg2)
{
  int tmp;
  
#line 138 
  tmp = enic_set_vf_mac(arg0,arg1,arg2);
  
#line 138 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
int ldv_emg_wrapper_enic_get_vf_port_21(struct net_device *arg0, int arg1, struct sk_buff *arg2)
{
  int tmp;
  
#line 143 
  tmp = enic_get_vf_port(arg0,arg1,arg2);
  
#line 143 
  return tmp;
}


#line 147  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
void ldv_emg_wrapper_enic_remove_3(struct pci_dev *arg0)
{
  
#line 148 
  enic_remove(arg0);
  
#line 149 
  return;
}


#line 152  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
int ldv_emg_wrapper_enic_change_mtu_7(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 153 
  tmp = enic_change_mtu(arg0,arg1);
  
#line 153 
  return tmp;
}


#line 157  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
int ldv_emg_wrapper_enic_set_vf_port_22(struct net_device *arg0, int arg1, struct nlattr **arg2)
{
  int tmp;
  
#line 158 
  tmp = enic_set_vf_port(arg0,arg1,arg2);
  
#line 158 
  return tmp;
}


#line 162  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
void ldv_emg_wrapper_enic_set_rx_mode_26(struct net_device *arg0)
{
  
#line 163 
  enic_set_rx_mode(arg0);
  
#line 164 
  return;
}


#line 585  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 588 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 588 
  return tmp;
}


#line 705  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_spin_lock_60(spinlock_t *lock)
{
  
#line 709 
  ldv_spin_model_lock((char *)"_xmit_lock_of_netdev_queue");
  
#line 711 
  spin_lock_0(lock);
  
#line 712 
  return;
}


#line 748  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_spin_unlock_63(spinlock_t *lock)
{
  
#line 752 
  ldv_spin_model_unlock((char *)"_xmit_lock_of_netdev_queue");
  
#line 754 
  spin_unlock_0(lock);
  
#line 755 
  return;
}


#line 864  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_spin_lock_75(spinlock_t *lock)
{
  
#line 868 
  ldv_spin_model_lock((char *)"NOT_ARG_SIGN");
  
#line 870 
  spin_lock_0(lock);
  
#line 871 
  return;
}


#line 874  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_spin_unlock_76(spinlock_t *lock)
{
  
#line 878 
  ldv_spin_model_unlock((char *)"NOT_ARG_SIGN");
  
#line 880 
  spin_unlock_0(lock);
  
#line 881 
  return;
}


#line 884  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static bool ldv_schedule_work_77(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 888 
  tmp = ldv_emg_schedule_work(work);
  
#line 888 
  __retres = tmp != 0;
  
#line 888 
  return __retres;
}


#line 892  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static bool ldv_schedule_work_78(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 896 
  tmp = ldv_emg_schedule_work(work);
  
#line 896 
  __retres = tmp != 0;
  
#line 896 
  return __retres;
}


#line 900  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static bool ldv_schedule_work_79(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 904 
  tmp = ldv_emg_schedule_work(work);
  
#line 904 
  __retres = tmp != 0;
  
#line 904 
  return __retres;
}


#line 908  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_spin_lock_80(spinlock_t *lock)
{
  
#line 912 
  ldv_spin_model_lock((char *)"NOT_ARG_SIGN");
  
#line 914 
  spin_lock_0(lock);
  
#line 915 
  return;
}


#line 918  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_spin_unlock_81(spinlock_t *lock)
{
  
#line 922 
  ldv_spin_model_unlock((char *)"NOT_ARG_SIGN");
  
#line 924 
  spin_unlock_0(lock);
  
#line 925 
  return;
}


#line 928  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_spin_unlock_82(spinlock_t *lock)
{
  
#line 932 
  ldv_spin_model_unlock((char *)"NOT_ARG_SIGN");
  
#line 934 
  spin_unlock_0(lock);
  
#line 935 
  return;
}


#line 938  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static bool ldv_schedule_work_83(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 942 
  tmp = ldv_emg_schedule_work(work);
  
#line 942 
  __retres = tmp != 0;
  
#line 942 
  return __retres;
}


#line 946  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_spin_lock_bh_84(spinlock_t *lock)
{
  
#line 950 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 952 
  spin_lock_bh_0(lock);
  
#line 953 
  return;
}


#line 956  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_spin_unlock_bh_85(spinlock_t *lock)
{
  
#line 960 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 962 
  spin_unlock_bh_0(lock);
  
#line 963 
  return;
}


#line 966  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_spin_lock_bh_86(spinlock_t *lock)
{
  
#line 970 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 972 
  spin_lock_bh_0(lock);
  
#line 973 
  return;
}


#line 976  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_spin_unlock_bh_87(spinlock_t *lock)
{
  
#line 980 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 982 
  spin_unlock_bh_0(lock);
  
#line 983 
  return;
}


#line 986  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static int ldv_mod_timer_88(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 990 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 990 
  return tmp;
}


#line 994  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_free_irq_89(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 998 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 999 
  return;
}


#line 1002  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_free_irq_90(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1006 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1007 
  return;
}


#line 1010  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_free_irq_91(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1014 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1015 
  return;
}


#line 1018  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static int ldv_request_irq_92(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1022 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1022 
  return tmp;
}


#line 1026  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static int ldv_request_irq_93(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1030 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1030 
  return tmp;
}


#line 1034  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static int ldv_request_irq_94(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1038 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1038 
  return tmp;
}


#line 1042  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_spin_lock_bh_95(spinlock_t *lock)
{
  
#line 1046 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 1048 
  spin_lock_bh_0(lock);
  
#line 1049 
  return;
}


#line 1052  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_spin_unlock_bh_96(spinlock_t *lock)
{
  
#line 1056 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 1058 
  spin_unlock_bh_0(lock);
  
#line 1059 
  return;
}


#line 1062  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static int ldv_mod_timer_97(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1066 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1066 
  return tmp;
}


#line 1070  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static int ldv_del_timer_sync_98(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 1074 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 1074 
  return tmp;
}


#line 1078  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static int ldv_del_timer_sync_99(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 1082 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 1082 
  return tmp;
}


#line 1086  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_spin_lock_bh_100(spinlock_t *lock)
{
  
#line 1090 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 1092 
  spin_lock_bh_0(lock);
  
#line 1093 
  return;
}


#line 1096  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_spin_unlock_bh_101(spinlock_t *lock)
{
  
#line 1100 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 1102 
  spin_unlock_bh_0(lock);
  
#line 1103 
  return;
}


#line 1106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_spin_lock_bh_102(spinlock_t *lock)
{
  
#line 1110 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 1112 
  spin_lock_bh_0(lock);
  
#line 1113 
  return;
}


#line 1116  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_spin_unlock_bh_103(spinlock_t *lock)
{
  
#line 1120 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 1122 
  spin_unlock_bh_0(lock);
  
#line 1123 
  return;
}


#line 1126  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_spin_lock_bh_104(spinlock_t *lock)
{
  
#line 1130 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 1132 
  spin_lock_bh_0(lock);
  
#line 1133 
  return;
}


#line 1136  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_spin_unlock_bh_105(spinlock_t *lock)
{
  
#line 1140 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 1142 
  spin_unlock_bh_0(lock);
  
#line 1143 
  return;
}


#line 1146  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_spin_lock_106(spinlock_t *lock)
{
  
#line 1150 
  ldv_spin_model_lock((char *)"enic_api_lock_of_enic");
  
#line 1152 
  spin_lock_0(lock);
  
#line 1153 
  return;
}


#line 1156  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_spin_unlock_107(spinlock_t *lock)
{
  
#line 1160 
  ldv_spin_model_unlock((char *)"enic_api_lock_of_enic");
  
#line 1162 
  spin_unlock_0(lock);
  
#line 1163 
  return;
}


#line 1166  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_108(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 1170 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1170 
  return tmp;
}


#line 1174  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static int ldv_register_netdev_109(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 1178 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 1178 
  return tmp;
}


#line 1182  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_free_netdev_110(struct net_device *ldv_func_arg1)
{
  
#line 1186 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1187 
  return;
}


#line 1190  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_unregister_netdev_111(struct net_device *ldv_func_arg1)
{
  
#line 1194 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1195 
  return;
}


#line 1198  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_free_netdev_112(struct net_device *ldv_func_arg1)
{
  
#line 1202 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1203 
  return;
}


#line 1206  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static int ldv___pci_register_driver_113(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 1210 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 1210 
  return tmp;
}


#line 1214  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_main.c.aux"
static void ldv_pci_unregister_driver_114(struct pci_driver *ldv_func_arg1)
{
  
#line 1218 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 1219 
  return;
}

unsigned short __builtin_bswap16(unsigned short);

unsigned int __builtin_bswap32(unsigned int);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u16 __fswab16(__u16 val)
{
  __u16 tmp;
  
#line 49 
  tmp = __builtin_bswap16((unsigned short)((int)val));
  
#line 49 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u32 __fswab32(__u32 val)
{
  __u32 tmp;
  
#line 60 
  tmp = __builtin_bswap32(val);
  
#line 60 
  return tmp;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kzalloc(size_t size, gfp_t flags);


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_vic.h"
struct vic_provinfo *vic_provinfo_alloc(gfp_t flags, u8 const *oui, u8 const type);


#line 78 
void vic_provinfo_free(struct vic_provinfo *vp);


#line 79 
int vic_provinfo_add_tlv(struct vic_provinfo *vp, u16 type, u16 length, void const *value);


#line 81 
size_t vic_provinfo_size(struct vic_provinfo *vp);


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_vic.c"
struct vic_provinfo *vic_provinfo_alloc(gfp_t flags, u8 const *oui, u8 const type)
{
  struct vic_provinfo *__retres;
  struct vic_provinfo *vp;
  
#line 31 
  if (oui == (u8 const *)0U) {
    
#line 32 
    __retres = (struct vic_provinfo *)0;
    
#line 32 
    goto return_label;
  }
  else ;
  
#line 34 
  vp = (struct vic_provinfo *)kzalloc(1385UL,flags);
  
#line 35 
  if (vp == (struct vic_provinfo *)0) {
    
#line 36 
    __retres = (struct vic_provinfo *)0;
    
#line 36 
    goto return_label;
  }
  else ;
  
#line 38 
  memcpy((void *)(& vp->oui),(void const *)oui,3UL);
  
#line 39 
  vp->type = type;
  
#line 40 
  vp->length = 67108864U;
  
#line 42 
  __retres = vp;
  return_label: 
#line 42 
                return __retres;
}


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_vic.c"
void vic_provinfo_free(struct vic_provinfo *vp)
{
  
#line 47 
  kfree((void const *)vp);
  
#line 48 
  return;
}


#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_vic.c"
int vic_provinfo_add_tlv(struct vic_provinfo *vp, u16 type, u16 length, void const *value)
{
  int __retres;
  struct vic_provinfo_tlv *tlv;
  unsigned int tmp_0;
  unsigned int tmp_2;
  
#line 55 
  if (vp == (struct vic_provinfo *)0 || value == (void const *)0) {
    
#line 56 
    __retres = -22;
    
#line 56 
    goto return_label;
  }
  else ;
  
#line 58 
  if (0 != 0) 
#line 58 
              tmp_0 = (((vp->length << 24) | ((vp->length << 8) & 16711680U)) | ((vp->length >> 8) & 65280U)) | (vp->length >> 24); else 
                                                                    
#line 58 
                                                                    tmp_0 = __fswab32(vp->length);
  
#line 58 
  ;
  
#line 58 
  if (((unsigned long)tmp_0 + (unsigned long)length) + 4UL > 1373UL) {
    
#line 60 
    __retres = -12;
    
#line 60 
    goto return_label;
  }
  else ;
  
#line 62 
  if (0 != 0) 
#line 62 
              tmp_2 = (((vp->length << 24) | ((vp->length << 8) & 16711680U)) | ((vp->length >> 8) & 65280U)) | (vp->length >> 24); else 
                                                                    
#line 63 
                                                                    tmp_2 = __fswab32(vp->length);
  
#line 62 
  tlv = (struct vic_provinfo_tlv *)(& vp->tlv) + ((unsigned long)tmp_2 + 18446744073709551612U);
  
#line 65 
  if (0 != 0) 
#line 65 
              tlv->type = (unsigned short)(((int)type << 8) | ((int)type >> 8)); else 
                                                                    
#line 65 
                                                                    tlv->type = __fswab16((unsigned short)((int)type));
  
#line 66 
  if (0 != 0) 
#line 66 
              tlv->length = (unsigned short)(((int)length << 8) | ((int)length >> 8)); else 
                                                                    
#line 66 
                                                                    tlv->length = __fswab16((unsigned short)((int)length));
  
#line 67 
  memcpy((void *)(& tlv->value),value,(unsigned long)length);
  
#line 69 
  if (0 != 0) {
    unsigned int tmp_8;
    unsigned int tmp_10;
    unsigned int tmp_12;
    unsigned int tmp_14;
    
#line 69 
    if (0 != 0) 
#line 69 
                tmp_8 = (((((vp->num_tlvs << 24) | ((vp->num_tlvs << 8) & 16711680U)) | ((vp->num_tlvs >> 8) & 65280U)) | (vp->num_tlvs >> 24)) + 1U) << 24;
    else {
      __u32 tmp_7;
      
#line 69 
      tmp_7 = __fswab32(vp->num_tlvs);
      
#line 69 
      tmp_8 = (tmp_7 + 1U) << 24;
    }
    
#line 69 
    if (0 != 0) 
#line 69 
                tmp_10 = ((((((vp->num_tlvs << 24) | ((vp->num_tlvs << 8) & 16711680U)) | ((vp->num_tlvs >> 8) & 65280U)) | (vp->num_tlvs >> 24)) + 1U) << 8) & 16711680U;
    else {
      __u32 tmp_9;
      
#line 69 
      tmp_9 = __fswab32(vp->num_tlvs);
      
#line 69 
      tmp_10 = ((tmp_9 + 1U) << 8) & 16711680U;
    }
    
#line 69 
    if (0 != 0) 
#line 69 
                tmp_12 = ((((((vp->num_tlvs << 24) | ((vp->num_tlvs << 8) & 16711680U)) | ((vp->num_tlvs >> 8) & 65280U)) | (vp->num_tlvs >> 24)) + 1U) >> 8) & 65280U;
    else {
      __u32 tmp_11;
      
#line 69 
      tmp_11 = __fswab32(vp->num_tlvs);
      
#line 69 
      tmp_12 = ((tmp_11 + 1U) >> 8) & 65280U;
    }
    
#line 69 
    if (0 != 0) 
#line 69 
                tmp_14 = (((((vp->num_tlvs << 24) | ((vp->num_tlvs << 8) & 16711680U)) | ((vp->num_tlvs >> 8) & 65280U)) | (vp->num_tlvs >> 24)) + 1U) >> 24;
    else {
      __u32 tmp_13;
      
#line 69 
      tmp_13 = __fswab32(vp->num_tlvs);
      
#line 69 
      tmp_14 = (tmp_13 + 1U) >> 24;
    }
    
#line 69 
    vp->num_tlvs = ((tmp_8 | tmp_10) | tmp_12) | tmp_14;
  }
  else {
    __u32 tmp_17;
    unsigned int tmp_16;
    
#line 69 
    if (0 != 0) 
#line 69 
                tmp_16 = ((((vp->num_tlvs << 24) | ((vp->num_tlvs << 8) & 16711680U)) | ((vp->num_tlvs >> 8) & 65280U)) | (vp->num_tlvs >> 24)) + 1U;
    else {
      __u32 tmp_15;
      
#line 69 
      tmp_15 = __fswab32(vp->num_tlvs);
      
#line 69 
      tmp_16 = tmp_15 + 1U;
    }
    
#line 69 
    tmp_17 = __fswab32(tmp_16);
    
#line 69 
    vp->num_tlvs = tmp_17;
  }
  
#line 70 
  if (0 != 0) {
    unsigned int tmp_21;
    unsigned int tmp_23;
    unsigned int tmp_25;
    unsigned int tmp_27;
    
#line 70 
    if (0 != 0) 
#line 70 
                tmp_21 = ((((vp->length << 24) | ((vp->length << 8) & 16711680U)) | ((vp->length >> 8) & 65280U)) | (vp->length >> 24)) + 4U;
    else {
      __u32 tmp_20;
      
#line 70 
      tmp_20 = __fswab32(vp->length);
      
#line 70 
      tmp_21 = tmp_20 + 4U;
    }
    
#line 70 
    if (0 != 0) 
#line 70 
                tmp_23 = ((((vp->length << 24) | ((vp->length << 8) & 16711680U)) | ((vp->length >> 8) & 65280U)) | (vp->length >> 24)) + 4U;
    else {
      __u32 tmp_22;
      
#line 70 
      tmp_22 = __fswab32(vp->length);
      
#line 70 
      tmp_23 = tmp_22 + 4U;
    }
    
#line 70 
    if (0 != 0) 
#line 70 
                tmp_25 = ((((vp->length << 24) | ((vp->length << 8) & 16711680U)) | ((vp->length >> 8) & 65280U)) | (vp->length >> 24)) + 4U;
    else {
      __u32 tmp_24;
      
#line 70 
      tmp_24 = __fswab32(vp->length);
      
#line 70 
      tmp_25 = tmp_24 + 4U;
    }
    
#line 70 
    if (0 != 0) 
#line 70 
                tmp_27 = ((((vp->length << 24) | ((vp->length << 8) & 16711680U)) | ((vp->length >> 8) & 65280U)) | (vp->length >> 24)) + 4U;
    else {
      __u32 tmp_26;
      
#line 70 
      tmp_26 = __fswab32(vp->length);
      
#line 70 
      tmp_27 = tmp_26 + 4U;
    }
    
#line 70 
    vp->length = ((((tmp_21 + (unsigned int)length) << 24) | (((tmp_23 + (unsigned int)length) << 8) & 16711680U)) | (((tmp_25 + (unsigned int)length) >> 8) & 65280U)) | ((tmp_27 + (unsigned int)length) >> 24);
  }
  else {
    __u32 tmp_30;
    unsigned int tmp_29;
    
#line 70 
    if (0 != 0) 
#line 70 
                tmp_29 = (((vp->length << 24) | ((vp->length << 8) & 16711680U)) | ((vp->length >> 8) & 65280U)) | (vp->length >> 24); else 
                                                                    
#line 70 
                                                                    tmp_29 = __fswab32(vp->length);
    
#line 70 
    ;
    
#line 70 
    tmp_30 = __fswab32((tmp_29 + (unsigned int)length) + 4U);
    
#line 70 
    vp->length = tmp_30;
  }
  
#line 73 
  __retres = 0;
  return_label: 
#line 73 
                return __retres;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_vic.c"
size_t vic_provinfo_size(struct vic_provinfo *vp)
{
  unsigned long tmp_1;
  
#line 78 
  if (vp != (struct vic_provinfo *)0) {
    unsigned int tmp_0;
    
#line 78 
    if (0 != 0) 
#line 78 
                tmp_0 = (((vp->length << 24) | ((vp->length << 8) & 16711680U)) | ((vp->length >> 8) & 65280U)) | (vp->length >> 24); else 
                                                                    
#line 78 
                                                                    tmp_0 = __fswab32(vp->length);
    
#line 78 
    tmp_1 = (unsigned long)tmp_0 + 8UL;
  }
  else 
#line 78 
       tmp_1 = 0UL;
  
#line 78 
  return tmp_1;
}


#line 414  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_vnic_vic.c.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 417 
  tmp = ldv_kzalloc(size,flags);
  
#line 417 
  return tmp;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writeq(unsigned long val, void volatile *addr)
{
  
#line 93 
  ldv_inline_asm();
  
#line 94 
  return;
}


#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.h"
void vnic_dev_clear_desc_ring(struct vnic_dev_ring *ring);


#line 82 
int vnic_dev_alloc_desc_ring(struct vnic_dev *vdev, struct vnic_dev_ring *ring, unsigned int desc_count, unsigned int desc_size);


#line 84 
void vnic_dev_free_desc_ring(struct vnic_dev *vdev, struct vnic_dev_ring *ring);


#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_cq.c"
void vnic_cq_free(struct vnic_cq *cq)
{
  
#line 30 
  vnic_dev_free_desc_ring(cq->vdev,& cq->ring);
  
#line 32 
  cq->ctrl = (struct vnic_cq_ctrl *)0;
  
#line 33 
  return;
}


#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_cq.c"
int vnic_cq_alloc(struct vnic_dev *vdev, struct vnic_cq *cq, unsigned int index, unsigned int desc_count, unsigned int desc_size)
{
  int __retres;
  int err;
  
#line 40 
  cq->index = index;
  
#line 41 
  cq->vdev = vdev;
  
#line 43 
  cq->ctrl = (struct vnic_cq_ctrl *)vnic_dev_get_res(vdev,(enum vnic_res_type)RES_TYPE_CQ,index);
  
#line 44 
  if (cq->ctrl == (struct vnic_cq_ctrl *)0) {
    
#line 45 
    printk("\001",index);
    
#line 46 
    __retres = -22;
    
#line 46 
    goto return_label;
  }
  else ;
  
#line 49 
  err = vnic_dev_alloc_desc_ring(vdev,& cq->ring,desc_count,desc_size);
  
#line 50 
  if (err != 0) {
    
#line 51 
    __retres = err;
    
#line 51 
    goto return_label;
  }
  else ;
  
#line 53 
  __retres = 0;
  return_label: 
#line 53 
                return __retres;
}


#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_cq.c"
void vnic_cq_init(struct vnic_cq *cq, unsigned int flow_control_enable, unsigned int color_enable, unsigned int cq_head, unsigned int cq_tail, unsigned int cq_tail_color, unsigned int interrupt_enable, unsigned int cq_entry_enable, unsigned int cq_message_enable, unsigned int interrupt_offset, u64 cq_message_addr)
{
  u64 paddr;
  
#line 64 
  paddr = cq->ring.base_addr;
  
#line 65 
  writeq((unsigned long)paddr,(void volatile *)(& (cq->ctrl)->ring_base));
  
#line 66 
  iowrite32(cq->ring.desc_count,(void *)(& (cq->ctrl)->ring_size));
  
#line 67 
  iowrite32(flow_control_enable,(void *)(& (cq->ctrl)->flow_control_enable));
  
#line 68 
  iowrite32(color_enable,(void *)(& (cq->ctrl)->color_enable));
  
#line 69 
  iowrite32(cq_head,(void *)(& (cq->ctrl)->cq_head));
  
#line 70 
  iowrite32(cq_tail,(void *)(& (cq->ctrl)->cq_tail));
  
#line 71 
  iowrite32(cq_tail_color,(void *)(& (cq->ctrl)->cq_tail_color));
  
#line 72 
  iowrite32(interrupt_enable,(void *)(& (cq->ctrl)->interrupt_enable));
  
#line 73 
  iowrite32(cq_entry_enable,(void *)(& (cq->ctrl)->cq_entry_enable));
  
#line 74 
  iowrite32(cq_message_enable,(void *)(& (cq->ctrl)->cq_message_enable));
  
#line 75 
  iowrite32(interrupt_offset,(void *)(& (cq->ctrl)->interrupt_offset));
  
#line 76 
  writeq((unsigned long)cq_message_addr,(void volatile *)(& (cq->ctrl)->cq_message_addr));
  
#line 78 
  cq->interrupt_offset = interrupt_offset;
  
#line 79 
  return;
}


#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_cq.c"
void vnic_cq_clean(struct vnic_cq *cq)
{
  
#line 83 
  cq->to_clean = 0U;
  
#line 84 
  cq->last_color = 0U;
  
#line 86 
  iowrite32(0U,(void *)(& (cq->ctrl)->cq_head));
  
#line 87 
  iowrite32(0U,(void *)(& (cq->ctrl)->cq_tail));
  
#line 88 
  iowrite32(1U,(void *)(& (cq->ctrl)->cq_tail_color));
  
#line 90 
  vnic_dev_clear_desc_ring(& cq->ring);
  
#line 91 
  return;
}


#line 581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kzalloc_0(size_t size, gfp_t flags);


#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_wq.h"
__inline static unsigned int vnic_wq_desc_used(struct vnic_wq *wq)
{
  unsigned int __retres;
  
#line 100 
  __retres = (wq->ring.desc_count - wq->ring.desc_avail) + 4294967295U;
  
#line 100 
  return __retres;
}


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_wq.c"
static int vnic_wq_alloc_bufs(struct vnic_wq *wq)
{
  int __retres;
  struct vnic_wq_buf *buf;
  unsigned int i;
  unsigned int j;
  int tmp;
  int tmp_0;
  void *tmp_2;
  int tmp_1;
  int tmp_3;
  int tmp_5;
  struct vnic_wq_buf *tmp_6;
  
#line 33 
  unsigned int count = wq->ring.desc_count;
  
#line 34 
  if (count <= 63U) 
#line 34 
                    tmp = 32; else 
#line 34 
                                   tmp = 64;
  
#line 34 
  if (count <= 63U) 
#line 34 
                    tmp_0 = 32; else 
#line 34 
                                     tmp_0 = 64;
  
#line 34 
  unsigned int blks = (((unsigned int)tmp + count) + 4294967295U) / (unsigned int)tmp_0;
  
#line 36 
  i = 0U;
  
#line 36 
  goto ldv_27136;
  ldv_27135: 
#line 37 
  ;
  
#line 37 
  if (count <= 63U) 
#line 37 
                    tmp_1 = 32; else 
#line 37 
                                     tmp_1 = 64;
  
#line 37 
  tmp_2 = kzalloc_0((unsigned long)((unsigned int)tmp_1) * 72UL,32U);
  
#line 37 
  wq->bufs[i] = (struct vnic_wq_buf *)tmp_2;
  
#line 38 
  if (wq->bufs[i] == (struct vnic_wq_buf *)0) {
    
#line 39 
    __retres = -12;
    
#line 39 
    goto return_label;
  }
  else ;
  
#line 36 
  i += 1U;
  ldv_27136: 
#line 37 
  ;
  
#line 36 
  if (i < blks) 
#line 38 
                goto ldv_27135; else 
#line 41 
                                     goto ldv_27137;
  ldv_27137: 
#line 42 
  ;
  
#line 42 
  i = 0U;
  
#line 42 
  goto ldv_27142;
  ldv_27141: 
#line 43 
  ;
  
#line 43 
  buf = wq->bufs[i];
  
#line 44 
  j = 0U;
  
#line 44 
  goto ldv_27140;
  ldv_27139: 
#line 45 
  ;
  
#line 45 
  if (count <= 63U) 
#line 45 
                    tmp_3 = 32; else 
#line 45 
                                     tmp_3 = 64;
  
#line 45 
  buf->index = (unsigned int)tmp_3 * i + j;
  
#line 46 
  buf->desc = wq->ring.descs + wq->ring.desc_size * buf->index;
  
#line 48 
  if (buf->index + 1U == count) {
    
#line 49 
    buf->next = wq->bufs[0];
    
#line 50 
    (buf->next)->prev = buf;
    
#line 51 
    goto ldv_27138;
  }
  else {
    int tmp_4;
    
#line 52 
    if (count <= 63U) 
#line 52 
                      tmp_4 = 32; else 
#line 52 
                                       tmp_4 = 64;
    
#line 52 
    ;
    
#line 52 
    if (j + 1U == (unsigned int)tmp_4) {
      
#line 53 
      buf->next = wq->bufs[i + 1U];
      
#line 54 
      (buf->next)->prev = buf;
    }
    else {
      
#line 56 
      buf->next = buf + 1U;
      
#line 57 
      (buf->next)->prev = buf;
      
#line 58 
      buf += 1;
    }
  }
  
#line 44 
  j += 1U;
  ldv_27140: 
#line 45 
  ;
  
#line 44 
  if (count <= 63U) 
#line 44 
                    tmp_5 = 32; else 
#line 44 
                                     tmp_5 = 64;
  
#line 44 
  ;
  
#line 44 
  if ((unsigned int)tmp_5 > j) 
#line 46 
                               goto ldv_27139; else 
#line 49 
                                                    goto ldv_27138;
  ldv_27138: 
#line 50 
  ;
  
#line 42 
  i += 1U;
  ldv_27142: 
#line 43 
  ;
  
#line 42 
  if (i < blks) 
#line 44 
                goto ldv_27141; else 
#line 47 
                                     goto ldv_27143;
  ldv_27143: 
#line 48 
  ;
  
#line 63 
  tmp_6 = wq->bufs[0];
  
#line 63 
  wq->to_clean = tmp_6;
  
#line 63 
  wq->to_use = tmp_6;
  
#line 65 
  __retres = 0;
  return_label: 
#line 65 
                return __retres;
}


#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_wq.c"
void vnic_wq_free(struct vnic_wq *wq)
{
  struct vnic_dev *vdev;
  unsigned int i;
  
#line 73 
  vdev = wq->vdev;
  
#line 75 
  vnic_dev_free_desc_ring(vdev,& wq->ring);
  
#line 77 
  i = 0U;
  
#line 77 
  goto ldv_27150;
  ldv_27149: 
#line 78 
  ;
  
#line 78 
  if (wq->bufs[i] != (struct vnic_wq_buf *)0) {
    
#line 79 
    kfree((void const *)wq->bufs[i]);
    
#line 80 
    wq->bufs[i] = (struct vnic_wq_buf *)0;
  }
  else ;
  
#line 77 
  i += 1U;
  ldv_27150: 
#line 78 
  ;
  
#line 77 
  if (i <= 63U) 
#line 79 
                goto ldv_27149; else 
#line 82 
                                     goto ldv_27151;
  ldv_27151: 
#line 83 
  ;
  
#line 84 
  wq->ctrl = (struct vnic_wq_ctrl *)0;
  
#line 85 
  return;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_wq.c"
int vnic_wq_alloc(struct vnic_dev *vdev, struct vnic_wq *wq, unsigned int index, unsigned int desc_count, unsigned int desc_size)
{
  int __retres;
  int err;
  
#line 92 
  wq->index = index;
  
#line 93 
  wq->vdev = vdev;
  
#line 95 
  wq->ctrl = (struct vnic_wq_ctrl *)vnic_dev_get_res(vdev,(enum vnic_res_type)RES_TYPE_WQ,index);
  
#line 96 
  if (wq->ctrl == (struct vnic_wq_ctrl *)0) {
    
#line 97 
    printk("\001",index);
    
#line 98 
    __retres = -22;
    
#line 98 
    goto return_label;
  }
  else ;
  
#line 101 
  vnic_wq_disable(wq);
  
#line 103 
  err = vnic_dev_alloc_desc_ring(vdev,& wq->ring,desc_count,desc_size);
  
#line 104 
  if (err != 0) {
    
#line 105 
    __retres = err;
    
#line 105 
    goto return_label;
  }
  else ;
  
#line 107 
  err = vnic_wq_alloc_bufs(wq);
  
#line 108 
  if (err != 0) {
    
#line 109 
    vnic_wq_free(wq);
    
#line 110 
    __retres = err;
    
#line 110 
    goto return_label;
  }
  else ;
  
#line 113 
  __retres = 0;
  return_label: 
#line 113 
                return __retres;
}


#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_wq.c"
static void vnic_wq_init_start(struct vnic_wq *wq, unsigned int cq_index, unsigned int fetch_index, unsigned int posted_index, unsigned int error_interrupt_enable, unsigned int error_interrupt_offset)
{
  u64 paddr;
  int tmp_0;
  int tmp_1;
  struct vnic_wq_buf *tmp;
  
#line 122 
  unsigned int count = wq->ring.desc_count;
  
#line 124 
  paddr = wq->ring.base_addr;
  
#line 125 
  writeq((unsigned long)paddr,(void volatile *)(& (wq->ctrl)->ring_base));
  
#line 126 
  iowrite32(count,(void *)(& (wq->ctrl)->ring_size));
  
#line 127 
  iowrite32(fetch_index,(void *)(& (wq->ctrl)->fetch_index));
  
#line 128 
  iowrite32(posted_index,(void *)(& (wq->ctrl)->posted_index));
  
#line 129 
  iowrite32(cq_index,(void *)(& (wq->ctrl)->cq_index));
  
#line 130 
  iowrite32(error_interrupt_enable,(void *)(& (wq->ctrl)->error_interrupt_enable));
  
#line 131 
  iowrite32(error_interrupt_offset,(void *)(& (wq->ctrl)->error_interrupt_offset));
  
#line 132 
  iowrite32(0U,(void *)(& (wq->ctrl)->error_status));
  
#line 135 
  if (count <= 63U) 
#line 135 
                    tmp_0 = 32; else 
#line 135 
                                     tmp_0 = 64;
  
#line 136 
  if (count <= 63U) 
#line 136 
                    tmp_1 = 32; else 
#line 136 
                                     tmp_1 = 64;
  
#line 134 
  tmp = wq->bufs[fetch_index / (unsigned int)tmp_0] + fetch_index % (unsigned int)tmp_1;
  
#line 134 
  wq->to_clean = tmp;
  
#line 134 
  wq->to_use = tmp;
  
#line 137 
  return;
}


#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_wq.c"
void vnic_wq_init(struct vnic_wq *wq, unsigned int cq_index, unsigned int error_interrupt_enable, unsigned int error_interrupt_offset)
{
  
#line 143 
  vnic_wq_init_start(wq,cq_index,0U,0U,error_interrupt_enable,error_interrupt_offset);
  
#line 144 
  return;
}


#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_wq.c"
unsigned int vnic_wq_error_status(struct vnic_wq *wq)
{
  unsigned int tmp;
  
#line 150 
  tmp = ioread32((void *)(& (wq->ctrl)->error_status));
  
#line 150 
  return tmp;
}


#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_wq.c"
void vnic_wq_enable(struct vnic_wq *wq)
{
  
#line 155 
  iowrite32(1U,(void *)(& (wq->ctrl)->enable));
  
#line 156 
  return;
}


#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_wq.c"
int vnic_wq_disable(struct vnic_wq *wq)
{
  int __retres;
  unsigned int wait;
  unsigned int tmp;
  
#line 162 
  iowrite32(0U,(void *)(& (wq->ctrl)->enable));
  
#line 165 
  wait = 0U;
  
#line 165 
  goto ldv_27187;
  ldv_27186: 
#line 166 
  ;
  
#line 166 
  tmp = ioread32((void *)(& (wq->ctrl)->running));
  
#line 166 
  if (tmp == 0U) {
    
#line 167 
    __retres = 0;
    
#line 167 
    goto return_label;
  }
  else ;
  
#line 168 
  __const_udelay(42950UL);
  
#line 165 
  wait += 1U;
  ldv_27187: 
#line 166 
  ;
  
#line 165 
  if (wait <= 999U) 
#line 167 
                    goto ldv_27186; else 
#line 170 
                                         goto ldv_27188;
  ldv_27188: 
#line 171 
  ;
  
#line 171 
  printk("\001",wq->index);
  
#line 173 
  __retres = -110;
  return_label: 
#line 173 
                return __retres;
}


#line 176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_wq.c"
void vnic_wq_clean(struct vnic_wq *wq, void (*buf_clean)(struct vnic_wq *, struct vnic_wq_buf *))
{
  struct vnic_wq_buf *buf;
  struct vnic_wq_buf *tmp;
  unsigned int tmp_0;
  struct vnic_wq_buf *tmp_1;
  
#line 181 
  buf = wq->to_clean;
  
#line 183 
  goto ldv_27197;
  ldv_27196: 
#line 184 
  ;
  
#line 185 
  (*buf_clean)(wq,buf);
  
#line 187 
  tmp = buf->next;
  
#line 187 
  wq->to_clean = tmp;
  
#line 187 
  buf = tmp;
  
#line 188 
  wq->ring.desc_avail += 1U;
  ldv_27197: 
#line 189 
  ;
  
#line 183 
  tmp_0 = vnic_wq_desc_used(wq);
  
#line 183 
  if (tmp_0 != 0U) 
#line 185 
                   goto ldv_27196; else 
#line 188 
                                        goto ldv_27198;
  ldv_27198: 
#line 189 
  ;
  
#line 191 
  tmp_1 = wq->bufs[0];
  
#line 191 
  wq->to_clean = tmp_1;
  
#line 191 
  wq->to_use = tmp_1;
  
#line 193 
  iowrite32(0U,(void *)(& (wq->ctrl)->fetch_index));
  
#line 194 
  iowrite32(0U,(void *)(& (wq->ctrl)->posted_index));
  
#line 195 
  iowrite32(0U,(void *)(& (wq->ctrl)->error_status));
  
#line 197 
  vnic_dev_clear_desc_ring(& wq->ring);
  
#line 198 
  return;
}


#line 487  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_vnic_wq.c.aux"
static void *kzalloc_0(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 490 
  tmp = ldv_kzalloc(size,flags);
  
#line 490 
  return tmp;
}


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.h"
u32 vnic_dev_intr_coal_timer_usec_to_hw(struct vnic_dev *vdev, u32 usec);


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_intr.c"
void vnic_intr_free(struct vnic_intr *intr)
{
  
#line 31 
  intr->ctrl = (struct vnic_intr_ctrl *)0;
  
#line 32 
  return;
}


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_intr.c"
int vnic_intr_alloc(struct vnic_dev *vdev, struct vnic_intr *intr, unsigned int index)
{
  int __retres;
  
#line 37 
  intr->index = index;
  
#line 38 
  intr->vdev = vdev;
  
#line 40 
  intr->ctrl = (struct vnic_intr_ctrl *)vnic_dev_get_res(vdev,(enum vnic_res_type)RES_TYPE_INTR_CTRL,index);
  
#line 41 
  if (intr->ctrl == (struct vnic_intr_ctrl *)0) {
    
#line 42 
    printk("\001",index);
    
#line 43 
    __retres = -22;
    
#line 43 
    goto return_label;
  }
  else ;
  
#line 46 
  __retres = 0;
  return_label: 
#line 46 
                return __retres;
}


#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_intr.c"
void vnic_intr_init(struct vnic_intr *intr, u32 coalescing_timer, unsigned int coalescing_type, unsigned int mask_on_assertion)
{
  
#line 52 
  vnic_intr_coalescing_timer_set(intr,coalescing_timer);
  
#line 53 
  iowrite32(coalescing_type,(void *)(& (intr->ctrl)->coalescing_type));
  
#line 54 
  iowrite32(mask_on_assertion,(void *)(& (intr->ctrl)->mask_on_assertion));
  
#line 55 
  iowrite32(0U,(void *)(& (intr->ctrl)->int_credits));
  
#line 56 
  return;
}


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_intr.c"
void vnic_intr_coalescing_timer_set(struct vnic_intr *intr, u32 coalescing_timer)
{
  u32 tmp;
  
#line 61 
  ;
  
#line 61 
  tmp = vnic_dev_intr_coal_timer_usec_to_hw(intr->vdev,coalescing_timer);
  
#line 61 
  iowrite32(tmp,(void *)(& (intr->ctrl)->coalescing_timer));
  
#line 63 
  return;
}


#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_intr.c"
void vnic_intr_clean(struct vnic_intr *intr)
{
  
#line 67 
  iowrite32(0U,(void *)(& (intr->ctrl)->int_credits));
  
#line 68 
  return;
}


#line 355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh_1(spinlock_t *lock)
{
  
#line 357 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 358 
  return;
}


#line 383 
static void ldv_spin_lock_bh_72(spinlock_t *lock);


#line 387 
static void ldv_spin_lock_bh_74(spinlock_t *lock);


#line 391 
static void ldv_spin_lock_bh_76(spinlock_t *lock);


#line 395 
static void ldv_spin_lock_bh_78(spinlock_t *lock);


#line 399 
static void ldv_spin_lock_bh_80(spinlock_t *lock);


#line 403 
static void ldv_spin_lock_bh_82(spinlock_t *lock);


#line 407 
static void ldv_spin_lock_bh_84_0(spinlock_t *lock);


#line 411 
static void ldv_spin_lock_bh_86_0(spinlock_t *lock);


#line 415 
static void ldv_spin_lock_bh_88(spinlock_t *lock);


#line 419 
static void ldv_spin_lock_bh_90(spinlock_t *lock);


#line 423 
static void ldv_spin_lock_bh_92(spinlock_t *lock);


#line 427 
static void ldv_spin_lock_bh_94(spinlock_t *lock);


#line 431 
static void ldv_spin_lock_bh_96(spinlock_t *lock);


#line 435 
static void ldv_spin_lock_bh_98(spinlock_t *lock);


#line 439 
static void ldv_spin_lock_bh_100_0(spinlock_t *lock);


#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh_1(spinlock_t *lock)
{
  
#line 406 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 407 
  return;
}


#line 432 
static void ldv_spin_unlock_bh_73(spinlock_t *lock);


#line 436 
static void ldv_spin_unlock_bh_75(spinlock_t *lock);


#line 440 
static void ldv_spin_unlock_bh_77(spinlock_t *lock);


#line 444 
static void ldv_spin_unlock_bh_79(spinlock_t *lock);


#line 448 
static void ldv_spin_unlock_bh_81(spinlock_t *lock);


#line 452 
static void ldv_spin_unlock_bh_83(spinlock_t *lock);


#line 456 
static void ldv_spin_unlock_bh_85_0(spinlock_t *lock);


#line 460 
static void ldv_spin_unlock_bh_87_0(spinlock_t *lock);


#line 464 
static void ldv_spin_unlock_bh_89(spinlock_t *lock);


#line 468 
static void ldv_spin_unlock_bh_91(spinlock_t *lock);


#line 472 
static void ldv_spin_unlock_bh_93(spinlock_t *lock);


#line 476 
static void ldv_spin_unlock_bh_95(spinlock_t *lock);


#line 480 
static void ldv_spin_unlock_bh_97(spinlock_t *lock);


#line 484 
static void ldv_spin_unlock_bh_99(spinlock_t *lock);


#line 488 
static void ldv_spin_unlock_bh_101_0(spinlock_t *lock);


#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.h"
int vnic_dev_fw_info(struct vnic_dev *vdev, struct vnic_devcmd_fw_info **fw_info);


#line 94 
int vnic_dev_stats_dump(struct vnic_dev *vdev, struct vnic_stats **stats);


#line 95 
int vnic_dev_hang_notify(struct vnic_dev *vdev);


#line 96 
int vnic_dev_packet_filter(struct vnic_dev *vdev, int directed, int multicast, int broadcast, int promisc, int allmulti);


#line 98 
int vnic_dev_add_addr(struct vnic_dev *vdev, u8 const *addr);


#line 99 
int vnic_dev_del_addr(struct vnic_dev *vdev, u8 const *addr);


#line 102 
int vnic_dev_notify_unset(struct vnic_dev *vdev);


#line 108 
int vnic_dev_enable_wait(struct vnic_dev *vdev);


#line 109 
int vnic_dev_disable(struct vnic_dev *vdev);


#line 115 
int vnic_dev_intr_coal_timer_info(struct vnic_dev *vdev);


#line 125 
int vnic_dev_set_ig_vlan_rewrite_mode(struct vnic_dev *vdev, u8 ig_vlan_rewrite_mode);


#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_dev.h"
int enic_dev_fw_info(struct enic *enic, struct vnic_devcmd_fw_info **fw_info);


#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_dev.c"
int enic_dev_fw_info(struct enic *enic, struct vnic_devcmd_fw_info **fw_info)
{
  int err;
  
#line 32 
  ldv_spin_lock_bh_72(& enic->devcmd_lock);
  
#line 33 
  err = vnic_dev_fw_info(enic->vdev,fw_info);
  
#line 34 
  ldv_spin_unlock_bh_73(& enic->devcmd_lock);
  
#line 36 
  return err;
}


#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_dev.c"
int enic_dev_stats_dump(struct enic *enic, struct vnic_stats **vstats)
{
  int err;
  
#line 43 
  ldv_spin_lock_bh_74(& enic->devcmd_lock);
  
#line 44 
  err = vnic_dev_stats_dump(enic->vdev,vstats);
  
#line 45 
  ldv_spin_unlock_bh_75(& enic->devcmd_lock);
  
#line 47 
  return err;
}


#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_dev.c"
int enic_dev_add_station_addr(struct enic *enic)
{
  int __retres;
  int err;
  int tmp_0;
  bool tmp;
  
#line 54 
  tmp = is_valid_ether_addr((u8 const *)(enic->netdev)->dev_addr);
  
#line 54 
  if (tmp) 
#line 54 
           tmp_0 = 0; else 
#line 54 
                           tmp_0 = 1;
  
#line 54 
  if (tmp_0) {
    
#line 55 
    __retres = -99;
    
#line 55 
    goto return_label;
  }
  else ;
  
#line 57 
  ldv_spin_lock_bh_76(& enic->devcmd_lock);
  
#line 58 
  err = vnic_dev_add_addr(enic->vdev,(u8 const *)(enic->netdev)->dev_addr);
  
#line 59 
  ldv_spin_unlock_bh_77(& enic->devcmd_lock);
  
#line 61 
  __retres = err;
  return_label: 
#line 61 
                return __retres;
}


#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_dev.c"
int enic_dev_del_station_addr(struct enic *enic)
{
  int __retres;
  int err;
  int tmp_0;
  bool tmp;
  
#line 68 
  tmp = is_valid_ether_addr((u8 const *)(enic->netdev)->dev_addr);
  
#line 68 
  if (tmp) 
#line 68 
           tmp_0 = 0; else 
#line 68 
                           tmp_0 = 1;
  
#line 68 
  if (tmp_0) {
    
#line 69 
    __retres = -99;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  ldv_spin_lock_bh_78(& enic->devcmd_lock);
  
#line 72 
  err = vnic_dev_del_addr(enic->vdev,(u8 const *)(enic->netdev)->dev_addr);
  
#line 73 
  ldv_spin_unlock_bh_79(& enic->devcmd_lock);
  
#line 75 
  __retres = err;
  return_label: 
#line 75 
                return __retres;
}


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_dev.c"
int enic_dev_packet_filter(struct enic *enic, int directed, int multicast, int broadcast, int promisc, int allmulti)
{
  int err;
  
#line 83 
  ldv_spin_lock_bh_80(& enic->devcmd_lock);
  
#line 84 
  err = vnic_dev_packet_filter(enic->vdev,directed,multicast,broadcast,promisc,allmulti);
  
#line 86 
  ldv_spin_unlock_bh_81(& enic->devcmd_lock);
  
#line 88 
  return err;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_dev.c"
int enic_dev_add_addr(struct enic *enic, u8 const *addr)
{
  int err;
  
#line 95 
  ldv_spin_lock_bh_82(& enic->devcmd_lock);
  
#line 96 
  err = vnic_dev_add_addr(enic->vdev,addr);
  
#line 97 
  ldv_spin_unlock_bh_83(& enic->devcmd_lock);
  
#line 99 
  return err;
}


#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_dev.c"
int enic_dev_del_addr(struct enic *enic, u8 const *addr)
{
  int err;
  
#line 106 
  ldv_spin_lock_bh_84_0(& enic->devcmd_lock);
  
#line 107 
  err = vnic_dev_del_addr(enic->vdev,addr);
  
#line 108 
  ldv_spin_unlock_bh_85_0(& enic->devcmd_lock);
  
#line 110 
  return err;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_dev.c"
int enic_dev_notify_unset(struct enic *enic)
{
  int err;
  
#line 117 
  ldv_spin_lock_bh_86_0(& enic->devcmd_lock);
  
#line 118 
  err = vnic_dev_notify_unset(enic->vdev);
  
#line 119 
  ldv_spin_unlock_bh_87_0(& enic->devcmd_lock);
  
#line 121 
  return err;
}


#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_dev.c"
int enic_dev_hang_notify(struct enic *enic)
{
  int err;
  
#line 128 
  ldv_spin_lock_bh_88(& enic->devcmd_lock);
  
#line 129 
  err = vnic_dev_hang_notify(enic->vdev);
  
#line 130 
  ldv_spin_unlock_bh_89(& enic->devcmd_lock);
  
#line 132 
  return err;
}


#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_dev.c"
int enic_dev_set_ig_vlan_rewrite_mode(struct enic *enic)
{
  int err;
  
#line 139 
  ldv_spin_lock_bh_90(& enic->devcmd_lock);
  
#line 140 
  err = vnic_dev_set_ig_vlan_rewrite_mode(enic->vdev,(unsigned char)2);
  
#line 142 
  ldv_spin_unlock_bh_91(& enic->devcmd_lock);
  
#line 144 
  return err;
}


#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_dev.c"
int enic_dev_enable(struct enic *enic)
{
  int err;
  
#line 151 
  ldv_spin_lock_bh_92(& enic->devcmd_lock);
  
#line 152 
  err = vnic_dev_enable_wait(enic->vdev);
  
#line 153 
  ldv_spin_unlock_bh_93(& enic->devcmd_lock);
  
#line 155 
  return err;
}


#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_dev.c"
int enic_dev_disable(struct enic *enic)
{
  int err;
  
#line 162 
  ldv_spin_lock_bh_94(& enic->devcmd_lock);
  
#line 163 
  err = vnic_dev_disable(enic->vdev);
  
#line 164 
  ldv_spin_unlock_bh_95(& enic->devcmd_lock);
  
#line 166 
  return err;
}


#line 169  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_dev.c"
int enic_dev_intr_coal_timer_info(struct enic *enic)
{
  int err;
  
#line 173 
  ldv_spin_lock_bh_96(& enic->devcmd_lock);
  
#line 174 
  err = vnic_dev_intr_coal_timer_info(enic->vdev);
  
#line 175 
  ldv_spin_unlock_bh_97(& enic->devcmd_lock);
  
#line 177 
  return err;
}


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_dev.c"
int enic_vlan_rx_add_vid(struct net_device *netdev, __be16 proto, u16 vid)
{
  int err;
  
#line 183 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 186 
  ldv_spin_lock_bh_98(& enic->devcmd_lock);
  
#line 187 
  err = enic_add_vlan(enic,(unsigned short)((int)vid));
  
#line 188 
  ldv_spin_unlock_bh_99(& enic->devcmd_lock);
  
#line 190 
  return err;
}


#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_dev.c"
int enic_vlan_rx_kill_vid(struct net_device *netdev, __be16 proto, u16 vid)
{
  int err;
  
#line 196 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 199 
  ldv_spin_lock_bh_100_0(& enic->devcmd_lock);
  
#line 200 
  err = enic_del_vlan(enic,(unsigned short)((int)vid));
  
#line 201 
  ldv_spin_unlock_bh_101_0(& enic->devcmd_lock);
  
#line 203 
  return err;
}


#line 206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_dev.c"
int enic_dev_status_to_errno(int devcmd_status)
{
  int __retres;
  
#line 208 
  switch (devcmd_status) {
    int tmp;
    case 0: 
#line 209 
    ;
    
#line 210 
    __retres = 0;
    
#line 210 
    goto return_label;
    case 1: 
#line 211 
    ;
    
#line 212 
    __retres = -22;
    
#line 212 
    goto return_label;
    case 2: 
#line 213 
    ;
    
#line 214 
    __retres = -14;
    
#line 214 
    goto return_label;
    case 3: 
#line 215 
    ;
    
#line 216 
    __retres = -1;
    
#line 216 
    goto return_label;
    case 4: 
#line 217 
    ;
    
#line 218 
    __retres = -16;
    
#line 218 
    goto return_label;
    case 5: 
#line 219 
    ;
    case 11: 
#line 220 
    ;
    
#line 221 
    __retres = -95;
    
#line 221 
    goto return_label;
    case 6: 
#line 222 
    ;
    
#line 223 
    __retres = -22;
    
#line 223 
    goto return_label;
    case 7: 
#line 224 
    ;
    
#line 225 
    __retres = -12;
    
#line 225 
    goto return_label;
    case 8: 
#line 226 
    ;
    
#line 227 
    __retres = -110;
    
#line 227 
    goto return_label;
    case 9: 
#line 228 
    ;
    
#line 229 
    __retres = -100;
    
#line 229 
    goto return_label;
    case 12: 
#line 230 
    ;
    
#line 231 
    __retres = -115;
    
#line 231 
    goto return_label;
    case 10: 
#line 232 
    ;
    default: 
#line 233 
    ;
    
#line 234 
    if (-1 < devcmd_status) 
#line 234 
                            tmp = -1; else 
#line 234 
                                           tmp = devcmd_status;
    
#line 234 
    __retres = tmp;
    
#line 234 
    goto return_label;
  }
  return_label: 
#line 208 
                return __retres;
}


#line 739  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_lock_bh_72(spinlock_t *lock)
{
  
#line 743 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 745 
  spin_lock_bh_1(lock);
  
#line 746 
  return;
}


#line 749  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_unlock_bh_73(spinlock_t *lock)
{
  
#line 753 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 755 
  spin_unlock_bh_1(lock);
  
#line 756 
  return;
}


#line 759  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_lock_bh_74(spinlock_t *lock)
{
  
#line 763 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 765 
  spin_lock_bh_1(lock);
  
#line 766 
  return;
}


#line 769  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_unlock_bh_75(spinlock_t *lock)
{
  
#line 773 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 775 
  spin_unlock_bh_1(lock);
  
#line 776 
  return;
}


#line 779  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_lock_bh_76(spinlock_t *lock)
{
  
#line 783 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 785 
  spin_lock_bh_1(lock);
  
#line 786 
  return;
}


#line 789  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_unlock_bh_77(spinlock_t *lock)
{
  
#line 793 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 795 
  spin_unlock_bh_1(lock);
  
#line 796 
  return;
}


#line 799  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_lock_bh_78(spinlock_t *lock)
{
  
#line 803 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 805 
  spin_lock_bh_1(lock);
  
#line 806 
  return;
}


#line 809  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_unlock_bh_79(spinlock_t *lock)
{
  
#line 813 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 815 
  spin_unlock_bh_1(lock);
  
#line 816 
  return;
}


#line 819  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_lock_bh_80(spinlock_t *lock)
{
  
#line 823 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 825 
  spin_lock_bh_1(lock);
  
#line 826 
  return;
}


#line 829  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_unlock_bh_81(spinlock_t *lock)
{
  
#line 833 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 835 
  spin_unlock_bh_1(lock);
  
#line 836 
  return;
}


#line 839  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_lock_bh_82(spinlock_t *lock)
{
  
#line 843 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 845 
  spin_lock_bh_1(lock);
  
#line 846 
  return;
}


#line 849  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_unlock_bh_83(spinlock_t *lock)
{
  
#line 853 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 855 
  spin_unlock_bh_1(lock);
  
#line 856 
  return;
}


#line 859  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_lock_bh_84_0(spinlock_t *lock)
{
  
#line 863 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 865 
  spin_lock_bh_1(lock);
  
#line 866 
  return;
}


#line 869  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_unlock_bh_85_0(spinlock_t *lock)
{
  
#line 873 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 875 
  spin_unlock_bh_1(lock);
  
#line 876 
  return;
}


#line 879  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_lock_bh_86_0(spinlock_t *lock)
{
  
#line 883 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 885 
  spin_lock_bh_1(lock);
  
#line 886 
  return;
}


#line 889  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_unlock_bh_87_0(spinlock_t *lock)
{
  
#line 893 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 895 
  spin_unlock_bh_1(lock);
  
#line 896 
  return;
}


#line 899  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_lock_bh_88(spinlock_t *lock)
{
  
#line 903 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 905 
  spin_lock_bh_1(lock);
  
#line 906 
  return;
}


#line 909  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_unlock_bh_89(spinlock_t *lock)
{
  
#line 913 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 915 
  spin_unlock_bh_1(lock);
  
#line 916 
  return;
}


#line 919  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_lock_bh_90(spinlock_t *lock)
{
  
#line 923 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 925 
  spin_lock_bh_1(lock);
  
#line 926 
  return;
}


#line 929  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_unlock_bh_91(spinlock_t *lock)
{
  
#line 933 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 935 
  spin_unlock_bh_1(lock);
  
#line 936 
  return;
}


#line 939  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_lock_bh_92(spinlock_t *lock)
{
  
#line 943 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 945 
  spin_lock_bh_1(lock);
  
#line 946 
  return;
}


#line 949  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_unlock_bh_93(spinlock_t *lock)
{
  
#line 953 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 955 
  spin_unlock_bh_1(lock);
  
#line 956 
  return;
}


#line 959  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_lock_bh_94(spinlock_t *lock)
{
  
#line 963 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 965 
  spin_lock_bh_1(lock);
  
#line 966 
  return;
}


#line 969  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_unlock_bh_95(spinlock_t *lock)
{
  
#line 973 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 975 
  spin_unlock_bh_1(lock);
  
#line 976 
  return;
}


#line 979  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_lock_bh_96(spinlock_t *lock)
{
  
#line 983 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 985 
  spin_lock_bh_1(lock);
  
#line 986 
  return;
}


#line 989  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_unlock_bh_97(spinlock_t *lock)
{
  
#line 993 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 995 
  spin_unlock_bh_1(lock);
  
#line 996 
  return;
}


#line 999  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_lock_bh_98(spinlock_t *lock)
{
  
#line 1003 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 1005 
  spin_lock_bh_1(lock);
  
#line 1006 
  return;
}


#line 1009  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_unlock_bh_99(spinlock_t *lock)
{
  
#line 1013 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 1015 
  spin_unlock_bh_1(lock);
  
#line 1016 
  return;
}


#line 1019  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_lock_bh_100_0(spinlock_t *lock)
{
  
#line 1023 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 1025 
  spin_lock_bh_1(lock);
  
#line 1026 
  return;
}


#line 1029  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_dev.c.aux"
static void ldv_spin_unlock_bh_101_0(spinlock_t *lock)
{
  
#line 1033 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 1035 
  spin_unlock_bh_1(lock);
  
#line 1036 
  return;
}


#line 581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kzalloc_1(size_t size, gfp_t flags);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.c"
static int vnic_rq_alloc_bufs(struct vnic_rq *rq)
{
  int __retres;
  struct vnic_rq_buf *buf;
  unsigned int i;
  unsigned int j;
  int tmp;
  int tmp_0;
  void *tmp_2;
  int tmp_1;
  int tmp_3;
  int tmp_5;
  struct vnic_rq_buf *tmp_6;
  
#line 33 
  unsigned int count = rq->ring.desc_count;
  
#line 34 
  if (count <= 63U) 
#line 34 
                    tmp = 32; else 
#line 34 
                                   tmp = 64;
  
#line 34 
  if (count <= 63U) 
#line 34 
                    tmp_0 = 32; else 
#line 34 
                                     tmp_0 = 64;
  
#line 34 
  unsigned int blks = (((unsigned int)tmp + count) + 4294967295U) / (unsigned int)tmp_0;
  
#line 36 
  i = 0U;
  
#line 36 
  goto ldv_45499;
  ldv_45498: 
#line 37 
  ;
  
#line 37 
  if (count <= 63U) 
#line 37 
                    tmp_1 = 32; else 
#line 37 
                                     tmp_1 = 64;
  
#line 37 
  tmp_2 = kzalloc_1((unsigned long)((unsigned int)tmp_1) * 56UL,32U);
  
#line 37 
  rq->bufs[i] = (struct vnic_rq_buf *)tmp_2;
  
#line 38 
  if (rq->bufs[i] == (struct vnic_rq_buf *)0) {
    
#line 39 
    __retres = -12;
    
#line 39 
    goto return_label;
  }
  else ;
  
#line 36 
  i += 1U;
  ldv_45499: 
#line 37 
  ;
  
#line 36 
  if (i < blks) 
#line 38 
                goto ldv_45498; else 
#line 41 
                                     goto ldv_45500;
  ldv_45500: 
#line 42 
  ;
  
#line 42 
  i = 0U;
  
#line 42 
  goto ldv_45505;
  ldv_45504: 
#line 43 
  ;
  
#line 43 
  buf = rq->bufs[i];
  
#line 44 
  j = 0U;
  
#line 44 
  goto ldv_45503;
  ldv_45502: 
#line 45 
  ;
  
#line 45 
  if (count <= 63U) 
#line 45 
                    tmp_3 = 32; else 
#line 45 
                                     tmp_3 = 64;
  
#line 45 
  buf->index = (unsigned int)tmp_3 * i + j;
  
#line 46 
  buf->desc = rq->ring.descs + rq->ring.desc_size * buf->index;
  
#line 48 
  if (buf->index + 1U == count) {
    
#line 49 
    buf->next = rq->bufs[0];
    
#line 50 
    goto ldv_45501;
  }
  else {
    int tmp_4;
    
#line 51 
    if (count <= 63U) 
#line 51 
                      tmp_4 = 32; else 
#line 51 
                                       tmp_4 = 64;
    
#line 51 
    ;
    
#line 51 
    if (j + 1U == (unsigned int)tmp_4) 
#line 52 
                                       buf->next = rq->bufs[i + 1U];
    else {
      
#line 54 
      buf->next = buf + 1U;
      
#line 55 
      buf += 1;
    }
  }
  
#line 44 
  j += 1U;
  ldv_45503: 
#line 45 
  ;
  
#line 44 
  if (count <= 63U) 
#line 44 
                    tmp_5 = 32; else 
#line 44 
                                     tmp_5 = 64;
  
#line 44 
  ;
  
#line 44 
  if ((unsigned int)tmp_5 > j) 
#line 46 
                               goto ldv_45502; else 
#line 49 
                                                    goto ldv_45501;
  ldv_45501: 
#line 50 
  ;
  
#line 42 
  i += 1U;
  ldv_45505: 
#line 43 
  ;
  
#line 42 
  if (i < blks) 
#line 44 
                goto ldv_45504; else 
#line 47 
                                     goto ldv_45506;
  ldv_45506: 
#line 48 
  ;
  
#line 60 
  tmp_6 = rq->bufs[0];
  
#line 60 
  rq->to_clean = tmp_6;
  
#line 60 
  rq->to_use = tmp_6;
  
#line 62 
  __retres = 0;
  return_label: 
#line 62 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.c"
void vnic_rq_free(struct vnic_rq *rq)
{
  struct vnic_dev *vdev;
  unsigned int i;
  
#line 70 
  vdev = rq->vdev;
  
#line 72 
  vnic_dev_free_desc_ring(vdev,& rq->ring);
  
#line 74 
  i = 0U;
  
#line 74 
  goto ldv_45513;
  ldv_45512: 
#line 75 
  ;
  
#line 75 
  if (rq->bufs[i] != (struct vnic_rq_buf *)0) {
    
#line 76 
    kfree((void const *)rq->bufs[i]);
    
#line 77 
    rq->bufs[i] = (struct vnic_rq_buf *)0;
  }
  else ;
  
#line 74 
  i += 1U;
  ldv_45513: 
#line 75 
  ;
  
#line 74 
  if (i <= 63U) 
#line 76 
                goto ldv_45512; else 
#line 79 
                                     goto ldv_45514;
  ldv_45514: 
#line 80 
  ;
  
#line 81 
  rq->ctrl = (struct vnic_rq_ctrl *)0;
  
#line 82 
  return;
}


#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.c"
int vnic_rq_alloc(struct vnic_dev *vdev, struct vnic_rq *rq, unsigned int index, unsigned int desc_count, unsigned int desc_size)
{
  int __retres;
  int err;
  
#line 89 
  rq->index = index;
  
#line 90 
  rq->vdev = vdev;
  
#line 92 
  rq->ctrl = (struct vnic_rq_ctrl *)vnic_dev_get_res(vdev,(enum vnic_res_type)RES_TYPE_RQ,index);
  
#line 93 
  if (rq->ctrl == (struct vnic_rq_ctrl *)0) {
    
#line 94 
    printk("\001",index);
    
#line 95 
    __retres = -22;
    
#line 95 
    goto return_label;
  }
  else ;
  
#line 98 
  vnic_rq_disable(rq);
  
#line 100 
  err = vnic_dev_alloc_desc_ring(vdev,& rq->ring,desc_count,desc_size);
  
#line 101 
  if (err != 0) {
    
#line 102 
    __retres = err;
    
#line 102 
    goto return_label;
  }
  else ;
  
#line 104 
  err = vnic_rq_alloc_bufs(rq);
  
#line 105 
  if (err != 0) {
    
#line 106 
    vnic_rq_free(rq);
    
#line 107 
    __retres = err;
    
#line 107 
    goto return_label;
  }
  else ;
  
#line 110 
  __retres = 0;
  return_label: 
#line 110 
                return __retres;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.c"
static void vnic_rq_init_start(struct vnic_rq *rq, unsigned int cq_index, unsigned int fetch_index, unsigned int posted_index, unsigned int error_interrupt_enable, unsigned int error_interrupt_offset)
{
  u64 paddr;
  int tmp_0;
  int tmp_1;
  struct vnic_rq_buf *tmp;
  
#line 119 
  unsigned int count = rq->ring.desc_count;
  
#line 121 
  paddr = rq->ring.base_addr;
  
#line 122 
  writeq((unsigned long)paddr,(void volatile *)(& (rq->ctrl)->ring_base));
  
#line 123 
  iowrite32(count,(void *)(& (rq->ctrl)->ring_size));
  
#line 124 
  iowrite32(cq_index,(void *)(& (rq->ctrl)->cq_index));
  
#line 125 
  iowrite32(error_interrupt_enable,(void *)(& (rq->ctrl)->error_interrupt_enable));
  
#line 126 
  iowrite32(error_interrupt_offset,(void *)(& (rq->ctrl)->error_interrupt_offset));
  
#line 127 
  iowrite32(0U,(void *)(& (rq->ctrl)->dropped_packet_count));
  
#line 128 
  iowrite32(0U,(void *)(& (rq->ctrl)->error_status));
  
#line 129 
  iowrite32(fetch_index,(void *)(& (rq->ctrl)->fetch_index));
  
#line 130 
  iowrite32(posted_index,(void *)(& (rq->ctrl)->posted_index));
  
#line 133 
  if (count <= 63U) 
#line 133 
                    tmp_0 = 32; else 
#line 133 
                                     tmp_0 = 64;
  
#line 134 
  if (count <= 63U) 
#line 134 
                    tmp_1 = 32; else 
#line 134 
                                     tmp_1 = 64;
  
#line 132 
  tmp = rq->bufs[fetch_index / (unsigned int)tmp_0] + fetch_index % (unsigned int)tmp_1;
  
#line 132 
  rq->to_clean = tmp;
  
#line 132 
  rq->to_use = tmp;
  
#line 135 
  return;
}


#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.c"
void vnic_rq_init(struct vnic_rq *rq, unsigned int cq_index, unsigned int error_interrupt_enable, unsigned int error_interrupt_offset)
{
  
#line 141 
  u32 fetch_index = 0U;
  
#line 144 
  fetch_index = ioread32((void *)(& (rq->ctrl)->fetch_index));
  
#line 146 
  if (fetch_index == 4294967295U) 
#line 148 
                                  fetch_index = 0U; else ;
  
#line 151 
  vnic_rq_init_start(rq,cq_index,fetch_index,fetch_index,error_interrupt_enable,error_interrupt_offset);
  
#line 152 
  return;
}


#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.c"
unsigned int vnic_rq_error_status(struct vnic_rq *rq)
{
  unsigned int tmp;
  
#line 159 
  tmp = ioread32((void *)(& (rq->ctrl)->error_status));
  
#line 159 
  return tmp;
}


#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.c"
void vnic_rq_enable(struct vnic_rq *rq)
{
  
#line 164 
  iowrite32(1U,(void *)(& (rq->ctrl)->enable));
  
#line 165 
  return;
}


#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.c"
int vnic_rq_disable(struct vnic_rq *rq)
{
  int __retres;
  unsigned int wait;
  unsigned int tmp;
  
#line 171 
  iowrite32(0U,(void *)(& (rq->ctrl)->enable));
  
#line 174 
  wait = 0U;
  
#line 174 
  goto ldv_45551;
  ldv_45550: 
#line 175 
  ;
  
#line 175 
  tmp = ioread32((void *)(& (rq->ctrl)->running));
  
#line 175 
  if (tmp == 0U) {
    
#line 176 
    __retres = 0;
    
#line 176 
    goto return_label;
  }
  else ;
  
#line 177 
  __const_udelay(42950UL);
  
#line 174 
  wait += 1U;
  ldv_45551: 
#line 175 
  ;
  
#line 174 
  if (wait <= 999U) 
#line 176 
                    goto ldv_45550; else 
#line 179 
                                         goto ldv_45552;
  ldv_45552: 
#line 180 
  ;
  
#line 180 
  printk("\001",rq->index);
  
#line 182 
  __retres = -110;
  return_label: 
#line 182 
                return __retres;
}


#line 185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_rq.c"
void vnic_rq_clean(struct vnic_rq *rq, void (*buf_clean)(struct vnic_rq *, struct vnic_rq_buf *))
{
  struct vnic_rq_buf *buf;
  u32 fetch_index;
  int i;
  int tmp_0;
  int tmp_1;
  struct vnic_rq_buf *tmp;
  
#line 190 
  unsigned int count = rq->ring.desc_count;
  
#line 193 
  buf = rq->to_clean;
  
#line 195 
  i = 0;
  
#line 195 
  goto ldv_45564;
  ldv_45563: 
#line 196 
  ;
  
#line 196 
  (*buf_clean)(rq,buf);
  
#line 197 
  buf = buf->next;
  
#line 195 
  i += 1;
  ldv_45564: 
#line 196 
  ;
  
#line 195 
  if (rq->ring.desc_count > (unsigned int)i) 
#line 197 
                                             goto ldv_45563; else 
#line 200 
                                                                  goto ldv_45565;
  ldv_45565: 
#line 201 
  ;
  
#line 199 
  rq->ring.desc_avail = rq->ring.desc_count + 4294967295U;
  
#line 202 
  fetch_index = ioread32((void *)(& (rq->ctrl)->fetch_index));
  
#line 204 
  if (fetch_index == 4294967295U) 
#line 206 
                                  fetch_index = 0U; else ;
  
#line 209 
  if (count <= 63U) 
#line 209 
                    tmp_0 = 32; else 
#line 209 
                                     tmp_0 = 64;
  
#line 210 
  if (count <= 63U) 
#line 210 
                    tmp_1 = 32; else 
#line 210 
                                     tmp_1 = 64;
  
#line 208 
  tmp = rq->bufs[fetch_index / (unsigned int)tmp_0] + fetch_index % (unsigned int)tmp_1;
  
#line 208 
  rq->to_clean = tmp;
  
#line 208 
  rq->to_use = tmp;
  
#line 211 
  iowrite32(fetch_index,(void *)(& (rq->ctrl)->posted_index));
  
#line 213 
  vnic_dev_clear_desc_ring(& rq->ring);
  
#line 214 
  return;
}


#line 492  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_vnic_rq.c.aux"
static void *kzalloc_1(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 495 
  tmp = ldv_kzalloc(size,flags);
  
#line 495 
  return tmp;
}


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
size_t strlcpy(char *, char const *, size_t);


#line 355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh_2(spinlock_t *lock)
{
  
#line 357 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 358 
  return;
}


#line 383 
static void ldv_spin_lock_bh_74_0(spinlock_t *lock);


#line 387 
static void ldv_spin_lock_bh_76_0(spinlock_t *lock);


#line 391 
static void ldv_spin_lock_bh_78_0(spinlock_t *lock);


#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh_2(spinlock_t *lock)
{
  
#line 406 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 407 
  return;
}


#line 432 
static void ldv_spin_unlock_bh_75_0(spinlock_t *lock);


#line 436 
static void ldv_spin_unlock_bh_77_0(spinlock_t *lock);


#line 440 
static void ldv_spin_unlock_bh_79_0(spinlock_t *lock);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
__be32 flow_get_u32_src(struct flow_keys const *);


#line 168 
__be32 flow_get_u32_dst(struct flow_keys const *);


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static void ethtool_cmd_speed_set(struct ethtool_cmd *ep, __u32 speed)
{
  
#line 117 
  ep->speed = (unsigned short)speed;
  
#line 118 
  ep->speed_hi = (unsigned short)(speed >> 16);
  
#line 119 
  return;
}


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
u32 ethtool_op_get_link(struct net_device *);


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static char const *pci_name(struct pci_dev const *pdev)
{
  char const *tmp;
  
#line 1486 
  tmp = dev_name(& pdev->dev);
  
#line 1486 
  return tmp;
}


#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_clsf.h"
struct enic_rfs_fltr_node *htbl_fltr_search(struct enic *enic, u16 fltr_id);


#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_ethtool.c"
static struct enic_stat const enic_tx_stats[11U] = {{.name = {(char)'t', (char)'x', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'_', (char)'o', (char)'k', (char)'\000'}, .index = 0U}, {.name = {(char)'t', (char)'x', (char)'_', (char)'u', (char)'n', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'_', (char)'o', (char)'k', (char)'\000'}, .index = 1U}, {.name = {(char)'t', (char)'x', (char)'_', (char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'_', (char)'o', (char)'k', (char)'\000'}, .index = 2U}, {.name = {(char)'t', (char)'x', (char)'_', (char)'b', (char)'r', (char)'o', (char)'a', (char)'d', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'_', (char)'o', (char)'k', (char)'\000'}, .index = 3U}, {.name = {(char)'t', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'_', (char)'o', (char)'k', (char)'\000'}, .index = 4U}, {.name = {(char)'t', (char)'x', (char)'_', (char)'u', (char)'n', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'_', (char)'o', (char)'k', (char)'\000'}, .index = 5U}, {.name = {(char)'t', (char)'x', (char)'_', (char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'_', (char)'o', (char)'k', (char)'\000'}, .index = 6U}, {.name = {(char)'t', (char)'x', (char)'_', (char)'b', (char)'r', (char)'o', (char)'a', (char)'d', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'_', (char)'o', (char)'k', (char)'\000'}, .index = 7U}, {.name = {(char)'t', (char)'x', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'s', (char)'\000'}, .index = 8U}, {.name = {(char)'t', (char)'x', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .index = 9U}, {.name = {(char)'t', (char)'x', (char)'_', (char)'t', (char)'s', (char)'o', (char)'\000'}, .index = 10U}};

#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_ethtool.c"
static struct enic_stat const enic_rx_stats[21U] = {{.name = {(char)'r', (char)'x', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'_', (char)'o', (char)'k', (char)'\000'}, .index = 0U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'_', (char)'t', (char)'o', (char)'t', (char)'a', (char)'l', (char)'\000'}, .index = 1U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'u', (char)'n', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'_', (char)'o', (char)'k', (char)'\000'}, .index = 2U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'_', (char)'o', (char)'k', (char)'\000'}, .index = 3U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'b', (char)'r', (char)'o', (char)'a', (char)'d', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'_', (char)'o', (char)'k', (char)'\000'}, .index = 4U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'_', (char)'o', (char)'k', (char)'\000'}, .index = 5U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'u', (char)'n', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'_', (char)'o', (char)'k', (char)'\000'}, .index = 6U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'_', (char)'o', (char)'k', (char)'\000'}, .index = 7U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'b', (char)'r', (char)'o', (char)'a', (char)'d', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'_', (char)'o', (char)'k', (char)'\000'}, .index = 8U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'\000'}, .index = 9U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'n', (char)'o', (char)'_', (char)'b', (char)'u', (char)'f', (char)'s', (char)'\000'}, .index = 10U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .index = 11U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'r', (char)'s', (char)'s', (char)'\000'}, .index = 12U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'c', (char)'r', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .index = 13U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'_', (char)'6', (char)'4', (char)'\000'}, .index = 14U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'_', (char)'1', (char)'2', (char)'7', (char)'\000'}, .index = 15U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'_', (char)'2', (char)'5', (char)'5', (char)'\000'}, .index = 16U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'_', (char)'5', (char)'1', (char)'1', (char)'\000'}, .index = 17U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'_', (char)'1', (char)'0', (char)'2', (char)'3', (char)'\000'}, .index = 18U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'_', (char)'1', (char)'5', (char)'1', (char)'8', (char)'\000'}, .index = 19U}, {.name = {(char)'r', (char)'x', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'_', (char)'t', (char)'o', (char)'_', (char)'m', (char)'a', (char)'x', (char)'\000'}, .index = 20U}};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_ethtool.c"
static struct enic_stat const enic_gen_stats[1U] = {{.name = {(char)'d', (char)'m', (char)'a', (char)'_', (char)'m', (char)'a', (char)'p', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'\000'}, .index = 0U}};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_ethtool.c"
static void enic_intr_coal_set_rx(struct enic *enic, u32 timer)
{
  int i;
  int intr;
  unsigned int tmp;
  
#line 100 
  i = 0;
  
#line 100 
  goto ldv_46222;
  ldv_46221: 
#line 101 
  ;
  
#line 101 
  tmp = enic_msix_rq_intr(enic,(unsigned int)i);
  
#line 101 
  intr = (int)tmp;
  
#line 102 
  vnic_intr_coalescing_timer_set(& enic->intr[intr],timer);
  
#line 100 
  i += 1;
  ldv_46222: 
#line 101 
  ;
  
#line 100 
  if (enic->rq_count > (unsigned int)i) 
#line 102 
                                        goto ldv_46221; else 
#line 105 
                                                             goto ldv_46223;
  ldv_46223: 
#line 106 
  ;
  
#line 107 
  return;
}


#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_ethtool.c"
static int enic_get_settings(struct net_device *netdev, struct ethtool_cmd *ecmd)
{
  int __retres;
  bool tmp_1;
  
#line 109 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 111 
  ecmd->supported = 5120U;
  
#line 112 
  ecmd->advertising = 5120U;
  
#line 113 
  ecmd->port = (unsigned char)3U;
  
#line 114 
  ecmd->transceiver = (unsigned char)1U;
  
#line 116 
  tmp_1 = netif_carrier_ok((struct net_device const *)netdev);
  
#line 116 
  if ((int)tmp_1 != 0) {
    u32 tmp_0;
    
#line 117 
    tmp_0 = vnic_dev_port_speed(enic->vdev);
    
#line 117 
    ;
    
#line 117 
    ethtool_cmd_speed_set(ecmd,tmp_0);
    
#line 118 
    ecmd->duplex = (unsigned char)1U;
  }
  else {
    
#line 120 
    ethtool_cmd_speed_set(ecmd,4294967295U);
    
#line 121 
    ecmd->duplex = (unsigned char)255U;
  }
  
#line 124 
  ecmd->autoneg = (unsigned char)0U;
  
#line 126 
  __retres = 0;
  
#line 126 
  return __retres;
}


#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_ethtool.c"
static void enic_get_drvinfo(struct net_device *netdev, struct ethtool_drvinfo *drvinfo)
{
  struct vnic_devcmd_fw_info *fw_info;
  int err;
  char const *tmp_0;
  
#line 132 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 136 
  err = enic_dev_fw_info(enic,& fw_info);
  
#line 141 
  if (err == -12) 
#line 142 
                  goto return_label; else ;
  
#line 144 
  strlcpy((char *)(& drvinfo->driver),"enic",32UL);
  
#line 145 
  strlcpy((char *)(& drvinfo->version),"2.1.1.83",32UL);
  
#line 146 
  strlcpy((char *)(& drvinfo->fw_version),(char const *)(& fw_info->fw_version),32UL);
  
#line 148 
  tmp_0 = pci_name((struct pci_dev const *)enic->pdev);
  
#line 148 
  ;
  
#line 148 
  strlcpy((char *)(& drvinfo->bus_info),tmp_0,32UL);
  return_label: 
#line 149 
                return;
}


#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_ethtool.c"
static void enic_get_strings(struct net_device *netdev, u32 stringset, u8 *data)
{
  unsigned int i;
  
#line 157 
  switch (stringset) {
    case (u32)1: 
#line 158 
    ;
    
#line 159 
    i = 0U;
    
#line 159 
    goto ldv_46244;
    ldv_46243: 
#line 160 
    ;
    
#line 160 
    memcpy((void *)data,(void const *)(& enic_tx_stats[i].name),32UL);
    
#line 161 
    data += 32U;
    
#line 159 
    i += 1U;
    ldv_46244: 
#line 160 
    ;
    
#line 159 
    if (i <= 10U) 
#line 161 
                  goto ldv_46243; else 
#line 164 
                                       goto ldv_46245;
    ldv_46245: 
#line 165 
    ;
    
#line 163 
    i = 0U;
    
#line 163 
    goto ldv_46247;
    ldv_46246: 
#line 164 
    ;
    
#line 164 
    memcpy((void *)data,(void const *)(& enic_rx_stats[i].name),32UL);
    
#line 165 
    data += 32U;
    
#line 163 
    i += 1U;
    ldv_46247: 
#line 164 
    ;
    
#line 163 
    if (i <= 20U) 
#line 165 
                  goto ldv_46246; else 
#line 168 
                                       goto ldv_46248;
    ldv_46248: 
#line 169 
    ;
    
#line 167 
    i = 0U;
    
#line 167 
    goto ldv_46250;
    ldv_46249: 
#line 168 
    ;
    
#line 168 
    memcpy((void *)data,(void const *)(& enic_gen_stats[i].name),32UL);
    
#line 169 
    data += 32U;
    
#line 167 
    i += 1U;
    ldv_46250: 
#line 168 
    ;
    
#line 167 
    if (i == 0U) 
#line 169 
                 goto ldv_46249; else 
#line 172 
                                      goto ldv_46251;
    ldv_46251: 
#line 173 
    ;
    
#line 171 
    goto ldv_46252;
  }
  ldv_46252: 
#line 173 
  ;
  
#line 174 
  return;
}


#line 175  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_ethtool.c"
static int enic_get_sset_count(struct net_device *netdev, int sset)
{
  int __retres;
  
#line 177 
  switch (sset) {
    case 1: 
#line 178 
    ;
    
#line 179 
    __retres = 33;
    
#line 179 
    goto return_label;
    default: 
#line 180 
    ;
    
#line 181 
    __retres = -95;
    
#line 181 
    goto return_label;
  }
  return_label: 
#line 177 
                return __retres;
}


#line 185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_ethtool.c"
static void enic_get_ethtool_stats(struct net_device *netdev, struct ethtool_stats *stats, u64 *data)
{
  struct vnic_stats *vstats;
  unsigned int i;
  int err;
  u64 *tmp_0;
  u64 *tmp_1;
  u64 *tmp_2;
  
#line 188 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 193 
  err = enic_dev_stats_dump(enic,& vstats);
  
#line 198 
  if (err == -12) 
#line 199 
                  goto return_label; else ;
  
#line 201 
  i = 0U;
  
#line 201 
  goto ldv_46269;
  ldv_46268: 
#line 202 
  ;
  
#line 202 
  tmp_0 = data;
  
#line 202 
  data += 1;
  
#line 202 
  *tmp_0 = *((u64 *)(& vstats->tx) + enic_tx_stats[i].index);
  
#line 201 
  i += 1U;
  ldv_46269: 
#line 202 
  ;
  
#line 201 
  if (i <= 10U) 
#line 203 
                goto ldv_46268; else 
#line 206 
                                     goto ldv_46270;
  ldv_46270: 
#line 207 
  ;
  
#line 203 
  i = 0U;
  
#line 203 
  goto ldv_46272;
  ldv_46271: 
#line 204 
  ;
  
#line 204 
  tmp_1 = data;
  
#line 204 
  data += 1;
  
#line 204 
  *tmp_1 = *((u64 *)(& vstats->rx) + enic_rx_stats[i].index);
  
#line 203 
  i += 1U;
  ldv_46272: 
#line 204 
  ;
  
#line 203 
  if (i <= 20U) 
#line 205 
                goto ldv_46271; else 
#line 208 
                                     goto ldv_46273;
  ldv_46273: 
#line 209 
  ;
  
#line 205 
  i = 0U;
  
#line 205 
  goto ldv_46275;
  ldv_46274: 
#line 206 
  ;
  
#line 206 
  tmp_2 = data;
  
#line 206 
  data += 1;
  
#line 206 
  *tmp_2 = *((u64 *)(& enic->gen_stats) + enic_gen_stats[i].index);
  
#line 205 
  i += 1U;
  ldv_46275: 
#line 206 
  ;
  
#line 205 
  if (i == 0U) 
#line 207 
               goto ldv_46274; else 
#line 210 
                                    goto ldv_46276;
  ldv_46276: 
#line 211 
  ;
  return_label: 
#line 212 
                return;
}


#line 209  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_ethtool.c"
static u32 enic_get_msglevel(struct net_device *netdev)
{
  u32 __retres;
  
#line 211 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 212 
  __retres = enic->msg_enable;
  
#line 212 
  return __retres;
}


#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_ethtool.c"
static void enic_set_msglevel(struct net_device *netdev, u32 value)
{
  
#line 217 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 218 
  enic->msg_enable = value;
  
#line 219 
  return;
}


#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_ethtool.c"
static int enic_get_coalesce(struct net_device *netdev, struct ethtool_coalesce *ecmd)
{
  int __retres;
  
#line 224 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 225 
  struct enic_rx_coal *rxcoal = & enic->rx_coalesce_setting;
  
#line 227 
  ecmd->tx_coalesce_usecs = enic->tx_coalesce_usecs;
  
#line 228 
  ecmd->rx_coalesce_usecs = enic->rx_coalesce_usecs;
  
#line 229 
  if (rxcoal->use_adaptive_rx_coalesce != 0U) 
#line 230 
                                              ecmd->use_adaptive_rx_coalesce = 1U; else ;
  
#line 231 
  ecmd->rx_coalesce_usecs_low = rxcoal->small_pkt_range_start;
  
#line 232 
  ecmd->rx_coalesce_usecs_high = rxcoal->range_end;
  
#line 234 
  __retres = 0;
  
#line 234 
  return __retres;
}


#line 237  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_ethtool.c"
static int enic_set_coalesce(struct net_device *netdev, struct ethtool_coalesce *ecmd)
{
  int __retres;
  u32 tx_coalesce_usecs;
  u32 rx_coalesce_usecs;
  u32 rx_coalesce_usecs_low;
  u32 rx_coalesce_usecs_high;
  u32 coalesce_usecs_max;
  unsigned int i;
  unsigned int intr;
  u32 tmp_1;
  u32 tmp_3;
  u32 tmp_5;
  u32 tmp_7;
  enum vnic_dev_intr_mode tmp_8;
  
#line 240 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 247 
  struct enic_rx_coal *rxcoal = & enic->rx_coalesce_setting;
  
#line 249 
  coalesce_usecs_max = vnic_dev_get_intr_coal_timer_max(enic->vdev);
  {
    u32 tmp_0;
    
#line 250 
    u32 __min1 = ecmd->tx_coalesce_usecs;
    
#line 250 
    u32 __min2 = coalesce_usecs_max;
    
#line 250 
    if (__min1 < __min2) 
#line 250 
                         tmp_0 = __min1; else 
#line 250 
                                              tmp_0 = __min2;
    
#line 250 
    tmp_1 = tmp_0;
  }
  
#line 250 
  tx_coalesce_usecs = tmp_1;
  {
    u32 tmp_2;
    
#line 252 
    u32 __min1_0 = ecmd->rx_coalesce_usecs;
    
#line 252 
    u32 __min2_0 = coalesce_usecs_max;
    
#line 252 
    if (__min1_0 < __min2_0) 
#line 252 
                             tmp_2 = __min1_0; else 
#line 252 
                                                    tmp_2 = __min2_0;
    
#line 252 
    tmp_3 = tmp_2;
  }
  
#line 252 
  rx_coalesce_usecs = tmp_3;
  {
    u32 tmp_4;
    
#line 255 
    u32 __min1_1 = ecmd->rx_coalesce_usecs_low;
    
#line 255 
    u32 __min2_1 = coalesce_usecs_max;
    
#line 255 
    if (__min1_1 < __min2_1) 
#line 255 
                             tmp_4 = __min1_1; else 
#line 255 
                                                    tmp_4 = __min2_1;
    
#line 255 
    tmp_5 = tmp_4;
  }
  
#line 255 
  rx_coalesce_usecs_low = tmp_5;
  {
    u32 tmp_6;
    
#line 257 
    u32 __min1_2 = ecmd->rx_coalesce_usecs_high;
    
#line 257 
    u32 __min2_2 = coalesce_usecs_max;
    
#line 257 
    if (__min1_2 < __min2_2) 
#line 257 
                             tmp_6 = __min1_2; else 
#line 257 
                                                    tmp_6 = __min2_2;
    
#line 257 
    tmp_7 = tmp_6;
  }
  
#line 257 
  rx_coalesce_usecs_high = tmp_7;
  
#line 260 
  tmp_8 = vnic_dev_get_intr_mode(enic->vdev);
  
#line 260 
  switch ((unsigned int)tmp_8) {
    case (unsigned int)1: 
#line 261 
    ;
    
#line 262 
    if (tx_coalesce_usecs != rx_coalesce_usecs) {
      
#line 263 
      __retres = -22;
      
#line 263 
      goto return_label;
    }
    else ;
    
#line 264 
    if ((ecmd->use_adaptive_rx_coalesce != 0U || ecmd->rx_coalesce_usecs_low != 0U) || ecmd->rx_coalesce_usecs_high != 0U) {
      
#line 267 
      __retres = -22;
      
#line 267 
      goto return_label;
    }
    else ;
    
#line 269 
    intr = enic_legacy_io_intr();
    
#line 270 
    vnic_intr_coalescing_timer_set(& enic->intr[intr],tx_coalesce_usecs);
    
#line 272 
    goto ldv_46318;
    case (unsigned int)2: 
#line 273 
    ;
    
#line 274 
    if (tx_coalesce_usecs != rx_coalesce_usecs) {
      
#line 275 
      __retres = -22;
      
#line 275 
      goto return_label;
    }
    else ;
    
#line 276 
    if ((ecmd->use_adaptive_rx_coalesce != 0U || ecmd->rx_coalesce_usecs_low != 0U) || ecmd->rx_coalesce_usecs_high != 0U) {
      
#line 279 
      __retres = -22;
      
#line 279 
      goto return_label;
    }
    else ;
    
#line 281 
    vnic_intr_coalescing_timer_set(& enic->intr[0],tx_coalesce_usecs);
    
#line 283 
    goto ldv_46318;
    case (unsigned int)3: 
#line 284 
    ;
    
#line 285 
    if (ecmd->rx_coalesce_usecs_high != 0U && rx_coalesce_usecs_low + 3U > rx_coalesce_usecs_high) {
      
#line 288 
      __retres = -22;
      
#line 288 
      goto return_label;
    }
    else ;
    
#line 290 
    i = 0U;
    
#line 290 
    goto ldv_46322;
    ldv_46321: 
#line 291 
    ;
    
#line 291 
    intr = enic_msix_wq_intr(enic,i);
    
#line 292 
    vnic_intr_coalescing_timer_set(& enic->intr[intr],tx_coalesce_usecs);
    
#line 290 
    i += 1U;
    ldv_46322: 
#line 291 
    ;
    
#line 290 
    if (enic->wq_count > i) 
#line 292 
                            goto ldv_46321; else 
#line 295 
                                                 goto ldv_46323;
    ldv_46323: 
#line 296 
    ;
    
#line 296 
    rxcoal->use_adaptive_rx_coalesce = (unsigned int)(ecmd->use_adaptive_rx_coalesce != 0U);
    
#line 298 
    if (rxcoal->use_adaptive_rx_coalesce == 0U) 
#line 299 
                                                enic_intr_coal_set_rx(enic,rx_coalesce_usecs); else ;
    
#line 301 
    if (ecmd->rx_coalesce_usecs_high != 0U) {
      
#line 302 
      rxcoal->range_end = rx_coalesce_usecs_high;
      
#line 303 
      rxcoal->small_pkt_range_start = rx_coalesce_usecs_low;
      
#line 304 
      rxcoal->large_pkt_range_start = rx_coalesce_usecs_low + 3U;
    }
    else ;
    
#line 307 
    goto ldv_46318;
    default: 
#line 308 
    ;
    
#line 309 
    goto ldv_46318;
  }
  ldv_46318: 
#line 312 
  ;
  
#line 312 
  enic->tx_coalesce_usecs = tx_coalesce_usecs;
  
#line 313 
  enic->rx_coalesce_usecs = rx_coalesce_usecs;
  
#line 315 
  __retres = 0;
  return_label: 
#line 315 
                return __retres;
}


#line 318  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_ethtool.c"
static int enic_grxclsrlall(struct enic *enic, struct ethtool_rxnfc *cmd, u32 *rule_locs)
{
  int __retres;
  int j;
  
#line 321 
  int ret = 0;
  
#line 321 
  int cnt = 0;
  
#line 323 
  cmd->data = (unsigned long long)((int)enic->rfs_h.max - enic->rfs_h.free);
  
#line 324 
  j = 0;
  
#line 324 
  goto ldv_46349;
  ldv_46348: 
#line 325 
  ;
  {
    struct hlist_head *hhead;
    struct hlist_node *tmp;
    struct enic_rfs_fltr_node *n;
    struct enic_rfs_fltr_node *tmp_2;
    struct enic_rfs_fltr_node *tmp_5;
    
#line 329 
    hhead = & enic->rfs_h.ht_head[j];
    {
      struct enic_rfs_fltr_node *tmp_1;
      
#line 330 
      struct hlist_node *____ptr = hhead->first;
      
#line 330 
      if (____ptr != (struct hlist_node *)0) {
        struct enic_rfs_fltr_node *tmp_0;
        {
          
#line 330 
          struct hlist_node const *__mptr = (struct hlist_node const *)____ptr;
          
#line 330 
          tmp_0 = (struct enic_rfs_fltr_node *)__mptr + 18446744073709551552U;
        }
        
#line 330 
        tmp_1 = tmp_0;
      }
      else 
#line 330 
           tmp_1 = (struct enic_rfs_fltr_node *)0;
      
#line 330 
      tmp_2 = tmp_1;
    }
    
#line 330 
    n = tmp_2;
    
#line 330 
    goto ldv_46346;
    ldv_46345: 
#line 331 
    ;
    
#line 331 
    if (cmd->rule_cnt == (unsigned int)cnt) {
      
#line 332 
      __retres = -90;
      
#line 332 
      goto return_label;
    }
    else ;
    
#line 333 
    *(rule_locs + cnt) = (unsigned int)n->fltr_id;
    
#line 334 
    cnt += 1;
    {
      struct enic_rfs_fltr_node *tmp_4;
      
#line 330 
      struct hlist_node *____ptr_0 = tmp;
      
#line 330 
      if (____ptr_0 != (struct hlist_node *)0) {
        struct enic_rfs_fltr_node *tmp_3;
        {
          
#line 330 
          struct hlist_node const *__mptr_0 = (struct hlist_node const *)____ptr_0;
          
#line 330 
          tmp_3 = (struct enic_rfs_fltr_node *)__mptr_0 + 18446744073709551552U;
        }
        
#line 330 
        tmp_4 = tmp_3;
      }
      else 
#line 330 
           tmp_4 = (struct enic_rfs_fltr_node *)0;
      
#line 330 
      tmp_5 = tmp_4;
    }
    
#line 330 
    n = tmp_5;
    ldv_46346: 
#line 332 
    ;
    
#line 330 
    if (n != (struct enic_rfs_fltr_node *)0) {
      
#line 330 
      tmp = n->node.next;
      
#line 330 
      if (1 != 0) 
#line 332 
                  goto ldv_46345; else 
#line 335 
                                       goto ldv_46347;
    }
    else 
#line 335 
         goto ldv_46347;
    ldv_46347: 
#line 336 
    ;
  }
  
#line 324 
  j += 1;
  ldv_46349: 
#line 325 
  ;
  
#line 324 
  if (j <= 1023) 
#line 326 
                 goto ldv_46348; else 
#line 329 
                                      goto ldv_46350;
  ldv_46350: 
#line 330 
  ;
  
#line 337 
  cmd->rule_cnt = (unsigned int)cnt;
  
#line 339 
  __retres = ret;
  return_label: 
#line 339 
                return __retres;
}


#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_ethtool.c"
static int enic_grxclsrule(struct enic *enic, struct ethtool_rxnfc *cmd)
{
  int __retres;
  struct enic_rfs_fltr_node *n;
  
#line 344 
  struct ethtool_rx_flow_spec *fsp = & cmd->fs;
  
#line 348 
  n = htbl_fltr_search(enic,(unsigned short)((int)((unsigned short)fsp->location)));
  
#line 349 
  if (n == (struct enic_rfs_fltr_node *)0) {
    
#line 350 
    __retres = -22;
    
#line 350 
    goto return_label;
  }
  else ;
  
#line 351 
  switch ((int)n->keys.basic.ip_proto) {
    case 6: 
#line 352 
    ;
    
#line 353 
    fsp->flow_type = 1U;
    
#line 354 
    goto ldv_46358;
    case 17: 
#line 355 
    ;
    
#line 356 
    fsp->flow_type = 2U;
    
#line 357 
    goto ldv_46358;
    default: 
#line 358 
    ;
    
#line 359 
    __retres = -22;
    
#line 359 
    goto return_label;
  }
  ldv_46358: 
#line 363 
  ;
  
#line 363 
  fsp->h_u.tcp_ip4_spec.ip4src = flow_get_u32_src((struct flow_keys const *)(& n->keys));
  
#line 364 
  fsp->m_u.tcp_ip4_spec.ip4src = 4294967295U;
  
#line 366 
  fsp->h_u.tcp_ip4_spec.ip4dst = flow_get_u32_dst((struct flow_keys const *)(& n->keys));
  
#line 367 
  fsp->m_u.tcp_ip4_spec.ip4dst = 4294967295U;
  
#line 369 
  fsp->h_u.tcp_ip4_spec.psrc = n->keys.ports.__anonCompField_flow_dissector_key_ports_71.__anonCompField___anonunion_2755_70.src;
  
#line 370 
  fsp->m_u.tcp_ip4_spec.psrc = (unsigned short)65535U;
  
#line 372 
  fsp->h_u.tcp_ip4_spec.pdst = n->keys.ports.__anonCompField_flow_dissector_key_ports_71.__anonCompField___anonunion_2755_70.dst;
  
#line 373 
  fsp->m_u.tcp_ip4_spec.pdst = (unsigned short)65535U;
  
#line 375 
  fsp->ring_cookie = (unsigned long long)n->rq_id;
  
#line 377 
  __retres = 0;
  return_label: 
#line 377 
                return __retres;
}


#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_ethtool.c"
static int enic_get_rxnfc(struct net_device *dev, struct ethtool_rxnfc *cmd, u32 *rule_locs)
{
  
#line 383 
  struct enic *enic = netdev_priv((struct net_device const *)dev);
  
#line 384 
  int ret = 0;
  
#line 386 
  switch (cmd->cmd) {
    case (__u32)45: 
#line 387 
    ;
    
#line 388 
    cmd->data = (unsigned long long)enic->rq_count;
    
#line 389 
    goto ldv_46369;
    case (__u32)46: 
#line 390 
    ;
    
#line 391 
    ldv_spin_lock_bh_74_0(& enic->rfs_h.lock);
    
#line 392 
    cmd->rule_cnt = (unsigned int)((int)enic->rfs_h.max - enic->rfs_h.free);
    
#line 393 
    cmd->data = (unsigned long long)enic->rfs_h.max;
    
#line 394 
    ldv_spin_unlock_bh_75_0(& enic->rfs_h.lock);
    
#line 395 
    goto ldv_46369;
    case (__u32)48: 
#line 396 
    ;
    
#line 397 
    ldv_spin_lock_bh_76_0(& enic->rfs_h.lock);
    
#line 398 
    ret = enic_grxclsrlall(enic,cmd,rule_locs);
    
#line 399 
    ldv_spin_unlock_bh_77_0(& enic->rfs_h.lock);
    
#line 400 
    goto ldv_46369;
    case (__u32)47: 
#line 401 
    ;
    
#line 402 
    ldv_spin_lock_bh_78_0(& enic->rfs_h.lock);
    
#line 403 
    ret = enic_grxclsrule(enic,cmd);
    
#line 404 
    ldv_spin_unlock_bh_79_0(& enic->rfs_h.lock);
    
#line 405 
    goto ldv_46369;
    default: 
#line 406 
    ;
    
#line 407 
    ret = -95;
    
#line 408 
    goto ldv_46369;
  }
  ldv_46369: 
#line 411 
  ;
  
#line 411 
  return ret;
}


#line 414  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_ethtool.c"
static int enic_get_tunable(struct net_device *dev, struct ethtool_tunable const *tuna, void *data)
{
  
#line 417 
  struct enic *enic = netdev_priv((struct net_device const *)dev);
  
#line 418 
  int ret = 0;
  
#line 420 
  switch (tuna->id) {
    case (__u32)1: 
#line 421 
    ;
    
#line 422 
    *((u32 *)data) = enic->rx_copybreak;
    
#line 423 
    goto ldv_46382;
    default: 
#line 424 
    ;
    
#line 425 
    ret = -22;
    
#line 426 
    goto ldv_46382;
  }
  ldv_46382: 
#line 429 
  ;
  
#line 429 
  return ret;
}


#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_ethtool.c"
static int enic_set_tunable(struct net_device *dev, struct ethtool_tunable const *tuna, void const *data)
{
  
#line 436 
  struct enic *enic = netdev_priv((struct net_device const *)dev);
  
#line 437 
  int ret = 0;
  
#line 439 
  switch (tuna->id) {
    case (__u32)1: 
#line 440 
    ;
    
#line 441 
    enic->rx_copybreak = *((u32 *)data);
    
#line 442 
    goto ldv_46392;
    default: 
#line 443 
    ;
    
#line 444 
    ret = -22;
    
#line 445 
    goto ldv_46392;
  }
  ldv_46392: 
#line 448 
  ;
  
#line 448 
  return ret;
}


#line 451  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_ethtool.c"
static u32 enic_get_rxfh_key_size(struct net_device *netdev)
{
  u32 __retres;
  
#line 453 
  __retres = 40U;
  
#line 453 
  return __retres;
}


#line 456  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_ethtool.c"
static int enic_get_rxfh(struct net_device *netdev, u32 *indir, u8 *hkey, u8 *hfunc)
{
  int __retres;
  
#line 459 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 461 
  if (hkey != (u8 *)0U) 
#line 462 
                        memcpy((void *)hkey,(void const *)(& enic->rss_key),40UL); else ;
  
#line 464 
  if (hfunc != (u8 *)0U) 
#line 465 
                         *hfunc = (unsigned char)1U; else ;
  
#line 467 
  __retres = 0;
  
#line 467 
  return __retres;
}


#line 470  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_ethtool.c"
static int enic_set_rxfh(struct net_device *netdev, u32 const *indir, u8 const *hkey, u8 const hfunc)
{
  int __retres;
  int tmp_0;
  
#line 473 
  struct enic *enic = netdev_priv((struct net_device const *)netdev);
  
#line 475 
  if ((unsigned int)hfunc > 1U || indir != (u32 const *)0U) {
    
#line 477 
    __retres = -22;
    
#line 477 
    goto return_label;
  }
  else ;
  
#line 479 
  if (hkey != (u8 const *)0U) 
#line 480 
                              memcpy((void *)(& enic->rss_key),(void const *)hkey,40UL); else ;
  
#line 482 
  tmp_0 = __enic_set_rsskey(enic);
  
#line 482 
  __retres = tmp_0;
  return_label: 
#line 482 
                return __retres;
}


#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_ethtool.c"
static struct ethtool_ops const enic_ethtool_ops = {.get_settings = & enic_get_settings, .set_settings = (int (*)(struct net_device *, struct ethtool_cmd *))0, .get_drvinfo = & enic_get_drvinfo, .get_regs_len = (int (*)(struct net_device *))0, .get_regs = (void (*)(struct net_device *, struct ethtool_regs *, void *))0, .get_wol = (void (*)(struct net_device *, struct ethtool_wolinfo *))0, .set_wol = (int (*)(struct net_device *, struct ethtool_wolinfo *))0, .get_msglevel = & enic_get_msglevel, .set_msglevel = & enic_set_msglevel, .nway_reset = (int (*)(struct net_device *))0, .get_link = & ethtool_op_get_link, .get_eeprom_len = (int (*)(struct net_device *))0, .get_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .set_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_coalesce = & enic_get_coalesce, .set_coalesce = & enic_set_coalesce, .get_ringparam = (void (*)(struct net_device *, struct ethtool_ringparam *))0, .set_ringparam = (int (*)(struct net_device *, struct ethtool_ringparam *))0, .get_pauseparam = (void (*)(struct net_device *, struct ethtool_pauseparam *))0, .set_pauseparam = (int (*)(struct net_device *, struct ethtool_pauseparam *))0, .self_test = (void (*)(struct net_device *, struct ethtool_test *, u64 *))0, .get_strings = & enic_get_strings, .set_phys_id = (int (*)(struct net_device *, enum ethtool_phys_id_state ))0, .get_ethtool_stats = & enic_get_ethtool_stats, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = & enic_get_sset_count, .get_rxnfc = & enic_get_rxnfc, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = & enic_get_rxfh_key_size, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = & enic_get_rxfh, .set_rxfh = & enic_set_rxfh, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = (int (*)(struct net_device *, struct ethtool_ts_info *))0, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = & enic_get_tunable, .set_tunable = & enic_set_tunable};

#line 504  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_ethtool.c"
void enic_set_ethtool_ops(struct net_device *netdev)
{
  
#line 506 
  netdev->ethtool_ops = & enic_ethtool_ops;
  
#line 507 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_ethtool.c.aux"
unsigned int (*ldv_emg_alias_ethtool_op_get_link_2)(struct net_device *) = & ethtool_op_get_link;

#line 72  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_ethtool.c.aux"
int ldv_emg_wrapper_enic_set_rxfh_11(struct net_device *arg0, unsigned int *arg1, unsigned char *arg2, unsigned char arg3)
{
  int tmp;
  
#line 73 
  tmp = enic_set_rxfh(arg0,(u32 const *)arg1,(u8 const *)arg2,(unsigned char)((int)arg3));
  
#line 73 
  return tmp;
}


#line 77  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_ethtool.c.aux"
int ldv_emg_wrapper_enic_get_settings_16(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 78 
  tmp = enic_get_settings(arg0,arg1);
  
#line 78 
  return tmp;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_ethtool.c.aux"
int ldv_emg_wrapper_enic_get_sset_count_17(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 83 
  tmp = enic_get_sset_count(arg0,arg1);
  
#line 83 
  return tmp;
}


#line 87  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_ethtool.c.aux"
void ldv_emg_wrapper_enic_get_ethtool_stats_6(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  
#line 88 
  enic_get_ethtool_stats(arg0,arg1,arg2);
  
#line 89 
  return;
}


#line 92  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_ethtool.c.aux"
void ldv_emg_wrapper_enic_get_strings_3(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  
#line 93 
  enic_get_strings(arg0,arg1,arg2);
  
#line 94 
  return;
}


#line 97  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_ethtool.c.aux"
unsigned int ldv_emg_wrapper_enic_get_rxfh_key_size_12(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 98 
  tmp = enic_get_rxfh_key_size(arg0);
  
#line 98 
  return tmp;
}


#line 102  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_ethtool.c.aux"
int ldv_emg_wrapper_enic_get_coalesce_19(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 103 
  tmp = enic_get_coalesce(arg0,arg1);
  
#line 103 
  return tmp;
}


#line 107  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_ethtool.c.aux"
void ldv_emg_wrapper_enic_get_drvinfo_9(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 108 
  enic_get_drvinfo(arg0,arg1);
  
#line 109 
  return;
}


#line 112  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_ethtool.c.aux"
void ldv_emg_wrapper_enic_set_msglevel_23(struct net_device *arg0, unsigned int arg1)
{
  
#line 113 
  enic_set_msglevel(arg0,arg1);
  
#line 114 
  return;
}


#line 117  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_ethtool.c.aux"
int ldv_emg_wrapper_enic_get_tunable_18(struct net_device *arg0, struct ethtool_tunable *arg1, void *arg2)
{
  int tmp;
  
#line 118 
  tmp = enic_get_tunable(arg0,(struct ethtool_tunable const *)arg1,arg2);
  
#line 118 
  return tmp;
}


#line 122  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_ethtool.c.aux"
int ldv_emg_wrapper_enic_set_tunable_8(struct net_device *arg0, struct ethtool_tunable *arg1, void *arg2)
{
  int tmp;
  
#line 123 
  tmp = enic_set_tunable(arg0,(struct ethtool_tunable const *)arg1,(void const *)arg2);
  
#line 123 
  return tmp;
}


#line 127  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_ethtool.c.aux"
int ldv_emg_wrapper_enic_get_rxfh_10(struct net_device *arg0, unsigned int *arg1, unsigned char *arg2, unsigned char *arg3)
{
  int tmp;
  
#line 128 
  tmp = enic_get_rxfh(arg0,arg1,arg2,arg3);
  
#line 128 
  return tmp;
}


#line 132  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_ethtool.c.aux"
unsigned int ldv_emg_wrapper_enic_get_msglevel_13(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 133 
  tmp = enic_get_msglevel(arg0);
  
#line 133 
  return tmp;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_ethtool.c.aux"
int ldv_emg_wrapper_enic_get_rxnfc_20(struct net_device *arg0, struct ethtool_rxnfc *arg1, unsigned int *arg2)
{
  int tmp;
  
#line 138 
  tmp = enic_get_rxnfc(arg0,arg1,arg2);
  
#line 138 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_ethtool.c.aux"
int ldv_emg_wrapper_enic_set_coalesce_25(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 143 
  tmp = enic_set_coalesce(arg0,arg1);
  
#line 143 
  return tmp;
}


#line 834  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_ethtool.c.aux"
static void ldv_spin_lock_bh_74_0(spinlock_t *lock)
{
  
#line 838 
  ldv_spin_model_lock((char *)"lock_of_enic_rfs_flw_tbl");
  
#line 840 
  spin_lock_bh_2(lock);
  
#line 841 
  return;
}


#line 844  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_ethtool.c.aux"
static void ldv_spin_unlock_bh_75_0(spinlock_t *lock)
{
  
#line 848 
  ldv_spin_model_unlock((char *)"lock_of_enic_rfs_flw_tbl");
  
#line 850 
  spin_unlock_bh_2(lock);
  
#line 851 
  return;
}


#line 854  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_ethtool.c.aux"
static void ldv_spin_lock_bh_76_0(spinlock_t *lock)
{
  
#line 858 
  ldv_spin_model_lock((char *)"lock_of_enic_rfs_flw_tbl");
  
#line 860 
  spin_lock_bh_2(lock);
  
#line 861 
  return;
}


#line 864  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_ethtool.c.aux"
static void ldv_spin_unlock_bh_77_0(spinlock_t *lock)
{
  
#line 868 
  ldv_spin_model_unlock((char *)"lock_of_enic_rfs_flw_tbl");
  
#line 870 
  spin_unlock_bh_2(lock);
  
#line 871 
  return;
}


#line 874  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_ethtool.c.aux"
static void ldv_spin_lock_bh_78_0(spinlock_t *lock)
{
  
#line 878 
  ldv_spin_model_lock((char *)"lock_of_enic_rfs_flw_tbl");
  
#line 880 
  spin_lock_bh_2(lock);
  
#line 881 
  return;
}


#line 884  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_ethtool.c.aux"
static void ldv_spin_unlock_bh_79_0(spinlock_t *lock)
{
  
#line 888 
  ldv_spin_model_unlock((char *)"lock_of_enic_rfs_flw_tbl");
  
#line 890 
  spin_unlock_bh_2(lock);
  
#line 891 
  return;
}


#line 402  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
int sprintf(char *, char const * , ...);


#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
int memcmp(void const *, void const *, size_t);


#line 64 
size_t strlen(char const *);


#line 67 
int strcmp(char const *, char const *);


#line 355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh_3(spinlock_t *lock)
{
  
#line 357 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 358 
  return;
}


#line 383 
static void ldv_spin_lock_bh_73_0(spinlock_t *lock);


#line 387 
static void ldv_spin_lock_bh_75(spinlock_t *lock);


#line 391 
static void ldv_spin_lock_bh_77(spinlock_t *lock);


#line 395 
static void ldv_spin_lock_bh_79(spinlock_t *lock);


#line 399 
static void ldv_spin_lock_bh_81(spinlock_t *lock);


#line 403 
static void ldv_spin_lock_bh_83(spinlock_t *lock);


#line 407 
static void ldv_spin_lock_bh_85(spinlock_t *lock);


#line 411 
static void ldv_spin_lock_bh_87(spinlock_t *lock);


#line 415 
static void ldv_spin_lock_bh_89(spinlock_t *lock);


#line 419 
static void ldv_spin_lock_bh_91(spinlock_t *lock);


#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh_3(spinlock_t *lock)
{
  
#line 406 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 407 
  return;
}


#line 436 
static void ldv_spin_unlock_bh_74_0(spinlock_t *lock);


#line 440 
static void ldv_spin_unlock_bh_76(spinlock_t *lock);


#line 444 
static void ldv_spin_unlock_bh_78(spinlock_t *lock);


#line 448 
static void ldv_spin_unlock_bh_80(spinlock_t *lock);


#line 452 
static void ldv_spin_unlock_bh_82(spinlock_t *lock);


#line 456 
static void ldv_spin_unlock_bh_84(spinlock_t *lock);


#line 460 
static void ldv_spin_unlock_bh_86(spinlock_t *lock);


#line 464 
static void ldv_spin_unlock_bh_88(spinlock_t *lock);


#line 468 
static void ldv_spin_unlock_bh_90(spinlock_t *lock);


#line 472 
static void ldv_spin_unlock_bh_92(spinlock_t *lock);


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool ether_addr_equal(u8 const *addr1, u8 const *addr2)
{
  bool __retres;
  
#line 313 
  u32 fold = (*((u32 const *)addr1) ^ *((u32 const *)addr2)) | (unsigned int)((int)*((u16 const *)(addr1 + 4U)) ^ (int)*((u16 const *)(addr2 + 4U)));
  
#line 316 
  __retres = (_Bool)(fold == 0U);
  
#line 316 
  return __retres;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.h"
int vnic_dev_deinit(struct vnic_dev *vdev);


#line 131 
int vnic_dev_init_prov2(struct vnic_dev *vdev, u8 *buf, u32 len);


#line 132 
int vnic_dev_enable2(struct vnic_dev *vdev, int active);


#line 133 
int vnic_dev_enable2_done(struct vnic_dev *vdev, int *status);


#line 134 
int vnic_dev_deinit_done(struct vnic_dev *vdev, int *status);


#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_pp.c"
int enic_is_valid_pp_vf(struct enic *enic, int vf, int *err)
{
  int __retres;
  
#line 40 
  if (vf != -1) {
    int tmp;
    
#line 42 
    tmp = enic_sriov_enabled(enic);
    
#line 42 
    if (tmp != 0) {
      
#line 43 
      if (vf < 0 || (int)enic->num_vfs <= vf) {
        
#line 44 
        *err = -22;
        
#line 45 
        goto err_out;
      }
      else ;
    }
    else {
      
#line 48 
      *err = -95;
      
#line 49 
      goto err_out;
    }
  }
  else ;
  
#line 57 
  if (vf == -1) {
    int tmp_0;
    
#line 57 
    tmp_0 = enic_is_dynamic(enic);
    
#line 57 
    if (tmp_0 == 0) {
      
#line 58 
      *err = -95;
      
#line 59 
      goto err_out;
    }
    else ;
  }
  else ;
  
#line 62 
  *err = 0;
  
#line 63 
  __retres = 1;
  
#line 63 
  goto return_label;
  err_out: 
#line 65 
  ;
  
#line 66 
  __retres = 0;
  return_label: 
#line 66 
                return __retres;
}


#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_pp.c"
static int enic_set_port_profile(struct enic *enic, int vf)
{
  int __retres;
  struct enic_port_profile *pp;
  struct vic_provinfo *vp;
  char uuid_str[38U];
  char client_mac_str[18U];
  u8 *client_mac;
  int err;
  int tmp;
  size_t tmp_1;
  int tmp_3;
  bool tmp_2;
  int tmp_6;
  
#line 71 
  struct net_device *netdev = enic->netdev;
  
#line 74 
  u8 const oui[3U] = {(unsigned char)0U, (unsigned char)0U, (unsigned char)12U};
  
#line 75 
  __be16 const os_type = (unsigned short)512U;
  
#line 81 
  tmp = enic_is_valid_pp_vf(enic,vf,& err);
  
#line 81 
  if (tmp != 0) 
    
#line 81 
    if (vf == -1) 
#line 81 
                  pp = enic->pp; else 
#line 81 
                                      pp = enic->pp + vf;
  else 
#line 81 
       pp = (struct enic_port_profile *)0;
  
#line 82 
  if (err != 0) {
    
#line 83 
    __retres = err;
    
#line 83 
    goto return_label;
  }
  else ;
  
#line 85 
  if ((pp->set & 4U) == 0U) {
    
#line 86 
    __retres = -22;
    
#line 86 
    goto return_label;
  }
  else {
    size_t tmp_0;
    
#line 85 
    tmp_0 = strlen((char const *)(& pp->name));
    
#line 85 
    if (tmp_0 == 0UL) {
      
#line 86 
      __retres = -22;
      
#line 86 
      goto return_label;
    }
    else ;
  }
  
#line 88 
  vp = vic_provinfo_alloc(208U,(u8 const *)(& oui),(unsigned char)4);
  
#line 90 
  if (vp == (struct vic_provinfo *)0) {
    
#line 91 
    __retres = -12;
    
#line 91 
    goto return_label;
  }
  else ;
  
#line 93 
  ;
  
#line 93 
  tmp_1 = strlen((char const *)(& pp->name));
  
#line 93 
  ;
  
#line 93 
  err = vic_provinfo_add_tlv(vp,(unsigned short)0,(unsigned short)((int)((unsigned int)((unsigned short)tmp_1) + 1U)),(void const *)(& pp->name));
  
#line 93 
  if (err != 0) 
#line 93 
                goto add_tlv_failure; else ;
  
#line 97 
  tmp_2 = is_zero_ether_addr((u8 const *)(& pp->mac_addr));
  
#line 97 
  if (tmp_2) 
#line 97 
             tmp_3 = 0; else 
#line 97 
                             tmp_3 = 1;
  
#line 97 
  if (tmp_3) 
#line 98 
             client_mac = (u8 *)(& pp->mac_addr);
  else 
    
#line 99 
    if (vf == -1) 
#line 100 
                  client_mac = netdev->dev_addr;
    else {
      
#line 102 
      netdev_err((struct net_device const *)netdev,"Cannot find pp mac address ",vf);
      
#line 104 
      err = -22;
      
#line 105 
      goto add_tlv_failure;
    }
  
#line 108 
  err = vic_provinfo_add_tlv(vp,(unsigned short)1,(unsigned short)6,(void const *)client_mac);
  
#line 108 
  if (err != 0) 
#line 108 
                goto add_tlv_failure; else ;
  
#line 112 
  snprintf((char *)(& client_mac_str),18UL,"%pM",client_mac);
  
#line 113 
  err = vic_provinfo_add_tlv(vp,(unsigned short)4,(unsigned short)18,(void const *)(& client_mac_str));
  
#line 113 
  if (err != 0) 
#line 113 
                goto add_tlv_failure; else ;
  
#line 117 
  if ((pp->set & 8U) != 0U) {
    
#line 118 
    sprintf((char *)(& uuid_str),"%pUB",(u8 *)(& pp->instance_uuid));
    
#line 119 
    err = vic_provinfo_add_tlv(vp,(unsigned short)9,(unsigned short)38,(void const *)(& uuid_str));
    
#line 119 
    if (err != 0) 
#line 119 
                  goto add_tlv_failure; else ;
  }
  else ;
  
#line 124 
  if ((pp->set & 16U) != 0U) {
    
#line 125 
    sprintf((char *)(& uuid_str),"%pUB",(u8 *)(& pp->host_uuid));
    
#line 126 
    err = vic_provinfo_add_tlv(vp,(unsigned short)8,(unsigned short)38,(void const *)(& uuid_str));
    
#line 126 
    if (err != 0) 
#line 126 
                  goto add_tlv_failure; else ;
  }
  else ;
  
#line 131 
  err = vic_provinfo_add_tlv(vp,(unsigned short)11,(unsigned short)2,(void const *)(& os_type));
  
#line 131 
  if (err != 0) 
#line 131 
                goto add_tlv_failure; else ;
  
#line 135 
  ldv_spin_lock_bh_73_0(& enic->devcmd_lock);
  
#line 135 
  tmp_6 = enic_is_valid_vf(enic,vf);
  
#line 135 
  if (tmp_6 != 0) {
    size_t tmp_4;
    
#line 135 
    vnic_dev_cmd_proxy_by_index_start(enic->vdev,(unsigned short)((int)((unsigned short)vf)));
    
#line 135 
    tmp_4 = vic_provinfo_size(vp);
    
#line 135 
    ;
    
#line 135 
    ;
    
#line 135 
    err = vnic_dev_init_prov2(enic->vdev,(u8 *)vp,(unsigned int)tmp_4);
    
#line 135 
    vnic_dev_cmd_proxy_end(enic->vdev);
  }
  else {
    size_t tmp_5;
    
#line 135 
    tmp_5 = vic_provinfo_size(vp);
    
#line 135 
    ;
    
#line 135 
    ;
    
#line 135 
    err = vnic_dev_init_prov2(enic->vdev,(u8 *)vp,(unsigned int)tmp_5);
  }
  
#line 135 
  ldv_spin_unlock_bh_74_0(& enic->devcmd_lock);
  
#line 137 
  err = enic_dev_status_to_errno(err);
  add_tlv_failure: 
#line 139 
  ;
  
#line 140 
  vic_provinfo_free(vp);
  
#line 142 
  __retres = err;
  return_label: 
#line 142 
                return __retres;
}


#line 145  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_pp.c"
static int enic_unset_port_profile(struct enic *enic, int vf)
{
  int __retres;
  int err;
  int tmp;
  
#line 149 
  ldv_spin_lock_bh_75(& enic->devcmd_lock);
  
#line 149 
  tmp = enic_is_valid_vf(enic,vf);
  
#line 149 
  if (tmp != 0) {
    
#line 149 
    vnic_dev_cmd_proxy_by_index_start(enic->vdev,(unsigned short)((int)((unsigned short)vf)));
    
#line 149 
    err = vnic_dev_deinit(enic->vdev);
    
#line 149 
    vnic_dev_cmd_proxy_end(enic->vdev);
  }
  else 
#line 149 
       err = vnic_dev_deinit(enic->vdev);
  
#line 149 
  ldv_spin_unlock_bh_76(& enic->devcmd_lock);
  
#line 150 
  if (err != 0) {
    int tmp_0;
    
#line 151 
    tmp_0 = enic_dev_status_to_errno(err);
    
#line 151 
    __retres = tmp_0;
    
#line 151 
    goto return_label;
  }
  else ;
  
#line 153 
  if (vf == -1) 
#line 154 
                enic_reset_addr_lists(enic); else ;
  
#line 156 
  __retres = 0;
  return_label: 
#line 156 
                return __retres;
}


#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_pp.c"
static int enic_are_pp_different(struct enic_port_profile *pp1, struct enic_port_profile *pp2)
{
  int __retres;
  int tmp;
  int tmp_0;
  int tmp_1;
  int tmp_3;
  bool tmp_2;
  
#line 164 
  tmp = strcmp((char const *)(& pp1->name),(char const *)(& pp2->name));
  
#line 162 
  tmp_0 = memcmp((void const *)(& pp1->instance_uuid),(void const *)(& pp2->instance_uuid),16UL);
  
#line 163 
  tmp_1 = memcmp((void const *)(& pp1->host_uuid),(void const *)(& pp2->host_uuid),16UL);
  
#line 165 
  tmp_2 = ether_addr_equal((u8 const *)(& pp1->mac_addr),(u8 const *)(& pp2->mac_addr));
  
#line 165 
  if (tmp_2) 
#line 165 
             tmp_3 = 0; else 
#line 165 
                             tmp_3 = 1;
  
#line 164 
  __retres = ((tmp | (tmp_0 != 0)) | (tmp_1 != 0)) | tmp_3;
  
#line 164 
  return __retres;
}


#line 168 
static int enic_pp_preassociate(struct enic *enic, int vf, struct enic_port_profile *prev_pp, int *restore_pp);


#line 170 
static int enic_pp_disassociate(struct enic *enic, int vf, struct enic_port_profile *prev_pp, int *restore_pp);


#line 172 
static int enic_pp_preassociate_rr(struct enic *enic, int vf, struct enic_port_profile *prev_pp, int *restore_pp);


#line 174 
static int enic_pp_associate(struct enic *enic, int vf, struct enic_port_profile *prev_pp, int *restore_pp);


#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_pp.c"
static int (*enic_pp_handlers[4U])(struct enic *, int , struct enic_port_profile *, int *) = {& enic_pp_preassociate, & enic_pp_preassociate_rr, & enic_pp_associate, & enic_pp_disassociate};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_pp.c"
static int enic_pp_preassociate(struct enic *enic, int vf, struct enic_port_profile *prev_pp, int *restore_pp)
{
  int __retres;
  
#line 192 
  __retres = -95;
  
#line 192 
  return __retres;
}


#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_pp.c"
static int enic_pp_disassociate(struct enic *enic, int vf, struct enic_port_profile *prev_pp, int *restore_pp)
{
  int __retres;
  struct enic_port_profile *pp;
  int err;
  int tmp;
  int tmp_5;
  bool tmp_4;
  int tmp_6;
  
#line 198 
  struct net_device *netdev = enic->netdev;
  
#line 202 
  tmp = enic_is_valid_pp_vf(enic,vf,& err);
  
#line 202 
  if (tmp != 0) 
    
#line 202 
    if (vf == -1) 
#line 202 
                  pp = enic->pp; else 
#line 202 
                                      pp = enic->pp + vf;
  else 
#line 202 
       pp = (struct enic_port_profile *)0;
  
#line 203 
  if (err != 0) {
    
#line 204 
    __retres = err;
    
#line 204 
    goto return_label;
  }
  else ;
  
#line 207 
  tmp_4 = is_zero_ether_addr((u8 const *)(& pp->mac_addr));
  
#line 207 
  if (tmp_4) 
#line 207 
             tmp_5 = 0; else 
#line 207 
                             tmp_5 = 1;
  
#line 207 
  if (tmp_5) {
    int tmp_0;
    
#line 208 
    ldv_spin_lock_bh_77(& enic->devcmd_lock);
    
#line 208 
    tmp_0 = enic_is_valid_vf(enic,vf);
    
#line 208 
    if (tmp_0 != 0) {
      
#line 208 
      vnic_dev_cmd_proxy_by_index_start(enic->vdev,(unsigned short)((int)((unsigned short)vf)));
      
#line 208 
      err = vnic_dev_del_addr(enic->vdev,(u8 const *)(& pp->mac_addr));
      
#line 208 
      vnic_dev_cmd_proxy_end(enic->vdev);
    }
    else 
#line 208 
         err = vnic_dev_del_addr(enic->vdev,(u8 const *)(& pp->mac_addr));
    
#line 208 
    ldv_spin_unlock_bh_78(& enic->devcmd_lock);
  }
  else 
    
#line 210 
    if (vf == -1) {
      int tmp_3;
      bool tmp_2;
      
#line 210 
      tmp_2 = is_zero_ether_addr((u8 const *)netdev->dev_addr);
      
#line 210 
      if (tmp_2) 
#line 210 
                 tmp_3 = 0; else 
#line 210 
                                 tmp_3 = 1;
      
#line 210 
      if (tmp_3) {
        int tmp_1;
        
#line 211 
        ldv_spin_lock_bh_79(& enic->devcmd_lock);
        
#line 211 
        tmp_1 = enic_is_valid_vf(enic,vf);
        
#line 211 
        if (tmp_1 != 0) {
          
#line 211 
          vnic_dev_cmd_proxy_by_index_start(enic->vdev,(unsigned short)((int)((unsigned short)vf)));
          
#line 211 
          err = vnic_dev_del_addr(enic->vdev,(u8 const *)netdev->dev_addr);
          
#line 211 
          vnic_dev_cmd_proxy_end(enic->vdev);
        }
        else 
#line 211 
             err = vnic_dev_del_addr(enic->vdev,(u8 const *)netdev->dev_addr);
        
#line 211 
        ldv_spin_unlock_bh_80(& enic->devcmd_lock);
      }
      else ;
    }
    else ;
  
#line 214 
  tmp_6 = enic_unset_port_profile(enic,vf);
  
#line 214 
  __retres = tmp_6;
  return_label: 
#line 214 
                return __retres;
}


#line 217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_pp.c"
static int enic_pp_preassociate_rr(struct enic *enic, int vf, struct enic_port_profile *prev_pp, int *restore_pp)
{
  int __retres;
  struct enic_port_profile *pp;
  int err;
  int tmp;
  
#line 222 
  int active = 0;
  
#line 224 
  tmp = enic_is_valid_pp_vf(enic,vf,& err);
  
#line 224 
  if (tmp != 0) 
    
#line 224 
    if (vf == -1) 
#line 224 
                  pp = enic->pp; else 
#line 224 
                                      pp = enic->pp + vf;
  else 
#line 224 
       pp = (struct enic_port_profile *)0;
  
#line 225 
  if (err != 0) {
    
#line 226 
    __retres = err;
    
#line 226 
    goto return_label;
  }
  else ;
  
#line 228 
  if ((unsigned int)pp->request != 2U) {
    
#line 231 
    err = (*(enic_pp_handlers[3]))(enic,vf,prev_pp,restore_pp);
    
#line 233 
    if (err != 0) {
      
#line 234 
      __retres = err;
      
#line 234 
      goto return_label;
    }
    else ;
    
#line 236 
    *restore_pp = 0;
  }
  else ;
  
#line 239 
  *restore_pp = 0;
  
#line 241 
  err = enic_set_port_profile(enic,vf);
  
#line 242 
  if (err != 0) {
    
#line 243 
    __retres = err;
    
#line 243 
    goto return_label;
  }
  else ;
  
#line 246 
  if ((unsigned int)pp->request != 2U) {
    int tmp_0;
    
#line 248 
    ldv_spin_lock_bh_81(& enic->devcmd_lock);
    
#line 248 
    tmp_0 = enic_is_valid_vf(enic,vf);
    
#line 248 
    if (tmp_0 != 0) {
      
#line 248 
      vnic_dev_cmd_proxy_by_index_start(enic->vdev,(unsigned short)((int)((unsigned short)vf)));
      
#line 248 
      err = vnic_dev_enable2(enic->vdev,active);
      
#line 248 
      vnic_dev_cmd_proxy_end(enic->vdev);
    }
    else 
#line 248 
         err = vnic_dev_enable2(enic->vdev,active);
    
#line 248 
    ldv_spin_unlock_bh_82(& enic->devcmd_lock);
    
#line 250 
    err = enic_dev_status_to_errno(err);
  }
  else ;
  
#line 253 
  __retres = err;
  return_label: 
#line 253 
                return __retres;
}


#line 256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_pp.c"
static int enic_pp_associate(struct enic *enic, int vf, struct enic_port_profile *prev_pp, int *restore_pp)
{
  int __retres;
  struct enic_port_profile *pp;
  int err;
  int tmp;
  int tmp_1;
  int tmp_7;
  bool tmp_6;
  
#line 259 
  struct net_device *netdev = enic->netdev;
  
#line 262 
  int active = 1;
  
#line 264 
  tmp = enic_is_valid_pp_vf(enic,vf,& err);
  
#line 264 
  if (tmp != 0) 
    
#line 264 
    if (vf == -1) 
#line 264 
                  pp = enic->pp; else 
#line 264 
                                      pp = enic->pp + vf;
  else 
#line 264 
       pp = (struct enic_port_profile *)0;
  
#line 265 
  if (err != 0) {
    
#line 266 
    __retres = err;
    
#line 266 
    goto return_label;
  }
  else ;
  
#line 269 
  if ((unsigned int)prev_pp->request != 1U) 
#line 269 
                                            goto _LOR;
  else 
    
#line 269 
    if ((unsigned int)prev_pp->request == 1U) {
      int tmp_0;
      
#line 270 
      tmp_0 = enic_are_pp_different(prev_pp,pp);
      
#line 270 
      if (tmp_0 != 0) {
        _LOR: {
                
#line 272 
                err = (*(enic_pp_handlers[3]))(enic,vf,prev_pp,restore_pp);
                
#line 274 
                if (err != 0) {
                  
#line 275 
                  __retres = err;
                  
#line 275 
                  goto return_label;
                }
                else ;
                
#line 277 
                *restore_pp = 0;
              }
      }
      else ;
    }
    else ;
  
#line 280 
  err = (*(enic_pp_handlers[1]))(enic,vf,prev_pp,restore_pp);
  
#line 282 
  if (err != 0) {
    
#line 283 
    __retres = err;
    
#line 283 
    goto return_label;
  }
  else ;
  
#line 285 
  *restore_pp = 0;
  
#line 288 
  ldv_spin_lock_bh_83(& enic->devcmd_lock);
  
#line 288 
  tmp_1 = enic_is_valid_vf(enic,vf);
  
#line 288 
  if (tmp_1 != 0) {
    
#line 288 
    vnic_dev_cmd_proxy_by_index_start(enic->vdev,(unsigned short)((int)((unsigned short)vf)));
    
#line 288 
    err = vnic_dev_enable2(enic->vdev,active);
    
#line 288 
    vnic_dev_cmd_proxy_end(enic->vdev);
  }
  else 
#line 288 
       err = vnic_dev_enable2(enic->vdev,active);
  
#line 288 
  ldv_spin_unlock_bh_84(& enic->devcmd_lock);
  
#line 289 
  err = enic_dev_status_to_errno(err);
  
#line 290 
  if (err != 0) {
    
#line 291 
    __retres = err;
    
#line 291 
    goto return_label;
  }
  else ;
  
#line 294 
  tmp_6 = is_zero_ether_addr((u8 const *)(& pp->mac_addr));
  
#line 294 
  if (tmp_6) 
#line 294 
             tmp_7 = 0; else 
#line 294 
                             tmp_7 = 1;
  
#line 294 
  if (tmp_7) {
    int tmp_2;
    
#line 295 
    ldv_spin_lock_bh_85(& enic->devcmd_lock);
    
#line 295 
    tmp_2 = enic_is_valid_vf(enic,vf);
    
#line 295 
    if (tmp_2 != 0) {
      
#line 295 
      vnic_dev_cmd_proxy_by_index_start(enic->vdev,(unsigned short)((int)((unsigned short)vf)));
      
#line 295 
      err = vnic_dev_add_addr(enic->vdev,(u8 const *)(& pp->mac_addr));
      
#line 295 
      vnic_dev_cmd_proxy_end(enic->vdev);
    }
    else 
#line 295 
         err = vnic_dev_add_addr(enic->vdev,(u8 const *)(& pp->mac_addr));
    
#line 295 
    ldv_spin_unlock_bh_86(& enic->devcmd_lock);
  }
  else 
    
#line 297 
    if (vf == -1) {
      int tmp_5;
      bool tmp_4;
      
#line 297 
      tmp_4 = is_zero_ether_addr((u8 const *)netdev->dev_addr);
      
#line 297 
      if (tmp_4) 
#line 297 
                 tmp_5 = 0; else 
#line 297 
                                 tmp_5 = 1;
      
#line 297 
      if (tmp_5) {
        int tmp_3;
        
#line 298 
        ldv_spin_lock_bh_87(& enic->devcmd_lock);
        
#line 298 
        tmp_3 = enic_is_valid_vf(enic,vf);
        
#line 298 
        if (tmp_3 != 0) {
          
#line 298 
          vnic_dev_cmd_proxy_by_index_start(enic->vdev,(unsigned short)((int)((unsigned short)vf)));
          
#line 298 
          err = vnic_dev_add_addr(enic->vdev,(u8 const *)netdev->dev_addr);
          
#line 298 
          vnic_dev_cmd_proxy_end(enic->vdev);
        }
        else 
#line 298 
             err = vnic_dev_add_addr(enic->vdev,(u8 const *)netdev->dev_addr);
        
#line 298 
        ldv_spin_unlock_bh_88(& enic->devcmd_lock);
      }
      else ;
    }
    else ;
  
#line 301 
  __retres = 0;
  return_label: 
#line 301 
                return __retres;
}


#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_pp.c"
int enic_process_set_pp_request(struct enic *enic, int vf, struct enic_port_profile *prev_pp, int *restore_pp)
{
  int __retres;
  struct enic_port_profile *pp;
  int err;
  int tmp;
  int tmp_0;
  
#line 310 
  tmp = enic_is_valid_pp_vf(enic,vf,& err);
  
#line 310 
  if (tmp != 0) 
    
#line 310 
    if (vf == -1) 
#line 310 
                  pp = enic->pp; else 
#line 310 
                                      pp = enic->pp + vf;
  else 
#line 310 
       pp = (struct enic_port_profile *)0;
  
#line 311 
  if (err != 0) {
    
#line 312 
    __retres = err;
    
#line 312 
    goto return_label;
  }
  else ;
  
#line 314 
  if ((unsigned int)pp->request > 3U || enic_pp_handlers[(int)pp->request] == (int (*)(struct enic *, int , struct enic_port_profile *, int *))0) {
    
#line 316 
    __retres = -95;
    
#line 316 
    goto return_label;
  }
  else ;
  
#line 318 
  tmp_0 = (*(enic_pp_handlers[(int)pp->request]))(enic,vf,prev_pp,restore_pp);
  
#line 318 
  __retres = tmp_0;
  return_label: 
#line 318 
                return __retres;
}


#line 321  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_pp.c"
int enic_process_get_pp_request(struct enic *enic, int vf, int request, u16 *response)
{
  int __retres;
  int err;
  
#line 324 
  int status = 0;
  
#line 326 
  switch (request) {
    int tmp;
    int tmp_0;
    case 1: 
#line 328 
    ;
    case 2: 
#line 329 
    ;
    
#line 330 
    ldv_spin_lock_bh_89(& enic->devcmd_lock);
    
#line 330 
    tmp = enic_is_valid_vf(enic,vf);
    
#line 330 
    if (tmp != 0) {
      
#line 330 
      vnic_dev_cmd_proxy_by_index_start(enic->vdev,(unsigned short)((int)((unsigned short)vf)));
      
#line 330 
      err = vnic_dev_enable2_done(enic->vdev,& status);
      
#line 330 
      vnic_dev_cmd_proxy_end(enic->vdev);
    }
    else 
#line 330 
         err = vnic_dev_enable2_done(enic->vdev,& status);
    
#line 330 
    ldv_spin_unlock_bh_90(& enic->devcmd_lock);
    
#line 332 
    goto ldv_53466;
    case 3: 
#line 334 
    ;
    
#line 335 
    ldv_spin_lock_bh_91(& enic->devcmd_lock);
    
#line 335 
    tmp_0 = enic_is_valid_vf(enic,vf);
    
#line 335 
    if (tmp_0 != 0) {
      
#line 335 
      vnic_dev_cmd_proxy_by_index_start(enic->vdev,(unsigned short)((int)((unsigned short)vf)));
      
#line 335 
      err = vnic_dev_deinit_done(enic->vdev,& status);
      
#line 335 
      vnic_dev_cmd_proxy_end(enic->vdev);
    }
    else 
#line 335 
         err = vnic_dev_deinit_done(enic->vdev,& status);
    
#line 335 
    ldv_spin_unlock_bh_92(& enic->devcmd_lock);
    
#line 337 
    goto ldv_53466;
    default: 
#line 339 
    ;
    
#line 340 
    __retres = -22;
    
#line 340 
    goto return_label;
  }
  ldv_53466: 
#line 343 
  ;
  
#line 343 
  if (err != 0) 
#line 344 
                status = err; else ;
  
#line 346 
  switch (status) {
    case 0: 
#line 347 
    ;
    
#line 348 
    *response = (unsigned short)256U;
    
#line 349 
    goto ldv_53470;
    case 1: 
#line 350 
    ;
    
#line 351 
    *response = (unsigned short)258U;
    
#line 352 
    goto ldv_53470;
    case 6: 
#line 353 
    ;
    
#line 354 
    *response = (unsigned short)259U;
    
#line 355 
    goto ldv_53470;
    case 7: 
#line 356 
    ;
    
#line 357 
    *response = (unsigned short)260U;
    
#line 358 
    goto ldv_53470;
    case 12: 
#line 359 
    ;
    
#line 360 
    *response = (unsigned short)257U;
    
#line 361 
    goto ldv_53470;
    default: 
#line 362 
    ;
    
#line 363 
    *response = (unsigned short)261U;
    
#line 364 
    goto ldv_53470;
  }
  ldv_53470: 
#line 367 
  ;
  
#line 367 
  __retres = 0;
  return_label: 
#line 367 
                return __retres;
}


#line 749  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_pp.c.aux"
static void ldv_spin_lock_bh_73_0(spinlock_t *lock)
{
  
#line 753 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 755 
  spin_lock_bh_3(lock);
  
#line 756 
  return;
}


#line 759  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_pp.c.aux"
static void ldv_spin_unlock_bh_74_0(spinlock_t *lock)
{
  
#line 763 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 765 
  spin_unlock_bh_3(lock);
  
#line 766 
  return;
}


#line 769  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_pp.c.aux"
static void ldv_spin_lock_bh_75(spinlock_t *lock)
{
  
#line 773 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 775 
  spin_lock_bh_3(lock);
  
#line 776 
  return;
}


#line 779  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_pp.c.aux"
static void ldv_spin_unlock_bh_76(spinlock_t *lock)
{
  
#line 783 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 785 
  spin_unlock_bh_3(lock);
  
#line 786 
  return;
}


#line 789  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_pp.c.aux"
static void ldv_spin_lock_bh_77(spinlock_t *lock)
{
  
#line 793 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 795 
  spin_lock_bh_3(lock);
  
#line 796 
  return;
}


#line 799  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_pp.c.aux"
static void ldv_spin_unlock_bh_78(spinlock_t *lock)
{
  
#line 803 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 805 
  spin_unlock_bh_3(lock);
  
#line 806 
  return;
}


#line 809  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_pp.c.aux"
static void ldv_spin_lock_bh_79(spinlock_t *lock)
{
  
#line 813 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 815 
  spin_lock_bh_3(lock);
  
#line 816 
  return;
}


#line 819  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_pp.c.aux"
static void ldv_spin_unlock_bh_80(spinlock_t *lock)
{
  
#line 823 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 825 
  spin_unlock_bh_3(lock);
  
#line 826 
  return;
}


#line 829  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_pp.c.aux"
static void ldv_spin_lock_bh_81(spinlock_t *lock)
{
  
#line 833 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 835 
  spin_lock_bh_3(lock);
  
#line 836 
  return;
}


#line 839  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_pp.c.aux"
static void ldv_spin_unlock_bh_82(spinlock_t *lock)
{
  
#line 843 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 845 
  spin_unlock_bh_3(lock);
  
#line 846 
  return;
}


#line 849  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_pp.c.aux"
static void ldv_spin_lock_bh_83(spinlock_t *lock)
{
  
#line 853 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 855 
  spin_lock_bh_3(lock);
  
#line 856 
  return;
}


#line 859  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_pp.c.aux"
static void ldv_spin_unlock_bh_84(spinlock_t *lock)
{
  
#line 863 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 865 
  spin_unlock_bh_3(lock);
  
#line 866 
  return;
}


#line 869  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_pp.c.aux"
static void ldv_spin_lock_bh_85(spinlock_t *lock)
{
  
#line 873 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 875 
  spin_lock_bh_3(lock);
  
#line 876 
  return;
}


#line 879  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_pp.c.aux"
static void ldv_spin_unlock_bh_86(spinlock_t *lock)
{
  
#line 883 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 885 
  spin_unlock_bh_3(lock);
  
#line 886 
  return;
}


#line 889  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_pp.c.aux"
static void ldv_spin_lock_bh_87(spinlock_t *lock)
{
  
#line 893 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 895 
  spin_lock_bh_3(lock);
  
#line 896 
  return;
}


#line 899  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_pp.c.aux"
static void ldv_spin_unlock_bh_88(spinlock_t *lock)
{
  
#line 903 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 905 
  spin_unlock_bh_3(lock);
  
#line 906 
  return;
}


#line 909  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_pp.c.aux"
static void ldv_spin_lock_bh_89(spinlock_t *lock)
{
  
#line 913 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 915 
  spin_lock_bh_3(lock);
  
#line 916 
  return;
}


#line 919  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_pp.c.aux"
static void ldv_spin_unlock_bh_90(spinlock_t *lock)
{
  
#line 923 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 925 
  spin_unlock_bh_3(lock);
  
#line 926 
  return;
}


#line 929  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_pp.c.aux"
static void ldv_spin_lock_bh_91(spinlock_t *lock)
{
  
#line 933 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 935 
  spin_lock_bh_3(lock);
  
#line 936 
  return;
}


#line 939  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_pp.c.aux"
static void ldv_spin_unlock_bh_92(spinlock_t *lock)
{
  
#line 943 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 945 
  spin_unlock_bh_3(lock);
  
#line 946 
  return;
}


#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_HLIST_NODE(struct hlist_node *h)
{
  
#line 600 
  h->next = (struct hlist_node *)0;
  
#line 601 
  h->pprev = (struct hlist_node **)0;
  
#line 602 
  return;
}


#line 614  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void __hlist_del(struct hlist_node *n)
{
  
#line 616 
  struct hlist_node *next = n->next;
  
#line 617 
  struct hlist_node **pprev = n->pprev;
  
#line 618 
  *pprev = next;
  
#line 619 
  if (next != (struct hlist_node *)0) 
#line 620 
                                      next->pprev = pprev; else ;
  
#line 621 
  return;
}


#line 623  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void hlist_del(struct hlist_node *n)
{
  
#line 625 
  __hlist_del(n);
  
#line 626 
  n->next = (struct hlist_node *)(-2401263026317557504);
  
#line 627 
  n->pprev = (struct hlist_node **)(-2401263026316508672);
  
#line 628 
  return;
}


#line 638  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void hlist_add_head(struct hlist_node *n, struct hlist_head *h)
{
  
#line 640 
  struct hlist_node *first = h->first;
  
#line 641 
  n->next = first;
  
#line 642 
  if (first != (struct hlist_node *)0) 
#line 643 
                                       first->pprev = & n->next; else ;
  
#line 644 
  h->first = n;
  
#line 645 
  n->pprev = & h->first;
  
#line 646 
  return;
}


#line 355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh_4(spinlock_t *lock)
{
  
#line 357 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 358 
  return;
}


#line 383 
static void ldv_spin_lock_bh_74_1(spinlock_t *lock);


#line 387 
static void ldv_spin_lock_bh_76_1(spinlock_t *lock);


#line 391 
static void ldv_spin_lock_bh_78_1(spinlock_t *lock);


#line 395 
static void ldv_spin_lock_bh_80_0(spinlock_t *lock);


#line 399 
static void ldv_spin_lock_bh_83_0(spinlock_t *lock);


#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh_4(spinlock_t *lock)
{
  
#line 406 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 407 
  return;
}


#line 432 
static void ldv_spin_unlock_bh_75_1(spinlock_t *lock);


#line 436 
static void ldv_spin_unlock_bh_77_1(spinlock_t *lock);


#line 440 
static void ldv_spin_unlock_bh_79_1(spinlock_t *lock);


#line 444 
static void ldv_spin_unlock_bh_81_0(spinlock_t *lock);


#line 448 
static void ldv_spin_unlock_bh_84_0(spinlock_t *lock);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
static int ldv_mod_timer_72(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 177 
static int ldv_mod_timer_82(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 232 
static int ldv_del_timer_sync_73(struct timer_list *ldv_func_arg1);


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kmalloc(size_t size, gfp_t flags);


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
bool __skb_flow_dissect(struct sk_buff const *, struct flow_dissector *, void *, void *, __be16, int, int);


#line 170 
extern struct flow_dissector flow_keys_dissector;


#line 173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
__inline static bool skb_flow_dissect_flow_keys(struct sk_buff const *skb, struct flow_keys *flow)
{
  bool tmp;
  
#line 176 
  memset((void *)flow,0,52UL);
  
#line 177 
  tmp = __skb_flow_dissect(skb,& flow_keys_dissector,(void *)flow,(void *)0,(unsigned short)0,0,0);
  
#line 177 
  return tmp;
}


#line 943  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static __u32 skb_get_hash_raw(struct sk_buff const *skb)
{
  __u32 __retres;
  
#line 945 
  __retres = skb->hash;
  
#line 945 
  return __retres;
}


#line 682  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
bool rps_may_expire_flow(struct net_device *, u16, u32, u16);


#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.h"
int vnic_dev_classifier(struct vnic_dev *vdev, u8 cmd, u16 *entry, struct filter *data);


#line 9  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_clsf.h"
int enic_addfltr_5t(struct enic *enic, struct flow_keys *keys, u16 rq);


#line 10 
int enic_delfltr(struct enic *enic, u16 filter_id);


#line 18 
void enic_flow_may_expire(unsigned long data);


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_clsf.h"
__inline static void enic_rfs_timer_start(struct enic *enic)
{
  {
    struct lock_class_key __key;
    
#line 22 
    init_timer_key(& enic->rfs_h.rfs_may_expire,0U,"(&enic->rfs_h.rfs_may_expire)",& __key);
  }
  
#line 23 
  enic->rfs_h.rfs_may_expire.function = & enic_flow_may_expire;
  
#line 24 
  enic->rfs_h.rfs_may_expire.data = (unsigned long)enic;
  
#line 25 
  ldv_mod_timer_72(& enic->rfs_h.rfs_may_expire,jiffies + 62UL);
  
#line 26 
  return;
}


#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_clsf.h"
__inline static void enic_rfs_timer_stop(struct enic *enic)
{
  
#line 30 
  ldv_del_timer_sync_73(& enic->rfs_h.rfs_may_expire);
  
#line 31 
  return;
}


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_clsf.c"
int enic_addfltr_5t(struct enic *enic, struct flow_keys *keys, u16 rq)
{
  int __retres;
  int res;
  struct filter data;
  
#line 25 
  switch ((int)keys->basic.ip_proto) {
    case 6: 
#line 26 
    ;
    
#line 27 
    data.u.ipv4.protocol = 1U;
    
#line 28 
    goto ldv_46143;
    case 17: 
#line 29 
    ;
    
#line 30 
    data.u.ipv4.protocol = 0U;
    
#line 31 
    goto ldv_46143;
    default: 
#line 32 
    ;
    
#line 33 
    __retres = -93;
    
#line 33 
    goto return_label;
  }
  ldv_46143: 
#line 34 
  ;
  
#line 35 
  data.type = 1U;
  
#line 36 
  if (0 != 0) 
#line 36 
              data.u.ipv4.src_addr = (((keys->addrs.__anonCompField_flow_dissector_key_addrs_69.v4addrs.src << 24) | ((keys->addrs.__anonCompField_flow_dissector_key_addrs_69.v4addrs.src << 8) & 16711680U)) | ((keys->addrs.__anonCompField_flow_dissector_key_addrs_69.v4addrs.src >> 8) & 65280U)) | (keys->addrs.__anonCompField_flow_dissector_key_addrs_69.v4addrs.src >> 24); else 
                                                                    
#line 36 
                                                                    data.u.ipv4.src_addr = __fswab32(keys->addrs.__anonCompField_flow_dissector_key_addrs_69.v4addrs.src);
  
#line 37 
  if (0 != 0) 
#line 37 
              data.u.ipv4.dst_addr = (((keys->addrs.__anonCompField_flow_dissector_key_addrs_69.v4addrs.dst << 24) | ((keys->addrs.__anonCompField_flow_dissector_key_addrs_69.v4addrs.dst << 8) & 16711680U)) | ((keys->addrs.__anonCompField_flow_dissector_key_addrs_69.v4addrs.dst >> 8) & 65280U)) | (keys->addrs.__anonCompField_flow_dissector_key_addrs_69.v4addrs.dst >> 24); else 
                                                                    
#line 37 
                                                                    data.u.ipv4.dst_addr = __fswab32(keys->addrs.__anonCompField_flow_dissector_key_addrs_69.v4addrs.dst);
  
#line 38 
  if (0 != 0) 
#line 38 
              data.u.ipv4.src_port = (unsigned short)(((int)keys->ports.__anonCompField_flow_dissector_key_ports_71.__anonCompField___anonunion_2755_70.src << 8) | ((int)keys->ports.__anonCompField_flow_dissector_key_ports_71.__anonCompField___anonunion_2755_70.src >> 8)); else 
                                                                    
#line 38 
                                                                    data.u.ipv4.src_port = __fswab16((unsigned short)((int)keys->ports.__anonCompField_flow_dissector_key_ports_71.__anonCompField___anonunion_2755_70.src));
  
#line 39 
  if (0 != 0) 
#line 39 
              data.u.ipv4.dst_port = (unsigned short)(((int)keys->ports.__anonCompField_flow_dissector_key_ports_71.__anonCompField___anonunion_2755_70.dst << 8) | ((int)keys->ports.__anonCompField_flow_dissector_key_ports_71.__anonCompField___anonunion_2755_70.dst >> 8)); else 
                                                                    
#line 39 
                                                                    data.u.ipv4.dst_port = __fswab16((unsigned short)((int)keys->ports.__anonCompField_flow_dissector_key_ports_71.__anonCompField___anonunion_2755_70.dst));
  
#line 40 
  data.u.ipv4.flags = 31U;
  
#line 42 
  ldv_spin_lock_bh_74_1(& enic->devcmd_lock);
  
#line 43 
  res = vnic_dev_classifier(enic->vdev,(unsigned char)0,& rq,& data);
  
#line 44 
  ldv_spin_unlock_bh_75_1(& enic->devcmd_lock);
  
#line 45 
  if (res == 0) 
#line 45 
                res = (int)rq; else 
#line 45 
                                    res = res;
  
#line 47 
  __retres = res;
  return_label: 
#line 47 
                return __retres;
}


#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_clsf.c"
int enic_delfltr(struct enic *enic, u16 filter_id)
{
  int ret;
  
#line 61 
  ldv_spin_lock_bh_76_1(& enic->devcmd_lock);
  
#line 62 
  ret = vnic_dev_classifier(enic->vdev,(unsigned char)1,& filter_id,(struct filter *)0);
  
#line 63 
  ldv_spin_unlock_bh_77_1(& enic->devcmd_lock);
  
#line 65 
  return ret;
}


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_clsf.c"
void enic_rfs_flw_tbl_init(struct enic *enic)
{
  int i;
  
#line 75 
  spinlock_check(& enic->rfs_h.lock);
  {
    struct lock_class_key __key;
    
#line 75 
    __raw_spin_lock_init(& enic->rfs_h.lock.__anonCompField_spinlock_18.rlock,"&(&enic->rfs_h.lock)->rlock",& __key);
  }
  
#line 76 
  i = 0;
  
#line 76 
  goto ldv_46157;
  ldv_46156: 
#line 77 
  ;
  
#line 77 
  enic->rfs_h.ht_head[i].first = (struct hlist_node *)0;
  
#line 76 
  i += 1;
  ldv_46157: 
#line 77 
  ;
  
#line 76 
  if (i <= 1023) 
#line 78 
                 goto ldv_46156; else 
#line 81 
                                      goto ldv_46158;
  ldv_46158: 
#line 82 
  ;
  
#line 78 
  enic->rfs_h.max = enic->config.num_arfs;
  
#line 79 
  enic->rfs_h.free = (int)enic->rfs_h.max;
  
#line 80 
  enic->rfs_h.toclean = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(10))))0U;
  
#line 81 
  enic_rfs_timer_start(enic);
  
#line 82 
  return;
}


#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_clsf.c"
void enic_rfs_flw_tbl_free(struct enic *enic)
{
  int i;
  
#line 88 
  enic_rfs_timer_stop(enic);
  
#line 89 
  ldv_spin_lock_bh_78_1(& enic->rfs_h.lock);
  
#line 90 
  enic->rfs_h.free = 0;
  
#line 91 
  i = 0;
  
#line 91 
  goto ldv_46179;
  ldv_46178: 
#line 92 
  ;
  {
    struct hlist_head *hhead;
    struct hlist_node *tmp;
    struct enic_rfs_fltr_node *n;
    struct enic_rfs_fltr_node *tmp_2;
    struct enic_rfs_fltr_node *tmp_5;
    
#line 96 
    hhead = & enic->rfs_h.ht_head[i];
    {
      struct enic_rfs_fltr_node *tmp_1;
      
#line 97 
      struct hlist_node *____ptr = hhead->first;
      
#line 97 
      if (____ptr != (struct hlist_node *)0) {
        struct enic_rfs_fltr_node *tmp_0;
        {
          
#line 97 
          struct hlist_node const *__mptr = (struct hlist_node const *)____ptr;
          
#line 97 
          tmp_0 = (struct enic_rfs_fltr_node *)__mptr + 18446744073709551552U;
        }
        
#line 97 
        tmp_1 = tmp_0;
      }
      else 
#line 97 
           tmp_1 = (struct enic_rfs_fltr_node *)0;
      
#line 97 
      tmp_2 = tmp_1;
    }
    
#line 97 
    n = tmp_2;
    
#line 97 
    goto ldv_46176;
    ldv_46175: 
#line 98 
    ;
    
#line 98 
    enic_delfltr(enic,(unsigned short)((int)n->fltr_id));
    
#line 99 
    hlist_del(& n->node);
    
#line 100 
    kfree((void const *)n);
    {
      struct enic_rfs_fltr_node *tmp_4;
      
#line 97 
      struct hlist_node *____ptr_0 = tmp;
      
#line 97 
      if (____ptr_0 != (struct hlist_node *)0) {
        struct enic_rfs_fltr_node *tmp_3;
        {
          
#line 97 
          struct hlist_node const *__mptr_0 = (struct hlist_node const *)____ptr_0;
          
#line 97 
          tmp_3 = (struct enic_rfs_fltr_node *)__mptr_0 + 18446744073709551552U;
        }
        
#line 97 
        tmp_4 = tmp_3;
      }
      else 
#line 97 
           tmp_4 = (struct enic_rfs_fltr_node *)0;
      
#line 97 
      tmp_5 = tmp_4;
    }
    
#line 97 
    n = tmp_5;
    ldv_46176: 
#line 99 
    ;
    
#line 97 
    if (n != (struct enic_rfs_fltr_node *)0) {
      
#line 97 
      tmp = n->node.next;
      
#line 97 
      if (1 != 0) 
#line 99 
                  goto ldv_46175; else 
#line 102 
                                       goto ldv_46177;
    }
    else 
#line 102 
         goto ldv_46177;
    ldv_46177: 
#line 103 
    ;
  }
  
#line 91 
  i += 1;
  ldv_46179: 
#line 92 
  ;
  
#line 91 
  if (i <= 1023) 
#line 93 
                 goto ldv_46178; else 
#line 96 
                                      goto ldv_46180;
  ldv_46180: 
#line 97 
  ;
  
#line 103 
  ldv_spin_unlock_bh_79_1(& enic->rfs_h.lock);
  
#line 104 
  return;
}


#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_clsf.c"
struct enic_rfs_fltr_node *htbl_fltr_search(struct enic *enic, u16 fltr_id)
{
  struct enic_rfs_fltr_node *__retres;
  int i;
  
#line 110 
  i = 0;
  
#line 110 
  goto ldv_46202;
  ldv_46201: 
#line 111 
  ;
  {
    struct hlist_head *hhead;
    struct hlist_node *tmp;
    struct enic_rfs_fltr_node *n;
    struct enic_rfs_fltr_node *tmp_2;
    struct enic_rfs_fltr_node *tmp_5;
    
#line 115 
    hhead = & enic->rfs_h.ht_head[i];
    {
      struct enic_rfs_fltr_node *tmp_1;
      
#line 116 
      struct hlist_node *____ptr = hhead->first;
      
#line 116 
      if (____ptr != (struct hlist_node *)0) {
        struct enic_rfs_fltr_node *tmp_0;
        {
          
#line 116 
          struct hlist_node const *__mptr = (struct hlist_node const *)____ptr;
          
#line 116 
          tmp_0 = (struct enic_rfs_fltr_node *)__mptr + 18446744073709551552U;
        }
        
#line 116 
        tmp_1 = tmp_0;
      }
      else 
#line 116 
           tmp_1 = (struct enic_rfs_fltr_node *)0;
      
#line 116 
      tmp_2 = tmp_1;
    }
    
#line 116 
    n = tmp_2;
    
#line 116 
    goto ldv_46199;
    ldv_46198: 
#line 117 
    ;
    
#line 117 
    if ((int)n->fltr_id == (int)fltr_id) {
      
#line 118 
      __retres = n;
      
#line 118 
      goto return_label;
    }
    else ;
    {
      struct enic_rfs_fltr_node *tmp_4;
      
#line 116 
      struct hlist_node *____ptr_0 = tmp;
      
#line 116 
      if (____ptr_0 != (struct hlist_node *)0) {
        struct enic_rfs_fltr_node *tmp_3;
        {
          
#line 116 
          struct hlist_node const *__mptr_0 = (struct hlist_node const *)____ptr_0;
          
#line 116 
          tmp_3 = (struct enic_rfs_fltr_node *)__mptr_0 + 18446744073709551552U;
        }
        
#line 116 
        tmp_4 = tmp_3;
      }
      else 
#line 116 
           tmp_4 = (struct enic_rfs_fltr_node *)0;
      
#line 116 
      tmp_5 = tmp_4;
    }
    
#line 116 
    n = tmp_5;
    ldv_46199: 
#line 118 
    ;
    
#line 116 
    if (n != (struct enic_rfs_fltr_node *)0) {
      
#line 116 
      tmp = n->node.next;
      
#line 116 
      if (1 != 0) 
#line 118 
                  goto ldv_46198; else 
#line 121 
                                       goto ldv_46200;
    }
    else 
#line 121 
         goto ldv_46200;
    ldv_46200: 
#line 122 
    ;
  }
  
#line 110 
  i += 1;
  ldv_46202: 
#line 111 
  ;
  
#line 110 
  if (i <= 1023) 
#line 112 
                 goto ldv_46201; else 
#line 115 
                                      goto ldv_46203;
  ldv_46203: 
#line 116 
  ;
  
#line 121 
  __retres = (struct enic_rfs_fltr_node *)0;
  return_label: 
#line 121 
                return __retres;
}


#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_clsf.c"
void enic_flow_may_expire(unsigned long data)
{
  bool res;
  int j;
  
#line 127 
  struct enic *enic = (struct enic *)data;
  
#line 131 
  ldv_spin_lock_bh_80_0(& enic->rfs_h.lock);
  
#line 132 
  j = 0;
  
#line 132 
  goto ldv_46227;
  ldv_46226: 
#line 133 
  ;
  {
    struct hlist_head *hhead;
    struct hlist_node *tmp;
    struct enic_rfs_fltr_node *n;
    u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(10))) tmp_0;
    struct enic_rfs_fltr_node *tmp_3;
    struct enic_rfs_fltr_node *tmp_7;
    
#line 137 
    tmp_0 = enic->rfs_h.toclean;
    
#line 137 
    enic->rfs_h.toclean = (u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(10))))((int)enic->rfs_h.toclean + 1);
    
#line 137 
    hhead = & enic->rfs_h.ht_head[(int)tmp_0];
    {
      struct enic_rfs_fltr_node *tmp_2;
      
#line 138 
      struct hlist_node *____ptr = hhead->first;
      
#line 138 
      if (____ptr != (struct hlist_node *)0) {
        struct enic_rfs_fltr_node *tmp_1;
        {
          
#line 138 
          struct hlist_node const *__mptr = (struct hlist_node const *)____ptr;
          
#line 138 
          tmp_1 = (struct enic_rfs_fltr_node *)__mptr + 18446744073709551552U;
        }
        
#line 138 
        tmp_2 = tmp_1;
      }
      else 
#line 138 
           tmp_2 = (struct enic_rfs_fltr_node *)0;
      
#line 138 
      tmp_3 = tmp_2;
    }
    
#line 138 
    n = tmp_3;
    
#line 138 
    goto ldv_46224;
    ldv_46223: 
#line 139 
    ;
    
#line 139 
    res = rps_may_expire_flow(enic->netdev,(unsigned short)((int)n->rq_id),n->flow_id,(unsigned short)((int)n->fltr_id));
    
#line 141 
    if ((int)res != 0) {
      int tmp_4;
      
#line 142 
      tmp_4 = enic_delfltr(enic,(unsigned short)((int)n->fltr_id));
      
#line 142 
      res = (_Bool)(tmp_4 != 0);
      
#line 143 
      if ((long)((int)res != 0) != 0L) 
#line 144 
                                       goto ldv_46222; else ;
      
#line 145 
      hlist_del(& n->node);
      
#line 146 
      kfree((void const *)n);
      
#line 147 
      enic->rfs_h.free += 1;
    }
    else ;
    ldv_46222: 
#line 149 
    ;
    {
      struct enic_rfs_fltr_node *tmp_6;
      
#line 138 
      struct hlist_node *____ptr_0 = tmp;
      
#line 138 
      if (____ptr_0 != (struct hlist_node *)0) {
        struct enic_rfs_fltr_node *tmp_5;
        {
          
#line 138 
          struct hlist_node const *__mptr_0 = (struct hlist_node const *)____ptr_0;
          
#line 138 
          tmp_5 = (struct enic_rfs_fltr_node *)__mptr_0 + 18446744073709551552U;
        }
        
#line 138 
        tmp_6 = tmp_5;
      }
      else 
#line 138 
           tmp_6 = (struct enic_rfs_fltr_node *)0;
      
#line 138 
      tmp_7 = tmp_6;
    }
    
#line 138 
    n = tmp_7;
    ldv_46224: 
#line 140 
    ;
    
#line 138 
    if (n != (struct enic_rfs_fltr_node *)0) {
      
#line 138 
      tmp = n->node.next;
      
#line 138 
      if (1 != 0) 
#line 140 
                  goto ldv_46223; else 
#line 143 
                                       goto ldv_46225;
    }
    else 
#line 143 
         goto ldv_46225;
    ldv_46225: 
#line 144 
    ;
  }
  
#line 132 
  j += 1;
  ldv_46227: 
#line 133 
  ;
  
#line 132 
  if (j <= 127) 
#line 134 
                goto ldv_46226; else 
#line 137 
                                     goto ldv_46228;
  ldv_46228: 
#line 138 
  ;
  
#line 151 
  ldv_spin_unlock_bh_81_0(& enic->rfs_h.lock);
  
#line 152 
  ldv_mod_timer_82(& enic->rfs_h.rfs_may_expire,jiffies + 62UL);
  
#line 153 
  return;
}


#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_clsf.c"
static struct enic_rfs_fltr_node *htbl_key_search(struct hlist_head *h, struct flow_keys *k)
{
  struct enic_rfs_fltr_node *__retres;
  struct enic_rfs_fltr_node *tpos;
  struct enic_rfs_fltr_node *tmp_1;
  struct enic_rfs_fltr_node *tmp_4;
  {
    struct enic_rfs_fltr_node *tmp_0;
    
#line 160 
    struct hlist_node *____ptr = h->first;
    
#line 160 
    if (____ptr != (struct hlist_node *)0) {
      struct enic_rfs_fltr_node *tmp;
      {
        
#line 160 
        struct hlist_node const *__mptr = (struct hlist_node const *)____ptr;
        
#line 160 
        tmp = (struct enic_rfs_fltr_node *)__mptr + 18446744073709551552U;
      }
      
#line 160 
      tmp_0 = tmp;
    }
    else 
#line 160 
         tmp_0 = (struct enic_rfs_fltr_node *)0;
    
#line 160 
    tmp_1 = tmp_0;
  }
  
#line 160 
  tpos = tmp_1;
  
#line 160 
  goto ldv_46243;
  ldv_46242: 
#line 161 
  ;
  
#line 161 
  if ((((tpos->keys.addrs.__anonCompField_flow_dissector_key_addrs_69.v4addrs.src == k->addrs.__anonCompField_flow_dissector_key_addrs_69.v4addrs.src && tpos->keys.addrs.__anonCompField_flow_dissector_key_addrs_69.v4addrs.dst == k->addrs.__anonCompField_flow_dissector_key_addrs_69.v4addrs.dst) && tpos->keys.ports.__anonCompField_flow_dissector_key_ports_71.ports == k->ports.__anonCompField_flow_dissector_key_ports_71.ports) && (int)tpos->keys.basic.ip_proto == (int)k->basic.ip_proto) && (int)tpos->keys.basic.n_proto == (int)k->basic.n_proto) {
    
#line 166 
    __retres = tpos;
    
#line 166 
    goto return_label;
  }
  else ;
  {
    struct enic_rfs_fltr_node *tmp_3;
    
#line 160 
    struct hlist_node *____ptr_0 = tpos->node.next;
    
#line 160 
    if (____ptr_0 != (struct hlist_node *)0) {
      struct enic_rfs_fltr_node *tmp_2;
      {
        
#line 160 
        struct hlist_node const *__mptr_0 = (struct hlist_node const *)____ptr_0;
        
#line 160 
        tmp_2 = (struct enic_rfs_fltr_node *)__mptr_0 + 18446744073709551552U;
      }
      
#line 160 
      tmp_3 = tmp_2;
    }
    else 
#line 160 
         tmp_3 = (struct enic_rfs_fltr_node *)0;
    
#line 160 
    tmp_4 = tmp_3;
  }
  
#line 160 
  tpos = tmp_4;
  ldv_46243: 
#line 162 
  ;
  
#line 160 
  if (tpos != (struct enic_rfs_fltr_node *)0) 
#line 162 
                                              goto ldv_46242; else 
#line 165 
                                                                   goto ldv_46244;
  ldv_46244: 
#line 166 
  ;
  
#line 167 
  __retres = (struct enic_rfs_fltr_node *)0;
  return_label: 
#line 167 
                return __retres;
}


#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/enic_clsf.c"
int enic_rx_flow_steer(struct net_device *dev, struct sk_buff const *skb, u16 rxq_index, u32 flow_id)
{
  int __retres;
  struct flow_keys keys;
  struct enic_rfs_fltr_node *n;
  struct enic *enic;
  u16 tbl_idx;
  int res;
  int i;
  bool tmp_0;
  __u32 tmp_1;
  
#line 179 
  enic = (struct enic *)netdev_priv((struct net_device const *)dev);
  
#line 180 
  tmp_0 = skb_flow_dissect_flow_keys(skb,& keys);
  
#line 180 
  res = (int)tmp_0;
  
#line 181 
  if ((res == 0 || (unsigned int)keys.basic.n_proto != 8U) || ((unsigned int)keys.basic.ip_proto != 6U && (unsigned int)keys.basic.ip_proto != 17U)) {
    
#line 184 
    __retres = -93;
    
#line 184 
    goto return_label;
  }
  else ;
  
#line 186 
  tmp_1 = skb_get_hash_raw(skb);
  
#line 186 
  tbl_idx = (unsigned short)((unsigned int)((unsigned short)tmp_1) & 1023U);
  
#line 187 
  ldv_spin_lock_bh_83_0(& enic->rfs_h.lock);
  
#line 188 
  n = htbl_key_search(& enic->rfs_h.ht_head[(int)tbl_idx],& keys);
  
#line 190 
  if (n != (struct enic_rfs_fltr_node *)0) {
    
#line 191 
    if ((int)n->rq_id == (int)rxq_index) {
      
#line 192 
      res = -17;
      
#line 193 
      goto ret_unlock;
    }
    else ;
    
#line 206 
    enic->rfs_h.free -= 1;
    
#line 206 
    i = enic->rfs_h.free;
    
#line 208 
    if ((long)(i < 0) != 0L) {
      
#line 209 
      enic->rfs_h.free += 1;
      
#line 210 
      res = enic_delfltr(enic,(unsigned short)((int)n->fltr_id));
      
#line 211 
      if ((long)(res < 0) != 0L) 
#line 212 
                                 goto ret_unlock; else ;
      
#line 213 
      res = enic_addfltr_5t(enic,& keys,(unsigned short)((int)rxq_index));
      
#line 214 
      if (res < 0) {
        
#line 215 
        hlist_del(& n->node);
        
#line 216 
        enic->rfs_h.free += 1;
        
#line 217 
        goto ret_unlock;
      }
      else ;
    }
    else {
      int ret;
      
#line 223 
      res = enic_addfltr_5t(enic,& keys,(unsigned short)((int)rxq_index));
      
#line 224 
      if (res < 0) {
        
#line 225 
        enic->rfs_h.free += 1;
        
#line 226 
        goto ret_unlock;
      }
      else ;
      
#line 228 
      ret = enic_delfltr(enic,(unsigned short)((int)n->fltr_id));
      
#line 232 
      if ((long)(ret < 0) != 0L) {
        struct enic_rfs_fltr_node *d;
        struct hlist_head *head;
        
#line 236 
        head = & enic->rfs_h.ht_head[(int)tbl_idx];
        
#line 237 
        d = (struct enic_rfs_fltr_node *)kmalloc(80UL,32U);
        
#line 238 
        if (d != (struct enic_rfs_fltr_node *)0) {
          
#line 239 
          d->fltr_id = n->fltr_id;
          
#line 240 
          INIT_HLIST_NODE(& d->node);
          
#line 241 
          hlist_add_head(& d->node,head);
        }
        else ;
      }
      else 
#line 244 
           enic->rfs_h.free += 1;
    }
    
#line 247 
    n->rq_id = rxq_index;
    
#line 248 
    n->fltr_id = (unsigned short)res;
    
#line 249 
    n->flow_id = flow_id;
  }
  else {
    
#line 252 
    enic->rfs_h.free -= 1;
    
#line 252 
    i = enic->rfs_h.free;
    
#line 253 
    if (i <= 0) {
      
#line 254 
      enic->rfs_h.free += 1;
      
#line 255 
      res = -16;
      
#line 256 
      goto ret_unlock;
    }
    else ;
    
#line 259 
    n = (struct enic_rfs_fltr_node *)kmalloc(80UL,32U);
    
#line 260 
    if (n == (struct enic_rfs_fltr_node *)0) {
      
#line 261 
      res = -12;
      
#line 262 
      enic->rfs_h.free += 1;
      
#line 263 
      goto ret_unlock;
    }
    else ;
    
#line 266 
    res = enic_addfltr_5t(enic,& keys,(unsigned short)((int)rxq_index));
    
#line 267 
    if (res < 0) {
      
#line 268 
      kfree((void const *)n);
      
#line 269 
      enic->rfs_h.free += 1;
      
#line 270 
      goto ret_unlock;
    }
    else ;
    
#line 272 
    n->rq_id = rxq_index;
    
#line 273 
    n->fltr_id = (unsigned short)res;
    
#line 274 
    n->flow_id = flow_id;
    
#line 275 
    n->keys = keys;
    
#line 276 
    INIT_HLIST_NODE(& n->node);
    
#line 277 
    hlist_add_head(& n->node,& enic->rfs_h.ht_head[(int)tbl_idx]);
  }
  ret_unlock: 
#line 280 
  ;
  
#line 281 
  ldv_spin_unlock_bh_84_0(& enic->rfs_h.lock);
  
#line 282 
  __retres = res;
  return_label: 
#line 282 
                return __retres;
}


#line 400  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_clsf.c.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 403 
  tmp = ldv_kmalloc(size,flags);
  
#line 403 
  return tmp;
}


#line 738  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_clsf.c.aux"
static int ldv_mod_timer_72(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 742 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 742 
  return tmp;
}


#line 746  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_clsf.c.aux"
static int ldv_del_timer_sync_73(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 750 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 750 
  return tmp;
}


#line 754  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_clsf.c.aux"
static void ldv_spin_lock_bh_74_1(spinlock_t *lock)
{
  
#line 758 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 760 
  spin_lock_bh_4(lock);
  
#line 761 
  return;
}


#line 764  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_clsf.c.aux"
static void ldv_spin_unlock_bh_75_1(spinlock_t *lock)
{
  
#line 768 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 770 
  spin_unlock_bh_4(lock);
  
#line 771 
  return;
}


#line 774  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_clsf.c.aux"
static void ldv_spin_lock_bh_76_1(spinlock_t *lock)
{
  
#line 778 
  ldv_spin_model_lock((char *)"devcmd_lock_of_enic");
  
#line 780 
  spin_lock_bh_4(lock);
  
#line 781 
  return;
}


#line 784  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_clsf.c.aux"
static void ldv_spin_unlock_bh_77_1(spinlock_t *lock)
{
  
#line 788 
  ldv_spin_model_unlock((char *)"devcmd_lock_of_enic");
  
#line 790 
  spin_unlock_bh_4(lock);
  
#line 791 
  return;
}


#line 794  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_clsf.c.aux"
static void ldv_spin_lock_bh_78_1(spinlock_t *lock)
{
  
#line 798 
  ldv_spin_model_lock((char *)"lock_of_enic_rfs_flw_tbl");
  
#line 800 
  spin_lock_bh_4(lock);
  
#line 801 
  return;
}


#line 804  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_clsf.c.aux"
static void ldv_spin_unlock_bh_79_1(spinlock_t *lock)
{
  
#line 808 
  ldv_spin_model_unlock((char *)"lock_of_enic_rfs_flw_tbl");
  
#line 810 
  spin_unlock_bh_4(lock);
  
#line 811 
  return;
}


#line 814  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_clsf.c.aux"
static void ldv_spin_lock_bh_80_0(spinlock_t *lock)
{
  
#line 818 
  ldv_spin_model_lock((char *)"lock_of_enic_rfs_flw_tbl");
  
#line 820 
  spin_lock_bh_4(lock);
  
#line 821 
  return;
}


#line 824  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_clsf.c.aux"
static void ldv_spin_unlock_bh_81_0(spinlock_t *lock)
{
  
#line 828 
  ldv_spin_model_unlock((char *)"lock_of_enic_rfs_flw_tbl");
  
#line 830 
  spin_unlock_bh_4(lock);
  
#line 831 
  return;
}


#line 834  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_clsf.c.aux"
static int ldv_mod_timer_82(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 838 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 838 
  return tmp;
}


#line 842  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_clsf.c.aux"
static void ldv_spin_lock_bh_83_0(spinlock_t *lock)
{
  
#line 846 
  ldv_spin_model_lock((char *)"lock_of_enic_rfs_flw_tbl");
  
#line 848 
  spin_lock_bh_4(lock);
  
#line 849 
  return;
}


#line 852  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_enic_clsf.c.aux"
static void ldv_spin_unlock_bh_84_0(spinlock_t *lock)
{
  
#line 856 
  ldv_spin_model_unlock((char *)"lock_of_enic_rfs_flw_tbl");
  
#line 858 
  spin_unlock_bh_4(lock);
  
#line 859 
  return;
}


#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned long readq(void const volatile *addr)
{
  unsigned long ret;
  
#line 91 
  ldv_inline_asm();
  
#line 90 
  return ret;
}


#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/iomap.h"
unsigned int ioread8(void *);


#line 581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kzalloc_2(size_t size, gfp_t flags);


#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.h"
u32 vnic_dev_intr_coal_timer_hw_to_usec(struct vnic_dev *vdev, u32 hw_cycles);


#line 130 
struct pci_dev *vnic_dev_get_pdev(struct vnic_dev *vdev);


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
void *vnic_dev_priv(struct vnic_dev *vdev)
{
  void *__retres;
  
#line 78 
  __retres = vdev->priv;
  
#line 78 
  return __retres;
}


#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
static int vnic_dev_discover_res(struct vnic_dev *vdev, struct vnic_dev_bar *bar, unsigned int num_bars)
{
  int __retres;
  struct vnic_resource_header *rh;
  struct mgmt_barmap_hdr *mrh;
  struct vnic_resource *r;
  u8 type;
  unsigned int tmp_3;
  unsigned int tmp_5;
  unsigned int tmp_9;
  
#line 89 
  if (num_bars == 0U) {
    
#line 90 
    __retres = -22;
    
#line 90 
    goto return_label;
  }
  else ;
  
#line 92 
  if (bar->len <= 223UL) {
    
#line 93 
    printk("\001");
    
#line 94 
    __retres = -22;
    
#line 94 
    goto return_label;
  }
  else ;
  
#line 97 
  rh = (struct vnic_resource_header *)bar->vaddr;
  
#line 98 
  mrh = (struct mgmt_barmap_hdr *)bar->vaddr;
  
#line 99 
  if (rh == (struct vnic_resource_header *)0) {
    
#line 100 
    printk("\001");
    
#line 101 
    __retres = -22;
    
#line 101 
    goto return_label;
  }
  else ;
  
#line 105 
  tmp_3 = ioread32((void *)(& rh->magic));
  
#line 105 
  if (tmp_3 != 1986947427U) 
#line 105 
                            goto _LOR_0;
  else {
    unsigned int tmp_4;
    
#line 105 
    tmp_4 = ioread32((void *)(& rh->version));
    
#line 105 
    if (tmp_4 != 0U) {
      unsigned int tmp_1;
      _LOR_0: 
#line 107 
      tmp_1 = ioread32((void *)(& mrh->magic));
      
#line 107 
      if (tmp_1 != 1414350669U) 
#line 107 
                                goto _LOR;
      else {
        unsigned int tmp_2;
        
#line 107 
        tmp_2 = ioread32((void *)(& mrh->version));
        
#line 107 
        if (tmp_2 != 0U) {
          _LOR: {
                  unsigned int tmp;
                  unsigned int tmp_0;
                  
#line 109 
                  tmp = ioread32((void *)(& rh->version));
                  
#line 109 
                  tmp_0 = ioread32((void *)(& rh->magic));
                  
#line 109 
                  printk("\001",1986947427L,0L,1414350669L,0L,tmp_0,tmp);
                  
#line 114 
                  __retres = -22;
                  
#line 114 
                  goto return_label;
                }
        }
        else ;
      }
    }
    else ;
  }
  
#line 118 
  tmp_5 = ioread32((void *)(& mrh->magic));
  
#line 118 
  if (tmp_5 == 1414350669U) 
#line 119 
                            r = (struct vnic_resource *)(mrh + 1U); else 
                                                                    
#line 121 
                                                                    r = (struct vnic_resource *)(rh + 1U);
  
#line 124 
  goto ldv_29877;
  ldv_29886: 
#line 125 
  ;
  {
    unsigned int tmp_6;
    u32 len;
    
#line 126 
    tmp_6 = ioread8((void *)(& r->bar));
    
#line 126 
    u8 bar_num = (unsigned char)tmp_6;
    
#line 127 
    u32 bar_offset = ioread32((void *)(& r->bar_offset));
    
#line 128 
    u32 count = ioread32((void *)(& r->count));
    
#line 131 
    r += 1;
    
#line 133 
    if ((unsigned int)bar_num >= num_bars) 
#line 134 
                                           goto ldv_29877; else ;
    
#line 136 
    if ((bar + (int)bar_num)->len == 0UL || (bar + (int)bar_num)->vaddr == (void *)0) 
      
#line 137 
      goto ldv_29877; else ;
    
#line 139 
    switch ((int)type) {
      case 1: 
#line 140 
      ;
      case 2: 
#line 141 
      ;
      case 3: 
#line 142 
      ;
      case 10: 
#line 143 
      ;
      
#line 145 
      len = count * 128U;
      
#line 146 
      if ((unsigned long)(len + bar_offset) > (bar + (int)bar_num)->len) {
        
#line 147 
        printk("\001",(int)type,bar_offset,len,(bar + (int)bar_num)->len);
        
#line 153 
        __retres = -22;
        
#line 153 
        goto return_label;
      }
      else ;
      
#line 155 
      goto ldv_29882;
      case 13: 
#line 156 
      ;
      case 16: 
#line 157 
      ;
      
#line 158 
      len = count;
      
#line 159 
      goto ldv_29882;
      default: 
#line 160 
      ;
      
#line 161 
      goto ldv_29877;
    }
    ldv_29882: 
#line 164 
    ;
    
#line 164 
    vdev->res[(int)type].count = count;
    
#line 165 
    vdev->res[(int)type].vaddr = (bar + (int)bar_num)->vaddr + bar_offset;
    
#line 167 
    vdev->res[(int)type].bus_addr = (bar + (int)bar_num)->bus_addr + (unsigned long long)bar_offset;
  }
  ldv_29877: 
#line 169 
  ;
  
#line 124 
  tmp_9 = ioread8((void *)(& r->type));
  
#line 124 
  type = (unsigned char)tmp_9;
  
#line 124 
  if ((unsigned int)type != 0U) 
#line 126 
                                goto ldv_29886; else 
#line 129 
                                                     goto ldv_29887;
  ldv_29887: 
#line 130 
  ;
  
#line 170 
  __retres = 0;
  return_label: 
#line 170 
                return __retres;
}


#line 173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
unsigned int vnic_dev_get_res_count(struct vnic_dev *vdev, enum vnic_res_type type)
{
  unsigned int __retres;
  
#line 176 
  __retres = vdev->res[(unsigned int)type].count;
  
#line 176 
  return __retres;
}


#line 178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
static char const __kstrtab_vnic_dev_get_res_count[23U] = {(char)'v', (char)'n', (char)'i', (char)'c', (char)'_', (char)'d', (char)'e', (char)'v', (char)'_', (char)'g', (char)'e', (char)'t', (char)'_', (char)'r', (char)'e', (char)'s', (char)'_', (char)'c', (char)'o', (char)'u', (char)'n', (char)'t', (char)'\000'};

#line 178 
struct kernel_symbol const __ksymtab_vnic_dev_get_res_count;


#line 178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
struct kernel_symbol const __ksymtab_vnic_dev_get_res_count = {.value = (unsigned long)(& vnic_dev_get_res_count), .name = (char const *)(& __kstrtab_vnic_dev_get_res_count)};

#line 180  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
void *vnic_dev_get_res(struct vnic_dev *vdev, enum vnic_res_type type, unsigned int index)
{
  void *__retres;
  
#line 183 
  if (vdev->res[(unsigned int)type].vaddr == (void *)0) {
    
#line 184 
    __retres = (void *)0;
    
#line 184 
    goto return_label;
  }
  else ;
  
#line 186 
  switch ((unsigned int)type) {
    case (unsigned int)1: 
#line 187 
    ;
    case (unsigned int)2: 
#line 188 
    ;
    case (unsigned int)3: 
#line 189 
    ;
    case (unsigned int)10: 
#line 190 
    ;
    
#line 191 
    __retres = vdev->res[(unsigned int)type].vaddr + index * 128U;
    
#line 191 
    goto return_label;
    default: 
#line 193 
    ;
    
#line 194 
    __retres = vdev->res[(unsigned int)type].vaddr;
    
#line 194 
    goto return_label;
  }
  return_label: 
#line 186 
                return __retres;
}


#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
static char const __kstrtab_vnic_dev_get_res[17U] = {(char)'v', (char)'n', (char)'i', (char)'c', (char)'_', (char)'d', (char)'e', (char)'v', (char)'_', (char)'g', (char)'e', (char)'t', (char)'_', (char)'r', (char)'e', (char)'s', (char)'\000'};

#line 197 
struct kernel_symbol const __ksymtab_vnic_dev_get_res;


#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
struct kernel_symbol const __ksymtab_vnic_dev_get_res = {.value = (unsigned long)(& vnic_dev_get_res), .name = (char const *)(& __kstrtab_vnic_dev_get_res)};

#line 199  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
static unsigned int vnic_dev_desc_ring_size(struct vnic_dev_ring *ring, unsigned int desc_count, unsigned int desc_size)
{
  unsigned int __retres;
  
#line 208 
  unsigned int count_align = 32U;
  
#line 209 
  unsigned int desc_align = 16U;
  
#line 211 
  ring->base_align = 512UL;
  
#line 213 
  if (desc_count == 0U) 
#line 214 
                        desc_count = 4096U; else ;
  
#line 216 
  ring->desc_count = ((count_align + desc_count) + 4294967295U) & - count_align;
  
#line 218 
  ring->desc_size = ((desc_align + desc_size) + 4294967295U) & - desc_align;
  
#line 220 
  ring->size = (unsigned long)(ring->desc_count * ring->desc_size);
  
#line 221 
  ring->size_unaligned = ring->size + ring->base_align;
  
#line 223 
  __retres = (unsigned int)ring->size_unaligned;
  
#line 223 
  return __retres;
}


#line 226  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
void vnic_dev_clear_desc_ring(struct vnic_dev_ring *ring)
{
  
#line 228 
  memset(ring->descs,0,ring->size);
  
#line 229 
  return;
}


#line 231  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_alloc_desc_ring(struct vnic_dev *vdev, struct vnic_dev_ring *ring, unsigned int desc_count, unsigned int desc_size)
{
  int __retres;
  
#line 234 
  vnic_dev_desc_ring_size(ring,desc_count,desc_size);
  
#line 236 
  ring->descs_unaligned = pci_alloc_consistent(vdev->pdev,ring->size_unaligned,& ring->base_addr_unaligned);
  
#line 240 
  if (ring->descs_unaligned == (void *)0) {
    
#line 241 
    printk("\001",(int)ring->size);
    
#line 243 
    __retres = -12;
    
#line 243 
    goto return_label;
  }
  else ;
  
#line 246 
  ring->base_addr = ((ring->base_addr_unaligned + (unsigned long long)ring->base_align) + 18446744073709551615ULL) & - ((unsigned long long)ring->base_align);
  
#line 248 
  ring->descs = ring->descs_unaligned + (ring->base_addr - ring->base_addr_unaligned);
  
#line 251 
  vnic_dev_clear_desc_ring(ring);
  
#line 253 
  ring->desc_avail = ring->desc_count + 4294967295U;
  
#line 255 
  __retres = 0;
  return_label: 
#line 255 
                return __retres;
}


#line 258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
void vnic_dev_free_desc_ring(struct vnic_dev *vdev, struct vnic_dev_ring *ring)
{
  
#line 260 
  if (ring->descs != (void *)0) {
    
#line 261 
    pci_free_consistent(vdev->pdev,ring->size_unaligned,ring->descs_unaligned,ring->base_addr_unaligned);
    
#line 265 
    ring->descs = (void *)0;
  }
  else ;
  
#line 267 
  return;
}


#line 269  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
static int _vnic_dev_cmd(struct vnic_dev *vdev, enum vnic_devcmd_cmd cmd, int wait)
{
  int __retres;
  unsigned int i;
  int delay;
  u32 status;
  int err;
  
#line 272 
  struct vnic_devcmd *devcmd = vdev->devcmd;
  
#line 278 
  status = ioread32((void *)(& devcmd->status));
  
#line 279 
  if (status == 4294967295U) {
    
#line 281 
    __retres = -19;
    
#line 281 
    goto return_label;
  }
  else ;
  
#line 283 
  if ((status & 1U) != 0U) {
    
#line 284 
    printk("\001",(unsigned int)cmd & 16383U);
    
#line 285 
    __retres = -16;
    
#line 285 
    goto return_label;
  }
  else ;
  
#line 288 
  if (((unsigned int)cmd & 1073741824U) != 0U) {
    
#line 289 
    i = 0U;
    
#line 289 
    goto ldv_29950;
    ldv_29949: 
#line 290 
    ;
    
#line 290 
    writeq((unsigned long)vdev->args[i],(void volatile *)(& devcmd->args[i]));
    
#line 289 
    i += 1U;
    ldv_29950: 
#line 290 
    ;
    
#line 289 
    if (i <= 14U) 
#line 291 
                  goto ldv_29949; else 
#line 294 
                                       goto ldv_29951;
    ldv_29951: 
#line 295 
    ;
    
#line 296 
    ldv_inline_asm();
  }
  else ;
  
#line 294 
  iowrite32((unsigned int)cmd,(void *)(& devcmd->cmd));
  
#line 296 
  if (((unsigned int)cmd & 16777216U) != 0U) {
    
#line 297 
    __retres = 0;
    
#line 297 
    goto return_label;
  }
  else ;
  
#line 299 
  delay = 0;
  
#line 299 
  goto ldv_29956;
  ldv_29955: 
#line 300 
  ;
  
#line 301 
  __const_udelay(429500UL);
  
#line 303 
  status = ioread32((void *)(& devcmd->status));
  
#line 304 
  if (status == 4294967295U) {
    
#line 306 
    __retres = -19;
    
#line 306 
    goto return_label;
  }
  else ;
  
#line 309 
  if ((status & 1U) == 0U) {
    
#line 311 
    if ((status & 2U) != 0U) {
      unsigned long tmp;
      
#line 312 
      tmp = readq((void const volatile *)(& devcmd->args[0]));
      
#line 312 
      err = (int)tmp;
      
#line 313 
      if (err == 1 && cmd == CMD_CAPABILITY) {
        
#line 315 
        __retres = - err;
        
#line 315 
        goto return_label;
      }
      else ;
      
#line 316 
      if (err != 5 || cmd != CMD_CAPABILITY) 
#line 318 
                                             printk("\001",err,(unsigned int)cmd & 16383U); else ;
      
#line 320 
      __retres = - err;
      
#line 320 
      goto return_label;
    }
    else ;
    
#line 323 
    if (cmd < (unsigned int)0) {
      
#line 325 
      ldv_inline_asm();
      
#line 325 
      i = 0U;
      
#line 325 
      goto ldv_29953;
      ldv_29952: 
#line 326 
      ;
      
#line 326 
      vdev->args[i] = (u64)readq((void const volatile *)(& devcmd->args[i]));
      
#line 325 
      i += 1U;
      ldv_29953: 
#line 326 
      ;
      
#line 325 
      if (i <= 14U) 
#line 327 
                    goto ldv_29952; else 
#line 330 
                                         goto ldv_29954;
      ldv_29954: 
#line 331 
      ;
    }
    else ;
    
#line 329 
    __retres = 0;
    
#line 329 
    goto return_label;
  }
  else ;
  
#line 299 
  delay += 1;
  ldv_29956: 
#line 300 
  ;
  
#line 299 
  if (delay < wait) 
#line 301 
                    goto ldv_29955; else 
#line 304 
                                         goto ldv_29957;
  ldv_29957: 
#line 305 
  ;
  
#line 333 
  printk("\001",(unsigned int)cmd & 16383U);
  
#line 334 
  __retres = -110;
  return_label: 
#line 334 
                return __retres;
}


#line 337  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
static int vnic_dev_cmd_proxy(struct vnic_dev *vdev, enum vnic_devcmd_cmd proxy_cmd, enum vnic_devcmd_cmd cmd, u64 *a0, u64 *a1, int wait)
{
  int __retres;
  u32 status;
  int err;
  
#line 344 
  memset((void *)(& vdev->args),0,120UL);
  
#line 346 
  vdev->args[0] = (unsigned long long)vdev->proxy_index;
  
#line 347 
  vdev->args[1] = (unsigned long long)cmd;
  
#line 348 
  vdev->args[2] = *a0;
  
#line 349 
  vdev->args[3] = *a1;
  
#line 351 
  err = _vnic_dev_cmd(vdev,proxy_cmd,wait);
  
#line 352 
  if (err != 0) {
    
#line 353 
    __retres = err;
    
#line 353 
    goto return_label;
  }
  else ;
  
#line 355 
  status = (unsigned int)vdev->args[0];
  
#line 356 
  if ((status & 2U) != 0U) {
    
#line 357 
    err = (int)vdev->args[1];
    
#line 358 
    if (err != 5 || cmd != CMD_CAPABILITY) 
#line 360 
                                           printk("\001",err,(unsigned int)cmd & 16383U); else ;
    
#line 361 
    __retres = err;
    
#line 361 
    goto return_label;
  }
  else ;
  
#line 364 
  *a0 = vdev->args[1];
  
#line 365 
  *a1 = vdev->args[2];
  
#line 367 
  __retres = 0;
  return_label: 
#line 367 
                return __retres;
}


#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
static int vnic_dev_cmd_no_proxy(struct vnic_dev *vdev, enum vnic_devcmd_cmd cmd, u64 *a0, u64 *a1, int wait)
{
  int err;
  
#line 375 
  vdev->args[0] = *a0;
  
#line 376 
  vdev->args[1] = *a1;
  
#line 378 
  err = _vnic_dev_cmd(vdev,cmd,wait);
  
#line 380 
  *a0 = vdev->args[0];
  
#line 381 
  *a1 = vdev->args[1];
  
#line 383 
  return err;
}


#line 386  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
void vnic_dev_cmd_proxy_by_index_start(struct vnic_dev *vdev, u16 index)
{
  
#line 388 
  vdev->proxy = PROXY_BY_INDEX;
  
#line 389 
  vdev->proxy_index = (unsigned int)index;
  
#line 390 
  return;
}


#line 392  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
void vnic_dev_cmd_proxy_end(struct vnic_dev *vdev)
{
  
#line 394 
  vdev->proxy = PROXY_NONE;
  
#line 395 
  vdev->proxy_index = 0U;
  
#line 396 
  return;
}


#line 398  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_cmd(struct vnic_dev *vdev, enum vnic_devcmd_cmd cmd, u64 *a0, u64 *a1, int wait)
{
  int __retres;
  
#line 401 
  memset((void *)(& vdev->args),0,120UL);
  
#line 403 
  switch ((unsigned int)vdev->proxy) {
    int tmp;
    int tmp_0;
    int tmp_1;
    case (unsigned int)2: 
#line 404 
    ;
    
#line 405 
    tmp = vnic_dev_cmd_proxy(vdev,(enum vnic_devcmd_cmd)CMD_PROXY_BY_INDEX,cmd,a0,a1,wait);
    
#line 405 
    __retres = tmp;
    
#line 405 
    goto return_label;
    case (unsigned int)1: 
#line 407 
    ;
    
#line 408 
    tmp_0 = vnic_dev_cmd_proxy(vdev,(enum vnic_devcmd_cmd)CMD_PROXY_BY_BDF,cmd,a0,a1,wait);
    
#line 408 
    __retres = tmp_0;
    
#line 408 
    goto return_label;
    case (unsigned int)0: 
#line 410 
    ;
    default: 
#line 411 
    ;
    
#line 412 
    tmp_1 = vnic_dev_cmd_no_proxy(vdev,cmd,a0,a1,wait);
    
#line 412 
    __retres = tmp_1;
    
#line 412 
    goto return_label;
  }
  return_label: 
#line 403 
                return __retres;
}


#line 416  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
static int vnic_dev_capable(struct vnic_dev *vdev, enum vnic_devcmd_cmd cmd)
{
  int __retres;
  int err;
  
#line 418 
  u64 a0 = (unsigned long long)cmd;
  
#line 418 
  u64 a1 = 0ULL;
  
#line 419 
  int wait = 1000;
  
#line 422 
  err = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_CAPABILITY,& a0,& a1,wait);
  
#line 424 
  __retres = (err == 0 && a0 == 0ULL) != 0;
  
#line 424 
  return __retres;
}


#line 427  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_fw_info(struct vnic_dev *vdev, struct vnic_devcmd_fw_info **fw_info)
{
  int __retres;
  u64 a0;
  
#line 430 
  u64 a1 = 0ULL;
  
#line 431 
  int wait = 1000;
  
#line 432 
  int err = 0;
  
#line 434 
  if (vdev->fw_info == (struct vnic_devcmd_fw_info *)0) {
    int tmp_0;
    
#line 435 
    vdev->fw_info = (struct vnic_devcmd_fw_info *)pci_zalloc_consistent(vdev->pdev,132UL,& vdev->fw_info_pa);
    
#line 438 
    if (vdev->fw_info == (struct vnic_devcmd_fw_info *)0) {
      
#line 439 
      __retres = -12;
      
#line 439 
      goto return_label;
    }
    else ;
    
#line 441 
    a0 = vdev->fw_info_pa;
    
#line 442 
    a1 = 132ULL;
    
#line 445 
    tmp_0 = vnic_dev_capable(vdev,(enum vnic_devcmd_cmd)CMD_MCPU_FW_INFO);
    
#line 445 
    if (tmp_0 != 0) 
#line 446 
                    err = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_MCPU_FW_INFO,& a0,& a1,wait); else 
                                                                    
#line 449 
                                                                    err = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_MCPU_FW_INFO_OLD,& a0,& a1,wait);
  }
  else ;
  
#line 453 
  *fw_info = vdev->fw_info;
  
#line 455 
  __retres = err;
  return_label: 
#line 455 
                return __retres;
}


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_spec(struct vnic_dev *vdev, unsigned int offset, unsigned int size, void *value)
{
  u64 a0;
  u64 a1;
  int err;
  
#line 462 
  int wait = 1000;
  
#line 465 
  a0 = (unsigned long long)offset;
  
#line 466 
  a1 = (unsigned long long)size;
  
#line 468 
  err = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_DEV_SPEC,& a0,& a1,wait);
  
#line 470 
  switch (size) {
    case (unsigned int)1: 
#line 471 
    ;
    
#line 471 
    *((u8 *)value) = (unsigned char)a0;
    
#line 471 
    goto ldv_30021;
    case (unsigned int)2: 
#line 472 
    ;
    
#line 472 
    *((u16 *)value) = (unsigned short)a0;
    
#line 472 
    goto ldv_30021;
    case (unsigned int)4: 
#line 473 
    ;
    
#line 473 
    *((u32 *)value) = (unsigned int)a0;
    
#line 473 
    goto ldv_30021;
    case (unsigned int)8: 
#line 474 
    ;
    
#line 474 
    *((u64 *)value) = a0;
    
#line 474 
    goto ldv_30021;
    default: 
#line 475 
    ;
    
#line 476 
    ldv_inline_asm();
    
#line 475 
    ;
  }
  ldv_30021: 
#line 478 
  ;
  
#line 478 
  return err;
}


#line 481  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_stats_dump(struct vnic_dev *vdev, struct vnic_stats **stats)
{
  int __retres;
  u64 a0;
  u64 a1;
  int tmp_0;
  
#line 484 
  int wait = 1000;
  
#line 486 
  if (vdev->stats == (struct vnic_stats *)0) {
    
#line 487 
    vdev->stats = (struct vnic_stats *)pci_alloc_consistent(vdev->pdev,512UL,& vdev->stats_pa);
    
#line 489 
    if (vdev->stats == (struct vnic_stats *)0) {
      
#line 490 
      __retres = -12;
      
#line 490 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 493 
  *stats = vdev->stats;
  
#line 494 
  a0 = vdev->stats_pa;
  
#line 495 
  a1 = 512ULL;
  
#line 497 
  tmp_0 = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_STATS_DUMP,& a0,& a1,wait);
  
#line 497 
  __retres = tmp_0;
  return_label: 
#line 497 
                return __retres;
}


#line 500  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_close(struct vnic_dev *vdev)
{
  int tmp;
  
#line 502 
  u64 a0 = 0ULL;
  
#line 502 
  u64 a1 = 0ULL;
  
#line 503 
  int wait = 1000;
  
#line 504 
  tmp = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_CLOSE,& a0,& a1,wait);
  
#line 504 
  return tmp;
}


#line 507  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_enable_wait(struct vnic_dev *vdev)
{
  int __retres;
  int tmp_1;
  
#line 509 
  u64 a0 = 0ULL;
  
#line 509 
  u64 a1 = 0ULL;
  
#line 510 
  int wait = 1000;
  
#line 512 
  tmp_1 = vnic_dev_capable(vdev,(enum vnic_devcmd_cmd)CMD_ENABLE_WAIT);
  
#line 512 
  if (tmp_1 != 0) {
    int tmp;
    
#line 513 
    tmp = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_ENABLE_WAIT,& a0,& a1,wait);
    
#line 513 
    __retres = tmp;
    
#line 513 
    goto return_label;
  }
  else {
    int tmp_0;
    
#line 515 
    tmp_0 = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_ENABLE,& a0,& a1,wait);
    
#line 515 
    __retres = tmp_0;
    
#line 515 
    goto return_label;
  }
  return_label: 
#line 512 
                return __retres;
}


#line 518  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_disable(struct vnic_dev *vdev)
{
  int tmp;
  
#line 520 
  u64 a0 = 0ULL;
  
#line 520 
  u64 a1 = 0ULL;
  
#line 521 
  int wait = 1000;
  
#line 522 
  tmp = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_DISABLE,& a0,& a1,wait);
  
#line 522 
  return tmp;
}


#line 525  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_open(struct vnic_dev *vdev, int arg)
{
  int tmp;
  
#line 527 
  u64 a0 = (unsigned long long)((unsigned int)arg);
  
#line 527 
  u64 a1 = 0ULL;
  
#line 528 
  int wait = 1000;
  
#line 529 
  tmp = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_OPEN,& a0,& a1,wait);
  
#line 529 
  return tmp;
}


#line 532  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_open_done(struct vnic_dev *vdev, int *done)
{
  int __retres;
  int err;
  
#line 534 
  u64 a0 = 0ULL;
  
#line 534 
  u64 a1 = 0ULL;
  
#line 535 
  int wait = 1000;
  
#line 538 
  *done = 0;
  
#line 540 
  err = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_OPEN_STATUS,& a0,& a1,wait);
  
#line 541 
  if (err != 0) {
    
#line 542 
    __retres = err;
    
#line 542 
    goto return_label;
  }
  else ;
  
#line 544 
  *done = a0 == 0ULL;
  
#line 546 
  __retres = 0;
  return_label: 
#line 546 
                return __retres;
}


#line 549  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
static int vnic_dev_soft_reset(struct vnic_dev *vdev, int arg)
{
  int tmp;
  
#line 551 
  u64 a0 = (unsigned long long)((unsigned int)arg);
  
#line 551 
  u64 a1 = 0ULL;
  
#line 552 
  int wait = 1000;
  
#line 553 
  tmp = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_SOFT_RESET,& a0,& a1,wait);
  
#line 553 
  return tmp;
}


#line 556  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
static int vnic_dev_soft_reset_done(struct vnic_dev *vdev, int *done)
{
  int __retres;
  int err;
  
#line 558 
  u64 a0 = 0ULL;
  
#line 558 
  u64 a1 = 0ULL;
  
#line 559 
  int wait = 1000;
  
#line 562 
  *done = 0;
  
#line 564 
  err = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_SOFT_RESET_STATUS,& a0,& a1,wait);
  
#line 565 
  if (err != 0) {
    
#line 566 
    __retres = err;
    
#line 566 
    goto return_label;
  }
  else ;
  
#line 568 
  *done = a0 == 0ULL;
  
#line 570 
  __retres = 0;
  return_label: 
#line 570 
                return __retres;
}


#line 573  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_hang_reset(struct vnic_dev *vdev, int arg)
{
  int __retres;
  int err;
  int tmp_1;
  
#line 575 
  u64 a0 = (unsigned long long)((unsigned int)arg);
  
#line 575 
  u64 a1 = 0ULL;
  
#line 576 
  int wait = 1000;
  
#line 579 
  tmp_1 = vnic_dev_capable(vdev,(enum vnic_devcmd_cmd)CMD_HANG_RESET);
  
#line 579 
  if (tmp_1 != 0) {
    int tmp;
    
#line 580 
    tmp = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_HANG_RESET,& a0,& a1,wait);
    
#line 580 
    __retres = tmp;
    
#line 580 
    goto return_label;
  }
  else {
    int tmp_0;
    
#line 583 
    err = vnic_dev_soft_reset(vdev,arg);
    
#line 584 
    if (err != 0) {
      
#line 585 
      __retres = err;
      
#line 585 
      goto return_label;
    }
    else ;
    
#line 586 
    tmp_0 = vnic_dev_init(vdev,0);
    
#line 586 
    __retres = tmp_0;
    
#line 586 
    goto return_label;
  }
  return_label: 
#line 579 
                return __retres;
}


#line 590  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_hang_reset_done(struct vnic_dev *vdev, int *done)
{
  int __retres;
  int err;
  int tmp_0;
  
#line 592 
  u64 a0 = 0ULL;
  
#line 592 
  u64 a1 = 0ULL;
  
#line 593 
  int wait = 1000;
  
#line 596 
  *done = 0;
  
#line 598 
  tmp_0 = vnic_dev_capable(vdev,(enum vnic_devcmd_cmd)CMD_HANG_RESET_STATUS);
  
#line 598 
  if (tmp_0 != 0) {
    
#line 599 
    err = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_HANG_RESET_STATUS,& a0,& a1,wait);
    
#line 601 
    if (err != 0) {
      
#line 602 
      __retres = err;
      
#line 602 
      goto return_label;
    }
    else ;
  }
  else {
    int tmp;
    
#line 604 
    tmp = vnic_dev_soft_reset_done(vdev,done);
    
#line 604 
    __retres = tmp;
    
#line 604 
    goto return_label;
  }
  
#line 607 
  *done = a0 == 0ULL;
  
#line 609 
  __retres = 0;
  return_label: 
#line 609 
                return __retres;
}


#line 612  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_hang_notify(struct vnic_dev *vdev)
{
  u64 a0;
  u64 a1;
  int tmp;
  
#line 615 
  int wait = 1000;
  
#line 616 
  tmp = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_HANG_NOTIFY,& a0,& a1,wait);
  
#line 616 
  return tmp;
}


#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_get_mac_addr(struct vnic_dev *vdev, u8 *mac_addr)
{
  int __retres;
  u64 a0;
  u64 a1;
  int err;
  int i;
  
#line 622 
  int wait = 1000;
  
#line 625 
  i = 0;
  
#line 625 
  goto ldv_30113;
  ldv_30112: 
#line 626 
  ;
  
#line 626 
  *(mac_addr + i) = (unsigned char)0U;
  
#line 625 
  i += 1;
  ldv_30113: 
#line 626 
  ;
  
#line 625 
  if (i <= 5) 
#line 627 
              goto ldv_30112; else 
#line 630 
                                   goto ldv_30114;
  ldv_30114: 
#line 631 
  ;
  
#line 628 
  err = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_GET_MAC_ADDR,& a0,& a1,wait);
  
#line 629 
  if (err != 0) {
    
#line 630 
    __retres = err;
    
#line 630 
    goto return_label;
  }
  else ;
  
#line 632 
  i = 0;
  
#line 632 
  goto ldv_30116;
  ldv_30115: 
#line 633 
  ;
  
#line 633 
  *(mac_addr + i) = *((u8 *)(& a0) + i);
  
#line 632 
  i += 1;
  ldv_30116: 
#line 633 
  ;
  
#line 632 
  if (i <= 5) 
#line 634 
              goto ldv_30115; else 
#line 637 
                                   goto ldv_30117;
  ldv_30117: 
#line 638 
  ;
  
#line 635 
  __retres = 0;
  return_label: 
#line 635 
                return __retres;
}


#line 638  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_packet_filter(struct vnic_dev *vdev, int directed, int multicast, int broadcast, int promisc, int allmulti)
{
  u64 a0;
  int err;
  int tmp;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  
#line 641 
  u64 a1 = 0ULL;
  
#line 642 
  int wait = 1000;
  
#line 645 
  if (multicast != 0) 
#line 645 
                      tmp = 2; else 
#line 645 
                                    tmp = 0;
  
#line 646 
  if (broadcast != 0) 
#line 646 
                      tmp_0 = 4; else 
#line 646 
                                      tmp_0 = 0;
  
#line 647 
  if (promisc != 0) 
#line 647 
                    tmp_1 = 8; else 
#line 647 
                                    tmp_1 = 0;
  
#line 648 
  if (allmulti != 0) 
#line 648 
                     tmp_2 = 16; else 
#line 648 
                                      tmp_2 = 0;
  
#line 645 
  a0 = (unsigned long long)(((((directed != 0) | tmp) | tmp_0) | tmp_1) | tmp_2);
  
#line 651 
  err = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_PACKET_FILTER,& a0,& a1,wait);
  
#line 652 
  if (err != 0) 
#line 653 
                printk("\001"); else ;
  
#line 655 
  return err;
}


#line 658  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_add_addr(struct vnic_dev *vdev, u8 const *addr)
{
  int err;
  int i;
  
#line 660 
  u64 a0 = 0ULL;
  
#line 660 
  u64 a1 = 0ULL;
  
#line 661 
  int wait = 1000;
  
#line 665 
  i = 0;
  
#line 665 
  goto ldv_30140;
  ldv_30139: 
#line 666 
  ;
  
#line 666 
  *((u8 *)(& a0) + i) = *(addr + i);
  
#line 665 
  i += 1;
  ldv_30140: 
#line 666 
  ;
  
#line 665 
  if (i <= 5) 
#line 667 
              goto ldv_30139; else 
#line 670 
                                   goto ldv_30141;
  ldv_30141: 
#line 671 
  ;
  
#line 668 
  err = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_ADDR_ADD,& a0,& a1,wait);
  
#line 669 
  if (err != 0) 
#line 670 
                printk("\001",addr,err); else ;
  
#line 672 
  return err;
}


#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_del_addr(struct vnic_dev *vdev, u8 const *addr)
{
  int err;
  int i;
  
#line 677 
  u64 a0 = 0ULL;
  
#line 677 
  u64 a1 = 0ULL;
  
#line 678 
  int wait = 1000;
  
#line 682 
  i = 0;
  
#line 682 
  goto ldv_30152;
  ldv_30151: 
#line 683 
  ;
  
#line 683 
  *((u8 *)(& a0) + i) = *(addr + i);
  
#line 682 
  i += 1;
  ldv_30152: 
#line 683 
  ;
  
#line 682 
  if (i <= 5) 
#line 684 
              goto ldv_30151; else 
#line 687 
                                   goto ldv_30153;
  ldv_30153: 
#line 688 
  ;
  
#line 685 
  err = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_ADDR_DEL,& a0,& a1,wait);
  
#line 686 
  if (err != 0) 
#line 687 
                printk("\001",addr,err); else ;
  
#line 689 
  return err;
}


#line 692  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_set_ig_vlan_rewrite_mode(struct vnic_dev *vdev, u8 ig_vlan_rewrite_mode)
{
  int __retres;
  int tmp_0;
  
#line 695 
  u64 a0 = (unsigned long long)ig_vlan_rewrite_mode;
  
#line 695 
  u64 a1 = 0ULL;
  
#line 696 
  int wait = 1000;
  
#line 698 
  tmp_0 = vnic_dev_capable(vdev,(enum vnic_devcmd_cmd)CMD_IG_VLAN_REWRITE_MODE);
  
#line 698 
  if (tmp_0 != 0) {
    int tmp;
    
#line 699 
    tmp = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_IG_VLAN_REWRITE_MODE,& a0,& a1,wait);
    
#line 699 
    __retres = tmp;
    
#line 699 
    goto return_label;
  }
  else {
    
#line 702 
    __retres = 0;
    
#line 702 
    goto return_label;
  }
  return_label: 
#line 698 
                return __retres;
}


#line 705  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
static int vnic_dev_notify_setcmd(struct vnic_dev *vdev, void *notify_addr, dma_addr_t notify_pa, u16 intr)
{
  u64 a0;
  u64 a1;
  int r;
  
#line 709 
  int wait = 1000;
  
#line 712 
  memset(notify_addr,0,40UL);
  
#line 713 
  vdev->notify = (struct vnic_devcmd_notify *)notify_addr;
  
#line 714 
  vdev->notify_pa = notify_pa;
  
#line 716 
  a0 = notify_pa;
  
#line 717 
  a1 = ((unsigned long long)intr << 32) & 281470681743360ULL;
  
#line 718 
  a1 += 40ULL;
  
#line 720 
  r = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_NOTIFY,& a0,& a1,wait);
  
#line 721 
  if (r == 0) 
#line 721 
              vdev->notify_sz = (unsigned int)a1; else 
#line 721 
                                                       vdev->notify_sz = 0U;
  
#line 722 
  return r;
}


#line 725  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_notify_set(struct vnic_dev *vdev, u16 intr)
{
  int __retres;
  void *notify_addr;
  dma_addr_t notify_pa;
  int tmp;
  
#line 730 
  if (vdev->notify != (struct vnic_devcmd_notify *)0 || vdev->notify_pa != 0ULL) {
    
#line 731 
    printk("\001",vdev->notify);
    
#line 732 
    __retres = -22;
    
#line 732 
    goto return_label;
  }
  else ;
  
#line 735 
  notify_addr = pci_alloc_consistent(vdev->pdev,40UL,& notify_pa);
  
#line 738 
  if (notify_addr == (void *)0) {
    
#line 739 
    __retres = -12;
    
#line 739 
    goto return_label;
  }
  else ;
  
#line 741 
  tmp = vnic_dev_notify_setcmd(vdev,notify_addr,notify_pa,(unsigned short)((int)intr));
  
#line 741 
  __retres = tmp;
  return_label: 
#line 741 
                return __retres;
}


#line 744  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
static int vnic_dev_notify_unsetcmd(struct vnic_dev *vdev)
{
  u64 a0;
  u64 a1;
  int err;
  
#line 747 
  int wait = 1000;
  
#line 750 
  a0 = 0ULL;
  
#line 751 
  a1 = 281470681743360ULL;
  
#line 752 
  a1 += 40ULL;
  
#line 754 
  err = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_NOTIFY,& a0,& a1,wait);
  
#line 755 
  vdev->notify = (struct vnic_devcmd_notify *)0;
  
#line 756 
  vdev->notify_pa = 0ULL;
  
#line 757 
  vdev->notify_sz = 0U;
  
#line 759 
  return err;
}


#line 762  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_notify_unset(struct vnic_dev *vdev)
{
  int tmp;
  
#line 764 
  if (vdev->notify != (struct vnic_devcmd_notify *)0) 
#line 765 
                                                      pci_free_consistent(vdev->pdev,40UL,(void *)vdev->notify,vdev->notify_pa); else ;
  
#line 771 
  tmp = vnic_dev_notify_unsetcmd(vdev);
  
#line 771 
  return tmp;
}


#line 774  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
static int vnic_dev_notify_ready(struct vnic_dev *vdev)
{
  int __retres;
  u32 *words;
  unsigned int i;
  u32 csum;
  
#line 777 
  unsigned int nwords = vdev->notify_sz / 4U;
  
#line 781 
  if (vdev->notify == (struct vnic_devcmd_notify *)0 || vdev->notify_sz == 0U) {
    
#line 782 
    __retres = 0;
    
#line 782 
    goto return_label;
  }
  else ;
  ldv_30197: 
#line 783 
  ;
  
#line 785 
  csum = 0U;
  
#line 786 
  memcpy((void *)(& vdev->notify_copy),(void const *)vdev->notify,(unsigned long)vdev->notify_sz);
  
#line 787 
  words = (u32 *)(& vdev->notify_copy);
  
#line 788 
  i = 1U;
  
#line 788 
  goto ldv_30195;
  ldv_30194: 
#line 789 
  ;
  
#line 789 
  csum = *(words + i) + csum;
  
#line 788 
  i += 1U;
  ldv_30195: 
#line 789 
  ;
  
#line 788 
  if (i < nwords) 
#line 790 
                  goto ldv_30194; else 
#line 793 
                                       goto ldv_30196;
  ldv_30196: 
#line 794 
  ;
  
#line 790 
  if (*words != csum) 
#line 792 
                      goto ldv_30197; else 
#line 795 
                                           goto ldv_30198;
  ldv_30198: 
#line 796 
  ;
  
#line 792 
  __retres = 1;
  return_label: 
#line 792 
                return __retres;
}


#line 795  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_init(struct vnic_dev *vdev, int arg)
{
  int tmp;
  
#line 797 
  u64 a0 = (unsigned long long)((unsigned int)arg);
  
#line 797 
  u64 a1 = 0ULL;
  
#line 798 
  int wait = 1000;
  
#line 799 
  int r = 0;
  
#line 801 
  tmp = vnic_dev_capable(vdev,(enum vnic_devcmd_cmd)CMD_INIT);
  
#line 801 
  if (tmp != 0) 
#line 802 
                r = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_INIT,& a0,& a1,wait);
  else {
    
#line 804 
    vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_INIT_v1,& a0,& a1,wait);
    
#line 805 
    if ((a0 & 1ULL) != 0ULL) {
      
#line 809 
      vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_GET_MAC_ADDR,& a0,& a1,wait);
      
#line 810 
      vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_ADDR_ADD,& a0,& a1,wait);
    }
    else ;
  }
  
#line 813 
  return r;
}


#line 816  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_deinit(struct vnic_dev *vdev)
{
  int tmp;
  
#line 818 
  u64 a0 = 0ULL;
  
#line 818 
  u64 a1 = 0ULL;
  
#line 819 
  int wait = 1000;
  
#line 821 
  tmp = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_DEINIT,& a0,& a1,wait);
  
#line 821 
  return tmp;
}


#line 824  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
void vnic_dev_intr_coal_timer_info_default(struct vnic_dev *vdev)
{
  
#line 827 
  vdev->intr_coal_timer_info.mul = 2U;
  
#line 828 
  vdev->intr_coal_timer_info.div = 3U;
  
#line 829 
  vdev->intr_coal_timer_info.max_usec = vnic_dev_intr_coal_timer_hw_to_usec(vdev,65535U);
  
#line 831 
  return;
}


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_intr_coal_timer_info(struct vnic_dev *vdev)
{
  int __retres;
  int err;
  int tmp;
  
#line 835 
  int wait = 1000;
  
#line 838 
  memset((void *)(& vdev->args),0,120UL);
  
#line 840 
  tmp = vnic_dev_capable(vdev,(enum vnic_devcmd_cmd)CMD_INTR_COAL_CONVERT);
  
#line 840 
  if (tmp != 0) 
#line 841 
                err = _vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_INTR_COAL_CONVERT,wait); else 
                                                                    
#line 843 
                                                                    err = 5;
  
#line 848 
  if (err == 5 || (err == 0 && ((vdev->args[0] == 0ULL || vdev->args[1] == 0ULL) || vdev->args[2] == 0ULL))) {
    
#line 850 
    printk("\001");
    
#line 851 
    vnic_dev_intr_coal_timer_info_default(vdev);
    
#line 852 
    __retres = 0;
    
#line 852 
    goto return_label;
  }
  else ;
  
#line 855 
  if (err == 0) {
    
#line 856 
    vdev->intr_coal_timer_info.mul = (unsigned int)vdev->args[0];
    
#line 857 
    vdev->intr_coal_timer_info.div = (unsigned int)vdev->args[1];
    
#line 858 
    vdev->intr_coal_timer_info.max_usec = (unsigned int)vdev->args[2];
  }
  else ;
  
#line 861 
  __retres = err;
  return_label: 
#line 861 
                return __retres;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_link_status(struct vnic_dev *vdev)
{
  int __retres;
  int tmp;
  
#line 866 
  tmp = vnic_dev_notify_ready(vdev);
  
#line 866 
  if (tmp == 0) {
    
#line 867 
    __retres = 0;
    
#line 867 
    goto return_label;
  }
  else ;
  
#line 869 
  __retres = (int)vdev->notify_copy.link_state;
  return_label: 
#line 869 
                return __retres;
}


#line 872  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
u32 vnic_dev_port_speed(struct vnic_dev *vdev)
{
  u32 __retres;
  int tmp;
  
#line 874 
  tmp = vnic_dev_notify_ready(vdev);
  
#line 874 
  if (tmp == 0) {
    
#line 875 
    __retres = 0U;
    
#line 875 
    goto return_label;
  }
  else ;
  
#line 877 
  __retres = vdev->notify_copy.port_speed;
  return_label: 
#line 877 
                return __retres;
}


#line 880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
u32 vnic_dev_msg_lvl(struct vnic_dev *vdev)
{
  u32 __retres;
  int tmp;
  
#line 882 
  tmp = vnic_dev_notify_ready(vdev);
  
#line 882 
  if (tmp == 0) {
    
#line 883 
    __retres = 0U;
    
#line 883 
    goto return_label;
  }
  else ;
  
#line 885 
  __retres = vdev->notify_copy.msglvl;
  return_label: 
#line 885 
                return __retres;
}


#line 888  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
u32 vnic_dev_mtu(struct vnic_dev *vdev)
{
  u32 __retres;
  int tmp;
  
#line 890 
  tmp = vnic_dev_notify_ready(vdev);
  
#line 890 
  if (tmp == 0) {
    
#line 891 
    __retres = 0U;
    
#line 891 
    goto return_label;
  }
  else ;
  
#line 893 
  __retres = vdev->notify_copy.mtu;
  return_label: 
#line 893 
                return __retres;
}


#line 896  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
void vnic_dev_set_intr_mode(struct vnic_dev *vdev, enum vnic_dev_intr_mode intr_mode)
{
  
#line 899 
  vdev->intr_mode = intr_mode;
  
#line 900 
  return;
}


#line 902  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
enum vnic_dev_intr_mode vnic_dev_get_intr_mode(struct vnic_dev *vdev)
{
  enum vnic_dev_intr_mode __retres;
  
#line 905 
  __retres = vdev->intr_mode;
  
#line 905 
  return __retres;
}


#line 908  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
u32 vnic_dev_intr_coal_timer_usec_to_hw(struct vnic_dev *vdev, u32 usec)
{
  u32 __retres;
  
#line 910 
  __retres = (vdev->intr_coal_timer_info.mul * usec) / vdev->intr_coal_timer_info.div;
  
#line 910 
  return __retres;
}


#line 914  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
u32 vnic_dev_intr_coal_timer_hw_to_usec(struct vnic_dev *vdev, u32 hw_cycles)
{
  u32 __retres;
  
#line 916 
  __retres = (vdev->intr_coal_timer_info.div * hw_cycles) / vdev->intr_coal_timer_info.mul;
  
#line 916 
  return __retres;
}


#line 920  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
u32 vnic_dev_get_intr_coal_timer_max(struct vnic_dev *vdev)
{
  u32 __retres;
  
#line 922 
  __retres = vdev->intr_coal_timer_info.max_usec;
  
#line 922 
  return __retres;
}


#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
void vnic_dev_unregister(struct vnic_dev *vdev)
{
  
#line 927 
  if (vdev != (struct vnic_dev *)0) {
    
#line 928 
    if (vdev->notify != (struct vnic_devcmd_notify *)0) 
#line 929 
                                                        pci_free_consistent(vdev->pdev,40UL,(void *)vdev->notify,vdev->notify_pa); else ;
    
#line 933 
    if (vdev->stats != (struct vnic_stats *)0) 
#line 934 
                                               pci_free_consistent(vdev->pdev,512UL,(void *)vdev->stats,vdev->stats_pa); else ;
    
#line 937 
    if (vdev->fw_info != (struct vnic_devcmd_fw_info *)0) 
#line 938 
                                                          pci_free_consistent(vdev->pdev,132UL,(void *)vdev->fw_info,vdev->fw_info_pa); else ;
    
#line 941 
    kfree((void const *)vdev);
  }
  else ;
  
#line 943 
  return;
}


#line 944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
static char const __kstrtab_vnic_dev_unregister[20U] = {(char)'v', (char)'n', (char)'i', (char)'c', (char)'_', (char)'d', (char)'e', (char)'v', (char)'_', (char)'u', (char)'n', (char)'r', (char)'e', (char)'g', (char)'i', (char)'s', (char)'t', (char)'e', (char)'r', (char)'\000'};

#line 944 
struct kernel_symbol const __ksymtab_vnic_dev_unregister;


#line 944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
struct kernel_symbol const __ksymtab_vnic_dev_unregister = {.value = (unsigned long)(& vnic_dev_unregister), .name = (char const *)(& __kstrtab_vnic_dev_unregister)};

#line 946  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
struct vnic_dev *vnic_dev_register(struct vnic_dev *vdev, void *priv, struct pci_dev *pdev, struct vnic_dev_bar *bar, unsigned int num_bars)
{
  struct vnic_dev *__retres;
  int tmp_0;
  
#line 950 
  if (vdev == (struct vnic_dev *)0) {
    
#line 951 
    vdev = (struct vnic_dev *)kzalloc_2(712UL,32U);
    
#line 952 
    if (vdev == (struct vnic_dev *)0) {
      
#line 953 
      __retres = (struct vnic_dev *)0;
      
#line 953 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 956 
  vdev->priv = priv;
  
#line 957 
  vdev->pdev = pdev;
  
#line 959 
  tmp_0 = vnic_dev_discover_res(vdev,bar,num_bars);
  
#line 959 
  if (tmp_0 != 0) 
#line 960 
                  goto err_out; else ;
  
#line 962 
  vdev->devcmd = (struct vnic_devcmd *)vnic_dev_get_res(vdev,(enum vnic_res_type)RES_TYPE_DEVCMD,0U);
  
#line 963 
  if (vdev->devcmd == (struct vnic_devcmd *)0) 
#line 964 
                                               goto err_out; else ;
  
#line 966 
  __retres = vdev;
  
#line 966 
  goto return_label;
  err_out: 
#line 968 
  ;
  
#line 969 
  vnic_dev_unregister(vdev);
  
#line 970 
  __retres = (struct vnic_dev *)0;
  return_label: 
#line 970 
                return __retres;
}


#line 972  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
static char const __kstrtab_vnic_dev_register[18U] = {(char)'v', (char)'n', (char)'i', (char)'c', (char)'_', (char)'d', (char)'e', (char)'v', (char)'_', (char)'r', (char)'e', (char)'g', (char)'i', (char)'s', (char)'t', (char)'e', (char)'r', (char)'\000'};

#line 972 
struct kernel_symbol const __ksymtab_vnic_dev_register;


#line 972  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
struct kernel_symbol const __ksymtab_vnic_dev_register = {.value = (unsigned long)(& vnic_dev_register), .name = (char const *)(& __kstrtab_vnic_dev_register)};

#line 974  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
struct pci_dev *vnic_dev_get_pdev(struct vnic_dev *vdev)
{
  struct pci_dev *__retres;
  
#line 976 
  __retres = vdev->pdev;
  
#line 976 
  return __retres;
}


#line 978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
static char const __kstrtab_vnic_dev_get_pdev[18U] = {(char)'v', (char)'n', (char)'i', (char)'c', (char)'_', (char)'d', (char)'e', (char)'v', (char)'_', (char)'g', (char)'e', (char)'t', (char)'_', (char)'p', (char)'d', (char)'e', (char)'v', (char)'\000'};

#line 978 
struct kernel_symbol const __ksymtab_vnic_dev_get_pdev;


#line 978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
struct kernel_symbol const __ksymtab_vnic_dev_get_pdev = {.value = (unsigned long)(& vnic_dev_get_pdev), .name = (char const *)(& __kstrtab_vnic_dev_get_pdev)};

#line 980  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_init_prov2(struct vnic_dev *vdev, u8 *buf, u32 len)
{
  int __retres;
  u64 a0;
  dma_addr_t prov_pa;
  void *prov_buf;
  int ret;
  
#line 982 
  u64 a1 = (unsigned long long)len;
  
#line 983 
  int wait = 1000;
  
#line 988 
  prov_buf = pci_alloc_consistent(vdev->pdev,(unsigned long)len,& prov_pa);
  
#line 989 
  if (prov_buf == (void *)0) {
    
#line 990 
    __retres = -12;
    
#line 990 
    goto return_label;
  }
  else ;
  
#line 992 
  memcpy(prov_buf,(void const *)buf,(unsigned long)len);
  
#line 994 
  a0 = prov_pa;
  
#line 996 
  ret = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_INIT_PROV_INFO2,& a0,& a1,wait);
  
#line 998 
  pci_free_consistent(vdev->pdev,(unsigned long)len,prov_buf,prov_pa);
  
#line 1000 
  __retres = ret;
  return_label: 
#line 1000 
                return __retres;
}


#line 1003  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_enable2(struct vnic_dev *vdev, int active)
{
  u64 a0;
  int tmp;
  
#line 1005 
  u64 a1 = 0ULL;
  
#line 1006 
  int wait = 1000;
  
#line 1008 
  a0 = (unsigned long long)(active != 0);
  
#line 1010 
  tmp = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_ENABLE2,& a0,& a1,wait);
  
#line 1010 
  return tmp;
}


#line 1013  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
static int vnic_dev_cmd_status(struct vnic_dev *vdev, enum vnic_devcmd_cmd cmd, int *status)
{
  int ret;
  
#line 1016 
  u64 a0 = (unsigned long long)cmd;
  
#line 1016 
  u64 a1 = 0ULL;
  
#line 1017 
  int wait = 1000;
  
#line 1020 
  ret = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_STATUS,& a0,& a1,wait);
  
#line 1021 
  if (ret == 0) 
#line 1022 
                *status = (int)a0; else ;
  
#line 1024 
  return ret;
}


#line 1027  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_enable2_done(struct vnic_dev *vdev, int *status)
{
  int tmp;
  
#line 1029 
  tmp = vnic_dev_cmd_status(vdev,(enum vnic_devcmd_cmd)CMD_ENABLE2,status);
  
#line 1029 
  return tmp;
}


#line 1032  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_deinit_done(struct vnic_dev *vdev, int *status)
{
  int tmp;
  
#line 1034 
  tmp = vnic_dev_cmd_status(vdev,(enum vnic_devcmd_cmd)CMD_DEINIT,status);
  
#line 1034 
  return tmp;
}


#line 1037  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_set_mac_addr(struct vnic_dev *vdev, u8 *mac_addr)
{
  u64 a0;
  u64 a1;
  int i;
  int tmp;
  
#line 1040 
  int wait = 1000;
  
#line 1043 
  i = 0;
  
#line 1043 
  goto ldv_30334;
  ldv_30333: 
#line 1044 
  ;
  
#line 1044 
  *((u8 *)(& a0) + i) = *(mac_addr + i);
  
#line 1043 
  i += 1;
  ldv_30334: 
#line 1044 
  ;
  
#line 1043 
  if (i <= 5) 
#line 1045 
              goto ldv_30333; else 
#line 1048 
                                   goto ldv_30335;
  ldv_30335: 
#line 1049 
  ;
  
#line 1046 
  tmp = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_SET_MAC_ADDR,& a0,& a1,wait);
  
#line 1046 
  return tmp;
}


#line 1063  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/cisco/enic/vnic_dev.c"
int vnic_dev_classifier(struct vnic_dev *vdev, u8 cmd, u16 *entry, struct filter *data)
{
  int __retres;
  u64 a0;
  u64 a1;
  dma_addr_t tlv_pa;
  struct filter_tlv *tlv;
  struct filter_tlv *tlv_va;
  struct filter_action *action;
  u64 tlv_size;
  
#line 1067 
  int wait = 1000;
  
#line 1069 
  int ret = -22;
  
#line 1074 
  if ((unsigned int)cmd == 0U) {
    
#line 1075 
    tlv_size = 48ULL;
    
#line 1078 
    tlv_va = (struct filter_tlv *)pci_alloc_consistent(vdev->pdev,(unsigned long)tlv_size,& tlv_pa);
    
#line 1079 
    if (tlv_va == (struct filter_tlv *)0) {
      
#line 1080 
      __retres = -12;
      
#line 1080 
      goto return_label;
    }
    else ;
    
#line 1081 
    tlv = tlv_va;
    
#line 1082 
    a0 = tlv_pa;
    
#line 1083 
    a1 = tlv_size;
    
#line 1084 
    memset((void *)tlv,0,(unsigned long)tlv_size);
    
#line 1085 
    tlv->type = 0U;
    
#line 1086 
    tlv->length = 24U;
    
#line 1087 
    *((struct filter *)(& tlv->val)) = *data;
    
#line 1089 
    tlv += 32U;
    
#line 1093 
    tlv->type = 1U;
    
#line 1094 
    tlv->length = 8U;
    
#line 1095 
    action = (struct filter_action *)(& tlv->val);
    
#line 1096 
    action->type = 0U;
    
#line 1097 
    action->u.rq_idx = (unsigned int)*entry;
    
#line 1099 
    ret = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_ADD_FILTER,& a0,& a1,wait);
    
#line 1100 
    *entry = (unsigned short)a0;
    
#line 1101 
    pci_free_consistent(vdev->pdev,(unsigned long)tlv_size,(void *)tlv_va,tlv_pa);
  }
  else 
    
#line 1102 
    if ((unsigned int)cmd == 1U) {
      
#line 1103 
      a0 = (unsigned long long)*entry;
      
#line 1104 
      ret = vnic_dev_cmd(vdev,(enum vnic_devcmd_cmd)CMD_DEL_FILTER,& a0,& a1,wait);
    }
    else ;
  
#line 1107 
  __retres = ret;
  return_label: 
#line 1107 
                return __retres;
}


#line 487  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/weaver/.tmp_vnic_dev.c.aux"
static void *kzalloc_2(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 490 
  tmp = ldv_kzalloc(size,flags);
  
#line 490 
  return tmp;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 28 
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 87  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_11_4(struct net_device *arg0);


#line 91 
int main(void);


#line 92 
void ldv_dispatch_irq_register_12_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 93 
void ldv_dispatch_irq_deregister_3_1(int arg0);


#line 95 
void ldv_dispatch_register_7_3(struct pci_driver *arg0);


#line 97 
void *ldv_random_allocationless_scenario_13(void *arg0);


#line 99 
void *ldv_pci_scenario_17(void *arg0);


#line 100 
void ldv_dispatch_instance_deregister_9_1(struct timer_list *arg0);


#line 101 
void *ldv_timer_scenario_16(void *arg0);


#line 102 
void *ldv_interrupt_scenario_15(void *arg0);


#line 103 
void ldv_dispatch_deregister_10_1(struct pci_driver *arg0);


#line 105 
void *ldv_initialization_1(void *arg0);


#line 108 
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0);


#line 109 
void ldv_dispatch_deregister_6_1(struct net_device *arg0);


#line 111 
void *ldv_interrupt_scenario_14(void *arg0);


#line 115  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_14;

#line 116  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_13;

#line 117  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_15;

#line 118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_16;

#line 119  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_17;

#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_11_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_13 *cf_arg_13;
  int tmp;
  
#line 126 
  tmp = ldv_undef_int();
  
#line 126 
  switch (tmp) {
    case 0: 
#line 127 
    ;
    
#line 128 
    cf_arg_13 = (struct ldv_struct_random_allocationless_scenario_13 *)ldv_xmalloc(16UL);
    
#line 129 
    cf_arg_13->arg0 = arg0;
    
#line 130 
    ret = pthread_create(& ldv_thread_13,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_13,(void *)cf_arg_13);
    
#line 131 
    __VERIFIER_assume(ret == 0);
    
#line 132 
    goto ldv_44757;
    default: 
#line 134 
    ;
    
#line 134 
    __VERIFIER_assume(0);
  }
  ldv_44757: 
#line 135 
  ;
  
#line 136 
  return;
}


#line 140  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_del_timer_sync(struct timer_list *arg0)
{
  int __retres;
  struct timer_list *ldv_9_timer_list;
  
#line 146 
  ldv_9_timer_list = arg0;
  
#line 150 
  ldv_dispatch_instance_deregister_9_1(ldv_9_timer_list);
  
#line 151 
  ;
  
#line 151 
  __retres = 0;
  
#line 151 
  return __retres;
}


#line 159  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 162 
  struct pci_driver *ldv_10_pci_driver = ldv_emg_alias_enic_driver_2;
  
#line 165 
  ldv_10_pci_driver = arg0;
  
#line 169 
  ldv_dispatch_deregister_10_1(ldv_10_pci_driver);
  
#line 173 
  goto return_label;
  return_label: 
#line 175 
                return;
}


#line 180  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 183 
  struct pci_driver *ldv_7_pci_driver = ldv_emg_alias_enic_driver_2;
  
#line 187 
  tmp_0 = ldv_undef_int();
  
#line 187 
  if (tmp_0 != 0) {
    
#line 189 
    ldv_7_pci_driver = arg0;
    
#line 193 
    ldv_dispatch_register_7_3(ldv_7_pci_driver);
    
#line 197 
    __retres = 0;
    
#line 197 
    goto return_label;
  }
  else {
    int tmp;
    
#line 204 
    tmp = ldv_undef_int_negative();
    
#line 204 
    __retres = tmp;
    
#line 204 
    goto return_label;
  }
  return_label: 
#line 187 
                return __retres;
}


#line 214  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 217 
  ldv_initialize();
  
#line 220 
  ldv_initialization_1((void *)0);
  
#line 222 
  __retres = 0;
  
#line 222 
  return __retres;
}


#line 227  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_12_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_14 *cf_arg_14;
  struct ldv_struct_interrupt_scenario_14 *cf_arg_15;
  int tmp;
  
#line 231 
  tmp = ldv_undef_int();
  
#line 231 
  switch (tmp) {
    case 0: 
#line 232 
    ;
    
#line 233 
    cf_arg_14 = (struct ldv_struct_interrupt_scenario_14 *)ldv_xmalloc(32UL);
    
#line 234 
    cf_arg_14->arg0 = arg0;
    
#line 235 
    cf_arg_14->arg1 = arg1;
    
#line 236 
    cf_arg_14->arg2 = arg2;
    
#line 237 
    cf_arg_14->arg3 = arg3;
    
#line 238 
    ret = pthread_create(& ldv_thread_14,(pthread_attr_t const *)0,& ldv_interrupt_scenario_14,(void *)cf_arg_14);
    
#line 239 
    __VERIFIER_assume(ret == 0);
    
#line 240 
    goto ldv_44790;
    case 1: 
#line 242 
    ;
    
#line 243 
    cf_arg_15 = (struct ldv_struct_interrupt_scenario_14 *)ldv_xmalloc(32UL);
    
#line 244 
    cf_arg_15->arg0 = arg0;
    
#line 245 
    cf_arg_15->arg1 = arg1;
    
#line 246 
    cf_arg_15->arg2 = arg2;
    
#line 247 
    cf_arg_15->arg3 = arg3;
    
#line 248 
    ret = pthread_create(& ldv_thread_15,(pthread_attr_t const *)0,& ldv_interrupt_scenario_15,(void *)cf_arg_15);
    
#line 249 
    __VERIFIER_assume(ret == 0);
    
#line 250 
    goto ldv_44790;
    default: 
#line 252 
    ;
    
#line 252 
    __VERIFIER_assume(0);
  }
  ldv_44790: 
#line 253 
  ;
  
#line 254 
  return;
}


#line 258  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_3_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_3 *cf_arg_14;
  struct ldv_struct_free_irq_3 *cf_arg_15;
  int tmp;
  
#line 262 
  tmp = ldv_undef_int();
  
#line 262 
  switch (tmp) {
    case 0: 
#line 263 
    ;
    
#line 264 
    ret = pthread_join(ldv_thread_14,(void **)0);
    
#line 265 
    __VERIFIER_assume(ret == 0);
    
#line 266 
    goto ldv_44800;
    case 1: 
#line 268 
    ;
    
#line 269 
    ret = pthread_join(ldv_thread_15,(void **)0);
    
#line 270 
    __VERIFIER_assume(ret == 0);
    
#line 271 
    goto ldv_44800;
    default: 
#line 273 
    ;
    
#line 273 
    __VERIFIER_assume(0);
  }
  ldv_44800: 
#line 274 
  ;
  
#line 275 
  return;
}


#line 279  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_5_netdev;
  int tmp_0;
  
#line 286 
  tmp_0 = ldv_undef_int();
  
#line 286 
  if (tmp_0 != 0) {
    
#line 288 
    ldv_5_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 292 
    __retres = ldv_5_netdev;
    
#line 292 
    goto return_label;
  }
  else {
    
#line 299 
    __retres = (struct net_device *)0;
    
#line 299 
    goto return_label;
  }
  return_label: 
#line 286 
                return __retres;
}


#line 309  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_7_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_17 *cf_arg_17;
  int tmp;
  
#line 312 
  tmp = ldv_undef_int();
  
#line 312 
  switch (tmp) {
    case 0: 
#line 313 
    ;
    
#line 314 
    cf_arg_17 = (struct ldv_struct_pci_scenario_17 *)ldv_xmalloc(16UL);
    
#line 315 
    cf_arg_17->arg0 = arg0;
    
#line 316 
    ret = pthread_create(& ldv_thread_17,(pthread_attr_t const *)0,& ldv_pci_scenario_17,(void *)cf_arg_17);
    
#line 317 
    __VERIFIER_assume(ret == 0);
    
#line 318 
    goto ldv_44815;
    default: 
#line 320 
    ;
    
#line 320 
    __VERIFIER_assume(0);
  }
  ldv_44815: 
#line 321 
  ;
  
#line 322 
  return;
}


#line 326  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_12_line;
  void *ldv_12_data;
  enum irqreturn (*ldv_12_thread)(int , void *);
  int tmp_0;
  
#line 331 
  enum irqreturn (*ldv_12_callback)(int , void *) = & ldv_emg_wrapper_enic_isr_msi_2;
  
#line 336 
  tmp_0 = ldv_undef_int();
  
#line 336 
  if (tmp_0 != 0) {
    
#line 338 
    ldv_12_line = (int)arg0;
    
#line 339 
    ldv_12_callback = arg1;
    
#line 340 
    ldv_12_thread = (enum irqreturn (*)(int , void *))0;
    
#line 341 
    ldv_12_data = arg4;
    
#line 345 
    ldv_dispatch_irq_register_12_3(ldv_12_line,ldv_12_callback,ldv_12_thread,ldv_12_data);
    
#line 349 
    __retres = 0;
    
#line 349 
    goto return_label;
  }
  else {
    int tmp;
    
#line 356 
    tmp = ldv_undef_int_negative();
    
#line 356 
    __retres = tmp;
    
#line 356 
    goto return_label;
  }
  return_label: 
#line 336 
                return __retres;
}


#line 366  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_13(void *arg0)
{
  void *__retres;
  struct ethtool_tunable *ldv_13_ldv_param_1_28;
  unsigned short ldv_13_ldv_param_1_40;
  struct ethtool_drvinfo *ldv_13_ldv_param_1_10;
  unsigned short ldv_13_ldv_param_2_3;
  struct sk_buff *ldv_13_ldv_param_2_15;
  struct ethtool_coalesce *ldv_13_ldv_param_1_25;
  void *ldv_13_ldv_param_2_24;
  struct nlattr **ldv_13_ldv_param_2_27;
  int ldv_13_ldv_param_1_14;
  struct sk_buff *ldv_13_ldv_param_1_2;
  int ldv_13_ldv_param_1_19;
  unsigned int ldv_13_ldv_param_1_5;
  unsigned int *ldv_13_ldv_param_1_11;
  unsigned int *ldv_13_ldv_param_2_31;
  int ldv_13_ldv_param_1_38;
  unsigned char *ldv_13_ldv_param_2_12;
  int ldv_13_ldv_param_1_26;
  unsigned char *ldv_13_ldv_param_3_36;
  unsigned char *ldv_13_ldv_param_2_33;
  struct ethtool_rxnfc *ldv_13_ldv_param_1_30;
  void *ldv_13_ldv_param_2_29;
  struct ethtool_tunable *ldv_13_ldv_param_1_23;
  struct ethtool_stats *ldv_13_ldv_param_1_8;
  unsigned short ldv_13_ldv_param_2_41;
  unsigned short ldv_13_ldv_param_2_22;
  unsigned int ldv_13_ldv_param_1_32;
  unsigned short ldv_13_ldv_param_1_21;
  struct rtnl_link_stats64 *ldv_13_ldv_param_1_6;
  struct sk_buff *ldv_13_ldv_param_0_16;
  unsigned int ldv_13_ldv_param_3_4;
  void *ldv_13_ldv_param_1_17;
  unsigned char *ldv_13_ldv_param_2_39;
  unsigned char *ldv_13_ldv_param_2_35;
  struct ethtool_cmd *ldv_13_ldv_param_1_18;
  struct ethtool_coalesce *ldv_13_ldv_param_1_37;
  unsigned int *ldv_13_ldv_param_1_34;
  struct net_device *ldv_13_container;
  unsigned long long *ldv_13_ldv_param_2_9;
  unsigned char ldv_13_ldv_param_3_13;
  int ldv_13_ldv_param_1_7;
  struct napi_struct *ldv_13_ldv_param_0_20;
  int tmp_23;
  
#line 411 
  struct ldv_struct_random_allocationless_scenario_13 *data = (struct ldv_struct_random_allocationless_scenario_13 *)arg0;
  
#line 416 
  if (data != (struct ldv_struct_random_allocationless_scenario_13 *)0) {
    
#line 417 
    ldv_13_container = data->arg0;
    
#line 418 
    ldv_free((void *)data);
  }
  else ;
  
#line 426 
  goto ldv_call_13;
  
#line 428 
  __retres = (void *)0;
  
#line 428 
  goto return_label;
  ldv_call_13: 
#line 431 
  ;
  
#line 434 
  tmp_23 = ldv_undef_int();
  
#line 434 
  if (tmp_23 != 0) {
    int tmp_0;
    
#line 436 
    ldv_13_ldv_param_1_2 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
    
#line 439 
    tmp_0 = ldv_undef_int();
    
#line 439 
    switch (tmp_0) {
      case 1: 
#line 440 
      ;
      
#line 443 
      enic_rx_flow_steer(ldv_13_container,(struct sk_buff const *)ldv_13_ldv_param_1_2,(unsigned short)((int)ldv_13_ldv_param_2_3),ldv_13_ldv_param_3_4);
      
#line 446 
      goto ldv_44881;
      case 2: 
#line 448 
      ;
      
#line 451 
      ldv_emg_wrapper_enic_set_rx_mode_26(ldv_13_container);
      
#line 454 
      goto ldv_44881;
      case 3: 
#line 456 
      ;
      
#line 459 
      ldv_emg_wrapper_enic_poll_controller_28(ldv_13_container);
      
#line 462 
      goto ldv_44881;
      case 4: 
#line 464 
      ;
      
#line 470 
      enic_vlan_rx_kill_vid(ldv_13_container,(unsigned short)((int)ldv_13_ldv_param_1_40),(unsigned short)((int)ldv_13_ldv_param_2_41));
      
#line 476 
      goto ldv_44881;
      case 5: 
#line 478 
      ;
      
#line 480 
      ldv_13_ldv_param_2_39 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 485 
      ldv_emg_wrapper_enic_set_vf_mac_29(ldv_13_container,ldv_13_ldv_param_1_38,ldv_13_ldv_param_2_39);
      
#line 489 
      ldv_free((void *)ldv_13_ldv_param_2_39);
      
#line 492 
      goto ldv_44881;
      case 6: 
#line 494 
      ;
      
#line 496 
      ldv_13_ldv_param_1_37 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 501 
      ldv_emg_wrapper_enic_set_coalesce_25(ldv_13_container,ldv_13_ldv_param_1_37);
      
#line 505 
      ldv_free((void *)ldv_13_ldv_param_1_37);
      
#line 508 
      goto ldv_44881;
      case 7: 
#line 510 
      ;
      
#line 512 
      ldv_13_ldv_param_1_34 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
      
#line 513 
      ldv_13_ldv_param_3_36 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 514 
      ldv_13_ldv_param_2_35 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 519 
      ldv_emg_wrapper_enic_get_rxfh_10(ldv_13_container,ldv_13_ldv_param_1_34,ldv_13_ldv_param_2_35,ldv_13_ldv_param_3_36);
      
#line 523 
      ldv_free((void *)ldv_13_ldv_param_1_34);
      
#line 524 
      ldv_free((void *)ldv_13_ldv_param_3_36);
      
#line 525 
      ldv_free((void *)ldv_13_ldv_param_2_35);
      
#line 528 
      goto ldv_44881;
      case 8: 
#line 530 
      ;
      
#line 532 
      ldv_13_ldv_param_2_33 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 537 
      ldv_emg_wrapper_enic_get_strings_3(ldv_13_container,ldv_13_ldv_param_1_32,ldv_13_ldv_param_2_33);
      
#line 541 
      ldv_free((void *)ldv_13_ldv_param_2_33);
      
#line 544 
      goto ldv_44881;
      case 9: 
#line 546 
      ;
      
#line 548 
      ldv_13_ldv_param_2_31 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
      
#line 549 
      ldv_13_ldv_param_1_30 = (struct ethtool_rxnfc *)ldv_xmalloc_unknown_size(0UL);
      
#line 554 
      ldv_emg_wrapper_enic_get_rxnfc_20(ldv_13_container,ldv_13_ldv_param_1_30,ldv_13_ldv_param_2_31);
      
#line 558 
      ldv_free((void *)ldv_13_ldv_param_2_31);
      
#line 559 
      ldv_free((void *)ldv_13_ldv_param_1_30);
      
#line 562 
      goto ldv_44881;
      case 10: 
#line 564 
      ;
      
#line 567 
      ldv_emg_wrapper_enic_tx_timeout_24(ldv_13_container);
      
#line 570 
      goto ldv_44881;
      case 11: 
#line 572 
      ;
      
#line 574 
      ldv_13_ldv_param_2_29 = ldv_xmalloc_unknown_size(0UL);
      
#line 575 
      ldv_13_ldv_param_1_28 = (struct ethtool_tunable *)ldv_xmalloc_unknown_size(0UL);
      
#line 580 
      ldv_emg_wrapper_enic_set_tunable_8(ldv_13_container,ldv_13_ldv_param_1_28,ldv_13_ldv_param_2_29);
      
#line 584 
      ldv_free(ldv_13_ldv_param_2_29);
      
#line 585 
      ldv_free((void *)ldv_13_ldv_param_1_28);
      
#line 588 
      goto ldv_44881;
      case 12: 
#line 590 
      ;
      
#line 592 
      ldv_13_ldv_param_2_27 = (struct nlattr **)ldv_xmalloc_unknown_size(0UL);
      
#line 597 
      ldv_emg_wrapper_enic_set_vf_port_22(ldv_13_container,ldv_13_ldv_param_1_26,ldv_13_ldv_param_2_27);
      
#line 601 
      ldv_free((void *)ldv_13_ldv_param_2_27);
      
#line 604 
      goto ldv_44881;
      case 13: 
#line 606 
      ;
      
#line 608 
      ldv_13_ldv_param_1_25 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 613 
      ldv_emg_wrapper_enic_get_coalesce_19(ldv_13_container,ldv_13_ldv_param_1_25);
      
#line 617 
      ldv_free((void *)ldv_13_ldv_param_1_25);
      
#line 620 
      goto ldv_44881;
      case 14: 
#line 622 
      ;
      
#line 624 
      ldv_13_ldv_param_2_24 = ldv_xmalloc_unknown_size(0UL);
      
#line 625 
      ldv_13_ldv_param_1_23 = (struct ethtool_tunable *)ldv_xmalloc_unknown_size(0UL);
      
#line 630 
      ldv_emg_wrapper_enic_get_tunable_18(ldv_13_container,ldv_13_ldv_param_1_23,ldv_13_ldv_param_2_24);
      
#line 634 
      ldv_free(ldv_13_ldv_param_2_24);
      
#line 635 
      ldv_free((void *)ldv_13_ldv_param_1_23);
      
#line 638 
      goto ldv_44881;
      case 15: 
#line 640 
      ;
      
#line 646 
      enic_vlan_rx_add_vid(ldv_13_container,(unsigned short)((int)ldv_13_ldv_param_1_21),(unsigned short)((int)ldv_13_ldv_param_2_22));
      
#line 652 
      goto ldv_44881;
      case 16: 
#line 654 
      ;
      
#line 657 
      ldv_emg_wrapper_enic_get_rxfh_key_size_12(ldv_13_container);
      
#line 660 
      goto ldv_44881;
      case 17: 
#line 662 
      ;
      
#line 664 
      ldv_13_ldv_param_0_20 = (struct napi_struct *)ldv_xmalloc_unknown_size(0UL);
      
#line 669 
      ldv_emg_wrapper_enic_busy_poll_27(ldv_13_ldv_param_0_20);
      
#line 673 
      ldv_free((void *)ldv_13_ldv_param_0_20);
      
#line 676 
      goto ldv_44881;
      case 18: 
#line 678 
      ;
      
#line 684 
      ldv_emg_wrapper_enic_get_sset_count_17(ldv_13_container,ldv_13_ldv_param_1_19);
      
#line 690 
      goto ldv_44881;
      case 19: 
#line 692 
      ;
      
#line 694 
      ldv_13_ldv_param_1_18 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 699 
      ldv_emg_wrapper_enic_get_settings_16(ldv_13_container,ldv_13_ldv_param_1_18);
      
#line 703 
      ldv_free((void *)ldv_13_ldv_param_1_18);
      
#line 706 
      goto ldv_44881;
      case 20: 
#line 708 
      ;
      
#line 710 
      ldv_13_ldv_param_1_17 = ldv_xmalloc_unknown_size(0UL);
      
#line 715 
      ldv_emg_wrapper_enic_set_mac_address_dynamic_15(ldv_13_container,ldv_13_ldv_param_1_17);
      
#line 719 
      ldv_free(ldv_13_ldv_param_1_17);
      
#line 722 
      goto ldv_44881;
      case 21: 
#line 724 
      ;
      
#line 726 
      ldv_13_ldv_param_0_16 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 731 
      ldv_emg_wrapper_enic_hard_start_xmit_14(ldv_13_ldv_param_0_16,ldv_13_container);
      
#line 735 
      ldv_free((void *)ldv_13_ldv_param_0_16);
      
#line 738 
      goto ldv_44881;
      case 22: 
#line 740 
      ;
      
#line 743 
      ldv_emg_wrapper_enic_get_msglevel_13(ldv_13_container);
      
#line 746 
      goto ldv_44881;
      case 23: 
#line 748 
      ;
      
#line 750 
      ldv_13_ldv_param_2_15 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 755 
      ldv_emg_wrapper_enic_get_vf_port_21(ldv_13_container,ldv_13_ldv_param_1_14,ldv_13_ldv_param_2_15);
      
#line 759 
      ldv_free((void *)ldv_13_ldv_param_2_15);
      
#line 762 
      goto ldv_44881;
      case 24: 
#line 764 
      ;
      
#line 766 
      ldv_13_ldv_param_2_12 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 767 
      ldv_13_ldv_param_1_11 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
      
#line 772 
      ldv_emg_wrapper_enic_set_rxfh_11(ldv_13_container,ldv_13_ldv_param_1_11,ldv_13_ldv_param_2_12,(unsigned char)((int)ldv_13_ldv_param_3_13));
      
#line 776 
      ldv_free((void *)ldv_13_ldv_param_2_12);
      
#line 777 
      ldv_free((void *)ldv_13_ldv_param_1_11);
      
#line 780 
      goto ldv_44881;
      case 25: 
#line 782 
      ;
      
#line 784 
      ldv_13_ldv_param_1_10 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 789 
      ldv_emg_wrapper_enic_get_drvinfo_9(ldv_13_container,ldv_13_ldv_param_1_10);
      
#line 793 
      ldv_free((void *)ldv_13_ldv_param_1_10);
      
#line 796 
      goto ldv_44881;
      case 26: 
#line 798 
      ;
      
#line 801 
      (*ldv_emg_alias_eth_validate_addr_5)(ldv_13_container);
      
#line 804 
      goto ldv_44881;
      case 27: 
#line 806 
      ;
      
#line 808 
      ldv_13_ldv_param_2_9 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 809 
      ldv_13_ldv_param_1_8 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 814 
      ldv_emg_wrapper_enic_get_ethtool_stats_6(ldv_13_container,ldv_13_ldv_param_1_8,ldv_13_ldv_param_2_9);
      
#line 818 
      ldv_free((void *)ldv_13_ldv_param_2_9);
      
#line 819 
      ldv_free((void *)ldv_13_ldv_param_1_8);
      
#line 822 
      goto ldv_44881;
      case 28: 
#line 824 
      ;
      
#line 830 
      ldv_emg_wrapper_enic_change_mtu_7(ldv_13_container,ldv_13_ldv_param_1_7);
      
#line 836 
      goto ldv_44881;
      case 29: 
#line 838 
      ;
      
#line 840 
      ldv_13_ldv_param_1_6 = (struct rtnl_link_stats64 *)ldv_xmalloc_unknown_size(0UL);
      
#line 845 
      ldv_emg_wrapper_enic_get_stats_4(ldv_13_container,ldv_13_ldv_param_1_6);
      
#line 849 
      ldv_free((void *)ldv_13_ldv_param_1_6);
      
#line 852 
      goto ldv_44881;
      case 30: 
#line 854 
      ;
      
#line 860 
      ldv_emg_wrapper_enic_set_msglevel_23(ldv_13_container,ldv_13_ldv_param_1_5);
      
#line 866 
      goto ldv_44881;
      case 31: 
#line 868 
      ;
      
#line 871 
      (*ldv_emg_alias_ethtool_op_get_link_2)(ldv_13_container);
      
#line 874 
      goto ldv_44881;
      default: 
#line 876 
      ;
      
#line 876 
      __VERIFIER_assume(0);
    }
    ldv_44881: 
#line 879 
    ;
    
#line 879 
    ldv_free((void *)ldv_13_ldv_param_1_2);
    
#line 886 
    goto ldv_call_13;
  }
  else {
    
#line 894 
    __retres = (void *)0;
    
#line 894 
    goto return_label;
  }
  
#line 897 
  __retres = (void *)0;
  return_label: 
#line 897 
                return __retres;
}


#line 902  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_schedule_work(struct work_struct *arg0)
{
  _Bool __retres;
  struct work_struct *ldv_8_work_struct;
  int tmp;
  
#line 909 
  tmp = ldv_undef_int();
  
#line 909 
  if (tmp != 0) {
    
#line 911 
    ldv_8_work_struct = arg0;
    
#line 915 
    if (ldv_8_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 917 
      (*(ldv_8_work_struct->func))(ldv_8_work_struct); else ;
    
#line 922 
    __retres = (_Bool)1;
    
#line 922 
    goto return_label;
  }
  else {
    
#line 929 
    __retres = (_Bool)0;
    
#line 929 
    goto return_label;
  }
  return_label: 
#line 909 
                return __retres;
}


#line 939  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_17(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_17_resource_1;
  struct pci_device_id *ldv_17_ldv_param_1_2;
  struct pm_message ldv_17_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 944 
  struct pci_driver *ldv_17_container = ldv_emg_alias_enic_driver_2;
  
#line 945 
  int ldv_17_ret = ldv_undef_int();
  
#line 948 
  struct ldv_struct_pci_scenario_17 *data = (struct ldv_struct_pci_scenario_17 *)arg0;
  
#line 952 
  ldv_17_ret = ldv_undef_int();
  
#line 955 
  if (data != (struct ldv_struct_pci_scenario_17 *)0) {
    
#line 956 
    ldv_17_container = data->arg0;
    
#line 957 
    ldv_free((void *)data);
  }
  else ;
  
#line 968 
  goto ldv_main_17;
  
#line 970 
  __retres = (void *)0;
  
#line 970 
  goto return_label;
  ldv_main_17: 
#line 973 
  ;
  
#line 976 
  tmp_2 = ldv_undef_int();
  
#line 976 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 978 
    ldv_17_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 983 
    ldv_pre_probe();
    
#line 985 
    ldv_17_ret = ldv_emg_wrapper_enic_probe_2(ldv_17_resource_1,ldv_17_ldv_param_1_2);
    
#line 987 
    ldv_17_ret = ldv_post_probe(ldv_17_ret);
    
#line 991 
    ldv_free((void *)ldv_17_ldv_param_1_2);
    
#line 994 
    tmp_1 = ldv_undef_int();
    
#line 994 
    if (tmp_1 != 0) {
      
#line 996 
      __VERIFIER_assume(ldv_17_ret == 0);
      
#line 1003 
      goto ldv_call_17;
    }
    else {
      
#line 1007 
      __VERIFIER_assume(ldv_17_ret != 0);
      
#line 1014 
      goto ldv_main_17;
    }
  }
  else {
    
#line 1026 
    __retres = (void *)0;
    
#line 1026 
    goto return_label;
  }
  
#line 1029 
  __retres = (void *)0;
  
#line 1029 
  goto return_label;
  ldv_call_17: 
#line 1032 
  ;
  
#line 1035 
  tmp_3 = ldv_undef_int();
  
#line 1035 
  switch (tmp_3) {
    case 1: 
#line 1036 
    ;
    
#line 1045 
    goto ldv_call_17;
    case 2: 
#line 1048 
    ;
    
#line 1050 
    if (ldv_17_container->suspend != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 1052 
      ldv_17_ret = (*(ldv_17_container->suspend))(ldv_17_resource_1,ldv_17_resource_0);
      
#line 1054 
      ldv_17_ret = ldv_filter_err_code(ldv_17_ret);
    }
    else 
#line 1056 
         ldv_17_ret = ldv_undef_int();
    
#line 1061 
    if (ldv_17_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 1063 
      ldv_17_ret = (*(ldv_17_container->suspend_late))(ldv_17_resource_1,ldv_17_resource_0);
      
#line 1065 
      ldv_17_ret = ldv_filter_err_code(ldv_17_ret);
    }
    else 
#line 1067 
         ldv_17_ret = ldv_undef_int();
    
#line 1072 
    if (ldv_17_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 1074 
      (*(ldv_17_container->resume_early))(ldv_17_resource_1); else ;
    
#line 1079 
    if (ldv_17_container->resume != (int (*)(struct pci_dev *))0) 
#line 1081 
                                                                  (*(ldv_17_container->resume))(ldv_17_resource_1); else ;
    
#line 1089 
    goto ldv_call_17;
    case 3: 
#line 1092 
    ;
    
#line 1094 
    if (ldv_17_container->shutdown != (void (*)(struct pci_dev *))0) 
      
#line 1096 
      (*(ldv_17_container->shutdown))(ldv_17_resource_1); else ;
    
#line 1102 
    ldv_emg_wrapper_enic_remove_3(ldv_17_resource_1);
    
#line 1109 
    goto ldv_main_17;
    default: 
#line 1112 
    ;
    
#line 1112 
    __VERIFIER_assume(0);
  }
  
#line 1115 
  __retres = (void *)0;
  return_label: 
#line 1115 
                return __retres;
}


#line 1120  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_deregister_9_1(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_16 *cf_arg_16;
  int tmp;
  
#line 1123 
  tmp = ldv_undef_int();
  
#line 1123 
  switch (tmp) {
    case 0: 
#line 1124 
    ;
    
#line 1125 
    ret = pthread_join(ldv_thread_16,(void **)0);
    
#line 1126 
    __VERIFIER_assume(ret == 0);
    
#line 1127 
    goto ldv_44938;
    default: 
#line 1129 
    ;
    
#line 1129 
    __VERIFIER_assume(0);
  }
  ldv_44938: 
#line 1130 
  ;
  
#line 1131 
  return;
}


#line 1135  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_timer_scenario_16(void *arg0)
{
  void *__retres;
  struct timer_list *ldv_16_container;
  
#line 1140 
  struct ldv_struct_timer_scenario_16 *data = (struct ldv_struct_timer_scenario_16 *)arg0;
  
#line 1145 
  if (data != (struct ldv_struct_timer_scenario_16 *)0) {
    
#line 1146 
    ldv_16_container = data->arg0;
    
#line 1147 
    ldv_free((void *)data);
  }
  else ;
  
#line 1152 
  if (ldv_16_container->function != (void (*)(unsigned long ))0) {
    
#line 1154 
    ldv_switch_to_interrupt_context();
    
#line 1156 
    (*(ldv_16_container->function))(ldv_16_container->data);
    
#line 1158 
    ldv_switch_to_process_context();
  }
  else ;
  
#line 1167 
  __retres = (void *)0;
  
#line 1167 
  goto return_label;
  
#line 1169 
  __retres = (void *)0;
  return_label: 
#line 1169 
                return __retres;
}


#line 1174  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_15(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_15_ret_val;
  int ldv_15_line;
  void *ldv_15_data;
  enum irqreturn (*ldv_15_thread)(int , void *);
  int tmp;
  
#line 1180 
  enum irqreturn (*ldv_15_callback)(int , void *) = & ldv_emg_wrapper_enic_isr_legacy_2;
  
#line 1183 
  struct ldv_struct_interrupt_scenario_14 *data = (struct ldv_struct_interrupt_scenario_14 *)arg0;
  
#line 1188 
  if (data != (struct ldv_struct_interrupt_scenario_14 *)0) {
    
#line 1189 
    ldv_15_line = data->arg0;
    
#line 1190 
    ldv_15_callback = data->arg1;
    
#line 1191 
    ldv_15_thread = data->arg2;
    
#line 1192 
    ldv_15_data = data->arg3;
    
#line 1193 
    ldv_free((void *)data);
  }
  else ;
  
#line 1199 
  ldv_switch_to_interrupt_context();
  
#line 1201 
  ldv_15_ret_val = ldv_emg_wrapper_enic_isr_legacy_2(ldv_15_line,ldv_15_data);
  
#line 1203 
  ldv_switch_to_process_context();
  
#line 1206 
  tmp = ldv_undef_int();
  
#line 1206 
  if (tmp != 0) {
    
#line 1208 
    __VERIFIER_assume(ldv_15_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 1212 
    if (ldv_15_thread != (enum irqreturn (*)(int , void *))0) 
#line 1214 
                                                              (*ldv_15_thread)(ldv_15_line,ldv_15_data); else ;
  }
  else 
#line 1221 
       __VERIFIER_assume(ldv_15_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 1230 
  __retres = (void *)0;
  
#line 1230 
  goto return_label;
  
#line 1232 
  __retres = (void *)0;
  return_label: 
#line 1232 
                return __retres;
}


#line 1237  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_10_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_17 *cf_arg_17;
  int tmp;
  
#line 1240 
  tmp = ldv_undef_int();
  
#line 1240 
  switch (tmp) {
    case 0: 
#line 1241 
    ;
    
#line 1242 
    ret = pthread_join(ldv_thread_17,(void **)0);
    
#line 1243 
    __VERIFIER_assume(ret == 0);
    
#line 1244 
    goto ldv_44964;
    default: 
#line 1246 
    ;
    
#line 1246 
    __VERIFIER_assume(0);
  }
  ldv_44964: 
#line 1247 
  ;
  
#line 1248 
  return;
}


#line 1252  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_11_netdev;
  int tmp_3;
  
#line 1256 
  int ldv_11_ret = ldv_undef_int();
  
#line 1259 
  ldv_11_ret = ldv_undef_int();
  
#line 1262 
  tmp_3 = ldv_undef_int();
  
#line 1262 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 1264 
    ldv_11_netdev = arg0;
    
#line 1269 
    ldv_11_ret = ldv_emg_wrapper_enic_open_2(ldv_11_netdev);
    
#line 1272 
    tmp_1 = ldv_undef_int();
    
#line 1272 
    if (tmp_1 != 0) {
      
#line 1274 
      __VERIFIER_assume(ldv_11_ret == 0);
      
#line 1278 
      ldv_dispatch_register_11_4(ldv_11_netdev);
      
#line 1282 
      __retres = 0;
      
#line 1282 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 1289 
      __VERIFIER_assume(ldv_11_ret != 0);
      
#line 1290 
      ldv_failed_register_netdev();
      
#line 1291 
      tmp_0 = ldv_undef_int_negative();
      
#line 1291 
      __retres = tmp_0;
      
#line 1291 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 1299 
    ldv_failed_register_netdev();
    
#line 1300 
    tmp_2 = ldv_undef_int_negative();
    
#line 1300 
    __retres = tmp_2;
    
#line 1300 
    goto return_label;
  }
  return_label: 
#line 1262 
                return __retres;
}


#line 1310  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 1317 
  ldv_1_ret = ldv_emg_enic_init_module();
  
#line 1318 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 1321 
  tmp = ldv_undef_int();
  
#line 1321 
  if (tmp != 0) {
    
#line 1323 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 1327 
    __retres = (void *)0;
    
#line 1327 
    goto return_label;
  }
  else {
    
#line 1331 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 1336 
    ldv_emg_enic_cleanup_module();
    
#line 1340 
    __retres = (void *)0;
    
#line 1340 
    goto return_label;
  }
  
#line 1343 
  __retres = (void *)0;
  return_label: 
#line 1343 
                return __retres;
}


#line 1348  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_6_netdev;
  
#line 1354 
  ldv_6_netdev = arg0;
  
#line 1359 
  ldv_emg_wrapper_enic_stop_2(ldv_6_netdev);
  
#line 1363 
  ldv_dispatch_deregister_6_1(ldv_6_netdev);
  
#line 1367 
  goto return_label;
  return_label: 
#line 1369 
                return;
}


#line 1374  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_3_line;
  
#line 1380 
  ldv_3_line = (int)arg0;
  
#line 1384 
  ldv_dispatch_irq_deregister_3_1(ldv_3_line);
  
#line 1388 
  goto return_label;
  return_label: 
#line 1390 
                return;
}


#line 1395  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_16 *cf_arg_16;
  int tmp;
  
#line 1398 
  tmp = ldv_undef_int();
  
#line 1398 
  switch (tmp) {
    case 0: 
#line 1399 
    ;
    
#line 1400 
    cf_arg_16 = (struct ldv_struct_timer_scenario_16 *)ldv_xmalloc(16UL);
    
#line 1401 
    cf_arg_16->arg0 = arg0;
    
#line 1402 
    ret = pthread_create(& ldv_thread_16,(pthread_attr_t const *)0,& ldv_timer_scenario_16,(void *)cf_arg_16);
    
#line 1403 
    __VERIFIER_assume(ret == 0);
    
#line 1404 
    goto ldv_44990;
    default: 
#line 1406 
    ;
    
#line 1406 
    __VERIFIER_assume(0);
  }
  ldv_44990: 
#line 1407 
  ;
  
#line 1408 
  return;
}


#line 1412  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_6_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_13 *cf_arg_13;
  int tmp;
  
#line 1415 
  tmp = ldv_undef_int();
  
#line 1415 
  switch (tmp) {
    case 0: 
#line 1416 
    ;
    
#line 1417 
    ret = pthread_join(ldv_thread_13,(void **)0);
    
#line 1418 
    __VERIFIER_assume(ret == 0);
    
#line 1419 
    goto ldv_44998;
    default: 
#line 1421 
    ;
    
#line 1421 
    __VERIFIER_assume(0);
  }
  ldv_44998: 
#line 1422 
  ;
  
#line 1423 
  return;
}


#line 1427  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 1433 
  ldv_2_netdev = arg0;
  
#line 1434 
  ldv_free((void *)ldv_2_netdev);
  
#line 1438 
  goto return_label;
  return_label: 
#line 1440 
                return;
}


#line 1445  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_14(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_14_ret_val;
  int ldv_14_line;
  void *ldv_14_data;
  enum irqreturn (*ldv_14_thread)(int , void *);
  int tmp;
  
#line 1451 
  enum irqreturn (*ldv_14_callback)(int , void *) = & ldv_emg_wrapper_enic_isr_msi_2;
  
#line 1454 
  struct ldv_struct_interrupt_scenario_14 *data = (struct ldv_struct_interrupt_scenario_14 *)arg0;
  
#line 1459 
  if (data != (struct ldv_struct_interrupt_scenario_14 *)0) {
    
#line 1460 
    ldv_14_line = data->arg0;
    
#line 1461 
    ldv_14_callback = data->arg1;
    
#line 1462 
    ldv_14_thread = data->arg2;
    
#line 1463 
    ldv_14_data = data->arg3;
    
#line 1464 
    ldv_free((void *)data);
  }
  else ;
  
#line 1470 
  ldv_switch_to_interrupt_context();
  
#line 1472 
  ldv_14_ret_val = ldv_emg_wrapper_enic_isr_msi_2(ldv_14_line,ldv_14_data);
  
#line 1474 
  ldv_switch_to_process_context();
  
#line 1477 
  tmp = ldv_undef_int();
  
#line 1477 
  if (tmp != 0) {
    
#line 1479 
    __VERIFIER_assume(ldv_14_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 1483 
    if (ldv_14_thread != (enum irqreturn (*)(int , void *))0) 
#line 1485 
                                                              (*ldv_14_thread)(ldv_14_line,ldv_14_data); else ;
  }
  else 
#line 1492 
       __VERIFIER_assume(ldv_14_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 1501 
  __retres = (void *)0;
  
#line 1501 
  goto return_label;
  
#line 1503 
  __retres = (void *)0;
  return_label: 
#line 1503 
                return __retres;
}


#line 1508  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/cisco/enic/enic.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1)
{
  int __retres;
  struct timer_list *ldv_4_timer_list;
  int tmp_0;
  
#line 1515 
  tmp_0 = ldv_undef_int();
  
#line 1515 
  if (tmp_0 != 0) {
    
#line 1517 
    ldv_4_timer_list = arg0;
    
#line 1521 
    ldv_dispatch_instance_register_4_3(ldv_4_timer_list);
    
#line 1525 
    __retres = 0;
    
#line 1525 
    goto return_label;
  }
  else {
    int tmp;
    
#line 1532 
    tmp = ldv_undef_int_negative();
    
#line 1532 
    __retres = tmp;
    
#line 1532 
    goto return_label;
  }
  return_label: 
#line 1515 
                return __retres;
}


