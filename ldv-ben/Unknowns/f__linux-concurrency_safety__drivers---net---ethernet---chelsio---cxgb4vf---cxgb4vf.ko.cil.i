/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u64 __be64;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __sum16;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 1170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugobjects.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39 
struct rw_semaphore;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct vm_area_struct;

#line 173 
struct inode;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 246  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 247 
enum hrtimer_restart;

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_47 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_46 {
   struct __anonstruct_47 __anonCompField___anonunion_46_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_46 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_53 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_54 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_52 {
   struct __anonstruct_53 __anonCompField___anonunion_52_23 ;
   struct __anonstruct_54 __anonCompField___anonunion_52_24 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_52 __anonCompField_uprobe_task_25 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_55 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_55 mm_context_t;

#line 27 
struct address_space;

#line 28 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_56 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_58 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_62 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_61 {
   atomic_t _mapcount ;
   struct __anonstruct_62 __anonCompField___anonunion_61_28 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_60 {
   union __anonunion_61 __anonCompField___anonstruct_60_29 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_59 {
   unsigned long counters ;
   struct __anonstruct_60 __anonCompField___anonunion_59_30 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_57 {
   union __anonunion_58 __anonCompField___anonstruct_57_27 ;
   union __anonunion_59 __anonCompField___anonstruct_57_31 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_64 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_65 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_63 {
   struct list_head lru ;
   struct __anonstruct_64 __anonCompField___anonunion_63_33 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_65 __anonCompField___anonunion_63_34 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_66 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_56 __anonCompField_page_26 ;
   struct __anonstruct_57 __anonCompField_page_32 ;
   union __anonunion_63 __anonCompField_page_35 ;
   union __anonunion_66 __anonCompField_page_36 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_67 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_67 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct bio_vec;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_69 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_69 __anonCompField_iov_iter_37 ;
   unsigned long nr_segs ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 18 
struct pid;

#line 19 
struct cred;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/fcntl.h"
enum ldv_12054 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_12054 socket_state;

#line 54 
struct poll_table_struct;

#line 55 
struct pipe_inode_info;

#line 56 
struct net;

#line 73 
struct fasync_struct;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct sock;

#line 93 
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_70 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_70 nodemask_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct free_area {
   struct list_head free_list[6U] ;
   unsigned long nr_free ;
};

#line 96 
struct pglist_data;

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct zone_padding {
   char x[0U] ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct zone_reclaim_stat {
   unsigned long recent_rotated[2U] ;
   unsigned long recent_scanned[2U] ;
};

#line 215 
struct zone;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct lruvec {
   struct list_head lists[5U] ;
   struct zone_reclaim_stat reclaim_stat ;
   struct zone *zone ;
};

#line 247  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct per_cpu_pages {
   int count ;
   int high ;
   int batch ;
   struct list_head lists[3U] ;
};

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct per_cpu_pageset {
   struct per_cpu_pages pcp ;
   s8 expire ;
   s8 stat_threshold ;
   s8 vm_stat_diff[39U] ;
};

#line 270 
enum zone_type {
    ZONE_DMA = 0,
    ZONE_DMA32 = 1,
    ZONE_NORMAL = 2,
    ZONE_MOVABLE = 3,
    __MAX_NR_ZONES = 4
};

#line 278  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct zone {
   unsigned long watermark[3U] ;
   long lowmem_reserve[4U] ;
   int node ;
   unsigned int inactive_ratio ;
   struct pglist_data *zone_pgdat ;
   struct per_cpu_pageset *pageset ;
   unsigned long dirty_balance_reserve ;
   unsigned long min_unmapped_pages ;
   unsigned long min_slab_pages ;
   unsigned long zone_start_pfn ;
   unsigned long managed_pages ;
   unsigned long spanned_pages ;
   unsigned long present_pages ;
   char const *name ;
   int nr_migrate_reserve_block ;
   unsigned long nr_isolate_pageblock ;
   seqlock_t span_seqlock ;
   wait_queue_head_t *wait_table ;
   unsigned long wait_table_hash_nr_entries ;
   unsigned long wait_table_bits ;
   struct zone_padding _pad1_ ;
   struct free_area free_area[11U] ;
   unsigned long flags ;
   spinlock_t lock ;
   struct zone_padding _pad2_ ;
   spinlock_t lru_lock ;
   struct lruvec lruvec ;
   atomic_long_t inactive_age ;
   unsigned long percpu_drift_mark ;
   unsigned long compact_cached_free_pfn ;
   unsigned long compact_cached_migrate_pfn[2U] ;
   unsigned int compact_considered ;
   unsigned int compact_defer_shift ;
   int compact_order_failed ;
   bool compact_blockskip_flush ;
   struct zone_padding _pad3_ ;
   atomic_long_t vm_stat[39U] ;
};

#line 567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct zonelist_cache {
   unsigned short z_to_n[4096U] ;
   unsigned long fullzones[64U] ;
   unsigned long last_full_zap ;
};

#line 654  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct zoneref {
   struct zone *zone ;
   int zone_idx ;
};

#line 667  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct zonelist {
   struct zonelist_cache *zlcache_ptr ;
   struct zoneref _zonerefs[4097U] ;
   struct zonelist_cache zlcache ;
};

#line 705  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct pglist_data {
   struct zone node_zones[4U] ;
   struct zonelist node_zonelists[2U] ;
   int nr_zones ;
   spinlock_t node_size_lock ;
   unsigned long node_start_pfn ;
   unsigned long node_present_pages ;
   unsigned long node_spanned_pages ;
   int node_id ;
   wait_queue_head_t kswapd_wait ;
   wait_queue_head_t pfmemalloc_wait ;
   struct task_struct *kswapd ;
   int kswapd_max_order ;
   enum zone_type classzone_idx ;
   spinlock_t numabalancing_migrate_lock ;
   unsigned long numabalancing_migrate_next_window ;
   unsigned long numabalancing_migrate_nr_pages ;
   unsigned long first_deferred_pfn ;
};

#line 773  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
typedef struct pglist_data pg_data_t;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 33 
struct dentry;

#line 34 
struct user_namespace;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_162 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_162 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_163 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_163 kgid_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_164 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_164 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_166 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_167 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_168 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_169 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_171 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_170 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_171 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_172 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_173 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_165 {
   int _pad[28U] ;
   struct __anonstruct__kill_166 _kill ;
   struct __anonstruct__timer_167 _timer ;
   struct __anonstruct__rt_168 _rt ;
   struct __anonstruct__sigchld_169 _sigchld ;
   struct __anonstruct__sigfault_170 _sigfault ;
   struct __anonstruct__sigpoll_172 _sigpoll ;
   struct __anonstruct__sigsys_173 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_165 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_180 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_181 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_183 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_182 {
   struct keyring_index_key index_key ;
   struct __anonstruct_183 __anonCompField___anonunion_182_50 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_184 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_186 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_185 {
   union __anonunion_payload_186 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_180 __anonCompField_key_48 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_181 __anonCompField_key_49 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_182 __anonCompField_key_51 ;
   union __anonunion_type_data_184 type_data ;
   union __anonunion_185 __anonCompField_key_52 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
union __anonunion_187 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_187 __anonCompField_idr_layer_53 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 31 
struct kernfs_node;

#line 32 
struct kernfs_ops;

#line 33 
struct kernfs_open_file;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270 
struct kernfs_root;

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct uts_namespace;

#line 1173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 176 
struct iattr;

#line 177 
struct super_block;

#line 178 
struct file_system_type;

#line 179 
struct kernfs_open_node;

#line 180 
struct kernfs_iattrs;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_206 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_206 __anonCompField_kernfs_node_57 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct kobject;

#line 478 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/stat.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct bin_attribute;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203 
struct of_device_id;

#line 203 
struct acpi_device_id;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 1283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_207 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_207 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_22386 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_212 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_213 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_22386 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_212 __anonCompField_nf_bridge_info_61 ;
   union __anonunion_213 __anonCompField_nf_bridge_info_62 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 215 
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_214 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_214 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_216 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_215 {
   u64 v64 ;
   struct __anonstruct_216 __anonCompField___anonunion_215_63 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_215 __anonCompField_skb_mstamp_64 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_219 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_218 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_219 __anonCompField___anonstruct_218_65 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_217 {
   struct __anonstruct_218 __anonCompField___anonunion_217_66 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_221 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_220 {
   __wsum csum ;
   struct __anonstruct_221 __anonCompField___anonunion_220_68 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_222 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_223 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_224 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_217 __anonCompField_sk_buff_67 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_220 __anonCompField_sk_buff_69 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_222 __anonCompField_sk_buff_70 ;
   __u32 secmark ;
   union __anonunion_223 __anonCompField_sk_buff_71 ;
   union __anonunion_224 __anonCompField_sk_buff_72 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 767 
struct rtable;

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_226 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_226 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_227 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_227 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_228 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_228 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_229 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_229 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_230 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_230 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_231 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_231 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_232 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_232 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_233 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_233 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_234 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_235 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_234 ifr_ifrn ;
   union __anonunion_ifr_ifru_235 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_240 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_239 {
   struct __anonstruct_240 __anonCompField___anonunion_239_73 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_239 __anonCompField_lockref_74 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_242 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_241 {
   struct __anonstruct_242 __anonCompField___anonunion_241_75 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_241 __anonCompField_qstr_76 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_243 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_243 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_247 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_246 {
   struct __anonstruct_247 __anonCompField___anonunion_246_77 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_246 __anonCompField_radix_tree_node_78 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct kstatfs;

#line 63 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_251 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_251 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_252 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_252 __anonCompField_kqid_80 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_255 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_256 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_257 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_255 __anonCompField_inode_81 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_256 __anonCompField_inode_82 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_257 __anonCompField_inode_83 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_258 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_258 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_260 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_259 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_260 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_259 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib_device {
   atomic_long_t mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib_device {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118 
struct proc_dir_entry;

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 92  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
typedef irqreturn_t (*irq_handler_t)(int , void *);

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_291 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_291 possible_net_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_27952 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_27952 phy_interface_t;

#line 126 
enum ldv_28005 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_28005 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct xfrm_policy;

#line 98 
struct xfrm_state;

#line 114 
struct request_sock;

#line 1628 
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 331 
enum gro_result {
    GRO_MERGED = 0,
    GRO_MERGED_FREE = 1,
    GRO_HELD = 2,
    GRO_NORMAL = 3,
    GRO_DROP = 4
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum gro_result gro_result_t;

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_29717 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_29718 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_304 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_305 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_306 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_304 adj_list ;
   struct __anonstruct_all_adj_list_305 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_29717 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_29718 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_306 __anonCompField_net_device_93 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 646  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct iphdr {
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) ihl : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) version : 4 ;
   __u8 tos ;
   __be16 tot_len ;
   __be16 id ;
   __be16 frag_off ;
   __u8 ttl ;
   __u8 protocol ;
   __sum16 check ;
   __be32 saddr ;
   __be32 daddr ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ipv6.h"
struct ipv6hdr {
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) priority : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) version : 4 ;
   __u8 flow_lbl[3U] ;
   __be16 payload_len ;
   __u8 nexthdr ;
   __u8 hop_limit ;
   struct in6_addr saddr ;
   struct in6_addr daddr ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_pinfo ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   struct ipv6_stable_secret stable_secret ;
   void *sysctl ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uaccess.h"
struct page_counter {
   atomic_long_t count ;
   unsigned long limit ;
   struct page_counter *parent ;
   unsigned long watermark ;
   unsigned long failcnt ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cacheflush.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/filter.h"
struct bpf_insn {
   __u8 code ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) dst_reg : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/bpf.h"
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4
};

#line 273 
struct bpf_prog_aux;

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
union __anonunion_326 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   bool jited ;
   bool gpl_compatible ;
   u32 len ;
   enum bpf_prog_type type ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(struct sk_buff const *, struct bpf_insn const *) ;
   union __anonunion_326 __anonCompField_bpf_prog_98 ;
};

#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sk_filter {
   atomic_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_nulls.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   unsigned long _key ;
};

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct nla_policy {
   u16 type ;
   u16 len ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char const *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   int maxtype ;
   struct nla_policy const *policy ;
   int (*validate)(struct nlattr **, struct nlattr **) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device const *) ;
   int (*fill_info)(struct sk_buff *, struct net_device const *) ;
   size_t (*get_xstats_size)(struct net_device const *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device const *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   int slave_maxtype ;
   struct nla_policy const *slave_policy ;
   int (*slave_validate)(struct nlattr **, struct nlattr **) ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **) ;
   size_t (*get_slave_size)(struct net_device const *, struct net_device const *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device const *, struct net_device const *) ;
   struct net *(*get_link_net)(struct net_device const *) ;
};

#line 171 
struct neigh_table;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   void (*neigh_cleanup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   atomic_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
};

#line 129 
struct neigh_ops;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   atomic_t refcnt ;
   struct sk_buff_head arp_queue ;
   unsigned int arp_queue_len_bytes ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops const *ops ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 key[0U] ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_table {
   int family ;
   int entry_size ;
   int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void const *, struct net_device const *, __u32 *) ;
   bool (*key_eq)(struct neighbour const *, void const *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};

#line 519 
struct dn_route;

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
union __anonunion_334 {
   struct dst_entry *next ;
   struct rtable *rt_next ;
   struct rt6_info *rt6_next ;
   struct dn_route *dn_next ;
};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct dst_entry {
   struct callback_head callback_head ;
   struct dst_entry *child ;
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct dst_entry *path ;
   struct dst_entry *from ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   unsigned short pending_confirm ;
   short error ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   __u32 tclassid ;
   long __pad_to_align_refcnt[2U] ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   union __anonunion_334 __anonCompField_dst_entry_99 ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_socket_lock_t_335 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef struct __anonstruct_socket_lock_t_335 socket_lock_t;

#line 124 
struct proto;

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u32 __portpair;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u64 __addrpair;

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_337 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_336 {
   __addrpair skc_addrpair ;
   struct __anonstruct_337 __anonCompField___anonunion_336_100 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_338 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_340 {
   __be16 skc_dport ;
   __u16 skc_num ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_339 {
   __portpair skc_portpair ;
   struct __anonstruct_340 __anonCompField___anonunion_339_103 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_341 {
   struct hlist_node skc_bind_node ;
   struct hlist_nulls_node skc_portaddr_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_342 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock_common {
   union __anonunion_336 __anonCompField_sock_common_101 ;
   union __anonunion_338 __anonCompField_sock_common_102 ;
   union __anonunion_339 __anonCompField_sock_common_104 ;
   unsigned short skc_family ;
   unsigned char volatile skc_state ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) skc_reuse : 4 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_reuseport : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_ipv6only : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_341 __anonCompField_sock_common_105 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_342 __anonCompField_sock_common_106 ;
   int skc_tx_queue_mapping ;
   atomic_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
};

#line 219 
struct cg_proto;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_sk_backlog_343 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_343 sk_backlog ;
   int sk_forward_alloc ;
   __u32 sk_rxhash ;
   u16 sk_incoming_cpu ;
   __u32 sk_txhash ;
   unsigned int sk_napi_id ;
   unsigned int sk_ll_usec ;
   atomic_t sk_drops ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   struct socket_wq *sk_wq ;
   struct xfrm_policy *sk_policy[2U] ;
   unsigned long sk_flags ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   spinlock_t sk_dst_lock ;
   atomic_t sk_wmem_alloc ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   struct sk_buff_head sk_write_queue ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) sk_shutdown : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_tx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_rx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) sk_userlocks : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) sk_protocol : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) sk_type : 16 ;
   int sk_wmem_queued ;
   gfp_t sk_allocation ;
   u32 sk_pacing_rate ;
   u32 sk_max_pacing_rate ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   u16 sk_gso_max_segs ;
   int sk_rcvlowat ;
   unsigned long sk_lingertime ;
   struct sk_buff_head sk_error_queue ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   __u32 sk_priority ;
   __u32 sk_cgrp_prioidx ;
   struct pid *sk_peer_pid ;
   struct cred const *sk_peer_cred ;
   long sk_rcvtimeo ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u32 sk_tskey ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   struct page_frag sk_frag ;
   struct sk_buff *sk_send_head ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   void *sk_security ;
   __u32 sk_mark ;
   u32 sk_classid ;
   struct cg_proto *sk_cgrp ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
};

#line 914 
struct request_sock_ops;

#line 915 
struct timewait_sock_ops;

#line 916 
struct inet_hashinfo;

#line 917 
struct raw_hashinfo;

#line 932 
struct udp_table;

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_h_346 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
};

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   void (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   void (*clear_sk)(struct sock *, int ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock const *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   int *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   int slab_flags ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_346 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*init_cgroup)(struct mem_cgroup *, struct cgroup_subsys *) ;
   void (*destroy_cgroup)(struct mem_cgroup *) ;
   struct cg_proto *(*proto_cgroup)(struct mem_cgroup *) ;
};

#line 1054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct cg_proto {
   struct page_counter memory_allocated ;
   struct percpu_counter sockets_allocated ;
   int memory_pressure ;
   long sysctl_mem[3U] ;
   unsigned long flags ;
   struct mem_cgroup *memcg ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jhash.h"
struct request_sock_ops {
   int family ;
   int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock const *) ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   struct sock *rsk_listener ;
   u16 mss ;
   u8 num_retrans ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cookie_ts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) num_timeout : 7 ;
   u32 window_clamp ;
   u32 rcv_wnd ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops const *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};

#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_connection_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_timewait_sock.h"
struct tcphdr {
   __be16 source ;
   __be16 dest ;
   __be32 seq ;
   __be32 ack_seq ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) res1 : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) doff : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) fin : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syn : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rst : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) psh : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ack : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) urg : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ece : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cwr : 1 ;
   __be16 window ;
   __sum16 check ;
   __be16 urg_ptr ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ip6_sf_list {
   struct ip6_sf_list *sf_next ;
   struct in6_addr sf_addr ;
   unsigned long sf_count[2U] ;
   unsigned char sf_gsresp ;
   unsigned char sf_oldin ;
   unsigned char sf_crcount ;
};

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifmcaddr6 {
   struct in6_addr mca_addr ;
   struct inet6_dev *idev ;
   struct ifmcaddr6 *next ;
   struct ip6_sf_list *mca_sources ;
   struct ip6_sf_list *mca_tomb ;
   unsigned int mca_sfmode ;
   unsigned char mca_crcount ;
   unsigned long mca_sfcount[2U] ;
   struct timer_list mca_timer ;
   unsigned int mca_flags ;
   int mca_users ;
   atomic_t mca_refcnt ;
   spinlock_t mca_lock ;
   unsigned long mca_cstamp ;
   unsigned long mca_tstamp ;
};

#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifacaddr6 {
   struct in6_addr aca_addr ;
   struct inet6_dev *aca_idev ;
   struct rt6_info *aca_rt ;
   struct ifacaddr6 *aca_next ;
   int aca_users ;
   atomic_t aca_refcnt ;
   unsigned long aca_cstamp ;
   unsigned long aca_tstamp ;
};

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ipv6_devstat {
   struct proc_dir_entry *proc_dir_entry ;
   struct ipstats_mib *ipv6 ;
   struct icmpv6_mib_device *icmpv6dev ;
   struct icmpv6msg_mib_device *icmpv6msgdev ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct inet6_dev {
   struct net_device *dev ;
   struct list_head addr_list ;
   struct ifmcaddr6 *mc_list ;
   struct ifmcaddr6 *mc_tomb ;
   spinlock_t mc_lock ;
   unsigned char mc_qrv ;
   unsigned char mc_gq_running ;
   unsigned char mc_ifc_count ;
   unsigned char mc_dad_count ;
   unsigned long mc_v1_seen ;
   unsigned long mc_qi ;
   unsigned long mc_qri ;
   unsigned long mc_maxdelay ;
   struct timer_list mc_gq_timer ;
   struct timer_list mc_ifc_timer ;
   struct timer_list mc_dad_timer ;
   struct ifacaddr6 *ac_list ;
   rwlock_t lock ;
   atomic_t refcnt ;
   __u32 if_flags ;
   int dead ;
   u8 rndid[8U] ;
   struct timer_list regen_timer ;
   struct list_head tempaddr_list ;
   struct in6_addr token ;
   struct neigh_parms *nd_parms ;
   struct ipv6_devconf cnf ;
   struct ipv6_devstat stats ;
   struct timer_list rs_timer ;
   __u8 rs_probes ;
   __u8 addr_gen_mode ;
   unsigned long tstamp ;
   struct callback_head rcu ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cryptohash.h"
union __anonunion_367 {
   __be32 a4 ;
   __be32 a6[4U] ;
   struct in6_addr in6 ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cryptohash.h"
struct inetpeer_addr_base {
   union __anonunion_367 __anonCompField_inetpeer_addr_base_108 ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inetpeer_addr {
   struct inetpeer_addr_base addr ;
   __u16 family ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_368 {
   struct list_head gc_list ;
   struct callback_head gc_rcu ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct __anonstruct_370 {
   atomic_t rid ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_369 {
   struct __anonstruct_370 __anonCompField___anonunion_369_110 ;
   struct callback_head rcu ;
   struct inet_peer *gc_next ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer {
   struct inet_peer *avl_left ;
   struct inet_peer *avl_right ;
   struct inetpeer_addr daddr ;
   __u32 avl_height ;
   u32 metrics[16U] ;
   u32 rate_tokens ;
   unsigned long rate_last ;
   union __anonunion_368 __anonCompField_inet_peer_109 ;
   union __anonunion_369 __anonCompField_inet_peer_111 ;
   __u32 dtime ;
   atomic_t refcnt ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer_base {
   struct inet_peer *root ;
   seqlock_t lock ;
   int total ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct uncached_list;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct rtable {
   struct dst_entry dst ;
   int rt_genid ;
   unsigned int rt_flags ;
   __u16 rt_type ;
   __u8 rt_is_input ;
   __u8 rt_uses_gateway ;
   int rt_iif ;
   __be32 rt_gateway ;
   u32 rt_pmtu ;
   struct list_head rt_uncached ;
   struct uncached_list *rt_uncached_list ;
};

#line 317  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/route.h"
struct inet_ehash_bucket {
   struct hlist_nulls_head chain ;
};

#line 92  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_hashtables.h"
struct inet_bind_hashbucket {
   spinlock_t lock ;
   struct hlist_head chain ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_hashtables.h"
struct inet_listen_hashbucket {
   spinlock_t lock ;
   struct hlist_nulls_head head ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_hashtables.h"
struct inet_hashinfo {
   struct inet_ehash_bucket *ehash ;
   spinlock_t *ehash_locks ;
   unsigned int ehash_mask ;
   unsigned int ehash_locks_mask ;
   struct inet_bind_hashbucket *bhash ;
   unsigned int bhash_size ;
   struct kmem_cache *bind_bucket_cachep ;
   struct inet_listen_hashbucket listening_hash[32U] ;
};

#line 620  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_eth_tx_pkt_vm_wr {
   __be32 op_immdlen ;
   __be32 equiq_to_len16 ;
   __be32 r3[2U] ;
   u8 ethmacdst[6U] ;
   u8 ethmacsrc[6U] ;
   __be16 ethtype ;
   __be16 vlantci ;
};

#line 1216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_iq_cmd {
   __be32 op_to_vfn ;
   __be32 alloc_to_len16 ;
   __be16 physiqid ;
   __be16 iqid ;
   __be16 fl0id ;
   __be16 fl1id ;
   __be32 type_to_iqandstindex ;
   __be16 iqdroprss_to_iqesize ;
   __be16 iqsize ;
   __be64 iqaddr ;
   __be32 iqns_to_fl0congen ;
   __be16 fl0dcaen_to_fl0cidxfthresh ;
   __be16 fl0size ;
   __be64 fl0addr ;
   __be32 fl1cngchmap_to_fl1congen ;
   __be16 fl1dcaen_to_fl1cidxfthresh ;
   __be16 fl1size ;
   __be64 fl1addr ;
};

#line 1314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_eq_eth_cmd {
   __be32 op_to_vfn ;
   __be32 alloc_to_len16 ;
   __be32 eqid_pkd ;
   __be32 physeqid_pkd ;
   __be32 fetchszm_to_iqid ;
   __be32 dcaen_to_eqsize ;
   __be64 eqaddr ;
   __be32 viid_pkd ;
   __be32 r8_lo ;
   __be64 r9 ;
};

#line 3160 
enum chip_type {
    T4_A1 = 65,
    T4_A2 = 66,
    T4_FIRST_REV = 65,
    T4_LAST_REV = 66,
    T5_A0 = 80,
    T5_A1 = 81,
    T5_FIRST_REV = 80,
    T5_LAST_REV = 81
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_common.h"
struct link_config {
   unsigned int supported ;
   unsigned int advertising ;
   unsigned short requested_speed ;
   unsigned short speed ;
   unsigned char requested_fc ;
   unsigned char fc ;
   unsigned char autoneg ;
   unsigned char link_ok ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_common.h"
struct dev_params {
   u32 fwrev ;
   u32 tprev ;
};

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_common.h"
struct sge_params {
   u32 sge_control ;
   u32 sge_control2 ;
   u32 sge_host_page_size ;
   u32 sge_egress_queues_per_page ;
   u32 sge_ingress_queues_per_page ;
   u32 sge_vf_hps ;
   u32 sge_vf_eq_qpp ;
   u32 sge_vf_iq_qpp ;
   u32 sge_fl_buffer_size[16U] ;
   u32 sge_ingress_rx_threshold ;
   u32 sge_congestion_control ;
   u32 sge_timer_value_0_and_1 ;
   u32 sge_timer_value_2_and_3 ;
   u32 sge_timer_value_4_and_5 ;
};

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_common.h"
struct vpd_params {
   u32 cclk ;
};

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_common.h"
struct arch_specific_params {
   u32 sge_fl_db ;
   u16 mps_tcam_size ;
};

#line 165  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_common.h"
struct __anonstruct_basicvirtual_376 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) synmapen : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syn4tupenipv6 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syn2tupenipv6 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syn4tupenipv4 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syn2tupenipv4 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ofdmapen : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) tnlmapen : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) tnlalllookup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hashtoeplitz : 1 ;
};

#line 165  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_common.h"
union __anonunion_u_375 {
   struct __anonstruct_basicvirtual_376 basicvirtual ;
};

#line 165  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_common.h"
struct rss_params {
   unsigned int mode ;
   union __anonunion_u_375 u ;
};

#line 199  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_common.h"
struct vf_resources {
   unsigned int nvi ;
   unsigned int neq ;
   unsigned int nethctrl ;
   unsigned int niqflint ;
   unsigned int niq ;
   unsigned int tc ;
   unsigned int pmask ;
   unsigned int nexactf ;
   unsigned int r_caps ;
   unsigned int wx_caps ;
};

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_common.h"
struct adapter_params {
   struct dev_params dev ;
   struct sge_params sge ;
   struct vpd_params vpd ;
   struct rss_params rss ;
   struct vf_resources vfres ;
   struct arch_specific_params arch ;
   enum chip_type chip ;
   u8 nports ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_378 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_378 __anonCompField_pci_dev_115 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 2006  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct sge_qstat {
   __be32 qid ;
   __be16 cidx ;
   __be16 pidx ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4_hw.h"
union __anonunion_379 {
   u8 type_gen ;
   __be64 last_flit ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4_hw.h"
struct rsp_ctrl {
   __be32 hdrbuflen_pidx ;
   __be32 pldbuflen_qid ;
   union __anonunion_379 __anonCompField_rsp_ctrl_116 ;
};

#line 201 
struct adapter;

#line 202 
struct sge_eth_rxq;

#line 203 
struct sge_rspq;

#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4_hw.h"
struct port_info {
   struct adapter *adapter ;
   u16 viid ;
   s16 xact_addr_filt ;
   u16 rss_size ;
   u8 pidx ;
   s8 mdio_addr ;
   u8 port_type ;
   u8 mod_type ;
   u8 port_id ;
   u8 nqsets ;
   u8 first_qset ;
   struct link_config link_cfg ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/adapter.h"
struct rx_sw_desc;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/adapter.h"
struct sge_fl {
   unsigned int avail ;
   unsigned int pend_cred ;
   unsigned int cidx ;
   unsigned int pidx ;
   unsigned long alloc_failed ;
   unsigned long large_alloc_failed ;
   unsigned long starving ;
   unsigned int cntxt_id ;
   unsigned int abs_id ;
   unsigned int size ;
   struct rx_sw_desc *sdesc ;
   __be64 *desc ;
   dma_addr_t addr ;
   void *bar2_addr ;
   unsigned int bar2_qid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/adapter.h"
struct pkt_gl {
   struct page_frag frags[17U] ;
   void *va ;
   unsigned int nfrags ;
   unsigned int tot_len ;
};

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/adapter.h"
struct sge_rspq {
   struct napi_struct napi ;
   __be64 const *cur_desc ;
   unsigned int cidx ;
   u8 gen ;
   u8 next_intr_params ;
   int offset ;
   unsigned int unhandled_irqs ;
   u8 intr_params ;
   u8 pktcnt_idx ;
   u8 idx ;
   u16 cntxt_id ;
   u16 abs_id ;
   __be64 *desc ;
   dma_addr_t phys_addr ;
   void *bar2_addr ;
   unsigned int bar2_qid ;
   unsigned int iqe_len ;
   unsigned int size ;
   struct adapter *adapter ;
   struct net_device *netdev ;
   int (*handler)(struct sge_rspq *, __be64 const *, struct pkt_gl const *) ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/adapter.h"
struct sge_eth_stats {
   unsigned long pkts ;
   unsigned long lro_pkts ;
   unsigned long lro_merged ;
   unsigned long rx_cso ;
   unsigned long vlan_ex ;
   unsigned long rx_drops ;
};

#line 206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/adapter.h"
struct sge_eth_rxq {
   struct sge_rspq rspq ;
   struct sge_fl fl ;
   struct sge_eth_stats stats ;
};

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/adapter.h"
struct tx_desc {
   __be64 flit[8U] ;
};

#line 230 
struct tx_sw_desc;

#line 231  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/adapter.h"
struct sge_txq {
   unsigned int in_use ;
   unsigned int size ;
   unsigned int cidx ;
   unsigned int pidx ;
   unsigned long stops ;
   unsigned long restarts ;
   unsigned int cntxt_id ;
   unsigned int abs_id ;
   struct tx_desc *desc ;
   struct tx_sw_desc *sdesc ;
   struct sge_qstat *stat ;
   dma_addr_t phys_addr ;
   void *bar2_addr ;
   unsigned int bar2_qid ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/adapter.h"
struct sge_eth_txq {
   struct sge_txq q ;
   struct netdev_queue *txq ;
   unsigned long tso ;
   unsigned long tx_cso ;
   unsigned long vlan_ins ;
   unsigned long mapping_err ;
};

#line 265  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/adapter.h"
struct sge {
   struct sge_eth_txq ethtxq[8U] ;
   struct sge_eth_rxq ethrxq[8U] ;
   struct sge_rspq fw_evtq ;
   struct sge_rspq intrq ;
   spinlock_t intrq_lock ;
   unsigned long starving_fl[1U] ;
   struct timer_list rx_timer ;
   struct timer_list tx_timer ;
   u16 max_ethqsets ;
   u16 ethqsets ;
   u16 ethtxq_rover ;
   u16 timer_val[6U] ;
   u8 counter_val[4U] ;
   u32 fl_pg_order ;
   u32 stat_len ;
   u32 pktshift ;
   u32 fl_align ;
   u32 fl_starve_thres ;
   unsigned int egr_base ;
   unsigned int ingr_base ;
   void *egr_map[16U] ;
   struct sge_rspq *ingr_map[10U] ;
};

#line 333  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/adapter.h"
struct __anonstruct_msix_info_380 {
   unsigned short vec ;
   char desc[22U] ;
};

#line 333  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/adapter.h"
struct adapter {
   void *regs ;
   void *bar2 ;
   struct pci_dev *pdev ;
   struct device *pdev_dev ;
   unsigned long registered_device_map ;
   unsigned long open_device_map ;
   unsigned long flags ;
   struct adapter_params params ;
   struct __anonstruct_msix_info_380 msix_info[9U] ;
   struct sge sge ;
   struct net_device *port[1U] ;
   char const *name ;
   unsigned int msg_enable ;
   struct dentry *debugfs_root ;
   spinlock_t stats_lock ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_common.h"
enum t4_bar2_qtype {
    T4_BAR2_QTYPE_EGRESS = 0,
    T4_BAR2_QTYPE_INGRESS = 1
};

#line 169  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4_msg.h"
struct rss_header {
   u8 opcode ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) channel : 2 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) filter_hit : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) filter_tid : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) hash_type : 2 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipv6 : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) send2fw : 1 ;
   __be16 qid ;
   __be32 hash_val ;
};

#line 634  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4_msg.h"
struct cpl_tx_pkt_core {
   __be32 ctrl0 ;
   __be16 pack ;
   __be16 len ;
   __be64 ctrl1 ;
};

#line 646  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4_msg.h"
struct cpl_tx_pkt_lso_core {
   __be32 lso_ctrl ;
   __be16 ipid_ofst ;
   __be16 mss ;
   __be32 seqno_offset ;
   __be32 len ;
};

#line 800  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4_msg.h"
struct cpl_rx_pkt {
   struct rss_header rsshdr ;
   u8 opcode ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) iff : 4 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_calc : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipmi_pkt : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) vlan_ex : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ip_frag : 1 ;
   __be16 csum ;
   __be16 vlan ;
   __be16 len ;
   __be32 l2info ;
   __be16 hdr_len ;
   __be16 err_vec ;
};

#line 1077  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4_msg.h"
struct ulptx_sge_pair {
   __be32 len[2U] ;
   __be64 addr[2U] ;
};

#line 1085  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4_msg.h"
struct ulptx_sgl {
   __be32 cmd_nsge ;
   __be32 len0 ;
   __be64 addr0 ;
   struct ulptx_sge_pair sge[0U] ;
};

#line 1129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4_msg.h"
struct tx_sw_desc {
   struct sk_buff *skb ;
   struct ulptx_sgl *sgl ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
struct rx_sw_desc {
   struct page *page ;
   dma_addr_t dma_addr ;
};

#line 628  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
typedef int ldv_func_ret_type;

#line 678  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_cmd_hdr {
   __be32 hi ;
   __be32 lo ;
};

#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_reset_cmd {
   __be32 op_to_write ;
   __be32 retval_len16 ;
   __be32 val ;
   __be32 halt_pkd ;
};

#line 1133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_params_param {
   __be32 mnem ;
   __be32 val ;
};

#line 1192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_params_cmd {
   __be32 op_to_vfn ;
   __be32 retval_len16 ;
   struct fw_params_param param[7U] ;
};

#line 1193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_pfvf_cmd {
   __be32 op_to_vfn ;
   __be32 retval_len16 ;
   __be32 niqflint_niq ;
   __be32 type_to_neq ;
   __be32 tc_to_nexactf ;
   __be32 r_caps_to_nethctrl ;
   __be16 nricq ;
   __be16 nriqp ;
   __be32 r4 ;
};

#line 1778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_vi_cmd {
   __be32 op_to_vfn ;
   __be32 alloc_to_len16 ;
   __be16 type_viid ;
   u8 mac[6U] ;
   u8 portid_pkd ;
   u8 nmac ;
   u8 nmac0[6U] ;
   __be16 rsssize_pkd ;
   u8 nmac1[6U] ;
   __be16 idsiiq_pkd ;
   u8 nmac2[6U] ;
   __be16 idseiq_pkd ;
   u8 nmac3[6U] ;
   __be64 r9 ;
   __be64 r10 ;
};

#line 1917  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_vi_mac_exact {
   __be16 valid_to_idx ;
   u8 macaddr[6U] ;
};

#line 1962  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_vi_mac_hash {
   __be64 hashvec ;
};

#line 1965  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
union fw_vi_mac {
   struct fw_vi_mac_exact exact[7U] ;
   struct fw_vi_mac_hash hash ;
};

#line 1966  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_vi_mac_cmd {
   __be32 op_to_viid ;
   __be32 freemacs_to_len16 ;
   union fw_vi_mac u ;
};

#line 1967  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_vi_rxmode_cmd {
   __be32 op_to_viid ;
   __be32 retval_len16 ;
   __be32 mtu_to_vlanexen ;
   __be32 r4_lo ;
};

#line 2008  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_vi_enable_cmd {
   __be32 op_to_viid ;
   __be32 ien_to_len16 ;
   __be16 blinkdur ;
   __be16 r3 ;
   __be32 r4 ;
};

#line 2080  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_vi_stats_ctl {
   __be16 nstats_ix ;
   __be16 r6 ;
   __be32 r7 ;
   __be64 stat0 ;
   __be64 stat1 ;
   __be64 stat2 ;
   __be64 stat3 ;
   __be64 stat4 ;
   __be64 stat5 ;
};

#line 2116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_vi_stats_pf {
   __be64 tx_bcast_bytes ;
   __be64 tx_bcast_frames ;
   __be64 tx_mcast_bytes ;
   __be64 tx_mcast_frames ;
   __be64 tx_ucast_bytes ;
   __be64 tx_ucast_frames ;
   __be64 tx_offload_bytes ;
   __be64 tx_offload_frames ;
   __be64 rx_pf_bytes ;
   __be64 rx_pf_frames ;
   __be64 rx_bcast_bytes ;
   __be64 rx_bcast_frames ;
   __be64 rx_mcast_bytes ;
   __be64 rx_mcast_frames ;
   __be64 rx_ucast_bytes ;
   __be64 rx_ucast_frames ;
   __be64 rx_err_frames ;
};

#line 2135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_vi_stats_vf {
   __be64 tx_bcast_bytes ;
   __be64 tx_bcast_frames ;
   __be64 tx_mcast_bytes ;
   __be64 tx_mcast_frames ;
   __be64 tx_ucast_bytes ;
   __be64 tx_ucast_frames ;
   __be64 tx_drop_frames ;
   __be64 tx_offload_bytes ;
   __be64 tx_offload_frames ;
   __be64 rx_bcast_bytes ;
   __be64 rx_bcast_frames ;
   __be64 rx_mcast_bytes ;
   __be64 rx_mcast_frames ;
   __be64 rx_ucast_bytes ;
   __be64 rx_ucast_frames ;
   __be64 rx_err_frames ;
};

#line 2153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
union fw_vi_stats {
   struct fw_vi_stats_ctl ctl ;
   struct fw_vi_stats_pf pf ;
   struct fw_vi_stats_vf vf ;
};

#line 2154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_vi_stats_cmd {
   __be32 op_to_viid ;
   __be32 retval_len16 ;
   union fw_vi_stats u ;
};

#line 2293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_port_l1cfg {
   __be32 rcap ;
   __be32 r ;
};

#line 2320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_port_l2cfg {
   __u8 ctlbf ;
   __u8 ovlan3_to_ivlan0 ;
   __be16 ivlantype ;
   __be16 txipg_force_pinfo ;
   __be16 mtu ;
   __be16 ovlan0mask ;
   __be16 ovlan0type ;
   __be16 ovlan1mask ;
   __be16 ovlan1type ;
   __be16 ovlan2mask ;
   __be16 ovlan2type ;
   __be16 ovlan3mask ;
   __be16 ovlan3type ;
};

#line 2335  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_port_info {
   __be32 lstatus_to_modtype ;
   __be16 pcap ;
   __be16 acap ;
   __be16 mtu ;
   __u8 cbllen ;
   __u8 auxlinfo ;
   __u8 dcbxdis_pkd ;
   __u8 r8_lo[3U] ;
   __be64 r9 ;
};

#line 2346  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_port_diags {
   __u8 diagop ;
   __u8 r[3U] ;
   __be32 diagval ;
};

#line 2351  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_port_dcb_pgid {
   __u8 type ;
   __u8 apply_pkd ;
   __u8 r10_lo[2U] ;
   __be32 pgid ;
   __be64 r11 ;
};

#line 2359  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_port_dcb_pgrate {
   __u8 type ;
   __u8 apply_pkd ;
   __u8 r10_lo[5U] ;
   __u8 num_tcs_supported ;
   __u8 pgrate[8U] ;
   __u8 tsa[8U] ;
};

#line 2367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_port_dcb_priorate {
   __u8 type ;
   __u8 apply_pkd ;
   __u8 r10_lo[6U] ;
   __u8 strict_priorate[8U] ;
};

#line 2373  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_port_dcb_pfc {
   __u8 type ;
   __u8 pfcen ;
   __u8 r10[5U] ;
   __u8 max_pfc_tcs ;
   __be64 r11 ;
};

#line 2380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_port_app_priority {
   __u8 type ;
   __u8 r10[2U] ;
   __u8 idx ;
   __u8 user_prio_map ;
   __u8 sel_field ;
   __be16 protocolid ;
   __be64 r12 ;
};

#line 2389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_port_dcb_control {
   __u8 type ;
   __u8 all_syncd_pkd ;
   __be16 dcb_version_to_app_state ;
   __be32 r11 ;
   __be64 r12 ;
};

#line 2396  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
union fw_port_dcb {
   struct fw_port_dcb_pgid pgid ;
   struct fw_port_dcb_pgrate pgrate ;
   struct fw_port_dcb_priorate priorate ;
   struct fw_port_dcb_pfc pfc ;
   struct fw_port_app_priority app_priority ;
   struct fw_port_dcb_control control ;
};

#line 2397  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
union fw_port {
   struct fw_port_l1cfg l1cfg ;
   struct fw_port_l2cfg l2cfg ;
   struct fw_port_info info ;
   struct fw_port_diags diags ;
   union fw_port_dcb dcb ;
};

#line 2398  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_port_cmd {
   __be32 op_to_portid ;
   __be32 action_to_len16 ;
   union fw_port u ;
};

#line 2744  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_rss_ind_tbl_cmd {
   __be32 op_to_viid ;
   __be32 retval_len16 ;
   __be16 niqid ;
   __be16 startidx ;
   __be32 r3 ;
   __be32 iq0_to_iq2 ;
   __be32 iq3_to_iq5 ;
   __be32 iq6_to_iq8 ;
   __be32 iq9_to_iq11 ;
   __be32 iq12_to_iq14 ;
   __be32 iq15_to_iq17 ;
   __be32 iq18_to_iq20 ;
   __be32 iq21_to_iq23 ;
   __be32 iq24_to_iq26 ;
   __be32 iq27_to_iq29 ;
   __be32 iq30_iq31 ;
   __be32 r15_lo ;
};

#line 2764  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_rss_glb_config_manual {
   __be32 mode_pkd ;
   __be32 r3 ;
   __be64 r4 ;
   __be64 r5 ;
};

#line 2787  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_rss_glb_config_basicvirtual {
   __be32 mode_pkd ;
   __be32 synmapen_to_hashtoeplitz ;
   __be64 r8 ;
   __be64 r9 ;
};

#line 2793  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
union fw_rss_glb_config {
   struct fw_rss_glb_config_manual manual ;
   struct fw_rss_glb_config_basicvirtual basicvirtual ;
};

#line 2794  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_rss_glb_config_cmd {
   __be32 op_to_write ;
   __be32 retval_len16 ;
   union fw_rss_glb_config u ;
};

#line 2795  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_rss_vi_config_manual {
   __be64 r3 ;
   __be64 r4 ;
   __be64 r5 ;
};

#line 2869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_rss_vi_config_basicvirtual {
   __be32 r6 ;
   __be32 defaultq_to_udpen ;
   __be64 r9 ;
   __be64 r10 ;
};

#line 2875  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
union fw_rss_vi_config {
   struct fw_rss_vi_config_manual manual ;
   struct fw_rss_vi_config_basicvirtual basicvirtual ;
};

#line 2876  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct fw_rss_vi_config_cmd {
   __be32 op_to_viid ;
   __be32 retval_len16 ;
   union fw_rss_vi_config u ;
};

#line 3171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
struct t4vf_port_stats {
   u64 tx_bcast_bytes ;
   u64 tx_bcast_frames ;
   u64 tx_mcast_bytes ;
   u64 tx_mcast_frames ;
   u64 tx_ucast_bytes ;
   u64 tx_ucast_frames ;
   u64 tx_drop_frames ;
   u64 tx_offload_bytes ;
   u64 tx_offload_frames ;
   u64 rx_bcast_bytes ;
   u64 rx_bcast_frames ;
   u64 rx_mcast_bytes ;
   u64 rx_mcast_frames ;
   u64 rx_ucast_bytes ;
   u64 rx_ucast_frames ;
   u64 rx_err_frames ;
};

#line 185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_common.h"
struct __anonstruct_basicvirtual_593 {
   u16 defaultq ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ip6fourtupen : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ip6twotupen : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ip4fourtupen : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ip4twotupen : 1 ;
   int udpen ;
};

#line 185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_common.h"
union rss_vi_config {
   struct __anonstruct_basicvirtual_593 basicvirtual ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 223  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_872 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_872 __anonCompField_kernel_param_49 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 74 
struct exception_table_entry;

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmapool.h"
struct msix_entry {
   u32 vector ;
   u16 entry ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 2399  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h"
enum fw_port_type {
    FW_PORT_TYPE_FIBER_XFI = 0,
    FW_PORT_TYPE_FIBER_XAUI = 1,
    FW_PORT_TYPE_BT_SGMII = 2,
    FW_PORT_TYPE_BT_XFI = 3,
    FW_PORT_TYPE_BT_XAUI = 4,
    FW_PORT_TYPE_KX4 = 5,
    FW_PORT_TYPE_CX4 = 6,
    FW_PORT_TYPE_KX = 7,
    FW_PORT_TYPE_KR = 8,
    FW_PORT_TYPE_SFP = 9,
    FW_PORT_TYPE_BP_AP = 10,
    FW_PORT_TYPE_BP4_AP = 11,
    FW_PORT_TYPE_QSFP_10G = 12,
    FW_PORT_TYPE_QSA = 13,
    FW_PORT_TYPE_QSFP = 14,
    FW_PORT_TYPE_BP40_BA = 15,
    FW_PORT_TYPE_NONE = 31
};

#line 984  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4_msg.h"
struct cpl_sge_egr_update {
   __be32 opcode_qid ;
   __be16 cidx ;
   __be16 pidx ;
};

#line 1039  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4_msg.h"
struct cpl_fw6_msg {
   u8 opcode ;
   u8 type ;
   __be16 rsvd0 ;
   __be32 rsvd1 ;
   __be64 data[4U] ;
};

#line 876  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
union __anonunion___u_1034 {
   struct list_head *__val ;
   char __c[1U] ;
};

#line 876  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
union __anonunion___u_1036 {
   struct list_head *__val ;
   char __c[1U] ;
};

#line 1496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
struct queue_port_stats {
   u64 tso ;
   u64 tx_csum ;
   u64 rx_csum ;
   u64 vlan_ex ;
   u64 vlan_ins ;
   u64 lro_pkts ;
   u64 lro_merged ;
};

#line 2134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
struct cxgb4vf_debugfs_entry {
   char const *name ;
   umode_t mode ;
   struct file_operations const *fops ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_character_driver_scenario_15 {
   struct file_operations *arg0 ;
   int signal_pending ;
};

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_free_irq_7 {
   int arg0 ;
   int signal_pending ;
};

#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_25 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_18 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 40  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_17 {
   struct net_device *arg0 ;
   int signal_pending ;
};

#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_timer_scenario_20 {
   struct timer_list *arg0 ;
   int signal_pending ;
};

#line 50  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_traverse_kernel_items_scenario_19 {
   struct seq_operations *arg1 ;
   struct seq_file *arg0 ;
   int signal_pending ;
};
unsigned short __builtin_bswap16(unsigned short);

unsigned int __builtin_bswap32(unsigned int);

unsigned long __builtin_bswap64(unsigned long);

void __builtin_prefetch(void const * , ...);

void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/fvtp/.tmp_sge.c"
void ldv_inline_asm(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
void ldv_atomic_inc(atomic_t *v);


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 346  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static unsigned long __ffs(unsigned long word)
{
  
#line 348 
  ldv_inline_asm();
  
#line 351 
  return word;
}


#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int fls(int x)
{
  int __retres;
  int r;
  
#line 440 
  ldv_inline_asm();
  
#line 464 
  __retres = r + 1;
  
#line 464 
  return __retres;
}


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u16 __fswab16(__u16 val)
{
  __u16 tmp;
  
#line 49 
  tmp = __builtin_bswap16((unsigned short)((int)val));
  
#line 49 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u32 __fswab32(__u32 val)
{
  __u32 tmp;
  
#line 60 
  tmp = __builtin_bswap32(val);
  
#line 60 
  return tmp;
}


#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u64 __fswab64(__u64 val)
{
  __u64 tmp;
  
#line 71 
  tmp = (__u64)__builtin_bswap64((unsigned long)val);
  
#line 71 
  return tmp;
}


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
int ____ilog2_NaN(void);


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static int __ilog2_u32(u32 n)
{
  int __retres;
  int tmp;
  
#line 34 
  tmp = fls((int)n);
  
#line 34 
  __retres = tmp + -1;
  
#line 34 
  return __retres;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-defs.h"
void __bad_size_call_parameter(void);


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bug.h"
void warn_slowpath_null(char const *, int const);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int atomic_read(atomic_t const *v)
{
  int __retres;
  int const volatile *tmp;
  {
    
#line 27 
    int const __var = 0;
    
#line 27 
    tmp = (int const volatile *)(& v->counter);
  }
  
#line 27 
  __retres = *tmp;
  
#line 27 
  return __retres;
}


#line 98 
static void atomic_inc(atomic_t *v);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 39 
int _raw_spin_trylock(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_73(spinlock_t *lock);


#line 384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static int spin_trylock(spinlock_t *lock)
{
  int tmp;
  
#line 386 
  tmp = _raw_spin_trylock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 386 
  return tmp;
}


#line 343 
static int ldv_spin_trylock_62(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 395 
static void ldv_spin_unlock_63(spinlock_t *lock);


#line 407 
static void ldv_spin_unlock_74(spinlock_t *lock);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
void ldv_spin_model_lock(char *);


#line 75 
void ldv_spin_model_unlock(char *);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 173 
static int ldv_mod_timer_75(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 177 
static int ldv_mod_timer_76(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 181 
static int ldv_mod_timer_77(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 185 
static int ldv_mod_timer_78(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 232 
static int ldv_del_timer_sync_79(struct timer_list *ldv_func_arg1);


#line 236 
static int ldv_del_timer_sync_80(struct timer_list *ldv_func_arg1);


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmdebug.h"
void dump_page(struct page *, char const *);


#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/memory_hotplug.h"
extern pg_data_t *node_data[];


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void volatile *addr)
{
  
#line 68 
  ldv_inline_asm();
  
#line 69 
  return;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writeq(unsigned long val, void volatile *addr)
{
  
#line 93 
  ldv_inline_asm();
  
#line 94 
  return;
}


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/topology.h"
__inline static int numa_node_id(void)
{
  int tmp_3;
  {
    int pscr_ret__;
    {
      
#line 77 
      void const *__vpp_verify = (void const *)0;
      
#line 77 
      void const *tmp = __vpp_verify;
    }
    
#line 77 
    switch (4UL) {
      int tmp_0;
      int tmp_0_0;
      int tmp_1;
      int tmp_2;
      case (unsigned long)1: 
#line 77 
      ;
      {
        int pfo_ret__;
        
#line 77 
        switch (4UL) {
          case (unsigned long)1: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_15211;
          case (unsigned long)2: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_15211;
          case (unsigned long)4: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_15211;
          case (unsigned long)8: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_15211;
          default: 
#line 77 
          ;
          
#line 77 
          __bad_percpu_size();
        }
        ldv_15211: 
#line 77 
        ;
        
#line 77 
        tmp_0 = pfo_ret__;
      }
      
#line 77 
      pscr_ret__ = tmp_0;
      
#line 77 
      goto ldv_15217;
      case (unsigned long)2: 
#line 77 
      ;
      {
        int pfo_ret___0;
        
#line 77 
        switch (4UL) {
          case (unsigned long)1: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_15221;
          case (unsigned long)2: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_15221;
          case (unsigned long)4: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_15221;
          case (unsigned long)8: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_15221;
          default: 
#line 77 
          ;
          
#line 77 
          __bad_percpu_size();
        }
        ldv_15221: 
#line 77 
        ;
        
#line 77 
        tmp_0_0 = pfo_ret___0;
      }
      
#line 77 
      pscr_ret__ = tmp_0_0;
      
#line 77 
      goto ldv_15217;
      case (unsigned long)4: 
#line 77 
      ;
      {
        int pfo_ret___1;
        
#line 77 
        switch (4UL) {
          case (unsigned long)1: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_15230;
          case (unsigned long)2: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_15230;
          case (unsigned long)4: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_15230;
          case (unsigned long)8: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_15230;
          default: 
#line 77 
          ;
          
#line 77 
          __bad_percpu_size();
        }
        ldv_15230: 
#line 77 
        ;
        
#line 77 
        tmp_1 = pfo_ret___1;
      }
      
#line 77 
      pscr_ret__ = tmp_1;
      
#line 77 
      goto ldv_15217;
      case (unsigned long)8: 
#line 77 
      ;
      {
        int pfo_ret___2;
        
#line 77 
        switch (4UL) {
          case (unsigned long)1: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_15239;
          case (unsigned long)2: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_15239;
          case (unsigned long)4: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_15239;
          case (unsigned long)8: 
#line 77 
          ;
          
#line 78 
          ldv_inline_asm();
          
#line 77 
          goto ldv_15239;
          default: 
#line 77 
          ;
          
#line 77 
          __bad_percpu_size();
        }
        ldv_15239: 
#line 77 
        ;
        
#line 77 
        tmp_2 = pfo_ret___2;
      }
      
#line 77 
      pscr_ret__ = tmp_2;
      
#line 77 
      goto ldv_15217;
      default: 
#line 77 
      ;
      
#line 77 
      __bad_size_call_parameter();
      
#line 77 
      goto ldv_15217;
    }
    ldv_15217: 
#line 77 
    ;
    
#line 77 
    tmp_3 = pscr_ret__;
  }
  
#line 77 
  return tmp_3;
}


#line 263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
__inline static int gfp_zonelist(gfp_t flags)
{
  int __retres;
  
#line 265 
  if ((long)((flags & 262144U) != 0U) != 0L) {
    
#line 266 
    __retres = 1;
    
#line 266 
    goto return_label;
  }
  else ;
  
#line 268 
  __retres = 0;
  return_label: 
#line 268 
                return __retres;
}


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
__inline static struct zonelist *node_zonelist(int nid, gfp_t flags)
{
  struct zonelist *__retres;
  int tmp;
  
#line 282 
  tmp = gfp_zonelist(flags);
  
#line 282 
  ;
  
#line 282 
  __retres = (struct zonelist *)(& (node_data[nid])->node_zonelists) + tmp;
  
#line 282 
  return __retres;
}


#line 293 
struct page *__alloc_pages_nodemask(gfp_t, unsigned int, struct zonelist *, nodemask_t *);


#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
__inline static struct page *__alloc_pages(gfp_t gfp_mask, unsigned int order, struct zonelist *zonelist)
{
  struct page *tmp;
  
#line 300 
  tmp = __alloc_pages_nodemask(gfp_mask,order,zonelist,(nodemask_t *)0);
  
#line 300 
  return tmp;
}


#line 303  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
__inline static struct page *alloc_pages_node(int nid, gfp_t gfp_mask, unsigned int order)
{
  struct page *tmp_0;
  struct zonelist *tmp;
  
#line 307 
  if (nid < 0) 
#line 308 
               nid = numa_node_id(); else ;
  
#line 310 
  tmp = node_zonelist(nid,gfp_mask);
  
#line 310 
  ;
  
#line 310 
  ;
  
#line 310 
  tmp_0 = __alloc_pages(gfp_mask,order,tmp);
  
#line 310 
  return tmp_0;
}


#line 366 
void __free_pages(struct page *, unsigned int);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 542 
static void *kcalloc(size_t n, size_t size, gfp_t flags);


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
__inline static __wsum csum_unfold(__sum16 n)
{
  __wsum __retres;
  
#line 113 
  __retres = (unsigned int)n;
  
#line 113 
  return __retres;
}


#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
void dev_err(struct device const *, char const * , ...);


#line 400  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page-flags.h"
__inline static int PageTail(struct page const *page)
{
  int tmp;
  
#line 400 
  tmp = constant_test_bit(15L,(unsigned long const volatile *)(& page->flags));
  
#line 400 
  return tmp;
}


#line 440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static struct page *compound_head_by_tail(struct page *tail)
{
  struct page *__retres;
  int tmp;
  
#line 442 
  struct page *head = tail->__anonCompField_page_36.first_page;
  
#line 443 
  ldv_inline_asm();
  
#line 450 
  tmp = PageTail((struct page const *)tail);
  
#line 450 
  if ((long)(tmp != 0) != 0L) {
    
#line 451 
    __retres = head;
    
#line 451 
    goto return_label;
  }
  else ;
  
#line 452 
  __retres = tail;
  return_label: 
#line 452 
                return __retres;
}


#line 461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static struct page *compound_head(struct page *page)
{
  struct page *__retres;
  int tmp_0;
  
#line 463 
  tmp_0 = PageTail((struct page const *)page);
  
#line 463 
  if ((long)(tmp_0 != 0) != 0L) {
    struct page *tmp;
    
#line 464 
    tmp = compound_head_by_tail(page);
    
#line 464 
    __retres = tmp;
    
#line 464 
    goto return_label;
  }
  else ;
  
#line 465 
  __retres = page;
  return_label: 
#line 465 
                return __retres;
}


#line 532 
bool __get_page_tail(struct page *);


#line 534  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void get_page(struct page *page)
{
  int tmp_0;
  int tmp_1;
  
#line 536 
  tmp_0 = PageTail((struct page const *)page);
  
#line 536 
  if ((long)(tmp_0 != 0) != 0L) {
    bool tmp;
    
#line 537 
    tmp = __get_page_tail(page);
    
#line 537 
    if ((long)((int)tmp != 0) != 0L) 
#line 538 
                                     goto return_label; else ;
  }
  else ;
  
#line 543 
  tmp_1 = atomic_read((atomic_t const *)(& page->__anonCompField_page_32.__anonCompField___anonstruct_57_31.__anonCompField___anonunion_59_30._count));
  
#line 543 
  if ((long)(tmp_1 <= 0) != 0L) {
    
#line 543 
    dump_page(page,"VM_BUG_ON_PAGE(");
    
#line 544 
    ldv_inline_asm();
    
#line 543 
    ;
  }
  else ;
  
#line 544 
  atomic_inc(& page->__anonCompField_page_32.__anonCompField___anonstruct_57_31.__anonCompField___anonunion_59_30._count);
  return_label: 
#line 545 
                return;
}


#line 569 
void put_page(struct page *);


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page const *page)
{
  void *__retres;
  
#line 947 
  __retres = (void *)((unsigned long)((unsigned long long)(((long)page + 24189255811072L) / 64L) << 12) + 18446612132314218496UL);
  
#line 947 
  return __retres;
}


#line 1031  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static bool page_is_pfmemalloc(struct page *page)
{
  bool __retres;
  
#line 1037 
  __retres = (_Bool)(page->__anonCompField_page_32.__anonCompField___anonstruct_57_27.index == 18446744073709551615UL);
  
#line 1037 
  return __retres;
}


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 42 
void debug_dma_mapping_error(struct device *, dma_addr_t);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 59 
void debug_dma_sync_single_for_cpu(struct device *, dma_addr_t, size_t, int);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_page(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t addr;
  void *tmp_0;
  int tmp_1;
  
#line 80 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 83 
  ;
  
#line 83 
  tmp_0 = lowmem_page_address((struct page const *)page);
  
#line 83 
  ;
  
#line 83 
  kmemcheck_mark_initialized(tmp_0 + offset,(unsigned int)size);
  
#line 84 
  tmp_1 = valid_dma_direction((int)dir);
  
#line 84 
  if ((long)(tmp_1 == 0) != 0L) {
    
#line 86 
    ldv_inline_asm();
    
#line 84 
    ;
  }
  else ;
  
#line 85 
  addr = (*(ops->map_page))(dev,page,offset,size,dir,(struct dma_attrs *)0);
  
#line 86 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr,(_Bool)0);
  
#line 88 
  return addr;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_page(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 94 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 96 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 96 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 98 
    ldv_inline_asm();
    
#line 96 
    ;
  }
  else ;
  
#line 97 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 98 
    (*(ops->unmap_page))(dev,addr,size,dir,(struct dma_attrs *)0); else ;
  
#line 99 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)0);
  
#line 100 
  return;
}


#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_for_cpu(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 106 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 108 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 108 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 110 
    ldv_inline_asm();
    
#line 108 
    ;
  }
  else ;
  
#line 109 
  if (ops->sync_single_for_cpu != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 110 
    (*(ops->sync_single_for_cpu))(dev,addr,size,dir); else ;
  
#line 111 
  debug_dma_sync_single_for_cpu(dev,addr,size,(int)dir);
  
#line 112 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  int __retres;
  
#line 49 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 50 
  debug_dma_mapping_error(dev,dma_addr);
  
#line 51 
  if (ops->mapping_error != (int (*)(struct device *, dma_addr_t ))0) {
    int tmp_0;
    
#line 52 
    tmp_0 = (*(ops->mapping_error))(dev,dma_addr);
    
#line 52 
    __retres = tmp_0;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 54 
  __retres = dma_addr == 0ULL;
  return_label: 
#line 54 
                return __retres;
}


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_frag_size(skb_frag_t const *frag)
{
  unsigned int __retres;
  
#line 232 
  __retres = frag->size;
  
#line 232 
  return __retres;
}


#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_frag_size_set(skb_frag_t *frag, unsigned int size)
{
  
#line 237 
  frag->size = size;
  
#line 238 
  return;
}


#line 783 
struct sk_buff *__alloc_skb(unsigned int, gfp_t, int, int);


#line 787  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *alloc_skb(unsigned int size, gfp_t priority)
{
  struct sk_buff *tmp;
  
#line 790 
  tmp = __alloc_skb(size,priority,0,-1);
  
#line 790 
  return tmp;
}


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_nonlinear(struct sk_buff const *skb)
{
  bool __retres;
  
#line 1569 
  __retres = (_Bool)(skb->data_len != 0U);
  
#line 1569 
  return __retres;
}


#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1574 
  __retres = skb->len - skb->data_len;
  
#line 1574 
  return __retres;
}


#line 1599  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_fill_page_desc(struct sk_buff *skb, int i, struct page *page, int off, int size)
{
  unsigned char *tmp;
  bool tmp_0;
  
#line 1602 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1602 
  skb_frag_t *frag = & ((struct skb_shared_info *)tmp)->frags[i];
  
#line 1609 
  frag->page.p = page;
  
#line 1610 
  frag->page_offset = (unsigned int)off;
  
#line 1611 
  skb_frag_size_set(frag,(unsigned int)size);
  
#line 1613 
  page = compound_head(page);
  
#line 1614 
  tmp_0 = page_is_pfmemalloc(page);
  
#line 1614 
  if ((int)tmp_0 != 0) 
#line 1615 
                       skb->pfmemalloc = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U; else ;
  
#line 1616 
  return;
}


#line 1650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_tail_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1652 
  __retres = skb->head + skb->tail;
  
#line 1652 
  return __retres;
}


#line 1689  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *__skb_put(struct sk_buff *skb, unsigned int len)
{
  bool tmp_1;
  
#line 1691 
  unsigned char *tmp = skb_tail_pointer((struct sk_buff const *)skb);
  
#line 1692 
  tmp_1 = skb_is_nonlinear((struct sk_buff const *)skb);
  
#line 1692 
  if ((long)((int)tmp_1 != 0) != 0L) {
    
#line 1694 
    ldv_inline_asm();
    
#line 1692 
    ;
  }
  else ;
  
#line 1693 
  skb->tail += len;
  
#line 1694 
  skb->len += len;
  
#line 1695 
  return tmp;
}


#line 1707  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *__skb_pull(struct sk_buff *skb, unsigned int len)
{
  unsigned char *__retres;
  
#line 1709 
  skb->len -= len;
  
#line 1710 
  if ((long)(skb->len < skb->data_len) != 0L) {
    
#line 1712 
    ldv_inline_asm();
    
#line 1710 
    ;
  }
  else ;
  
#line 1711 
  skb->data += len;
  
#line 1711 
  __retres = skb->data;
  
#line 1711 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_transport_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1882 
  __retres = skb->head + (int)skb->transport_header;
  
#line 1882 
  return __retres;
}


#line 1897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_network_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1899 
  __retres = skb->head + (int)skb->network_header;
  
#line 1899 
  return __retres;
}


#line 1967  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_transport_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned char *tmp;
  
#line 1969 
  tmp = skb_transport_header(skb);
  
#line 1969 
  ;
  
#line 1969 
  __retres = (int)((long)tmp - (long)skb->data);
  
#line 1969 
  return __retres;
}


#line 1972  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static u32 skb_network_header_len(struct sk_buff const *skb)
{
  u32 __retres;
  
#line 1974 
  __retres = (unsigned int)((int)skb->transport_header - (int)skb->network_header);
  
#line 1974 
  return __retres;
}


#line 1982  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_network_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned char *tmp;
  
#line 1984 
  tmp = skb_network_header(skb);
  
#line 1984 
  ;
  
#line 1984 
  __retres = (int)((long)tmp - (long)skb->data);
  
#line 1984 
  return __retres;
}


#line 2095  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_orphan(struct sk_buff *skb)
{
  
#line 2097 
  if (skb->destructor != (void (*)(struct sk_buff *))0) {
    
#line 2098 
    (*(skb->destructor))(skb);
    
#line 2099 
    skb->destructor = (void (*)(struct sk_buff *))0;
    
#line 2100 
    skb->sk = (struct sock *)0;
  }
  else 
    
#line 2102 
    if ((long)(skb->sk != (struct sock *)0) != 0L) {
      
#line 2104 
      ldv_inline_asm();
      
#line 2102 
      ;
    }
    else ;
  
#line 2104 
  return;
}


#line 2215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *__dev_alloc_pages(gfp_t gfp_mask, unsigned int order)
{
  struct page *tmp;
  
#line 2226 
  gfp_mask |= 24832U;
  
#line 2228 
  tmp = alloc_pages_node(-1,gfp_mask,order);
  
#line 2228 
  return tmp;
}


#line 2244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *__dev_alloc_page(gfp_t gfp_mask)
{
  struct page *tmp;
  
#line 2246 
  tmp = __dev_alloc_pages(gfp_mask,0U);
  
#line 2246 
  return tmp;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t const *frag)
{
  struct page *__retres;
  
#line 2274 
  __retres = frag->page.p;
  
#line 2274 
  return __retres;
}


#line 2390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static dma_addr_t skb_frag_dma_map(struct device *dev, skb_frag_t const *frag, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t tmp_0;
  struct page *tmp;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  tmp = skb_frag_page(frag);
  
#line 2395 
  ;
  
#line 2395 
  tmp_0 = dma_map_page(dev,tmp,(unsigned long)frag->page_offset + offset,size,dir);
  
#line 2395 
  return tmp_0;
}


#line 2703 
int skb_copy_bits(struct sk_buff const *, int, void *, int);


#line 2789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_copy_from_linear_data(struct sk_buff const *skb, void *to, unsigned int const len)
{
  
#line 2793 
  memcpy(to,(void const *)skb->data,(unsigned long)len);
  
#line 2794 
  return;
}


#line 2803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_copy_to_linear_data(struct sk_buff *skb, void const *from, unsigned int const len)
{
  
#line 2807 
  memcpy((void *)skb->data,from,(unsigned long)len);
  
#line 2808 
  return;
}


#line 3295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static u16 skb_get_queue_mapping(struct sk_buff const *skb)
{
  u16 __retres;
  
#line 3297 
  __retres = skb->queue_mapping;
  
#line 3297 
  return __retres;
}


#line 3305  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_record_rx_queue(struct sk_buff *skb, u16 rx_queue)
{
  
#line 3307 
  skb->queue_mapping = (unsigned short)((unsigned int)rx_queue + 1U);
  
#line 3308 
  return;
}


#line 3426  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_checksum_none_assert(struct sk_buff const *skb)
{
  
#line 3428 
  return;
}


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule(struct napi_struct *);


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_disable_pending(struct napi_struct *n)
{
  bool __retres;
  int tmp;
  
#line 396 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& n->state));
  
#line 396 
  __retres = (_Bool)(tmp != 0);
  
#line 396 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_schedule_prep(struct napi_struct *n)
{
  bool __retres;
  int tmp_2;
  int tmp_0;
  bool tmp;
  
#line 410 
  tmp = napi_disable_pending(n);
  
#line 410 
  if (tmp) 
#line 410 
           tmp_0 = 0; else 
#line 410 
                           tmp_0 = 1;
  
#line 410 
  if (tmp_0) {
    int tmp_1;
    
#line 410 
    tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& n->state));
    
#line 410 
    if (tmp_1 == 0) 
#line 410 
                    tmp_2 = 1; else 
#line 410 
                                    tmp_2 = 0;
  }
  else 
#line 410 
       tmp_2 = 0;
  
#line 410 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 410 
  return __retres;
}


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_schedule(struct napi_struct *n)
{
  bool tmp;
  
#line 423 
  tmp = napi_schedule_prep(n);
  
#line 423 
  if ((int)tmp != 0) 
#line 424 
                     __napi_schedule(n); else ;
  
#line 425 
  return;
}


#line 440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_reschedule(struct napi_struct *napi)
{
  bool __retres;
  bool tmp;
  
#line 442 
  tmp = napi_schedule_prep(napi);
  
#line 442 
  if ((int)tmp != 0) {
    
#line 443 
    __napi_schedule(napi);
    
#line 444 
    __retres = (_Bool)1;
    
#line 444 
    goto return_label;
  }
  else ;
  
#line 446 
  __retres = (_Bool)0;
  return_label: 
#line 446 
                return __retres;
}


#line 450 
void napi_complete_done(struct napi_struct *, int);


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_complete(struct napi_struct *n)
{
  
#line 460 
  napi_complete_done(n,0);
  
#line 461 
  return;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 1911 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);


#line 1920 
void netif_napi_del(struct napi_struct *);


#line 2565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_stop_queue(struct netdev_queue *dev_queue)
{
  
#line 2567 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2568 
  return;
}


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2936  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_consume_skb_any(struct sk_buff *skb)
{
  
#line 2938 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_CONSUMED);
  
#line 2939 
  return;
}


#line 2943 
int netif_receive_skb_sk(struct sock *, struct sk_buff *);


#line 2944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int netif_receive_skb(struct sk_buff *skb)
{
  int tmp;
  
#line 2946 
  tmp = netif_receive_skb_sk(skb->sk,skb);
  
#line 2946 
  return tmp;
}


#line 2950 
struct sk_buff *napi_get_frags(struct napi_struct *);


#line 2951 
gro_result_t napi_gro_frags(struct napi_struct *);


#line 3182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool __netif_tx_trylock(struct netdev_queue *txq)
{
  int tmp;
  
#line 3184 
  tmp = ldv_spin_trylock_62(& txq->_xmit_lock);
  
#line 3184 
  bool ok = (_Bool)(tmp != 0);
  
#line 3185 
  if ((long)((int)ok != 0) != 0L) {
    int tmp_4;
    {
      int pscr_ret__;
      {
        
#line 3186 
        void const *__vpp_verify = (void const *)0;
        
#line 3186 
        void const *tmp_2 = __vpp_verify;
      }
      
#line 3186 
      switch (4UL) {
        int tmp_0;
        int tmp_1;
        int tmp_2_0;
        int tmp_3;
        case (unsigned long)1: 
#line 3186 
        ;
        {
          int pfo_ret__;
          
#line 3186 
          switch (4UL) {
            case (unsigned long)1: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42672;
            case (unsigned long)2: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42672;
            case (unsigned long)4: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42672;
            case (unsigned long)8: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42672;
            default: 
#line 3186 
            ;
            
#line 3186 
            __bad_percpu_size();
          }
          ldv_42672: 
#line 3186 
          ;
          
#line 3186 
          tmp_0 = pfo_ret__;
        }
        
#line 3186 
        pscr_ret__ = tmp_0;
        
#line 3186 
        goto ldv_42678;
        case (unsigned long)2: 
#line 3186 
        ;
        {
          int pfo_ret___0;
          
#line 3186 
          switch (4UL) {
            case (unsigned long)1: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42682;
            case (unsigned long)2: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42682;
            case (unsigned long)4: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42682;
            case (unsigned long)8: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42682;
            default: 
#line 3186 
            ;
            
#line 3186 
            __bad_percpu_size();
          }
          ldv_42682: 
#line 3186 
          ;
          
#line 3186 
          tmp_1 = pfo_ret___0;
        }
        
#line 3186 
        pscr_ret__ = tmp_1;
        
#line 3186 
        goto ldv_42678;
        case (unsigned long)4: 
#line 3186 
        ;
        {
          int pfo_ret___1;
          
#line 3186 
          switch (4UL) {
            case (unsigned long)1: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42691;
            case (unsigned long)2: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42691;
            case (unsigned long)4: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42691;
            case (unsigned long)8: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42691;
            default: 
#line 3186 
            ;
            
#line 3186 
            __bad_percpu_size();
          }
          ldv_42691: 
#line 3186 
          ;
          
#line 3186 
          tmp_2_0 = pfo_ret___1;
        }
        
#line 3186 
        pscr_ret__ = tmp_2_0;
        
#line 3186 
        goto ldv_42678;
        case (unsigned long)8: 
#line 3186 
        ;
        {
          int pfo_ret___2;
          
#line 3186 
          switch (4UL) {
            case (unsigned long)1: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42700;
            case (unsigned long)2: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42700;
            case (unsigned long)4: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42700;
            case (unsigned long)8: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42700;
            default: 
#line 3186 
            ;
            
#line 3186 
            __bad_percpu_size();
          }
          ldv_42700: 
#line 3186 
          ;
          
#line 3186 
          tmp_3 = pfo_ret___2;
        }
        
#line 3186 
        pscr_ret__ = tmp_3;
        
#line 3186 
        goto ldv_42678;
        default: 
#line 3186 
        ;
        
#line 3186 
        __bad_size_call_parameter();
        
#line 3186 
        goto ldv_42678;
      }
      ldv_42678: 
#line 3186 
      ;
      
#line 3186 
      tmp_4 = pscr_ret__;
    }
    
#line 3186 
    txq->xmit_lock_owner = tmp_4;
  }
  else ;
  
#line 3187 
  return ok;
}


#line 3190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_unlock(struct netdev_queue *txq)
{
  
#line 3192 
  txq->xmit_lock_owner = -1;
  
#line 3193 
  ldv_spin_unlock_63(& txq->_xmit_lock);
  
#line 3194 
  return;
}


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static void __vlan_hwaccel_put_tag(struct sk_buff *skb, __be16 vlan_proto, u16 vlan_tci)
{
  
#line 412 
  skb->vlan_proto = vlan_proto;
  
#line 413 
  skb->vlan_tci = (unsigned short)((unsigned int)vlan_tci | 4096U);
  
#line 414 
  return;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ip.h"
__inline static struct iphdr *ip_hdr(struct sk_buff const *skb)
{
  struct iphdr *tmp;
  
#line 25 
  tmp = (struct iphdr *)skb_network_header(skb);
  
#line 25 
  return tmp;
}


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static struct tcphdr *tcp_hdr(struct sk_buff const *skb)
{
  struct tcphdr *tmp;
  
#line 29 
  tmp = (struct tcphdr *)skb_transport_header(skb);
  
#line 29 
  return tmp;
}


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/adapter.h"
__inline static void t4_write_reg(struct adapter *adapter, u32 reg_addr, u32 val)
{
  
#line 420 
  writel(val,(void volatile *)(adapter->regs + reg_addr));
  
#line 421 
  return;
}


#line 533 
int t4vf_sge_alloc_rxq(struct adapter *adapter, struct sge_rspq *rspq, bool iqasynch, struct net_device *dev, int intr_dest, struct sge_fl *fl, int (*hnd)(struct sge_rspq *, __be64 const *, struct pkt_gl const *));


#line 536 
int t4vf_sge_alloc_eth_txq(struct adapter *adapter, struct sge_eth_txq *txq, struct net_device *dev, struct netdev_queue *devq, unsigned int iqid);


#line 539 
void t4vf_free_sge_resources(struct adapter *adapter);


#line 541 
int t4vf_eth_xmit(struct sk_buff *skb, struct net_device *dev);


#line 542 
int t4vf_ethrx_handler(struct sge_rspq *rspq, __be64 const *rsp, struct pkt_gl const *gl);


#line 545 
irq_handler_t t4vf_intr_handler(struct adapter *adapter);


#line 546 
irqreturn_t t4vf_sge_intr_msix(int irq, void *cookie);


#line 548 
int t4vf_sge_init(struct adapter *adapter);


#line 549 
void t4vf_sge_start(struct adapter *adapter);


#line 550 
void t4vf_sge_stop(struct adapter *adapter);


#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_common.h"
int t4vf_wr_mbox_core(struct adapter *adapter, void const *cmd, int size, void *rpl, bool sleep_ok);


#line 269  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_common.h"
__inline static int t4vf_wr_mbox(struct adapter *adapter, void const *cmd, int size, void *rpl)
{
  int tmp;
  
#line 272 
  tmp = t4vf_wr_mbox_core(adapter,cmd,size,rpl,(_Bool)1);
  
#line 272 
  return tmp;
}


#line 283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_common.h"
__inline static int is_t4(enum chip_type chip)
{
  int __retres;
  
#line 285 
  __retres = (((unsigned int)chip >> 4) & 15U) == 4U;
  
#line 285 
  return __retres;
}


#line 295 
int t4vf_bar2_sge_qregs(struct adapter *adapter, unsigned int qid, enum t4_bar2_qtype qtype, u64 *pbar2_qoffset, unsigned int *pbar2_qid);


#line 327 
int t4vf_iq_free(struct adapter *adapter, unsigned int iqtype, unsigned int iqid, unsigned int fl0id, unsigned int fl1id);


#line 329 
int t4vf_eth_eq_free(struct adapter *adapter, unsigned int eqid);


#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
__inline static dma_addr_t get_buf_addr(struct rx_sw_desc const *sdesc)
{
  dma_addr_t __retres;
  
#line 197 
  __retres = sdesc->dma_addr & 18446744073709551612ULL;
  
#line 197 
  return __retres;
}


#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
__inline static bool is_buf_mapped(struct rx_sw_desc const *sdesc)
{
  bool __retres;
  
#line 209 
  __retres = (_Bool)((sdesc->dma_addr & 2ULL) == 0ULL);
  
#line 209 
  return __retres;
}


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
__inline static int need_skb_unmap(void)
{
  int __retres;
  
#line 221 
  __retres = 1;
  
#line 221 
  return __retres;
}


#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
__inline static unsigned int txq_avail(struct sge_txq const *tq)
{
  unsigned int __retres;
  
#line 235 
  __retres = (tq->size - tq->in_use) + 4294967295U;
  
#line 235 
  return __retres;
}


#line 247  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
__inline static unsigned int fl_cap(struct sge_fl const *fl)
{
  unsigned int __retres;
  
#line 249 
  __retres = fl->size + 4294967288U;
  
#line 249 
  return __retres;
}


#line 261  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
__inline static bool fl_starving(struct adapter const *adapter, struct sge_fl const *fl)
{
  bool __retres;
  
#line 264 
  struct sge const *s = & adapter->sge;
  
#line 266 
  __retres = (_Bool)(fl->avail - fl->pend_cred <= s->fl_starve_thres);
  
#line 266 
  return __retres;
}


#line 277  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
static int map_skb(struct device *dev, struct sk_buff const *skb, dma_addr_t *addr)
{
  int __retres;
  skb_frag_t const *fp;
  skb_frag_t const *end;
  struct skb_shared_info const *si;
  unsigned int tmp;
  int tmp_0;
  unsigned int tmp_2;
  int tmp_3;
  unsigned int tmp_4;
  skb_frag_t const *tmp_5;
  unsigned int tmp_6;
  
#line 283 
  tmp = skb_headlen(skb);
  
#line 283 
  ;
  
#line 283 
  ;
  
#line 283 
  *addr = dma_map_single_attrs(dev,(void *)skb->data,(unsigned long)tmp,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  
#line 284 
  tmp_0 = dma_mapping_error(dev,*addr);
  
#line 284 
  if (tmp_0 != 0) 
#line 285 
                  goto out_err; else ;
  
#line 287 
  si = (struct skb_shared_info const *)skb_end_pointer(skb);
  
#line 288 
  end = & si->frags[(int)si->nr_frags];
  
#line 289 
  fp = (skb_frag_t const *)(& si->frags);
  
#line 289 
  goto ldv_56976;
  ldv_56975: 
#line 290 
  ;
  
#line 290 
  addr += 1;
  
#line 290 
  tmp_2 = skb_frag_size(fp);
  
#line 290 
  ;
  
#line 290 
  ;
  
#line 290 
  *addr = skb_frag_dma_map(dev,fp,0UL,(unsigned long)tmp_2,(enum dma_data_direction)DMA_TO_DEVICE);
  
#line 292 
  tmp_3 = dma_mapping_error(dev,*addr);
  
#line 292 
  if (tmp_3 != 0) 
#line 293 
                  goto unwind; else ;
  
#line 289 
  fp += 1;
  ldv_56976: 
#line 290 
  ;
  
#line 289 
  if (fp < end) 
#line 291 
                goto ldv_56975; else 
#line 294 
                                     goto ldv_56977;
  ldv_56977: 
#line 295 
  ;
  
#line 295 
  __retres = 0;
  
#line 295 
  goto return_label;
  unwind: 
#line 297 
  ;
  
#line 298 
  goto ldv_56979;
  ldv_56978: 
#line 299 
  ;
  
#line 299 
  tmp_4 = skb_frag_size(fp);
  
#line 299 
  addr -= 1;
  
#line 299 
  ;
  
#line 299 
  ;
  
#line 299 
  dma_unmap_page(dev,*addr,(unsigned long)tmp_4,(enum dma_data_direction)DMA_TO_DEVICE);
  ldv_56979: 
#line 300 
  ;
  
#line 298 
  tmp_5 = fp;
  
#line 298 
  fp -= 1;
  
#line 298 
  ;
  
#line 298 
  if (tmp_5 > (skb_frag_t const *)(& si->frags)) 
#line 300 
                                                 goto ldv_56978; else 
                                                                   
#line 303 
                                                                   goto ldv_56980;
  ldv_56980: 
#line 304 
  ;
  
#line 300 
  tmp_6 = skb_headlen(skb);
  
#line 300 
  ;
  
#line 300 
  ;
  
#line 300 
  dma_unmap_single_attrs(dev,*(addr + 18446744073709551615U),(unsigned long)tmp_6,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  out_err: 
#line 302 
  ;
  
#line 303 
  __retres = -12;
  return_label: 
#line 303 
                return __retres;
}


#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
static void unmap_sgl(struct device *dev, struct sk_buff const *skb, struct ulptx_sgl const *sgl, struct sge_txq const *tq)
{
  struct ulptx_sge_pair const *p;
  unsigned char *tmp;
  unsigned int tmp_8;
  
#line 310 
  tmp = skb_end_pointer(skb);
  
#line 310 
  unsigned int nfrags = (unsigned int)((struct skb_shared_info *)tmp)->nr_frags;
  
#line 312 
  tmp_8 = skb_headlen(skb);
  
#line 312 
  if ((long)(tmp_8 != 0U) != 0L) {
    unsigned int tmp_1;
    unsigned long long tmp_3;
    
#line 313 
    if (0 != 0) 
#line 313 
                tmp_1 = (((sgl->len0 << 24) | ((sgl->len0 << 8) & 16711680U)) | ((sgl->len0 >> 8) & 65280U)) | (sgl->len0 >> 24); else 
                                                                    
#line 313 
                                                                    tmp_1 = __fswab32(sgl->len0);
    
#line 313 
    if (0 != 0) 
#line 313 
                tmp_3 = (((((((sgl->addr0 << 56) | ((sgl->addr0 << 40) & 71776119061217280ULL)) | ((sgl->addr0 << 24) & 280375465082880ULL)) | ((sgl->addr0 << 8) & 1095216660480ULL)) | ((sgl->addr0 >> 8) & 4278190080ULL)) | ((sgl->addr0 >> 24) & 16711680ULL)) | ((sgl->addr0 >> 40) & 65280ULL)) | (sgl->addr0 >> 56); else 
                                                                    
#line 313 
                                                                    tmp_3 = __fswab64(sgl->addr0);
    
#line 313 
    ;
    
#line 313 
    dma_unmap_single_attrs(dev,tmp_3,(unsigned long)tmp_1,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  }
  else {
    unsigned int tmp_5;
    unsigned long long tmp_7;
    
#line 317 
    if (0 != 0) 
#line 317 
                tmp_5 = (((sgl->len0 << 24) | ((sgl->len0 << 8) & 16711680U)) | ((sgl->len0 >> 8) & 65280U)) | (sgl->len0 >> 24); else 
                                                                    
#line 317 
                                                                    tmp_5 = __fswab32(sgl->len0);
    
#line 316 
    if (0 != 0) 
#line 316 
                tmp_7 = (((((((sgl->addr0 << 56) | ((sgl->addr0 << 40) & 71776119061217280ULL)) | ((sgl->addr0 << 24) & 280375465082880ULL)) | ((sgl->addr0 << 8) & 1095216660480ULL)) | ((sgl->addr0 >> 8) & 4278190080ULL)) | ((sgl->addr0 >> 24) & 16711680ULL)) | ((sgl->addr0 >> 40) & 65280ULL)) | (sgl->addr0 >> 56); else 
                                                                    
#line 316 
                                                                    tmp_7 = __fswab64(sgl->addr0);
    
#line 316 
    ;
    
#line 316 
    dma_unmap_page(dev,tmp_7,(unsigned long)tmp_5,(enum dma_data_direction)DMA_TO_DEVICE);
    
#line 318 
    nfrags -= 1U;
  }
  
#line 325 
  p = (struct ulptx_sge_pair const *)(& sgl->sge);
  
#line 325 
  goto ldv_56993;
  ldv_56992: 
#line 326 
  ;
  
#line 326 
  if ((long)((u8 *)(p + 1U) <= (u8 *)tq->stat) != 0L) {
    unsigned int tmp_10;
    unsigned long long tmp_12;
    unsigned int tmp_14;
    unsigned long long tmp_16;
    unmap: 
#line 327 
    ;
    
#line 329 
    if (0 != 0) 
#line 329 
                tmp_10 = (((p->len[0] << 24) | ((p->len[0] << 8) & 16711680U)) | ((p->len[0] >> 8) & 65280U)) | (p->len[0] >> 24); else 
                                                                    
#line 329 
                                                                    tmp_10 = __fswab32(p->len[0]);
    
#line 328 
    if (0 != 0) 
#line 328 
                tmp_12 = (((((((p->addr[0] << 56) | ((p->addr[0] << 40) & 71776119061217280ULL)) | ((p->addr[0] << 24) & 280375465082880ULL)) | ((p->addr[0] << 8) & 1095216660480ULL)) | ((p->addr[0] >> 8) & 4278190080ULL)) | ((p->addr[0] >> 24) & 16711680ULL)) | ((p->addr[0] >> 40) & 65280ULL)) | (p->addr[0] >> 56); else 
                                                                    
#line 328 
                                                                    tmp_12 = __fswab64(p->addr[0]);
    
#line 328 
    ;
    
#line 328 
    dma_unmap_page(dev,tmp_12,(unsigned long)tmp_10,(enum dma_data_direction)DMA_TO_DEVICE);
    
#line 331 
    if (0 != 0) 
#line 331 
                tmp_14 = (((p->len[1] << 24) | ((p->len[1] << 8) & 16711680U)) | ((p->len[1] >> 8) & 65280U)) | (p->len[1] >> 24); else 
                                                                    
#line 331 
                                                                    tmp_14 = __fswab32(p->len[1]);
    
#line 330 
    if (0 != 0) 
#line 330 
                tmp_16 = (((((((p->addr[1] << 56) | ((p->addr[1] << 40) & 71776119061217280ULL)) | ((p->addr[1] << 24) & 280375465082880ULL)) | ((p->addr[1] << 8) & 1095216660480ULL)) | ((p->addr[1] >> 8) & 4278190080ULL)) | ((p->addr[1] >> 24) & 16711680ULL)) | ((p->addr[1] >> 40) & 65280ULL)) | (p->addr[1] >> 56); else 
                                                                    
#line 330 
                                                                    tmp_16 = __fswab64(p->addr[1]);
    
#line 330 
    ;
    
#line 330 
    dma_unmap_page(dev,tmp_16,(unsigned long)tmp_14,(enum dma_data_direction)DMA_TO_DEVICE);
    
#line 332 
    p += 1;
  }
  else 
    
#line 333 
    if ((u8 *)tq->stat == (u8 *)p) {
      
#line 334 
      p = (struct ulptx_sge_pair const *)tq->desc;
      
#line 335 
      goto unmap;
    }
    else 
      
#line 336 
      if ((u8 *)p + 8U == (u8 *)tq->stat) {
        unsigned int tmp_18;
        unsigned long long tmp_20;
        unsigned int tmp_22;
        unsigned long long tmp_24;
        
#line 337 
        __be64 const *addr = (__be64 const *)tq->desc;
        
#line 340 
        if (0 != 0) 
#line 340 
                    tmp_18 = (((p->len[0] << 24) | ((p->len[0] << 8) & 16711680U)) | ((p->len[0] >> 8) & 65280U)) | (p->len[0] >> 24); else 
                                                                    
#line 340 
                                                                    tmp_18 = __fswab32(p->len[0]);
        
#line 339 
        if (0 != 0) 
#line 339 
                    tmp_20 = (((((((*addr << 56) | ((*addr << 40) & 71776119061217280ULL)) | ((*addr << 24) & 280375465082880ULL)) | ((*addr << 8) & 1095216660480ULL)) | ((*addr >> 8) & 4278190080ULL)) | ((*addr >> 24) & 16711680ULL)) | ((*addr >> 40) & 65280ULL)) | (*addr >> 56); else 
                                                                    
#line 339 
                                                                    tmp_20 = __fswab64(*addr);
        
#line 339 
        ;
        
#line 339 
        dma_unmap_page(dev,tmp_20,(unsigned long)tmp_18,(enum dma_data_direction)DMA_TO_DEVICE);
        
#line 342 
        if (0 != 0) 
#line 342 
                    tmp_22 = (((p->len[1] << 24) | ((p->len[1] << 8) & 16711680U)) | ((p->len[1] >> 8) & 65280U)) | (p->len[1] >> 24); else 
                                                                    
#line 342 
                                                                    tmp_22 = __fswab32(p->len[1]);
        
#line 341 
        if (0 != 0) 
#line 341 
                    tmp_24 = (((((((*(addr + 1U) << 56) | ((*(addr + 1U) << 40) & 71776119061217280ULL)) | ((*(addr + 1U) << 24) & 280375465082880ULL)) | ((*(addr + 1U) << 8) & 1095216660480ULL)) | ((*(addr + 1U) >> 8) & 4278190080ULL)) | ((*(addr + 1U) >> 24) & 16711680ULL)) | ((*(addr + 1U) >> 40) & 65280ULL)) | (*(addr + 1U) >> 56); else 
                                                                    
#line 341 
                                                                    tmp_24 = __fswab64(*(addr + 1U));
        
#line 341 
        ;
        
#line 341 
        dma_unmap_page(dev,tmp_24,(unsigned long)tmp_22,(enum dma_data_direction)DMA_TO_DEVICE);
        
#line 343 
        p = (struct ulptx_sge_pair const *)(addr + 2U);
      }
      else {
        unsigned int tmp_26;
        unsigned long long tmp_28;
        unsigned int tmp_30;
        unsigned long long tmp_32;
        
#line 345 
        __be64 const *addr_0 = (__be64 const *)tq->desc;
        
#line 348 
        if (0 != 0) 
#line 348 
                    tmp_26 = (((p->len[0] << 24) | ((p->len[0] << 8) & 16711680U)) | ((p->len[0] >> 8) & 65280U)) | (p->len[0] >> 24); else 
                                                                    
#line 348 
                                                                    tmp_26 = __fswab32(p->len[0]);
        
#line 347 
        if (0 != 0) 
#line 347 
                    tmp_28 = (((((((p->addr[0] << 56) | ((p->addr[0] << 40) & 71776119061217280ULL)) | ((p->addr[0] << 24) & 280375465082880ULL)) | ((p->addr[0] << 8) & 1095216660480ULL)) | ((p->addr[0] >> 8) & 4278190080ULL)) | ((p->addr[0] >> 24) & 16711680ULL)) | ((p->addr[0] >> 40) & 65280ULL)) | (p->addr[0] >> 56); else 
                                                                    
#line 347 
                                                                    tmp_28 = __fswab64(p->addr[0]);
        
#line 347 
        ;
        
#line 347 
        dma_unmap_page(dev,tmp_28,(unsigned long)tmp_26,(enum dma_data_direction)DMA_TO_DEVICE);
        
#line 350 
        if (0 != 0) 
#line 350 
                    tmp_30 = (((p->len[1] << 24) | ((p->len[1] << 8) & 16711680U)) | ((p->len[1] >> 8) & 65280U)) | (p->len[1] >> 24); else 
                                                                    
#line 350 
                                                                    tmp_30 = __fswab32(p->len[1]);
        
#line 349 
        if (0 != 0) 
#line 349 
                    tmp_32 = (((((((*addr_0 << 56) | ((*addr_0 << 40) & 71776119061217280ULL)) | ((*addr_0 << 24) & 280375465082880ULL)) | ((*addr_0 << 8) & 1095216660480ULL)) | ((*addr_0 >> 8) & 4278190080ULL)) | ((*addr_0 >> 24) & 16711680ULL)) | ((*addr_0 >> 40) & 65280ULL)) | (*addr_0 >> 56); else 
                                                                    
#line 349 
                                                                    tmp_32 = __fswab64(*addr_0);
        
#line 349 
        ;
        
#line 349 
        dma_unmap_page(dev,tmp_32,(unsigned long)tmp_30,(enum dma_data_direction)DMA_TO_DEVICE);
        
#line 351 
        p = (struct ulptx_sge_pair const *)(addr_0 + 1U);
      }
  
#line 325 
  nfrags += 4294967294U;
  ldv_56993: 
#line 326 
  ;
  
#line 325 
  if (nfrags > 1U) 
#line 327 
                   goto ldv_56992; else 
#line 330 
                                        goto ldv_56994;
  ldv_56994: 
#line 331 
  ;
  
#line 354 
  if (nfrags != 0U) {
    __be64 addr_1;
    unsigned int tmp_34;
    unsigned long long tmp_36;
    
#line 357 
    if ((u8 *)tq->stat == (u8 *)p) 
#line 358 
                                   p = (struct ulptx_sge_pair const *)tq->desc; else ;
    
#line 359 
    if ((u8 *)p + 16U <= (u8 *)tq->stat) 
#line 359 
                                         addr_1 = p->addr[0]; else 
#line 359 
                                                                   addr_1 = *((__be64 const *)tq->desc);
    
#line 362 
    if (0 != 0) 
#line 362 
                tmp_34 = (((p->len[0] << 24) | ((p->len[0] << 8) & 16711680U)) | ((p->len[0] >> 8) & 65280U)) | (p->len[0] >> 24); else 
                                                                    
#line 362 
                                                                    tmp_34 = __fswab32(p->len[0]);
    
#line 362 
    if (0 != 0) 
#line 362 
                tmp_36 = (((((((addr_1 << 56) | ((addr_1 << 40) & 71776119061217280ULL)) | ((addr_1 << 24) & 280375465082880ULL)) | ((addr_1 << 8) & 1095216660480ULL)) | ((addr_1 >> 8) & 4278190080ULL)) | ((addr_1 >> 24) & 16711680ULL)) | ((addr_1 >> 40) & 65280ULL)) | (addr_1 >> 56); else 
                                                                    
#line 362 
                                                                    tmp_36 = __fswab64(addr_1);
    
#line 362 
    ;
    
#line 362 
    dma_unmap_page(dev,tmp_36,(unsigned long)tmp_34,(enum dma_data_direction)DMA_TO_DEVICE);
  }
  else ;
  
#line 364 
  return;
}


#line 377  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
static void free_tx_desc(struct adapter *adapter, struct sge_txq *tq, unsigned int n, bool unmap)
{
  struct tx_sw_desc *sdesc;
  int tmp_0;
  int tmp;
  unsigned int tmp_1;
  
#line 381 
  unsigned int cidx = tq->cidx;
  
#line 382 
  struct device *dev = adapter->pdev_dev;
  
#line 384 
  tmp = need_skb_unmap();
  
#line 384 
  if (tmp != 0) 
    
#line 384 
    if ((int)unmap != 0) 
#line 384 
                         tmp_0 = 1; else 
#line 384 
                                         tmp_0 = 0;
  else 
#line 384 
       tmp_0 = 0;
  
#line 384 
  int const need_unmap = tmp_0;
  
#line 386 
  sdesc = tq->sdesc + cidx;
  
#line 387 
  goto ldv_57007;
  ldv_57006: 
#line 388 
  ;
  
#line 392 
  if (sdesc->skb != (struct sk_buff *)0) {
    
#line 393 
    if (need_unmap != 0) 
#line 394 
                         unmap_sgl(dev,(struct sk_buff const *)sdesc->skb,(struct ulptx_sgl const *)sdesc->sgl,(struct sge_txq const *)tq); else ;
    
#line 395 
    dev_consume_skb_any(sdesc->skb);
    
#line 396 
    sdesc->skb = (struct sk_buff *)0;
  }
  else ;
  
#line 399 
  sdesc += 1;
  
#line 400 
  cidx += 1U;
  
#line 400 
  ;
  
#line 400 
  if (cidx == tq->size) {
    
#line 401 
    cidx = 0U;
    
#line 402 
    sdesc = tq->sdesc;
  }
  else ;
  ldv_57007: 
#line 404 
  ;
  
#line 387 
  tmp_1 = n;
  
#line 387 
  n -= 1U;
  
#line 387 
  ;
  
#line 387 
  if (tmp_1 != 0U) 
#line 389 
                   goto ldv_57006; else 
#line 392 
                                        goto ldv_57008;
  ldv_57008: 
#line 393 
  ;
  
#line 405 
  tq->cidx = cidx;
  
#line 406 
  return;
}


#line 411  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
__inline static int reclaimable(struct sge_txq const *tq)
{
  int tmp_0;
  
#line 413 
  if (0 != 0) 
#line 413 
              tmp_0 = (int)((unsigned short)(((int)(tq->stat)->cidx << 8) | ((int)(tq->stat)->cidx >> 8)));
  else {
    __u16 tmp;
    
#line 413 
    tmp = __fswab16((unsigned short)((int)(tq->stat)->cidx));
    
#line 413 
    tmp_0 = (int)tmp;
  }
  
#line 413 
  int hw_cidx = tmp_0;
  
#line 414 
  int reclaimable_0 = (int)((unsigned int)hw_cidx - tq->cidx);
  
#line 415 
  if (reclaimable_0 < 0) 
#line 416 
                         reclaimable_0 = (int)(tq->size + (unsigned int)reclaimable_0); else ;
  
#line 417 
  return reclaimable_0;
}


#line 430  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
__inline static void reclaim_completed_tx(struct adapter *adapter, struct sge_txq *tq, bool unmap)
{
  
#line 434 
  int avail = reclaimable((struct sge_txq const *)tq);
  
#line 436 
  if (avail != 0) {
    
#line 441 
    if (avail > 16) 
#line 442 
                    avail = 16; else ;
    
#line 444 
    free_tx_desc(adapter,tq,(unsigned int)avail,(_Bool)((bool)((int)unmap) != 0));
    
#line 445 
    tq->in_use -= (unsigned int)avail;
  }
  else ;
  
#line 447 
  return;
}


#line 454  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
__inline static int get_buf_size(struct adapter const *adapter, struct rx_sw_desc const *sdesc)
{
  int tmp;
  
#line 457 
  struct sge const *s = & adapter->sge;
  
#line 460 
  if (s->fl_pg_order != 0U && (sdesc->dma_addr & 1ULL) != 0ULL) 
#line 460 
                                                                tmp = (int)(4096UL << s->fl_pg_order); else 
                                                                    
#line 460 
                                                                    tmp = 4096;
  
#line 460 
  return tmp;
}


#line 473  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
static void free_rx_bufs(struct adapter *adapter, struct sge_fl *fl, int n)
{
  int tmp_2;
  
#line 475 
  goto ldv_57032;
  ldv_57031: 
#line 476 
  ;
  {
    bool tmp_1;
    
#line 476 
    struct rx_sw_desc *sdesc = fl->sdesc + fl->cidx;
    
#line 478 
    tmp_1 = is_buf_mapped((struct rx_sw_desc const *)sdesc);
    
#line 478 
    if ((int)tmp_1 != 0) {
      int tmp;
      dma_addr_t tmp_0;
      
#line 480 
      tmp = get_buf_size((struct adapter const *)adapter,(struct rx_sw_desc const *)sdesc);
      
#line 479 
      tmp_0 = get_buf_addr((struct rx_sw_desc const *)sdesc);
      
#line 479 
      ;
      
#line 479 
      dma_unmap_page(adapter->pdev_dev,tmp_0,(unsigned long)tmp,(enum dma_data_direction)DMA_FROM_DEVICE);
    }
    else ;
    
#line 482 
    put_page(sdesc->page);
    
#line 483 
    sdesc->page = (struct page *)0;
    
#line 484 
    fl->cidx += 1U;
    
#line 484 
    ;
    
#line 484 
    if (fl->cidx == fl->size) 
#line 485 
                              fl->cidx = 0U; else ;
    
#line 486 
    fl->avail -= 1U;
  }
  ldv_57032: 
#line 488 
  ;
  
#line 475 
  tmp_2 = n;
  
#line 475 
  n -= 1;
  
#line 475 
  ;
  
#line 475 
  if (tmp_2 != 0) 
#line 477 
                  goto ldv_57031; else 
#line 480 
                                       goto ldv_57033;
  ldv_57033: 
#line 481 
  ;
  
#line 482 
  return;
}


#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
static void unmap_rx_buf(struct adapter *adapter, struct sge_fl *fl)
{
  bool tmp_1;
  
#line 505 
  struct rx_sw_desc *sdesc = fl->sdesc + fl->cidx;
  
#line 507 
  tmp_1 = is_buf_mapped((struct rx_sw_desc const *)sdesc);
  
#line 507 
  if ((int)tmp_1 != 0) {
    int tmp;
    dma_addr_t tmp_0;
    
#line 509 
    tmp = get_buf_size((struct adapter const *)adapter,(struct rx_sw_desc const *)sdesc);
    
#line 508 
    tmp_0 = get_buf_addr((struct rx_sw_desc const *)sdesc);
    
#line 508 
    ;
    
#line 508 
    dma_unmap_page(adapter->pdev_dev,tmp_0,(unsigned long)tmp,(enum dma_data_direction)DMA_FROM_DEVICE);
  }
  else ;
  
#line 511 
  sdesc->page = (struct page *)0;
  
#line 512 
  fl->cidx += 1U;
  
#line 512 
  ;
  
#line 512 
  if (fl->cidx == fl->size) 
#line 513 
                            fl->cidx = 0U; else ;
  
#line 514 
  fl->avail -= 1U;
  
#line 515 
  return;
}


#line 525  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
__inline static void ring_fl_db(struct adapter *adapter, struct sge_fl *fl)
{
  
#line 527 
  u32 val = adapter->params.arch.sge_fl_db;
  
#line 533 
  if (fl->pend_cred > 7U) {
    int tmp;
    
#line 534 
    tmp = is_t4(adapter->params.chip);
    
#line 534 
    if (tmp != 0) 
#line 535 
                  val = fl->pend_cred / 8U | val; else 
#line 537 
                                                       val = fl->pend_cred / 8U | val;
    
#line 538 
    ldv_inline_asm();
    
#line 548 
    if ((long)(fl->bar2_addr == (void *)0) != 0L) 
#line 549 
                                                  t4_write_reg(adapter,0U,(fl->cntxt_id << 15) | val);
    else {
      
#line 553 
      writel((fl->bar2_qid << 15) | val,(void volatile *)(fl->bar2_addr + 8U));
      
#line 555 
      ldv_inline_asm();
    }
    
#line 561 
    fl->pend_cred &= 7U;
  }
  else ;
  
#line 563 
  return;
}


#line 571  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
__inline static void set_rx_sw_desc(struct rx_sw_desc *sdesc, struct page *page, dma_addr_t dma_addr)
{
  
#line 574 
  sdesc->page = page;
  
#line 575 
  sdesc->dma_addr = dma_addr;
  
#line 576 
  return;
}


#line 583  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
__inline static void poison_buf(struct page *page, size_t sz)
{
  
#line 585 
  return;
}


#line 604  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
static unsigned int refill_fl(struct adapter *adapter, struct sge_fl *fl, int n, gfp_t gfp)
{
  struct page *page;
  dma_addr_t dma_addr;
  int tmp;
  __be64 *tmp_0;
  int tmp_2;
  __be64 *tmp_3;
  int tmp_5;
  bool tmp_6;
  
#line 607 
  struct sge *s = & adapter->sge;
  
#line 610 
  unsigned int cred = fl->avail;
  
#line 611 
  __be64 *d = fl->desc + fl->pidx;
  
#line 612 
  struct rx_sw_desc *sdesc = fl->sdesc + fl->pidx;
  
#line 619 
  if ((long)(fl->avail + (unsigned int)n > fl->size + 4294967288U) != 0L) {
    
#line 621 
    ldv_inline_asm();
    
#line 619 
    ;
  }
  else ;
  
#line 621 
  gfp |= 512U;
  
#line 629 
  if (s->fl_pg_order == 0U) 
#line 630 
                            goto alloc_small_pages; else ;
  
#line 632 
  goto ldv_57069;
  ldv_57068: 
#line 633 
  ;
  
#line 633 
  page = __dev_alloc_pages(gfp,s->fl_pg_order);
  
#line 634 
  if ((long)(page == (struct page *)0) != 0L) {
    
#line 640 
    fl->large_alloc_failed += 1UL;
    
#line 641 
    goto ldv_57066;
  }
  else ;
  
#line 643 
  poison_buf(page,4096UL << s->fl_pg_order);
  
#line 645 
  dma_addr = dma_map_page(adapter->pdev_dev,page,0UL,4096UL << s->fl_pg_order,(enum dma_data_direction)DMA_FROM_DEVICE);
  
#line 648 
  tmp = dma_mapping_error(adapter->pdev_dev,dma_addr);
  
#line 648 
  if ((long)(tmp != 0) != 0L) {
    
#line 657 
    __free_pages(page,s->fl_pg_order);
    
#line 658 
    goto out;
  }
  else ;
  
#line 660 
  dma_addr |= 1ULL;
  
#line 661 
  tmp_0 = d;
  
#line 661 
  d += 1;
  
#line 661 
  if (0 != 0) 
#line 661 
              *tmp_0 = (((((((dma_addr << 56) | ((dma_addr << 40) & 71776119061217280ULL)) | ((dma_addr << 24) & 280375465082880ULL)) | ((dma_addr << 8) & 1095216660480ULL)) | ((dma_addr >> 8) & 4278190080ULL)) | ((dma_addr >> 24) & 16711680ULL)) | ((dma_addr >> 40) & 65280ULL)) | (dma_addr >> 56); else 
                                                                    
#line 661 
                                                                    *tmp_0 = __fswab64(dma_addr);
  
#line 663 
  set_rx_sw_desc(sdesc,page,dma_addr);
  
#line 664 
  sdesc += 1;
  
#line 666 
  fl->avail += 1U;
  
#line 667 
  fl->pidx += 1U;
  
#line 667 
  ;
  
#line 667 
  if (fl->pidx == fl->size) {
    
#line 668 
    fl->pidx = 0U;
    
#line 669 
    sdesc = fl->sdesc;
    
#line 670 
    d = fl->desc;
  }
  else ;
  
#line 672 
  n -= 1;
  ldv_57069: 
#line 673 
  ;
  
#line 632 
  if (n != 0) 
#line 634 
              goto ldv_57068; else 
#line 637 
                                   goto ldv_57066;
  ldv_57066: 
#line 638 
  ;
  alloc_small_pages: 
#line 675 
  ;
  
#line 676 
  goto ldv_57072;
  ldv_57071: 
#line 677 
  ;
  
#line 677 
  page = __dev_alloc_page(gfp);
  
#line 678 
  if ((long)(page == (struct page *)0) != 0L) {
    
#line 679 
    fl->alloc_failed += 1UL;
    
#line 680 
    goto ldv_57070;
  }
  else ;
  
#line 682 
  poison_buf(page,4096UL);
  
#line 684 
  dma_addr = dma_map_page(adapter->pdev_dev,page,0UL,4096UL,(enum dma_data_direction)DMA_FROM_DEVICE);
  
#line 686 
  tmp_2 = dma_mapping_error(adapter->pdev_dev,dma_addr);
  
#line 686 
  if ((long)(tmp_2 != 0) != 0L) {
    
#line 687 
    put_page(page);
    
#line 688 
    goto ldv_57070;
  }
  else ;
  
#line 690 
  tmp_3 = d;
  
#line 690 
  d += 1;
  
#line 690 
  if (0 != 0) 
#line 690 
              *tmp_3 = (((((((dma_addr << 56) | ((dma_addr << 40) & 71776119061217280ULL)) | ((dma_addr << 24) & 280375465082880ULL)) | ((dma_addr << 8) & 1095216660480ULL)) | ((dma_addr >> 8) & 4278190080ULL)) | ((dma_addr >> 24) & 16711680ULL)) | ((dma_addr >> 40) & 65280ULL)) | (dma_addr >> 56); else 
                                                                    
#line 690 
                                                                    *tmp_3 = __fswab64(dma_addr);
  
#line 692 
  set_rx_sw_desc(sdesc,page,dma_addr);
  
#line 693 
  sdesc += 1;
  
#line 695 
  fl->avail += 1U;
  
#line 696 
  fl->pidx += 1U;
  
#line 696 
  ;
  
#line 696 
  if (fl->pidx == fl->size) {
    
#line 697 
    fl->pidx = 0U;
    
#line 698 
    sdesc = fl->sdesc;
    
#line 699 
    d = fl->desc;
  }
  else ;
  ldv_57072: 
#line 701 
  ;
  
#line 676 
  tmp_5 = n;
  
#line 676 
  n -= 1;
  
#line 676 
  ;
  
#line 676 
  if (tmp_5 != 0) 
#line 678 
                  goto ldv_57071; else 
#line 681 
                                       goto ldv_57070;
  ldv_57070: 
#line 682 
  ;
  out: 
#line 703 
  ;
  
#line 709 
  cred = fl->avail - cred;
  
#line 710 
  fl->pend_cred += cred;
  
#line 711 
  ring_fl_db(adapter,fl);
  
#line 713 
  tmp_6 = fl_starving((struct adapter const *)adapter,(struct sge_fl const *)fl);
  
#line 713 
  if ((long)((int)tmp_6 != 0) != 0L) {
    
#line 715 
    ldv_inline_asm();
    
#line 715 
    set_bit((long)fl->cntxt_id,(unsigned long volatile *)(& adapter->sge.starving_fl));
  }
  else ;
  
#line 718 
  return cred;
}


#line 725  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
__inline static void __refill_fl(struct adapter *adapter, struct sge_fl *fl)
{
  unsigned int tmp_1;
  {
    unsigned int tmp;
    unsigned int tmp_0;
    
#line 728 
    unsigned int _min1 = 16U;
    
#line 728 
    tmp = fl_cap((struct sge_fl const *)fl);
    
#line 728 
    unsigned int _min2 = tmp - fl->avail;
    
#line 728 
    if (_min1 < _min2) 
#line 728 
                       tmp_0 = _min1; else 
#line 728 
                                           tmp_0 = _min2;
    
#line 728 
    tmp_1 = tmp_0;
  }
  
#line 727 
  ;
  
#line 727 
  ;
  
#line 727 
  refill_fl(adapter,fl,(int)tmp_1,32U);
  
#line 730 
  return;
}


#line 751  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
static void *alloc_ring(struct device *dev, size_t nelem, size_t hwsize, size_t swsize, dma_addr_t *busaddrp, void *swringp, size_t stat_size)
{
  void *__retres;
  
#line 758 
  size_t hwlen = nelem * hwsize + stat_size;
  
#line 759 
  void *hwring = dma_alloc_attrs(dev,hwlen,busaddrp,208U,(struct dma_attrs *)0);
  
#line 761 
  if (hwring == (void *)0) {
    
#line 762 
    __retres = (void *)0;
    
#line 762 
    goto return_label;
  }
  else ;
  
#line 768 
  if ((long)((swsize != 0UL) ^ (swringp != (void *)0)) != 0L) {
    
#line 770 
    ldv_inline_asm();
    
#line 768 
    ;
  }
  else ;
  
#line 769 
  if (swsize != 0UL) {
    
#line 770 
    void *swring = kcalloc(nelem,swsize,208U);
    
#line 772 
    if (swring == (void *)0) {
      
#line 773 
      dma_free_attrs(dev,hwlen,hwring,*busaddrp,(struct dma_attrs *)0);
      
#line 774 
      __retres = (void *)0;
      
#line 774 
      goto return_label;
    }
    else ;
    
#line 776 
    *((void **)swringp) = swring;
  }
  else ;
  
#line 783 
  memset(hwring,0,hwlen);
  
#line 784 
  __retres = hwring;
  return_label: 
#line 784 
                return __retres;
}


#line 794  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
__inline static unsigned int sgl_len(unsigned int n)
{
  unsigned int __retres;
  
#line 813 
  n -= 1U;
  
#line 814 
  __retres = ((n * 3U) / 2U + (n & 1U)) + 2U;
  
#line 814 
  return __retres;
}


#line 824  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
__inline static unsigned int flits_to_desc(unsigned int flits)
{
  unsigned int __retres;
  
#line 826 
  if ((long)(flits > 64U) != 0L) {
    
#line 828 
    ldv_inline_asm();
    
#line 826 
    ;
  }
  else ;
  
#line 827 
  __retres = (flits + 7U) / 8U;
  
#line 827 
  return __retres;
}


#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
__inline static int is_eth_imm(struct sk_buff const *skb)
{
  int __retres;
  
#line 846 
  __retres = 0;
  
#line 846 
  return __retres;
}


#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
__inline static unsigned int calc_tx_flits(struct sk_buff const *skb)
{
  unsigned int __retres;
  unsigned int flits;
  int tmp;
  unsigned char *tmp_0;
  unsigned char *tmp_1;
  
#line 865 
  tmp = is_eth_imm(skb);
  
#line 865 
  if (tmp != 0) {
    
#line 866 
    __retres = (unsigned int)(((unsigned long)skb->len + 39UL) / 8UL);
    
#line 866 
    goto return_label;
  }
  else ;
  
#line 878 
  tmp_0 = skb_end_pointer(skb);
  
#line 878 
  ;
  
#line 878 
  flits = sgl_len((unsigned int)((int)((struct skb_shared_info *)tmp_0)->nr_frags + 1));
  
#line 879 
  tmp_1 = skb_end_pointer(skb);
  
#line 879 
  ;
  
#line 879 
  if ((unsigned int)((struct skb_shared_info *)tmp_1)->gso_size != 0U) 
    
#line 880 
    flits += 8U; else 
#line 884 
                      flits += 6U;
  
#line 886 
  __retres = flits;
  return_label: 
#line 886 
                return __retres;
}


#line 906  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
static void write_sgl(struct sk_buff const *skb, struct sge_txq *tq, struct ulptx_sgl *sgl, u64 *end, unsigned int start, dma_addr_t const *addr)
{
  unsigned int i;
  unsigned int len;
  struct ulptx_sge_pair *to;
  struct ulptx_sge_pair buf[9U];
  unsigned int tmp_0;
  __u32 tmp_8;
  unsigned int tmp_7;
  __u32 tmp_10;
  unsigned int tmp_9;
  __u64 tmp_12;
  
#line 912 
  struct skb_shared_info const *si = skb_end_pointer(skb);
  
#line 913 
  unsigned int nfrags = (unsigned int)si->nr_frags;
  
#line 916 
  tmp_0 = skb_headlen(skb);
  
#line 916 
  len = tmp_0 - start;
  
#line 917 
  if ((long)(len != 0U) != 0L) {
    
#line 918 
    if (0 != 0) 
#line 918 
                sgl->len0 = (((len << 24) | ((len << 8) & 16711680U)) | ((len >> 8) & 65280U)) | (len >> 24); else 
                                                                    
#line 918 
                                                                    sgl->len0 = __fswab32(len);
    
#line 919 
    if (0 != 0) 
#line 919 
                sgl->addr0 = ((((((((*addr + (unsigned long long)start) << 56) | (((*addr + (unsigned long long)start) << 40) & 71776119061217280ULL)) | (((*addr + (unsigned long long)start) << 24) & 280375465082880ULL)) | (((*addr + (unsigned long long)start) << 8) & 1095216660480ULL)) | (((*addr + (unsigned long long)start) >> 8) & 4278190080ULL)) | (((*addr + (unsigned long long)start) >> 24) & 16711680ULL)) | (((*addr + (unsigned long long)start) >> 40) & 65280ULL)) | ((*addr + (unsigned long long)start) >> 56); else 
                                                                    
#line 919 
                                                                    sgl->addr0 = __fswab64(*addr + (unsigned long long)start);
    
#line 920 
    nfrags += 1U;
  }
  else {
    __u32 tmp_4;
    unsigned int tmp_3;
    
#line 922 
    tmp_3 = skb_frag_size(& si->frags[0]);
    
#line 922 
    tmp_4 = __fswab32(tmp_3);
    
#line 922 
    sgl->len0 = tmp_4;
    
#line 923 
    if (0 != 0) 
#line 923 
                sgl->addr0 = (((((((*(addr + 1U) << 56) | ((*(addr + 1U) << 40) & 71776119061217280ULL)) | ((*(addr + 1U) << 24) & 280375465082880ULL)) | ((*(addr + 1U) << 8) & 1095216660480ULL)) | ((*(addr + 1U) >> 8) & 4278190080ULL)) | ((*(addr + 1U) >> 24) & 16711680ULL)) | ((*(addr + 1U) >> 40) & 65280ULL)) | (*(addr + 1U) >> 56); else 
                                                                    
#line 923 
                                                                    sgl->addr0 = __fswab64(*(addr + 1U));
  }
  
#line 926 
  if (0 != 0) 
#line 926 
              sgl->cmd_nsge = ((((nfrags << 24) | ((nfrags << 8) & 16711680U)) | ((nfrags >> 8) & 65280U)) | (nfrags >> 24)) | 130U; else 
                                                                    
#line 926 
                                                                    sgl->cmd_nsge = __fswab32(nfrags | 2181038080U);
  
#line 928 
  nfrags -= 1U;
  
#line 928 
  if ((long)(nfrags == 0U) != 0L) 
#line 929 
                                  goto return_label; else ;
  
#line 935 
  if ((u8 *)tq->stat < (u8 *)end) 
#line 935 
                                  to = (struct ulptx_sge_pair *)(& buf); else 
                                                                    
#line 935 
                                                                    to = (struct ulptx_sge_pair *)(& sgl->sge);
  
#line 937 
  i = (unsigned int)((unsigned int)si->nr_frags != nfrags);
  
#line 937 
  goto ldv_57120;
  ldv_57119: 
#line 938 
  ;
  
#line 938 
  tmp_7 = skb_frag_size(& si->frags[i]);
  
#line 938 
  tmp_8 = __fswab32(tmp_7);
  
#line 938 
  to->len[0] = tmp_8;
  
#line 939 
  i += 1U;
  
#line 939 
  ;
  
#line 939 
  tmp_9 = skb_frag_size(& si->frags[i]);
  
#line 939 
  tmp_10 = __fswab32(tmp_9);
  
#line 939 
  to->len[1] = tmp_10;
  
#line 940 
  if (0 != 0) 
#line 940 
              to->addr[0] = (((((((*(addr + i) << 56) | ((*(addr + i) << 40) & 71776119061217280ULL)) | ((*(addr + i) << 24) & 280375465082880ULL)) | ((*(addr + i) << 8) & 1095216660480ULL)) | ((*(addr + i) >> 8) & 4278190080ULL)) | ((*(addr + i) >> 24) & 16711680ULL)) | ((*(addr + i) >> 40) & 65280ULL)) | (*(addr + i) >> 56); else 
                                                                    
#line 940 
                                                                    to->addr[0] = __fswab64(*(addr + i));
  
#line 941 
  i += 1U;
  
#line 941 
  ;
  
#line 941 
  tmp_12 = __fswab64(*(addr + i));
  
#line 941 
  to->addr[1] = tmp_12;
  
#line 937 
  nfrags += 4294967294U;
  
#line 937 
  to += 1;
  ldv_57120: 
#line 938 
  ;
  
#line 937 
  if (nfrags > 1U) 
#line 939 
                   goto ldv_57119; else 
#line 942 
                                        goto ldv_57121;
  ldv_57121: 
#line 943 
  ;
  
#line 943 
  if (nfrags != 0U) {
    __u32 tmp_14;
    unsigned int tmp_13;
    
#line 944 
    tmp_13 = skb_frag_size(& si->frags[i]);
    
#line 944 
    tmp_14 = __fswab32(tmp_13);
    
#line 944 
    to->len[0] = tmp_14;
    
#line 945 
    to->len[1] = 0U;
    
#line 946 
    if (0 != 0) 
#line 946 
                to->addr[0] = (((((((*(addr + (i + 1U)) << 56) | ((*(addr + (i + 1U)) << 40) & 71776119061217280ULL)) | ((*(addr + (i + 1U)) << 24) & 280375465082880ULL)) | ((*(addr + (i + 1U)) << 8) & 1095216660480ULL)) | ((*(addr + (i + 1U)) >> 8) & 4278190080ULL)) | ((*(addr + (i + 1U)) >> 24) & 16711680ULL)) | ((*(addr + (i + 1U)) >> 40) & 65280ULL)) | (*(addr + (i + 1U)) >> 56); else 
                                                                    
#line 946 
                                                                    to->addr[0] = __fswab64(*(addr + (i + 1U)));
  }
  else ;
  
#line 948 
  if ((long)((u8 *)tq->stat < (u8 *)end) != 0L) {
    unsigned int part1;
    
#line 949 
    unsigned int part0 = (unsigned int)((long)tq->stat - (long)(& sgl->sge));
    
#line 951 
    if ((long)(part0 != 0U) != 0L) 
#line 952 
                                   memcpy((void *)(& sgl->sge),(void const *)(& buf),(unsigned long)part0); else ;
    
#line 953 
    part1 = (unsigned int)((long)end - (long)tq->stat);
    
#line 954 
    memcpy((void *)tq->desc,(void const *)(& buf) + part0,(unsigned long)part1);
    
#line 955 
    end = (u64 *)tq->desc + part1;
  }
  else ;
  
#line 957 
  if (((unsigned long)end & 8UL) != 0UL) 
#line 958 
                                         *end = 0ULL; else ;
  return_label: 
#line 959 
                return;
}


#line 969  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
__inline static void ring_tx_db(struct adapter *adapter, struct sge_txq *tq, int n)
{
  
#line 971 
  ldv_inline_asm();
  
#line 980 
  if ((long)(tq->bar2_addr == (void *)0) != 0L) {
    
#line 981 
    u32 val = (unsigned int)n;
    
#line 983 
    t4_write_reg(adapter,0U,(tq->cntxt_id << 15) | val);
  }
  else {
    
#line 986 
    u32 val_0 = (unsigned int)n;
    {
      
#line 994 
      int __ret_warn_on = (val_0 & 16384U) != 0U;
      
#line 994 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 994 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c",994); else ;
      
#line 994 
      long tmp = (long)(__ret_warn_on != 0);
    }
    
#line 1000 
    if (n == 1 && tq->bar2_qid == 0U) {
      unsigned int tmp_0;
      
#line 1001 
      if (tq->pidx != 0U) 
#line 1001 
                          tmp_0 = tq->pidx + 4294967295U; else 
#line 1001 
                                                               tmp_0 = tq->size + 4294967295U;
      
#line 1001 
      unsigned int index = tmp_0;
      
#line 1004 
      __be64 *src = (__be64 *)(tq->desc + index);
      
#line 1005 
      __be64 *dst = (__be64 *)(tq->bar2_addr + 64U);
      
#line 1007 
      unsigned int count = 8U;
      
#line 1018 
      goto ldv_57138;
      ldv_57137: 
#line 1019 
      ;
      
#line 1023 
      writeq((unsigned long)*src,(void volatile *)dst);
      
#line 1024 
      src += 1;
      
#line 1025 
      dst += 1;
      
#line 1026 
      count -= 1U;
      ldv_57138: 
#line 1027 
      ;
      
#line 1018 
      if (count != 0U) 
#line 1020 
                       goto ldv_57137; else 
#line 1023 
                                            goto ldv_57139;
      ldv_57139: 
#line 1024 
      ;
    }
    else 
#line 1029 
         writel((tq->bar2_qid << 15) | val_0,(void volatile *)(tq->bar2_addr + 8U));
    
#line 1031 
    ldv_inline_asm();
  }
  
#line 1033 
  return;
}


#line 1057  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
static void inline_tx_skb(struct sk_buff const *skb, struct sge_txq const *tq, void *pos)
{
  u64 *p;
  
#line 1061 
  int left = (int)((long)tq->stat - (long)pos);
  
#line 1063 
  if ((long)(skb->len <= (unsigned int)left) != 0L) {
    
#line 1064 
    if ((long)(skb->data_len == 0U) != 0L) 
#line 1065 
                                           skb_copy_from_linear_data(skb,pos,skb->len); else 
                                                                    
#line 1067 
                                                                    skb_copy_bits(skb,0,pos,(int)skb->len);
    
#line 1068 
    pos += skb->len;
  }
  else {
    
#line 1070 
    skb_copy_bits(skb,0,pos,left);
    
#line 1071 
    skb_copy_bits(skb,left,(void *)tq->desc,(int)(skb->len - (unsigned int)left));
    
#line 1072 
    pos = (void *)tq->desc + (skb->len - (unsigned int)left);
  }
  
#line 1076 
  p = (u64 *)(((unsigned long)pos + 7UL) & 18446744073709551608UL);
  
#line 1077 
  if (((unsigned long)p & 8UL) != 0UL) 
#line 1078 
                                       *p = 0ULL; else ;
  
#line 1079 
  return;
}


#line 1085  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
static u64 hwcsum(enum chip_type chip, struct sk_buff const *skb)
{
  u64 __retres;
  int csum_type;
  
#line 1088 
  struct iphdr const *iph = ip_hdr(skb);
  
#line 1090 
  if ((unsigned int)*((unsigned char *)iph + 0UL) == 64U) 
    
#line 1091 
    if ((unsigned int)iph->protocol == 6U) 
#line 1092 
                                           csum_type = 8;
    else 
      
#line 1093 
      if ((unsigned int)iph->protocol == 17U) 
#line 1094 
                                              csum_type = 9;
      else {
        nocsum: 
#line 1096 
        ;
        
#line 1101 
        __retres = 9223372036854775808ULL;
        
#line 1101 
        goto return_label;
      }
  else {
    
#line 1107 
    struct ipv6hdr const *ip6h = (struct ipv6hdr const *)iph;
    
#line 1109 
    if ((unsigned int)ip6h->nexthdr == 6U) 
#line 1110 
                                           csum_type = 10;
    else 
      
#line 1111 
      if ((unsigned int)ip6h->nexthdr == 17U) 
#line 1112 
                                              csum_type = 11; else 
#line 1114 
                                                                   goto nocsum;
  }
  
#line 1117 
  if ((long)(csum_type > 7) != 0L) {
    u32 tmp_0;
    int tmp_1;
    
#line 1118 
    tmp_0 = skb_network_header_len(skb);
    
#line 1118 
    u64 hdr_len = (unsigned long long)tmp_0 << 20;
    
#line 1119 
    tmp_1 = skb_network_offset(skb);
    
#line 1119 
    int eth_hdr_len = tmp_1 + -14;
    
#line 1121 
    if (chip <= (unsigned int)5) 
#line 1122 
                                 hdr_len = ((unsigned long long)eth_hdr_len << 34) | hdr_len; else 
                                                                    
#line 1124 
                                                                    hdr_len = ((unsigned long long)eth_hdr_len << 32) | hdr_len;
    
#line 1125 
    __retres = ((unsigned long long)csum_type << 40) | hdr_len;
    
#line 1125 
    goto return_label;
  }
  else {
    
#line 1127 
    int start = skb_transport_offset(skb);
    
#line 1130 
    __retres = (((unsigned long long)csum_type << 40) | (unsigned long long)(start << 20)) | ((unsigned long long)((int)skb->__anonCompField_sk_buff_69.__anonCompField___anonunion_220_68.csum_offset + start) << 30);
    
#line 1130 
    goto return_label;
  }
  return_label: 
#line 1117 
                return __retres;
}


#line 1138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
static void txq_stop(struct sge_eth_txq *txq)
{
  
#line 1140 
  netif_tx_stop_queue(txq->txq);
  
#line 1141 
  txq->q.stops += 1UL;
  
#line 1142 
  return;
}


#line 1147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
__inline static void txq_advance(struct sge_txq *tq, unsigned int n)
{
  
#line 1149 
  tq->in_use += n;
  
#line 1150 
  tq->pidx += n;
  
#line 1151 
  if (tq->pidx >= tq->size) 
#line 1152 
                            tq->pidx -= tq->size; else ;
  
#line 1153 
  return;
}


#line 1162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
int t4vf_eth_xmit(struct sk_buff *skb, struct net_device *dev)
{
  int __retres;
  u32 wr_mid;
  u64 cntrl;
  u64 *end;
  int qidx;
  int credits;
  int max_pkt_len;
  unsigned int flits;
  unsigned int ndesc;
  struct adapter *adapter;
  struct sge_eth_txq *txq;
  struct port_info const *pi;
  struct fw_eth_tx_pkt_vm_wr *wr;
  struct cpl_tx_pkt_core *cpl;
  struct skb_shared_info const *ssi;
  dma_addr_t addr[18U];
  unsigned char *tmp;
  u16 tmp_1;
  unsigned int tmp_2;
  int tmp_3;
  int tmp_22;
  
#line 1175 
  size_t const fw_hdr_copy_len = 16UL;
  
#line 1186 
  if ((long)(skb->len <= 15U) != 0L) 
#line 1187 
                                     goto out_free; else ;
  
#line 1190 
  max_pkt_len = (int)(dev->mtu + 14U);
  
#line 1191 
  if (((int)skb->vlan_tci & 4096) != 0) 
#line 1192 
                                        max_pkt_len += 4; else ;
  
#line 1193 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1193 
  ;
  
#line 1193 
  if ((unsigned int)((struct skb_shared_info *)tmp)->gso_size == 0U) {
    
#line 1193 
    if ((long)(skb->len > (unsigned int)max_pkt_len) != 0L) 
#line 1194 
                                                            goto out_free; else ;
  }
  else ;
  
#line 1199 
  pi = (struct port_info const *)netdev_priv((struct net_device const *)dev);
  
#line 1200 
  adapter = pi->adapter;
  
#line 1201 
  tmp_1 = skb_get_queue_mapping((struct sk_buff const *)skb);
  
#line 1201 
  qidx = (int)tmp_1;
  
#line 1202 
  if ((long)((int)pi->nqsets <= qidx) != 0L) {
    
#line 1204 
    ldv_inline_asm();
    
#line 1202 
    ;
  }
  else ;
  
#line 1203 
  txq = & adapter->sge.ethtxq[(int)pi->first_qset + qidx];
  
#line 1209 
  reclaim_completed_tx(adapter,& txq->q,(_Bool)1);
  
#line 1216 
  flits = calc_tx_flits((struct sk_buff const *)skb);
  
#line 1217 
  ndesc = flits_to_desc(flits);
  
#line 1218 
  tmp_2 = txq_avail((struct sge_txq const *)(& txq->q));
  
#line 1218 
  credits = (int)(tmp_2 - ndesc);
  
#line 1220 
  if ((long)(credits < 0) != 0L) {
    
#line 1227 
    txq_stop(txq);
    
#line 1228 
    dev_err((struct device const *)adapter->pdev_dev,"%s: TX ring %u full while queue awake!\n",(char *)(& dev->name),qidx);
    
#line 1231 
    __retres = 16;
    
#line 1231 
    goto return_label;
  }
  else ;
  
#line 1234 
  tmp_3 = is_eth_imm((struct sk_buff const *)skb);
  
#line 1234 
  if (tmp_3 == 0) {
    int tmp_4;
    
#line 1235 
    tmp_4 = map_skb(adapter->pdev_dev,(struct sk_buff const *)skb,(dma_addr_t *)(& addr));
    
#line 1234 
    if ((long)(tmp_4 < 0) != 0L) {
      
#line 1241 
      txq->mapping_err += 1UL;
      
#line 1242 
      goto out_free;
    }
    else ;
  }
  else ;
  
#line 1245 
  wr_mid = (flits + 1U) / 2U;
  
#line 1246 
  if ((long)(credits <= 5) != 0L) {
    
#line 1256 
    txq_stop(txq);
    
#line 1257 
    wr_mid |= 3221225472U;
  }
  else ;
  
#line 1267 
  wr = (struct fw_eth_tx_pkt_vm_wr *)(txq->q.desc + txq->q.pidx);
  
#line 1268 
  if (0 != 0) 
#line 1268 
              wr->equiq_to_len16 = (((wr_mid << 24) | ((wr_mid << 8) & 16711680U)) | ((wr_mid >> 8) & 65280U)) | (wr_mid >> 24); else 
                                                                    
#line 1268 
                                                                    wr->equiq_to_len16 = __fswab32(wr_mid);
  
#line 1269 
  wr->r3[0] = 0U;
  
#line 1270 
  wr->r3[1] = 0U;
  
#line 1271 
  skb_copy_from_linear_data((struct sk_buff const *)skb,(void *)(& wr->ethmacdst),(unsigned int)fw_hdr_copy_len);
  
#line 1272 
  end = (u64 *)wr + flits;
  
#line 1279 
  ssi = (struct skb_shared_info const *)skb_end_pointer((struct sk_buff const *)skb);
  
#line 1280 
  if ((unsigned int)ssi->gso_size != 0U) {
    u32 tmp_7;
    int tmp_8;
    __u32 tmp_10;
    struct tcphdr *tmp_9;
    int tmp_14;
    int tmp_15;
    
#line 1281 
    struct cpl_tx_pkt_lso_core *lso = (struct cpl_tx_pkt_lso_core *)(wr + 1U);
    
#line 1282 
    bool v6 = (_Bool)(((int)ssi->gso_type & 16) != 0);
    
#line 1283 
    tmp_7 = skb_network_header_len((struct sk_buff const *)skb);
    
#line 1283 
    int l3hdr_len = (int)tmp_7;
    
#line 1284 
    tmp_8 = skb_network_offset((struct sk_buff const *)skb);
    
#line 1284 
    int eth_xtra_len = tmp_8 + -14;
    
#line 1286 
    wr->op_immdlen = 536870929U;
    
#line 1294 
    tmp_9 = tcp_hdr((struct sk_buff const *)skb);
    
#line 1294 
    ;
    
#line 1294 
    tmp_10 = __fswab32(((((unsigned int)((int)v6 << 20) | (unsigned int)(eth_xtra_len / 4 << 16)) | (unsigned int)(l3hdr_len / 4 << 4)) | (unsigned int)tmp_9->doff) | 3988783104U);
    
#line 1293 
    lso->lso_ctrl = tmp_10;
    
#line 1301 
    lso->ipid_ofst = (unsigned short)0U;
    
#line 1302 
    if (0 != 0) 
#line 1302 
                lso->mss = (unsigned short)(((int)ssi->gso_size << 8) | ((int)ssi->gso_size >> 8)); else 
                                                                    
#line 1302 
                                                                    lso->mss = __fswab16((unsigned short)((int)ssi->gso_size));
    
#line 1303 
    lso->seqno_offset = 0U;
    
#line 1304 
    tmp_14 = is_t4(adapter->params.chip);
    
#line 1304 
    if (tmp_14 != 0) 
      
#line 1305 
      if (0 != 0) 
#line 1305 
                  lso->len = (((skb->len << 24) | ((skb->len << 8) & 16711680U)) | ((skb->len >> 8) & 65280U)) | (skb->len >> 24); else 
                                                                    
#line 1305 
                                                                    lso->len = __fswab32(skb->len);
    else 
      
#line 1307 
      if (0 != 0) 
#line 1307 
                  lso->len = (((skb->len << 24) | ((skb->len << 8) & 16711680U)) | ((skb->len >> 8) & 65280U)) | (skb->len >> 24); else 
                                                                    
#line 1307 
                                                                    lso->len = __fswab32(skb->len);
    
#line 1313 
    cpl = (struct cpl_tx_pkt_core *)(lso + 1U);
    
#line 1315 
    if ((((unsigned int)adapter->params.chip >> 4) & 15U) <= 5U) 
#line 1316 
                                                                 cntrl = (unsigned long long)eth_xtra_len << 34; else 
                                                                    
#line 1318 
                                                                    cntrl = (unsigned long long)eth_xtra_len << 32;
    
#line 1320 
    if ((int)v6 != 0) 
#line 1320 
                      tmp_15 = 10; else 
#line 1320 
                                        tmp_15 = 8;
    
#line 1320 
    cntrl = (((unsigned long long)tmp_15 << 40) | ((unsigned long long)l3hdr_len << 20)) | cntrl;
    
#line 1323 
    txq->tso += 1UL;
    
#line 1324 
    txq->tx_cso += (unsigned long)ssi->gso_segs;
  }
  else {
    int len;
    int tmp_16;
    
#line 1328 
    tmp_16 = is_eth_imm((struct sk_buff const *)skb);
    
#line 1328 
    if (tmp_16 != 0) 
#line 1328 
                     len = (int)(skb->len + 16U); else 
#line 1328 
                                                       len = 16;
    
#line 1329 
    if (0 != 0) 
#line 1329 
                wr->op_immdlen = (((((unsigned int)len << 24) | (((unsigned int)len << 8) & 16711680U)) | (((unsigned int)len >> 8) & 65280U)) | ((unsigned int)len >> 24)) | 17U; else 
                                                                    
#line 1330 
                                                                    wr->op_immdlen = __fswab32((unsigned int)(len | 285212672));
    
#line 1337 
    cpl = (struct cpl_tx_pkt_core *)(wr + 1U);
    
#line 1338 
    if ((unsigned int)*((unsigned char *)skb + 145UL) == 6U) {
      u64 tmp_18;
      
#line 1339 
      tmp_18 = hwcsum(adapter->params.chip,(struct sk_buff const *)skb);
      
#line 1339 
      cntrl = tmp_18 | 4611686018427387904ULL;
      
#line 1341 
      txq->tx_cso += 1UL;
    }
    else 
#line 1343 
         cntrl = 13835058055282163712ULL;
  }
  
#line 1350 
  if (((int)skb->vlan_tci & 4096) != 0) {
    
#line 1351 
    txq->vlan_ins += 1UL;
    
#line 1352 
    cntrl = (((unsigned long long)((int)skb->vlan_tci & -4097) << 44) | cntrl) | 1152921504606846976ULL;
  }
  else ;
  
#line 1358 
  if (0 != 0) 
#line 1358 
              cpl->ctrl0 = (((((unsigned int)((int)pi->port_id << 16) << 24) | (((unsigned int)((int)pi->port_id << 16) << 8) & 16711680U)) | (((unsigned int)((int)pi->port_id << 16) >> 8) & 65280U)) | ((unsigned int)((int)pi->port_id << 16) >> 24)) | 238U; else 
                                                                    
#line 1358 
                                                                    cpl->ctrl0 = __fswab32((unsigned int)(((int)pi->port_id << 16) | -301989888));
  
#line 1361 
  cpl->pack = (unsigned short)0U;
  
#line 1362 
  if (0 != 0) 
#line 1362 
              cpl->len = (unsigned short)(((int)((unsigned short)skb->len) << 8) | ((int)((unsigned short)skb->len) >> 8)); else 
                                                                    
#line 1362 
                                                                    cpl->len = __fswab16((unsigned short)((int)((unsigned short)skb->len)));
  
#line 1363 
  if (0 != 0) 
#line 1363 
              cpl->ctrl1 = (((((((cntrl << 56) | ((cntrl << 40) & 71776119061217280ULL)) | ((cntrl << 24) & 280375465082880ULL)) | ((cntrl << 8) & 1095216660480ULL)) | ((cntrl >> 8) & 4278190080ULL)) | ((cntrl >> 24) & 16711680ULL)) | ((cntrl >> 40) & 65280ULL)) | (cntrl >> 56); else 
                                                                    
#line 1363 
                                                                    cpl->ctrl1 = __fswab64(cntrl);
  
#line 1375 
  tmp_22 = is_eth_imm((struct sk_buff const *)skb);
  
#line 1375 
  if (tmp_22 != 0) {
    
#line 1380 
    inline_tx_skb((struct sk_buff const *)skb,(struct sge_txq const *)(& txq->q),(void *)(cpl + 1U));
    
#line 1381 
    dev_consume_skb_any(skb);
  }
  else {
    int last_desc;
    
#line 1420 
    struct ulptx_sgl *sgl = (struct ulptx_sgl *)(cpl + 1U);
    
#line 1421 
    struct sge_txq *tq = & txq->q;
    
#line 1431 
    if ((long)((void *)tq->stat == (void *)sgl) != 0L) {
      
#line 1432 
      sgl = (struct ulptx_sgl *)tq->desc;
      
#line 1433 
      end = (u64 *)tq->desc + ((long)end - (long)tq->stat);
    }
    else ;
    
#line 1436 
    write_sgl((struct sk_buff const *)skb,tq,sgl,end,0U,(dma_addr_t const *)(& addr));
    
#line 1437 
    skb_orphan(skb);
    
#line 1439 
    last_desc = (int)((tq->pidx + ndesc) + 4294967295U);
    
#line 1440 
    if (tq->size <= (unsigned int)last_desc) 
#line 1441 
                                             last_desc = (int)((unsigned int)last_desc - tq->size); else ;
    
#line 1442 
    (tq->sdesc + last_desc)->skb = skb;
    
#line 1443 
    (tq->sdesc + last_desc)->sgl = sgl;
  }
  
#line 1450 
  txq_advance(& txq->q,ndesc);
  
#line 1451 
  dev->trans_start = jiffies;
  
#line 1452 
  ring_tx_db(adapter,& txq->q,(int)ndesc);
  
#line 1453 
  __retres = 0;
  
#line 1453 
  goto return_label;
  out_free: 
#line 1455 
  ;
  
#line 1460 
  dev_kfree_skb_any(skb);
  
#line 1461 
  __retres = 0;
  return_label: 
#line 1461 
                return __retres;
}


#line 1473  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
__inline static void copy_frags(struct sk_buff *skb, struct pkt_gl const *gl, unsigned int offset)
{
  int i;
  unsigned char *tmp;
  
#line 1480 
  __skb_fill_page_desc(skb,0,gl->frags[0].page,(int)(gl->frags[0].offset + offset),(int)(gl->frags[0].size - offset));
  
#line 1483 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1483 
  ((struct skb_shared_info *)tmp)->nr_frags = (unsigned char)gl->nfrags;
  
#line 1484 
  i = 1;
  
#line 1484 
  goto ldv_57201;
  ldv_57200: 
#line 1485 
  ;
  
#line 1485 
  __skb_fill_page_desc(skb,i,gl->frags[i].page,(int)gl->frags[i].offset,(int)gl->frags[i].size);
  
#line 1484 
  i += 1;
  ldv_57201: 
#line 1485 
  ;
  
#line 1484 
  if (gl->nfrags > (unsigned int)i) 
#line 1486 
                                    goto ldv_57200; else 
#line 1489 
                                                         goto ldv_57202;
  ldv_57202: 
#line 1490 
  ;
  
#line 1490 
  get_page(gl->frags[gl->nfrags + 4294967295U].page);
  
#line 1491 
  return;
}


#line 1502  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
static struct sk_buff *t4vf_pktgl_to_skb(struct pkt_gl const *gl, unsigned int skb_len, unsigned int pull_len)
{
  struct sk_buff *skb;
  
#line 1519 
  if (gl->tot_len <= 256U) {
    
#line 1521 
    skb = alloc_skb(gl->tot_len,32U);
    
#line 1522 
    if ((long)(skb == (struct sk_buff *)0) != 0L) 
#line 1523 
                                                  goto out; else ;
    
#line 1524 
    __skb_put(skb,gl->tot_len);
    
#line 1525 
    skb_copy_to_linear_data(skb,(void const *)gl->va,gl->tot_len);
  }
  else {
    
#line 1527 
    skb = alloc_skb(skb_len,32U);
    
#line 1528 
    if ((long)(skb == (struct sk_buff *)0) != 0L) 
#line 1529 
                                                  goto out; else ;
    
#line 1530 
    __skb_put(skb,pull_len);
    
#line 1531 
    skb_copy_to_linear_data(skb,(void const *)gl->va,pull_len);
    
#line 1533 
    copy_frags(skb,gl,pull_len);
    
#line 1534 
    skb->len = gl->tot_len;
    
#line 1535 
    skb->data_len = skb->len - pull_len;
    
#line 1536 
    skb->truesize += skb->data_len;
  }
  out: 
#line 1539 
  ;
  
#line 1540 
  return skb;
}


#line 1550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
static void t4vf_pktgl_free(struct pkt_gl const *gl)
{
  int frag;
  int tmp;
  
#line 1554 
  frag = (int)(gl->nfrags + 4294967295U);
  
#line 1555 
  goto ldv_57215;
  ldv_57214: 
#line 1556 
  ;
  
#line 1556 
  put_page(gl->frags[frag].page);
  ldv_57215: 
#line 1557 
  ;
  
#line 1555 
  tmp = frag;
  
#line 1555 
  frag -= 1;
  
#line 1555 
  ;
  
#line 1555 
  if (tmp != 0) 
#line 1557 
                goto ldv_57214; else 
#line 1560 
                                     goto ldv_57216;
  ldv_57216: 
#line 1561 
  ;
  
#line 1562 
  return;
}


#line 1568  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
static void do_gro(struct sge_eth_rxq *rxq, struct pkt_gl const *gl, struct cpl_rx_pkt const *pkt)
{
  int ret;
  struct sk_buff *skb;
  gro_result_t tmp_1;
  
#line 1571 
  struct adapter *adapter = rxq->rspq.adapter;
  
#line 1572 
  struct sge *s = & adapter->sge;
  
#line 1576 
  skb = napi_get_frags(& rxq->rspq.napi);
  
#line 1577 
  if ((long)(skb == (struct sk_buff *)0) != 0L) {
    
#line 1578 
    t4vf_pktgl_free(gl);
    
#line 1579 
    rxq->stats.rx_drops += 1UL;
    
#line 1580 
    goto return_label;
  }
  else ;
  
#line 1583 
  copy_frags(skb,gl,s->pktshift);
  
#line 1584 
  skb->len = gl->tot_len - s->pktshift;
  
#line 1585 
  skb->data_len = skb->len;
  
#line 1586 
  skb->truesize += skb->data_len;
  
#line 1587 
  skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))1U;
  
#line 1588 
  skb_record_rx_queue(skb,(unsigned short)((int)rxq->rspq.idx));
  
#line 1590 
  if ((unsigned int)*((unsigned char *)pkt + 9UL) != 0U) {
    int tmp_0;
    
#line 1591 
    if (0 != 0) 
#line 1591 
                tmp_0 = (int)((unsigned short)(((int)pkt->vlan << 8) | ((int)pkt->vlan >> 8)));
    else {
      __u16 tmp;
      
#line 1592 
      tmp = __fswab16((unsigned short)((int)pkt->vlan));
      
#line 1591 
      tmp_0 = (int)tmp;
    }
    
#line 1591 
    ;
    
#line 1591 
    __vlan_hwaccel_put_tag(skb,(unsigned short)129,(unsigned short)tmp_0);
    
#line 1593 
    rxq->stats.vlan_ex += 1UL;
  }
  else ;
  
#line 1595 
  tmp_1 = napi_gro_frags(& rxq->rspq.napi);
  
#line 1595 
  ret = (int)tmp_1;
  
#line 1597 
  if (ret == 2) 
#line 1598 
                rxq->stats.lro_pkts += 1UL;
  else 
    
#line 1599 
    if ((unsigned int)ret <= 1U) 
#line 1600 
                                 rxq->stats.lro_merged += 1UL; else ;
  
#line 1601 
  rxq->stats.pkts += 1UL;
  
#line 1602 
  rxq->stats.rx_cso += 1UL;
  return_label: 
#line 1603 
                return;
}


#line 1613  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
int t4vf_ethrx_handler(struct sge_rspq *rspq, __be64 const *rsp, struct pkt_gl const *gl)
{
  int __retres;
  struct sk_buff *skb;
  struct sge_eth_rxq *tmp;
  
#line 1617 
  struct cpl_rx_pkt const *pkt = (struct cpl_rx_pkt const *)rsp;
  
#line 1618 
  bool csum_ok = (_Bool)((((unsigned int)*((unsigned char *)pkt + 9UL) != 0U && (unsigned int)pkt->err_vec == 0U) && ((rspq->netdev)->features & 17179869184ULL) != 0ULL) != 0);
  {
    
#line 1620 
    struct sge_rspq const *__mptr = (struct sge_rspq const *)rspq;
    
#line 1620 
    tmp = (struct sge_eth_rxq *)__mptr;
  }
  
#line 1620 
  struct sge_eth_rxq *rxq = tmp;
  
#line 1621 
  struct adapter *adapter = rspq->adapter;
  
#line 1622 
  struct sge *s = & adapter->sge;
  
#line 1628 
  if ((((pkt->l2info & 32768U) != 0U && ((rspq->netdev)->features & 16384ULL) != 0ULL) && (int)csum_ok != 0) && (unsigned int)*((unsigned char *)pkt + 9UL) == 0U) {
    
#line 1631 
    do_gro(rxq,gl,pkt);
    
#line 1632 
    __retres = 0;
    
#line 1632 
    goto return_label;
  }
  else ;
  
#line 1638 
  skb = t4vf_pktgl_to_skb(gl,512U,128U);
  
#line 1639 
  if ((long)(skb == (struct sk_buff *)0) != 0L) {
    
#line 1640 
    t4vf_pktgl_free(gl);
    
#line 1641 
    rxq->stats.rx_drops += 1UL;
    
#line 1642 
    __retres = 0;
    
#line 1642 
    goto return_label;
  }
  else ;
  
#line 1644 
  __skb_pull(skb,s->pktshift);
  
#line 1645 
  skb->protocol = eth_type_trans(skb,rspq->netdev);
  
#line 1646 
  skb_record_rx_queue(skb,(unsigned short)((int)rspq->idx));
  
#line 1647 
  rxq->stats.pkts += 1UL;
  
#line 1649 
  if ((int)csum_ok != 0 && (unsigned int)pkt->err_vec == 0U) {
    int tmp_1;
    
#line 1649 
    if (0 != 0) 
#line 1649 
                tmp_1 = (((((pkt->l2info << 24) | ((pkt->l2info << 8) & 16711680U)) | ((pkt->l2info >> 8) & 65280U)) | (pkt->l2info >> 24)) & 12582912U) != 0U;
    else {
      __u32 tmp_0;
      
#line 1650 
      tmp_0 = __fswab32(pkt->l2info);
      
#line 1649 
      tmp_1 = (tmp_0 & 12582912U) != 0U;
    }
    
#line 1649 
    if (tmp_1) {
      
#line 1651 
      if ((unsigned int)*((unsigned char *)pkt + 9UL) == 0U) 
#line 1652 
                                                             skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))1U;
      else {
        
#line 1654 
        __sum16 c = pkt->csum;
        
#line 1655 
        skb->__anonCompField_sk_buff_69.csum = csum_unfold((unsigned short)((int)c));
        
#line 1656 
        skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))2U;
      }
      
#line 1658 
      rxq->stats.rx_cso += 1UL;
    }
    else 
#line 1660 
         skb_checksum_none_assert((struct sk_buff const *)skb);
  }
  else 
#line 1660 
       skb_checksum_none_assert((struct sk_buff const *)skb);
  
#line 1662 
  if ((unsigned int)*((unsigned char *)pkt + 9UL) != 0U) {
    int tmp_3;
    
#line 1663 
    rxq->stats.vlan_ex += 1UL;
    
#line 1664 
    if (0 != 0) 
#line 1664 
                tmp_3 = (int)((unsigned short)(((int)pkt->vlan << 8) | ((int)pkt->vlan >> 8)));
    else {
      __u16 tmp_2;
      
#line 1664 
      tmp_2 = __fswab16((unsigned short)((int)pkt->vlan));
      
#line 1664 
      tmp_3 = (int)tmp_2;
    }
    
#line 1664 
    ;
    
#line 1664 
    __vlan_hwaccel_put_tag(skb,(unsigned short)129,(unsigned short)tmp_3);
  }
  else ;
  
#line 1667 
  netif_receive_skb(skb);
  
#line 1669 
  __retres = 0;
  return_label: 
#line 1669 
                return __retres;
}


#line 1680  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
__inline static bool is_new_response(struct rsp_ctrl const *rc, struct sge_rspq const *rspq)
{
  bool __retres;
  
#line 1683 
  __retres = (_Bool)((((int)rc->__anonCompField_rsp_ctrl_116.type_gen >> 7) & 1) == (int)rspq->gen);
  
#line 1683 
  return __retres;
}


#line 1706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
static void restore_rx_bufs(struct pkt_gl const *gl, struct sge_fl *fl, int frags)
{
  struct rx_sw_desc *sdesc;
  int tmp;
  
#line 1711 
  goto ldv_57251;
  ldv_57250: 
#line 1712 
  ;
  
#line 1712 
  if (fl->cidx == 0U) 
#line 1713 
                      fl->cidx = fl->size + 4294967295U; else 
#line 1715 
                                                              fl->cidx -= 1U;
  
#line 1716 
  sdesc = fl->sdesc + fl->cidx;
  
#line 1717 
  sdesc->page = gl->frags[frags].page;
  
#line 1718 
  sdesc->dma_addr |= 2ULL;
  
#line 1719 
  fl->avail += 1U;
  ldv_57251: 
#line 1720 
  ;
  
#line 1711 
  tmp = frags;
  
#line 1711 
  frags -= 1;
  
#line 1711 
  ;
  
#line 1711 
  if (tmp != 0) 
#line 1713 
                goto ldv_57250; else 
#line 1716 
                                     goto ldv_57252;
  ldv_57252: 
#line 1717 
  ;
  
#line 1718 
  return;
}


#line 1729  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
__inline static void rspq_next(struct sge_rspq *rspq)
{
  
#line 1731 
  rspq->cur_desc += rspq->iqe_len;
  
#line 1732 
  rspq->cidx += 1U;
  
#line 1732 
  ;
  
#line 1732 
  if ((long)(rspq->cidx == rspq->size) != 0L) {
    
#line 1733 
    rspq->cidx = 0U;
    
#line 1734 
    rspq->gen = (unsigned char)((unsigned int)rspq->gen ^ 1U);
    
#line 1735 
    rspq->cur_desc = (__be64 const *)rspq->desc;
  }
  else ;
  
#line 1737 
  return;
}


#line 1752  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
static int process_responses(struct sge_rspq *rspq, int budget)
{
  int __retres;
  struct sge_eth_rxq *tmp;
  {
    
#line 1754 
    struct sge_rspq const *__mptr = (struct sge_rspq const *)rspq;
    
#line 1754 
    tmp = (struct sge_eth_rxq *)__mptr;
  }
  
#line 1754 
  struct sge_eth_rxq *rxq = tmp;
  
#line 1755 
  struct adapter *adapter = rspq->adapter;
  
#line 1756 
  struct sge *s = & adapter->sge;
  
#line 1757 
  int budget_left = budget;
  
#line 1759 
  goto ldv_57285;
  ldv_57284: 
#line 1760 
  ;
  {
    int ret;
    int rsp_type;
    struct rsp_ctrl const *rc;
    int tmp_1;
    bool tmp_0;
    
#line 1763 
    rc = (struct rsp_ctrl const *)rspq->cur_desc + ((unsigned long)rspq->iqe_len + 18446744073709551600U);
    
#line 1764 
    tmp_0 = is_new_response(rc,(struct sge_rspq const *)rspq);
    
#line 1764 
    if (tmp_0) 
#line 1764 
               tmp_1 = 0; else 
#line 1764 
                               tmp_1 = 1;
    
#line 1764 
    if (tmp_1) 
#line 1765 
               goto ldv_57269; else ;
    
#line 1766 
    ldv_inline_asm();
    
#line 1772 
    rsp_type = ((int)rc->__anonCompField_rsp_ctrl_116.type_gen >> 4) & 3;
    
#line 1773 
    if ((long)(rsp_type == 0) != 0L) {
      struct page_frag *fp;
      struct pkt_gl gl;
      struct rx_sw_desc const *sdesc;
      u32 bufsz;
      u32 frag;
      unsigned int tmp_3;
      int tmp_4;
      u32 tmp_6;
      dma_addr_t tmp_7;
      void *tmp_8;
      
#line 1778 
      if (0 != 0) 
#line 1778 
                  tmp_3 = (((rc->pldbuflen_qid << 24) | ((rc->pldbuflen_qid << 8) & 16711680U)) | ((rc->pldbuflen_qid >> 8) & 65280U)) | (rc->pldbuflen_qid >> 24); else 
                                                                    
#line 1778 
                                                                    tmp_3 = __fswab32(rc->pldbuflen_qid);
      
#line 1778 
      u32 len = tmp_3;
      
#line 1784 
      if (len < (u32)0) {
        
#line 1790 
        if ((long)(rspq->offset > 0) != 0L) {
          
#line 1791 
          free_rx_bufs(rspq->adapter,& rxq->fl,1);
          
#line 1793 
          rspq->offset = 0;
        }
        else ;
        
#line 1795 
        len &= 2147483647U;
      }
      else ;
      
#line 1797 
      gl.tot_len = len;
      
#line 1802 
      frag = 0U;
      
#line 1802 
      fp = (struct page_frag *)(& gl.frags);
      ldv_57280: 
#line 1803 
      ;
      
#line 1803 
      if ((long)(frag > 16U) != 0L) {
        
#line 1805 
        ldv_inline_asm();
        
#line 1803 
        ;
      }
      else ;
      
#line 1804 
      if ((long)(rxq->fl.avail == 0U) != 0L) {
        
#line 1806 
        ldv_inline_asm();
        
#line 1804 
        ;
      }
      else ;
      
#line 1805 
      sdesc = (struct rx_sw_desc const *)(rxq->fl.sdesc + rxq->fl.cidx);
      
#line 1806 
      tmp_4 = get_buf_size((struct adapter const *)adapter,sdesc);
      
#line 1806 
      bufsz = (unsigned int)tmp_4;
      
#line 1807 
      fp->page = sdesc->page;
      
#line 1808 
      fp->offset = (unsigned int)rspq->offset;
      {
        u32 tmp_5;
        
#line 1809 
        u32 _min1 = bufsz;
        
#line 1809 
        u32 _min2 = len;
        
#line 1809 
        if (_min1 < _min2) 
#line 1809 
                           tmp_5 = _min1; else 
#line 1809 
                                               tmp_5 = _min2;
        
#line 1809 
        tmp_6 = tmp_5;
      }
      
#line 1809 
      fp->size = tmp_6;
      
#line 1810 
      len -= fp->size;
      
#line 1811 
      if (len == 0U) 
#line 1812 
                     goto ldv_57279; else ;
      
#line 1813 
      unmap_rx_buf(rspq->adapter,& rxq->fl);
      
#line 1802 
      frag += 1U;
      
#line 1802 
      fp += 1;
      
#line 1803 
      goto ldv_57280;
      ldv_57279: 
#line 1804 
      ;
      
#line 1815 
      gl.nfrags = frag + 1U;
      
#line 1822 
      ;
      
#line 1822 
      tmp_7 = get_buf_addr(sdesc);
      
#line 1822 
      ;
      
#line 1822 
      dma_sync_single_for_cpu((rspq->adapter)->pdev_dev,tmp_7,(unsigned long)fp->size,(enum dma_data_direction)DMA_FROM_DEVICE);
      
#line 1825 
      tmp_8 = lowmem_page_address((struct page const *)gl.frags[0].page);
      
#line 1825 
      gl.va = tmp_8 + gl.frags[0].offset;
      
#line 1827 
      __builtin_prefetch((void const *)gl.va);
      
#line 1833 
      ret = (*(rspq->handler))(rspq,rspq->cur_desc,(struct pkt_gl const *)(& gl));
      
#line 1834 
      if ((long)(ret == 0) != 0L) 
#line 1835 
                                  rspq->offset = (int)((unsigned int)rspq->offset + (((fp->size + s->fl_align) + 4294967295U) & - s->fl_align)); else 
                                                                    
#line 1837 
                                                                    restore_rx_bufs((struct pkt_gl const *)(& gl),& rxq->fl,(int)frag);
    }
    else 
      
#line 1838 
      if ((long)(rsp_type == 1) != 0L) 
#line 1839 
                                       ret = (*(rspq->handler))(rspq,rspq->cur_desc,(struct pkt_gl const *)0);
      else {
        {
          
#line 1841 
          int __ret_warn_on = rsp_type > 1;
          
#line 1841 
          if ((long)(__ret_warn_on != 0) != 0L) 
#line 1841 
                                                warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c",1841); else ;
          
#line 1841 
          long tmp_9 = (long)(__ret_warn_on != 0);
        }
        
#line 1842 
        ret = 0;
      }
    
#line 1845 
    if ((long)(ret != 0) != 0L) {
      
#line 1851 
      int const NOMEM_TIMER_IDX = 5;
      
#line 1852 
      rspq->next_intr_params = (unsigned char)10U;
      
#line 1854 
      goto ldv_57269;
    }
    else ;
    
#line 1857 
    rspq_next(rspq);
    
#line 1858 
    budget_left -= 1;
  }
  ldv_57285: 
#line 1860 
  ;
  
#line 1759 
  if ((long)(budget_left != 0) != 0L) 
#line 1761 
                                      goto ldv_57284; else 
#line 1764 
                                                           goto ldv_57269;
  ldv_57269: 
#line 1765 
  ;
  
#line 1866 
  if (rspq->offset >= 0 && rxq->fl.size - rxq->fl.avail > 15U) 
#line 1868 
                                                               __refill_fl(rspq->adapter,& rxq->fl); else ;
  
#line 1869 
  __retres = budget - budget_left;
  
#line 1869 
  return __retres;
}


#line 1883  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
static int napi_rx_handler(struct napi_struct *napi, int budget)
{
  unsigned int intr_params;
  struct sge_rspq *tmp;
  u32 val;
  int tmp_1;
  {
    
#line 1886 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 1886 
    tmp = (struct sge_rspq *)__mptr;
  }
  
#line 1886 
  struct sge_rspq *rspq = tmp;
  
#line 1887 
  int work_done = process_responses(rspq,budget);
  
#line 1890 
  if ((long)(work_done < budget) != 0L) {
    
#line 1891 
    napi_complete(napi);
    
#line 1892 
    intr_params = (unsigned int)rspq->next_intr_params;
    
#line 1893 
    rspq->next_intr_params = rspq->intr_params;
  }
  else 
#line 1895 
       intr_params = 14U;
  
#line 1897 
  if ((long)(work_done == 0) != 0L) 
#line 1898 
                                    rspq->unhandled_irqs += 1U; else ;
  
#line 1900 
  val = (intr_params << 12) | (unsigned int)work_done;
  
#line 1901 
  tmp_1 = is_t4((rspq->adapter)->params.chip);
  
#line 1901 
  if (tmp_1 != 0) 
#line 1902 
                  t4_write_reg(rspq->adapter,4U,((unsigned int)rspq->cntxt_id << 16) | val);
  else {
    
#line 1906 
    writel((rspq->bar2_qid << 16) | val,(void volatile *)(rspq->bar2_addr + 20U));
    
#line 1908 
    ldv_inline_asm();
  }
  
#line 1910 
  return work_done;
}


#line 1917  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
irqreturn_t t4vf_sge_intr_msix(int irq, void *cookie)
{
  irqreturn_t __retres;
  
#line 1919 
  struct sge_rspq *rspq = (struct sge_rspq *)cookie;
  
#line 1921 
  napi_schedule(& rspq->napi);
  
#line 1922 
  __retres = IRQ_HANDLED;
  
#line 1922 
  return __retres;
}


#line 1929  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
static unsigned int process_intrq(struct adapter *adapter)
{
  unsigned int work_done;
  u32 val;
  int tmp_2;
  
#line 1931 
  struct sge *s = & adapter->sge;
  
#line 1932 
  struct sge_rspq *intrq = & s->intrq;
  
#line 1936 
  ldv_spin_lock_73(& adapter->sge.intrq_lock);
  
#line 1937 
  work_done = 0U;
  ldv_57314: 
#line 1938 
  ;
  {
    struct rsp_ctrl const *rc;
    unsigned int qid;
    unsigned int iq_idx;
    struct sge_rspq *rspq;
    int tmp_0;
    bool tmp;
    
#line 1946 
    rc = (struct rsp_ctrl const *)intrq->cur_desc + ((unsigned long)intrq->iqe_len + 18446744073709551600U);
    
#line 1947 
    tmp = is_new_response(rc,(struct sge_rspq const *)intrq);
    
#line 1947 
    if (tmp) 
#line 1947 
             tmp_0 = 0; else 
#line 1947 
                             tmp_0 = 1;
    
#line 1947 
    if (tmp_0) 
#line 1948 
               goto ldv_57312; else ;
    
#line 1949 
    ldv_inline_asm();
    
#line 1956 
    if ((long)((((int)rc->__anonCompField_rsp_ctrl_116.type_gen >> 4) & 3) != 2) != 0L) {
      
#line 1957 
      dev_err((struct device const *)adapter->pdev_dev,"Unexpected INTRQ response type %d\n",((int)rc->__anonCompField_rsp_ctrl_116.type_gen >> 4) & 3);
      
#line 1960 
      goto ldv_57313;
    }
    else ;
    
#line 1971 
    if (0 != 0) 
#line 1971 
                qid = ((((rc->pldbuflen_qid << 24) | ((rc->pldbuflen_qid << 8) & 16711680U)) | ((rc->pldbuflen_qid >> 8) & 65280U)) | (rc->pldbuflen_qid >> 24)) & 2147483647U;
    else {
      __u32 tmp_1;
      
#line 1971 
      tmp_1 = __fswab32(rc->pldbuflen_qid);
      
#line 1971 
      qid = tmp_1 & 2147483647U;
    }
    
#line 1972 
    iq_idx = qid - s->ingr_base;
    
#line 1973 
    if ((long)(iq_idx > 9U) != 0L) {
      
#line 1974 
      dev_err((struct device const *)adapter->pdev_dev,"Ingress QID %d out of range\n",qid);
      
#line 1976 
      goto ldv_57313;
    }
    else ;
    
#line 1978 
    rspq = s->ingr_map[iq_idx];
    
#line 1979 
    if ((long)(rspq == (struct sge_rspq *)0) != 0L) {
      
#line 1980 
      dev_err((struct device const *)adapter->pdev_dev,"Ingress QID %d RSPQ=NULL\n",qid);
      
#line 1982 
      goto ldv_57313;
    }
    else ;
    
#line 1984 
    if ((long)((unsigned int)rspq->abs_id != qid) != 0L) {
      
#line 1985 
      dev_err((struct device const *)adapter->pdev_dev,"Ingress QID %d refers to RSPQ %d\n",qid,(int)rspq->abs_id);
      
#line 1988 
      goto ldv_57313;
    }
    else ;
    
#line 1996 
    napi_schedule(& rspq->napi);
    
#line 1997 
    rspq_next(intrq);
  }
  ldv_57313: 
#line 1999 
  ;
  
#line 1937 
  work_done += 1U;
  
#line 1937 
  goto ldv_57314;
  ldv_57312: 
#line 1938 
  ;
  
#line 2000 
  val = (unsigned int)((int)intrq->intr_params << 12) | work_done;
  
#line 2001 
  tmp_2 = is_t4(adapter->params.chip);
  
#line 2001 
  if (tmp_2 != 0) 
#line 2002 
                  t4_write_reg(adapter,4U,(unsigned int)((int)intrq->cntxt_id << 16) | val);
  else {
    
#line 2005 
    writel((intrq->bar2_qid << 16) | val,(void volatile *)(intrq->bar2_addr + 20U));
    
#line 2007 
    ldv_inline_asm();
  }
  
#line 2010 
  ldv_spin_unlock_74(& adapter->sge.intrq_lock);
  
#line 2012 
  return work_done;
}


#line 2019  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
static irqreturn_t t4vf_intr_msi(int irq, void *cookie)
{
  irqreturn_t __retres;
  
#line 2021 
  struct adapter *adapter = (struct adapter *)cookie;
  
#line 2023 
  process_intrq(adapter);
  
#line 2024 
  __retres = IRQ_HANDLED;
  
#line 2024 
  return __retres;
}


#line 2034  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
irq_handler_t t4vf_intr_handler(struct adapter *adapter)
{
  irq_handler_t __retres;
  
#line 2036 
  if ((long)((adapter->flags & 6UL) == 0UL) != 0L) {
    
#line 2038 
    ldv_inline_asm();
    
#line 2036 
    ;
  }
  else ;
  
#line 2037 
  if ((adapter->flags & 4UL) != 0UL) {
    
#line 2038 
    __retres = & t4vf_sge_intr_msix;
    
#line 2038 
    goto return_label;
  }
  else {
    
#line 2040 
    __retres = & t4vf_intr_msi;
    
#line 2040 
    goto return_label;
  }
  return_label: 
#line 2037 
                return __retres;
}


#line 2054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
static void sge_rx_timer_cb(unsigned long data)
{
  unsigned int i;
  
#line 2056 
  struct adapter *adapter = (struct adapter *)data;
  
#line 2057 
  struct sge *s = & adapter->sge;
  
#line 2068 
  i = 0U;
  
#line 2068 
  goto ldv_57342;
  ldv_57341: 
#line 2069 
  ;
  {
    unsigned long m;
    
#line 2071 
    m = s->starving_fl[i];
    
#line 2071 
    goto ldv_57339;
    ldv_57338: 
#line 2072 
    ;
    {
      unsigned long tmp;
      bool tmp_2;
      
#line 2072 
      tmp = __ffs(m);
      
#line 2072 
      unsigned int id = (unsigned int)tmp + i * 64U;
      
#line 2073 
      struct sge_fl *fl = (struct sge_fl *)s->egr_map[id];
      
#line 2075 
      set_bit((long)id,(unsigned long volatile *)(& s->starving_fl));
      
#line 2076 
      ldv_inline_asm();
      
#line 2084 
      tmp_2 = fl_starving((struct adapter const *)adapter,(struct sge_fl const *)fl);
      
#line 2084 
      if ((int)tmp_2 != 0) {
        struct sge_eth_rxq *rxq;
        struct sge_eth_rxq *tmp_0;
        bool tmp_1;
        {
          
#line 2087 
          struct sge_fl const *__mptr = (struct sge_fl const *)fl;
          
#line 2087 
          tmp_0 = (struct sge_eth_rxq *)__mptr + 18446744073709551240U;
        }
        
#line 2087 
        rxq = tmp_0;
        
#line 2088 
        tmp_1 = napi_reschedule(& rxq->rspq.napi);
        
#line 2088 
        if ((int)tmp_1 != 0) 
#line 2089 
                             fl->starving += 1UL; else 
#line 2091 
                                                       set_bit((long)id,(unsigned long volatile *)(& s->starving_fl));
      }
      else ;
    }
    
#line 2071 
    m = (m + 18446744073709551615UL) & m;
    ldv_57339: 
#line 2072 
    ;
    
#line 2071 
    if (m != 0UL) 
#line 2073 
                  goto ldv_57338; else 
#line 2076 
                                       goto ldv_57340;
    ldv_57340: 
#line 2077 
    ;
  }
  
#line 2068 
  i += 1U;
  ldv_57342: 
#line 2069 
  ;
  
#line 2068 
  if (i == 0U) 
#line 2070 
               goto ldv_57341; else 
#line 2073 
                                    goto ldv_57343;
  ldv_57343: 
#line 2074 
  ;
  
#line 2099 
  ldv_mod_timer_75(& s->rx_timer,jiffies + 125UL);
  
#line 2100 
  return;
}


#line 2113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
static void sge_tx_timer_cb(unsigned long data)
{
  unsigned int i;
  unsigned int budget;
  int tmp_2;
  
#line 2115 
  struct adapter *adapter = (struct adapter *)data;
  
#line 2116 
  struct sge *s = & adapter->sge;
  
#line 2119 
  budget = 100U;
  
#line 2120 
  i = (unsigned int)s->ethtxq_rover;
  ldv_57354: 
#line 2121 
  ;
  {
    int tmp_0;
    
#line 2122 
    struct sge_eth_txq *txq = & s->ethtxq[i];
    
#line 2124 
    tmp_0 = reclaimable((struct sge_txq const *)(& txq->q));
    
#line 2124 
    if (tmp_0 != 0) {
      bool tmp_1;
      
#line 2124 
      tmp_1 = __netif_tx_trylock(txq->txq);
      
#line 2124 
      if ((int)tmp_1 != 0) {
        
#line 2125 
        int avail = reclaimable((struct sge_txq const *)(& txq->q));
        
#line 2127 
        if ((unsigned int)avail > budget) 
#line 2128 
                                          avail = (int)budget; else ;
        
#line 2130 
        free_tx_desc(adapter,& txq->q,(unsigned int)avail,(_Bool)1);
        
#line 2131 
        txq->q.in_use -= (unsigned int)avail;
        
#line 2132 
        __netif_tx_unlock(txq->txq);
        
#line 2134 
        budget -= (unsigned int)avail;
        
#line 2135 
        if (budget == 0U) 
#line 2136 
                          goto ldv_57353; else ;
      }
      else ;
    }
    else ;
    
#line 2139 
    i += 1U;
    
#line 2140 
    if ((unsigned int)s->ethqsets <= i) 
#line 2141 
                                        i = 0U; else ;
  }
  
#line 2142 
  if ((unsigned int)s->ethtxq_rover != i) 
#line 2144 
                                          goto ldv_57354; else 
#line 2147 
                                                               goto ldv_57353;
  ldv_57353: 
#line 2148 
  ;
  
#line 2143 
  s->ethtxq_rover = (unsigned short)i;
  
#line 2150 
  if (budget != 0U) 
#line 2150 
                    tmp_2 = 125; else 
#line 2150 
                                      tmp_2 = 2;
  
#line 2150 
  ;
  
#line 2150 
  ;
  
#line 2150 
  ldv_mod_timer_76(& s->tx_timer,(unsigned long)tmp_2 + jiffies);
  
#line 2151 
  return;
}


#line 2166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
static void *bar2_address(struct adapter *adapter, unsigned int qid, enum t4_bar2_qtype qtype, unsigned int *pbar2_qid)
{
  void *__retres;
  u64 bar2_qoffset;
  int ret;
  
#line 2174 
  ret = t4vf_bar2_sge_qregs(adapter,qid,qtype,& bar2_qoffset,pbar2_qid);
  
#line 2176 
  if (ret != 0) {
    
#line 2177 
    __retres = (void *)0;
    
#line 2177 
    goto return_label;
  }
  else ;
  
#line 2179 
  __retres = adapter->bar2 + bar2_qoffset;
  return_label: 
#line 2179 
                return __retres;
}


#line 2192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
int t4vf_sge_alloc_rxq(struct adapter *adapter, struct sge_rspq *rspq, bool iqasynch, struct net_device *dev, int intr_dest, struct sge_fl *fl, int (*hnd)(struct sge_rspq *, __be64 const *, struct pkt_gl const *))
{
  int __retres;
  struct fw_iq_cmd cmd;
  struct fw_iq_cmd rpl;
  int ret;
  int iqandst;
  unsigned int tmp_0;
  __u16 tmp_71;
  unsigned int tmp_70;
  
#line 2197 
  struct sge *s = & adapter->sge;
  
#line 2198 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 2200 
  int flsz = 0;
  
#line 2209 
  if ((adapter->flags & 2UL) != 0UL && & adapter->sge.intrq != rspq) {
    
#line 2210 
    iqandst = 1;
    
#line 2211 
    intr_dest = (int)adapter->sge.intrq.abs_id;
  }
  else 
#line 2213 
       iqandst = 0;
  {
    
#line 2221 
    int const __y = 16;
    
#line 2221 
    tmp_0 = (rspq->size + 15U) & 4294967280U;
  }
  
#line 2221 
  rspq->size = tmp_0;
  
#line 2222 
  rspq->desc = (__be64 *)alloc_ring(adapter->pdev_dev,(unsigned long)rspq->size,(unsigned long)rspq->iqe_len,0UL,& rspq->phys_addr,(void *)0,0UL);
  
#line 2224 
  if (rspq->desc == (__be64 *)0ULL) {
    
#line 2225 
    __retres = -12;
    
#line 2225 
    goto return_label;
  }
  else ;
  
#line 2234 
  memset((void *)(& cmd),0,64UL);
  
#line 2235 
  cmd.op_to_vfn = 45072U;
  
#line 2239 
  cmd.alloc_to_len16 = 67109008U;
  
#line 2242 
  if (0 != 0) 
#line 2242 
              cmd.type_to_iqandstindex = ((((unsigned int)((((((int)iqasynch << 28) | ((int)pi->viid << 16)) | (iqandst << 15)) | 20480) | intr_dest) << 24) | (((unsigned int)((((((int)iqasynch << 28) | ((int)pi->viid << 16)) | (iqandst << 15)) | 20480) | intr_dest) << 8) & 16711680U)) | (((unsigned int)((((((int)iqasynch << 28) | ((int)pi->viid << 16)) | (iqandst << 15)) | 20480) | intr_dest) >> 8) & 65280U)) | ((unsigned int)((((((int)iqasynch << 28) | ((int)pi->viid << 16)) | (iqandst << 15)) | 20480) | intr_dest) >> 24); else 
                                                                    
#line 2243 
                                                                    cmd.type_to_iqandstindex = __fswab32((unsigned int)((((((int)iqasynch << 28) | ((int)pi->viid << 16)) | (iqandst << 15)) | 20480) | intr_dest));
  
#line 2251 
  if (0 != 0) {
    unsigned int tmp_68;
    
#line 2251 
    if (rspq->iqe_len == 0U) {
      int tmp_3;
      
#line 2251 
      tmp_3 = ____ilog2_NaN();
      
#line 2251 
      tmp_68 = (unsigned int)((unsigned short)tmp_3) + 65532U;
    }
    else {
      unsigned int tmp_67;
      
#line 2251 
      if (((unsigned long long)rspq->iqe_len & 4611686018427387904ULL) == 0ULL) {
        unsigned int tmp_66;
        
#line 2251 
        if (((unsigned long long)rspq->iqe_len & 2305843009213693952ULL) == 0ULL) {
          unsigned int tmp_65;
          
#line 2251 
          if (((unsigned long long)rspq->iqe_len & 1152921504606846976ULL) == 0ULL) {
            unsigned int tmp_64;
            
#line 2251 
            if (((unsigned long long)rspq->iqe_len & 576460752303423488ULL) == 0ULL) {
              unsigned int tmp_63;
              
#line 2251 
              if (((unsigned long long)rspq->iqe_len & 288230376151711744ULL) == 0ULL) {
                unsigned int tmp_62;
                
#line 2251 
                if (((unsigned long long)rspq->iqe_len & 144115188075855872ULL) == 0ULL) {
                  unsigned int tmp_61;
                  
#line 2251 
                  if (((unsigned long long)rspq->iqe_len & 72057594037927936ULL) == 0ULL) {
                    unsigned int tmp_60;
                    
#line 2251 
                    if (((unsigned long long)rspq->iqe_len & 36028797018963968ULL) == 0ULL) {
                      unsigned int tmp_59;
                      
#line 2251 
                      if (((unsigned long long)rspq->iqe_len & 18014398509481984ULL) == 0ULL) {
                        unsigned int tmp_58;
                        
#line 2251 
                        if (((unsigned long long)rspq->iqe_len & 9007199254740992ULL) == 0ULL) {
                          unsigned int tmp_57;
                          
#line 2251 
                          if (((unsigned long long)rspq->iqe_len & 4503599627370496ULL) == 0ULL) {
                            unsigned int tmp_56;
                            
#line 2251 
                            if (((unsigned long long)rspq->iqe_len & 2251799813685248ULL) == 0ULL) {
                              unsigned int tmp_55;
                              
#line 2251 
                              if (((unsigned long long)rspq->iqe_len & 1125899906842624ULL) == 0ULL) {
                                unsigned int tmp_54;
                                
#line 2251 
                                if (((unsigned long long)rspq->iqe_len & 562949953421312ULL) == 0ULL) {
                                  unsigned int tmp_53;
                                  
#line 2251 
                                  if (((unsigned long long)rspq->iqe_len & 281474976710656ULL) == 0ULL) {
                                    unsigned int tmp_52;
                                    
#line 2251 
                                    if (((unsigned long long)rspq->iqe_len & 140737488355328ULL) == 0ULL) {
                                      unsigned int tmp_51;
                                      
#line 2251 
                                      if (((unsigned long long)rspq->iqe_len & 70368744177664ULL) == 0ULL) {
                                        unsigned int tmp_50;
                                        
#line 2251 
                                        if (((unsigned long long)rspq->iqe_len & 35184372088832ULL) == 0ULL) {
                                          unsigned int tmp_49;
                                          
#line 2251 
                                          if (((unsigned long long)rspq->iqe_len & 17592186044416ULL) == 0ULL) {
                                            unsigned int tmp_48;
                                            
#line 2251 
                                            if (((unsigned long long)rspq->iqe_len & 8796093022208ULL) == 0ULL) {
                                              unsigned int tmp_47;
                                              
#line 2251 
                                              if (((unsigned long long)rspq->iqe_len & 4398046511104ULL) == 0ULL) {
                                                unsigned int tmp_46;
                                                
#line 2251 
                                                if (((unsigned long long)rspq->iqe_len & 2199023255552ULL) == 0ULL) {
                                                  unsigned int tmp_45;
                                                  
#line 2251 
                                                  if (((unsigned long long)rspq->iqe_len & 1099511627776ULL) == 0ULL) {
                                                    unsigned int tmp_44;
                                                    
#line 2251 
                                                    if (((unsigned long long)rspq->iqe_len & 549755813888ULL) == 0ULL) {
                                                      unsigned int tmp_43;
                                                      
#line 2251 
                                                      if (((unsigned long long)rspq->iqe_len & 274877906944ULL) == 0ULL) {
                                                        unsigned int tmp_42;
                                                        
#line 2251 
                                                        if (((unsigned long long)rspq->iqe_len & 137438953472ULL) == 0ULL) {
                                                          unsigned int tmp_41;
                                                          
#line 2251 
                                                          if (((unsigned long long)rspq->iqe_len & 68719476736ULL) == 0ULL) {
                                                            unsigned int tmp_40;
                                                            
#line 2251 
                                                            if (((unsigned long long)rspq->iqe_len & 34359738368ULL) == 0ULL) {
                                                              unsigned int tmp_39;
                                                              
#line 2251 
                                                              if (((unsigned long long)rspq->iqe_len & 17179869184ULL) == 0ULL) {
                                                                unsigned int tmp_38;
                                                                
#line 2251 
                                                                if (((unsigned long long)rspq->iqe_len & 8589934592ULL) == 0ULL) {
                                                                  unsigned int tmp_37;
                                                                  
#line 2251 
                                                                  if (
                                                                    ((unsigned long long)rspq->iqe_len & 4294967296ULL) == 0ULL) {
                                                                    unsigned int tmp_36;
                                                                    
#line 2251 
                                                                    if (
                                                                    rspq->iqe_len >= (unsigned int)0) {
                                                                    unsigned int tmp_35;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 1073741824ULL) == 0ULL) {
                                                                    unsigned int tmp_34;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 536870912ULL) == 0ULL) {
                                                                    unsigned int tmp_33;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 268435456ULL) == 0ULL) {
                                                                    unsigned int tmp_32;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 134217728ULL) == 0ULL) {
                                                                    unsigned int tmp_31;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 67108864ULL) == 0ULL) {
                                                                    unsigned int tmp_30;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 33554432ULL) == 0ULL) {
                                                                    unsigned int tmp_29;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 16777216ULL) == 0ULL) {
                                                                    unsigned int tmp_28;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 8388608ULL) == 0ULL) {
                                                                    unsigned int tmp_27;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 4194304ULL) == 0ULL) {
                                                                    unsigned int tmp_26;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 2097152ULL) == 0ULL) {
                                                                    unsigned int tmp_25;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 1048576ULL) == 0ULL) {
                                                                    unsigned int tmp_24;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 524288ULL) == 0ULL) {
                                                                    unsigned int tmp_23;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 262144ULL) == 0ULL) {
                                                                    unsigned int tmp_22;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 131072ULL) == 0ULL) {
                                                                    unsigned int tmp_21;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 65536ULL) == 0ULL) {
                                                                    unsigned int tmp_20;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 32768ULL) == 0ULL) {
                                                                    unsigned int tmp_19;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 16384ULL) == 0ULL) {
                                                                    unsigned int tmp_18;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 8192ULL) == 0ULL) {
                                                                    unsigned int tmp_17;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 4096ULL) == 0ULL) {
                                                                    unsigned int tmp_16;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 2048ULL) == 0ULL) {
                                                                    unsigned int tmp_15;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 1024ULL) == 0ULL) {
                                                                    unsigned int tmp_14;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 512ULL) == 0ULL) {
                                                                    unsigned int tmp_13;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 256ULL) == 0ULL) {
                                                                    unsigned int tmp_12;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 128ULL) == 0ULL) {
                                                                    unsigned int tmp_11;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 64ULL) == 0ULL) {
                                                                    unsigned int tmp_10;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 32ULL) == 0ULL) {
                                                                    unsigned int tmp_9;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 16ULL) == 0ULL) {
                                                                    unsigned int tmp_8;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 8ULL) == 0ULL) {
                                                                    unsigned int tmp_7;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 4ULL) == 0ULL) {
                                                                    unsigned int tmp_6;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 2ULL) == 0ULL) {
                                                                    unsigned int tmp_5;
                                                                    
#line 2251 
                                                                    if (
                                                                    ((unsigned long long)rspq->iqe_len & 1ULL) == 0ULL) {
                                                                    int tmp_4;
                                                                    
#line 2251 
                                                                    tmp_4 = ____ilog2_NaN();
                                                                    
#line 2251 
                                                                    tmp_5 = (unsigned int)((unsigned short)tmp_4) + 65532U;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_5 = 65532U;
                                                                    
#line 2251 
                                                                    tmp_6 = tmp_5;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_6 = 65533U;
                                                                    
#line 2251 
                                                                    tmp_7 = tmp_6;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_7 = 65534U;
                                                                    
#line 2251 
                                                                    tmp_8 = tmp_7;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_8 = 65535U;
                                                                    
#line 2251 
                                                                    tmp_9 = tmp_8;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_9 = 0U;
                                                                    
#line 2251 
                                                                    tmp_10 = tmp_9;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_10 = 1U;
                                                                    
#line 2251 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_11 = 2U;
                                                                    
#line 2251 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_12 = 3U;
                                                                    
#line 2251 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_13 = 4U;
                                                                    
#line 2251 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_14 = 5U;
                                                                    
#line 2251 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_15 = 6U;
                                                                    
#line 2251 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_16 = 7U;
                                                                    
#line 2251 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_17 = 8U;
                                                                    
#line 2251 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_18 = 9U;
                                                                    
#line 2251 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_19 = 10U;
                                                                    
#line 2251 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_20 = 11U;
                                                                    
#line 2251 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_21 = 12U;
                                                                    
#line 2251 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_22 = 13U;
                                                                    
#line 2251 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_23 = 14U;
                                                                    
#line 2251 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_24 = 15U;
                                                                    
#line 2251 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_25 = 16U;
                                                                    
#line 2251 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_26 = 17U;
                                                                    
#line 2251 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_27 = 18U;
                                                                    
#line 2251 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_28 = 19U;
                                                                    
#line 2251 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_29 = 20U;
                                                                    
#line 2251 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_30 = 21U;
                                                                    
#line 2251 
                                                                    tmp_31 = tmp_30;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_31 = 22U;
                                                                    
#line 2251 
                                                                    tmp_32 = tmp_31;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_32 = 23U;
                                                                    
#line 2251 
                                                                    tmp_33 = tmp_32;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_33 = 24U;
                                                                    
#line 2251 
                                                                    tmp_34 = tmp_33;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_34 = 25U;
                                                                    
#line 2251 
                                                                    tmp_35 = tmp_34;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_35 = 26U;
                                                                    
#line 2251 
                                                                    tmp_36 = tmp_35;
                                                                    }
                                                                    else 
                                                                    
#line 2251 
                                                                    tmp_36 = 27U;
                                                                    
#line 2251 
                                                                    tmp_37 = tmp_36;
                                                                  }
                                                                  else 
                                                                    
#line 2251 
                                                                    tmp_37 = 28U;
                                                                  
#line 2251 
                                                                  tmp_38 = tmp_37;
                                                                }
                                                                else 
                                                                  
#line 2251 
                                                                  tmp_38 = 29U;
                                                                
#line 2251 
                                                                tmp_39 = tmp_38;
                                                              }
                                                              else 
#line 2251 
                                                                   tmp_39 = 30U;
                                                              
#line 2251 
                                                              tmp_40 = tmp_39;
                                                            }
                                                            else 
#line 2251 
                                                                 tmp_40 = 31U;
                                                            
#line 2251 
                                                            tmp_41 = tmp_40;
                                                          }
                                                          else 
#line 2251 
                                                               tmp_41 = 32U;
                                                          
#line 2251 
                                                          tmp_42 = tmp_41;
                                                        }
                                                        else 
#line 2251 
                                                             tmp_42 = 33U;
                                                        
#line 2251 
                                                        tmp_43 = tmp_42;
                                                      }
                                                      else 
#line 2251 
                                                           tmp_43 = 34U;
                                                      
#line 2251 
                                                      tmp_44 = tmp_43;
                                                    }
                                                    else 
#line 2251 
                                                         tmp_44 = 35U;
                                                    
#line 2251 
                                                    tmp_45 = tmp_44;
                                                  }
                                                  else 
#line 2251 
                                                       tmp_45 = 36U;
                                                  
#line 2251 
                                                  tmp_46 = tmp_45;
                                                }
                                                else 
#line 2251 
                                                     tmp_46 = 37U;
                                                
#line 2251 
                                                tmp_47 = tmp_46;
                                              }
                                              else 
#line 2251 
                                                   tmp_47 = 38U;
                                              
#line 2251 
                                              tmp_48 = tmp_47;
                                            }
                                            else 
#line 2251 
                                                 tmp_48 = 39U;
                                            
#line 2251 
                                            tmp_49 = tmp_48;
                                          }
                                          else 
#line 2251 
                                               tmp_49 = 40U;
                                          
#line 2251 
                                          tmp_50 = tmp_49;
                                        }
                                        else 
#line 2251 
                                             tmp_50 = 41U;
                                        
#line 2251 
                                        tmp_51 = tmp_50;
                                      }
                                      else 
#line 2251 
                                           tmp_51 = 42U;
                                      
#line 2251 
                                      tmp_52 = tmp_51;
                                    }
                                    else 
#line 2251 
                                         tmp_52 = 43U;
                                    
#line 2251 
                                    tmp_53 = tmp_52;
                                  }
                                  else 
#line 2251 
                                       tmp_53 = 44U;
                                  
#line 2251 
                                  tmp_54 = tmp_53;
                                }
                                else 
#line 2251 
                                     tmp_54 = 45U;
                                
#line 2251 
                                tmp_55 = tmp_54;
                              }
                              else 
#line 2251 
                                   tmp_55 = 46U;
                              
#line 2251 
                              tmp_56 = tmp_55;
                            }
                            else 
#line 2251 
                                 tmp_56 = 47U;
                            
#line 2251 
                            tmp_57 = tmp_56;
                          }
                          else 
#line 2251 
                               tmp_57 = 48U;
                          
#line 2251 
                          tmp_58 = tmp_57;
                        }
                        else 
#line 2251 
                             tmp_58 = 49U;
                        
#line 2251 
                        tmp_59 = tmp_58;
                      }
                      else 
#line 2251 
                           tmp_59 = 50U;
                      
#line 2251 
                      tmp_60 = tmp_59;
                    }
                    else 
#line 2251 
                         tmp_60 = 51U;
                    
#line 2251 
                    tmp_61 = tmp_60;
                  }
                  else 
#line 2251 
                       tmp_61 = 52U;
                  
#line 2251 
                  tmp_62 = tmp_61;
                }
                else 
#line 2251 
                     tmp_62 = 53U;
                
#line 2251 
                tmp_63 = tmp_62;
              }
              else 
#line 2251 
                   tmp_63 = 54U;
              
#line 2251 
              tmp_64 = tmp_63;
            }
            else 
#line 2251 
                 tmp_64 = 55U;
            
#line 2251 
            tmp_65 = tmp_64;
          }
          else 
#line 2251 
               tmp_65 = 56U;
          
#line 2251 
          tmp_66 = tmp_65;
        }
        else 
#line 2251 
             tmp_66 = 57U;
        
#line 2251 
        tmp_67 = tmp_66;
      }
      else 
#line 2251 
           tmp_67 = 58U;
      
#line 2251 
      tmp_68 = tmp_67;
    }
    
#line 2251 
    tmp_70 = tmp_68;
  }
  else {
    int tmp_69;
    
#line 2251 
    tmp_69 = __ilog2_u32(rspq->iqe_len);
    
#line 2251 
    tmp_70 = (unsigned int)((unsigned short)tmp_69) + 65532U;
  }
  
#line 2251 
  ;
  
#line 2251 
  tmp_71 = __fswab16((unsigned short)((int)(((unsigned int)(((int)((unsigned short)pi->port_id) << 12U) | ((int)((unsigned short)rspq->pktcnt_idx) << 4U)) | tmp_70) | 16384U)));
  
#line 2250 
  cmd.iqdroprss_to_iqesize = tmp_71;
  
#line 2255 
  if (0 != 0) 
#line 2255 
              cmd.iqsize = (unsigned short)(((int)((unsigned short)rspq->size) << 8) | ((int)((unsigned short)rspq->size) >> 8)); else 
                                                                    
#line 2255 
                                                                    cmd.iqsize = __fswab16((unsigned short)((int)((unsigned short)rspq->size)));
  
#line 2256 
  if (0 != 0) 
#line 2256 
              cmd.iqaddr = (((((((rspq->phys_addr << 56) | ((rspq->phys_addr << 40) & 71776119061217280ULL)) | ((rspq->phys_addr << 24) & 280375465082880ULL)) | ((rspq->phys_addr << 8) & 1095216660480ULL)) | ((rspq->phys_addr >> 8) & 4278190080ULL)) | ((rspq->phys_addr >> 24) & 16711680ULL)) | ((rspq->phys_addr >> 40) & 65280ULL)) | (rspq->phys_addr >> 56); else 
                                                                    
#line 2256 
                                                                    cmd.iqaddr = __fswab64(rspq->phys_addr);
  
#line 2258 
  if (fl != (struct sge_fl *)0) {
    unsigned int tmp_74;
    
#line 2259 
    enum chip_type chip = ((unsigned int)adapter->params.chip >> 4) & 15U;
    
#line 2269 
    if (fl->size < s->fl_starve_thres + 15U) 
#line 2270 
                                             fl->size = s->fl_starve_thres + 15U; else ;
    {
      
#line 2271 
      int const __y_0 = 8;
      
#line 2271 
      tmp_74 = (fl->size + 7U) & 4294967288U;
    }
    
#line 2271 
    fl->size = tmp_74;
    
#line 2272 
    fl->desc = (__be64 *)alloc_ring(adapter->pdev_dev,(unsigned long)fl->size,8UL,16UL,& fl->addr,(void *)(& fl->sdesc),(unsigned long)s->stat_len);
    
#line 2275 
    if (fl->desc == (__be64 *)0ULL) {
      
#line 2276 
      ret = -12;
      
#line 2277 
      goto err;
    }
    else ;
    
#line 2285 
    flsz = (int)(fl->size / 8U + s->stat_len / 64U);
    
#line 2292 
    cmd.iqns_to_fl0congen = 100663296U;
    
#line 2297 
    if (0 != 0) {
      int tmp_77;
      int tmp_78;
      
#line 2298 
      if (chip <= (unsigned int)5) 
#line 2298 
                                   tmp_77 = 48; else 
#line 2298 
                                                     tmp_77 = 32;
      
#line 2298 
      if (chip <= (unsigned int)5) 
#line 2298 
                                   tmp_78 = 48; else 
#line 2298 
                                                     tmp_78 = 32;
      
#line 2297 
      cmd.fl0dcaen_to_fl0cidxfthresh = (unsigned short)((unsigned int)((int)((unsigned short)((int)((unsigned short)(tmp_77 | 256)) << 8)) | ((int)((unsigned short)tmp_78) >> 8)) | 1U);
    }
    else {
      __u16 tmp_80;
      unsigned int tmp_79;
      
#line 2298 
      if (chip <= (unsigned int)5) 
#line 2298 
                                   tmp_79 = 304U; else 
#line 2298 
                                                       tmp_79 = 288U;
      
#line 2298 
      tmp_80 = __fswab16((unsigned short)((int)tmp_79));
      
#line 2297 
      cmd.fl0dcaen_to_fl0cidxfthresh = tmp_80;
    }
    
#line 2303 
    if (0 != 0) 
#line 2303 
                cmd.fl0size = (unsigned short)(((int)((unsigned short)flsz) << 8) | ((int)((unsigned short)flsz) >> 8)); else 
                                                                    
#line 2303 
                                                                    cmd.fl0size = __fswab16((unsigned short)((int)((unsigned short)flsz)));
    
#line 2304 
    if (0 != 0) 
#line 2304 
                cmd.fl0addr = (((((((fl->addr << 56) | ((fl->addr << 40) & 71776119061217280ULL)) | ((fl->addr << 24) & 280375465082880ULL)) | ((fl->addr << 8) & 1095216660480ULL)) | ((fl->addr >> 8) & 4278190080ULL)) | ((fl->addr >> 24) & 16711680ULL)) | ((fl->addr >> 40) & 65280ULL)) | (fl->addr >> 56); else 
                                                                    
#line 2304 
                                                                    cmd.fl0addr = __fswab64(fl->addr);
  }
  else ;
  
#line 2311 
  ret = t4vf_wr_mbox(adapter,(void const *)(& cmd),64,(void *)(& rpl));
  
#line 2312 
  if (ret != 0) 
#line 2313 
                goto err; else ;
  
#line 2315 
  netif_napi_add(dev,& rspq->napi,& napi_rx_handler,64);
  
#line 2316 
  rspq->cur_desc = (__be64 const *)rspq->desc;
  
#line 2317 
  rspq->cidx = 0U;
  
#line 2318 
  rspq->gen = (unsigned char)1U;
  
#line 2319 
  rspq->next_intr_params = rspq->intr_params;
  
#line 2320 
  if (0 != 0) 
#line 2320 
              rspq->cntxt_id = (unsigned short)(((int)rpl.iqid << 8) | ((int)rpl.iqid >> 8)); else 
                                                                    
#line 2320 
                                                                    rspq->cntxt_id = __fswab16((unsigned short)((int)rpl.iqid));
  
#line 2321 
  rspq->bar2_addr = bar2_address(adapter,(unsigned int)rspq->cntxt_id,(enum t4_bar2_qtype)T4_BAR2_QTYPE_INGRESS,& rspq->bar2_qid);
  
#line 2325 
  if (0 != 0) 
#line 2325 
              rspq->abs_id = (unsigned short)(((int)rpl.physiqid << 8) | ((int)rpl.physiqid >> 8)); else 
                                                                    
#line 2325 
                                                                    rspq->abs_id = __fswab16((unsigned short)((int)rpl.physiqid));
  
#line 2326 
  rspq->size -= 1U;
  
#line 2327 
  rspq->adapter = adapter;
  
#line 2328 
  rspq->netdev = dev;
  
#line 2329 
  rspq->handler = hnd;
  
#line 2332 
  if (fl != (struct sge_fl *)0) 
#line 2332 
                                rspq->offset = 0; else 
#line 2332 
                                                       rspq->offset = -1;
  
#line 2334 
  if (fl != (struct sge_fl *)0) {
    int tmp_86;
    unsigned int tmp_87;
    
#line 2335 
    if (0 != 0) 
#line 2335 
                tmp_86 = (int)((unsigned short)(((int)rpl.fl0id << 8) | ((int)rpl.fl0id >> 8)));
    else {
      __u16 tmp_85;
      
#line 2335 
      tmp_85 = __fswab16((unsigned short)((int)rpl.fl0id));
      
#line 2335 
      tmp_86 = (int)tmp_85;
    }
    
#line 2335 
    fl->cntxt_id = (unsigned int)tmp_86;
    
#line 2336 
    fl->avail = 0U;
    
#line 2337 
    fl->pend_cred = 0U;
    
#line 2338 
    fl->pidx = 0U;
    
#line 2339 
    fl->cidx = 0U;
    
#line 2340 
    fl->alloc_failed = 0UL;
    
#line 2341 
    fl->large_alloc_failed = 0UL;
    
#line 2342 
    fl->starving = 0UL;
    
#line 2347 
    fl->bar2_addr = bar2_address(adapter,fl->cntxt_id,(enum t4_bar2_qtype)T4_BAR2_QTYPE_EGRESS,& fl->bar2_qid);
    
#line 2352 
    tmp_87 = fl_cap((struct sge_fl const *)fl);
    
#line 2352 
    ;
    
#line 2352 
    ;
    
#line 2352 
    refill_fl(adapter,fl,(int)tmp_87,208U);
  }
  else ;
  
#line 2355 
  __retres = 0;
  
#line 2355 
  goto return_label;
  err: 
#line 2357 
  ;
  
#line 2362 
  if (rspq->desc != (__be64 *)0ULL) {
    
#line 2363 
    dma_free_attrs(adapter->pdev_dev,(unsigned long)(rspq->size * rspq->iqe_len),(void *)rspq->desc,rspq->phys_addr,(struct dma_attrs *)0);
    
#line 2365 
    rspq->desc = (__be64 *)0ULL;
  }
  else ;
  
#line 2367 
  if (fl != (struct sge_fl *)0 && fl->desc != (__be64 *)0ULL) {
    
#line 2368 
    kfree((void const *)fl->sdesc);
    
#line 2369 
    fl->sdesc = (struct rx_sw_desc *)0;
    
#line 2370 
    dma_free_attrs(adapter->pdev_dev,(unsigned long)(flsz * 64),(void *)fl->desc,fl->addr,(struct dma_attrs *)0);
    
#line 2372 
    fl->desc = (__be64 *)0ULL;
  }
  else ;
  
#line 2374 
  __retres = ret;
  return_label: 
#line 2374 
                return __retres;
}


#line 2385  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
int t4vf_sge_alloc_eth_txq(struct adapter *adapter, struct sge_eth_txq *txq, struct net_device *dev, struct netdev_queue *devq, unsigned int iqid)
{
  int __retres;
  int ret;
  int nentries;
  struct fw_eq_eth_cmd cmd;
  struct fw_eq_eth_cmd rpl;
  
#line 2389 
  struct sge *s = & adapter->sge;
  
#line 2392 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 2398 
  nentries = (int)(txq->q.size + s->stat_len / 64U);
  
#line 2404 
  txq->q.desc = (struct tx_desc *)alloc_ring(adapter->pdev_dev,(unsigned long)txq->q.size,64UL,16UL,& txq->q.phys_addr,(void *)(& txq->q.sdesc),(unsigned long)s->stat_len);
  
#line 2408 
  if (txq->q.desc == (struct tx_desc *)0) {
    
#line 2409 
    __retres = -12;
    
#line 2409 
    goto return_label;
  }
  else ;
  
#line 2418 
  memset((void *)(& cmd),0,48UL);
  
#line 2419 
  cmd.op_to_vfn = 45074U;
  
#line 2423 
  cmd.alloc_to_len16 = 50331792U;
  
#line 2426 
  if (0 != 0) 
#line 2426 
              cmd.viid_pkd = ((((unsigned int)((int)pi->viid << 16) >> 8) & 65280U) | ((unsigned int)((int)pi->viid << 16) >> 24)) | 64U; else 
                                                                    
#line 2426 
                                                                    cmd.viid_pkd = __fswab32((unsigned int)((int)pi->viid << 16) | 1073741824U);
  
#line 2428 
  if (0 != 0) 
#line 2428 
              cmd.fetchszm_to_iqid = ((((((unsigned int)((int)pi->port_id << 16) | iqid) << 24) | ((((unsigned int)((int)pi->port_id << 16) | iqid) << 8) & 16711680U)) | ((((unsigned int)((int)pi->port_id << 16) | iqid) >> 8) & 57088U)) | (((unsigned int)((int)pi->port_id << 16) | iqid) >> 24)) | 8192U; else 
                                                                    
#line 2429 
                                                                    cmd.fetchszm_to_iqid = __fswab32(((unsigned int)((int)pi->port_id << 16) | iqid) | 2097152U);
  
#line 2432 
  if (0 != 0) 
#line 2432 
              cmd.dcaen_to_eqsize = (((((unsigned int)nentries << 24) | (((unsigned int)nentries << 8) & 16711680U)) | (((unsigned int)nentries >> 8) & 51712U)) | ((unsigned int)nentries >> 24)) | 13569U; else 
                                                                    
#line 2433 
                                                                    cmd.dcaen_to_eqsize = __fswab32((unsigned int)(nentries | 20250624));
  
#line 2438 
  if (0 != 0) 
#line 2438 
              cmd.eqaddr = (((((((txq->q.phys_addr << 56) | ((txq->q.phys_addr << 40) & 71776119061217280ULL)) | ((txq->q.phys_addr << 24) & 280375465082880ULL)) | ((txq->q.phys_addr << 8) & 1095216660480ULL)) | ((txq->q.phys_addr >> 8) & 4278190080ULL)) | ((txq->q.phys_addr >> 24) & 16711680ULL)) | ((txq->q.phys_addr >> 40) & 65280ULL)) | (txq->q.phys_addr >> 56); else 
                                                                    
#line 2438 
                                                                    cmd.eqaddr = __fswab64(txq->q.phys_addr);
  
#line 2444 
  ret = t4vf_wr_mbox(adapter,(void const *)(& cmd),48,(void *)(& rpl));
  
#line 2445 
  if (ret != 0) {
    
#line 2450 
    kfree((void const *)txq->q.sdesc);
    
#line 2451 
    txq->q.sdesc = (struct tx_sw_desc *)0;
    
#line 2452 
    dma_free_attrs(adapter->pdev_dev,(unsigned long)nentries * 64UL,(void *)txq->q.desc,txq->q.phys_addr,(struct dma_attrs *)0);
    
#line 2455 
    txq->q.desc = (struct tx_desc *)0;
    
#line 2456 
    __retres = ret;
    
#line 2456 
    goto return_label;
  }
  else ;
  
#line 2459 
  txq->q.in_use = 0U;
  
#line 2460 
  txq->q.cidx = 0U;
  
#line 2461 
  txq->q.pidx = 0U;
  
#line 2462 
  txq->q.stat = (struct sge_qstat *)(txq->q.desc + txq->q.size);
  
#line 2463 
  if (0 != 0) 
#line 2463 
              txq->q.cntxt_id = ((((rpl.eqid_pkd << 24) | ((rpl.eqid_pkd << 8) & 16711680U)) | ((rpl.eqid_pkd >> 8) & 65280U)) | (rpl.eqid_pkd >> 24)) & 1048575U;
  else {
    __u32 tmp_5;
    
#line 2463 
    tmp_5 = __fswab32(rpl.eqid_pkd);
    
#line 2463 
    txq->q.cntxt_id = tmp_5 & 1048575U;
  }
  
#line 2464 
  txq->q.bar2_addr = bar2_address(adapter,txq->q.cntxt_id,(enum t4_bar2_qtype)T4_BAR2_QTYPE_EGRESS,& txq->q.bar2_qid);
  
#line 2468 
  if (0 != 0) 
#line 2468 
              txq->q.abs_id = ((((rpl.physeqid_pkd << 24) | ((rpl.physeqid_pkd << 8) & 16711680U)) | ((rpl.physeqid_pkd >> 8) & 65280U)) | (rpl.physeqid_pkd >> 24)) & 1048575U;
  else {
    __u32 tmp_6;
    
#line 2469 
    tmp_6 = __fswab32(rpl.physeqid_pkd);
    
#line 2468 
    txq->q.abs_id = tmp_6 & 1048575U;
  }
  
#line 2470 
  txq->txq = devq;
  
#line 2471 
  txq->tso = 0UL;
  
#line 2472 
  txq->tx_cso = 0UL;
  
#line 2473 
  txq->vlan_ins = 0UL;
  
#line 2474 
  txq->q.stops = 0UL;
  
#line 2475 
  txq->q.restarts = 0UL;
  
#line 2476 
  txq->mapping_err = 0UL;
  
#line 2477 
  __retres = 0;
  return_label: 
#line 2477 
                return __retres;
}


#line 2483  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
static void free_txq(struct adapter *adapter, struct sge_txq *tq)
{
  
#line 2485 
  struct sge *s = & adapter->sge;
  
#line 2487 
  dma_free_attrs(adapter->pdev_dev,(unsigned long)tq->size * 64UL + (unsigned long)s->stat_len,(void *)tq->desc,tq->phys_addr,(struct dma_attrs *)0);
  
#line 2490 
  tq->cntxt_id = 0U;
  
#line 2491 
  tq->sdesc = (struct tx_sw_desc *)0;
  
#line 2492 
  tq->desc = (struct tx_desc *)0;
  
#line 2493 
  return;
}


#line 2499  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
static void free_rspq_fl(struct adapter *adapter, struct sge_rspq *rspq, struct sge_fl *fl)
{
  unsigned int tmp;
  
#line 2502 
  struct sge *s = & adapter->sge;
  
#line 2503 
  if (fl != (struct sge_fl *)0) 
#line 2503 
                                tmp = fl->cntxt_id; else 
#line 2503 
                                                         tmp = 65535U;
  
#line 2503 
  unsigned int flid = tmp;
  
#line 2505 
  t4vf_iq_free(adapter,0U,(unsigned int)rspq->cntxt_id,flid,65535U);
  
#line 2507 
  dma_free_attrs(adapter->pdev_dev,(unsigned long)((rspq->size + 1U) * rspq->iqe_len),(void *)rspq->desc,rspq->phys_addr,(struct dma_attrs *)0);
  
#line 2509 
  netif_napi_del(& rspq->napi);
  
#line 2510 
  rspq->netdev = (struct net_device *)0;
  
#line 2511 
  rspq->cntxt_id = (unsigned short)0U;
  
#line 2512 
  rspq->abs_id = (unsigned short)0U;
  
#line 2513 
  rspq->desc = (__be64 *)0ULL;
  
#line 2515 
  if (fl != (struct sge_fl *)0) {
    
#line 2516 
    free_rx_bufs(adapter,fl,(int)fl->avail);
    
#line 2517 
    dma_free_attrs(adapter->pdev_dev,(unsigned long)fl->size * 8UL + (unsigned long)s->stat_len,(void *)fl->desc,fl->addr,(struct dma_attrs *)0);
    
#line 2520 
    kfree((void const *)fl->sdesc);
    
#line 2521 
    fl->sdesc = (struct rx_sw_desc *)0;
    
#line 2522 
    fl->cntxt_id = 0U;
    
#line 2523 
    fl->desc = (__be64 *)0ULL;
  }
  else ;
  
#line 2525 
  return;
}


#line 2533  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
void t4vf_free_sge_resources(struct adapter *adapter)
{
  int qs;
  
#line 2535 
  struct sge *s = & adapter->sge;
  
#line 2536 
  struct sge_eth_rxq *rxq = (struct sge_eth_rxq *)(& s->ethrxq);
  
#line 2537 
  struct sge_eth_txq *txq = (struct sge_eth_txq *)(& s->ethtxq);
  
#line 2538 
  struct sge_rspq *evtq = & s->fw_evtq;
  
#line 2539 
  struct sge_rspq *intrq = & s->intrq;
  
#line 2542 
  qs = 0;
  
#line 2542 
  goto ldv_57420;
  ldv_57419: 
#line 2543 
  ;
  
#line 2543 
  if (rxq->rspq.desc != (__be64 *)0ULL) 
#line 2544 
                                        free_rspq_fl(adapter,& rxq->rspq,& rxq->fl); else ;
  
#line 2545 
  if (txq->q.desc != (struct tx_desc *)0) {
    
#line 2546 
    t4vf_eth_eq_free(adapter,txq->q.cntxt_id);
    
#line 2547 
    free_tx_desc(adapter,& txq->q,txq->q.in_use,(_Bool)1);
    
#line 2548 
    kfree((void const *)txq->q.sdesc);
    
#line 2549 
    free_txq(adapter,& txq->q);
  }
  else ;
  
#line 2542 
  qs += 1;
  
#line 2542 
  rxq += 1;
  
#line 2542 
  txq += 1;
  ldv_57420: 
#line 2543 
  ;
  
#line 2542 
  if ((int)adapter->sge.ethqsets > qs) 
#line 2544 
                                       goto ldv_57419; else 
#line 2547 
                                                            goto ldv_57421;
  ldv_57421: 
#line 2548 
  ;
  
#line 2552 
  if (evtq->desc != (__be64 *)0ULL) 
#line 2553 
                                    free_rspq_fl(adapter,evtq,(struct sge_fl *)0); else ;
  
#line 2554 
  if (intrq->desc != (__be64 *)0ULL) 
#line 2555 
                                     free_rspq_fl(adapter,intrq,(struct sge_fl *)0); else ;
  
#line 2556 
  return;
}


#line 2564  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
void t4vf_sge_start(struct adapter *adapter)
{
  
#line 2566 
  adapter->sge.ethtxq_rover = (unsigned short)0U;
  
#line 2567 
  ldv_mod_timer_77(& adapter->sge.rx_timer,jiffies + 125UL);
  
#line 2568 
  ldv_mod_timer_78(& adapter->sge.tx_timer,jiffies + 125UL);
  
#line 2569 
  return;
}


#line 2579  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
void t4vf_sge_stop(struct adapter *adapter)
{
  
#line 2581 
  struct sge *s = & adapter->sge;
  
#line 2583 
  if (s->rx_timer.function != (void (*)(unsigned long ))0) 
#line 2584 
                                                           ldv_del_timer_sync_79(& s->rx_timer); else ;
  
#line 2585 
  if (s->tx_timer.function != (void (*)(unsigned long ))0) 
#line 2586 
                                                           ldv_del_timer_sync_80(& s->tx_timer); else ;
  
#line 2587 
  return;
}


#line 2598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/sge.c"
int t4vf_sge_init(struct adapter *adapter)
{
  int __retres;
  unsigned int ingpadboundary;
  unsigned int ingpackboundary;
  int tmp_67;
  int tmp_70;
  
#line 2600 
  struct sge_params *sge_params = & adapter->params.sge;
  
#line 2601 
  u32 fl0 = sge_params->sge_fl_buffer_size[0];
  
#line 2602 
  u32 fl1 = sge_params->sge_fl_buffer_size[1];
  
#line 2603 
  struct sge *s = & adapter->sge;
  
#line 2611 
  if (fl0 != 4096U || (fl1 != 0U && fl1 <= fl0)) {
    
#line 2612 
    dev_err((struct device const *)adapter->pdev_dev,"bad SGE FL buffer sizes [%d, %d]\n",fl0,fl1);
    
#line 2614 
    __retres = -22;
    
#line 2614 
    goto return_label;
  }
  else ;
  
#line 2616 
  if ((sge_params->sge_control & 262144U) == 0U) {
    
#line 2617 
    dev_err((struct device const *)adapter->pdev_dev,"bad SGE CPL MODE\n");
    
#line 2618 
    __retres = -22;
    
#line 2618 
    goto return_label;
  }
  else ;
  
#line 2624 
  if (fl1 != 0U) {
    int tmp_66;
    
#line 2625 
    if (0 != 0) {
      int tmp_64;
      
#line 2625 
      if (fl1 == 0U) {
        int tmp;
        
#line 2625 
        tmp = ____ilog2_NaN();
        
#line 2625 
        tmp_64 = tmp + -12;
      }
      else {
        int tmp_63;
        
#line 2625 
        if (((unsigned long long)fl1 & 4611686018427387904ULL) == 0ULL) {
          int tmp_62;
          
#line 2625 
          if (((unsigned long long)fl1 & 2305843009213693952ULL) == 0ULL) {
            int tmp_61;
            
#line 2625 
            if (((unsigned long long)fl1 & 1152921504606846976ULL) == 0ULL) {
              int tmp_60;
              
#line 2625 
              if (((unsigned long long)fl1 & 576460752303423488ULL) == 0ULL) {
                int tmp_59;
                
#line 2625 
                if (((unsigned long long)fl1 & 288230376151711744ULL) == 0ULL) {
                  int tmp_58;
                  
#line 2625 
                  if (((unsigned long long)fl1 & 144115188075855872ULL) == 0ULL) {
                    int tmp_57;
                    
#line 2625 
                    if (((unsigned long long)fl1 & 72057594037927936ULL) == 0ULL) {
                      int tmp_56;
                      
#line 2625 
                      if (((unsigned long long)fl1 & 36028797018963968ULL) == 0ULL) {
                        int tmp_55;
                        
#line 2625 
                        if (((unsigned long long)fl1 & 18014398509481984ULL) == 0ULL) {
                          int tmp_54;
                          
#line 2625 
                          if (((unsigned long long)fl1 & 9007199254740992ULL) == 0ULL) {
                            int tmp_53;
                            
#line 2625 
                            if (((unsigned long long)fl1 & 4503599627370496ULL) == 0ULL) {
                              int tmp_52;
                              
#line 2625 
                              if (((unsigned long long)fl1 & 2251799813685248ULL) == 0ULL) {
                                int tmp_51;
                                
#line 2625 
                                if (((unsigned long long)fl1 & 1125899906842624ULL) == 0ULL) {
                                  int tmp_50;
                                  
#line 2625 
                                  if (((unsigned long long)fl1 & 562949953421312ULL) == 0ULL) {
                                    int tmp_49;
                                    
#line 2625 
                                    if (((unsigned long long)fl1 & 281474976710656ULL) == 0ULL) {
                                      int tmp_48;
                                      
#line 2625 
                                      if (((unsigned long long)fl1 & 140737488355328ULL) == 0ULL) {
                                        int tmp_47;
                                        
#line 2625 
                                        if (((unsigned long long)fl1 & 70368744177664ULL) == 0ULL) {
                                          int tmp_46;
                                          
#line 2625 
                                          if (((unsigned long long)fl1 & 35184372088832ULL) == 0ULL) {
                                            int tmp_45;
                                            
#line 2625 
                                            if (((unsigned long long)fl1 & 17592186044416ULL) == 0ULL) {
                                              int tmp_44;
                                              
#line 2625 
                                              if (((unsigned long long)fl1 & 8796093022208ULL) == 0ULL) {
                                                int tmp_43;
                                                
#line 2625 
                                                if (((unsigned long long)fl1 & 4398046511104ULL) == 0ULL) {
                                                  int tmp_42;
                                                  
#line 2625 
                                                  if (((unsigned long long)fl1 & 2199023255552ULL) == 0ULL) {
                                                    int tmp_41;
                                                    
#line 2625 
                                                    if (((unsigned long long)fl1 & 1099511627776ULL) == 0ULL) {
                                                      int tmp_40;
                                                      
#line 2625 
                                                      if (((unsigned long long)fl1 & 549755813888ULL) == 0ULL) {
                                                        int tmp_39;
                                                        
#line 2625 
                                                        if (((unsigned long long)fl1 & 274877906944ULL) == 0ULL) {
                                                          int tmp_38;
                                                          
#line 2625 
                                                          if (((unsigned long long)fl1 & 137438953472ULL) == 0ULL) {
                                                            int tmp_37;
                                                            
#line 2625 
                                                            if (((unsigned long long)fl1 & 68719476736ULL) == 0ULL) {
                                                              int tmp_36;
                                                              
#line 2625 
                                                              if (((unsigned long long)fl1 & 34359738368ULL) == 0ULL) {
                                                                int tmp_35;
                                                                
#line 2625 
                                                                if (((unsigned long long)fl1 & 17179869184ULL) == 0ULL) {
                                                                  int tmp_34;
                                                                  
#line 2625 
                                                                  if (
                                                                    ((unsigned long long)fl1 & 8589934592ULL) == 0ULL) {
                                                                    int tmp_33;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 4294967296ULL) == 0ULL) {
                                                                    int tmp_32;
                                                                    
#line 2625 
                                                                    if (
                                                                    fl1 >= (u32)0) {
                                                                    int tmp_31;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 1073741824ULL) == 0ULL) {
                                                                    int tmp_30;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 536870912ULL) == 0ULL) {
                                                                    int tmp_29;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 268435456ULL) == 0ULL) {
                                                                    int tmp_28;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 134217728ULL) == 0ULL) {
                                                                    int tmp_27;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 67108864ULL) == 0ULL) {
                                                                    int tmp_26;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 33554432ULL) == 0ULL) {
                                                                    int tmp_25;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 16777216ULL) == 0ULL) {
                                                                    int tmp_24;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 8388608ULL) == 0ULL) {
                                                                    int tmp_23;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 4194304ULL) == 0ULL) {
                                                                    int tmp_22;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 2097152ULL) == 0ULL) {
                                                                    int tmp_21;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 1048576ULL) == 0ULL) {
                                                                    int tmp_20;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 524288ULL) == 0ULL) {
                                                                    int tmp_19;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 262144ULL) == 0ULL) {
                                                                    int tmp_18;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 131072ULL) == 0ULL) {
                                                                    int tmp_17;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 65536ULL) == 0ULL) {
                                                                    int tmp_16;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 32768ULL) == 0ULL) {
                                                                    int tmp_15;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 16384ULL) == 0ULL) {
                                                                    int tmp_14;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 8192ULL) == 0ULL) {
                                                                    int tmp_13;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 4096ULL) == 0ULL) {
                                                                    int tmp_12;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 2048ULL) == 0ULL) {
                                                                    int tmp_11;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 1024ULL) == 0ULL) {
                                                                    int tmp_10;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 512ULL) == 0ULL) {
                                                                    int tmp_9;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 256ULL) == 0ULL) {
                                                                    int tmp_8;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 128ULL) == 0ULL) {
                                                                    int tmp_7;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 64ULL) == 0ULL) {
                                                                    int tmp_6;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 32ULL) == 0ULL) {
                                                                    int tmp_5;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 16ULL) == 0ULL) {
                                                                    int tmp_4;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 8ULL) == 0ULL) {
                                                                    int tmp_3;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 4ULL) == 0ULL) {
                                                                    int tmp_2;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 2ULL) == 0ULL) {
                                                                    int tmp_1;
                                                                    
#line 2625 
                                                                    if (
                                                                    ((unsigned long long)fl1 & 1ULL) == 0ULL) {
                                                                    int tmp_0;
                                                                    
#line 2625 
                                                                    tmp_0 = ____ilog2_NaN();
                                                                    
#line 2625 
                                                                    tmp_1 = tmp_0 + -12;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_1 = -12;
                                                                    
#line 2625 
                                                                    tmp_2 = tmp_1;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_2 = -11;
                                                                    
#line 2625 
                                                                    tmp_3 = tmp_2;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_3 = -10;
                                                                    
#line 2625 
                                                                    tmp_4 = tmp_3;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_4 = -9;
                                                                    
#line 2625 
                                                                    tmp_5 = tmp_4;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_5 = -8;
                                                                    
#line 2625 
                                                                    tmp_6 = tmp_5;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_6 = -7;
                                                                    
#line 2625 
                                                                    tmp_7 = tmp_6;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_7 = -6;
                                                                    
#line 2625 
                                                                    tmp_8 = tmp_7;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_8 = -5;
                                                                    
#line 2625 
                                                                    tmp_9 = tmp_8;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_9 = -4;
                                                                    
#line 2625 
                                                                    tmp_10 = tmp_9;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_10 = -3;
                                                                    
#line 2625 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_11 = -2;
                                                                    
#line 2625 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_12 = -1;
                                                                    
#line 2625 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_13 = 0;
                                                                    
#line 2625 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_14 = 1;
                                                                    
#line 2625 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_15 = 2;
                                                                    
#line 2625 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_16 = 3;
                                                                    
#line 2625 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_17 = 4;
                                                                    
#line 2625 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_18 = 5;
                                                                    
#line 2625 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_19 = 6;
                                                                    
#line 2625 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_20 = 7;
                                                                    
#line 2625 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_21 = 8;
                                                                    
#line 2625 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_22 = 9;
                                                                    
#line 2625 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_23 = 10;
                                                                    
#line 2625 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_24 = 11;
                                                                    
#line 2625 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_25 = 12;
                                                                    
#line 2625 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_26 = 13;
                                                                    
#line 2625 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_27 = 14;
                                                                    
#line 2625 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_28 = 15;
                                                                    
#line 2625 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_29 = 16;
                                                                    
#line 2625 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_30 = 17;
                                                                    
#line 2625 
                                                                    tmp_31 = tmp_30;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_31 = 18;
                                                                    
#line 2625 
                                                                    tmp_32 = tmp_31;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_32 = 19;
                                                                    
#line 2625 
                                                                    tmp_33 = tmp_32;
                                                                    }
                                                                    else 
                                                                    
#line 2625 
                                                                    tmp_33 = 20;
                                                                    
#line 2625 
                                                                    tmp_34 = tmp_33;
                                                                  }
                                                                  else 
                                                                    
#line 2625 
                                                                    tmp_34 = 21;
                                                                  
#line 2625 
                                                                  tmp_35 = tmp_34;
                                                                }
                                                                else 
                                                                  
#line 2625 
                                                                  tmp_35 = 22;
                                                                
#line 2625 
                                                                tmp_36 = tmp_35;
                                                              }
                                                              else 
#line 2625 
                                                                   tmp_36 = 23;
                                                              
#line 2625 
                                                              tmp_37 = tmp_36;
                                                            }
                                                            else 
#line 2625 
                                                                 tmp_37 = 24;
                                                            
#line 2625 
                                                            tmp_38 = tmp_37;
                                                          }
                                                          else 
#line 2625 
                                                               tmp_38 = 25;
                                                          
#line 2625 
                                                          tmp_39 = tmp_38;
                                                        }
                                                        else 
#line 2625 
                                                             tmp_39 = 26;
                                                        
#line 2625 
                                                        tmp_40 = tmp_39;
                                                      }
                                                      else 
#line 2625 
                                                           tmp_40 = 27;
                                                      
#line 2625 
                                                      tmp_41 = tmp_40;
                                                    }
                                                    else 
#line 2625 
                                                         tmp_41 = 28;
                                                    
#line 2625 
                                                    tmp_42 = tmp_41;
                                                  }
                                                  else 
#line 2625 
                                                       tmp_42 = 29;
                                                  
#line 2625 
                                                  tmp_43 = tmp_42;
                                                }
                                                else 
#line 2625 
                                                     tmp_43 = 30;
                                                
#line 2625 
                                                tmp_44 = tmp_43;
                                              }
                                              else 
#line 2625 
                                                   tmp_44 = 31;
                                              
#line 2625 
                                              tmp_45 = tmp_44;
                                            }
                                            else 
#line 2625 
                                                 tmp_45 = 32;
                                            
#line 2625 
                                            tmp_46 = tmp_45;
                                          }
                                          else 
#line 2625 
                                               tmp_46 = 33;
                                          
#line 2625 
                                          tmp_47 = tmp_46;
                                        }
                                        else 
#line 2625 
                                             tmp_47 = 34;
                                        
#line 2625 
                                        tmp_48 = tmp_47;
                                      }
                                      else 
#line 2625 
                                           tmp_48 = 35;
                                      
#line 2625 
                                      tmp_49 = tmp_48;
                                    }
                                    else 
#line 2625 
                                         tmp_49 = 36;
                                    
#line 2625 
                                    tmp_50 = tmp_49;
                                  }
                                  else 
#line 2625 
                                       tmp_50 = 37;
                                  
#line 2625 
                                  tmp_51 = tmp_50;
                                }
                                else 
#line 2625 
                                     tmp_51 = 38;
                                
#line 2625 
                                tmp_52 = tmp_51;
                              }
                              else 
#line 2625 
                                   tmp_52 = 39;
                              
#line 2625 
                              tmp_53 = tmp_52;
                            }
                            else 
#line 2625 
                                 tmp_53 = 40;
                            
#line 2625 
                            tmp_54 = tmp_53;
                          }
                          else 
#line 2625 
                               tmp_54 = 41;
                          
#line 2625 
                          tmp_55 = tmp_54;
                        }
                        else 
#line 2625 
                             tmp_55 = 42;
                        
#line 2625 
                        tmp_56 = tmp_55;
                      }
                      else 
#line 2625 
                           tmp_56 = 43;
                      
#line 2625 
                      tmp_57 = tmp_56;
                    }
                    else 
#line 2625 
                         tmp_57 = 44;
                    
#line 2625 
                    tmp_58 = tmp_57;
                  }
                  else 
#line 2625 
                       tmp_58 = 45;
                  
#line 2625 
                  tmp_59 = tmp_58;
                }
                else 
#line 2625 
                     tmp_59 = 46;
                
#line 2625 
                tmp_60 = tmp_59;
              }
              else 
#line 2625 
                   tmp_60 = 47;
              
#line 2625 
              tmp_61 = tmp_60;
            }
            else 
#line 2625 
                 tmp_61 = 48;
            
#line 2625 
            tmp_62 = tmp_61;
          }
          else 
#line 2625 
               tmp_62 = 49;
          
#line 2625 
          tmp_63 = tmp_62;
        }
        else 
#line 2625 
             tmp_63 = 50;
        
#line 2625 
        tmp_64 = tmp_63;
      }
      
#line 2625 
      tmp_66 = tmp_64;
    }
    else {
      int tmp_65;
      
#line 2625 
      tmp_65 = __ilog2_u32(fl1);
      
#line 2625 
      tmp_66 = tmp_65 + -12;
    }
    
#line 2625 
    s->fl_pg_order = (unsigned int)tmp_66;
  }
  else ;
  
#line 2627 
  if ((sge_params->sge_control & 131072U) != 0U) 
#line 2627 
                                                 tmp_67 = 128; else 
#line 2627 
                                                                    tmp_67 = 64;
  
#line 2626 
  s->stat_len = (unsigned int)tmp_67;
  
#line 2628 
  s->pktshift = (sge_params->sge_control >> 10) & 7U;
  
#line 2640 
  ingpadboundary = (unsigned int)(1 << (((sge_params->sge_control >> 4) & 7U) + 5U));
  
#line 2642 
  tmp_70 = is_t4(adapter->params.chip);
  
#line 2642 
  if (tmp_70 != 0) 
#line 2643 
                   s->fl_align = ingpadboundary;
  else {
    unsigned int tmp_69;
    
#line 2648 
    ingpackboundary = (sge_params->sge_control2 >> 16) & 7U;
    
#line 2649 
    if (ingpackboundary == 0U) 
#line 2650 
                               ingpackboundary = 16U; else 
#line 2652 
                                                           ingpackboundary = (unsigned int)(1 << (ingpackboundary + 5U));
    {
      unsigned int tmp_68;
      
#line 2655 
      unsigned int _max1 = ingpadboundary;
      
#line 2655 
      unsigned int _max2 = ingpackboundary;
      
#line 2655 
      if (_max1 > _max2) 
#line 2655 
                         tmp_68 = _max1; else 
#line 2655 
                                              tmp_68 = _max2;
      
#line 2655 
      tmp_69 = tmp_68;
    }
    
#line 2655 
    s->fl_align = tmp_69;
  }
  
#line 2666 
  s->fl_starve_thres = ((sge_params->sge_congestion_control >> 8) & 63U) * 2U + 1U;
  {
    struct lock_class_key __key;
    
#line 2671 
    init_timer_key(& s->rx_timer,0U,"((&s->rx_timer))",& __key);
  }
  
#line 2671 
  s->rx_timer.function = & sge_rx_timer_cb;
  
#line 2671 
  s->rx_timer.data = (unsigned long)adapter;
  {
    struct lock_class_key __key_0;
    
#line 2672 
    init_timer_key(& s->tx_timer,0U,"((&s->tx_timer))",& __key_0);
  }
  
#line 2672 
  s->tx_timer.function = & sge_tx_timer_cb;
  
#line 2672 
  s->tx_timer.data = (unsigned long)adapter;
  
#line 2677 
  spinlock_check(& s->intrq_lock);
  {
    struct lock_class_key __key_1;
    
#line 2677 
    __raw_spin_lock_init(& s->intrq_lock.__anonCompField_spinlock_18.rlock,"&(&s->intrq_lock)->rlock",& __key_1);
  }
  
#line 2679 
  __retres = 0;
  return_label: 
#line 2679 
                return __retres;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1);


#line 62 
int ldv_emg_del_timer_sync(struct timer_list *arg0);


#line 122  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void atomic_inc(atomic_t *v)
{
  
#line 125 
  ldv_atomic_inc(v);
  
#line 126 
  return;
}


#line 415  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 418 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 418 
  return tmp;
}


#line 626  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static int ldv_spin_trylock_62(spinlock_t *lock)
{
  int __retres;
  
#line 630 
  ldv_func_ret_type ldv_func_res = spin_trylock(lock);
  
#line 632 
  int is_spin_held_by_another_thread = ldv_undef_int();
  
#line 634 
  if (is_spin_held_by_another_thread != 0) {
    
#line 637 
    __retres = 0;
    
#line 637 
    goto return_label;
  }
  else {
    
#line 640 
    ldv_spin_model_lock((char *)"_xmit_lock_of_netdev_queue");
    
#line 642 
    __retres = 1;
    
#line 642 
    goto return_label;
  }
  
#line 645 
  __retres = ldv_func_res;
  return_label: 
#line 645 
                return __retres;
}


#line 649  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_63(spinlock_t *lock)
{
  
#line 653 
  ldv_spin_model_unlock((char *)"_xmit_lock_of_netdev_queue");
  
#line 655 
  spin_unlock(lock);
  
#line 656 
  return;
}


#line 749  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_lock_73(spinlock_t *lock)
{
  
#line 753 
  ldv_spin_model_lock((char *)"intrq_lock_of_sge");
  
#line 755 
  spin_lock(lock);
  
#line 756 
  return;
}


#line 759  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_74(spinlock_t *lock)
{
  
#line 763 
  ldv_spin_model_unlock((char *)"intrq_lock_of_sge");
  
#line 765 
  spin_unlock(lock);
  
#line 766 
  return;
}


#line 769  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static int ldv_mod_timer_75(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 773 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 773 
  return tmp;
}


#line 777  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static int ldv_mod_timer_76(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 781 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 781 
  return tmp;
}


#line 785  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static int ldv_mod_timer_77(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 789 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 789 
  return tmp;
}


#line 793  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static int ldv_mod_timer_78(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 797 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 797 
  return tmp;
}


#line 801  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static int ldv_del_timer_sync_79(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 805 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 805 
  return tmp;
}


#line 809  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static int ldv_del_timer_sync_80(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 813 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 813 
  return tmp;
}


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile *addr)
{
  unsigned int ret;
  
#line 59 
  ldv_inline_asm();
  
#line 58 
  return ret;
}


#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned long readq(void const volatile *addr)
{
  unsigned long ret;
  
#line 91 
  ldv_inline_asm();
  
#line 90 
  return ret;
}


#line 1085  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
void dev_warn(struct device const *, char const * , ...);


#line 5  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __bad_udelay(void);


#line 8 
void __udelay(unsigned long);


#line 10 
void __const_udelay(unsigned long);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void msleep(unsigned int);


#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/adapter.h"
__inline static u32 t4_read_reg(struct adapter *adapter, u32 reg_addr)
{
  u32 tmp;
  
#line 407 
  tmp = readl((void const volatile *)(adapter->regs + reg_addr));
  
#line 407 
  return tmp;
}


#line 443  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/adapter.h"
__inline static u64 t4_read_reg64(struct adapter *adapter, u32 reg_addr)
{
  u64 tmp;
  
#line 445 
  tmp = (u64)readq((void const volatile *)(adapter->regs + reg_addr));
  
#line 445 
  return tmp;
}


#line 456  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/adapter.h"
__inline static void t4_write_reg64(struct adapter *adapter, u32 reg_addr, u64 val)
{
  
#line 459 
  writeq((unsigned long)val,(void volatile *)(adapter->regs + reg_addr));
  
#line 460 
  return;
}


#line 483  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/adapter.h"
__inline static void t4_os_set_hw_addr(struct adapter *adapter, int pidx, u8 *hw_addr)
{
  
#line 486 
  memcpy((void *)(adapter->port[pidx])->dev_addr,(void const *)hw_addr,6UL);
  
#line 487 
  return;
}


#line 507  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/adapter.h"
__inline static struct port_info *adap2pinfo(struct adapter *adapter, int pidx)
{
  struct port_info *tmp;
  
#line 509 
  tmp = (struct port_info *)netdev_priv((struct net_device const *)adapter->port[pidx]);
  
#line 509 
  return tmp;
}


#line 527 
void t4vf_os_link_changed(struct adapter *adapter, int pidx, int link_ok);


#line 528 
void t4vf_os_portmod_changed(struct adapter *adapter, int pidx);


#line 275  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_common.h"
__inline static int t4vf_wr_mbox_ns(struct adapter *adapter, void const *cmd, int size, void *rpl)
{
  int tmp;
  
#line 278 
  tmp = t4vf_wr_mbox_core(adapter,cmd,size,rpl,(_Bool)0);
  
#line 278 
  return tmp;
}


#line 288 
int t4vf_wait_dev_ready(struct adapter *adapter);


#line 289 
int t4vf_port_init(struct adapter *adapter, int pidx);


#line 291 
int t4vf_fw_reset(struct adapter *adapter);


#line 292 
int t4vf_set_params(struct adapter *adapter, unsigned int nparams, u32 const *params, u32 const *vals);


#line 301 
int t4vf_get_sge_params(struct adapter *adapter);


#line 302 
int t4vf_get_vpd_params(struct adapter *adapter);


#line 303 
int t4vf_get_dev_params(struct adapter *adapter);


#line 304 
int t4vf_get_rss_glb_config(struct adapter *adapter);


#line 305 
int t4vf_get_vfres(struct adapter *adapter);


#line 307 
int t4vf_read_rss_vi_config(struct adapter *adapter, unsigned int viid, union rss_vi_config *config);


#line 309 
int t4vf_write_rss_vi_config(struct adapter *adapter, unsigned int viid, union rss_vi_config *config);


#line 311 
int t4vf_config_rss_range(struct adapter *adapter, unsigned int viid, int start, int n, u16 const *rspq, int nrspq);


#line 314 
int t4vf_alloc_vi(struct adapter *adapter, int port_id);


#line 315 
int t4vf_free_vi(struct adapter *adapter, int viid);


#line 316 
int t4vf_enable_vi(struct adapter *adapter, unsigned int viid, bool rx_en, bool tx_en);


#line 317 
int t4vf_identify_port(struct adapter *adapter, unsigned int viid, unsigned int nblinks);


#line 319 
int t4vf_set_rxmode(struct adapter *adapter, unsigned int viid, int mtu, int promisc, int all_multi, int bcast, int vlanex, bool sleep_ok);


#line 321 
int t4vf_alloc_mac_filt(struct adapter *adapter, unsigned int viid, bool free_0, unsigned int naddr, u8 const **addr, u16 *idx, u64 *hash, bool sleep_ok);


#line 323 
int t4vf_change_mac(struct adapter *adapter, unsigned int viid, int idx, u8 const *addr, bool persist);


#line 324 
int t4vf_set_addr_hash(struct adapter *adapter, unsigned int viid, bool ucast, u64 vec, bool sleep_ok);


#line 325 
int t4vf_get_port_stats(struct adapter *adapter, int pidx, struct t4vf_port_stats *s);


#line 331 
int t4vf_handle_fw_rpl(struct adapter *adapter, __be64 const *rpl);


#line 332 
int t4vf_prep_adapter(struct adapter *adapter);


#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_wait_dev_ready(struct adapter *adapter)
{
  int __retres;
  u32 val;
  
#line 52 
  u32 const whoami = 512U;
  
#line 53 
  u32 const notready1 = 4294967295U;
  
#line 54 
  u32 const notready2 = 4008636142U;
  
#line 57 
  val = t4_read_reg(adapter,whoami);
  
#line 58 
  if (val != 4294967295U && val != 4008636142U) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 60 
  msleep(500U);
  
#line 61 
  val = t4_read_reg(adapter,whoami);
  
#line 62 
  if (val != 4294967295U && val != 4008636142U) {
    
#line 63 
    __retres = 0;
    
#line 63 
    goto return_label;
  }
  else {
    
#line 65 
    __retres = -5;
    
#line 65 
    goto return_label;
  }
  return_label: 
#line 62 
                return __retres;
}


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
static void get_mbox_rpl(struct adapter *adapter, __be64 *rpl, int size, u32 mbox_data)
{
  __be64 *tmp;
  __u64 tmp_1;
  u64 tmp_0;
  
#line 75 
  goto ldv_46830;
  ldv_46829: 
#line 76 
  ;
  
#line 76 
  tmp = rpl;
  
#line 76 
  rpl += 1;
  
#line 76 
  tmp_0 = t4_read_reg64(adapter,mbox_data);
  
#line 76 
  tmp_1 = __fswab64(tmp_0);
  
#line 76 
  *tmp = tmp_1;
  
#line 75 
  size += -8;
  
#line 75 
  mbox_data += 8U;
  ldv_46830: 
#line 76 
  ;
  
#line 75 
  if (size != 0) 
#line 77 
                 goto ldv_46829; else 
#line 80 
                                      goto ldv_46831;
  ldv_46831: 
#line 81 
  ;
  
#line 82 
  return;
}


#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
static void dump_mbox(struct adapter *adapter, char const *tag, u32 mbox_data)
{
  u64 tmp;
  u64 tmp_0;
  u64 tmp_1;
  u64 tmp_2;
  u64 tmp_3;
  u64 tmp_4;
  u64 tmp_5;
  u64 tmp_6;
  
#line 93 
  tmp = t4_read_reg64(adapter,mbox_data + 56U);
  
#line 92 
  tmp_0 = t4_read_reg64(adapter,mbox_data + 48U);
  
#line 91 
  tmp_1 = t4_read_reg64(adapter,mbox_data + 40U);
  
#line 90 
  tmp_2 = t4_read_reg64(adapter,mbox_data + 32U);
  
#line 89 
  tmp_3 = t4_read_reg64(adapter,mbox_data + 24U);
  
#line 88 
  tmp_4 = t4_read_reg64(adapter,mbox_data + 16U);
  
#line 87 
  tmp_5 = t4_read_reg64(adapter,mbox_data + 8U);
  
#line 86 
  tmp_6 = t4_read_reg64(adapter,mbox_data);
  
#line 84 
  ;
  
#line 84 
  ;
  
#line 84 
  dev_err((struct device const *)adapter->pdev_dev,"mbox %s: %llx %llx %llx %llx %llx %llx %llx %llx\n",tag,tmp_6,tmp_5,tmp_4,tmp_3,tmp_2,tmp_1,tmp_0,tmp);
  
#line 94 
  return;
}


#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_wr_mbox_core(struct adapter *adapter, void const *cmd, int size, void *rpl, bool sleep_ok)
{
  int __retres;
  u32 v;
  int i;
  int ms;
  int delay_idx;
  __be64 const *p;
  u32 tmp;
  u32 tmp_0;
  __u64 tmp_3;
  __be64 const *tmp_2;
  
#line 119 
  int const delay[9U] = {1, 1, 3, 5, 10, 10, 20, 50, 100};
  
#line 126 
  u32 mbox_data = 576U;
  
#line 127 
  u32 mbox_ctl = 768U;
  
#line 133 
  if (((unsigned int)size & 15U) != 0U || size > 64) {
    
#line 135 
    __retres = -22;
    
#line 135 
    goto return_label;
  }
  else ;
  
#line 141 
  tmp = t4_read_reg(adapter,mbox_ctl);
  
#line 141 
  v = tmp & 3U;
  
#line 142 
  i = 0;
  
#line 142 
  goto ldv_46853;
  ldv_46852: 
#line 143 
  ;
  
#line 143 
  tmp_0 = t4_read_reg(adapter,mbox_ctl);
  
#line 143 
  v = tmp_0 & 3U;
  
#line 142 
  i += 1;
  ldv_46853: 
#line 143 
  ;
  
#line 142 
  if (v == 0U && i <= 2) 
#line 144 
                         goto ldv_46852; else 
#line 147 
                                              goto ldv_46854;
  ldv_46854: 
#line 148 
  ;
  
#line 144 
  if (v != 2U) {
    int tmp_1;
    
#line 145 
    if (v == 1U) 
#line 145 
                 tmp_1 = -16; else 
#line 145 
                                   tmp_1 = -110;
    
#line 145 
    __retres = tmp_1;
    
#line 145 
    goto return_label;
  }
  else ;
  
#line 160 
  i = 0;
  
#line 160 
  p = (__be64 const *)cmd;
  
#line 160 
  goto ldv_46856;
  ldv_46855: 
#line 161 
  ;
  
#line 161 
  tmp_2 = p;
  
#line 161 
  p += 1;
  
#line 161 
  ;
  
#line 161 
  tmp_3 = __fswab64(*tmp_2);
  
#line 161 
  ;
  
#line 161 
  ;
  
#line 161 
  t4_write_reg64(adapter,mbox_data + (unsigned int)i,tmp_3);
  
#line 160 
  i += 8;
  ldv_46856: 
#line 161 
  ;
  
#line 160 
  if (i < size) 
#line 162 
                goto ldv_46855; else 
#line 165 
                                     goto ldv_46857;
  ldv_46857: 
#line 166 
  ;
  
#line 162 
  t4_read_reg(adapter,mbox_data);
  
#line 164 
  t4_write_reg(adapter,mbox_ctl,9U);
  
#line 166 
  t4_read_reg(adapter,mbox_ctl);
  
#line 171 
  delay_idx = 0;
  
#line 172 
  ms = delay[0];
  
#line 174 
  i = 0;
  
#line 174 
  goto ldv_46871;
  ldv_46870: 
#line 175 
  ;
  
#line 175 
  if ((int)sleep_ok != 0) {
    
#line 176 
    ms = delay[delay_idx];
    
#line 177 
    if ((unsigned int)delay_idx <= 7U) 
#line 178 
                                       delay_idx += 1; else ;
    
#line 179 
    msleep((unsigned int)ms);
  }
  else 
    
#line 181 
    if (0 != 0 && ms <= 5) 
      
#line 181 
      if (0 != 0) 
        
#line 181 
        if (ms * 1000 > 19999) 
#line 181 
                               __bad_udelay(); else 
#line 181 
                                                    __const_udelay((unsigned long)ms * 4295000UL);
      else 
#line 181 
           __udelay((unsigned long)(ms * 1000));
    else {
      
#line 181 
      unsigned long __ms = (unsigned long)ms;
      {
        unsigned long tmp_4;
        
#line 181 
        goto ldv_46863;
        ldv_46862: 
#line 182 
        ;
        
#line 181 
        __const_udelay(4295000UL);
        ldv_46863: 
#line 183 
        ;
        
#line 181 
        tmp_4 = __ms;
        
#line 181 
        __ms -= 1UL;
        
#line 181 
        ;
        
#line 181 
        if (tmp_4 != 0UL) 
#line 183 
                          goto ldv_46862; else 
#line 186 
                                               goto ldv_46864;
        ldv_46864: 
#line 187 
        ;
      }
    }
  
#line 186 
  v = t4_read_reg(adapter,mbox_ctl);
  
#line 187 
  if ((v & 3U) == 2U) {
    
#line 192 
    if ((v & 8U) == 0U) {
      
#line 193 
      t4_write_reg(adapter,mbox_ctl,0U);
      
#line 195 
      goto ldv_46865;
    }
    else ;
    
#line 207 
    v = t4_read_reg(adapter,mbox_data);
    
#line 208 
    if (((v >> 8) & 255U) != 0U) 
#line 209 
                                 dump_mbox(adapter,"FW Error",mbox_data); else ;
    
#line 211 
    if (rpl != (void *)0) {
      {
        int tmp_6;
        
#line 213 
        if (0 != 0) 
#line 213 
                    tmp_6 = (((((*((__be32 const *)cmd) << 24) | ((*((__be32 const *)cmd) << 8) & 16711680U)) | ((*((__be32 const *)cmd) >> 8) & 65280U)) | (*((__be32 const *)cmd) >> 24)) & 8388608U) == 0U;
        else {
          __u32 tmp_5;
          
#line 213 
          tmp_5 = __fswab32(*((__be32 const *)cmd));
          
#line 213 
          tmp_6 = (tmp_5 & 8388608U) == 0U;
        }
        
#line 213 
        int __ret_warn_on = tmp_6;
        
#line 213 
        if ((long)(__ret_warn_on != 0) != 0L) 
#line 213 
                                              warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c",214); else ;
        
#line 213 
        long tmp_7 = (long)(__ret_warn_on != 0);
      }
      
#line 215 
      get_mbox_rpl(adapter,(__be64 *)rpl,size,mbox_data);
      {
        int tmp_8;
        
#line 216 
        if (0 != 0) 
#line 216 
                    tmp_8 = (((((*((__be32 *)rpl) << 24) | ((*((__be32 *)rpl) << 8) & 16711680U)) | ((*((__be32 *)rpl) >> 8) & 65280U)) | (*((__be32 *)rpl) >> 24)) & 8388608U) != 0U;
        else {
          __u32 tmp_7_0;
          
#line 216 
          tmp_7_0 = __fswab32(*((__be32 *)rpl));
          
#line 216 
          tmp_8 = (tmp_7_0 & 8388608U) != 0U;
        }
        
#line 216 
        int __ret_warn_on_0 = tmp_8;
        
#line 216 
        if ((long)(__ret_warn_on_0 != 0) != 0L) 
#line 216 
                                                warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c",217); else ;
        
#line 216 
        long tmp_9 = (long)(__ret_warn_on_0 != 0);
      }
    }
    else ;
    
#line 219 
    t4_write_reg(adapter,mbox_ctl,0U);
    
#line 221 
    __retres = (int)(- ((v >> 8) & 255U));
    
#line 221 
    goto return_label;
  }
  else ;
  ldv_46865: 
#line 223 
  ;
  
#line 174 
  i += ms;
  ldv_46871: 
#line 175 
  ;
  
#line 174 
  if (i <= 9999) 
#line 176 
                 goto ldv_46870; else 
#line 179 
                                      goto ldv_46872;
  ldv_46872: 
#line 180 
  ;
  
#line 228 
  dump_mbox(adapter,"FW Timeout",mbox_data);
  
#line 229 
  __retres = -110;
  return_label: 
#line 229 
                return __retres;
}


#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
static int hash_mac_addr(u8 const *addr)
{
  int __retres;
  
#line 241 
  u32 a = (((unsigned int)*addr << 16) | ((unsigned int)*(addr + 1U) << 8)) | (unsigned int)*(addr + 2U);
  
#line 242 
  u32 b = (((unsigned int)*(addr + 3U) << 16) | ((unsigned int)*(addr + 4U) << 8)) | (unsigned int)*(addr + 5U);
  
#line 243 
  a ^= b;
  
#line 244 
  a = (a >> 12) ^ a;
  
#line 245 
  a = (a >> 6) ^ a;
  
#line 246 
  __retres = (int)a & 63;
  
#line 246 
  return __retres;
}


#line 261  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
static void init_link_config(struct link_config *lc, unsigned int caps)
{
  unsigned char tmp;
  
#line 263 
  lc->supported = caps;
  
#line 264 
  lc->requested_speed = (unsigned short)0U;
  
#line 265 
  lc->speed = (unsigned short)0U;
  
#line 266 
  tmp = (unsigned char)3U;
  
#line 266 
  lc->fc = tmp;
  
#line 266 
  lc->requested_fc = tmp;
  
#line 267 
  if ((lc->supported & 256U) != 0U) {
    
#line 268 
    lc->advertising = lc->supported & 315U;
    
#line 269 
    lc->autoneg = (unsigned char)1U;
    
#line 270 
    lc->requested_fc = (unsigned char)((unsigned int)lc->requested_fc | 4U);
  }
  else {
    
#line 272 
    lc->advertising = 0U;
    
#line 273 
    lc->autoneg = (unsigned char)0U;
  }
  
#line 275 
  return;
}


#line 282  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_port_init(struct adapter *adapter, int pidx)
{
  int __retres;
  struct fw_vi_cmd vi_cmd;
  struct fw_vi_cmd vi_rpl;
  struct fw_port_cmd port_cmd;
  struct fw_port_cmd port_rpl;
  int v;
  unsigned int tmp_4;
  int tmp_6;
  
#line 284 
  struct port_info *pi = adap2pinfo(adapter,pidx);
  
#line 293 
  memset((void *)(& vi_cmd),0,64UL);
  
#line 294 
  vi_cmd.op_to_vfn = 49172U;
  
#line 297 
  vi_cmd.alloc_to_len16 = 67108864U;
  
#line 298 
  if (0 != 0) 
#line 298 
              vi_cmd.type_viid = (unsigned short)(((int)pi->viid << 8) | ((int)pi->viid >> 8)); else 
                                                                    
#line 298 
                                                                    vi_cmd.type_viid = __fswab16((unsigned short)((int)pi->viid));
  
#line 299 
  v = t4vf_wr_mbox(adapter,(void const *)(& vi_cmd),64,(void *)(& vi_rpl));
  
#line 300 
  if (v != 0) {
    
#line 301 
    __retres = v;
    
#line 301 
    goto return_label;
  }
  else ;
  
#line 303 
  if ((long)((int)pi->port_id != (((int)vi_rpl.portid_pkd >> 4) & 15)) != 0L) {
    
#line 305 
    ldv_inline_asm();
    
#line 303 
    ;
  }
  else ;
  
#line 304 
  if (0 != 0) 
#line 304 
              pi->rss_size = (unsigned short)((unsigned int)((unsigned short)(((int)vi_rpl.rsssize_pkd << 8) | ((int)vi_rpl.rsssize_pkd >> 8))) & 2047U);
  else {
    __u16 tmp_1;
    
#line 304 
    tmp_1 = __fswab16((unsigned short)((int)vi_rpl.rsssize_pkd));
    
#line 304 
    pi->rss_size = (unsigned short)((unsigned int)tmp_1 & 2047U);
  }
  
#line 305 
  t4_os_set_hw_addr(adapter,pidx,(u8 *)(& vi_rpl.mac));
  
#line 311 
  if ((adapter->params.vfres.r_caps & 4U) == 0U) {
    
#line 312 
    __retres = 0;
    
#line 312 
    goto return_label;
  }
  else ;
  
#line 314 
  memset((void *)(& port_cmd),0,32UL);
  
#line 315 
  if (0 != 0) 
#line 315 
              port_cmd.op_to_portid = (((unsigned int)pi->port_id << 24) | (((unsigned int)pi->port_id << 8) & 16711680U)) | 49179U; else 
                                                                    
#line 315 
                                                                    port_cmd.op_to_portid = __fswab32((unsigned int)pi->port_id | 465567744U);
  
#line 319 
  port_cmd.action_to_len16 = 33555200U;
  
#line 322 
  v = t4vf_wr_mbox(adapter,(void const *)(& port_cmd),32,(void *)(& port_rpl));
  
#line 323 
  if (v != 0) {
    
#line 324 
    __retres = v;
    
#line 324 
    goto return_label;
  }
  else ;
  
#line 326 
  if (0 != 0) 
#line 326 
              tmp_4 = (((port_rpl.u.info.lstatus_to_modtype << 24) | ((port_rpl.u.info.lstatus_to_modtype << 8) & 16711680U)) | ((port_rpl.u.info.lstatus_to_modtype >> 8) & 65280U)) | (port_rpl.u.info.lstatus_to_modtype >> 24); else 
                                                                    
#line 326 
                                                                    tmp_4 = __fswab32(port_rpl.u.info.lstatus_to_modtype);
  
#line 326 
  v = (int)tmp_4;
  
#line 327 
  if (((unsigned int)v & 2097152U) != 0U) 
#line 327 
                                          pi->mdio_addr = (signed char)((int)((signed char)(v >> 16)) & 31); else 
                                                                    
#line 327 
                                                                    pi->mdio_addr = (signed char)(-1);
  
#line 329 
  pi->port_type = (unsigned char)((unsigned int)((unsigned char)(v >> 8)) & 31U);
  
#line 330 
  pi->mod_type = (unsigned char)0U;
  
#line 332 
  if (0 != 0) 
#line 332 
              tmp_6 = (int)((unsigned short)(((int)port_rpl.u.info.pcap << 8) | ((int)port_rpl.u.info.pcap >> 8)));
  else {
    __u16 tmp_5;
    
#line 332 
    tmp_5 = __fswab16((unsigned short)((int)port_rpl.u.info.pcap));
    
#line 332 
    tmp_6 = (int)tmp_5;
  }
  
#line 332 
  ;
  
#line 332 
  init_link_config(& pi->link_cfg,(unsigned int)tmp_6);
  
#line 334 
  __retres = 0;
  return_label: 
#line 334 
                return __retres;
}


#line 345  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_fw_reset(struct adapter *adapter)
{
  struct fw_reset_cmd cmd;
  int tmp;
  
#line 349 
  memset((void *)(& cmd),0,16UL);
  
#line 350 
  cmd.op_to_write = 8195U;
  
#line 352 
  cmd.retval_len16 = 16777216U;
  
#line 353 
  tmp = t4vf_wr_mbox(adapter,(void const *)(& cmd),16,(void *)0);
  
#line 353 
  return tmp;
}


#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
static int t4vf_query_params(struct adapter *adapter, unsigned int nparams, u32 const *params, u32 *vals)
{
  int __retres;
  int i;
  int ret;
  struct fw_params_cmd cmd;
  struct fw_params_cmd rpl;
  struct fw_params_param *p;
  size_t len16;
  __u32 tmp_1;
  u32 const *tmp_0;
  
#line 374 
  if (nparams > 7U) {
    
#line 375 
    __retres = -22;
    
#line 375 
    goto return_label;
  }
  else ;
  
#line 377 
  memset((void *)(& cmd),0,64UL);
  
#line 378 
  cmd.op_to_vfn = 49160U;
  
#line 381 
  len16 = ((unsigned long)((void *)8 + nparams * 8U) + 15UL) / 16UL;
  
#line 383 
  if (0 != 0) 
#line 383 
              cmd.retval_len16 = ((((unsigned int)len16 << 24) | (((unsigned int)len16 << 8) & 16711680U)) | (((unsigned int)len16 >> 8) & 65280U)) | ((unsigned int)len16 >> 24); else 
                                                                    
#line 383 
                                                                    cmd.retval_len16 = __fswab32((unsigned int)len16);
  
#line 384 
  i = 0;
  
#line 384 
  p = & cmd.param[0];
  
#line 384 
  goto ldv_46909;
  ldv_46908: 
#line 385 
  ;
  
#line 385 
  tmp_0 = params;
  
#line 385 
  params += 1;
  
#line 385 
  ;
  
#line 385 
  tmp_1 = __fswab32(*tmp_0);
  
#line 385 
  p->mnem = tmp_1;
  
#line 384 
  i += 1;
  
#line 384 
  p += 1;
  ldv_46909: 
#line 385 
  ;
  
#line 384 
  if ((unsigned int)i < nparams) 
#line 386 
                                 goto ldv_46908; else 
#line 389 
                                                      goto ldv_46910;
  ldv_46910: 
#line 390 
  ;
  
#line 387 
  ret = t4vf_wr_mbox(adapter,(void const *)(& cmd),64,(void *)(& rpl));
  
#line 388 
  if (ret == 0) {
    u32 *tmp_2;
    
#line 389 
    i = 0;
    
#line 389 
    p = & rpl.param[0];
    
#line 389 
    goto ldv_46912;
    ldv_46911: 
#line 390 
    ;
    
#line 390 
    tmp_2 = vals;
    
#line 390 
    vals += 1;
    
#line 390 
    if (0 != 0) 
#line 390 
                *tmp_2 = (((p->val << 24) | ((p->val << 8) & 16711680U)) | ((p->val >> 8) & 65280U)) | (p->val >> 24); else 
                                                                    
#line 390 
                                                                    *tmp_2 = __fswab32(p->val);
    
#line 389 
    i += 1;
    
#line 389 
    p += 1;
    ldv_46912: 
#line 390 
    ;
    
#line 389 
    if ((unsigned int)i < nparams) 
#line 391 
                                   goto ldv_46911; else 
#line 394 
                                                        goto ldv_46913;
    ldv_46913: 
#line 395 
    ;
  }
  else ;
  
#line 391 
  __retres = ret;
  return_label: 
#line 391 
                return __retres;
}


#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_set_params(struct adapter *adapter, unsigned int nparams, u32 const *params, u32 const *vals)
{
  int __retres;
  int i;
  struct fw_params_cmd cmd;
  struct fw_params_param *p;
  size_t len16;
  __u32 tmp_1;
  u32 const *tmp_0;
  __u32 tmp_3;
  u32 const *tmp_2;
  int tmp_4;
  
#line 412 
  if (nparams > 7U) {
    
#line 413 
    __retres = -22;
    
#line 413 
    goto return_label;
  }
  else ;
  
#line 415 
  memset((void *)(& cmd),0,64UL);
  
#line 416 
  cmd.op_to_vfn = 40968U;
  
#line 419 
  len16 = ((unsigned long)((void *)8 + nparams * 8U) + 15UL) / 16UL;
  
#line 421 
  if (0 != 0) 
#line 421 
              cmd.retval_len16 = ((((unsigned int)len16 << 24) | (((unsigned int)len16 << 8) & 16711680U)) | (((unsigned int)len16 >> 8) & 65280U)) | ((unsigned int)len16 >> 24); else 
                                                                    
#line 421 
                                                                    cmd.retval_len16 = __fswab32((unsigned int)len16);
  
#line 422 
  i = 0;
  
#line 422 
  p = & cmd.param[0];
  
#line 422 
  goto ldv_46925;
  ldv_46924: 
#line 423 
  ;
  
#line 423 
  tmp_0 = params;
  
#line 423 
  params += 1;
  
#line 423 
  ;
  
#line 423 
  tmp_1 = __fswab32(*tmp_0);
  
#line 423 
  p->mnem = tmp_1;
  
#line 424 
  tmp_2 = vals;
  
#line 424 
  vals += 1;
  
#line 424 
  ;
  
#line 424 
  tmp_3 = __fswab32(*tmp_2);
  
#line 424 
  p->val = tmp_3;
  
#line 422 
  i += 1;
  
#line 422 
  p += 1;
  ldv_46925: 
#line 423 
  ;
  
#line 422 
  if ((unsigned int)i < nparams) 
#line 424 
                                 goto ldv_46924; else 
#line 427 
                                                      goto ldv_46926;
  ldv_46926: 
#line 428 
  ;
  
#line 427 
  tmp_4 = t4vf_wr_mbox(adapter,(void const *)(& cmd),64,(void *)0);
  
#line 427 
  __retres = tmp_4;
  return_label: 
#line 427 
                return __retres;
}


#line 455  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_bar2_sge_qregs(struct adapter *adapter, unsigned int qid, enum t4_bar2_qtype qtype, u64 *pbar2_qoffset, unsigned int *pbar2_qid)
{
  int __retres;
  unsigned int page_shift;
  unsigned int page_size;
  unsigned int qpp_shift;
  unsigned int qpp_mask;
  u64 bar2_page_offset;
  u64 bar2_qoffset;
  unsigned int bar2_qid;
  unsigned int bar2_qid_offset;
  unsigned int bar2_qinferred;
  int tmp;
  
#line 467 
  tmp = is_t4(adapter->params.chip);
  
#line 467 
  if (tmp != 0) {
    
#line 468 
    __retres = -22;
    
#line 468 
    goto return_label;
  }
  else ;
  
#line 472 
  page_shift = adapter->params.sge.sge_vf_hps + 10U;
  
#line 473 
  page_size = (unsigned int)(1 << page_shift);
  
#line 477 
  if (qtype == (unsigned int)T4_BAR2_QTYPE_EGRESS) 
#line 477 
                                                   qpp_shift = adapter->params.sge.sge_vf_eq_qpp; else 
                                                                    
#line 477 
                                                                    qpp_shift = adapter->params.sge.sge_vf_iq_qpp;
  
#line 480 
  qpp_mask = (unsigned int)((1 << qpp_shift) + -1);
  
#line 487 
  bar2_page_offset = (unsigned long long)(qid >> qpp_shift) << page_shift;
  
#line 488 
  bar2_qid = qid & qpp_mask;
  
#line 489 
  bar2_qid_offset = bar2_qid * 128U;
  
#line 507 
  bar2_qoffset = bar2_page_offset;
  
#line 508 
  bar2_qinferred = (unsigned int)(bar2_qid_offset < page_size);
  
#line 509 
  if (bar2_qinferred != 0U) {
    
#line 510 
    bar2_qoffset = (unsigned long long)bar2_qid_offset + bar2_qoffset;
    
#line 511 
    bar2_qid = 0U;
  }
  else ;
  
#line 514 
  *pbar2_qoffset = bar2_qoffset;
  
#line 515 
  *pbar2_qid = bar2_qid;
  
#line 516 
  __retres = 0;
  return_label: 
#line 516 
                return __retres;
}


#line 527  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_get_sge_params(struct adapter *adapter)
{
  int __retres;
  u32 params[7U];
  u32 vals[7U];
  int v;
  int tmp;
  int tmp_0;
  
#line 529 
  struct sge_params *sge_params = & adapter->params.sge;
  
#line 533 
  params[0] = 50335752U;
  
#line 535 
  params[1] = 50335756U;
  
#line 537 
  params[2] = 50335812U;
  
#line 539 
  params[3] = 50335816U;
  
#line 541 
  params[4] = 50335928U;
  
#line 543 
  params[5] = 50335932U;
  
#line 545 
  params[6] = 50335936U;
  
#line 547 
  v = t4vf_query_params(adapter,7U,(u32 const *)(& params),(u32 *)(& vals));
  
#line 548 
  if (v != 0) {
    
#line 549 
    __retres = v;
    
#line 549 
    goto return_label;
  }
  else ;
  
#line 550 
  sge_params->sge_control = vals[0];
  
#line 551 
  sge_params->sge_host_page_size = vals[1];
  
#line 552 
  sge_params->sge_fl_buffer_size[0] = vals[2];
  
#line 553 
  sge_params->sge_fl_buffer_size[1] = vals[3];
  
#line 554 
  sge_params->sge_timer_value_0_and_1 = vals[4];
  
#line 555 
  sge_params->sge_timer_value_2_and_3 = vals[5];
  
#line 556 
  sge_params->sge_timer_value_4_and_5 = vals[6];
  
#line 568 
  tmp = is_t4(adapter->params.chip);
  
#line 568 
  if (tmp == 0) {
    
#line 569 
    params[0] = 50336036U;
    
#line 571 
    v = t4vf_query_params(adapter,1U,(u32 const *)(& params),(u32 *)(& vals));
    
#line 572 
    if (v != 0) {
      
#line 573 
      dev_err((struct device const *)adapter->pdev_dev,"Unable to get SGE Control2; ");
      
#line 576 
      __retres = v;
      
#line 576 
      goto return_label;
    }
    else ;
    
#line 578 
    sge_params->sge_control2 = vals[0];
  }
  else ;
  
#line 581 
  params[0] = 50335904U;
  
#line 583 
  params[1] = 50335892U;
  
#line 585 
  v = t4vf_query_params(adapter,2U,(u32 const *)(& params),(u32 *)(& vals));
  
#line 586 
  if (v != 0) {
    
#line 587 
    __retres = v;
    
#line 587 
    goto return_label;
  }
  else ;
  
#line 588 
  sge_params->sge_ingress_rx_threshold = vals[0];
  
#line 589 
  sge_params->sge_congestion_control = vals[1];
  
#line 595 
  tmp_0 = is_t4(adapter->params.chip);
  
#line 595 
  if (tmp_0 == 0) {
    u32 whoami;
    unsigned int pf;
    unsigned int s_hps;
    unsigned int s_qpp;
    
#line 599 
    params[0] = 50335764U;
    
#line 602 
    params[1] = 50335992U;
    
#line 605 
    v = t4vf_query_params(adapter,2U,(u32 const *)(& params),(u32 *)(& vals));
    
#line 606 
    if (v != 0) {
      
#line 607 
      dev_warn((struct device const *)adapter->pdev_dev,"Unable to get VF SGE Queues/Page; ");
      
#line 610 
      __retres = v;
      
#line 610 
      goto return_label;
    }
    else ;
    
#line 612 
    sge_params->sge_egress_queues_per_page = vals[0];
    
#line 613 
    sge_params->sge_ingress_queues_per_page = vals[1];
    
#line 620 
    whoami = t4_read_reg(adapter,512U);
    
#line 622 
    pf = (whoami >> 8) & 7U;
    
#line 624 
    s_hps = pf * 4U;
    
#line 626 
    sge_params->sge_vf_hps = (sge_params->sge_host_page_size >> s_hps) & 15U;
    
#line 630 
    s_qpp = pf * 4U;
    
#line 632 
    sge_params->sge_vf_eq_qpp = (sge_params->sge_egress_queues_per_page >> s_qpp) & 15U;
    
#line 635 
    sge_params->sge_vf_iq_qpp = (sge_params->sge_ingress_queues_per_page >> s_qpp) & 15U;
  }
  else ;
  
#line 640 
  __retres = 0;
  return_label: 
#line 640 
                return __retres;
}


#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_get_vpd_params(struct adapter *adapter)
{
  int __retres;
  u32 params[7U];
  u32 vals[7U];
  int v;
  
#line 652 
  struct vpd_params *vpd_params = & adapter->params.vpd;
  
#line 656 
  params[0] = 16777216U;
  
#line 658 
  v = t4vf_query_params(adapter,1U,(u32 const *)(& params),(u32 *)(& vals));
  
#line 659 
  if (v != 0) {
    
#line 660 
    __retres = v;
    
#line 660 
    goto return_label;
  }
  else ;
  
#line 661 
  vpd_params->cclk = vals[0];
  
#line 663 
  __retres = 0;
  return_label: 
#line 663 
                return __retres;
}


#line 673  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_get_dev_params(struct adapter *adapter)
{
  int __retres;
  u32 params[7U];
  u32 vals[7U];
  int v;
  
#line 675 
  struct dev_params *dev_params = & adapter->params.dev;
  
#line 679 
  params[0] = 17498112U;
  
#line 681 
  params[1] = 17563648U;
  
#line 683 
  v = t4vf_query_params(adapter,2U,(u32 const *)(& params),(u32 *)(& vals));
  
#line 684 
  if (v != 0) {
    
#line 685 
    __retres = v;
    
#line 685 
    goto return_label;
  }
  else ;
  
#line 686 
  dev_params->fwrev = vals[0];
  
#line 687 
  dev_params->tprev = vals[1];
  
#line 689 
  __retres = 0;
  return_label: 
#line 689 
                return __retres;
}


#line 699  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_get_rss_glb_config(struct adapter *adapter)
{
  int __retres;
  struct fw_rss_glb_config_cmd cmd;
  struct fw_rss_glb_config_cmd rpl;
  int v;
  
#line 701 
  struct rss_params *rss = & adapter->params.rss;
  
#line 709 
  memset((void *)(& cmd),0,32UL);
  
#line 710 
  cmd.op_to_write = 49186U;
  
#line 713 
  cmd.retval_len16 = 33554432U;
  
#line 714 
  v = t4vf_wr_mbox(adapter,(void const *)(& cmd),32,(void *)(& rpl));
  
#line 715 
  if (v != 0) {
    
#line 716 
    __retres = v;
    
#line 716 
    goto return_label;
  }
  else ;
  
#line 724 
  if (0 != 0) 
#line 724 
              rss->mode = ((((rpl.u.manual.mode_pkd << 24) | ((rpl.u.manual.mode_pkd << 8) & 16711680U)) | ((rpl.u.manual.mode_pkd >> 8) & 65280U)) | (rpl.u.manual.mode_pkd >> 24)) >> 28;
  else {
    __u32 tmp;
    
#line 724 
    tmp = __fswab32(rpl.u.manual.mode_pkd);
    
#line 724 
    rss->mode = tmp >> 28;
  }
  
#line 726 
  switch (rss->mode) {
    case (unsigned int)1: 
#line 727 
    ;
    {
      unsigned int tmp_1;
      
#line 728 
      if (0 != 0) 
#line 728 
                  tmp_1 = (((rpl.u.basicvirtual.synmapen_to_hashtoeplitz << 24) | ((rpl.u.basicvirtual.synmapen_to_hashtoeplitz << 8) & 16711680U)) | ((rpl.u.basicvirtual.synmapen_to_hashtoeplitz >> 8) & 65280U)) | (rpl.u.basicvirtual.synmapen_to_hashtoeplitz >> 24); else 
                                                                    
#line 728 
                                                                    tmp_1 = __fswab32(rpl.u.basicvirtual.synmapen_to_hashtoeplitz);
      
#line 728 
      u32 word = tmp_1;
      
#line 731 
      rss->u.basicvirtual.synmapen = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))((word & 256U) != 0U);
      
#line 733 
      rss->u.basicvirtual.syn4tupenipv6 = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))((word & 128U) != 0U);
      
#line 735 
      rss->u.basicvirtual.syn2tupenipv6 = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))((word & 64U) != 0U);
      
#line 737 
      rss->u.basicvirtual.syn4tupenipv4 = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))((word & 32U) != 0U);
      
#line 739 
      rss->u.basicvirtual.syn2tupenipv4 = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))((word & 16U) != 0U);
      
#line 742 
      rss->u.basicvirtual.ofdmapen = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))((word & 8U) != 0U);
      
#line 745 
      rss->u.basicvirtual.tnlmapen = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))((word & 4U) != 0U);
      
#line 747 
      rss->u.basicvirtual.tnlalllookup = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))((word & 2U) != 0U);
      
#line 750 
      rss->u.basicvirtual.hashtoeplitz = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))((word & 1U) != 0U);
      
#line 754 
      if ((unsigned int)*((unsigned char *)(& rss->u.basicvirtual) + 0UL) == 0U) {
        
#line 755 
        __retres = -22;
        
#line 755 
        goto return_label;
      }
      else ;
      
#line 756 
      goto ldv_46977;
    }
    default: 
#line 759 
    ;
    
#line 761 
    __retres = -22;
    
#line 761 
    goto return_label;
  }
  ldv_46977: 
#line 764 
  ;
  
#line 764 
  __retres = 0;
  return_label: 
#line 764 
                return __retres;
}


#line 774  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_get_vfres(struct adapter *adapter)
{
  int __retres;
  struct fw_pfvf_cmd cmd;
  struct fw_pfvf_cmd rpl;
  int v;
  u32 word;
  
#line 776 
  struct vf_resources *vfres = & adapter->params.vfres;
  
#line 785 
  memset((void *)(& cmd),0,32UL);
  
#line 786 
  cmd.op_to_vfn = 49161U;
  
#line 789 
  cmd.retval_len16 = 33554432U;
  
#line 790 
  v = t4vf_wr_mbox(adapter,(void const *)(& cmd),32,(void *)(& rpl));
  
#line 791 
  if (v != 0) {
    
#line 792 
    __retres = v;
    
#line 792 
    goto return_label;
  }
  else ;
  
#line 797 
  if (0 != 0) 
#line 797 
              word = (((rpl.niqflint_niq << 24) | ((rpl.niqflint_niq << 8) & 16711680U)) | ((rpl.niqflint_niq >> 8) & 65280U)) | (rpl.niqflint_niq >> 24); else 
                                                                    
#line 797 
                                                                    word = __fswab32(rpl.niqflint_niq);
  
#line 798 
  vfres->niqflint = word >> 20;
  
#line 799 
  vfres->niq = word & 1048575U;
  
#line 801 
  if (0 != 0) 
#line 801 
              word = (((rpl.type_to_neq << 24) | ((rpl.type_to_neq << 8) & 16711680U)) | ((rpl.type_to_neq >> 8) & 65280U)) | (rpl.type_to_neq >> 24); else 
                                                                    
#line 801 
                                                                    word = __fswab32(rpl.type_to_neq);
  
#line 802 
  vfres->neq = word & 1048575U;
  
#line 803 
  vfres->pmask = (word >> 20) & 15U;
  
#line 805 
  if (0 != 0) 
#line 805 
              word = (((rpl.tc_to_nexactf << 24) | ((rpl.tc_to_nexactf << 8) & 16711680U)) | ((rpl.tc_to_nexactf >> 8) & 65280U)) | (rpl.tc_to_nexactf >> 24); else 
                                                                    
#line 805 
                                                                    word = __fswab32(rpl.tc_to_nexactf);
  
#line 806 
  vfres->tc = word >> 24;
  
#line 807 
  vfres->nvi = (word >> 16) & 255U;
  
#line 808 
  vfres->nexactf = word & 65535U;
  
#line 810 
  if (0 != 0) 
#line 810 
              word = (((rpl.r_caps_to_nethctrl << 24) | ((rpl.r_caps_to_nethctrl << 8) & 16711680U)) | ((rpl.r_caps_to_nethctrl >> 8) & 65280U)) | (rpl.r_caps_to_nethctrl >> 24); else 
                                                                    
#line 810 
                                                                    word = __fswab32(rpl.r_caps_to_nethctrl);
  
#line 811 
  vfres->r_caps = word >> 24;
  
#line 812 
  vfres->wx_caps = (word >> 16) & 255U;
  
#line 813 
  vfres->nethctrl = word & 65535U;
  
#line 815 
  __retres = 0;
  return_label: 
#line 815 
                return __retres;
}


#line 827  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_read_rss_vi_config(struct adapter *adapter, unsigned int viid, union rss_vi_config *config)
{
  int __retres;
  struct fw_rss_vi_config_cmd cmd;
  struct fw_rss_vi_config_cmd rpl;
  int v;
  
#line 833 
  memset((void *)(& cmd),0,32UL);
  
#line 834 
  if (0 != 0) 
#line 834 
              cmd.op_to_viid = ((((viid << 24) | ((viid << 8) & 16711680U)) | ((viid >> 8) & 16128U)) | (viid >> 24)) | 49187U; else 
                                                                    
#line 834 
                                                                    cmd.op_to_viid = __fswab32(viid | 599785472U);
  
#line 838 
  cmd.retval_len16 = 33554432U;
  
#line 839 
  v = t4vf_wr_mbox(adapter,(void const *)(& cmd),32,(void *)(& rpl));
  
#line 840 
  if (v != 0) {
    
#line 841 
    __retres = v;
    
#line 841 
    goto return_label;
  }
  else ;
  
#line 843 
  switch (adapter->params.rss.mode) {
    case (unsigned int)1: 
#line 844 
    ;
    {
      unsigned int tmp_1;
      
#line 845 
      if (0 != 0) 
#line 845 
                  tmp_1 = (((rpl.u.basicvirtual.defaultq_to_udpen << 24) | ((rpl.u.basicvirtual.defaultq_to_udpen << 8) & 16711680U)) | ((rpl.u.basicvirtual.defaultq_to_udpen >> 8) & 65280U)) | (rpl.u.basicvirtual.defaultq_to_udpen >> 24); else 
                                                                    
#line 845 
                                                                    tmp_1 = __fswab32(rpl.u.basicvirtual.defaultq_to_udpen);
      
#line 845 
      u32 word = tmp_1;
      
#line 847 
      config->basicvirtual.ip6fourtupen = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))((word & 16U) != 0U);
      
#line 849 
      config->basicvirtual.ip6twotupen = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))((word & 8U) != 0U);
      
#line 851 
      config->basicvirtual.ip4fourtupen = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))((word & 4U) != 0U);
      
#line 853 
      config->basicvirtual.ip4twotupen = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))((word & 2U) != 0U);
      
#line 855 
      config->basicvirtual.udpen = (word & 1U) != 0U;
      
#line 857 
      config->basicvirtual.defaultq = (unsigned short)((unsigned int)((unsigned short)(word >> 16)) & 1023U);
      
#line 859 
      goto ldv_46997;
    }
    default: 
#line 862 
    ;
    
#line 863 
    __retres = -22;
    
#line 863 
    goto return_label;
  }
  ldv_46997: 
#line 866 
  ;
  
#line 866 
  __retres = 0;
  return_label: 
#line 866 
                return __retres;
}


#line 878  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_write_rss_vi_config(struct adapter *adapter, unsigned int viid, union rss_vi_config *config)
{
  int __retres;
  struct fw_rss_vi_config_cmd cmd;
  struct fw_rss_vi_config_cmd rpl;
  int tmp_1;
  
#line 883 
  memset((void *)(& cmd),0,32UL);
  
#line 884 
  if (0 != 0) 
#line 884 
              cmd.op_to_viid = ((((viid << 24) | ((viid << 8) & 16711680U)) | ((viid >> 8) & 24320U)) | (viid >> 24)) | 40995U; else 
                                                                    
#line 884 
                                                                    cmd.op_to_viid = __fswab32(viid | 597688320U);
  
#line 888 
  cmd.retval_len16 = 33554432U;
  
#line 889 
  switch (adapter->params.rss.mode) {
    case (unsigned int)1: 
#line 890 
    ;
    {
      
#line 891 
      u32 word = 0U;
      
#line 893 
      if ((unsigned int)*((unsigned char *)(& config->basicvirtual) + 2UL) != 0U) 
        
#line 894 
        word |= 16U; else ;
      
#line 895 
      if ((unsigned int)*((unsigned char *)(& config->basicvirtual) + 2UL) != 0U) 
        
#line 896 
        word |= 8U; else ;
      
#line 897 
      if ((unsigned int)*((unsigned char *)(& config->basicvirtual) + 2UL) != 0U) 
        
#line 898 
        word |= 4U; else ;
      
#line 899 
      if ((unsigned int)*((unsigned char *)(& config->basicvirtual) + 2UL) != 0U) 
        
#line 900 
        word |= 2U; else ;
      
#line 901 
      if (config->basicvirtual.udpen != 0) 
#line 902 
                                           word |= 1U; else ;
      
#line 903 
      word = (unsigned int)((int)config->basicvirtual.defaultq << 16) | word;
      
#line 905 
      if (0 != 0) 
#line 905 
                  cmd.u.basicvirtual.defaultq_to_udpen = (((word << 24) | ((word << 8) & 16711680U)) | ((word >> 8) & 65280U)) | (word >> 24); else 
                                                                    
#line 905 
                                                                    cmd.u.basicvirtual.defaultq_to_udpen = __fswab32(word);
      
#line 906 
      goto ldv_47008;
    }
    default: 
#line 909 
    ;
    
#line 910 
    __retres = -22;
    
#line 910 
    goto return_label;
  }
  ldv_47008: 
#line 913 
  ;
  
#line 913 
  tmp_1 = t4vf_wr_mbox(adapter,(void const *)(& cmd),32,(void *)(& rpl));
  
#line 913 
  __retres = tmp_1;
  return_label: 
#line 913 
                return __retres;
}


#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_config_rss_range(struct adapter *adapter, unsigned int viid, int start, int n, u16 const *rspq, int nrspq)
{
  int __retres;
  struct fw_rss_ind_tbl_cmd cmd;
  
#line 934 
  u16 const *rsp = rspq;
  
#line 935 
  u16 const *rsp_end = rspq + nrspq;
  
#line 941 
  memset((void *)(& cmd),0,64UL);
  
#line 942 
  if (0 != 0) 
#line 942 
              cmd.op_to_viid = ((((viid << 24) | ((viid << 8) & 16711680U)) | ((viid >> 8) & 24320U)) | (viid >> 24)) | 40992U; else 
                                                                    
#line 942 
                                                                    cmd.op_to_viid = __fswab32(viid | 547356672U);
  
#line 946 
  cmd.retval_len16 = 67108864U;
  
#line 954 
  goto ldv_47040;
  ldv_47039: 
#line 955 
  ;
  {
    int tmp_1;
    int ret;
    
#line 955 
    __be32 *qp = & cmd.iq0_to_iq2;
    {
      int tmp_0;
      
#line 956 
      int _min1 = n;
      
#line 956 
      int _min2 = 32;
      
#line 956 
      if (_min1 < _min2) 
#line 956 
                         tmp_0 = _min1; else 
#line 956 
                                             tmp_0 = _min2;
      
#line 956 
      tmp_1 = tmp_0;
    }
    
#line 956 
    int nq = tmp_1;
    
#line 963 
    if (0 != 0) 
#line 963 
                cmd.niqid = (unsigned short)(((int)((unsigned short)nq) << 8) | ((int)((unsigned short)nq) >> 8)); else 
                                                                    
#line 963 
                                                                    cmd.niqid = __fswab16((unsigned short)((int)((unsigned short)nq)));
    
#line 964 
    if (0 != 0) 
#line 964 
                cmd.startidx = (unsigned short)(((int)((unsigned short)start) << 8) | ((int)((unsigned short)start) >> 8)); else 
                                                                    
#line 964 
                                                                    cmd.startidx = __fswab16((unsigned short)((int)((unsigned short)start)));
    
#line 969 
    start += nq;
    
#line 970 
    n -= nq;
    
#line 977 
    goto ldv_47037;
    ldv_47036: 
#line 978 
    ;
    {
      u16 qbuf[3U];
      int tmp_5;
      u16 *tmp_6;
      u16 const *tmp_7;
      __be32 *tmp_8;
      
#line 985 
      u16 *qbp = (u16 *)(& qbuf);
      {
        int tmp_4;
        
#line 986 
        int _min1_0 = 3;
        
#line 986 
        int _min2_0 = nq;
        
#line 986 
        if (_min1_0 < _min2_0) 
#line 986 
                               tmp_4 = _min1_0; else 
#line 986 
                                                     tmp_4 = _min2_0;
        
#line 986 
        tmp_5 = tmp_4;
      }
      
#line 986 
      int nqbuf = tmp_5;
      
#line 988 
      nq -= nqbuf;
      
#line 989 
      qbuf[2] = (unsigned short)0U;
      
#line 989 
      qbuf[1] = qbuf[2];
      
#line 989 
      qbuf[0] = qbuf[1];
      
#line 990 
      goto ldv_47034;
      ldv_47033: 
#line 991 
      ;
      
#line 991 
      nqbuf -= 1;
      
#line 992 
      tmp_6 = qbp;
      
#line 992 
      qbp += 1;
      
#line 992 
      tmp_7 = rsp;
      
#line 992 
      rsp += 1;
      
#line 992 
      *tmp_6 = *tmp_7;
      
#line 993 
      if (rsp >= rsp_end) 
#line 994 
                          rsp = rspq; else ;
      ldv_47034: 
#line 995 
      ;
      
#line 990 
      if (nqbuf != 0) 
#line 992 
                      goto ldv_47033; else 
#line 995 
                                           goto ldv_47035;
      ldv_47035: 
#line 996 
      ;
      
#line 996 
      tmp_8 = qp;
      
#line 996 
      qp += 1;
      
#line 996 
      if (0 != 0) 
#line 996 
                  *tmp_8 = ((((unsigned int)((((int)qbuf[0] << 20) | ((int)qbuf[1] << 10)) | (int)qbuf[2]) << 24) | (((unsigned int)((((int)qbuf[0] << 20) | ((int)qbuf[1] << 10)) | (int)qbuf[2]) << 8) & 16711680U)) | (((unsigned int)((((int)qbuf[0] << 20) | ((int)qbuf[1] << 10)) | (int)qbuf[2]) >> 8) & 65280U)) | ((unsigned int)((((int)qbuf[0] << 20) | ((int)qbuf[1] << 10)) | (int)qbuf[2]) >> 24); else 
                                                                    
#line 996 
                                                                    *tmp_8 = __fswab32((unsigned int)((((int)qbuf[0] << 20) | ((int)qbuf[1] << 10)) | (int)qbuf[2]));
    }
    ldv_47037: 
#line 998 
    ;
    
#line 977 
    if (nq > 0) 
#line 979 
                goto ldv_47036; else 
#line 982 
                                     goto ldv_47038;
    ldv_47038: 
#line 983 
    ;
    
#line 1005 
    ret = t4vf_wr_mbox(adapter,(void const *)(& cmd),64,(void *)0);
    
#line 1006 
    if (ret != 0) {
      
#line 1007 
      __retres = ret;
      
#line 1007 
      goto return_label;
    }
    else ;
  }
  ldv_47040: 
#line 1009 
  ;
  
#line 954 
  if (n > 0) 
#line 956 
             goto ldv_47039; else 
#line 959 
                                  goto ldv_47041;
  ldv_47041: 
#line 960 
  ;
  
#line 1009 
  __retres = 0;
  return_label: 
#line 1009 
                return __retres;
}


#line 1021  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_alloc_vi(struct adapter *adapter, int port_id)
{
  int __retres;
  struct fw_vi_cmd cmd;
  struct fw_vi_cmd rpl;
  int v;
  int tmp_0;
  
#line 1030 
  memset((void *)(& cmd),0,64UL);
  
#line 1031 
  cmd.op_to_vfn = 45076U;
  
#line 1035 
  cmd.alloc_to_len16 = 67108992U;
  
#line 1037 
  cmd.portid_pkd = (unsigned char)((int)((unsigned char)port_id) << 4U);
  
#line 1038 
  v = t4vf_wr_mbox(adapter,(void const *)(& cmd),64,(void *)(& rpl));
  
#line 1039 
  if (v != 0) {
    
#line 1040 
    __retres = v;
    
#line 1040 
    goto return_label;
  }
  else ;
  
#line 1042 
  if (0 != 0) 
#line 1042 
              tmp_0 = (int)((unsigned short)(((int)rpl.type_viid << 8) | ((int)rpl.type_viid >> 8))) & 4095;
  else {
    __u16 tmp;
    
#line 1042 
    tmp = __fswab16((unsigned short)((int)rpl.type_viid));
    
#line 1042 
    tmp_0 = (int)tmp & 4095;
  }
  
#line 1042 
  __retres = tmp_0;
  return_label: 
#line 1042 
                return __retres;
}


#line 1053  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_free_vi(struct adapter *adapter, int viid)
{
  struct fw_vi_cmd cmd;
  int tmp_0;
  
#line 1060 
  memset((void *)(& cmd),0,64UL);
  
#line 1061 
  cmd.op_to_vfn = 36884U;
  
#line 1064 
  cmd.alloc_to_len16 = 67108928U;
  
#line 1066 
  if (0 != 0) 
#line 1066 
              cmd.type_viid = (unsigned short)(((int)((unsigned short)viid) << 8) | ((int)((unsigned short)viid) >> 8)); else 
                                                                    
#line 1066 
                                                                    cmd.type_viid = __fswab16((unsigned short)((int)((unsigned short)viid)));
  
#line 1067 
  tmp_0 = t4vf_wr_mbox(adapter,(void const *)(& cmd),64,(void *)0);
  
#line 1067 
  return tmp_0;
}


#line 1079  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_enable_vi(struct adapter *adapter, unsigned int viid, bool rx_en, bool tx_en)
{
  struct fw_vi_enable_cmd cmd;
  int tmp_1;
  
#line 1084 
  memset((void *)(& cmd),0,16UL);
  
#line 1085 
  if (0 != 0) 
#line 1085 
              cmd.op_to_viid = ((((viid << 24) | ((viid << 8) & 16711680U)) | ((viid >> 8) & 28416U)) | (viid >> 24)) | 36887U; else 
                                                                    
#line 1085 
                                                                    cmd.op_to_viid = __fswab32(viid | 395313152U);
  
#line 1089 
  if (0 != 0) 
#line 1089 
              cmd.ien_to_len16 = (((((unsigned int)(((int)rx_en << 31) | ((int)tx_en << 30)) << 24) | (((unsigned int)(((int)rx_en << 31) | ((int)tx_en << 30)) << 8) & 16711680U)) | (((unsigned int)(((int)rx_en << 31) | ((int)tx_en << 30)) >> 8) & 65280U)) | ((unsigned int)(((int)rx_en << 31) | ((int)tx_en << 30)) >> 24)) | 16777216U; else 
                                                                    
#line 1089 
                                                                    cmd.ien_to_len16 = __fswab32((unsigned int)((((int)rx_en << 31) | ((int)tx_en << 30)) | 1));
  
#line 1092 
  tmp_1 = t4vf_wr_mbox(adapter,(void const *)(& cmd),16,(void *)0);
  
#line 1092 
  return tmp_1;
}


#line 1103  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_identify_port(struct adapter *adapter, unsigned int viid, unsigned int nblinks)
{
  struct fw_vi_enable_cmd cmd;
  int tmp_1;
  
#line 1108 
  memset((void *)(& cmd),0,16UL);
  
#line 1109 
  if (0 != 0) 
#line 1109 
              cmd.op_to_viid = ((((viid << 24) | ((viid << 8) & 16711680U)) | ((viid >> 8) & 28416U)) | (viid >> 24)) | 36887U; else 
                                                                    
#line 1109 
                                                                    cmd.op_to_viid = __fswab32(viid | 395313152U);
  
#line 1113 
  cmd.ien_to_len16 = 16777248U;
  
#line 1115 
  if (0 != 0) 
#line 1115 
              cmd.blinkdur = (unsigned short)(((int)((unsigned short)nblinks) << 8) | ((int)((unsigned short)nblinks) >> 8)); else 
                                                                    
#line 1115 
                                                                    cmd.blinkdur = __fswab16((unsigned short)((int)((unsigned short)nblinks)));
  
#line 1116 
  tmp_1 = t4vf_wr_mbox(adapter,(void const *)(& cmd),16,(void *)0);
  
#line 1116 
  return tmp_1;
}


#line 1132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_set_rxmode(struct adapter *adapter, unsigned int viid, int mtu, int promisc, int all_multi, int bcast, int vlanex, bool sleep_ok)
{
  struct fw_vi_rxmode_cmd cmd;
  int tmp_1;
  
#line 1139 
  if (mtu < 0) 
#line 1140 
               mtu = 65535; else ;
  
#line 1141 
  if (promisc < 0) 
#line 1142 
                   promisc = 3; else ;
  
#line 1143 
  if (all_multi < 0) 
#line 1144 
                     all_multi = 3; else ;
  
#line 1145 
  if (bcast < 0) 
#line 1146 
                 bcast = 3; else ;
  
#line 1147 
  if (vlanex < 0) 
#line 1148 
                  vlanex = 3; else ;
  
#line 1150 
  memset((void *)(& cmd),0,16UL);
  
#line 1151 
  if (0 != 0) 
#line 1151 
              cmd.op_to_viid = ((((viid << 24) | ((viid << 8) & 16711680U)) | ((viid >> 8) & 24320U)) | (viid >> 24)) | 40982U; else 
                                                                    
#line 1151 
                                                                    cmd.op_to_viid = __fswab32(viid | 379584512U);
  
#line 1155 
  cmd.retval_len16 = 16777216U;
  
#line 1156 
  if (0 != 0) 
#line 1156 
              cmd.mtu_to_vlanexen = ((((unsigned int)(((((mtu << 16) | (promisc << 14)) | (all_multi << 12)) | (bcast << 10)) | (vlanex << 8)) << 24) | (((unsigned int)(((((mtu << 16) | (promisc << 14)) | (all_multi << 12)) | (bcast << 10)) | (vlanex << 8)) << 8) & 16711680U)) | (((unsigned int)(((((mtu << 16) | (promisc << 14)) | (all_multi << 12)) | (bcast << 10)) | (vlanex << 8)) >> 8) & 65280U)) | ((unsigned int)(((((mtu << 16) | (promisc << 14)) | (all_multi << 12)) | (bcast << 10)) | (vlanex << 8)) >> 24); else 
                                                                    
#line 1157 
                                                                    cmd.mtu_to_vlanexen = __fswab32((unsigned int)(((((mtu << 16) | (promisc << 14)) | (all_multi << 12)) | (bcast << 10)) | (vlanex << 8)));
  
#line 1162 
  tmp_1 = t4vf_wr_mbox_core(adapter,(void const *)(& cmd),16,(void *)0,(_Bool)((bool)((int)sleep_ok) != 0));
  
#line 1162 
  return tmp_1;
}


#line 1186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_alloc_mac_filt(struct adapter *adapter, unsigned int viid, bool free_0, unsigned int naddr, u8 const **addr, u16 *idx, u64 *hash, bool sleep_ok)
{
  int __retres;
  int offset;
  struct fw_vi_mac_cmd cmd;
  struct fw_vi_mac_cmd rpl;
  
#line 1190 
  int ret = 0;
  
#line 1191 
  unsigned int nfilters = 0U;
  
#line 1192 
  unsigned int rem = naddr;
  
#line 1194 
  unsigned int max_naddr = (unsigned int)adapter->params.arch.mps_tcam_size;
  
#line 1196 
  if (naddr > max_naddr) {
    
#line 1197 
    __retres = -22;
    
#line 1197 
    goto return_label;
  }
  else ;
  
#line 1199 
  offset = 0;
  
#line 1199 
  goto ldv_47114;
  ldv_47113: 
#line 1200 
  ;
  {
    unsigned int tmp;
    struct fw_vi_mac_exact *p;
    int i;
    
#line 1200 
    if (7U < rem) 
#line 1200 
                  tmp = 7U; else 
#line 1200 
                                 tmp = rem;
    
#line 1200 
    unsigned int fw_naddr = tmp;
    
#line 1203 
    size_t len16 = ((unsigned long)((void *)8 + fw_naddr * 8U) + 15UL) / 16UL;
    
#line 1208 
    memset((void *)(& cmd),0,64UL);
    
#line 1209 
    if (0 != 0) {
      unsigned int tmp_1;
      unsigned int tmp_2;
      unsigned int tmp_3;
      unsigned int tmp_4;
      
#line 1209 
      if ((int)free_0 != 0) 
#line 1209 
                            tmp_1 = 363855872U; else 
#line 1209 
                                                     tmp_1 = 362807296U;
      
#line 1209 
      if ((int)free_0 != 0) 
#line 1209 
                            tmp_2 = 363855872U; else 
#line 1209 
                                                     tmp_2 = 362807296U;
      
#line 1209 
      if ((int)free_0 != 0) 
#line 1209 
                            tmp_3 = 363855872U; else 
#line 1209 
                                                     tmp_3 = 362807296U;
      
#line 1209 
      if ((int)free_0 != 0) 
#line 1209 
                            tmp_4 = 363855872U; else 
#line 1209 
                                                     tmp_4 = 362807296U;
      
#line 1209 
      cmd.op_to_viid = ((((tmp_1 | viid) << 24) | (((tmp_2 | viid) << 8) & 16711680U)) | (((tmp_3 | viid) >> 8) & 65280U)) | ((tmp_4 | viid) >> 24);
    }
    else {
      __u32 tmp_6;
      unsigned int tmp_5;
      
#line 1209 
      if ((int)free_0 != 0) 
#line 1209 
                            tmp_5 = 363855872U; else 
#line 1209 
                                                     tmp_5 = 362807296U;
      
#line 1209 
      ;
      
#line 1209 
      tmp_6 = __fswab32(tmp_5 | viid);
      
#line 1209 
      cmd.op_to_viid = tmp_6;
    }
    
#line 1214 
    if (0 != 0) 
#line 1214 
                cmd.freemacs_to_len16 = (((((unsigned int)((int)free_0 << 31) | (unsigned int)len16) << 24) | ((((unsigned int)((int)free_0 << 31) | (unsigned int)len16) << 8) & 16711680U)) | ((((unsigned int)((int)free_0 << 31) | (unsigned int)len16) >> 8) & 65280U)) | (((unsigned int)((int)free_0 << 31) | (unsigned int)len16) >> 24); else 
                                                                    
#line 1215 
                                                                    cmd.freemacs_to_len16 = __fswab32((unsigned int)((int)free_0 << 31) | (unsigned int)len16);
    
#line 1218 
    i = 0;
    
#line 1218 
    p = (struct fw_vi_mac_exact *)(& cmd.u.exact);
    
#line 1218 
    goto ldv_47106;
    ldv_47105: 
#line 1219 
    ;
    
#line 1219 
    p->valid_to_idx = (unsigned short)65411U;
    
#line 1222 
    memcpy((void *)(& p->macaddr),(void const *)*(addr + (offset + i)),6UL);
    
#line 1218 
    i += 1;
    
#line 1218 
    p += 1;
    ldv_47106: 
#line 1219 
    ;
    
#line 1218 
    if ((unsigned int)i < fw_naddr) 
#line 1220 
                                    goto ldv_47105; else 
#line 1223 
                                                         goto ldv_47107;
    ldv_47107: 
#line 1224 
    ;
    
#line 1226 
    ret = t4vf_wr_mbox_core(adapter,(void const *)(& cmd),64,(void *)(& rpl),(_Bool)((bool)((int)sleep_ok) != 0));
    
#line 1228 
    if (ret != 0 && ret != -12) 
#line 1229 
                                goto ldv_47108; else ;
    
#line 1231 
    i = 0;
    
#line 1231 
    p = (struct fw_vi_mac_exact *)(& rpl.u.exact);
    
#line 1231 
    goto ldv_47111;
    ldv_47110: 
#line 1232 
    ;
    {
      unsigned int tmp_9;
      
#line 1232 
      if (0 != 0) 
#line 1232 
                  tmp_9 = (unsigned int)((unsigned short)(((int)p->valid_to_idx << 8) | ((int)p->valid_to_idx >> 8))) & 1023U;
      else {
        __u16 tmp_8;
        
#line 1232 
        tmp_8 = __fswab16((unsigned short)((int)p->valid_to_idx));
        
#line 1232 
        tmp_9 = (unsigned int)tmp_8 & 1023U;
      }
      
#line 1232 
      u16 index = (unsigned short)tmp_9;
      
#line 1235 
      if (idx != (u16 *)0U) 
        
#line 1236 
        if ((unsigned int)index < max_naddr) 
#line 1236 
                                             *(idx + (offset + i)) = index; else 
                                                                    
#line 1236 
                                                                    *(idx + (offset + i)) = (unsigned short)65535U;
      else ;
      
#line 1240 
      if ((unsigned int)index < max_naddr) 
#line 1241 
                                           nfilters += 1U;
      else 
        
#line 1242 
        if (hash != (u64 *)0ULL) {
          int tmp_10;
          
#line 1243 
          tmp_10 = hash_mac_addr(*(addr + (offset + i)));
          
#line 1243 
          *hash |= 1ULL << tmp_10;
        }
        else ;
    }
    
#line 1231 
    i += 1;
    
#line 1231 
    p += 1;
    ldv_47111: 
#line 1232 
    ;
    
#line 1231 
    if ((unsigned int)i < fw_naddr) 
#line 1233 
                                    goto ldv_47110; else 
#line 1236 
                                                         goto ldv_47112;
    ldv_47112: 
#line 1237 
    ;
    
#line 1246 
    free_0 = (_Bool)0;
    
#line 1247 
    offset = (int)((unsigned int)offset + fw_naddr);
    
#line 1248 
    rem -= fw_naddr;
  }
  ldv_47114: 
#line 1250 
  ;
  
#line 1199 
  if ((unsigned int)offset < naddr) 
#line 1201 
                                    goto ldv_47113; else 
#line 1204 
                                                         goto ldv_47108;
  ldv_47108: 
#line 1205 
  ;
  
#line 1255 
  if (ret == 0 || ret == -12) 
#line 1256 
                              ret = (int)nfilters; else ;
  
#line 1257 
  __retres = ret;
  return_label: 
#line 1257 
                return __retres;
}


#line 1278  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_change_mac(struct adapter *adapter, unsigned int viid, int idx, u8 const *addr, bool persist)
{
  int ret;
  struct fw_vi_mac_cmd cmd;
  struct fw_vi_mac_cmd rpl;
  
#line 1283 
  struct fw_vi_mac_exact *p = & cmd.u.exact[0];
  
#line 1284 
  size_t len16 = 1UL;
  
#line 1286 
  unsigned int max_mac_addr = (unsigned int)adapter->params.arch.mps_tcam_size;
  
#line 1292 
  if (idx < 0) 
    
#line 1293 
    if ((int)persist != 0) 
#line 1293 
                           idx = 1022; else 
#line 1293 
                                            idx = 1023;
  else ;
  
#line 1295 
  memset((void *)(& cmd),0,64UL);
  
#line 1296 
  if (0 != 0) 
#line 1296 
              cmd.op_to_viid = ((((viid << 24) | ((viid << 8) & 16711680U)) | ((viid >> 8) & 24320U)) | (viid >> 24)) | 40981U; else 
                                                                    
#line 1296 
                                                                    cmd.op_to_viid = __fswab32(viid | 362807296U);
  
#line 1300 
  if (0 != 0) 
#line 1300 
              cmd.freemacs_to_len16 = ((((unsigned int)len16 << 24) | (((unsigned int)len16 << 8) & 16711680U)) | (((unsigned int)len16 >> 8) & 65280U)) | ((unsigned int)len16 >> 24); else 
                                                                    
#line 1300 
                                                                    cmd.freemacs_to_len16 = __fswab32((unsigned int)len16);
  
#line 1301 
  if (0 != 0) 
#line 1301 
              p->valid_to_idx = (unsigned short)((unsigned int)((int)((unsigned short)((int)((unsigned int)((unsigned short)idx) | 32768U) << 8)) | ((int)((unsigned short)idx) >> 8)) | 128U); else 
                                                                    
#line 1301 
                                                                    p->valid_to_idx = __fswab16((unsigned short)((int)((unsigned int)((unsigned short)idx) | 32768U)));
  
#line 1303 
  memcpy((void *)(& p->macaddr),(void const *)addr,6UL);
  
#line 1305 
  ret = t4vf_wr_mbox(adapter,(void const *)(& cmd),64,(void *)(& rpl));
  
#line 1306 
  if (ret == 0) {
    
#line 1307 
    p = & rpl.u.exact[0];
    
#line 1308 
    if (0 != 0) 
#line 1308 
                ret = (int)((unsigned short)(((int)p->valid_to_idx << 8) | ((int)p->valid_to_idx >> 8))) & 1023;
    else {
      __u16 tmp_2;
      
#line 1308 
      tmp_2 = __fswab16((unsigned short)((int)p->valid_to_idx));
      
#line 1308 
      ret = (int)tmp_2 & 1023;
    }
    
#line 1309 
    if ((unsigned int)ret >= max_mac_addr) 
#line 1310 
                                           ret = -12; else ;
  }
  else ;
  
#line 1312 
  return ret;
}


#line 1325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_set_addr_hash(struct adapter *adapter, unsigned int viid, bool ucast, u64 vec, bool sleep_ok)
{
  struct fw_vi_mac_cmd cmd;
  int tmp_2;
  
#line 1329 
  size_t len16 = 1UL;
  
#line 1332 
  memset((void *)(& cmd),0,64UL);
  
#line 1333 
  if (0 != 0) 
#line 1333 
              cmd.op_to_viid = ((((viid << 24) | ((viid << 8) & 16711680U)) | ((viid >> 8) & 24320U)) | (viid >> 24)) | 40981U; else 
                                                                    
#line 1333 
                                                                    cmd.op_to_viid = __fswab32(viid | 362807296U);
  
#line 1337 
  if (0 != 0) 
#line 1337 
              cmd.freemacs_to_len16 = ((((((unsigned int)((int)ucast << 22) | (unsigned int)len16) << 24) | ((((unsigned int)((int)ucast << 22) | (unsigned int)len16) << 8) & 16711680U)) | ((((unsigned int)((int)ucast << 22) | (unsigned int)len16) >> 8) & 32512U)) | (((unsigned int)((int)ucast << 22) | (unsigned int)len16) >> 24)) | 32768U; else 
                                                                    
#line 1337 
                                                                    cmd.freemacs_to_len16 = __fswab32(((unsigned int)((int)ucast << 22) | (unsigned int)len16) | 8388608U);
  
#line 1340 
  if (0 != 0) 
#line 1340 
              cmd.u.hash.hashvec = (((((((vec << 56) | ((vec << 40) & 71776119061217280ULL)) | ((vec << 24) & 280375465082880ULL)) | ((vec << 8) & 1095216660480ULL)) | ((vec >> 8) & 4278190080ULL)) | ((vec >> 24) & 16711680ULL)) | ((vec >> 40) & 65280ULL)) | (vec >> 56); else 
                                                                    
#line 1340 
                                                                    cmd.u.hash.hashvec = __fswab64(vec);
  
#line 1341 
  tmp_2 = t4vf_wr_mbox_core(adapter,(void const *)(& cmd),64,(void *)0,(_Bool)((bool)((int)sleep_ok) != 0));
  
#line 1341 
  return tmp_2;
}


#line 1352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_get_port_stats(struct adapter *adapter, int pidx, struct t4vf_port_stats *s)
{
  int __retres;
  struct fw_vi_stats_vf fwstats;
  
#line 1355 
  struct port_info *pi = adap2pinfo(adapter,pidx);
  
#line 1357 
  unsigned int rem = 16U;
  
#line 1358 
  __be64 *fwsp = (__be64 *)(& fwstats);
  
#line 1365 
  goto ldv_47157;
  ldv_47156: 
#line 1366 
  ;
  {
    unsigned int tmp_1;
    struct fw_vi_stats_cmd cmd;
    struct fw_vi_stats_cmd rpl;
    int ret;
    
#line 1366 
    unsigned int ix = 16U - rem;
    {
      unsigned int tmp_0;
      
#line 1367 
      unsigned int _min1 = 6U;
      
#line 1367 
      unsigned int _min2 = rem;
      
#line 1367 
      if (_min1 < _min2) 
#line 1367 
                         tmp_0 = _min1; else 
#line 1367 
                                             tmp_0 = _min2;
      
#line 1367 
      tmp_1 = tmp_0;
    }
    
#line 1367 
    unsigned int nstats = tmp_1;
    
#line 1369 
    size_t len = 64UL;
    
#line 1371 
    size_t len16 = (len + 15UL) / 16UL;
    
#line 1374 
    memset((void *)(& cmd),0,144UL);
    
#line 1375 
    if (0 != 0) 
#line 1375 
                cmd.op_to_viid = (((unsigned int)pi->viid << 24) | (((unsigned int)pi->viid << 8) & 16711680U)) | 49178U; else 
                                                                    
#line 1375 
                                                                    cmd.op_to_viid = __fswab32((unsigned int)pi->viid | 448790528U);
    
#line 1379 
    if (0 != 0) 
#line 1379 
                cmd.retval_len16 = ((((unsigned int)len16 << 24) | (((unsigned int)len16 << 8) & 16711680U)) | (((unsigned int)len16 >> 8) & 65280U)) | ((unsigned int)len16 >> 24); else 
                                                                    
#line 1379 
                                                                    cmd.retval_len16 = __fswab32((unsigned int)len16);
    
#line 1380 
    if (0 != 0) 
#line 1380 
                cmd.u.ctl.nstats_ix = (unsigned short)((((int)((unsigned short)ix) | ((int)((unsigned short)nstats) << 12U)) << 8) | (((int)((unsigned short)ix) | ((int)((unsigned short)nstats) << 12U)) >> 8)); else 
                                                                    
#line 1381 
                                                                    cmd.u.ctl.nstats_ix = __fswab16((unsigned short)(((int)((unsigned short)nstats) << 12U) | (int)((unsigned short)ix)));
    
#line 1383 
    ret = t4vf_wr_mbox_ns(adapter,(void const *)(& cmd),(int)len,(void *)(& rpl));
    
#line 1384 
    if (ret != 0) {
      
#line 1385 
      __retres = ret;
      
#line 1385 
      goto return_label;
    }
    else ;
    
#line 1387 
    memcpy((void *)fwsp,(void const *)(& rpl.u.ctl.stat0),(unsigned long)nstats * 8UL);
    
#line 1389 
    rem -= nstats;
    
#line 1390 
    fwsp += nstats;
  }
  ldv_47157: 
#line 1392 
  ;
  
#line 1365 
  if (rem != 0U) 
#line 1367 
                 goto ldv_47156; else 
#line 1370 
                                      goto ldv_47158;
  ldv_47158: 
#line 1371 
  ;
  
#line 1396 
  if (0 != 0) 
#line 1396 
              s->tx_bcast_bytes = (((((((fwstats.tx_bcast_bytes << 56) | ((fwstats.tx_bcast_bytes << 40) & 71776119061217280ULL)) | ((fwstats.tx_bcast_bytes << 24) & 280375465082880ULL)) | ((fwstats.tx_bcast_bytes << 8) & 1095216660480ULL)) | ((fwstats.tx_bcast_bytes >> 8) & 4278190080ULL)) | ((fwstats.tx_bcast_bytes >> 24) & 16711680ULL)) | ((fwstats.tx_bcast_bytes >> 40) & 65280ULL)) | (fwstats.tx_bcast_bytes >> 56); else 
                                                                    
#line 1396 
                                                                    s->tx_bcast_bytes = __fswab64(fwstats.tx_bcast_bytes);
  
#line 1397 
  if (0 != 0) 
#line 1397 
              s->tx_bcast_frames = (((((((fwstats.tx_bcast_frames << 56) | ((fwstats.tx_bcast_frames << 40) & 71776119061217280ULL)) | ((fwstats.tx_bcast_frames << 24) & 280375465082880ULL)) | ((fwstats.tx_bcast_frames << 8) & 1095216660480ULL)) | ((fwstats.tx_bcast_frames >> 8) & 4278190080ULL)) | ((fwstats.tx_bcast_frames >> 24) & 16711680ULL)) | ((fwstats.tx_bcast_frames >> 40) & 65280ULL)) | (fwstats.tx_bcast_frames >> 56); else 
                                                                    
#line 1397 
                                                                    s->tx_bcast_frames = __fswab64(fwstats.tx_bcast_frames);
  
#line 1398 
  if (0 != 0) 
#line 1398 
              s->tx_mcast_bytes = (((((((fwstats.tx_mcast_bytes << 56) | ((fwstats.tx_mcast_bytes << 40) & 71776119061217280ULL)) | ((fwstats.tx_mcast_bytes << 24) & 280375465082880ULL)) | ((fwstats.tx_mcast_bytes << 8) & 1095216660480ULL)) | ((fwstats.tx_mcast_bytes >> 8) & 4278190080ULL)) | ((fwstats.tx_mcast_bytes >> 24) & 16711680ULL)) | ((fwstats.tx_mcast_bytes >> 40) & 65280ULL)) | (fwstats.tx_mcast_bytes >> 56); else 
                                                                    
#line 1398 
                                                                    s->tx_mcast_bytes = __fswab64(fwstats.tx_mcast_bytes);
  
#line 1399 
  if (0 != 0) 
#line 1399 
              s->tx_mcast_frames = (((((((fwstats.tx_mcast_frames << 56) | ((fwstats.tx_mcast_frames << 40) & 71776119061217280ULL)) | ((fwstats.tx_mcast_frames << 24) & 280375465082880ULL)) | ((fwstats.tx_mcast_frames << 8) & 1095216660480ULL)) | ((fwstats.tx_mcast_frames >> 8) & 4278190080ULL)) | ((fwstats.tx_mcast_frames >> 24) & 16711680ULL)) | ((fwstats.tx_mcast_frames >> 40) & 65280ULL)) | (fwstats.tx_mcast_frames >> 56); else 
                                                                    
#line 1399 
                                                                    s->tx_mcast_frames = __fswab64(fwstats.tx_mcast_frames);
  
#line 1400 
  if (0 != 0) 
#line 1400 
              s->tx_ucast_bytes = (((((((fwstats.tx_ucast_bytes << 56) | ((fwstats.tx_ucast_bytes << 40) & 71776119061217280ULL)) | ((fwstats.tx_ucast_bytes << 24) & 280375465082880ULL)) | ((fwstats.tx_ucast_bytes << 8) & 1095216660480ULL)) | ((fwstats.tx_ucast_bytes >> 8) & 4278190080ULL)) | ((fwstats.tx_ucast_bytes >> 24) & 16711680ULL)) | ((fwstats.tx_ucast_bytes >> 40) & 65280ULL)) | (fwstats.tx_ucast_bytes >> 56); else 
                                                                    
#line 1400 
                                                                    s->tx_ucast_bytes = __fswab64(fwstats.tx_ucast_bytes);
  
#line 1401 
  if (0 != 0) 
#line 1401 
              s->tx_ucast_frames = (((((((fwstats.tx_ucast_frames << 56) | ((fwstats.tx_ucast_frames << 40) & 71776119061217280ULL)) | ((fwstats.tx_ucast_frames << 24) & 280375465082880ULL)) | ((fwstats.tx_ucast_frames << 8) & 1095216660480ULL)) | ((fwstats.tx_ucast_frames >> 8) & 4278190080ULL)) | ((fwstats.tx_ucast_frames >> 24) & 16711680ULL)) | ((fwstats.tx_ucast_frames >> 40) & 65280ULL)) | (fwstats.tx_ucast_frames >> 56); else 
                                                                    
#line 1401 
                                                                    s->tx_ucast_frames = __fswab64(fwstats.tx_ucast_frames);
  
#line 1402 
  if (0 != 0) 
#line 1402 
              s->tx_drop_frames = (((((((fwstats.tx_drop_frames << 56) | ((fwstats.tx_drop_frames << 40) & 71776119061217280ULL)) | ((fwstats.tx_drop_frames << 24) & 280375465082880ULL)) | ((fwstats.tx_drop_frames << 8) & 1095216660480ULL)) | ((fwstats.tx_drop_frames >> 8) & 4278190080ULL)) | ((fwstats.tx_drop_frames >> 24) & 16711680ULL)) | ((fwstats.tx_drop_frames >> 40) & 65280ULL)) | (fwstats.tx_drop_frames >> 56); else 
                                                                    
#line 1402 
                                                                    s->tx_drop_frames = __fswab64(fwstats.tx_drop_frames);
  
#line 1403 
  if (0 != 0) 
#line 1403 
              s->tx_offload_bytes = (((((((fwstats.tx_offload_bytes << 56) | ((fwstats.tx_offload_bytes << 40) & 71776119061217280ULL)) | ((fwstats.tx_offload_bytes << 24) & 280375465082880ULL)) | ((fwstats.tx_offload_bytes << 8) & 1095216660480ULL)) | ((fwstats.tx_offload_bytes >> 8) & 4278190080ULL)) | ((fwstats.tx_offload_bytes >> 24) & 16711680ULL)) | ((fwstats.tx_offload_bytes >> 40) & 65280ULL)) | (fwstats.tx_offload_bytes >> 56); else 
                                                                    
#line 1403 
                                                                    s->tx_offload_bytes = __fswab64(fwstats.tx_offload_bytes);
  
#line 1404 
  if (0 != 0) 
#line 1404 
              s->tx_offload_frames = (((((((fwstats.tx_offload_frames << 56) | ((fwstats.tx_offload_frames << 40) & 71776119061217280ULL)) | ((fwstats.tx_offload_frames << 24) & 280375465082880ULL)) | ((fwstats.tx_offload_frames << 8) & 1095216660480ULL)) | ((fwstats.tx_offload_frames >> 8) & 4278190080ULL)) | ((fwstats.tx_offload_frames >> 24) & 16711680ULL)) | ((fwstats.tx_offload_frames >> 40) & 65280ULL)) | (fwstats.tx_offload_frames >> 56); else 
                                                                    
#line 1404 
                                                                    s->tx_offload_frames = __fswab64(fwstats.tx_offload_frames);
  
#line 1406 
  if (0 != 0) 
#line 1406 
              s->rx_bcast_bytes = (((((((fwstats.rx_bcast_bytes << 56) | ((fwstats.rx_bcast_bytes << 40) & 71776119061217280ULL)) | ((fwstats.rx_bcast_bytes << 24) & 280375465082880ULL)) | ((fwstats.rx_bcast_bytes << 8) & 1095216660480ULL)) | ((fwstats.rx_bcast_bytes >> 8) & 4278190080ULL)) | ((fwstats.rx_bcast_bytes >> 24) & 16711680ULL)) | ((fwstats.rx_bcast_bytes >> 40) & 65280ULL)) | (fwstats.rx_bcast_bytes >> 56); else 
                                                                    
#line 1406 
                                                                    s->rx_bcast_bytes = __fswab64(fwstats.rx_bcast_bytes);
  
#line 1407 
  if (0 != 0) 
#line 1407 
              s->rx_bcast_frames = (((((((fwstats.rx_bcast_frames << 56) | ((fwstats.rx_bcast_frames << 40) & 71776119061217280ULL)) | ((fwstats.rx_bcast_frames << 24) & 280375465082880ULL)) | ((fwstats.rx_bcast_frames << 8) & 1095216660480ULL)) | ((fwstats.rx_bcast_frames >> 8) & 4278190080ULL)) | ((fwstats.rx_bcast_frames >> 24) & 16711680ULL)) | ((fwstats.rx_bcast_frames >> 40) & 65280ULL)) | (fwstats.rx_bcast_frames >> 56); else 
                                                                    
#line 1407 
                                                                    s->rx_bcast_frames = __fswab64(fwstats.rx_bcast_frames);
  
#line 1408 
  if (0 != 0) 
#line 1408 
              s->rx_mcast_bytes = (((((((fwstats.rx_mcast_bytes << 56) | ((fwstats.rx_mcast_bytes << 40) & 71776119061217280ULL)) | ((fwstats.rx_mcast_bytes << 24) & 280375465082880ULL)) | ((fwstats.rx_mcast_bytes << 8) & 1095216660480ULL)) | ((fwstats.rx_mcast_bytes >> 8) & 4278190080ULL)) | ((fwstats.rx_mcast_bytes >> 24) & 16711680ULL)) | ((fwstats.rx_mcast_bytes >> 40) & 65280ULL)) | (fwstats.rx_mcast_bytes >> 56); else 
                                                                    
#line 1408 
                                                                    s->rx_mcast_bytes = __fswab64(fwstats.rx_mcast_bytes);
  
#line 1409 
  if (0 != 0) 
#line 1409 
              s->rx_mcast_frames = (((((((fwstats.rx_mcast_frames << 56) | ((fwstats.rx_mcast_frames << 40) & 71776119061217280ULL)) | ((fwstats.rx_mcast_frames << 24) & 280375465082880ULL)) | ((fwstats.rx_mcast_frames << 8) & 1095216660480ULL)) | ((fwstats.rx_mcast_frames >> 8) & 4278190080ULL)) | ((fwstats.rx_mcast_frames >> 24) & 16711680ULL)) | ((fwstats.rx_mcast_frames >> 40) & 65280ULL)) | (fwstats.rx_mcast_frames >> 56); else 
                                                                    
#line 1409 
                                                                    s->rx_mcast_frames = __fswab64(fwstats.rx_mcast_frames);
  
#line 1410 
  if (0 != 0) 
#line 1410 
              s->rx_ucast_bytes = (((((((fwstats.rx_ucast_bytes << 56) | ((fwstats.rx_ucast_bytes << 40) & 71776119061217280ULL)) | ((fwstats.rx_ucast_bytes << 24) & 280375465082880ULL)) | ((fwstats.rx_ucast_bytes << 8) & 1095216660480ULL)) | ((fwstats.rx_ucast_bytes >> 8) & 4278190080ULL)) | ((fwstats.rx_ucast_bytes >> 24) & 16711680ULL)) | ((fwstats.rx_ucast_bytes >> 40) & 65280ULL)) | (fwstats.rx_ucast_bytes >> 56); else 
                                                                    
#line 1410 
                                                                    s->rx_ucast_bytes = __fswab64(fwstats.rx_ucast_bytes);
  
#line 1411 
  if (0 != 0) 
#line 1411 
              s->rx_ucast_frames = (((((((fwstats.rx_ucast_frames << 56) | ((fwstats.rx_ucast_frames << 40) & 71776119061217280ULL)) | ((fwstats.rx_ucast_frames << 24) & 280375465082880ULL)) | ((fwstats.rx_ucast_frames << 8) & 1095216660480ULL)) | ((fwstats.rx_ucast_frames >> 8) & 4278190080ULL)) | ((fwstats.rx_ucast_frames >> 24) & 16711680ULL)) | ((fwstats.rx_ucast_frames >> 40) & 65280ULL)) | (fwstats.rx_ucast_frames >> 56); else 
                                                                    
#line 1411 
                                                                    s->rx_ucast_frames = __fswab64(fwstats.rx_ucast_frames);
  
#line 1413 
  if (0 != 0) 
#line 1413 
              s->rx_err_frames = (((((((fwstats.rx_err_frames << 56) | ((fwstats.rx_err_frames << 40) & 71776119061217280ULL)) | ((fwstats.rx_err_frames << 24) & 280375465082880ULL)) | ((fwstats.rx_err_frames << 8) & 1095216660480ULL)) | ((fwstats.rx_err_frames >> 8) & 4278190080ULL)) | ((fwstats.rx_err_frames >> 24) & 16711680ULL)) | ((fwstats.rx_err_frames >> 40) & 65280ULL)) | (fwstats.rx_err_frames >> 56); else 
                                                                    
#line 1413 
                                                                    s->rx_err_frames = __fswab64(fwstats.rx_err_frames);
  
#line 1415 
  __retres = 0;
  return_label: 
#line 1415 
                return __retres;
}


#line 1428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_iq_free(struct adapter *adapter, unsigned int iqtype, unsigned int iqid, unsigned int fl0id, unsigned int fl1id)
{
  struct fw_iq_cmd cmd;
  int tmp_3;
  
#line 1433 
  memset((void *)(& cmd),0,64UL);
  
#line 1434 
  cmd.op_to_vfn = 36880U;
  
#line 1437 
  cmd.alloc_to_len16 = 67108928U;
  
#line 1439 
  if (0 != 0) 
#line 1439 
              cmd.type_to_iqandstindex = (iqtype << 29) >> 24; else 
#line 1440 
                                                                    cmd.type_to_iqandstindex = __fswab32(iqtype << 29);
  
#line 1442 
  if (0 != 0) 
#line 1442 
              cmd.iqid = (unsigned short)(((int)((unsigned short)iqid) << 8) | ((int)((unsigned short)iqid) >> 8)); else 
                                                                    
#line 1442 
                                                                    cmd.iqid = __fswab16((unsigned short)((int)((unsigned short)iqid)));
  
#line 1443 
  if (0 != 0) 
#line 1443 
              cmd.fl0id = (unsigned short)(((int)((unsigned short)fl0id) << 8) | ((int)((unsigned short)fl0id) >> 8)); else 
                                                                    
#line 1443 
                                                                    cmd.fl0id = __fswab16((unsigned short)((int)((unsigned short)fl0id)));
  
#line 1444 
  if (0 != 0) 
#line 1444 
              cmd.fl1id = (unsigned short)(((int)((unsigned short)fl1id) << 8) | ((int)((unsigned short)fl1id) >> 8)); else 
                                                                    
#line 1444 
                                                                    cmd.fl1id = __fswab16((unsigned short)((int)((unsigned short)fl1id)));
  
#line 1445 
  tmp_3 = t4vf_wr_mbox(adapter,(void const *)(& cmd),64,(void *)0);
  
#line 1445 
  return tmp_3;
}


#line 1455  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_eth_eq_free(struct adapter *adapter, unsigned int eqid)
{
  struct fw_eq_eth_cmd cmd;
  int tmp_0;
  
#line 1459 
  memset((void *)(& cmd),0,48UL);
  
#line 1460 
  cmd.op_to_vfn = 36882U;
  
#line 1463 
  cmd.alloc_to_len16 = 50331712U;
  
#line 1465 
  if (0 != 0) 
#line 1465 
              cmd.eqid_pkd = (((eqid << 24) | ((eqid << 8) & 16711680U)) | ((eqid >> 8) & 65280U)) | (eqid >> 24); else 
                                                                    
#line 1465 
                                                                    cmd.eqid_pkd = __fswab32(eqid);
  
#line 1466 
  tmp_0 = t4vf_wr_mbox(adapter,(void const *)(& cmd),48,(void *)0);
  
#line 1466 
  return tmp_0;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_handle_fw_rpl(struct adapter *adapter, __be64 const *rpl)
{
  int __retres;
  int tmp_0;
  
#line 1478 
  struct fw_cmd_hdr const *cmd_hdr = (struct fw_cmd_hdr const *)rpl;
  
#line 1479 
  if (0 != 0) 
#line 1479 
              tmp_0 = (int)((unsigned char)(((((cmd_hdr->hi << 24) | ((cmd_hdr->hi << 8) & 16711680U)) | ((cmd_hdr->hi >> 8) & 65280U)) | (cmd_hdr->hi >> 24)) >> 24));
  else {
    __u32 tmp;
    
#line 1479 
    tmp = __fswab32(cmd_hdr->hi);
    
#line 1479 
    tmp_0 = (int)((unsigned char)(tmp >> 24));
  }
  
#line 1479 
  u8 opcode = (unsigned char)tmp_0;
  
#line 1481 
  switch ((int)opcode) {
    case 27: 
#line 1482 
    ;
    {
      u32 stat;
      u32 mod;
      int action;
      int port_id;
      int link_ok;
      int speed;
      int fc;
      int pidx;
      unsigned int tmp_2;
      unsigned int tmp_4;
      
#line 1486 
      struct fw_port_cmd const *port_cmd = (struct fw_port_cmd const *)rpl;
      
#line 1494 
      if (0 != 0) 
#line 1494 
                  tmp_2 = ((((port_cmd->action_to_len16 << 24) | ((port_cmd->action_to_len16 << 8) & 16711680U)) | ((port_cmd->action_to_len16 >> 8) & 65280U)) | (port_cmd->action_to_len16 >> 24)) >> 16;
      else {
        __u32 tmp_1;
        
#line 1494 
        tmp_1 = __fswab32(port_cmd->action_to_len16);
        
#line 1494 
        tmp_2 = tmp_1 >> 16;
      }
      
#line 1494 
      action = (int)tmp_2;
      
#line 1496 
      if (action != 3) {
        
#line 1497 
        dev_err((struct device const *)adapter->pdev_dev,"Unknown firmware PORT reply action %x\n",action);
        
#line 1500 
        goto ldv_47188;
      }
      else ;
      
#line 1503 
      if (0 != 0) 
#line 1503 
                  tmp_4 = ((((port_cmd->op_to_portid << 24) | ((port_cmd->op_to_portid << 8) & 16711680U)) | ((port_cmd->op_to_portid >> 8) & 65280U)) | (port_cmd->op_to_portid >> 24)) & 15U;
      else {
        __u32 tmp_3;
        
#line 1503 
        tmp_3 = __fswab32(port_cmd->op_to_portid);
        
#line 1503 
        tmp_4 = tmp_3 & 15U;
      }
      
#line 1503 
      port_id = (int)tmp_4;
      
#line 1506 
      if (0 != 0) 
#line 1506 
                  stat = (((port_cmd->u.info.lstatus_to_modtype << 24) | ((port_cmd->u.info.lstatus_to_modtype << 8) & 16711680U)) | ((port_cmd->u.info.lstatus_to_modtype >> 8) & 65280U)) | (port_cmd->u.info.lstatus_to_modtype >> 24); else 
                                                                    
#line 1506 
                                                                    stat = __fswab32(port_cmd->u.info.lstatus_to_modtype);
      
#line 1507 
      link_ok = stat < (u32)0;
      
#line 1508 
      speed = 0;
      
#line 1509 
      fc = 0;
      
#line 1510 
      if ((stat & 4194304U) != 0U) 
#line 1511 
                                   fc |= 1; else ;
      
#line 1512 
      if ((stat & 8388608U) != 0U) 
#line 1513 
                                   fc |= 2; else ;
      
#line 1514 
      if ((stat & 16777216U) != 0U) 
#line 1515 
                                    speed = 100;
      else 
        
#line 1516 
        if ((stat & 33554432U) != 0U) 
#line 1517 
                                      speed = 1000;
        else 
          
#line 1518 
          if ((stat & 134217728U) != 0U) 
#line 1519 
                                         speed = 10000;
          else 
            
#line 1520 
            if ((stat & 268435456U) != 0U) 
#line 1521 
                                           speed = 40000; else ;
      
#line 1529 
      pidx = 0;
      
#line 1529 
      goto ldv_47193;
      ldv_47192: 
#line 1530 
      ;
      {
        struct link_config *lc;
        
#line 1530 
        struct port_info *pi = adap2pinfo(adapter,pidx);
        
#line 1533 
        if ((int)pi->port_id != port_id) 
#line 1534 
                                         goto ldv_47191; else ;
        
#line 1536 
        lc = & pi->link_cfg;
        
#line 1538 
        mod = stat & 31U;
        
#line 1539 
        if ((unsigned int)pi->mod_type != mod) {
          
#line 1540 
          pi->mod_type = (unsigned char)mod;
          
#line 1541 
          t4vf_os_portmod_changed(adapter,pidx);
        }
        else ;
        
#line 1544 
        if (((int)lc->link_ok != link_ok || (int)lc->speed != speed) || (int)lc->fc != fc) {
          int tmp_8;
          
#line 1547 
          lc->link_ok = (unsigned char)link_ok;
          
#line 1548 
          lc->speed = (unsigned short)speed;
          
#line 1549 
          lc->fc = (unsigned char)fc;
          
#line 1551 
          if (0 != 0) 
#line 1551 
                      tmp_8 = (int)((unsigned short)(((int)port_cmd->u.info.pcap << 8) | ((int)port_cmd->u.info.pcap >> 8)));
          else {
            __u16 tmp_7;
            
#line 1551 
            tmp_7 = __fswab16((unsigned short)((int)port_cmd->u.info.pcap));
            
#line 1551 
            tmp_8 = (int)tmp_7;
          }
          
#line 1550 
          lc->supported = (unsigned int)tmp_8;
          
#line 1552 
          t4vf_os_link_changed(adapter,pidx,link_ok);
        }
        else ;
      }
      ldv_47191: 
#line 1555 
      ;
      
#line 1529 
      pidx += 1;
      ldv_47193: 
#line 1530 
      ;
      
#line 1529 
      if ((int)adapter->params.nports > pidx) 
#line 1531 
                                              goto ldv_47192; else 
#line 1534 
                                                                   goto ldv_47194;
      ldv_47194: 
#line 1535 
      ;
      
#line 1555 
      goto ldv_47188;
    }
    default: 
#line 1558 
    ;
    
#line 1559 
    dev_err((struct device const *)adapter->pdev_dev,"Unknown firmware reply %X\n",(int)opcode);
  }
  ldv_47188: 
#line 1562 
  ;
  
#line 1562 
  __retres = 0;
  
#line 1562 
  return __retres;
}


#line 1567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_hw.c"
int t4vf_prep_adapter(struct adapter *adapter)
{
  int __retres;
  int err;
  unsigned int chipid;
  
#line 1574 
  err = t4vf_wait_dev_ready(adapter);
  
#line 1575 
  if (err != 0) {
    
#line 1576 
    __retres = err;
    
#line 1576 
    goto return_label;
  }
  else ;
  
#line 1581 
  adapter->params.nports = (unsigned char)1U;
  
#line 1582 
  adapter->params.vfres.pmask = 1U;
  
#line 1583 
  adapter->params.vpd.cclk = 50000U;
  
#line 1585 
  adapter->params.chip = (enum chip_type)0;
  
#line 1586 
  switch ((int)(adapter->pdev)->device >> 12) {
    u32 tmp;
    u32 tmp_0;
    case 4: 
#line 1587 
    ;
    
#line 1588 
    adapter->params.chip = (enum chip_type)((unsigned int)adapter->params.chip | 64U);
    
#line 1589 
    adapter->params.arch.sge_fl_db = 16384U;
    
#line 1590 
    adapter->params.arch.mps_tcam_size = (unsigned short)336U;
    
#line 1592 
    goto ldv_47202;
    case 5: 
#line 1594 
    ;
    
#line 1595 
    tmp = t4_read_reg(adapter,4U);
    
#line 1595 
    chipid = tmp & 15U;
    
#line 1596 
    adapter->params.chip = (enum chip_type)(((unsigned int)adapter->params.chip | chipid) | 80U);
    
#line 1597 
    adapter->params.arch.sge_fl_db = 24576U;
    
#line 1598 
    adapter->params.arch.mps_tcam_size = (unsigned short)512U;
    
#line 1600 
    goto ldv_47202;
    case 6: 
#line 1602 
    ;
    
#line 1603 
    tmp_0 = t4_read_reg(adapter,4U);
    
#line 1603 
    chipid = tmp_0 & 15U;
    
#line 1604 
    adapter->params.chip = (enum chip_type)(((unsigned int)adapter->params.chip | chipid) | 96U);
    
#line 1605 
    adapter->params.arch.sge_fl_db = 0U;
    
#line 1606 
    adapter->params.arch.mps_tcam_size = (unsigned short)512U;
    
#line 1608 
    goto ldv_47202;
  }
  ldv_47202: 
#line 1611 
  ;
  
#line 1611 
  __retres = 0;
  return_label: 
#line 1611 
                return __retres;
}

void *__builtin_memcpy(void *, void const *, unsigned long);


#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compiler.h"
__inline static void __read_once_size(void const volatile *p, void *res, int size)
{
  
#line 203 
  switch (size) {
    case 1: 
#line 204 
    ;
    
#line 204 
    *((__u8 *)res) = *((__u8 volatile *)p);
    
#line 204 
    goto ldv_1185;
    case 2: 
#line 205 
    ;
    
#line 205 
    *((__u16 *)res) = *((__u16 volatile *)p);
    
#line 205 
    goto ldv_1185;
    case 4: 
#line 206 
    ;
    
#line 206 
    *((__u32 *)res) = *((__u32 volatile *)p);
    
#line 206 
    goto ldv_1185;
    case 8: 
#line 207 
    ;
    
#line 207 
    *((__u64 *)res) = *((__u64 volatile *)p);
    
#line 207 
    goto ldv_1185;
    default: 
#line 208 
    ;
    
#line 209 
    ldv_inline_asm();
    
#line 210 
    __builtin_memcpy(res,(void const *)p,(unsigned long)size);
    
#line 211 
    ldv_inline_asm();
  }
  ldv_1185: 
#line 213 
  ;
  
#line 214 
  return;
}


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int variable_test_bit(long nr, unsigned long const volatile *addr)
{
  int oldbit;
  
#line 317 
  ldv_inline_asm();
  
#line 323 
  return oldbit;
}


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/arch_hweight.h"
__inline static unsigned long __arch_hweight64(__u64 w)
{
  
#line 47 
  unsigned long res = 0UL;
  
#line 48 
  ldv_inline_asm();
  
#line 58 
  return res;
}


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitops.h"
__inline static unsigned long hweight_long(unsigned long w)
{
  unsigned long tmp_0;
  
#line 80 
  if (0 != 0) 
#line 80 
              tmp_0 = (unsigned long)((((unsigned int)((((((((((unsigned long long)w & 1ULL) != 0ULL) + (((unsigned long long)w & 2ULL) != 0ULL)) + (((unsigned long long)w & 4ULL) != 0ULL)) + (((unsigned long long)w & 8ULL) != 0ULL)) + (((unsigned long long)w & 16ULL) != 0ULL)) + (((unsigned long long)w & 32ULL) != 0ULL)) + (((unsigned long long)w & 64ULL) != 0ULL)) + (((unsigned long long)w & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 8) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 8) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 128ULL) != 0ULL))) + ((unsigned int)((((((((((unsigned long long)(w >> 16) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 16) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 24) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 24) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 128ULL) != 0ULL)))) + (((unsigned int)((((((((((unsigned long long)(w >> 32) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 32) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 40) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 40) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 128ULL) != 0ULL))) + ((unsigned int)((((((((((unsigned long long)(w >> 48) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 48) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 56) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 56) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 128ULL) != 0ULL))))); else 
                                                                    
#line 80 
                                                                    tmp_0 = __arch_hweight64((unsigned long long)w);
  
#line 80 
  return tmp_0;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
int snprintf(char *, size_t, char const * , ...);


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
size_t strlcpy(char *, char const *, size_t);


#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
int __bitmap_weight(unsigned long const *, unsigned int);


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
__inline static void bitmap_zero(unsigned long *dst, unsigned int nbits)
{
  
#line 183 
  if (0 != 0 && nbits <= 64U) 
#line 184 
                              *dst = 0UL;
  else {
    
#line 186 
    unsigned int len = (unsigned int)(((unsigned long)nbits + 63UL) / 64UL) * 8U;
    
#line 187 
    memset((void *)dst,0,(unsigned long)len);
  }
  
#line 189 
  return;
}


#line 298  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
__inline static int bitmap_weight(unsigned long const *src, unsigned int nbits)
{
  int __retres;
  int tmp_0;
  
#line 300 
  if (0 != 0 && nbits <= 64U) {
    unsigned long tmp;
    
#line 301 
    tmp = hweight_long(*src & (18446744073709551615UL >> (- nbits & 63U)));
    
#line 301 
    __retres = (int)tmp;
    
#line 301 
    goto return_label;
  }
  else ;
  
#line 302 
  tmp_0 = __bitmap_weight(src,nbits);
  
#line 302 
  __retres = tmp_0;
  return_label: 
#line 302 
                return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
extern int nr_cpu_ids;


#line 89 
extern struct cpumask const * const cpu_online_mask;


#line 474  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
__inline static unsigned int cpumask_weight(struct cpumask const *srcp)
{
  unsigned int __retres;
  int tmp;
  
#line 476 
  tmp = bitmap_weight((unsigned long const *)(& srcp->bits),(unsigned int)nr_cpu_ids);
  
#line 476 
  __retres = (unsigned int)tmp;
  
#line 476 
  return __retres;
}


#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
static bool IS_ERR_OR_NULL(void const *ptr);


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_0(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_80(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_0(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 407 
static void ldv_spin_unlock_81(spinlock_t *lock);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err_or_null(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
int debug_lockdep_rcu_enabled(void);


#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
void iounmap(void volatile *);


#line 329 
void *ioremap_wc(resource_size_t, unsigned long);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
static int ldv_seq_open_82(struct file *ldv_func_arg1, struct seq_operations const *ldv_func_arg2);


#line 120 
static int ldv_seq_open_83(struct file *ldv_func_arg1, struct seq_operations const *ldv_func_arg2);


#line 124 
static int ldv_seq_open_84(struct file *ldv_func_arg1, struct seq_operations const *ldv_func_arg2);


#line 126 
ssize_t seq_read(struct file *, char *, size_t, loff_t *);


#line 127 
loff_t seq_lseek(struct file *, loff_t, int);


#line 128 
int seq_release(struct inode *, struct file *);


#line 130 
int seq_putc(struct seq_file *, char);


#line 131 
int seq_puts(struct seq_file *, char const *);


#line 134 
int seq_printf(struct seq_file *, char const * , ...);


#line 143 
int single_open(struct file *, int (*)(struct seq_file *, void *), void *);


#line 145 
int single_release(struct inode *, struct file *);


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 1089 
void _dev_info(struct device const *, char const * , ...);


#line 581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kzalloc(size_t size, gfp_t flags);


#line 951  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
int pci_enable_device(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 972 
void pci_clear_master(struct pci_dev *);


#line 1094 
int pci_request_regions(struct pci_dev *, char const *);


#line 1096 
void pci_release_regions(struct pci_dev *);


#line 1146 
static int ldv___pci_register_driver_93(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_95(struct pci_driver *ldv_func_arg1);


#line 1212 
void pci_disable_msi(struct pci_dev *);


#line 1216 
void pci_disable_msix(struct pci_dev *);


#line 1219 
int pci_enable_msi_range(struct pci_dev *, int, int);


#line 1220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_enable_msi_exact(struct pci_dev *dev, int nvec)
{
  int __retres;
  
#line 1222 
  int rc = pci_enable_msi_range(dev,nvec,nvec);
  
#line 1223 
  if (rc < 0) {
    
#line 1224 
    __retres = rc;
    
#line 1224 
    goto return_label;
  }
  else ;
  
#line 1225 
  __retres = 0;
  return_label: 
#line 1225 
                return __retres;
}


#line 1227 
int pci_enable_msix_range(struct pci_dev *, struct msix_entry *, int, int);


#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
int dma_supported(struct device *, u64);


#line 61 
int dma_set_mask(struct device *, u64);


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_coherent_mask(struct device *dev, u64 mask)
{
  int __retres;
  int tmp;
  
#line 103 
  tmp = dma_supported(dev,mask);
  
#line 103 
  if (tmp == 0) {
    
#line 104 
    __retres = -5;
    
#line 104 
    goto return_label;
  }
  else ;
  
#line 105 
  dev->coherent_dma_mask = mask;
  
#line 106 
  __retres = 0;
  return_label: 
#line 106 
                return __retres;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 115 
  tmp = dma_set_mask(& dev->dev,mask);
  
#line 115 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_consistent_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 120 
  tmp = dma_set_coherent_mask(& dev->dev,mask);
  
#line 120 
  return tmp;
}


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  
#line 1478 
  dev_set_drvdata(& pdev->dev,data);
  
#line 1479 
  return;
}


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static char const *pci_name(struct pci_dev const *pdev)
{
  char const *tmp;
  
#line 1486 
  tmp = dev_name(& pdev->dev);
  
#line 1486 
  return tmp;
}


#line 1666 
void *pci_ioremap_bar(struct pci_dev *, int);


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static void ethtool_cmd_speed_set(struct ethtool_cmd *ep, __u32 speed)
{
  
#line 117 
  ep->speed = (unsigned short)speed;
  
#line 118 
  ep->speed_hi = (unsigned short)(speed >> 16);
  
#line 119 
  return;
}


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
u32 ethtool_op_get_link(struct net_device *);


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_72(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 145 
static int ldv_request_irq_73(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 149 
static int ldv_request_irq_78(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 161 
static void ldv_free_irq_74(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 165 
static void ldv_free_irq_75(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 169 
static void ldv_free_irq_76(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 173 
static void ldv_free_irq_77(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 177 
static void ldv_free_irq_79(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void napi_disable(struct napi_struct *);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  int tmp;
  
#line 507 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 507 
  if ((long)(tmp == 0) != 0L) {
    
#line 509 
    ldv_inline_asm();
    
#line 507 
    ;
  }
  else ;
  
#line 509 
  ldv_inline_asm();
  
#line 509 
  set_bit(0L,(unsigned long volatile *)(& n->state));
  
#line 510 
  return;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 2205 
static void ldv_free_netdev_89(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_91(struct net_device *ldv_func_arg1);


#line 2531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_all_queues(struct net_device *dev)
{
  unsigned int i;
  
#line 2535 
  i = 0U;
  
#line 2535 
  goto ldv_44836;
  ldv_44835: 
#line 2536 
  ;
  {
    
#line 2536 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 2537 
    netif_tx_stop_queue(txq);
  }
  
#line 2535 
  i += 1U;
  ldv_44836: 
#line 2536 
  ;
  
#line 2535 
  if (dev->num_tx_queues > i) 
#line 2537 
                              goto ldv_44835; else 
#line 2540 
                                                   goto ldv_44837;
  ldv_44837: 
#line 2541 
  ;
  
#line 2542 
  return;
}


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2582 
void netif_tx_stop_all_queues(struct net_device *);


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 2867 
int netif_set_real_num_tx_queues(struct net_device *, unsigned int);


#line 2870 
int netif_set_real_num_rx_queues(struct net_device *, unsigned int);


#line 3038  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_carrier_ok(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 3040 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& dev->state));
  
#line 3040 
  __retres = (_Bool)(tmp == 0);
  
#line 3040 
  return __retres;
}


#line 3047 
void netif_carrier_on(struct net_device *);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3355 
static int ldv_register_netdev_87(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_88(struct net_device *ldv_func_arg1);


#line 3364 
static void ldv_unregister_netdev_90(struct net_device *ldv_func_arg1);


#line 3368 
static void ldv_unregister_netdev_92(struct net_device *ldv_func_arg1);


#line 3834 
void netdev_info(struct net_device const *, char const * , ...);


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
int eth_validate_addr(struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_86(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 const *addr)
{
  bool __retres;
  int tmp_3;
  int tmp_0;
  bool tmp;
  
#line 190 
  tmp = is_multicast_ether_addr(addr);
  
#line 190 
  if (tmp) 
#line 190 
           tmp_0 = 0; else 
#line 190 
                           tmp_0 = 1;
  
#line 190 
  if (tmp_0) {
    int tmp_2;
    bool tmp_1;
    
#line 190 
    tmp_1 = is_zero_ether_addr(addr);
    
#line 190 
    if (tmp_1) 
#line 190 
               tmp_2 = 0; else 
#line 190 
                               tmp_2 = 1;
    
#line 190 
    if (tmp_2) 
#line 190 
               tmp_3 = 1; else 
#line 190 
                               tmp_3 = 0;
  }
  else 
#line 190 
       tmp_3 = 0;
  
#line 190 
  __retres = (_Bool)(tmp_3 != 0);
  
#line 190 
  return __retres;
}


#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugfs.h"
static struct dentry *ldv_debugfs_create_file_85(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 62 
struct dentry *debugfs_create_dir(char const *, struct dentry *);


#line 75 
static void ldv_debugfs_remove_94(struct dentry *ldv_func_arg1);


#line 79 
static void ldv_debugfs_remove_96(struct dentry *ldv_func_arg1);


#line 81 
void debugfs_remove_recursive(struct dentry *);


#line 495  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/adapter.h"
__inline static struct port_info *netdev2pinfo(struct net_device const *dev)
{
  struct port_info *tmp;
  
#line 497 
  tmp = (struct port_info *)netdev_priv(dev);
  
#line 497 
  return tmp;
}


#line 518  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/adapter.h"
__inline static struct adapter *netdev2adap(struct net_device const *dev)
{
  struct adapter *__retres;
  struct port_info *tmp;
  
#line 520 
  tmp = netdev2pinfo(dev);
  
#line 520 
  __retres = tmp->adapter;
  
#line 520 
  return __retres;
}


#line 244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_common.h"
__inline static bool is_x_10g_port(struct link_config const *lc)
{
  bool __retres;
  
#line 246 
  __retres = (_Bool)(((lc->supported & 8U) != 0U || (lc->supported & 16U) != 0U) != 0);
  
#line 246 
  return __retres;
}


#line 261  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/t4vf_common.h"
__inline static unsigned int core_ticks_to_us(struct adapter const *adapter, unsigned int ticks)
{
  unsigned int __retres;
  
#line 264 
  __retres = (ticks * 1000U) / adapter->params.vpd.cclk;
  
#line 264 
  return __retres;
}


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int dflt_msg_enable = 255;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int msi = 2;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static struct dentry *cxgb4vf_debugfs_root;

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
void t4vf_os_link_changed(struct adapter *adapter, int pidx, int link_ok)
{
  int tmp_0;
  bool tmp;
  
#line 146 
  struct net_device *dev = adapter->port[pidx];
  
#line 152 
  tmp = netif_running((struct net_device const *)dev);
  
#line 152 
  if (tmp) 
#line 152 
           tmp_0 = 0; else 
#line 152 
                           tmp_0 = 1;
  
#line 152 
  if (tmp_0) 
#line 153 
             goto return_label;
  else {
    bool tmp_1;
    
#line 152 
    tmp_1 = netif_carrier_ok((struct net_device const *)dev);
    
#line 152 
    ;
    
#line 152 
    if ((int)tmp_1 == link_ok) 
#line 153 
                               goto return_label; else ;
  }
  
#line 159 
  if (link_ok != 0) {
    char const *s;
    char const *fc;
    
#line 162 
    struct port_info const *pi = netdev_priv((struct net_device const *)dev);
    
#line 164 
    netif_carrier_on(dev);
    
#line 166 
    switch ((int)pi->link_cfg.speed) {
      case 40000: 
#line 167 
      ;
      
#line 168 
      s = "40Gbps";
      
#line 169 
      goto ldv_48840;
      case 10000: 
#line 171 
      ;
      
#line 172 
      s = "10Gbps";
      
#line 173 
      goto ldv_48840;
      case 1000: 
#line 175 
      ;
      
#line 176 
      s = "1000Mbps";
      
#line 177 
      goto ldv_48840;
      case 100: 
#line 179 
      ;
      
#line 180 
      s = "100Mbps";
      
#line 181 
      goto ldv_48840;
      default: 
#line 183 
      ;
      
#line 184 
      s = "unknown";
      
#line 185 
      goto ldv_48840;
    }
    ldv_48840: 
#line 188 
    ;
    
#line 188 
    switch ((int)pi->link_cfg.fc) {
      case 1: 
#line 189 
      ;
      
#line 190 
      fc = "RX";
      
#line 191 
      goto ldv_48846;
      case 2: 
#line 193 
      ;
      
#line 194 
      fc = "TX";
      
#line 195 
      goto ldv_48846;
      case 3: 
#line 197 
      ;
      
#line 198 
      fc = "RX/TX";
      
#line 199 
      goto ldv_48846;
      default: 
#line 201 
      ;
      
#line 202 
      fc = "no";
      
#line 203 
      goto ldv_48846;
    }
    ldv_48846: 
#line 206 
    ;
    
#line 206 
    netdev_info((struct net_device const *)dev,"link up, %s, full-duplex, %s PAUSE\n",s,fc);
  }
  else {
    
#line 208 
    netif_carrier_off(dev);
    
#line 209 
    netdev_info((struct net_device const *)dev,"link down\n");
  }
  return_label: 
#line 211 
                return;
}


#line 217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
void t4vf_os_portmod_changed(struct adapter *adapter, int pidx)
{
  
#line 219 
  char const * const mod_str[7U] = {(char const *)0, "LR", "SR", "ER", "passive DA", "active DA", "LRM"};
  
#line 222 
  struct net_device const *dev = (struct net_device const *)adapter->port[pidx];
  
#line 223 
  struct port_info const *pi = netdev_priv(dev);
  
#line 225 
  if ((unsigned int)pi->mod_type == 31U) 
#line 226 
                                         _dev_info((struct device const *)adapter->pdev_dev,"%s: port module unplugged\n",(char const *)(& dev->name));
  else 
    
#line 228 
    if ((unsigned int)pi->mod_type <= 6U) 
#line 229 
                                          _dev_info((struct device const *)adapter->pdev_dev,"%s: %s port module inserted\n",(char const *)(& dev->name),mod_str[(int)pi->mod_type]);
    else 
      
#line 231 
      if ((unsigned int)pi->mod_type == 30U) 
#line 232 
                                             _dev_info((struct device const *)adapter->pdev_dev,"%s: unsupported optical port ",(char const *)(& dev->name));
      else 
        
#line 234 
        if ((unsigned int)pi->mod_type == 29U) 
#line 235 
                                               _dev_info((struct device const *)adapter->pdev_dev,"%s: unknown port module inserted,",(char const *)(& dev->name));
        else 
          
#line 237 
          if ((unsigned int)pi->mod_type == 28U) 
#line 238 
                                                 _dev_info((struct device const *)adapter->pdev_dev,"%s: transceiver module error\n",(char const *)(& dev->name)); else 
                                                                    
#line 241 
                                                                    _dev_info((struct device const *)adapter->pdev_dev,"%s: unknown module type %d ",(char const *)(& dev->name),(int)pi->mod_type);
  
#line 242 
  return;
}


#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int link_start(struct net_device *dev)
{
  int ret;
  
#line 260 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 266 
  ret = t4vf_set_rxmode(pi->adapter,(unsigned int)pi->viid,(int)dev->mtu,-1,-1,-1,1,(_Bool)1);
  
#line 268 
  if (ret == 0) {
    
#line 269 
    ret = t4vf_change_mac(pi->adapter,(unsigned int)pi->viid,(int)pi->xact_addr_filt,(u8 const *)dev->dev_addr,(_Bool)1);
    
#line 271 
    if (ret >= 0) {
      
#line 272 
      pi->xact_addr_filt = (short)ret;
      
#line 273 
      ret = 0;
    }
    else ;
  }
  else ;
  
#line 282 
  if (ret == 0) 
#line 283 
                ret = t4vf_enable_vi(pi->adapter,(unsigned int)pi->viid,(_Bool)1,(_Bool)1); else ;
  
#line 284 
  return ret;
}


#line 290  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void name_msix_vecs(struct adapter *adapter)
{
  int pidx;
  
#line 292 
  int namelen = 21;
  
#line 298 
  snprintf((char *)(& adapter->msix_info[0].desc),(unsigned long)namelen,"%s-FWeventq",adapter->name);
  
#line 300 
  adapter->msix_info[0].desc[namelen] = (char)0;
  
#line 305 
  pidx = 0;
  
#line 305 
  goto ldv_48878;
  ldv_48877: 
#line 306 
  ;
  {
    int qs;
    int msi_0;
    
#line 306 
    struct net_device *dev = adapter->port[pidx];
    
#line 307 
    struct port_info const *pi = netdev_priv((struct net_device const *)dev);
    
#line 310 
    qs = 0;
    
#line 310 
    msi_0 = 1;
    
#line 310 
    goto ldv_48875;
    ldv_48874: 
#line 311 
    ;
    
#line 311 
    snprintf((char *)(& adapter->msix_info[msi_0].desc),(unsigned long)namelen,"%s-%d",(char *)(& dev->name),qs);
    
#line 313 
    adapter->msix_info[msi_0].desc[namelen] = (char)0;
    
#line 310 
    qs += 1;
    
#line 310 
    msi_0 += 1;
    ldv_48875: 
#line 311 
    ;
    
#line 310 
    if ((int)pi->nqsets > qs) 
#line 312 
                              goto ldv_48874; else 
#line 315 
                                                   goto ldv_48876;
    ldv_48876: 
#line 316 
    ;
  }
  
#line 305 
  pidx += 1;
  ldv_48878: 
#line 306 
  ;
  
#line 305 
  if ((int)adapter->params.nports > pidx) 
#line 307 
                                          goto ldv_48877; else 
#line 310 
                                                               goto ldv_48879;
  ldv_48879: 
#line 311 
  ;
  
#line 312 
  return;
}


#line 321  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int request_msix_queue_irqs(struct adapter *adapter)
{
  int __retres;
  int rxq;
  int msi_0;
  int err;
  
#line 323 
  struct sge *s = & adapter->sge;
  
#line 329 
  err = ldv_request_irq_72((unsigned int)adapter->msix_info[0].vec,& t4vf_sge_intr_msix,0UL,(char const *)(& adapter->msix_info[0].desc),(void *)(& s->fw_evtq));
  
#line 331 
  if (err != 0) {
    
#line 332 
    __retres = err;
    
#line 332 
    goto return_label;
  }
  else ;
  
#line 337 
  msi_0 = 1;
  
#line 338 
  rxq = 0;
  
#line 338 
  goto ldv_48889;
  ldv_48888: 
#line 339 
  ;
  
#line 339 
  err = ldv_request_irq_73((unsigned int)adapter->msix_info[msi_0].vec,& t4vf_sge_intr_msix,0UL,(char const *)(& adapter->msix_info[msi_0].desc),(void *)(& s->ethrxq[rxq].rspq));
  
#line 343 
  if (err != 0) 
#line 344 
                goto err_free_irqs; else ;
  
#line 345 
  msi_0 += 1;
  
#line 338 
  rxq += 1;
  ldv_48889: 
#line 339 
  ;
  
#line 338 
  if ((int)s->ethqsets > rxq) 
#line 340 
                              goto ldv_48888; else 
#line 343 
                                                   goto ldv_48890;
  ldv_48890: 
#line 344 
  ;
  
#line 347 
  __retres = 0;
  
#line 347 
  goto return_label;
  err_free_irqs: 
#line 349 
  ;
  
#line 350 
  goto ldv_48892;
  ldv_48891: 
#line 351 
  ;
  
#line 351 
  ;
  
#line 351 
  msi_0 -= 1;
  
#line 351 
  ;
  
#line 351 
  ldv_free_irq_74((unsigned int)adapter->msix_info[msi_0].vec,(void *)(& s->ethrxq[rxq].rspq));
  ldv_48892: 
#line 352 
  ;
  
#line 350 
  rxq -= 1;
  
#line 350 
  if (rxq >= 0) 
#line 352 
                goto ldv_48891; else 
#line 355 
                                     goto ldv_48893;
  ldv_48893: 
#line 356 
  ;
  
#line 352 
  ldv_free_irq_75((unsigned int)adapter->msix_info[0].vec,(void *)(& s->fw_evtq));
  
#line 353 
  __retres = err;
  return_label: 
#line 353 
                return __retres;
}


#line 359  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void free_msix_queue_irqs(struct adapter *adapter)
{
  int rxq;
  int msi_0;
  int tmp;
  
#line 361 
  struct sge *s = & adapter->sge;
  
#line 364 
  ldv_free_irq_76((unsigned int)adapter->msix_info[0].vec,(void *)(& s->fw_evtq));
  
#line 365 
  msi_0 = 1;
  
#line 366 
  rxq = 0;
  
#line 366 
  goto ldv_48901;
  ldv_48900: 
#line 367 
  ;
  
#line 367 
  ;
  
#line 367 
  tmp = msi_0;
  
#line 367 
  msi_0 += 1;
  
#line 367 
  ;
  
#line 367 
  ldv_free_irq_77((unsigned int)adapter->msix_info[tmp].vec,(void *)(& s->ethrxq[rxq].rspq));
  
#line 366 
  rxq += 1;
  ldv_48901: 
#line 367 
  ;
  
#line 366 
  if ((int)s->ethqsets > rxq) 
#line 368 
                              goto ldv_48900; else 
#line 371 
                                                   goto ldv_48902;
  ldv_48902: 
#line 372 
  ;
  
#line 373 
  return;
}


#line 374  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void qenable(struct sge_rspq *rspq)
{
  
#line 376 
  napi_enable(& rspq->napi);
  
#line 382 
  t4_write_reg(rspq->adapter,4U,(unsigned int)(((int)rspq->intr_params << 12) | ((int)rspq->cntxt_id << 16)));
  
#line 386 
  return;
}


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void enable_rx(struct adapter *adapter)
{
  int rxq;
  
#line 394 
  struct sge *s = & adapter->sge;
  
#line 396 
  rxq = 0;
  
#line 396 
  goto ldv_48912;
  ldv_48911: 
#line 397 
  ;
  
#line 397 
  qenable(& s->ethrxq[rxq].rspq);
  
#line 396 
  rxq += 1;
  ldv_48912: 
#line 397 
  ;
  
#line 396 
  if ((int)s->ethqsets > rxq) 
#line 398 
                              goto ldv_48911; else 
#line 401 
                                                   goto ldv_48913;
  ldv_48913: 
#line 402 
  ;
  
#line 398 
  qenable(& s->fw_evtq);
  
#line 404 
  if ((adapter->flags & 2UL) != 0UL) 
#line 405 
                                     t4_write_reg(adapter,4U,(unsigned int)(((int)s->intrq.intr_params << 12) | ((int)s->intrq.cntxt_id << 16))); else ;
  
#line 409 
  return;
}


#line 415  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void quiesce_rx(struct adapter *adapter)
{
  int rxq;
  
#line 417 
  struct sge *s = & adapter->sge;
  
#line 420 
  rxq = 0;
  
#line 420 
  goto ldv_48920;
  ldv_48919: 
#line 421 
  ;
  
#line 421 
  napi_disable(& s->ethrxq[rxq].rspq.napi);
  
#line 420 
  rxq += 1;
  ldv_48920: 
#line 421 
  ;
  
#line 420 
  if ((int)s->ethqsets > rxq) 
#line 422 
                              goto ldv_48919; else 
#line 425 
                                                   goto ldv_48921;
  ldv_48921: 
#line 426 
  ;
  
#line 422 
  napi_disable(& s->fw_evtq.napi);
  
#line 423 
  return;
}


#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int fwevtq_handler(struct sge_rspq *rspq, __be64 const *rsp, struct pkt_gl const *gl)
{
  int __retres;
  
#line 434 
  struct adapter *adapter = rspq->adapter;
  
#line 435 
  u8 opcode = ((struct rss_header const *)rsp)->opcode;
  
#line 436 
  void *cpl = (void *)(rsp + 1U);
  
#line 438 
  switch ((int)opcode) {
    case 224: 
#line 439 
    ;
    {
      
#line 443 
      struct cpl_fw6_msg const *fw_msg = (struct cpl_fw6_msg const *)cpl;
      
#line 444 
      if ((unsigned int)fw_msg->type == 0U) 
#line 445 
                                            t4vf_handle_fw_rpl(adapter,(__be64 const *)(& fw_msg->data)); else ;
      
#line 446 
      goto ldv_48932;
    }
    case 192: 
#line 449 
    ;
    {
      
#line 452 
      struct cpl_sge_egr_update const *p = (struct cpl_sge_egr_update const *)(rsp + 3U);
      
#line 453 
      if (0 != 0) 
#line 453 
                  opcode = (unsigned char)(((((p->opcode_qid << 24) | ((p->opcode_qid << 8) & 16711680U)) | ((p->opcode_qid >> 8) & 65280U)) | (p->opcode_qid >> 24)) >> 24);
      else {
        __u32 tmp;
        
#line 453 
        tmp = __fswab32(p->opcode_qid);
        
#line 453 
        opcode = (unsigned char)(tmp >> 24);
      }
      
#line 454 
      if ((unsigned int)opcode != 165U) {
        
#line 455 
        dev_err((struct device const *)adapter->pdev_dev,"unexpected FW4/CPL %#x on FW event queue\n",(int)opcode);
        
#line 457 
        goto ldv_48932;
      }
      else ;
      
#line 459 
      cpl = (void *)p;
    }
    case 165: 
#line 463 
    ;
    {
      unsigned int tmp_1;
      struct sge_txq *tq;
      struct sge_eth_txq *txq;
      unsigned int eq_idx;
      struct sge_eth_txq *tmp_2;
      
#line 473 
      struct cpl_sge_egr_update const *p_0 = (struct cpl_sge_egr_update const *)cpl;
      
#line 474 
      if (0 != 0) 
#line 474 
                  tmp_1 = ((((p_0->opcode_qid << 24) | ((p_0->opcode_qid << 8) & 16711680U)) | ((p_0->opcode_qid >> 8) & 65280U)) | (p_0->opcode_qid >> 24)) & 131071U;
      else {
        __u32 tmp_0;
        
#line 474 
        tmp_0 = __fswab32(p_0->opcode_qid);
        
#line 474 
        tmp_1 = tmp_0 & 131071U;
      }
      
#line 474 
      unsigned int qid = tmp_1;
      
#line 475 
      struct sge *s = & adapter->sge;
      
#line 487 
      eq_idx = qid - s->egr_base;
      
#line 488 
      if ((long)(eq_idx > 15U) != 0L) {
        
#line 489 
        dev_err((struct device const *)adapter->pdev_dev,"Egress Update QID %d out of range\n",qid);
        
#line 491 
        goto ldv_48932;
      }
      else ;
      
#line 493 
      tq = (struct sge_txq *)s->egr_map[eq_idx];
      
#line 494 
      if ((long)(tq == (struct sge_txq *)0) != 0L) {
        
#line 495 
        dev_err((struct device const *)adapter->pdev_dev,"Egress Update QID %d TXQ=NULL\n",qid);
        
#line 497 
        goto ldv_48932;
      }
      else ;
      {
        
#line 499 
        struct sge_txq const *__mptr = (struct sge_txq const *)tq;
        
#line 499 
        tmp_2 = (struct sge_eth_txq *)__mptr;
      }
      
#line 499 
      txq = tmp_2;
      
#line 500 
      if ((long)(tq->abs_id != qid) != 0L) {
        
#line 501 
        dev_err((struct device const *)adapter->pdev_dev,"Egress Update QID %d refers to TXQ %d\n",qid,tq->abs_id);
        
#line 504 
        goto ldv_48932;
      }
      else ;
      
#line 511 
      txq->q.restarts += 1UL;
      
#line 512 
      netif_tx_wake_queue(txq->txq);
      
#line 513 
      goto ldv_48932;
    }
    default: 
#line 516 
    ;
    
#line 517 
    dev_err((struct device const *)adapter->pdev_dev,"unexpected CPL %#x on FW event queue\n",(int)opcode);
  }
  ldv_48932: 
#line 521 
  ;
  
#line 521 
  __retres = 0;
  
#line 521 
  return __retres;
}


#line 529  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int setup_sge_queues(struct adapter *adapter)
{
  int __retres;
  int err;
  int pidx;
  int msix;
  
#line 531 
  struct sge *s = & adapter->sge;
  
#line 538 
  bitmap_zero((unsigned long *)(& s->starving_fl),16U);
  
#line 548 
  if ((adapter->flags & 2UL) != 0UL) {
    
#line 549 
    err = t4vf_sge_alloc_rxq(adapter,& s->intrq,(_Bool)0,adapter->port[0],0,(struct sge_fl *)0,(int (*)(struct sge_rspq *, __be64 const *, struct pkt_gl const *))0);
    
#line 551 
    if (err != 0) 
#line 552 
                  goto err_free_queues; else ;
  }
  else ;
  
#line 558 
  err = t4vf_sge_alloc_rxq(adapter,& s->fw_evtq,(_Bool)1,adapter->port[0],0,(struct sge_fl *)0,& fwevtq_handler);
  
#line 560 
  if (err != 0) 
#line 561 
                goto err_free_queues; else ;
  
#line 569 
  msix = 1;
  
#line 570 
  pidx = 0;
  
#line 570 
  goto ldv_48962;
  ldv_48961: 
#line 571 
  ;
  {
    int qs;
    int tmp_0;
    struct netdev_queue *tmp_1;
    
#line 571 
    struct net_device *dev = adapter->port[pidx];
    
#line 572 
    struct port_info *pi = netdev_priv((struct net_device const *)dev);
    
#line 573 
    struct sge_eth_rxq *rxq = & s->ethrxq[(int)pi->first_qset];
    
#line 574 
    struct sge_eth_txq *txq = & s->ethtxq[(int)pi->first_qset];
    
#line 577 
    qs = 0;
    
#line 577 
    goto ldv_48959;
    ldv_48958: 
#line 578 
    ;
    
#line 578 
    ;
    
#line 578 
    tmp_0 = msix;
    
#line 578 
    msix += 1;
    
#line 578 
    ;
    
#line 578 
    ;
    
#line 578 
    ;
    
#line 578 
    ;
    
#line 578 
    err = t4vf_sge_alloc_rxq(adapter,& rxq->rspq,(_Bool)0,dev,tmp_0,& rxq->fl,& t4vf_ethrx_handler);
    
#line 581 
    if (err != 0) 
#line 582 
                  goto err_free_queues; else ;
    
#line 584 
    ;
    
#line 584 
    tmp_1 = netdev_get_tx_queue((struct net_device const *)dev,(unsigned int)qs);
    
#line 584 
    ;
    
#line 584 
    ;
    
#line 584 
    ;
    
#line 584 
    err = t4vf_sge_alloc_eth_txq(adapter,txq,dev,tmp_1,(unsigned int)s->fw_evtq.cntxt_id);
    
#line 587 
    if (err != 0) 
#line 588 
                  goto err_free_queues; else ;
    
#line 590 
    rxq->rspq.idx = (unsigned char)qs;
    
#line 591 
    memset((void *)(& rxq->stats),0,48UL);
    
#line 577 
    qs += 1;
    
#line 577 
    rxq += 1;
    
#line 577 
    txq += 1;
    ldv_48959: 
#line 578 
    ;
    
#line 577 
    if ((int)pi->nqsets > qs) 
#line 579 
                              goto ldv_48958; else 
#line 582 
                                                   goto ldv_48960;
    ldv_48960: 
#line 583 
    ;
  }
  
#line 570 
  pidx += 1;
  ldv_48962: 
#line 571 
  ;
  
#line 570 
  if ((int)adapter->params.nports > pidx) 
#line 572 
                                          goto ldv_48961; else 
#line 575 
                                                               goto ldv_48963;
  ldv_48963: 
#line 576 
  ;
  
#line 598 
  s->egr_base = s->ethtxq[0].q.abs_id - s->ethtxq[0].q.cntxt_id;
  
#line 599 
  s->ingr_base = (unsigned int)((int)s->ethrxq[0].rspq.abs_id - (int)s->ethrxq[0].rspq.cntxt_id);
  
#line 600 
  s->ingr_map[(unsigned int)s->fw_evtq.abs_id - s->ingr_base] = & s->fw_evtq;
  
#line 601 
  pidx = 0;
  
#line 601 
  goto ldv_48973;
  ldv_48972: 
#line 602 
  ;
  {
    int qs_0;
    
#line 602 
    struct net_device *dev_0 = adapter->port[pidx];
    
#line 603 
    struct port_info *pi_0 = netdev_priv((struct net_device const *)dev_0);
    
#line 604 
    struct sge_eth_rxq *rxq_0 = & s->ethrxq[(int)pi_0->first_qset];
    
#line 605 
    struct sge_eth_txq *txq_0 = & s->ethtxq[(int)pi_0->first_qset];
    
#line 608 
    qs_0 = 0;
    
#line 608 
    goto ldv_48970;
    ldv_48969: 
#line 609 
    ;
    
#line 609 
    s->ingr_map[(unsigned int)rxq_0->rspq.abs_id - s->ingr_base] = & rxq_0->rspq;
    
#line 610 
    s->egr_map[txq_0->q.abs_id - s->egr_base] = (void *)(& txq_0->q);
    
#line 621 
    rxq_0->fl.abs_id = rxq_0->fl.cntxt_id + s->egr_base;
    
#line 622 
    s->egr_map[rxq_0->fl.abs_id - s->egr_base] = (void *)(& rxq_0->fl);
    
#line 608 
    qs_0 += 1;
    
#line 608 
    rxq_0 += 1;
    
#line 608 
    txq_0 += 1;
    ldv_48970: 
#line 609 
    ;
    
#line 608 
    if ((int)pi_0->nqsets > qs_0) 
#line 610 
                                  goto ldv_48969; else 
#line 613 
                                                       goto ldv_48971;
    ldv_48971: 
#line 614 
    ;
  }
  
#line 601 
  pidx += 1;
  ldv_48973: 
#line 602 
  ;
  
#line 601 
  if ((int)adapter->params.nports > pidx) 
#line 603 
                                          goto ldv_48972; else 
#line 606 
                                                               goto ldv_48974;
  ldv_48974: 
#line 607 
  ;
  
#line 625 
  __retres = 0;
  
#line 625 
  goto return_label;
  err_free_queues: 
#line 627 
  ;
  
#line 628 
  t4vf_free_sge_resources(adapter);
  
#line 629 
  __retres = err;
  return_label: 
#line 629 
                return __retres;
}


#line 640  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int setup_rss(struct adapter *adapter)
{
  int __retres;
  int pidx;
  
#line 644 
  pidx = 0;
  
#line 644 
  goto ldv_48991;
  ldv_48990: 
#line 645 
  ;
  {
    u16 rss[8U];
    int qs;
    int err;
    
#line 645 
    struct port_info *pi = adap2pinfo(adapter,pidx);
    
#line 646 
    struct sge_eth_rxq *rxq = & adapter->sge.ethrxq[(int)pi->first_qset];
    
#line 650 
    qs = 0;
    
#line 650 
    goto ldv_48985;
    ldv_48984: 
#line 651 
    ;
    
#line 651 
    rss[qs] = (rxq + qs)->rspq.abs_id;
    
#line 650 
    qs += 1;
    ldv_48985: 
#line 651 
    ;
    
#line 650 
    if ((int)pi->nqsets > qs) 
#line 652 
                              goto ldv_48984; else 
#line 655 
                                                   goto ldv_48986;
    ldv_48986: 
#line 656 
    ;
    
#line 653 
    err = t4vf_config_rss_range(adapter,(unsigned int)pi->viid,0,(int)pi->rss_size,(u16 const *)(& rss),(int)pi->nqsets);
    
#line 655 
    if (err != 0) {
      
#line 656 
      __retres = err;
      
#line 656 
      goto return_label;
    }
    else ;
    
#line 661 
    switch (adapter->params.rss.mode) {
      case (unsigned int)1: 
#line 662 
      ;
      
#line 670 
      if ((unsigned int)*((unsigned char *)(& adapter->params.rss.u.basicvirtual) + 0UL) == 0U) {
        union rss_vi_config config;
        
#line 672 
        err = t4vf_read_rss_vi_config(adapter,(unsigned int)pi->viid,& config);
        
#line 675 
        if (err != 0) {
          
#line 676 
          __retres = err;
          
#line 676 
          goto return_label;
        }
        else ;
        
#line 677 
        config.basicvirtual.defaultq = rxq->rspq.abs_id;
        
#line 679 
        err = t4vf_write_rss_vi_config(adapter,(unsigned int)pi->viid,& config);
        
#line 682 
        if (err != 0) {
          
#line 683 
          __retres = err;
          
#line 683 
          goto return_label;
        }
        else ;
      }
      else ;
      
#line 685 
      goto ldv_48989;
    }
    ldv_48989: 
#line 687 
    ;
  }
  
#line 644 
  pidx += 1;
  ldv_48991: 
#line 645 
  ;
  
#line 644 
  if ((int)adapter->params.nports > pidx) 
#line 646 
                                          goto ldv_48990; else 
#line 649 
                                                               goto ldv_48992;
  ldv_48992: 
#line 650 
  ;
  
#line 689 
  __retres = 0;
  return_label: 
#line 689 
                return __retres;
}


#line 699  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int adapter_up(struct adapter *adapter)
{
  int __retres;
  int err;
  
#line 708 
  if ((adapter->flags & 1UL) == 0UL) {
    
#line 709 
    err = setup_sge_queues(adapter);
    
#line 710 
    if (err != 0) {
      
#line 711 
      __retres = err;
      
#line 711 
      goto return_label;
    }
    else ;
    
#line 712 
    err = setup_rss(adapter);
    
#line 713 
    if (err != 0) {
      
#line 714 
      t4vf_free_sge_resources(adapter);
      
#line 715 
      __retres = err;
      
#line 715 
      goto return_label;
    }
    else ;
    
#line 718 
    if ((adapter->flags & 4UL) != 0UL) 
#line 719 
                                       name_msix_vecs(adapter); else ;
    
#line 720 
    adapter->flags |= 1UL;
  }
  else ;
  
#line 726 
  if ((long)((adapter->flags & 6UL) == 0UL) != 0L) {
    
#line 728 
    ldv_inline_asm();
    
#line 726 
    ;
  }
  else ;
  
#line 727 
  if ((adapter->flags & 4UL) != 0UL) 
#line 728 
                                     err = request_msix_queue_irqs(adapter);
  else {
    irq_handler_t tmp;
    
#line 730 
    ;
    
#line 730 
    ;
    
#line 730 
    tmp = t4vf_intr_handler(adapter);
    
#line 730 
    ;
    
#line 730 
    err = ldv_request_irq_78((adapter->pdev)->irq,tmp,0UL,adapter->name,(void *)adapter);
  }
  
#line 733 
  if (err != 0) {
    
#line 734 
    dev_err((struct device const *)adapter->pdev_dev,"request_irq failed, err %d\n",err);
    
#line 736 
    __retres = err;
    
#line 736 
    goto return_label;
  }
  else ;
  
#line 742 
  enable_rx(adapter);
  
#line 743 
  t4vf_sge_start(adapter);
  
#line 744 
  __retres = 0;
  return_label: 
#line 744 
                return __retres;
}


#line 752  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void adapter_down(struct adapter *adapter)
{
  
#line 757 
  if ((adapter->flags & 4UL) != 0UL) 
#line 758 
                                     free_msix_queue_irqs(adapter); else 
                                                                    
#line 760 
                                                                    ldv_free_irq_79((adapter->pdev)->irq,(void *)adapter);
  
#line 765 
  quiesce_rx(adapter);
  
#line 766 
  return;
}


#line 771  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int cxgb4vf_open(struct net_device *dev)
{
  int __retres;
  int err;
  
#line 774 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 775 
  struct adapter *adapter = pi->adapter;
  
#line 781 
  if (adapter->open_device_map == 0UL) {
    
#line 782 
    err = adapter_up(adapter);
    
#line 783 
    if (err != 0) {
      
#line 784 
      __retres = err;
      
#line 784 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 790 
  netif_set_real_num_tx_queues(dev,(unsigned int)pi->nqsets);
  
#line 791 
  err = netif_set_real_num_rx_queues(dev,(unsigned int)pi->nqsets);
  
#line 792 
  if (err != 0) 
#line 793 
                goto err_unwind; else ;
  
#line 794 
  err = link_start(dev);
  
#line 795 
  if (err != 0) 
#line 796 
                goto err_unwind; else ;
  
#line 798 
  netif_tx_start_all_queues(dev);
  
#line 799 
  set_bit((long)pi->port_id,(unsigned long volatile *)(& adapter->open_device_map));
  
#line 800 
  __retres = 0;
  
#line 800 
  goto return_label;
  err_unwind: 
#line 802 
  ;
  
#line 803 
  if (adapter->open_device_map == 0UL) 
#line 804 
                                       adapter_down(adapter); else ;
  
#line 805 
  __retres = err;
  return_label: 
#line 805 
                return __retres;
}


#line 812  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int cxgb4vf_stop(struct net_device *dev)
{
  int __retres;
  
#line 814 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 815 
  struct adapter *adapter = pi->adapter;
  
#line 817 
  netif_tx_stop_all_queues(dev);
  
#line 818 
  netif_carrier_off(dev);
  
#line 819 
  t4vf_enable_vi(adapter,(unsigned int)pi->viid,(_Bool)0,(_Bool)0);
  
#line 820 
  pi->link_cfg.link_ok = (unsigned char)0U;
  
#line 822 
  set_bit((long)pi->port_id,(unsigned long volatile *)(& adapter->open_device_map));
  
#line 823 
  if (adapter->open_device_map == 0UL) 
#line 824 
                                       adapter_down(adapter); else ;
  
#line 825 
  __retres = 0;
  
#line 825 
  return __retres;
}


#line 831  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static struct net_device_stats *cxgb4vf_get_stats(struct net_device *dev)
{
  struct net_device_stats *__retres;
  struct t4vf_port_stats stats;
  int err;
  
#line 834 
  struct port_info *pi = netdev2pinfo((struct net_device const *)dev);
  
#line 835 
  struct adapter *adapter = pi->adapter;
  
#line 836 
  struct net_device_stats *ns = & dev->stats;
  
#line 839 
  ldv_spin_lock_80(& adapter->stats_lock);
  
#line 840 
  err = t4vf_get_port_stats(adapter,(int)pi->pidx,& stats);
  
#line 841 
  ldv_spin_unlock_81(& adapter->stats_lock);
  
#line 843 
  memset((void *)ns,0,184UL);
  
#line 844 
  if (err != 0) {
    
#line 845 
    __retres = ns;
    
#line 845 
    goto return_label;
  }
  else ;
  
#line 847 
  ns->tx_bytes = (unsigned long)(((stats.tx_bcast_bytes + stats.tx_mcast_bytes) + stats.tx_ucast_bytes) + stats.tx_offload_bytes);
  
#line 849 
  ns->tx_packets = (unsigned long)(((stats.tx_bcast_frames + stats.tx_mcast_frames) + stats.tx_ucast_frames) + stats.tx_offload_frames);
  
#line 851 
  ns->rx_bytes = (unsigned long)((stats.rx_bcast_bytes + stats.rx_mcast_bytes) + stats.rx_ucast_bytes);
  
#line 853 
  ns->rx_packets = (unsigned long)((stats.rx_bcast_frames + stats.rx_mcast_frames) + stats.rx_ucast_frames);
  
#line 855 
  ns->multicast = (unsigned long)stats.rx_mcast_frames;
  
#line 856 
  ns->tx_errors = (unsigned long)stats.tx_drop_frames;
  
#line 857 
  ns->rx_errors = (unsigned long)stats.rx_err_frames;
  
#line 859 
  __retres = ns;
  return_label: 
#line 859 
                return __retres;
}


#line 867  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
__inline static unsigned int collect_netdev_uc_list_addrs(struct net_device const *dev, u8 const **addr, unsigned int offset, unsigned int maxaddrs)
{
  struct netdev_hw_addr const *ha;
  struct netdev_hw_addr const *tmp_5;
  unsigned int tmp_7;
  struct netdev_hw_addr const *tmp_14;
  
#line 872 
  unsigned int index = 0U;
  
#line 873 
  unsigned int naddr = 0U;
  {
    struct netdev_hw_addr const *tmp_4;
    
#line 876 
    struct list_head *__ptr = dev->dev_addrs.list.next;
    {
      struct list_head *tmp_3;
      {
        struct list_head *tmp_0;
        {
          struct list_head *tmp;
          {
            union __anonunion___u_1034 __u;
            
#line 876 
            __read_once_size((void const volatile *)(& __ptr),(void *)(& __u.__c),8);
            
#line 876 
            tmp = __u.__val;
          }
          
#line 876 
          struct list_head *_________p1 = tmp;
          
#line 876 
          tmp_0 = _________p1;
        }
        
#line 876 
        struct list_head *________p1 = tmp_0;
        {
          bool __warned;
          int tmp_2;
          int tmp_1;
          
#line 876 
          tmp_1 = debug_lockdep_rcu_enabled();
          
#line 876 
          if (tmp_1 != 0) 
            
#line 876 
            if (! __warned) 
#line 876 
                            tmp_2 = 1; else 
#line 876 
                                            tmp_2 = 0;
          else 
#line 876 
               tmp_2 = 0;
        }
        
#line 876 
        tmp_3 = ________p1;
      }
      
#line 876 
      struct list_head const *__mptr = (struct list_head const *)tmp_3;
      
#line 876 
      tmp_4 = (struct netdev_hw_addr const *)__mptr;
    }
    
#line 876 
    tmp_5 = tmp_4;
  }
  
#line 876 
  ha = tmp_5;
  
#line 876 
  goto ldv_49059;
  ldv_49058: 
#line 877 
  ;
  
#line 877 
  tmp_7 = index;
  
#line 877 
  index += 1U;
  
#line 877 
  ;
  
#line 877 
  if (tmp_7 >= offset) {
    unsigned int tmp_6;
    
#line 878 
    tmp_6 = naddr;
    
#line 878 
    naddr += 1U;
    
#line 878 
    *(addr + tmp_6) = (u8 const *)(& ha->addr);
    
#line 879 
    if (naddr >= maxaddrs) 
#line 880 
                           goto ldv_49057; else ;
  }
  else ;
  {
    struct netdev_hw_addr const *tmp_13;
    
#line 876 
    struct list_head *__ptr_0 = ha->list.next;
    {
      struct list_head *tmp_12;
      {
        struct list_head *tmp_9;
        {
          struct list_head *tmp_8;
          {
            union __anonunion___u_1036 __u_0;
            
#line 876 
            __read_once_size((void const volatile *)(& __ptr_0),(void *)(& __u_0.__c),8);
            
#line 876 
            tmp_8 = __u_0.__val;
          }
          
#line 876 
          struct list_head *_________p1_0 = tmp_8;
          
#line 876 
          tmp_9 = _________p1_0;
        }
        
#line 876 
        struct list_head *________p1_0 = tmp_9;
        {
          bool __warned_0;
          int tmp_11;
          int tmp_10;
          
#line 876 
          tmp_10 = debug_lockdep_rcu_enabled();
          
#line 876 
          if (tmp_10 != 0) 
            
#line 876 
            if (! __warned_0) 
#line 876 
                              tmp_11 = 1; else 
#line 876 
                                               tmp_11 = 0;
          else 
#line 876 
               tmp_11 = 0;
        }
        
#line 876 
        tmp_12 = ________p1_0;
      }
      
#line 876 
      struct list_head const *__mptr_0 = (struct list_head const *)tmp_12;
      
#line 876 
      tmp_13 = (struct netdev_hw_addr const *)__mptr_0;
    }
    
#line 876 
    tmp_14 = tmp_13;
  }
  
#line 876 
  ha = tmp_14;
  ldv_49059: 
#line 879 
  ;
  
#line 876 
  if (& ha->list != & dev->dev_addrs.list) 
#line 878 
                                           goto ldv_49058; else 
#line 881 
                                                                goto ldv_49057;
  ldv_49057: 
#line 882 
  ;
  
#line 882 
  return naddr;
}


#line 890  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
__inline static unsigned int collect_netdev_mc_list_addrs(struct net_device const *dev, u8 const **addr, unsigned int offset, unsigned int maxaddrs)
{
  struct netdev_hw_addr const *ha;
  struct netdev_hw_addr const *tmp;
  unsigned int tmp_1;
  struct netdev_hw_addr const *tmp_2;
  
#line 895 
  unsigned int index = 0U;
  
#line 896 
  unsigned int naddr = 0U;
  {
    
#line 899 
    struct list_head const *__mptr = (struct list_head const *)dev->mc.list.next;
    
#line 899 
    tmp = (struct netdev_hw_addr const *)__mptr;
  }
  
#line 899 
  ha = tmp;
  
#line 899 
  goto ldv_49075;
  ldv_49074: 
#line 900 
  ;
  
#line 900 
  tmp_1 = index;
  
#line 900 
  index += 1U;
  
#line 900 
  ;
  
#line 900 
  if (tmp_1 >= offset) {
    unsigned int tmp_0;
    
#line 901 
    tmp_0 = naddr;
    
#line 901 
    naddr += 1U;
    
#line 901 
    *(addr + tmp_0) = (u8 const *)(& ha->addr);
    
#line 902 
    if (naddr >= maxaddrs) 
#line 903 
                           goto ldv_49073; else ;
  }
  else ;
  {
    
#line 899 
    struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
    
#line 899 
    tmp_2 = (struct netdev_hw_addr const *)__mptr_0;
  }
  
#line 899 
  ha = tmp_2;
  ldv_49075: 
#line 901 
  ;
  
#line 899 
  if (& ha->list != & dev->mc.list) 
#line 901 
                                    goto ldv_49074; else 
#line 904 
                                                         goto ldv_49073;
  ldv_49073: 
#line 905 
  ;
  
#line 905 
  return naddr;
}


#line 912  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int set_addr_filters(struct net_device const *dev, bool sleep)
{
  int __retres;
  unsigned int offset;
  unsigned int naddr;
  u8 const *addr[7U];
  int ret;
  int tmp_0;
  
#line 914 
  u64 mhash = 0ULL;
  
#line 915 
  u64 uhash = 0ULL;
  
#line 916 
  bool free_0 = (_Bool)1;
  
#line 920 
  struct port_info const *pi = netdev_priv(dev);
  
#line 923 
  offset = 0U;
  ldv_49092: 
#line 924 
  ;
  
#line 924 
  naddr = collect_netdev_uc_list_addrs(dev,(u8 const **)(& addr),offset,7U);
  
#line 926 
  if (naddr == 0U) 
#line 927 
                   goto ldv_49091; else ;
  
#line 929 
  ret = t4vf_alloc_mac_filt(pi->adapter,(unsigned int)pi->viid,(_Bool)((bool)((int)free_0) != 0),naddr,(u8 const **)(& addr),(u16 *)0U,& uhash,(_Bool)((bool)((int)sleep) != 0));
  
#line 931 
  if (ret < 0) {
    
#line 932 
    __retres = ret;
    
#line 932 
    goto return_label;
  }
  else ;
  
#line 934 
  free_0 = (_Bool)0;
  
#line 923 
  offset += naddr;
  
#line 923 
  goto ldv_49092;
  ldv_49091: 
#line 924 
  ;
  
#line 938 
  offset = 0U;
  ldv_49097: 
#line 939 
  ;
  
#line 939 
  naddr = collect_netdev_mc_list_addrs(dev,(u8 const **)(& addr),offset,7U);
  
#line 941 
  if (naddr == 0U) 
#line 942 
                   goto ldv_49096; else ;
  
#line 944 
  ret = t4vf_alloc_mac_filt(pi->adapter,(unsigned int)pi->viid,(_Bool)((bool)((int)free_0) != 0),naddr,(u8 const **)(& addr),(u16 *)0U,& mhash,(_Bool)((bool)((int)sleep) != 0));
  
#line 946 
  if (ret < 0) {
    
#line 947 
    __retres = ret;
    
#line 947 
    goto return_label;
  }
  else ;
  
#line 948 
  free_0 = (_Bool)0;
  
#line 938 
  offset += naddr;
  
#line 938 
  goto ldv_49097;
  ldv_49096: 
#line 939 
  ;
  
#line 951 
  tmp_0 = t4vf_set_addr_hash(pi->adapter,(unsigned int)pi->viid,(_Bool)(uhash != 0ULL),uhash | mhash,(_Bool)((bool)((int)sleep) != 0));
  
#line 951 
  __retres = tmp_0;
  return_label: 
#line 951 
                return __retres;
}


#line 959  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int set_rxmode(struct net_device *dev, int mtu, bool sleep_ok)
{
  int ret;
  
#line 962 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 964 
  ret = set_addr_filters((struct net_device const *)dev,(_Bool)((bool)((int)sleep_ok) != 0));
  
#line 965 
  if (ret == 0) 
#line 966 
                ret = t4vf_set_rxmode(pi->adapter,(unsigned int)pi->viid,-1,(dev->flags & 256U) != 0U,(dev->flags & 512U) != 0U,1,-1,(_Bool)((bool)((int)sleep_ok) != 0)); else ;
  
#line 970 
  return ret;
}


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void cxgb4vf_set_rxmode(struct net_device *dev)
{
  
#line 979 
  set_rxmode(dev,-1,(_Bool)0);
  
#line 980 
  return;
}


#line 986  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int closest_timer(struct sge const *s, int us)
{
  int i;
  
#line 988 
  int timer_idx = 0;
  
#line 988 
  int min_delta = 2147483647;
  
#line 990 
  i = 0;
  
#line 990 
  goto ldv_49120;
  ldv_49119: 
#line 991 
  ;
  {
    
#line 991 
    int delta = us - (int)s->timer_val[i];
    
#line 992 
    if (delta < 0) 
#line 993 
                   delta = - delta; else ;
    
#line 994 
    if (delta < min_delta) {
      
#line 995 
      min_delta = delta;
      
#line 996 
      timer_idx = i;
    }
    else ;
  }
  
#line 990 
  i += 1;
  ldv_49120: 
#line 991 
  ;
  
#line 990 
  if ((unsigned int)i <= 5U) 
#line 992 
                             goto ldv_49119; else 
#line 995 
                                                  goto ldv_49121;
  ldv_49121: 
#line 996 
  ;
  
#line 999 
  return timer_idx;
}


#line 1002  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int closest_thres(struct sge const *s, int thres)
{
  int i;
  int delta;
  
#line 1004 
  int pktcnt_idx = 0;
  
#line 1004 
  int min_delta = 2147483647;
  
#line 1006 
  i = 0;
  
#line 1006 
  goto ldv_49134;
  ldv_49133: 
#line 1007 
  ;
  
#line 1007 
  delta = thres - (int)s->counter_val[i];
  
#line 1008 
  if (delta < 0) 
#line 1009 
                 delta = - delta; else ;
  
#line 1010 
  if (delta < min_delta) {
    
#line 1011 
    min_delta = delta;
    
#line 1012 
    pktcnt_idx = i;
  }
  else ;
  
#line 1006 
  i += 1;
  ldv_49134: 
#line 1007 
  ;
  
#line 1006 
  if ((unsigned int)i <= 3U) 
#line 1008 
                             goto ldv_49133; else 
#line 1011 
                                                  goto ldv_49135;
  ldv_49135: 
#line 1012 
  ;
  
#line 1015 
  return pktcnt_idx;
}


#line 1021  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static unsigned int qtimer_val(struct adapter const *adapter, struct sge_rspq const *rspq)
{
  unsigned int __retres;
  int tmp;
  
#line 1024 
  unsigned int timer_idx = (unsigned int)((int)rspq->intr_params >> 1) & 7U;
  
#line 1028 
  if (timer_idx <= 5U) 
#line 1028 
                       tmp = (int)adapter->sge.timer_val[timer_idx]; else 
                                                                    
#line 1028 
                                                                    tmp = 0;
  
#line 1028 
  __retres = (unsigned int)tmp;
  
#line 1028 
  return __retres;
}


#line 1042  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int set_rxq_intr_params(struct adapter *adapter, struct sge_rspq *rspq, unsigned int us, unsigned int cnt)
{
  int __retres;
  unsigned int timer_idx;
  int tmp_1;
  
#line 1051 
  if ((us | cnt) == 0U) 
#line 1052 
                        cnt = 1U; else ;
  
#line 1060 
  if (cnt != 0U) {
    int err;
    u32 v;
    u32 pktcnt_idx;
    int tmp;
    
#line 1064 
    tmp = closest_thres((struct sge const *)(& adapter->sge),(int)cnt);
    
#line 1064 
    pktcnt_idx = (unsigned int)tmp;
    
#line 1065 
    if (rspq->desc != (__be64 *)0ULL && (unsigned int)rspq->pktcnt_idx != pktcnt_idx) {
      
#line 1066 
      v = (unsigned int)((int)rspq->cntxt_id | 67174400);
      
#line 1070 
      err = t4vf_set_params(adapter,1U,(u32 const *)(& v),(u32 const *)(& pktcnt_idx));
      
#line 1071 
      if (err != 0) {
        
#line 1072 
        __retres = err;
        
#line 1072 
        goto return_label;
      }
      else ;
    }
    else ;
    
#line 1074 
    rspq->pktcnt_idx = (unsigned char)pktcnt_idx;
  }
  else ;
  
#line 1083 
  if (us != 0U) 
#line 1081 
                tmp_1 = closest_timer((struct sge const *)(& adapter->sge),(int)us); else 
                                                                    
#line 1083 
                                                                    tmp_1 = 6;
  
#line 1081 
  timer_idx = (unsigned int)tmp_1;
  
#line 1089 
  rspq->intr_params = (unsigned char)(((int)((unsigned char)timer_idx) << 1U) | (cnt != 0U));
  
#line 1091 
  __retres = 0;
  return_label: 
#line 1091 
                return __retres;
}


#line 1099  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
__inline static unsigned int mk_adap_vers(struct adapter const *adapter)
{
  unsigned int __retres;
  
#line 1104 
  __retres = (((unsigned int)adapter->params.chip >> 4) & 15U) | 64512U;
  
#line 1104 
  return __retres;
}


#line 1110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int cxgb4vf_do_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)
{
  
#line 1112 
  int ret = 0;
  
#line 1114 
  switch (cmd) {
    default: 
#line 1121 
    ;
    
#line 1122 
    ret = -95;
    
#line 1123 
    goto ldv_49161;
  }
  ldv_49161: 
#line 1125 
  ;
  
#line 1125 
  return ret;
}


#line 1131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int cxgb4vf_change_mtu(struct net_device *dev, int new_mtu)
{
  int __retres;
  int ret;
  
#line 1134 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 1137 
  if (new_mtu <= 80) {
    
#line 1138 
    __retres = -22;
    
#line 1138 
    goto return_label;
  }
  else ;
  
#line 1140 
  ret = t4vf_set_rxmode(pi->adapter,(unsigned int)pi->viid,new_mtu,-1,-1,-1,-1,(_Bool)1);
  
#line 1142 
  if (ret == 0) 
#line 1143 
                dev->mtu = (unsigned int)new_mtu; else ;
  
#line 1144 
  __retres = ret;
  return_label: 
#line 1144 
                return __retres;
}


#line 1147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static netdev_features_t cxgb4vf_fix_features(struct net_device *dev, netdev_features_t features)
{
  
#line 1154 
  if ((features & 256ULL) != 0ULL) 
#line 1155 
                                   features |= 128ULL; else 
#line 1157 
                                                            features &= 18446744073709551487ULL;
  
#line 1159 
  return features;
}


#line 1162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int cxgb4vf_set_features(struct net_device *dev, netdev_features_t features)
{
  int __retres;
  
#line 1165 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 1166 
  netdev_features_t changed = dev->features ^ features;
  
#line 1168 
  if ((changed & 256ULL) != 0ULL) 
#line 1169 
                                  t4vf_set_rxmode(pi->adapter,(unsigned int)pi->viid,-1,-1,-1,-1,(int)features & 128,(_Bool)0); else ;
  
#line 1172 
  __retres = 0;
  
#line 1172 
  return __retres;
}


#line 1178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int cxgb4vf_set_mac_addr(struct net_device *dev, void *_addr)
{
  int __retres;
  int ret;
  int tmp_1;
  bool tmp_0;
  
#line 1181 
  struct sockaddr *addr = (struct sockaddr *)_addr;
  
#line 1182 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 1184 
  tmp_0 = is_valid_ether_addr((u8 const *)(& addr->sa_data));
  
#line 1184 
  if (tmp_0) 
#line 1184 
             tmp_1 = 0; else 
#line 1184 
                             tmp_1 = 1;
  
#line 1184 
  if (tmp_1) {
    
#line 1185 
    __retres = -99;
    
#line 1185 
    goto return_label;
  }
  else ;
  
#line 1187 
  ret = t4vf_change_mac(pi->adapter,(unsigned int)pi->viid,(int)pi->xact_addr_filt,(u8 const *)(& addr->sa_data),(_Bool)1);
  
#line 1189 
  if (ret < 0) {
    
#line 1190 
    __retres = ret;
    
#line 1190 
    goto return_label;
  }
  else ;
  
#line 1192 
  memcpy((void *)dev->dev_addr,(void const *)(& addr->sa_data),(unsigned long)dev->addr_len);
  
#line 1193 
  pi->xact_addr_filt = (short)ret;
  
#line 1194 
  __retres = 0;
  return_label: 
#line 1194 
                return __retres;
}


#line 1202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void cxgb4vf_poll_controller(struct net_device *dev)
{
  
#line 1204 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 1205 
  struct adapter *adapter = pi->adapter;
  
#line 1207 
  if ((adapter->flags & 4UL) != 0UL) {
    struct sge_eth_rxq *rxq;
    int nqsets;
    
#line 1211 
    rxq = & adapter->sge.ethrxq[(int)pi->first_qset];
    
#line 1212 
    nqsets = (int)pi->nqsets;
    
#line 1212 
    goto ldv_49193;
    ldv_49192: 
#line 1213 
    ;
    
#line 1213 
    t4vf_sge_intr_msix(0,(void *)(& rxq->rspq));
    
#line 1214 
    rxq += 1;
    
#line 1212 
    nqsets -= 1;
    ldv_49193: 
#line 1213 
    ;
    
#line 1212 
    if (nqsets != 0) 
#line 1214 
                     goto ldv_49192; else 
#line 1217 
                                          goto ldv_49194;
    ldv_49194: 
#line 1218 
    ;
  }
  else {
    irq_handler_t tmp_0;
    
#line 1217 
    tmp_0 = t4vf_intr_handler(adapter);
    
#line 1217 
    (*tmp_0)(0,(void *)adapter);
  }
  
#line 1218 
  return;
}


#line 1229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static unsigned int t4vf_from_fw_linkcaps(enum fw_port_type type, unsigned int caps)
{
  
#line 1232 
  unsigned int v = 0U;
  
#line 1234 
  if ((unsigned int)type + 4294967294U <= 2U) {
    
#line 1236 
    v |= 128U;
    
#line 1237 
    if ((caps & 1U) != 0U) 
#line 1238 
                           v |= 8U; else ;
    
#line 1239 
    if ((caps & 2U) != 0U) 
#line 1240 
                           v |= 32U; else ;
    
#line 1241 
    if ((caps & 8U) != 0U) 
#line 1242 
                           v |= 4096U; else ;
  }
  else 
    
#line 1243 
    if (type == (unsigned int)FW_PORT_TYPE_KX4 || type == (unsigned int)FW_PORT_TYPE_KX) {
      
#line 1244 
      v |= 65536U;
      
#line 1245 
      if ((caps & 2U) != 0U) 
#line 1246 
                             v |= 131072U; else ;
      
#line 1247 
      if ((caps & 8U) != 0U) 
#line 1248 
                             v |= 262144U; else ;
    }
    else 
      
#line 1249 
      if (type == (unsigned int)FW_PORT_TYPE_KR) 
#line 1250 
                                                 v |= 589824U;
      else 
        
#line 1251 
        if (type == (unsigned int)FW_PORT_TYPE_BP_AP) 
#line 1252 
                                                      v |= 1769472U;
        else 
          
#line 1254 
          if (type == (unsigned int)FW_PORT_TYPE_BP4_AP) 
#line 1255 
                                                         v |= 2031616U;
          else 
            
#line 1258 
            if ((type <= (unsigned int)FW_PORT_TYPE_FIBER_XAUI || type == (unsigned int)FW_PORT_TYPE_SFP) || (unsigned int)type + 4294967284U <= 1U) {
              
#line 1263 
              v |= 1024U;
              
#line 1264 
              if ((caps & 2U) != 0U) 
#line 1265 
                                     v |= 32U; else ;
              
#line 1266 
              if ((caps & 8U) != 0U) 
#line 1267 
                                     v |= 4096U; else ;
            }
            else 
              
#line 1268 
              if ((unsigned int)type + 4294967282U <= 1U) {
                
#line 1270 
                v |= 33554432U;
                
#line 1271 
                v |= 1024U;
              }
              else ;
  
#line 1274 
  if ((caps & 256U) != 0U) 
#line 1275 
                           v |= 64U; else ;
  
#line 1276 
  return v;
}


#line 1279  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int cxgb4vf_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)
{
  int __retres;
  int tmp_1;
  bool tmp_0;
  
#line 1281 
  struct port_info const *p = netdev_priv((struct net_device const *)dev);
  
#line 1283 
  if ((unsigned int)p->port_type + 254U <= 2U) 
#line 1286 
                                               cmd->port = (unsigned char)0U;
  else 
    
#line 1287 
    if ((unsigned int)p->port_type <= 1U) 
#line 1289 
                                          cmd->port = (unsigned char)3U;
    else 
      
#line 1290 
      if ((((unsigned int)p->port_type == 9U || (unsigned int)p->port_type == 12U) || (unsigned int)p->port_type == 13U) || (unsigned int)p->port_type == 14U) 
        
#line 1294 
        if ((unsigned int)p->mod_type + 255U <= 2U || (unsigned int)p->mod_type == 6U) 
          
#line 1298 
          cmd->port = (unsigned char)3U;
        else 
          
#line 1299 
          if ((unsigned int)p->mod_type + 252U <= 1U) 
#line 1301 
                                                      cmd->port = (unsigned char)5U; else 
                                                                    
#line 1303 
                                                                    cmd->port = (unsigned char)255U;
      else 
#line 1305 
           cmd->port = (unsigned char)255U;
  
#line 1307 
  if ((int)p->mdio_addr >= 0) {
    
#line 1308 
    cmd->phy_address = (unsigned char)p->mdio_addr;
    
#line 1309 
    cmd->transceiver = (unsigned char)1U;
    
#line 1310 
    if ((unsigned int)p->port_type == 2U) 
#line 1310 
                                          cmd->mdio_support = (unsigned char)1U; else 
                                                                    
#line 1310 
                                                                    cmd->mdio_support = (unsigned char)2U;
  }
  else {
    
#line 1313 
    cmd->phy_address = (unsigned char)0U;
    
#line 1314 
    cmd->transceiver = (unsigned char)0U;
    
#line 1315 
    cmd->mdio_support = (unsigned char)0U;
  }
  
#line 1318 
  cmd->supported = t4vf_from_fw_linkcaps((enum fw_port_type)p->port_type,p->link_cfg.supported);
  
#line 1320 
  cmd->advertising = t4vf_from_fw_linkcaps((enum fw_port_type)p->port_type,p->link_cfg.advertising);
  
#line 1323 
  tmp_0 = netif_carrier_ok((struct net_device const *)dev);
  
#line 1323 
  if ((int)tmp_0 != 0) 
#line 1323 
                       tmp_1 = (int)p->link_cfg.speed; else 
#line 1323 
                                                            tmp_1 = 0;
  
#line 1322 
  ;
  
#line 1322 
  ethtool_cmd_speed_set(cmd,(unsigned int)tmp_1);
  
#line 1324 
  cmd->duplex = (unsigned char)1U;
  
#line 1325 
  cmd->autoneg = p->link_cfg.autoneg;
  
#line 1326 
  cmd->maxtxpkt = 0U;
  
#line 1327 
  cmd->maxrxpkt = 0U;
  
#line 1328 
  __retres = 0;
  
#line 1328 
  return __retres;
}


#line 1334  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void cxgb4vf_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *drvinfo)
{
  char const *tmp_1;
  struct pci_dev *tmp_0;
  
#line 1337 
  struct adapter *adapter = netdev2adap((struct net_device const *)dev);
  
#line 1339 
  strlcpy((char *)(& drvinfo->driver),"cxgb4vf",32UL);
  
#line 1340 
  strlcpy((char *)(& drvinfo->version),"2.0.0-ko",32UL);
  {
    
#line 1341 
    struct device const *__mptr = (struct device const *)dev->dev.parent;
    
#line 1341 
    tmp_0 = (struct pci_dev *)__mptr + 18446744073709551464U;
  }
  
#line 1341 
  tmp_1 = pci_name((struct pci_dev const *)tmp_0);
  
#line 1341 
  ;
  
#line 1341 
  strlcpy((char *)(& drvinfo->bus_info),tmp_1,32UL);
  
#line 1343 
  snprintf((char *)(& drvinfo->fw_version),32UL,"%u.%u.%u.%u, TP %u.%u.%u.%u",adapter->params.dev.fwrev >> 24,(adapter->params.dev.fwrev >> 16) & 255U,(adapter->params.dev.fwrev >> 8) & 255U,adapter->params.dev.fwrev & 255U,adapter->params.dev.tprev >> 24,(adapter->params.dev.tprev >> 16) & 255U,(adapter->params.dev.tprev >> 8) & 255U,adapter->params.dev.tprev & 255U);
  
#line 1353 
  return;
}


#line 1358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static u32 cxgb4vf_get_msglevel(struct net_device *dev)
{
  u32 __retres;
  struct adapter *tmp;
  
#line 1360 
  tmp = netdev2adap((struct net_device const *)dev);
  
#line 1360 
  __retres = tmp->msg_enable;
  
#line 1360 
  return __retres;
}


#line 1366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void cxgb4vf_set_msglevel(struct net_device *dev, u32 msglevel)
{
  struct adapter *tmp;
  
#line 1368 
  tmp = netdev2adap((struct net_device const *)dev);
  
#line 1368 
  tmp->msg_enable = msglevel;
  
#line 1369 
  return;
}


#line 1377  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void cxgb4vf_get_ringparam(struct net_device *dev, struct ethtool_ringparam *rp)
{
  
#line 1380 
  struct port_info const *pi = netdev_priv((struct net_device const *)dev);
  
#line 1381 
  struct sge const *s = (struct sge const *)(& (pi->adapter)->sge);
  
#line 1383 
  rp->rx_max_pending = 16384U;
  
#line 1384 
  rp->rx_mini_max_pending = 16384U;
  
#line 1385 
  rp->rx_jumbo_max_pending = 0U;
  
#line 1386 
  rp->tx_max_pending = 16384U;
  
#line 1388 
  rp->rx_pending = s->ethrxq[(int)pi->first_qset].fl.size + 4294967288U;
  
#line 1389 
  rp->rx_mini_pending = s->ethrxq[(int)pi->first_qset].rspq.size;
  
#line 1390 
  rp->rx_jumbo_pending = 0U;
  
#line 1391 
  rp->tx_pending = s->ethtxq[(int)pi->first_qset].q.size;
  
#line 1392 
  return;
}


#line 1400  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int cxgb4vf_set_ringparam(struct net_device *dev, struct ethtool_ringparam *rp)
{
  int __retres;
  int qs;
  
#line 1403 
  struct port_info const *pi = netdev_priv((struct net_device const *)dev);
  
#line 1404 
  struct adapter *adapter = pi->adapter;
  
#line 1405 
  struct sge *s = & adapter->sge;
  
#line 1408 
  if ((((((rp->rx_pending > 16384U || rp->rx_jumbo_pending != 0U) || rp->tx_pending > 16384U) || rp->rx_mini_pending > 16384U) || rp->rx_mini_pending <= 127U) || rp->rx_pending <= 15U) || rp->tx_pending <= 31U) {
    
#line 1415 
    __retres = -22;
    
#line 1415 
    goto return_label;
  }
  else ;
  
#line 1417 
  if ((adapter->flags & 1UL) != 0UL) {
    
#line 1418 
    __retres = -16;
    
#line 1418 
    goto return_label;
  }
  else ;
  
#line 1420 
  qs = (int)pi->first_qset;
  
#line 1420 
  goto ldv_49234;
  ldv_49233: 
#line 1421 
  ;
  
#line 1421 
  s->ethrxq[qs].fl.size = rp->rx_pending + 8U;
  
#line 1422 
  s->ethrxq[qs].rspq.size = rp->rx_mini_pending;
  
#line 1423 
  s->ethtxq[qs].q.size = rp->tx_pending;
  
#line 1420 
  qs += 1;
  ldv_49234: 
#line 1421 
  ;
  
#line 1420 
  if ((int)pi->first_qset + (int)pi->nqsets > qs) 
#line 1422 
                                                  goto ldv_49233; else 
                                                                    
#line 1425 
                                                                    goto ldv_49235;
  ldv_49235: 
#line 1426 
  ;
  
#line 1425 
  __retres = 0;
  return_label: 
#line 1425 
                return __retres;
}


#line 1433  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int cxgb4vf_get_coalesce(struct net_device *dev, struct ethtool_coalesce *coalesce)
{
  int __retres;
  int tmp_0;
  
#line 1436 
  struct port_info const *pi = netdev_priv((struct net_device const *)dev);
  
#line 1437 
  struct adapter const *adapter = (struct adapter const *)pi->adapter;
  
#line 1438 
  struct sge_rspq const *rspq = & adapter->sge.ethrxq[(int)pi->first_qset].rspq;
  
#line 1440 
  coalesce->rx_coalesce_usecs = qtimer_val(adapter,rspq);
  
#line 1444 
  if (((unsigned int)rspq->intr_params & 1U) != 0U) 
#line 1444 
                                                    tmp_0 = (int)adapter->sge.counter_val[(int)rspq->pktcnt_idx]; else 
                                                                    
#line 1444 
                                                                    tmp_0 = 0;
  
#line 1441 
  coalesce->rx_max_coalesced_frames = (unsigned int)tmp_0;
  
#line 1445 
  __retres = 0;
  
#line 1445 
  return __retres;
}


#line 1453  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int cxgb4vf_set_coalesce(struct net_device *dev, struct ethtool_coalesce *coalesce)
{
  int tmp_0;
  
#line 1456 
  struct port_info const *pi = netdev_priv((struct net_device const *)dev);
  
#line 1457 
  struct adapter *adapter = pi->adapter;
  
#line 1459 
  tmp_0 = set_rxq_intr_params(adapter,& adapter->sge.ethrxq[(int)pi->first_qset].rspq,coalesce->rx_coalesce_usecs,coalesce->rx_max_coalesced_frames);
  
#line 1459 
  return tmp_0;
}


#line 1468  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void cxgb4vf_get_pauseparam(struct net_device *dev, struct ethtool_pauseparam *pauseparam)
{
  
#line 1471 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 1473 
  pauseparam->autoneg = (unsigned int)(((int)pi->link_cfg.requested_fc & 4) != 0);
  
#line 1474 
  pauseparam->rx_pause = (unsigned int)(((int)pi->link_cfg.fc & 1) != 0);
  
#line 1475 
  pauseparam->tx_pause = (unsigned int)(((int)pi->link_cfg.fc & 2) != 0);
  
#line 1476 
  return;
}


#line 1481  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int cxgb4vf_phys_id(struct net_device *dev, enum ethtool_phys_id_state state)
{
  int __retres;
  unsigned int val;
  int tmp_0;
  
#line 1485 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 1487 
  if (state == (unsigned int)ETHTOOL_ID_ACTIVE) 
#line 1488 
                                                val = 65535U;
  else 
    
#line 1489 
    if (state == (unsigned int)ETHTOOL_ID_INACTIVE) 
#line 1490 
                                                    val = 0U;
    else {
      
#line 1492 
      __retres = -22;
      
#line 1492 
      goto return_label;
    }
  
#line 1494 
  tmp_0 = t4vf_identify_port(pi->adapter,(unsigned int)pi->viid,val);
  
#line 1494 
  __retres = tmp_0;
  return_label: 
#line 1494 
                return __retres;
}


#line 1515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static char const stats_strings[23U][32U] = {{(char)'T', (char)'x', (char)'B', (char)'r', (char)'o', (char)'a', (char)'d', (char)'c', (char)'a', (char)'s', (char)'t', (char)'B', (char)'y', (char)'t', (char)'e', (char)'s', (char)' ', (char)' ', (char)'\000'}, {(char)'T', (char)'x', (char)'B', (char)'r', (char)'o', (char)'a', (char)'d', (char)'c', (char)'a', (char)'s', (char)'t', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)' ', (char)'\000'}, {(char)'T', (char)'x', (char)'M', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'B', (char)'y', (char)'t', (char)'e', (char)'s', (char)' ', (char)' ', (char)'\000'}, {(char)'T', (char)'x', (char)'M', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)' ', (char)'\000'}, {(char)'T', (char)'x', (char)'U', (char)'n', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'B', (char)'y', (char)'t', (char)'e', (char)'s', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'T', (char)'x', (char)'U', (char)'n', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'T', (char)'x', (char)'D', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'T', (char)'x', (char)'O', (char)'f', (char)'f', (char)'l', (char)'o', (char)'a', (char)'d', (char)'B', (char)'y', (char)'t', (char)'e', (char)'s', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'T', (char)'x', (char)'O', (char)'f', (char)'f', (char)'l', (char)'o', (char)'a', (char)'d', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'B', (char)'r', (char)'o', (char)'a', (char)'d', (char)'c', (char)'a', (char)'s', (char)'t', (char)'B', (char)'y', (char)'t', (char)'e', (char)'s', (char)' ', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'B', (char)'r', (char)'o', (char)'a', (char)'d', (char)'c', (char)'a', (char)'s', (char)'t', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'M', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'B', (char)'y', (char)'t', (char)'e', (char)'s', (char)' ', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'M', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'U', (char)'n', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'B', (char)'y', (char)'t', (char)'e', (char)'s', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'U', (char)'n', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'E', (char)'r', (char)'r', (char)'o', (char)'r', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'T', (char)'S', (char)'O', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'T', (char)'x', (char)'C', (char)'s', (char)'u', (char)'m', (char)'O', (char)'f', (char)'f', (char)'l', (char)'o', (char)'a', (char)'d', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'C', (char)'s', (char)'u', (char)'m', (char)'G', (char)'o', (char)'o', (char)'d', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'V', (char)'L', (char)'A', (char)'N', (char)'e', (char)'x', (char)'t', (char)'r', (char)'a', (char)'c', (char)'t', (char)'i', (char)'o', (char)'n', (char)'s', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'V', (char)'L', (char)'A', (char)'N', (char)'i', (char)'n', (char)'s', (char)'e', (char)'r', (char)'t', (char)'i', (char)'o', (char)'n', (char)'s', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'G', (char)'R', (char)'O', (char)'P', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'G', (char)'R', (char)'O', (char)'M', (char)'e', (char)'r', (char)'g', (char)'e', (char)'d', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}};

#line 1552  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int cxgb4vf_get_sset_count(struct net_device *dev, int sset)
{
  int __retres;
  
#line 1554 
  switch (sset) {
    case 1: 
#line 1555 
    ;
    
#line 1556 
    __retres = 23;
    
#line 1556 
    goto return_label;
    default: 
#line 1557 
    ;
    
#line 1558 
    __retres = -95;
    
#line 1558 
    goto return_label;
  }
  return_label: 
#line 1554 
                return __retres;
}


#line 1566  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void cxgb4vf_get_strings(struct net_device *dev, u32 sset, u8 *data)
{
  
#line 1570 
  switch (sset) {
    case (u32)1: 
#line 1571 
    ;
    
#line 1572 
    memcpy((void *)data,(void const *)(& stats_strings),736UL);
    
#line 1573 
    goto ldv_49284;
  }
  ldv_49284: 
#line 1575 
  ;
  
#line 1576 
  return;
}


#line 1581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void collect_sge_port_stats(struct adapter const *adapter, struct port_info const *pi, struct queue_port_stats *stats)
{
  int qs;
  
#line 1585 
  struct sge_eth_txq const *txq = & adapter->sge.ethtxq[(int)pi->first_qset];
  
#line 1586 
  struct sge_eth_rxq const *rxq = & adapter->sge.ethrxq[(int)pi->first_qset];
  
#line 1589 
  memset((void *)stats,0,56UL);
  
#line 1590 
  qs = 0;
  
#line 1590 
  goto ldv_49294;
  ldv_49293: 
#line 1591 
  ;
  
#line 1591 
  stats->tso += (unsigned long long)txq->tso;
  
#line 1592 
  stats->tx_csum += (unsigned long long)txq->tx_cso;
  
#line 1593 
  stats->rx_csum += (unsigned long long)rxq->stats.rx_cso;
  
#line 1594 
  stats->vlan_ex += (unsigned long long)rxq->stats.vlan_ex;
  
#line 1595 
  stats->vlan_ins += (unsigned long long)txq->vlan_ins;
  
#line 1596 
  stats->lro_pkts += (unsigned long long)rxq->stats.lro_pkts;
  
#line 1597 
  stats->lro_merged += (unsigned long long)rxq->stats.lro_merged;
  
#line 1590 
  qs += 1;
  
#line 1590 
  rxq += 1;
  
#line 1590 
  txq += 1;
  ldv_49294: 
#line 1591 
  ;
  
#line 1590 
  if ((int)pi->nqsets > qs) 
#line 1592 
                            goto ldv_49293; else 
#line 1595 
                                                 goto ldv_49295;
  ldv_49295: 
#line 1596 
  ;
  
#line 1597 
  return;
}


#line 1604  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void cxgb4vf_get_ethtool_stats(struct net_device *dev, struct ethtool_stats *stats, u64 *data)
{
  
#line 1608 
  struct port_info *pi = netdev2pinfo((struct net_device const *)dev);
  
#line 1609 
  struct adapter *adapter = pi->adapter;
  
#line 1610 
  int err = t4vf_get_port_stats(adapter,(int)pi->pidx,(struct t4vf_port_stats *)data);
  
#line 1612 
  if (err != 0) 
#line 1613 
                memset((void *)data,0,128UL); else ;
  
#line 1615 
  data += 16U;
  
#line 1616 
  collect_sge_port_stats((struct adapter const *)adapter,(struct port_info const *)pi,(struct queue_port_stats *)data);
  
#line 1617 
  return;
}


#line 1622  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int cxgb4vf_get_regs_len(struct net_device *dev)
{
  int __retres;
  
#line 1624 
  __retres = 1024;
  
#line 1624 
  return __retres;
}


#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void reg_block_dump(struct adapter *adapter, void *regbuf, unsigned int start, unsigned int end)
{
  
#line 1633 
  u32 *bp = (u32 *)(regbuf + start);
  
#line 1635 
  goto ldv_49315;
  ldv_49314: 
#line 1636 
  ;
  
#line 1641 
  if (start == 768U) {
    u32 *tmp;
    
#line 1642 
    tmp = bp;
    
#line 1642 
    bp += 1;
    
#line 1642 
    *tmp = 65535U;
  }
  else {
    u32 *tmp_0;
    
#line 1644 
    tmp_0 = bp;
    
#line 1644 
    bp += 1;
    
#line 1644 
    *tmp_0 = t4_read_reg(adapter,start);
  }
  
#line 1635 
  start += 4U;
  ldv_49315: 
#line 1636 
  ;
  
#line 1635 
  if (start <= end) 
#line 1637 
                    goto ldv_49314; else 
#line 1640 
                                         goto ldv_49316;
  ldv_49316: 
#line 1641 
  ;
  
#line 1642 
  return;
}


#line 1651  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void cxgb4vf_get_regs(struct net_device *dev, struct ethtool_regs *regs, void *regbuf)
{
  int tmp_1;
  int tmp_0;
  
#line 1655 
  struct adapter *adapter = netdev2adap((struct net_device const *)dev);
  
#line 1657 
  regs->version = mk_adap_vers((struct adapter const *)adapter);
  
#line 1662 
  memset(regbuf,0,1024UL);
  
#line 1664 
  reg_block_dump(adapter,regbuf,0U,4U);
  
#line 1667 
  reg_block_dump(adapter,regbuf,256U,508U);
  
#line 1675 
  tmp_0 = is_t4(adapter->params.chip);
  
#line 1675 
  if (tmp_0 != 0) 
#line 1675 
                  tmp_1 = 512; else 
#line 1675 
                                    tmp_1 = 520;
  
#line 1673 
  ;
  
#line 1673 
  ;
  
#line 1673 
  reg_block_dump(adapter,regbuf,512U,(unsigned int)tmp_1);
  
#line 1677 
  reg_block_dump(adapter,regbuf,768U,772U);
  
#line 1681 
  reg_block_dump(adapter,regbuf,576U,636U);
  
#line 1682 
  return;
}


#line 1689  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void cxgb4vf_get_wol(struct net_device *dev, struct ethtool_wolinfo *wol)
{
  
#line 1692 
  wol->supported = 0U;
  
#line 1693 
  wol->wolopts = 0U;
  
#line 1694 
  memset((void *)(& wol->sopass),0,6UL);
  
#line 1695 
  return;
}


#line 1702  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static struct ethtool_ops const cxgb4vf_ethtool_ops = {.get_settings = & cxgb4vf_get_settings, .set_settings = (int (*)(struct net_device *, struct ethtool_cmd *))0, .get_drvinfo = & cxgb4vf_get_drvinfo, .get_regs_len = & cxgb4vf_get_regs_len, .get_regs = & cxgb4vf_get_regs, .get_wol = & cxgb4vf_get_wol, .set_wol = (int (*)(struct net_device *, struct ethtool_wolinfo *))0, .get_msglevel = & cxgb4vf_get_msglevel, .set_msglevel = & cxgb4vf_set_msglevel, .nway_reset = (int (*)(struct net_device *))0, .get_link = & ethtool_op_get_link, .get_eeprom_len = (int (*)(struct net_device *))0, .get_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .set_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_coalesce = & cxgb4vf_get_coalesce, .set_coalesce = & cxgb4vf_set_coalesce, .get_ringparam = & cxgb4vf_get_ringparam, .set_ringparam = & cxgb4vf_set_ringparam, .get_pauseparam = & cxgb4vf_get_pauseparam, .set_pauseparam = (int (*)(struct net_device *, struct ethtool_pauseparam *))0, .self_test = (void (*)(struct net_device *, struct ethtool_test *, u64 *))0, .get_strings = & cxgb4vf_get_strings, .set_phys_id = & cxgb4vf_phys_id, .get_ethtool_stats = & cxgb4vf_get_ethtool_stats, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = & cxgb4vf_get_sset_count, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = (int (*)(struct net_device *, struct ethtool_ts_info *))0, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 1732  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int sge_qinfo_show(struct seq_file *seq, void *v)
{
  int __retres;
  int qs;
  
#line 1734 
  struct adapter *adapter = (struct adapter *)seq->private;
  
#line 1735 
  int eth_entries = ((int)adapter->sge.ethqsets + 3) / 4;
  
#line 1736 
  int r = (int)((long)v + (long)4294967295U);
  
#line 1738 
  if (r != 0) 
#line 1739 
              seq_putc(seq,(char)10); else ;
  
#line 1752 
  if (r < eth_entries) {
    int tmp_0;
    char *tmp_1;
    int tmp_3;
    unsigned int tmp_4;
    
#line 1753 
    struct sge_eth_rxq const *rxq = (struct sge_eth_rxq const *)(& adapter->sge.ethrxq[r * 4]);
    
#line 1754 
    struct sge_eth_txq const *txq = (struct sge_eth_txq const *)(& adapter->sge.ethtxq[r * 4]);
    {
      int tmp;
      
#line 1755 
      int _min1 = 4;
      
#line 1755 
      int _min2 = (int)adapter->sge.ethqsets - r * 4;
      
#line 1755 
      if (_min1 < _min2) 
#line 1755 
                         tmp = _min1; else 
#line 1755 
                                           tmp = _min2;
      
#line 1755 
      tmp_0 = tmp;
    }
    
#line 1755 
    int n = tmp_0;
    
#line 1757 
    seq_printf(seq,"%-12s",(char *)"QType:");
    
#line 1757 
    qs = 0;
    
#line 1757 
    goto ldv_49343;
    ldv_49342: 
#line 1758 
    ;
    
#line 1757 
    seq_printf(seq," %16",(char *)"Ethernet");
    
#line 1757 
    qs += 1;
    ldv_49343: 
#line 1758 
    ;
    
#line 1757 
    if (qs < n) 
#line 1759 
                goto ldv_49342; else 
#line 1762 
                                     goto ldv_49344;
    ldv_49344: 
#line 1763 
    ;
    
#line 1757 
    seq_putc(seq,(char)10);
    
#line 1758 
    seq_printf(seq,"%-12s",(char *)"Interface:");
    
#line 1758 
    qs = 0;
    
#line 1758 
    goto ldv_49346;
    ldv_49345: 
#line 1759 
    ;
    
#line 1758 
    if ((rxq + qs)->rspq.netdev != (struct net_device *)0) 
#line 1758 
                                                           tmp_1 = (char *)(& ((rxq + qs)->rspq.netdev)->name); else 
                                                                    
#line 1758 
                                                                    tmp_1 = (char *)"N/A";
    
#line 1758 
    ;
    
#line 1758 
    seq_printf(seq," %16",tmp_1);
    
#line 1758 
    qs += 1;
    ldv_49346: 
#line 1759 
    ;
    
#line 1758 
    if (qs < n) 
#line 1760 
                goto ldv_49345; else 
#line 1763 
                                     goto ldv_49347;
    ldv_49347: 
#line 1764 
    ;
    
#line 1758 
    seq_putc(seq,(char)10);
    
#line 1762 
    seq_printf(seq,"%-12s",(char *)"Port:");
    
#line 1762 
    qs = 0;
    
#line 1762 
    goto ldv_49349;
    ldv_49348: 
#line 1763 
    ;
    
#line 1762 
    if ((rxq + qs)->rspq.netdev != (struct net_device *)0) {
      void *tmp_2;
      
#line 1762 
      tmp_2 = netdev_priv((struct net_device const *)(rxq + qs)->rspq.netdev);
      
#line 1762 
      tmp_3 = (int)((struct port_info *)tmp_2)->port_id;
    }
    else 
#line 1762 
         tmp_3 = -1;
    
#line 1762 
    ;
    
#line 1762 
    seq_printf(seq," %16",tmp_3);
    
#line 1762 
    qs += 1;
    ldv_49349: 
#line 1763 
    ;
    
#line 1762 
    if (qs < n) 
#line 1764 
                goto ldv_49348; else 
#line 1767 
                                     goto ldv_49350;
    ldv_49350: 
#line 1768 
    ;
    
#line 1762 
    seq_putc(seq,(char)10);
    
#line 1767 
    seq_printf(seq,"%-12s",(char *)"TxQ ID:");
    
#line 1767 
    qs = 0;
    
#line 1767 
    goto ldv_49352;
    ldv_49351: 
#line 1768 
    ;
    
#line 1767 
    seq_printf(seq," %16",(txq + qs)->q.abs_id);
    
#line 1767 
    qs += 1;
    ldv_49352: 
#line 1768 
    ;
    
#line 1767 
    if (qs < n) 
#line 1769 
                goto ldv_49351; else 
#line 1772 
                                     goto ldv_49353;
    ldv_49353: 
#line 1773 
    ;
    
#line 1767 
    seq_putc(seq,(char)10);
    
#line 1768 
    seq_printf(seq,"%-12s",(char *)"TxQ size:");
    
#line 1768 
    qs = 0;
    
#line 1768 
    goto ldv_49355;
    ldv_49354: 
#line 1769 
    ;
    
#line 1768 
    seq_printf(seq," %16",(txq + qs)->q.size);
    
#line 1768 
    qs += 1;
    ldv_49355: 
#line 1769 
    ;
    
#line 1768 
    if (qs < n) 
#line 1770 
                goto ldv_49354; else 
#line 1773 
                                     goto ldv_49356;
    ldv_49356: 
#line 1774 
    ;
    
#line 1768 
    seq_putc(seq,(char)10);
    
#line 1769 
    seq_printf(seq,"%-12s",(char *)"TxQ inuse:");
    
#line 1769 
    qs = 0;
    
#line 1769 
    goto ldv_49358;
    ldv_49357: 
#line 1770 
    ;
    
#line 1769 
    seq_printf(seq," %16",(txq + qs)->q.in_use);
    
#line 1769 
    qs += 1;
    ldv_49358: 
#line 1770 
    ;
    
#line 1769 
    if (qs < n) 
#line 1771 
                goto ldv_49357; else 
#line 1774 
                                     goto ldv_49359;
    ldv_49359: 
#line 1775 
    ;
    
#line 1769 
    seq_putc(seq,(char)10);
    
#line 1770 
    seq_printf(seq,"%-12s",(char *)"TxQ PIdx:");
    
#line 1770 
    qs = 0;
    
#line 1770 
    goto ldv_49361;
    ldv_49360: 
#line 1771 
    ;
    
#line 1770 
    seq_printf(seq," %16",(txq + qs)->q.pidx);
    
#line 1770 
    qs += 1;
    ldv_49361: 
#line 1771 
    ;
    
#line 1770 
    if (qs < n) 
#line 1772 
                goto ldv_49360; else 
#line 1775 
                                     goto ldv_49362;
    ldv_49362: 
#line 1776 
    ;
    
#line 1770 
    seq_putc(seq,(char)10);
    
#line 1771 
    seq_printf(seq,"%-12s",(char *)"TxQ CIdx:");
    
#line 1771 
    qs = 0;
    
#line 1771 
    goto ldv_49364;
    ldv_49363: 
#line 1772 
    ;
    
#line 1771 
    seq_printf(seq," %16",(txq + qs)->q.cidx);
    
#line 1771 
    qs += 1;
    ldv_49364: 
#line 1772 
    ;
    
#line 1771 
    if (qs < n) 
#line 1773 
                goto ldv_49363; else 
#line 1776 
                                     goto ldv_49365;
    ldv_49365: 
#line 1777 
    ;
    
#line 1771 
    seq_putc(seq,(char)10);
    
#line 1772 
    seq_printf(seq,"%-12s",(char *)"RspQ ID:");
    
#line 1772 
    qs = 0;
    
#line 1772 
    goto ldv_49367;
    ldv_49366: 
#line 1773 
    ;
    
#line 1772 
    seq_printf(seq," %16",(int)(rxq + qs)->rspq.abs_id);
    
#line 1772 
    qs += 1;
    ldv_49367: 
#line 1773 
    ;
    
#line 1772 
    if (qs < n) 
#line 1774 
                goto ldv_49366; else 
#line 1777 
                                     goto ldv_49368;
    ldv_49368: 
#line 1778 
    ;
    
#line 1772 
    seq_putc(seq,(char)10);
    
#line 1773 
    seq_printf(seq,"%-12s",(char *)"RspQ size:");
    
#line 1773 
    qs = 0;
    
#line 1773 
    goto ldv_49370;
    ldv_49369: 
#line 1774 
    ;
    
#line 1773 
    seq_printf(seq," %16",(rxq + qs)->rspq.size);
    
#line 1773 
    qs += 1;
    ldv_49370: 
#line 1774 
    ;
    
#line 1773 
    if (qs < n) 
#line 1775 
                goto ldv_49369; else 
#line 1778 
                                     goto ldv_49371;
    ldv_49371: 
#line 1779 
    ;
    
#line 1773 
    seq_putc(seq,(char)10);
    
#line 1774 
    seq_printf(seq,"%-12s",(char *)"RspQE size:");
    
#line 1774 
    qs = 0;
    
#line 1774 
    goto ldv_49373;
    ldv_49372: 
#line 1775 
    ;
    
#line 1774 
    seq_printf(seq," %16",(rxq + qs)->rspq.iqe_len);
    
#line 1774 
    qs += 1;
    ldv_49373: 
#line 1775 
    ;
    
#line 1774 
    if (qs < n) 
#line 1776 
                goto ldv_49372; else 
#line 1779 
                                     goto ldv_49374;
    ldv_49374: 
#line 1780 
    ;
    
#line 1774 
    seq_putc(seq,(char)10);
    
#line 1775 
    seq_printf(seq,"%-12s",(char *)"Intr delay:");
    
#line 1775 
    qs = 0;
    
#line 1775 
    goto ldv_49376;
    ldv_49375: 
#line 1776 
    ;
    
#line 1775 
    tmp_4 = qtimer_val((struct adapter const *)adapter,& (rxq + qs)->rspq);
    
#line 1775 
    ;
    
#line 1775 
    seq_printf(seq," %16",tmp_4);
    
#line 1775 
    qs += 1;
    ldv_49376: 
#line 1776 
    ;
    
#line 1775 
    if (qs < n) 
#line 1777 
                goto ldv_49375; else 
#line 1780 
                                     goto ldv_49377;
    ldv_49377: 
#line 1781 
    ;
    
#line 1775 
    seq_putc(seq,(char)10);
    
#line 1776 
    seq_printf(seq,"%-12s",(char *)"Intr pktcnt:");
    
#line 1776 
    qs = 0;
    
#line 1776 
    goto ldv_49379;
    ldv_49378: 
#line 1777 
    ;
    
#line 1776 
    seq_printf(seq," %16",(int)adapter->sge.counter_val[(int)(rxq + qs)->rspq.pktcnt_idx]);
    
#line 1776 
    qs += 1;
    ldv_49379: 
#line 1777 
    ;
    
#line 1776 
    if (qs < n) 
#line 1778 
                goto ldv_49378; else 
#line 1781 
                                     goto ldv_49380;
    ldv_49380: 
#line 1782 
    ;
    
#line 1776 
    seq_putc(seq,(char)10);
    
#line 1778 
    seq_printf(seq,"%-12s",(char *)"RspQ CIdx:");
    
#line 1778 
    qs = 0;
    
#line 1778 
    goto ldv_49382;
    ldv_49381: 
#line 1779 
    ;
    
#line 1778 
    seq_printf(seq," %16",(rxq + qs)->rspq.cidx);
    
#line 1778 
    qs += 1;
    ldv_49382: 
#line 1779 
    ;
    
#line 1778 
    if (qs < n) 
#line 1780 
                goto ldv_49381; else 
#line 1783 
                                     goto ldv_49383;
    ldv_49383: 
#line 1784 
    ;
    
#line 1778 
    seq_putc(seq,(char)10);
    
#line 1779 
    seq_printf(seq,"%-12s",(char *)"RspQ Gen:");
    
#line 1779 
    qs = 0;
    
#line 1779 
    goto ldv_49385;
    ldv_49384: 
#line 1780 
    ;
    
#line 1779 
    seq_printf(seq," %16",(int)(rxq + qs)->rspq.gen);
    
#line 1779 
    qs += 1;
    ldv_49385: 
#line 1780 
    ;
    
#line 1779 
    if (qs < n) 
#line 1781 
                goto ldv_49384; else 
#line 1784 
                                     goto ldv_49386;
    ldv_49386: 
#line 1785 
    ;
    
#line 1779 
    seq_putc(seq,(char)10);
    
#line 1780 
    seq_printf(seq,"%-12s",(char *)"FL ID:");
    
#line 1780 
    qs = 0;
    
#line 1780 
    goto ldv_49388;
    ldv_49387: 
#line 1781 
    ;
    
#line 1780 
    seq_printf(seq," %16",(rxq + qs)->fl.abs_id);
    
#line 1780 
    qs += 1;
    ldv_49388: 
#line 1781 
    ;
    
#line 1780 
    if (qs < n) 
#line 1782 
                goto ldv_49387; else 
#line 1785 
                                     goto ldv_49389;
    ldv_49389: 
#line 1786 
    ;
    
#line 1780 
    seq_putc(seq,(char)10);
    
#line 1781 
    seq_printf(seq,"%-12s",(char *)"FL size:");
    
#line 1781 
    qs = 0;
    
#line 1781 
    goto ldv_49391;
    ldv_49390: 
#line 1782 
    ;
    
#line 1781 
    seq_printf(seq," %16",(rxq + qs)->fl.size + 4294967288U);
    
#line 1781 
    qs += 1;
    ldv_49391: 
#line 1782 
    ;
    
#line 1781 
    if (qs < n) 
#line 1783 
                goto ldv_49390; else 
#line 1786 
                                     goto ldv_49392;
    ldv_49392: 
#line 1787 
    ;
    
#line 1781 
    seq_putc(seq,(char)10);
    
#line 1782 
    seq_printf(seq,"%-12s",(char *)"FL avail:");
    
#line 1782 
    qs = 0;
    
#line 1782 
    goto ldv_49394;
    ldv_49393: 
#line 1783 
    ;
    
#line 1782 
    seq_printf(seq," %16",(rxq + qs)->fl.avail);
    
#line 1782 
    qs += 1;
    ldv_49394: 
#line 1783 
    ;
    
#line 1782 
    if (qs < n) 
#line 1784 
                goto ldv_49393; else 
#line 1787 
                                     goto ldv_49395;
    ldv_49395: 
#line 1788 
    ;
    
#line 1782 
    seq_putc(seq,(char)10);
    
#line 1783 
    seq_printf(seq,"%-12s",(char *)"FL PIdx:");
    
#line 1783 
    qs = 0;
    
#line 1783 
    goto ldv_49397;
    ldv_49396: 
#line 1784 
    ;
    
#line 1783 
    seq_printf(seq," %16",(rxq + qs)->fl.pidx);
    
#line 1783 
    qs += 1;
    ldv_49397: 
#line 1784 
    ;
    
#line 1783 
    if (qs < n) 
#line 1785 
                goto ldv_49396; else 
#line 1788 
                                     goto ldv_49398;
    ldv_49398: 
#line 1789 
    ;
    
#line 1783 
    seq_putc(seq,(char)10);
    
#line 1784 
    seq_printf(seq,"%-12s",(char *)"FL CIdx:");
    
#line 1784 
    qs = 0;
    
#line 1784 
    goto ldv_49400;
    ldv_49399: 
#line 1785 
    ;
    
#line 1784 
    seq_printf(seq," %16",(rxq + qs)->fl.cidx);
    
#line 1784 
    qs += 1;
    ldv_49400: 
#line 1785 
    ;
    
#line 1784 
    if (qs < n) 
#line 1786 
                goto ldv_49399; else 
#line 1789 
                                     goto ldv_49401;
    ldv_49401: 
#line 1790 
    ;
    
#line 1784 
    seq_putc(seq,(char)10);
    
#line 1785 
    __retres = 0;
    
#line 1785 
    goto return_label;
  }
  else ;
  
#line 1788 
  r -= eth_entries;
  
#line 1789 
  if (r == 0) {
    unsigned int tmp_5;
    
#line 1790 
    struct sge_rspq const *evtq = (struct sge_rspq const *)(& adapter->sge.fw_evtq);
    
#line 1792 
    seq_printf(seq,"%-12s %16s\n",(char *)"QType:",(char *)"FW event queue");
    
#line 1793 
    seq_printf(seq,"%-12s %16u\n",(char *)"RspQ ID:",(int)evtq->abs_id);
    
#line 1794 
    tmp_5 = qtimer_val((struct adapter const *)adapter,evtq);
    
#line 1794 
    ;
    
#line 1794 
    seq_printf(seq,"%-12s %16u\n",(char *)"Intr delay:",tmp_5);
    
#line 1796 
    seq_printf(seq,"%-12s %16u\n",(char *)"Intr pktcnt:",(int)adapter->sge.counter_val[(int)evtq->pktcnt_idx]);
    
#line 1798 
    seq_printf(seq,"%-12s %16u\n",(char *)"RspQ Cidx:",evtq->cidx);
    
#line 1799 
    seq_printf(seq,"%-12s %16u\n",(char *)"RspQ Gen:",(int)evtq->gen);
  }
  else 
    
#line 1800 
    if (r == 1) {
      unsigned int tmp_6;
      
#line 1801 
      struct sge_rspq const *intrq = (struct sge_rspq const *)(& adapter->sge.intrq);
      
#line 1803 
      seq_printf(seq,"%-12s %16s\n",(char *)"QType:",(char *)"Interrupt Queue");
      
#line 1804 
      seq_printf(seq,"%-12s %16u\n",(char *)"RspQ ID:",(int)intrq->abs_id);
      
#line 1805 
      tmp_6 = qtimer_val((struct adapter const *)adapter,intrq);
      
#line 1805 
      ;
      
#line 1805 
      seq_printf(seq,"%-12s %16u\n",(char *)"Intr delay:",tmp_6);
      
#line 1807 
      seq_printf(seq,"%-12s %16u\n",(char *)"Intr pktcnt:",(int)adapter->sge.counter_val[(int)intrq->pktcnt_idx]);
      
#line 1809 
      seq_printf(seq,"%-12s %16u\n",(char *)"RspQ Cidx:",intrq->cidx);
      
#line 1810 
      seq_printf(seq,"%-12s %16u\n",(char *)"RspQ Gen:",(int)intrq->gen);
    }
    else ;
  
#line 1818 
  __retres = 0;
  return_label: 
#line 1818 
                return __retres;
}


#line 1829  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int sge_queue_entries(struct adapter const *adapter)
{
  int __retres;
  
#line 1831 
  __retres = (((int)adapter->sge.ethqsets + 3) / 4 + 1) + ((adapter->flags & 2UL) != 0UL);
  
#line 1831 
  return __retres;
}


#line 1835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void *sge_queue_start(struct seq_file *seq, loff_t *pos)
{
  void *tmp_0;
  
#line 1837 
  int entries = sge_queue_entries((struct adapter const *)seq->private);
  
#line 1839 
  if (*pos < (long long)entries) 
#line 1839 
                                 tmp_0 = (void *)((unsigned long)*pos + 1UL); else 
                                                                    
#line 1839 
                                                                    tmp_0 = (void *)0;
  
#line 1839 
  return tmp_0;
}


#line 1842  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void sge_queue_stop(struct seq_file *seq, void *v)
{
  
#line 1844 
  return;
}


#line 1846  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void *sge_queue_next(struct seq_file *seq, void *v, loff_t *pos)
{
  void *tmp_0;
  
#line 1848 
  int entries = sge_queue_entries((struct adapter const *)seq->private);
  
#line 1850 
  *pos += 1LL;
  
#line 1851 
  if (*pos < (long long)entries) 
#line 1851 
                                 tmp_0 = (void *)((unsigned long)*pos + 1UL); else 
                                                                    
#line 1851 
                                                                    tmp_0 = (void *)0;
  
#line 1851 
  return tmp_0;
}


#line 1854  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static struct seq_operations const sge_qinfo_seq_ops = {.start = & sge_queue_start, .stop = & sge_queue_stop, .next = & sge_queue_next, .show = & sge_qinfo_show};

#line 1861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int sge_qinfo_open(struct inode *inode, struct file *file)
{
  
#line 1863 
  int res = ldv_seq_open_82(file,& sge_qinfo_seq_ops);
  
#line 1865 
  if (res == 0) {
    
#line 1866 
    struct seq_file *seq = (struct seq_file *)file->private_data;
    
#line 1867 
    seq->private = inode->i_private;
  }
  else ;
  
#line 1869 
  return res;
}


#line 1872  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static struct file_operations const sge_qinfo_debugfs_fops = {.owner = & __this_module, .llseek = & seq_lseek, .read = & seq_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & sge_qinfo_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & seq_release, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 1885  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int sge_qstats_show(struct seq_file *seq, void *v)
{
  int __retres;
  int qs;
  
#line 1887 
  struct adapter *adapter = (struct adapter *)seq->private;
  
#line 1888 
  int eth_entries = ((int)adapter->sge.ethqsets + 3) / 4;
  
#line 1889 
  int r = (int)((long)v + (long)4294967295U);
  
#line 1891 
  if (r != 0) 
#line 1892 
              seq_putc(seq,(char)10); else ;
  
#line 1909 
  if (r < eth_entries) {
    int tmp_0;
    char *tmp_1;
    
#line 1910 
    struct sge_eth_rxq const *rxq = (struct sge_eth_rxq const *)(& adapter->sge.ethrxq[r * 4]);
    
#line 1911 
    struct sge_eth_txq const *txq = (struct sge_eth_txq const *)(& adapter->sge.ethtxq[r * 4]);
    {
      int tmp;
      
#line 1912 
      int _min1 = 4;
      
#line 1912 
      int _min2 = (int)adapter->sge.ethqsets - r * 4;
      
#line 1912 
      if (_min1 < _min2) 
#line 1912 
                         tmp = _min1; else 
#line 1912 
                                           tmp = _min2;
      
#line 1912 
      tmp_0 = tmp;
    }
    
#line 1912 
    int n = tmp_0;
    
#line 1914 
    seq_printf(seq,"%-16s",(char *)"QType:");
    
#line 1914 
    qs = 0;
    
#line 1914 
    goto ldv_49445;
    ldv_49444: 
#line 1915 
    ;
    
#line 1914 
    seq_printf(seq," %8",(char *)"Ethernet");
    
#line 1914 
    qs += 1;
    ldv_49445: 
#line 1915 
    ;
    
#line 1914 
    if (qs < n) 
#line 1916 
                goto ldv_49444; else 
#line 1919 
                                     goto ldv_49446;
    ldv_49446: 
#line 1920 
    ;
    
#line 1914 
    seq_putc(seq,(char)10);
    
#line 1915 
    seq_printf(seq,"%-16s",(char *)"Interface:");
    
#line 1915 
    qs = 0;
    
#line 1915 
    goto ldv_49448;
    ldv_49447: 
#line 1916 
    ;
    
#line 1915 
    if ((rxq + qs)->rspq.netdev != (struct net_device *)0) 
#line 1915 
                                                           tmp_1 = (char *)(& ((rxq + qs)->rspq.netdev)->name); else 
                                                                    
#line 1915 
                                                                    tmp_1 = (char *)"N/A";
    
#line 1915 
    ;
    
#line 1915 
    seq_printf(seq," %8",tmp_1);
    
#line 1915 
    qs += 1;
    ldv_49448: 
#line 1916 
    ;
    
#line 1915 
    if (qs < n) 
#line 1917 
                goto ldv_49447; else 
#line 1920 
                                     goto ldv_49449;
    ldv_49449: 
#line 1921 
    ;
    
#line 1915 
    seq_putc(seq,(char)10);
    
#line 1919 
    seq_printf(seq,"%-16s",(char *)"RspQNullInts:");
    
#line 1919 
    qs = 0;
    
#line 1919 
    goto ldv_49451;
    ldv_49450: 
#line 1920 
    ;
    
#line 1919 
    seq_printf(seq," %8",(rxq + qs)->rspq.unhandled_irqs);
    
#line 1919 
    qs += 1;
    ldv_49451: 
#line 1920 
    ;
    
#line 1919 
    if (qs < n) 
#line 1921 
                goto ldv_49450; else 
#line 1924 
                                     goto ldv_49452;
    ldv_49452: 
#line 1925 
    ;
    
#line 1919 
    seq_putc(seq,(char)10);
    
#line 1920 
    seq_printf(seq,"%-16s",(char *)"RxPackets:");
    
#line 1920 
    qs = 0;
    
#line 1920 
    goto ldv_49454;
    ldv_49453: 
#line 1921 
    ;
    
#line 1920 
    seq_printf(seq," %8",(rxq + qs)->stats.pkts);
    
#line 1920 
    qs += 1;
    ldv_49454: 
#line 1921 
    ;
    
#line 1920 
    if (qs < n) 
#line 1922 
                goto ldv_49453; else 
#line 1925 
                                     goto ldv_49455;
    ldv_49455: 
#line 1926 
    ;
    
#line 1920 
    seq_putc(seq,(char)10);
    
#line 1921 
    seq_printf(seq,"%-16s",(char *)"RxCSO:");
    
#line 1921 
    qs = 0;
    
#line 1921 
    goto ldv_49457;
    ldv_49456: 
#line 1922 
    ;
    
#line 1921 
    seq_printf(seq," %8",(rxq + qs)->stats.rx_cso);
    
#line 1921 
    qs += 1;
    ldv_49457: 
#line 1922 
    ;
    
#line 1921 
    if (qs < n) 
#line 1923 
                goto ldv_49456; else 
#line 1926 
                                     goto ldv_49458;
    ldv_49458: 
#line 1927 
    ;
    
#line 1921 
    seq_putc(seq,(char)10);
    
#line 1922 
    seq_printf(seq,"%-16s",(char *)"VLANxtract:");
    
#line 1922 
    qs = 0;
    
#line 1922 
    goto ldv_49460;
    ldv_49459: 
#line 1923 
    ;
    
#line 1922 
    seq_printf(seq," %8",(rxq + qs)->stats.vlan_ex);
    
#line 1922 
    qs += 1;
    ldv_49460: 
#line 1923 
    ;
    
#line 1922 
    if (qs < n) 
#line 1924 
                goto ldv_49459; else 
#line 1927 
                                     goto ldv_49461;
    ldv_49461: 
#line 1928 
    ;
    
#line 1922 
    seq_putc(seq,(char)10);
    
#line 1923 
    seq_printf(seq,"%-16s",(char *)"LROmerged:");
    
#line 1923 
    qs = 0;
    
#line 1923 
    goto ldv_49463;
    ldv_49462: 
#line 1924 
    ;
    
#line 1923 
    seq_printf(seq," %8",(rxq + qs)->stats.lro_merged);
    
#line 1923 
    qs += 1;
    ldv_49463: 
#line 1924 
    ;
    
#line 1923 
    if (qs < n) 
#line 1925 
                goto ldv_49462; else 
#line 1928 
                                     goto ldv_49464;
    ldv_49464: 
#line 1929 
    ;
    
#line 1923 
    seq_putc(seq,(char)10);
    
#line 1924 
    seq_printf(seq,"%-16s",(char *)"LROpackets:");
    
#line 1924 
    qs = 0;
    
#line 1924 
    goto ldv_49466;
    ldv_49465: 
#line 1925 
    ;
    
#line 1924 
    seq_printf(seq," %8",(rxq + qs)->stats.lro_pkts);
    
#line 1924 
    qs += 1;
    ldv_49466: 
#line 1925 
    ;
    
#line 1924 
    if (qs < n) 
#line 1926 
                goto ldv_49465; else 
#line 1929 
                                     goto ldv_49467;
    ldv_49467: 
#line 1930 
    ;
    
#line 1924 
    seq_putc(seq,(char)10);
    
#line 1925 
    seq_printf(seq,"%-16s",(char *)"RxDrops:");
    
#line 1925 
    qs = 0;
    
#line 1925 
    goto ldv_49469;
    ldv_49468: 
#line 1926 
    ;
    
#line 1925 
    seq_printf(seq," %8",(rxq + qs)->stats.rx_drops);
    
#line 1925 
    qs += 1;
    ldv_49469: 
#line 1926 
    ;
    
#line 1925 
    if (qs < n) 
#line 1927 
                goto ldv_49468; else 
#line 1930 
                                     goto ldv_49470;
    ldv_49470: 
#line 1931 
    ;
    
#line 1925 
    seq_putc(seq,(char)10);
    
#line 1926 
    seq_printf(seq,"%-16s",(char *)"TSO:");
    
#line 1926 
    qs = 0;
    
#line 1926 
    goto ldv_49472;
    ldv_49471: 
#line 1927 
    ;
    
#line 1926 
    seq_printf(seq," %8",(txq + qs)->tso);
    
#line 1926 
    qs += 1;
    ldv_49472: 
#line 1927 
    ;
    
#line 1926 
    if (qs < n) 
#line 1928 
                goto ldv_49471; else 
#line 1931 
                                     goto ldv_49473;
    ldv_49473: 
#line 1932 
    ;
    
#line 1926 
    seq_putc(seq,(char)10);
    
#line 1927 
    seq_printf(seq,"%-16s",(char *)"TxCSO:");
    
#line 1927 
    qs = 0;
    
#line 1927 
    goto ldv_49475;
    ldv_49474: 
#line 1928 
    ;
    
#line 1927 
    seq_printf(seq," %8",(txq + qs)->tx_cso);
    
#line 1927 
    qs += 1;
    ldv_49475: 
#line 1928 
    ;
    
#line 1927 
    if (qs < n) 
#line 1929 
                goto ldv_49474; else 
#line 1932 
                                     goto ldv_49476;
    ldv_49476: 
#line 1933 
    ;
    
#line 1927 
    seq_putc(seq,(char)10);
    
#line 1928 
    seq_printf(seq,"%-16s",(char *)"VLANins:");
    
#line 1928 
    qs = 0;
    
#line 1928 
    goto ldv_49478;
    ldv_49477: 
#line 1929 
    ;
    
#line 1928 
    seq_printf(seq," %8",(txq + qs)->vlan_ins);
    
#line 1928 
    qs += 1;
    ldv_49478: 
#line 1929 
    ;
    
#line 1928 
    if (qs < n) 
#line 1930 
                goto ldv_49477; else 
#line 1933 
                                     goto ldv_49479;
    ldv_49479: 
#line 1934 
    ;
    
#line 1928 
    seq_putc(seq,(char)10);
    
#line 1929 
    seq_printf(seq,"%-16s",(char *)"TxQFull:");
    
#line 1929 
    qs = 0;
    
#line 1929 
    goto ldv_49481;
    ldv_49480: 
#line 1930 
    ;
    
#line 1929 
    seq_printf(seq," %8",(txq + qs)->q.stops);
    
#line 1929 
    qs += 1;
    ldv_49481: 
#line 1930 
    ;
    
#line 1929 
    if (qs < n) 
#line 1931 
                goto ldv_49480; else 
#line 1934 
                                     goto ldv_49482;
    ldv_49482: 
#line 1935 
    ;
    
#line 1929 
    seq_putc(seq,(char)10);
    
#line 1930 
    seq_printf(seq,"%-16s",(char *)"TxQRestarts:");
    
#line 1930 
    qs = 0;
    
#line 1930 
    goto ldv_49484;
    ldv_49483: 
#line 1931 
    ;
    
#line 1930 
    seq_printf(seq," %8",(txq + qs)->q.restarts);
    
#line 1930 
    qs += 1;
    ldv_49484: 
#line 1931 
    ;
    
#line 1930 
    if (qs < n) 
#line 1932 
                goto ldv_49483; else 
#line 1935 
                                     goto ldv_49485;
    ldv_49485: 
#line 1936 
    ;
    
#line 1930 
    seq_putc(seq,(char)10);
    
#line 1931 
    seq_printf(seq,"%-16s",(char *)"TxMapErr:");
    
#line 1931 
    qs = 0;
    
#line 1931 
    goto ldv_49487;
    ldv_49486: 
#line 1932 
    ;
    
#line 1931 
    seq_printf(seq," %8",(txq + qs)->mapping_err);
    
#line 1931 
    qs += 1;
    ldv_49487: 
#line 1932 
    ;
    
#line 1931 
    if (qs < n) 
#line 1933 
                goto ldv_49486; else 
#line 1936 
                                     goto ldv_49488;
    ldv_49488: 
#line 1937 
    ;
    
#line 1931 
    seq_putc(seq,(char)10);
    
#line 1932 
    seq_printf(seq,"%-16s",(char *)"FLAllocErr:");
    
#line 1932 
    qs = 0;
    
#line 1932 
    goto ldv_49490;
    ldv_49489: 
#line 1933 
    ;
    
#line 1932 
    seq_printf(seq," %8",(rxq + qs)->fl.alloc_failed);
    
#line 1932 
    qs += 1;
    ldv_49490: 
#line 1933 
    ;
    
#line 1932 
    if (qs < n) 
#line 1934 
                goto ldv_49489; else 
#line 1937 
                                     goto ldv_49491;
    ldv_49491: 
#line 1938 
    ;
    
#line 1932 
    seq_putc(seq,(char)10);
    
#line 1933 
    seq_printf(seq,"%-16s",(char *)"FLLrgAlcErr:");
    
#line 1933 
    qs = 0;
    
#line 1933 
    goto ldv_49493;
    ldv_49492: 
#line 1934 
    ;
    
#line 1933 
    seq_printf(seq," %8",(rxq + qs)->fl.large_alloc_failed);
    
#line 1933 
    qs += 1;
    ldv_49493: 
#line 1934 
    ;
    
#line 1933 
    if (qs < n) 
#line 1935 
                goto ldv_49492; else 
#line 1938 
                                     goto ldv_49494;
    ldv_49494: 
#line 1939 
    ;
    
#line 1933 
    seq_putc(seq,(char)10);
    
#line 1934 
    seq_printf(seq,"%-16s",(char *)"FLStarving:");
    
#line 1934 
    qs = 0;
    
#line 1934 
    goto ldv_49496;
    ldv_49495: 
#line 1935 
    ;
    
#line 1934 
    seq_printf(seq," %8",(rxq + qs)->fl.starving);
    
#line 1934 
    qs += 1;
    ldv_49496: 
#line 1935 
    ;
    
#line 1934 
    if (qs < n) 
#line 1936 
                goto ldv_49495; else 
#line 1939 
                                     goto ldv_49497;
    ldv_49497: 
#line 1940 
    ;
    
#line 1934 
    seq_putc(seq,(char)10);
    
#line 1935 
    __retres = 0;
    
#line 1935 
    goto return_label;
  }
  else ;
  
#line 1938 
  r -= eth_entries;
  
#line 1939 
  if (r == 0) {
    
#line 1940 
    struct sge_rspq const *evtq = (struct sge_rspq const *)(& adapter->sge.fw_evtq);
    
#line 1942 
    seq_printf(seq,"%-8s %16s\n",(char *)"QType:",(char *)"FW event queue");
    
#line 1943 
    seq_printf(seq,"%-16s %8u\n",(char *)"RspQNullInts:",evtq->unhandled_irqs);
    
#line 1945 
    seq_printf(seq,"%-16s %8u\n",(char *)"RspQ CIdx:",evtq->cidx);
    
#line 1946 
    seq_printf(seq,"%-16s %8u\n",(char *)"RspQ Gen:",(int)evtq->gen);
  }
  else 
    
#line 1947 
    if (r == 1) {
      
#line 1948 
      struct sge_rspq const *intrq = (struct sge_rspq const *)(& adapter->sge.intrq);
      
#line 1950 
      seq_printf(seq,"%-8s %16s\n",(char *)"QType:",(char *)"Interrupt Queue");
      
#line 1951 
      seq_printf(seq,"%-16s %8u\n",(char *)"RspQNullInts:",intrq->unhandled_irqs);
      
#line 1953 
      seq_printf(seq,"%-16s %8u\n",(char *)"RspQ CIdx:",intrq->cidx);
      
#line 1954 
      seq_printf(seq,"%-16s %8u\n",(char *)"RspQ Gen:",(int)intrq->gen);
    }
    else ;
  
#line 1964 
  __retres = 0;
  return_label: 
#line 1964 
                return __retres;
}


#line 1975  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int sge_qstats_entries(struct adapter const *adapter)
{
  int __retres;
  
#line 1977 
  __retres = (((int)adapter->sge.ethqsets + 3) / 4 + 1) + ((adapter->flags & 2UL) != 0UL);
  
#line 1977 
  return __retres;
}


#line 1981  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void *sge_qstats_start(struct seq_file *seq, loff_t *pos)
{
  void *tmp_0;
  
#line 1983 
  int entries = sge_qstats_entries((struct adapter const *)seq->private);
  
#line 1985 
  if (*pos < (long long)entries) 
#line 1985 
                                 tmp_0 = (void *)((unsigned long)*pos + 1UL); else 
                                                                    
#line 1985 
                                                                    tmp_0 = (void *)0;
  
#line 1985 
  return tmp_0;
}


#line 1988  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void sge_qstats_stop(struct seq_file *seq, void *v)
{
  
#line 1990 
  return;
}


#line 1992  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void *sge_qstats_next(struct seq_file *seq, void *v, loff_t *pos)
{
  void *tmp_0;
  
#line 1994 
  int entries = sge_qstats_entries((struct adapter const *)seq->private);
  
#line 1996 
  *pos += 1LL;
  
#line 1997 
  if (*pos < (long long)entries) 
#line 1997 
                                 tmp_0 = (void *)((unsigned long)*pos + 1UL); else 
                                                                    
#line 1997 
                                                                    tmp_0 = (void *)0;
  
#line 1997 
  return tmp_0;
}


#line 2000  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static struct seq_operations const sge_qstats_seq_ops = {.start = & sge_qstats_start, .stop = & sge_qstats_stop, .next = & sge_qstats_next, .show = & sge_qstats_show};

#line 2007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int sge_qstats_open(struct inode *inode, struct file *file)
{
  
#line 2009 
  int res = ldv_seq_open_83(file,& sge_qstats_seq_ops);
  
#line 2011 
  if (res == 0) {
    
#line 2012 
    struct seq_file *seq = (struct seq_file *)file->private_data;
    
#line 2013 
    seq->private = inode->i_private;
  }
  else ;
  
#line 2015 
  return res;
}


#line 2018  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static struct file_operations const sge_qstats_proc_fops = {.owner = & __this_module, .llseek = & seq_lseek, .read = & seq_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & sge_qstats_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & seq_release, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2029  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int resources_show(struct seq_file *seq, void *v)
{
  int __retres;
  
#line 2031 
  struct adapter *adapter = (struct adapter *)seq->private;
  
#line 2032 
  struct vf_resources *vfres = & adapter->params.vfres;
  
#line 2038 
  seq_printf(seq,"%-60s ",(char *)"Virtual Interfaces",vfres->nvi);
  
#line 2039 
  seq_printf(seq,"%-60s ",(char *)"Egress Queues",vfres->neq);
  
#line 2040 
  seq_printf(seq,"%-60s ",(char *)"Ethernet Control",vfres->nethctrl);
  
#line 2041 
  seq_printf(seq,"%-60s ",(char *)"Ingress Queues/w Free Lists/Interrupts",vfres->niqflint);
  
#line 2042 
  seq_printf(seq,"%-60s ",(char *)"Ingress Queues",vfres->niq);
  
#line 2043 
  seq_printf(seq,"%-60s ",(char *)"Traffic Class",vfres->tc);
  
#line 2044 
  seq_printf(seq,"%-60s ",(char *)"Port Access Rights Mask",vfres->pmask);
  
#line 2045 
  seq_printf(seq,"%-60s ",(char *)"MAC Address Filters",vfres->nexactf);
  
#line 2046 
  seq_printf(seq,"%-60s ",(char *)"Firmware Command Read Capabilities",vfres->r_caps);
  
#line 2047 
  seq_printf(seq,"%-60s ",(char *)"Firmware Command Write/Execute Capabilities",vfres->wx_caps);
  
#line 2051 
  __retres = 0;
  
#line 2051 
  return __retres;
}


#line 2054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int resources_open(struct inode *inode, struct file *file)
{
  int tmp;
  
#line 2056 
  tmp = single_open(file,& resources_show,inode->i_private);
  
#line 2056 
  return tmp;
}


#line 2059  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static struct file_operations const resources_proc_fops = {.owner = & __this_module, .llseek = & seq_lseek, .read = & seq_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & resources_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & single_release, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2070  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int interfaces_show(struct seq_file *seq, void *v)
{
  int __retres;
  
#line 2072 
  if (v == (void *)1) 
#line 2073 
                      seq_puts(seq,"Interface  Port   VIID\n");
  else {
    
#line 2075 
    struct adapter *adapter = (struct adapter *)seq->private;
    
#line 2076 
    int pidx = (int)((long)v + (long)4294967294U);
    
#line 2077 
    struct net_device *dev = adapter->port[pidx];
    
#line 2078 
    struct port_info *pi = netdev_priv((struct net_device const *)dev);
    
#line 2080 
    seq_printf(seq,"%9s  %4d  %#5x\n",(char *)(& dev->name),(int)pi->port_id,(int)pi->viid);
  }
  
#line 2083 
  __retres = 0;
  
#line 2083 
  return __retres;
}


#line 2086  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
__inline static void *interfaces_get_idx(struct adapter *adapter, loff_t pos)
{
  void *tmp;
  
#line 2088 
  if ((long long)adapter->params.nports >= pos) 
#line 2088 
                                                tmp = (void *)(pos + 1LL); else 
                                                                    
#line 2088 
                                                                    tmp = (void *)0;
  
#line 2090 
  return tmp;
}


#line 2093  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void *interfaces_start(struct seq_file *seq, loff_t *pos)
{
  void *tmp_0;
  
#line 2095 
  if (*pos != 0LL) 
#line 2096 
                   tmp_0 = interfaces_get_idx((struct adapter *)seq->private,*pos); else 
                                                                    
#line 2095 
                                                                    tmp_0 = (void *)1;
  
#line 2097 
  return tmp_0;
}


#line 2100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void *interfaces_next(struct seq_file *seq, void *v, loff_t *pos)
{
  void *tmp;
  
#line 2102 
  *pos += 1LL;
  
#line 2103 
  tmp = interfaces_get_idx((struct adapter *)seq->private,*pos);
  
#line 2103 
  return tmp;
}


#line 2106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void interfaces_stop(struct seq_file *seq, void *v)
{
  
#line 2108 
  return;
}


#line 2110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static struct seq_operations const interfaces_seq_ops = {.start = & interfaces_start, .stop = & interfaces_stop, .next = & interfaces_next, .show = & interfaces_show};

#line 2117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int interfaces_open(struct inode *inode, struct file *file)
{
  
#line 2119 
  int res = ldv_seq_open_84(file,& interfaces_seq_ops);
  
#line 2121 
  if (res == 0) {
    
#line 2122 
    struct seq_file *seq = (struct seq_file *)file->private_data;
    
#line 2123 
    seq->private = inode->i_private;
  }
  else ;
  
#line 2125 
  return res;
}


#line 2128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static struct file_operations const interfaces_proc_fops = {.owner = & __this_module, .llseek = & seq_lseek, .read = & seq_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & interfaces_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & seq_release, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 2145  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static struct cxgb4vf_debugfs_entry debugfs_files[4U] = {{.name = "sge_qinfo", .mode = (unsigned short)292U, .fops = & sge_qinfo_debugfs_fops}, {.name = "sge_qstats", .mode = (unsigned short)292U, .fops = & sge_qstats_proc_fops}, {.name = "resources", .mode = (unsigned short)292U, .fops = & resources_proc_fops}, {.name = "interfaces", .mode = (unsigned short)292U, .fops = & interfaces_proc_fops}};

#line 2161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int setup_debugfs(struct adapter *adapter)
{
  int __retres;
  int i;
  bool tmp;
  
#line 2165 
  tmp = IS_ERR_OR_NULL((void const *)adapter->debugfs_root);
  
#line 2165 
  if ((long)((int)tmp != 0) != 0L) {
    
#line 2167 
    ldv_inline_asm();
    
#line 2165 
    ;
  }
  else ;
  
#line 2170 
  i = 0;
  
#line 2170 
  goto ldv_49583;
  ldv_49582: 
#line 2171 
  ;
  
#line 2171 
  ldv_debugfs_create_file_85(debugfs_files[i].name,(unsigned short)((int)debugfs_files[i].mode),adapter->debugfs_root,(void *)adapter,debugfs_files[i].fops);
  
#line 2170 
  i += 1;
  ldv_49583: 
#line 2171 
  ;
  
#line 2170 
  if ((unsigned int)i <= 3U) 
#line 2172 
                             goto ldv_49582; else 
#line 2175 
                                                  goto ldv_49584;
  ldv_49584: 
#line 2176 
  ;
  
#line 2177 
  __retres = 0;
  
#line 2177 
  return __retres;
}


#line 2184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void cleanup_debugfs(struct adapter *adapter)
{
  bool tmp;
  
#line 2186 
  tmp = IS_ERR_OR_NULL((void const *)adapter->debugfs_root);
  
#line 2186 
  if ((long)((int)tmp != 0) != 0L) {
    
#line 2188 
    ldv_inline_asm();
    
#line 2186 
    ;
  }
  else ;
  
#line 2188 
  return;
}


#line 2202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int adap_init0(struct adapter *adapter)
{
  int __retres;
  unsigned int ethqsets;
  int err;
  u32 param;
  unsigned int tmp;
  unsigned int tmp_0;
  unsigned int tmp_1;
  unsigned int tmp_2;
  unsigned int tmp_3;
  unsigned int tmp_4;
  
#line 2204 
  struct vf_resources *vfres = & adapter->params.vfres;
  
#line 2205 
  struct sge_params *sge_params = & adapter->params.sge;
  
#line 2206 
  struct sge *s = & adapter->sge;
  
#line 2209 
  u32 val = 0U;
  
#line 2214 
  err = t4vf_wait_dev_ready(adapter);
  
#line 2215 
  if (err != 0) {
    
#line 2216 
    dev_err((struct device const *)adapter->pdev_dev,"device didn\'t become ready:",err);
    
#line 2218 
    __retres = err;
    
#line 2218 
    goto return_label;
  }
  else ;
  
#line 2231 
  err = t4vf_fw_reset(adapter);
  
#line 2232 
  if (err < 0) {
    
#line 2233 
    dev_err((struct device const *)adapter->pdev_dev,"FW reset failed: err=%d\n",err);
    
#line 2234 
    __retres = err;
    
#line 2234 
    goto return_label;
  }
  else ;
  
#line 2245 
  err = t4vf_get_dev_params(adapter);
  
#line 2246 
  if (err != 0) {
    
#line 2247 
    dev_err((struct device const *)adapter->pdev_dev,"unable to retrieve adapter",err);
    
#line 2249 
    __retres = err;
    
#line 2249 
    goto return_label;
  }
  else ;
  
#line 2251 
  err = t4vf_get_vpd_params(adapter);
  
#line 2252 
  if (err != 0) {
    
#line 2253 
    dev_err((struct device const *)adapter->pdev_dev,"unable to retrieve adapter",err);
    
#line 2255 
    __retres = err;
    
#line 2255 
    goto return_label;
  }
  else ;
  
#line 2257 
  err = t4vf_get_sge_params(adapter);
  
#line 2258 
  if (err != 0) {
    
#line 2259 
    dev_err((struct device const *)adapter->pdev_dev,"unable to retrieve adapter",err);
    
#line 2261 
    __retres = err;
    
#line 2261 
    goto return_label;
  }
  else ;
  
#line 2263 
  err = t4vf_get_rss_glb_config(adapter);
  
#line 2264 
  if (err != 0) {
    
#line 2265 
    dev_err((struct device const *)adapter->pdev_dev,"unable to retrieve adapter",err);
    
#line 2267 
    __retres = err;
    
#line 2267 
    goto return_label;
  }
  else ;
  
#line 2269 
  if (adapter->params.rss.mode != 1U) {
    
#line 2271 
    dev_err((struct device const *)adapter->pdev_dev,"unable to operate with global RSS",adapter->params.rss.mode);
    
#line 2273 
    __retres = -22;
    
#line 2273 
    goto return_label;
  }
  else ;
  
#line 2275 
  err = t4vf_sge_init(adapter);
  
#line 2276 
  if (err != 0) {
    
#line 2277 
    dev_err((struct device const *)adapter->pdev_dev,"unable to use adapter parameters:",err);
    
#line 2279 
    __retres = err;
    
#line 2279 
    goto return_label;
  }
  else ;
  
#line 2287 
  param = 36765696U;
  
#line 2289 
  val = 1U;
  
#line 2290 
  t4vf_set_params(adapter,1U,(u32 const *)(& param),(u32 const *)(& val));
  
#line 2296 
  tmp = core_ticks_to_us((struct adapter const *)adapter,sge_params->sge_timer_value_0_and_1 >> 16);
  
#line 2296 
  s->timer_val[0] = (unsigned short)tmp;
  
#line 2298 
  tmp_0 = core_ticks_to_us((struct adapter const *)adapter,sge_params->sge_timer_value_0_and_1 & 65535U);
  
#line 2298 
  s->timer_val[1] = (unsigned short)tmp_0;
  
#line 2300 
  tmp_1 = core_ticks_to_us((struct adapter const *)adapter,sge_params->sge_timer_value_2_and_3 >> 16);
  
#line 2300 
  s->timer_val[2] = (unsigned short)tmp_1;
  
#line 2302 
  tmp_2 = core_ticks_to_us((struct adapter const *)adapter,sge_params->sge_timer_value_2_and_3 & 65535U);
  
#line 2302 
  s->timer_val[3] = (unsigned short)tmp_2;
  
#line 2304 
  tmp_3 = core_ticks_to_us((struct adapter const *)adapter,sge_params->sge_timer_value_4_and_5 >> 16);
  
#line 2304 
  s->timer_val[4] = (unsigned short)tmp_3;
  
#line 2306 
  tmp_4 = core_ticks_to_us((struct adapter const *)adapter,sge_params->sge_timer_value_4_and_5 & 65535U);
  
#line 2306 
  s->timer_val[5] = (unsigned short)tmp_4;
  
#line 2309 
  s->counter_val[0] = (unsigned char)((unsigned int)((unsigned char)(sge_params->sge_ingress_rx_threshold >> 24)) & 63U);
  
#line 2310 
  s->counter_val[1] = (unsigned char)((unsigned int)((unsigned char)(sge_params->sge_ingress_rx_threshold >> 16)) & 63U);
  
#line 2311 
  s->counter_val[2] = (unsigned char)((unsigned int)((unsigned char)(sge_params->sge_ingress_rx_threshold >> 8)) & 63U);
  
#line 2312 
  s->counter_val[3] = (unsigned char)((unsigned int)((unsigned char)sge_params->sge_ingress_rx_threshold) & 63U);
  
#line 2319 
  err = t4vf_get_vfres(adapter);
  
#line 2320 
  if (err != 0) {
    
#line 2321 
    dev_err((struct device const *)adapter->pdev_dev,"unable to get virtual interface",err);
    
#line 2323 
    __retres = err;
    
#line 2323 
    goto return_label;
  }
  else ;
  
#line 2330 
  adapter->params.nports = (unsigned char)vfres->nvi;
  
#line 2331 
  if ((unsigned int)adapter->params.nports > 1U) {
    
#line 2332 
    dev_warn((struct device const *)adapter->pdev_dev,"only using %d of %d allowed",1,(int)adapter->params.nports);
    
#line 2335 
    adapter->params.nports = (unsigned char)1U;
  }
  else ;
  
#line 2349 
  ethqsets = vfres->niqflint + 4294967294U;
  
#line 2350 
  if (vfres->nethctrl != ethqsets) {
    unsigned int tmp_6;
    
#line 2351 
    dev_warn((struct device const *)adapter->pdev_dev,"unequal number of [available]",ethqsets,vfres->nethctrl);
    {
      unsigned int tmp_5;
      
#line 2354 
      unsigned int _min1 = vfres->nethctrl;
      
#line 2354 
      unsigned int _min2 = ethqsets;
      
#line 2354 
      if (_min1 < _min2) 
#line 2354 
                         tmp_5 = _min1; else 
#line 2354 
                                             tmp_5 = _min2;
      
#line 2354 
      tmp_6 = tmp_5;
    }
    
#line 2354 
    ethqsets = tmp_6;
  }
  else ;
  
#line 2356 
  if (vfres->neq < ethqsets * 2U) {
    
#line 2357 
    dev_warn((struct device const *)adapter->pdev_dev,"Not enough Egress Contexts (%d)",vfres->neq,ethqsets);
    
#line 2360 
    ethqsets = vfres->neq / 2U;
  }
  else ;
  
#line 2362 
  if (ethqsets > 8U) {
    
#line 2363 
    dev_warn((struct device const *)adapter->pdev_dev,"only using %d of %d allowed Queue",8,(int)adapter->sge.max_ethqsets);
    
#line 2365 
    ethqsets = 8U;
  }
  else ;
  
#line 2367 
  if (vfres->niq != 0U || vfres->neq > ethqsets * 2U) 
#line 2368 
                                                      dev_warn((struct device const *)adapter->pdev_dev,"unused resources niq/neq (%d/%d)",vfres->niq,vfres->neq - ethqsets * 2U); else ;
  
#line 2371 
  adapter->sge.max_ethqsets = (unsigned short)ethqsets;
  
#line 2378 
  if ((int)adapter->sge.max_ethqsets < (int)((unsigned short)adapter->params.nports)) {
    
#line 2379 
    dev_warn((struct device const *)adapter->pdev_dev,"only using %d of %d available",(int)adapter->sge.max_ethqsets,(int)adapter->params.nports);
    
#line 2382 
    adapter->params.nports = (unsigned char)adapter->sge.max_ethqsets;
  }
  else ;
  
#line 2384 
  if ((unsigned int)adapter->params.nports == 0U) {
    
#line 2385 
    dev_err((struct device const *)adapter->pdev_dev,"no virtual interfaces configured/");
    
#line 2387 
    __retres = -22;
    
#line 2387 
    goto return_label;
  }
  else ;
  
#line 2389 
  __retres = 0;
  return_label: 
#line 2389 
                return __retres;
}


#line 2392  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
__inline static void init_rspq(struct sge_rspq *rspq, u8 timer_idx, u8 pkt_cnt_idx, unsigned int size, unsigned int iqe_size)
{
  unsigned int tmp;
  
#line 2396 
  if ((unsigned int)pkt_cnt_idx <= 3U) 
#line 2396 
                                       tmp = 1U; else 
#line 2396 
                                                      tmp = 0U;
  
#line 2396 
  rspq->intr_params = (unsigned char)((unsigned int)((int)timer_idx << 1U) | tmp);
  
#line 2399 
  if ((unsigned int)pkt_cnt_idx <= 3U) 
#line 2399 
                                       rspq->pktcnt_idx = pkt_cnt_idx; else 
                                                                    
#line 2399 
                                                                    rspq->pktcnt_idx = (unsigned char)0U;
  
#line 2402 
  rspq->iqe_len = iqe_size;
  
#line 2403 
  rspq->size = size;
  
#line 2404 
  return;
}


#line 2412  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void cfg_queues(struct adapter *adapter)
{
  int q10g;
  int n10g;
  int qidx;
  int pidx;
  int qs;
  size_t iqe_size;
  bool tmp_0;
  struct port_info *tmp;
  
#line 2414 
  struct sge *s = & adapter->sge;
  
#line 2423 
  if ((long)((adapter->flags & 6UL) == 0UL) != 0L) {
    
#line 2425 
    ldv_inline_asm();
    
#line 2423 
    ;
  }
  else ;
  
#line 2428 
  n10g = 0;
  
#line 2429 
  pidx = 0;
  
#line 2429 
  goto ldv_49619;
  ldv_49618: 
#line 2430 
  ;
  
#line 2430 
  tmp = adap2pinfo(adapter,pidx);
  
#line 2430 
  tmp_0 = is_x_10g_port((struct link_config const *)(& tmp->link_cfg));
  
#line 2430 
  n10g = (int)tmp_0 + n10g;
  
#line 2429 
  pidx += 1;
  ldv_49619: 
#line 2430 
  ;
  
#line 2429 
  if ((int)adapter->params.nports > pidx) 
#line 2431 
                                          goto ldv_49618; else 
#line 2434 
                                                               goto ldv_49620;
  ldv_49620: 
#line 2435 
  ;
  
#line 2436 
  if (n10g == 0) 
#line 2437 
                 q10g = 0;
  else {
    unsigned int tmp_2;
    
#line 2439 
    int n1g = (int)adapter->params.nports - n10g;
    
#line 2440 
    q10g = ((int)adapter->sge.max_ethqsets - n1g) / n10g;
    
#line 2441 
    tmp_2 = cpumask_weight(cpu_online_mask);
    
#line 2441 
    ;
    
#line 2441 
    if (tmp_2 < (unsigned int)q10g) {
      unsigned int tmp_1;
      
#line 2442 
      tmp_1 = cpumask_weight(cpu_online_mask);
      
#line 2442 
      q10g = (int)tmp_1;
    }
    else ;
  }
  
#line 2450 
  qidx = 0;
  
#line 2451 
  pidx = 0;
  
#line 2451 
  goto ldv_49624;
  ldv_49623: 
#line 2452 
  ;
  {
    bool tmp_4;
    
#line 2452 
    struct port_info *pi = adap2pinfo(adapter,pidx);
    
#line 2454 
    pi->first_qset = (unsigned char)qidx;
    
#line 2455 
    tmp_4 = is_x_10g_port((struct link_config const *)(& pi->link_cfg));
    
#line 2455 
    if ((int)tmp_4 != 0) 
#line 2455 
                         pi->nqsets = (unsigned char)q10g; else 
#line 2455 
                                                                pi->nqsets = (unsigned char)1U;
    
#line 2456 
    qidx = (int)pi->nqsets + qidx;
  }
  
#line 2451 
  pidx += 1;
  ldv_49624: 
#line 2452 
  ;
  
#line 2451 
  if ((int)adapter->params.nports > pidx) 
#line 2453 
                                          goto ldv_49623; else 
#line 2456 
                                                               goto ldv_49625;
  ldv_49625: 
#line 2457 
  ;
  
#line 2458 
  s->ethqsets = (unsigned short)qidx;
  
#line 2465 
  iqe_size = 64UL;
  
#line 2471 
  qs = 0;
  
#line 2471 
  goto ldv_49629;
  ldv_49628: 
#line 2472 
  ;
  {
    
#line 2472 
    struct sge_eth_rxq *rxq = & s->ethrxq[qs];
    
#line 2473 
    struct sge_eth_txq *txq = & s->ethtxq[qs];
    
#line 2475 
    init_rspq(& rxq->rspq,(unsigned char)0,(unsigned char)0,1024U,(unsigned int)iqe_size);
    
#line 2476 
    rxq->fl.size = 72U;
    
#line 2477 
    txq->q.size = 1024U;
  }
  
#line 2471 
  qs += 1;
  ldv_49629: 
#line 2472 
  ;
  
#line 2471 
  if ((int)s->max_ethqsets > qs) 
#line 2473 
                                 goto ldv_49628; else 
#line 2476 
                                                      goto ldv_49630;
  ldv_49630: 
#line 2477 
  ;
  
#line 2484 
  init_rspq(& s->fw_evtq,(unsigned char)6,(unsigned char)0,512U,(unsigned int)iqe_size);
  
#line 2499 
  init_rspq(& s->intrq,(unsigned char)6,(unsigned char)0,10U,(unsigned int)iqe_size);
  
#line 2500 
  return;
}


#line 2507  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void reduce_ethqs(struct adapter *adapter, int n)
{
  int i;
  struct port_info *pi;
  
#line 2516 
  if ((long)((int)adapter->params.nports > n) != 0L) {
    
#line 2518 
    ldv_inline_asm();
    
#line 2516 
    ;
  }
  else ;
  
#line 2517 
  goto ldv_49641;
  ldv_49640: 
#line 2518 
  ;
  
#line 2518 
  i = 0;
  
#line 2518 
  goto ldv_49639;
  ldv_49638: 
#line 2519 
  ;
  
#line 2519 
  pi = adap2pinfo(adapter,i);
  
#line 2520 
  if ((unsigned int)pi->nqsets > 1U) {
    
#line 2521 
    pi->nqsets = (u8)((int)pi->nqsets - 1);
    
#line 2522 
    adapter->sge.ethqsets = (u16)((int)adapter->sge.ethqsets - 1);
    
#line 2523 
    if ((int)adapter->sge.ethqsets <= n) 
#line 2524 
                                         goto ldv_49637; else ;
  }
  else ;
  
#line 2518 
  i += 1;
  ldv_49639: 
#line 2519 
  ;
  
#line 2518 
  if ((int)adapter->params.nports > i) 
#line 2520 
                                       goto ldv_49638; else 
#line 2523 
                                                            goto ldv_49637;
  ldv_49637: 
#line 2524 
  ;
  ldv_49641: 
#line 2525 
  ;
  
#line 2517 
  if ((int)adapter->sge.ethqsets > n) 
#line 2519 
                                      goto ldv_49640; else 
#line 2522 
                                                           goto ldv_49642;
  ldv_49642: 
#line 2523 
  ;
  
#line 2531 
  n = 0;
  
#line 2532 
  i = 0;
  
#line 2532 
  goto ldv_49644;
  ldv_49643: 
#line 2533 
  ;
  
#line 2533 
  pi = adap2pinfo(adapter,i);
  
#line 2534 
  pi->first_qset = (unsigned char)n;
  
#line 2535 
  n = (int)pi->nqsets + n;
  
#line 2532 
  i += 1;
  ldv_49644: 
#line 2533 
  ;
  
#line 2532 
  if ((int)adapter->params.nports > i) 
#line 2534 
                                       goto ldv_49643; else 
#line 2537 
                                                            goto ldv_49645;
  ldv_49645: 
#line 2538 
  ;
  
#line 2539 
  return;
}


#line 2546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int enable_msix(struct adapter *adapter)
{
  int __retres;
  int i;
  int want;
  int need;
  int nqsets;
  struct msix_entry entries[9U];
  
#line 2550 
  struct sge *s = & adapter->sge;
  
#line 2552 
  i = 0;
  
#line 2552 
  goto ldv_49656;
  ldv_49655: 
#line 2553 
  ;
  
#line 2553 
  entries[i].entry = (unsigned short)i;
  
#line 2552 
  i += 1;
  ldv_49656: 
#line 2553 
  ;
  
#line 2552 
  if (i <= 8) 
#line 2554 
              goto ldv_49655; else 
#line 2557 
                                   goto ldv_49657;
  ldv_49657: 
#line 2558 
  ;
  
#line 2562 
  want = (int)s->max_ethqsets + 1;
  
#line 2563 
  need = (int)adapter->params.nports + 1;
  
#line 2565 
  want = pci_enable_msix_range(adapter->pdev,(struct msix_entry *)(& entries),need,want);
  
#line 2566 
  if (want < 0) {
    
#line 2567 
    __retres = want;
    
#line 2567 
    goto return_label;
  }
  else ;
  
#line 2569 
  nqsets = want + -1;
  
#line 2570 
  if ((int)s->max_ethqsets > nqsets) {
    
#line 2571 
    dev_warn((struct device const *)adapter->pdev_dev,"only enough MSI-X vectors",nqsets);
    
#line 2573 
    s->max_ethqsets = (unsigned short)nqsets;
    
#line 2574 
    if ((int)s->ethqsets > nqsets) 
#line 2575 
                                   reduce_ethqs(adapter,nqsets); else ;
  }
  else ;
  
#line 2577 
  i = 0;
  
#line 2577 
  goto ldv_49659;
  ldv_49658: 
#line 2578 
  ;
  
#line 2578 
  adapter->msix_info[i].vec = (unsigned short)entries[i].vector;
  
#line 2577 
  i += 1;
  ldv_49659: 
#line 2578 
  ;
  
#line 2577 
  if (i < want) 
#line 2579 
                goto ldv_49658; else 
#line 2582 
                                     goto ldv_49660;
  ldv_49660: 
#line 2583 
  ;
  
#line 2580 
  __retres = 0;
  return_label: 
#line 2580 
                return __retres;
}


#line 2583  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static struct net_device_ops const cxgb4vf_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & cxgb4vf_open, .ndo_stop = & cxgb4vf_stop, .ndo_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *))(& t4vf_eth_xmit), .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & cxgb4vf_set_rxmode, .ndo_set_mac_address = & cxgb4vf_set_mac_addr, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & cxgb4vf_do_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & cxgb4vf_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = (void (*)(struct net_device *))0, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = & cxgb4vf_get_stats, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = & cxgb4vf_poll_controller, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = & cxgb4vf_fix_features, .ndo_set_features = & cxgb4vf_set_features, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 2605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int cxgb4vf_pci_probe(struct pci_dev *pdev, struct pci_device_id const *ent)
{
  int __retres;
  int pci_using_dac;
  int err;
  int pidx;
  unsigned int pmask;
  struct adapter *adapter;
  struct port_info *pi;
  struct net_device *netdev;
  int tmp_1;
  int tmp_7;
  bool tmp_6;
  char *tmp_11;
  int tmp_13;
  bool tmp_12;
  int tmp_17;
  int tmp_18;
  {
    bool __print_once;
    
#line 2619 
    if (! __print_once) {
      
#line 2619 
      __print_once = (_Bool)1;
      
#line 2619 
      printk("\001",(char *)"Chelsio T4/T5 Virtual Function (VF) Network Driver",(char *)"2.0.0-ko");
    }
    else ;
  }
  
#line 2624 
  err = pci_enable_device(pdev);
  
#line 2625 
  if (err != 0) {
    
#line 2626 
    dev_err((struct device const *)(& pdev->dev),"cannot enable PCI device\n");
    
#line 2627 
    __retres = err;
    
#line 2627 
    goto return_label;
  }
  else ;
  
#line 2634 
  err = pci_request_regions(pdev,"cxgb4vf");
  
#line 2635 
  if (err != 0) {
    
#line 2636 
    dev_err((struct device const *)(& pdev->dev),"cannot obtain PCI resources\n");
    
#line 2637 
    goto err_disable_device;
  }
  else ;
  
#line 2644 
  err = pci_set_dma_mask(pdev,18446744073709551615ULL);
  
#line 2645 
  if (err == 0) {
    
#line 2646 
    err = pci_set_consistent_dma_mask(pdev,18446744073709551615ULL);
    
#line 2647 
    if (err != 0) {
      
#line 2648 
      dev_err((struct device const *)(& pdev->dev),"unable to obtain 64-bit DMA for");
      
#line 2650 
      goto err_release_regions;
    }
    else ;
    
#line 2652 
    pci_using_dac = 1;
  }
  else {
    
#line 2654 
    err = pci_set_dma_mask(pdev,4294967295ULL);
    
#line 2655 
    if (err != 0) {
      
#line 2656 
      dev_err((struct device const *)(& pdev->dev),"no usable DMA configuration\n");
      
#line 2657 
      goto err_release_regions;
    }
    else ;
    
#line 2659 
    pci_using_dac = 0;
  }
  
#line 2665 
  pci_set_master(pdev);
  
#line 2670 
  adapter = (struct adapter *)kzalloc(7232UL,208U);
  
#line 2671 
  if (adapter == (struct adapter *)0) {
    
#line 2672 
    err = -12;
    
#line 2673 
    goto err_release_regions;
  }
  else ;
  
#line 2675 
  pci_set_drvdata(pdev,(void *)adapter);
  
#line 2676 
  adapter->pdev = pdev;
  
#line 2677 
  adapter->pdev_dev = & pdev->dev;
  
#line 2682 
  spinlock_check(& adapter->stats_lock);
  {
    struct lock_class_key __key;
    
#line 2682 
    __raw_spin_lock_init(& adapter->stats_lock.__anonCompField_spinlock_18.rlock,"&(&adapter->stats_lock)->rlock",& __key);
  }
  
#line 2687 
  adapter->regs = pci_ioremap_bar(pdev,0);
  
#line 2688 
  if (adapter->regs == (void *)0) {
    
#line 2689 
    dev_err((struct device const *)(& pdev->dev),"cannot map device registers\n");
    
#line 2690 
    err = -12;
    
#line 2691 
    goto err_free_adapter;
  }
  else ;
  
#line 2696 
  err = t4vf_prep_adapter(adapter);
  
#line 2697 
  if (err != 0) {
    
#line 2698 
    dev_err((struct device const *)adapter->pdev_dev,"device didn\'t become ready:",err);
    
#line 2700 
    goto err_unmap_bar0;
  }
  else ;
  
#line 2706 
  tmp_1 = is_t4(adapter->params.chip);
  
#line 2706 
  if (tmp_1 == 0) {
    resource_size_t tmp_0;
    
#line 2708 
    if (pdev->resource[2].start != 0ULL || pdev->resource[2].end != pdev->resource[2].start) 
      
#line 2708 
      tmp_0 = (pdev->resource[2].end - pdev->resource[2].start) + 1ULL; else 
                                                                    
#line 2708 
                                                                    tmp_0 = 0ULL;
    
#line 2707 
    ;
    
#line 2707 
    adapter->bar2 = ioremap_wc(pdev->resource[2].start,(unsigned long)tmp_0);
    
#line 2709 
    if (adapter->bar2 == (void *)0) {
      
#line 2710 
      dev_err((struct device const *)adapter->pdev_dev,"cannot map BAR2 doorbells\n");
      
#line 2711 
      err = -12;
      
#line 2712 
      goto err_unmap_bar0;
    }
    else ;
  }
  else ;
  
#line 2718 
  adapter->name = pci_name((struct pci_dev const *)pdev);
  
#line 2719 
  adapter->msg_enable = (unsigned int)dflt_msg_enable;
  
#line 2720 
  err = adap_init0(adapter);
  
#line 2721 
  if (err != 0) 
#line 2722 
                goto err_unmap_bar; else ;
  
#line 2727 
  pmask = adapter->params.vfres.pmask;
  
#line 2728 
  pidx = 0;
  
#line 2728 
  goto ldv_49685;
  ldv_49684: 
#line 2729 
  ;
  {
    int port_id;
    int viid;
    int tmp_2;
    
#line 2737 
    if (pmask == 0U) 
#line 2738 
                     goto ldv_49682; else ;
    
#line 2739 
    tmp_2 = fls((int)pmask);
    
#line 2739 
    port_id = tmp_2 + -1;
    
#line 2740 
    pmask = (unsigned int)(~ (1 << port_id)) & pmask;
    
#line 2741 
    viid = t4vf_alloc_vi(adapter,port_id);
    
#line 2742 
    if (viid < 0) {
      
#line 2743 
      dev_err((struct device const *)(& pdev->dev),"cannot allocate VI for port %d:",port_id,viid);
      
#line 2745 
      err = viid;
      
#line 2746 
      goto err_free_dev;
    }
    else ;
    
#line 2752 
    netdev = ldv_alloc_etherdev_mqs_86(40,8U,8U);
    
#line 2754 
    if (netdev == (struct net_device *)0) {
      
#line 2755 
      t4vf_free_vi(adapter,viid);
      
#line 2756 
      err = -12;
      
#line 2757 
      goto err_free_dev;
    }
    else ;
    
#line 2759 
    adapter->port[pidx] = netdev;
    
#line 2760 
    netdev->dev.parent = & pdev->dev;
    
#line 2761 
    pi = (struct port_info *)netdev_priv((struct net_device const *)netdev);
    
#line 2762 
    pi->adapter = adapter;
    
#line 2763 
    pi->pidx = (unsigned char)pidx;
    
#line 2764 
    pi->port_id = (unsigned char)port_id;
    
#line 2765 
    pi->viid = (unsigned short)viid;
    
#line 2771 
    pi->xact_addr_filt = (short)(-1);
    
#line 2772 
    netif_carrier_off(netdev);
    
#line 2773 
    netdev->irq = (int)pdev->irq;
    
#line 2775 
    netdev->hw_features = 17181507859ULL;
    
#line 2778 
    netdev->vlan_features = 1638451ULL;
    
#line 2781 
    netdev->features = netdev->hw_features | 128ULL;
    
#line 2783 
    if (pci_using_dac != 0) 
#line 2784 
                            netdev->features |= 32ULL; else ;
    
#line 2786 
    netdev->priv_flags |= 131072U;
    
#line 2788 
    netdev->netdev_ops = & cxgb4vf_netdev_ops;
    
#line 2789 
    netdev->ethtool_ops = & cxgb4vf_ethtool_ops;
    
#line 2794 
    err = t4vf_port_init(adapter,pidx);
    
#line 2795 
    if (err != 0) {
      
#line 2796 
      dev_err((struct device const *)(& pdev->dev),"cannot initialize port %d\n",pidx);
      
#line 2798 
      goto err_free_dev;
    }
    else ;
  }
  
#line 2728 
  pidx += 1;
  ldv_49685: 
#line 2729 
  ;
  
#line 2728 
  if ((int)adapter->params.nports > pidx) 
#line 2730 
                                          goto ldv_49684; else 
#line 2733 
                                                               goto ldv_49682;
  ldv_49682: 
#line 2734 
  ;
  
#line 2808 
  pidx = 0;
  
#line 2808 
  goto ldv_49688;
  ldv_49687: 
#line 2809 
  ;
  
#line 2809 
  netdev = adapter->port[pidx];
  
#line 2810 
  if (netdev == (struct net_device *)0) 
#line 2811 
                                        goto ldv_49686; else ;
  
#line 2813 
  err = ldv_register_netdev_87(netdev);
  
#line 2814 
  if (err != 0) {
    
#line 2815 
    dev_warn((struct device const *)(& pdev->dev),"cannot register net device %s,",(char *)(& netdev->name));
    
#line 2817 
    goto ldv_49686;
  }
  else ;
  
#line 2820 
  set_bit((long)pidx,(unsigned long volatile *)(& adapter->registered_device_map));
  ldv_49686: 
#line 2821 
  ;
  
#line 2808 
  pidx += 1;
  ldv_49688: 
#line 2809 
  ;
  
#line 2808 
  if ((int)adapter->params.nports > pidx) 
#line 2810 
                                          goto ldv_49687; else 
#line 2813 
                                                               goto ldv_49689;
  ldv_49689: 
#line 2814 
  ;
  
#line 2822 
  if (adapter->registered_device_map == 0UL) {
    
#line 2823 
    dev_err((struct device const *)(& pdev->dev),"could not register any net devices\n");
    
#line 2824 
    goto err_free_dev;
  }
  else ;
  
#line 2830 
  tmp_6 = IS_ERR_OR_NULL((void const *)cxgb4vf_debugfs_root);
  
#line 2830 
  if (tmp_6) 
#line 2830 
             tmp_7 = 0; else 
#line 2830 
                             tmp_7 = 1;
  
#line 2830 
  if (tmp_7) {
    char const *tmp_4;
    bool tmp_5;
    
#line 2831 
    ;
    
#line 2832 
    tmp_4 = pci_name((struct pci_dev const *)pdev);
    
#line 2831 
    adapter->debugfs_root = debugfs_create_dir(tmp_4,cxgb4vf_debugfs_root);
    
#line 2834 
    tmp_5 = IS_ERR_OR_NULL((void const *)adapter->debugfs_root);
    
#line 2834 
    if ((int)tmp_5 != 0) 
#line 2835 
                         dev_warn((struct device const *)(& pdev->dev),"could not create debugfs"); else 
                                                                    
#line 2838 
                                                                    setup_debugfs(adapter);
  }
  else ;
  
#line 2847 
  if (msi == 2) {
    int tmp_9;
    
#line 2847 
    tmp_9 = enable_msix(adapter);
    
#line 2847 
    if (tmp_9 == 0) 
#line 2848 
                    adapter->flags |= 4UL; else 
#line 2847 
                                                goto _LAND;
  }
  else {
    _LAND: {
             
#line 2850 
             err = pci_enable_msi_exact(pdev,1);
             
#line 2851 
             if (err != 0) {
               char *tmp_8;
               
#line 2852 
               ;
               
#line 2852 
               if (msi == 2) 
#line 2852 
                             tmp_8 = (char *)"MSI-X or MSI"; else 
#line 2852 
                                                                  tmp_8 = (char *)"MSI";
               
#line 2852 
               ;
               
#line 2852 
               dev_err((struct device const *)(& pdev->dev),"Unable to allocate %s interrupts;",tmp_8,err);
               
#line 2855 
               goto err_free_debugfs;
             }
             else ;
             
#line 2857 
             adapter->flags |= 2UL;
           }
  }
  
#line 2865 
  cfg_queues(adapter);
  
#line 2871 
  pidx = 0;
  
#line 2871 
  goto ldv_49692;
  ldv_49691: 
#line 2872 
  ;
  
#line 2872 
  if ((adapter->flags & 4UL) == 0UL) {
    char *tmp_10;
    
#line 2872 
    if ((adapter->flags & 2UL) != 0UL) 
#line 2872 
                                       tmp_10 = (char *)"MSI"; else 
#line 2872 
                                                                    tmp_10 = (char *)"";
    
#line 2872 
    tmp_11 = tmp_10;
  }
  else 
#line 2872 
       tmp_11 = (char *)"MSI-X";
  
#line 2872 
  ;
  
#line 2872 
  ;
  
#line 2872 
  _dev_info((struct device const *)adapter->pdev_dev,"%s: Chelsio VF NIC PCIe %s\n",(char *)(& (adapter->port[pidx])->name),tmp_11);
  
#line 2871 
  pidx += 1;
  ldv_49692: 
#line 2872 
  ;
  
#line 2871 
  if ((int)adapter->params.nports > pidx) 
#line 2873 
                                          goto ldv_49691; else 
#line 2876 
                                                               goto ldv_49693;
  ldv_49693: 
#line 2877 
  ;
  
#line 2881 
  __retres = 0;
  
#line 2881 
  goto return_label;
  err_free_debugfs: 
#line 2888 
  ;
  
#line 2889 
  tmp_12 = IS_ERR_OR_NULL((void const *)adapter->debugfs_root);
  
#line 2889 
  if (tmp_12) 
#line 2889 
              tmp_13 = 0; else 
#line 2889 
                               tmp_13 = 1;
  
#line 2889 
  if (tmp_13) {
    
#line 2890 
    cleanup_debugfs(adapter);
    
#line 2891 
    debugfs_remove_recursive(adapter->debugfs_root);
  }
  else ;
  err_free_dev: 
#line 2894 
  ;
  
#line 2895 
  pidx = 0;
  
#line 2895 
  goto ldv_49696;
  ldv_49695: 
#line 2896 
  ;
  
#line 2896 
  netdev = adapter->port[pidx];
  
#line 2897 
  if (netdev == (struct net_device *)0) 
#line 2898 
                                        goto ldv_49694; else ;
  
#line 2899 
  pi = (struct port_info *)netdev_priv((struct net_device const *)netdev);
  
#line 2900 
  t4vf_free_vi(adapter,(int)pi->viid);
  
#line 2901 
  if (0 != 0) {
    int tmp_15;
    
#line 2901 
    tmp_15 = constant_test_bit((long)pidx,(unsigned long const volatile *)(& adapter->registered_device_map));
    
#line 2901 
    tmp_17 = tmp_15 != 0;
  }
  else {
    int tmp_16;
    
#line 2901 
    tmp_16 = variable_test_bit((long)pidx,(unsigned long const volatile *)(& adapter->registered_device_map));
    
#line 2901 
    tmp_17 = tmp_16 != 0;
  }
  
#line 2901 
  if (tmp_17) 
#line 2902 
              ldv_unregister_netdev_88(netdev); else ;
  
#line 2903 
  ldv_free_netdev_89(netdev);
  ldv_49694: 
#line 2904 
  ;
  
#line 2895 
  pidx += 1;
  ldv_49696: 
#line 2896 
  ;
  
#line 2895 
  if ((int)adapter->params.nports > pidx) 
#line 2897 
                                          goto ldv_49695; else 
#line 2900 
                                                               goto ldv_49697;
  ldv_49697: 
#line 2901 
  ;
  err_unmap_bar: 
#line 2906 
  ;
  
#line 2907 
  tmp_18 = is_t4(adapter->params.chip);
  
#line 2907 
  if (tmp_18 == 0) 
#line 2908 
                   iounmap((void volatile *)adapter->bar2); else ;
  err_unmap_bar0: 
#line 2910 
  ;
  
#line 2911 
  iounmap((void volatile *)adapter->regs);
  err_free_adapter: 
#line 2913 
  ;
  
#line 2914 
  kfree((void const *)adapter);
  err_release_regions: 
#line 2916 
  ;
  
#line 2917 
  pci_release_regions(pdev);
  
#line 2918 
  pci_clear_master(pdev);
  err_disable_device: 
#line 2920 
  ;
  
#line 2921 
  pci_disable_device(pdev);
  
#line 2923 
  __retres = err;
  return_label: 
#line 2923 
                return __retres;
}


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void cxgb4vf_pci_remove(struct pci_dev *pdev)
{
  
#line 2933 
  struct adapter *adapter = pci_get_drvdata(pdev);
  
#line 2938 
  if (adapter != (struct adapter *)0) {
    int pidx;
    int tmp_2;
    int tmp_4;
    bool tmp_3;
    int tmp_6;
    
#line 2945 
    pidx = 0;
    
#line 2945 
    goto ldv_49704;
    ldv_49703: 
#line 2946 
    ;
    
#line 2946 
    if (0 != 0) {
      int tmp_0;
      
#line 2946 
      tmp_0 = constant_test_bit((long)pidx,(unsigned long const volatile *)(& adapter->registered_device_map));
      
#line 2946 
      tmp_2 = tmp_0 != 0;
    }
    else {
      int tmp_1;
      
#line 2946 
      tmp_1 = variable_test_bit((long)pidx,(unsigned long const volatile *)(& adapter->registered_device_map));
      
#line 2946 
      tmp_2 = tmp_1 != 0;
    }
    
#line 2946 
    if (tmp_2) 
#line 2947 
               ldv_unregister_netdev_90(adapter->port[pidx]); else ;
    
#line 2945 
    pidx += 1;
    ldv_49704: 
#line 2946 
    ;
    
#line 2945 
    if ((int)adapter->params.nports > pidx) 
#line 2947 
                                            goto ldv_49703; else 
#line 2950 
                                                                 goto ldv_49705;
    ldv_49705: 
#line 2951 
    ;
    
#line 2948 
    t4vf_sge_stop(adapter);
    
#line 2949 
    if ((adapter->flags & 4UL) != 0UL) {
      
#line 2950 
      pci_disable_msix(adapter->pdev);
      
#line 2951 
      adapter->flags &= 18446744073709551611UL;
    }
    else 
      
#line 2952 
      if ((adapter->flags & 2UL) != 0UL) {
        
#line 2953 
        pci_disable_msi(adapter->pdev);
        
#line 2954 
        adapter->flags &= 18446744073709551613UL;
      }
      else ;
    
#line 2960 
    tmp_3 = IS_ERR_OR_NULL((void const *)adapter->debugfs_root);
    
#line 2960 
    if (tmp_3) 
#line 2960 
               tmp_4 = 0; else 
#line 2960 
                               tmp_4 = 1;
    
#line 2960 
    if (tmp_4) {
      
#line 2961 
      cleanup_debugfs(adapter);
      
#line 2962 
      debugfs_remove_recursive(adapter->debugfs_root);
    }
    else ;
    
#line 2968 
    t4vf_free_sge_resources(adapter);
    
#line 2969 
    pidx = 0;
    
#line 2969 
    goto ldv_49710;
    ldv_49709: 
#line 2970 
    ;
    {
      struct port_info *pi;
      
#line 2970 
      struct net_device *netdev = adapter->port[pidx];
      
#line 2973 
      if (netdev == (struct net_device *)0) 
#line 2974 
                                            goto ldv_49708; else ;
      
#line 2976 
      pi = (struct port_info *)netdev_priv((struct net_device const *)netdev);
      
#line 2977 
      t4vf_free_vi(adapter,(int)pi->viid);
      
#line 2978 
      ldv_free_netdev_91(netdev);
    }
    ldv_49708: 
#line 2980 
    ;
    
#line 2969 
    pidx += 1;
    ldv_49710: 
#line 2970 
    ;
    
#line 2969 
    if ((int)adapter->params.nports > pidx) 
#line 2971 
                                            goto ldv_49709; else 
#line 2974 
                                                                 goto ldv_49711;
    ldv_49711: 
#line 2975 
    ;
    
#line 2980 
    iounmap((void volatile *)adapter->regs);
    
#line 2981 
    tmp_6 = is_t4(adapter->params.chip);
    
#line 2981 
    if (tmp_6 == 0) 
#line 2982 
                    iounmap((void volatile *)adapter->bar2); else ;
    
#line 2983 
    kfree((void const *)adapter);
  }
  else ;
  
#line 2989 
  pci_disable_device(pdev);
  
#line 2990 
  pci_clear_master(pdev);
  
#line 2991 
  pci_release_regions(pdev);
  
#line 2992 
  return;
}


#line 2998  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void cxgb4vf_pci_shutdown(struct pci_dev *pdev)
{
  struct adapter *adapter;
  int pidx;
  int tmp_2;
  
#line 3003 
  adapter = (struct adapter *)pci_get_drvdata(pdev);
  
#line 3004 
  if (adapter == (struct adapter *)0) 
#line 3005 
                                      goto return_label; else ;
  
#line 3011 
  pidx = 0;
  
#line 3011 
  goto ldv_49718;
  ldv_49717: 
#line 3012 
  ;
  
#line 3012 
  if (0 != 0) {
    int tmp_0;
    
#line 3012 
    tmp_0 = constant_test_bit((long)pidx,(unsigned long const volatile *)(& adapter->registered_device_map));
    
#line 3012 
    tmp_2 = tmp_0 != 0;
  }
  else {
    int tmp_1;
    
#line 3012 
    tmp_1 = variable_test_bit((long)pidx,(unsigned long const volatile *)(& adapter->registered_device_map));
    
#line 3012 
    tmp_2 = tmp_1 != 0;
  }
  
#line 3012 
  if (tmp_2) 
#line 3013 
             ldv_unregister_netdev_92(adapter->port[pidx]); else ;
  
#line 3011 
  pidx += 1;
  ldv_49718: 
#line 3012 
  ;
  
#line 3011 
  if ((int)adapter->params.nports > pidx) 
#line 3013 
                                          goto ldv_49717; else 
#line 3016 
                                                               goto ldv_49719;
  ldv_49719: 
#line 3017 
  ;
  
#line 3018 
  t4vf_sge_stop(adapter);
  
#line 3019 
  if ((adapter->flags & 4UL) != 0UL) {
    
#line 3020 
    pci_disable_msix(adapter->pdev);
    
#line 3021 
    adapter->flags &= 18446744073709551611UL;
  }
  else 
    
#line 3022 
    if ((adapter->flags & 2UL) != 0UL) {
      
#line 3023 
      pci_disable_msi(adapter->pdev);
      
#line 3024 
      adapter->flags &= 18446744073709551613UL;
    }
    else ;
  
#line 3031 
  t4vf_free_sge_resources(adapter);
  
#line 3032 
  pci_set_drvdata(pdev,(void *)0);
  return_label: 
#line 3033 
                return;
}


#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4/t4_pci_id_tbl.h"
static struct pci_device_id const cxgb4vf_pci_tbl[59U] = {{.vendor = 5157U, .device = 18432U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 18433U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 18434U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 18435U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 18436U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 18437U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 18438U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 18439U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 18440U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 18441U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 18442U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 18443U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 18444U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 18445U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 18446U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 18560U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 18561U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 18562U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 18563U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 18564U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 18565U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 18566U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 18567U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 18568U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22528U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22529U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22530U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22531U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22532U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22533U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22534U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22535U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22536U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22537U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22538U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22539U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22540U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22541U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22542U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22544U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22545U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22546U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22547U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22548U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22549U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22656U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22657U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22658U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22659U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22660U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22661U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22662U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22663U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22664U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22665U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22672U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22673U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 22674U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 3052  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
struct pci_device_id const __mod_pci__cxgb4vf_pci_tbl_device_table[59U];

#line 3054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static struct pci_driver cxgb4vf_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "cxgb4vf", .id_table = (struct pci_device_id const *)(& cxgb4vf_pci_tbl), .probe = & cxgb4vf_pci_probe, .remove = & cxgb4vf_pci_remove, .suspend = (int (*)(struct pci_dev *, pm_message_t ))0, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = (int (*)(struct pci_dev *))0, .shutdown = & cxgb4vf_pci_shutdown, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = (struct pci_error_handlers const *)0, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = (struct dev_pm_ops const *)0, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 3065  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static int cxgb4vf_module_init(void)
{
  int __retres;
  int ret;
  bool tmp;
  
#line 3072 
  if ((unsigned int)msi + 4294967295U > 1U) {
    
#line 3073 
    printk("\001",msi,2,1);
    
#line 3075 
    __retres = -22;
    
#line 3075 
    goto return_label;
  }
  else ;
  
#line 3079 
  cxgb4vf_debugfs_root = debugfs_create_dir("cxgb4vf",(struct dentry *)0);
  
#line 3080 
  tmp = IS_ERR_OR_NULL((void const *)cxgb4vf_debugfs_root);
  
#line 3080 
  if ((int)tmp != 0) 
#line 3081 
                     printk("\001"); else ;
  
#line 3083 
  ret = ldv___pci_register_driver_93(& cxgb4vf_driver,& __this_module,"cxgb4vf");
  
#line 3084 
  if (ret < 0) {
    int tmp_1;
    bool tmp_0;
    
#line 3084 
    tmp_0 = IS_ERR_OR_NULL((void const *)cxgb4vf_debugfs_root);
    
#line 3084 
    if (tmp_0) 
#line 3084 
               tmp_1 = 0; else 
#line 3084 
                               tmp_1 = 1;
    
#line 3084 
    if (tmp_1) 
#line 3085 
               ldv_debugfs_remove_94(cxgb4vf_debugfs_root); else ;
  }
  else ;
  
#line 3086 
  __retres = ret;
  return_label: 
#line 3086 
                return __retres;
}


#line 3092  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c"
static void cxgb4vf_module_exit(void)
{
  
#line 3094 
  ldv_pci_unregister_driver_95(& cxgb4vf_driver);
  
#line 3095 
  ldv_debugfs_remove_96(cxgb4vf_debugfs_root);
  
#line 3096 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
int (*ldv_emg_alias_seq_release_5)(struct inode *, struct file *) = & seq_release;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
int (*ldv_emg_alias_single_release_3)(struct inode *, struct file *) = & single_release;

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
struct file_operations *ldv_emg_alias_sge_qinfo_debugfs_fops_2 = (struct file_operations *)(& sge_qinfo_debugfs_fops);

#line 59  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
struct seq_operations *ldv_emg_alias_interfaces_seq_ops_6 = (struct seq_operations *)(& interfaces_seq_ops);

#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
struct pci_driver *ldv_emg_alias_cxgb4vf_driver_2 = & cxgb4vf_driver;

#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
unsigned int (*ldv_emg_alias_ethtool_op_get_link_3)(struct net_device *) = & ethtool_op_get_link;

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
struct seq_operations *ldv_emg_alias_sge_qinfo_seq_ops_6 = (struct seq_operations *)(& sge_qinfo_seq_ops);

#line 63  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
struct seq_operations *ldv_emg_alias_sge_qstats_seq_ops_6 = (struct seq_operations *)(& sge_qstats_seq_ops);

#line 64  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
long long (*ldv_emg_alias_seq_lseek_3)(struct file *, long long , int ) = & seq_lseek;

#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
struct file_operations *ldv_emg_alias_resources_proc_fops_2 = (struct file_operations *)(& resources_proc_fops);

#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
long (*ldv_emg_alias_seq_read_4)(struct file *, char *, unsigned long , long long *) = & seq_read;

#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
int (*ldv_emg_alias_eth_validate_addr_18)(struct net_device *) = & eth_validate_addr;

#line 68  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
struct file_operations *ldv_emg_alias_sge_qstats_proc_fops_2 = (struct file_operations *)(& sge_qstats_proc_fops);

#line 69  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
struct file_operations *ldv_emg_alias_interfaces_proc_fops_2 = (struct file_operations *)(& interfaces_proc_fops);

#line 73 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 74 
struct dentry *ldv_emg_debugfs_create_file(char *arg0, unsigned short arg1, struct dentry *arg2, void *arg3, struct file_operations *arg4);


#line 75 
void ldv_emg_debugfs_remove(struct dentry *arg0);


#line 76 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 77 
int ldv_emg_seq_open(struct file *arg0, struct seq_operations *arg1);


#line 78 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 79 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 80 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 81 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 82 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 84 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 88  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
void ldv_emg_wrapper_cxgb4vf_poll_controller_26(struct net_device *arg0)
{
  
#line 89 
  cxgb4vf_poll_controller(arg0);
  
#line 90 
  return;
}


#line 93  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
int ldv_emg_wrapper_cxgb4vf_get_settings_15(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 94 
  tmp = cxgb4vf_get_settings(arg0,arg1);
  
#line 94 
  return tmp;
}


#line 98  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
void ldv_emg_wrapper_sge_queue_stop_5(struct seq_file *arg0, void *arg1)
{
  
#line 99 
  sge_queue_stop(arg0,arg1);
  
#line 100 
  return;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
void *ldv_emg_wrapper_sge_qstats_start_2(struct seq_file *arg0, long long *arg1)
{
  void *tmp;
  
#line 104 
  tmp = sge_qstats_start(arg0,arg1);
  
#line 104 
  return tmp;
}


#line 108  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
struct net_device_stats *ldv_emg_wrapper_cxgb4vf_get_stats_21(struct net_device *arg0)
{
  struct net_device_stats *tmp;
  
#line 109 
  tmp = cxgb4vf_get_stats(arg0);
  
#line 109 
  return tmp;
}


#line 113  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
void *ldv_emg_wrapper_interfaces_start_2(struct seq_file *arg0, long long *arg1)
{
  void *tmp;
  
#line 114 
  tmp = interfaces_start(arg0,arg1);
  
#line 114 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
int ldv_emg_wrapper_resources_open_4(struct inode *arg0, struct file *arg1)
{
  int tmp;
  
#line 119 
  tmp = resources_open(arg0,arg1);
  
#line 119 
  return tmp;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
void *ldv_emg_wrapper_sge_queue_next_3(struct seq_file *arg0, void *arg1, long long *arg2)
{
  void *tmp;
  
#line 124 
  tmp = sge_queue_next(arg0,arg1,arg2);
  
#line 124 
  return tmp;
}


#line 128  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
int ldv_emg_wrapper_sge_qstats_open_3(struct inode *arg0, struct file *arg1)
{
  int tmp;
  
#line 129 
  tmp = sge_qstats_open(arg0,arg1);
  
#line 129 
  return tmp;
}


#line 133  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
unsigned int ldv_emg_wrapper_cxgb4vf_get_msglevel_13(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 134 
  tmp = cxgb4vf_get_msglevel(arg0);
  
#line 134 
  return tmp;
}


#line 138  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
int ldv_emg_wrapper_cxgb4vf_set_ringparam_12(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  int tmp;
  
#line 139 
  tmp = cxgb4vf_set_ringparam(arg0,arg1);
  
#line 139 
  return tmp;
}


#line 143  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
int ldv_emg_wrapper_cxgb4vf_set_features_9(struct net_device *arg0, unsigned long long arg1)
{
  int tmp;
  
#line 144 
  tmp = cxgb4vf_set_features(arg0,arg1);
  
#line 144 
  return tmp;
}


#line 148  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
void ldv_emg_wrapper_cxgb4vf_get_ringparam_6(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  
#line 149 
  cxgb4vf_get_ringparam(arg0,arg1);
  
#line 150 
  return;
}


#line 153  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
void ldv_emg_cxgb4vf_module_exit(void)
{
  
#line 154 
  cxgb4vf_module_exit();
  
#line 155 
  return;
}


#line 157  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
void ldv_emg_wrapper_cxgb4vf_set_rxmode_27(struct net_device *arg0)
{
  
#line 158 
  cxgb4vf_set_rxmode(arg0);
  
#line 159 
  return;
}


#line 162  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
void ldv_emg_wrapper_cxgb4vf_get_wol_16(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  
#line 163 
  cxgb4vf_get_wol(arg0,arg1);
  
#line 164 
  return;
}


#line 167  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
int ldv_emg_wrapper_cxgb4vf_do_ioctl_17(struct net_device *arg0, struct ifreq *arg1, int arg2)
{
  int tmp;
  
#line 168 
  tmp = cxgb4vf_do_ioctl(arg0,arg1,arg2);
  
#line 168 
  return tmp;
}


#line 172  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
void ldv_emg_wrapper_interfaces_stop_5(struct seq_file *arg0, void *arg1)
{
  
#line 173 
  interfaces_stop(arg0,arg1);
  
#line 174 
  return;
}


#line 177  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
int ldv_emg_wrapper_cxgb4vf_pci_probe_3(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 178 
  tmp = cxgb4vf_pci_probe(arg0,(struct pci_device_id const *)arg1);
  
#line 178 
  return tmp;
}


#line 182  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
void ldv_emg_wrapper_cxgb4vf_get_pauseparam_2(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  
#line 183 
  cxgb4vf_get_pauseparam(arg0,arg1);
  
#line 184 
  return;
}


#line 187  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
void *ldv_emg_wrapper_interfaces_next_3(struct seq_file *arg0, void *arg1, long long *arg2)
{
  void *tmp;
  
#line 188 
  tmp = interfaces_next(arg0,arg1,arg2);
  
#line 188 
  return tmp;
}


#line 192  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
void ldv_emg_wrapper_cxgb4vf_get_ethtool_stats_7(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  
#line 193 
  cxgb4vf_get_ethtool_stats(arg0,arg1,arg2);
  
#line 194 
  return;
}


#line 197  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
unsigned long long ldv_emg_wrapper_cxgb4vf_fix_features_11(struct net_device *arg0, unsigned long long arg1)
{
  unsigned long long tmp;
  
#line 198 
  tmp = cxgb4vf_fix_features(arg0,arg1);
  
#line 198 
  return tmp;
}


#line 202  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
int ldv_emg_wrapper_interfaces_open_6(struct inode *arg0, struct file *arg1)
{
  int tmp;
  
#line 203 
  tmp = interfaces_open(arg0,arg1);
  
#line 203 
  return tmp;
}


#line 207  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
int ldv_emg_wrapper_cxgb4vf_set_coalesce_25(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 208 
  tmp = cxgb4vf_set_coalesce(arg0,arg1);
  
#line 208 
  return tmp;
}


#line 212  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
int ldv_emg_wrapper_sge_qinfo_show_4(struct seq_file *arg0, void *arg1)
{
  int tmp;
  
#line 213 
  tmp = sge_qinfo_show(arg0,arg1);
  
#line 213 
  return tmp;
}


#line 217  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
int ldv_emg_wrapper_cxgb4vf_get_coalesce_23(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 218 
  tmp = cxgb4vf_get_coalesce(arg0,arg1);
  
#line 218 
  return tmp;
}


#line 222  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
int ldv_emg_wrapper_cxgb4vf_change_mtu_8(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 223 
  tmp = cxgb4vf_change_mtu(arg0,arg1);
  
#line 223 
  return tmp;
}


#line 227  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
int ldv_emg_wrapper_cxgb4vf_get_regs_len_24(struct net_device *arg0)
{
  int tmp;
  
#line 228 
  tmp = cxgb4vf_get_regs_len(arg0);
  
#line 228 
  return tmp;
}


#line 232  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
int ldv_emg_wrapper_cxgb4vf_stop_2(struct net_device *arg0)
{
  int tmp;
  
#line 233 
  tmp = cxgb4vf_stop(arg0);
  
#line 233 
  return tmp;
}


#line 237  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
int ldv_emg_wrapper_cxgb4vf_get_sset_count_20(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 238 
  tmp = cxgb4vf_get_sset_count(arg0,arg1);
  
#line 238 
  return tmp;
}


#line 242  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
void ldv_emg_wrapper_cxgb4vf_pci_shutdown_2(struct pci_dev *arg0)
{
  
#line 243 
  cxgb4vf_pci_shutdown(arg0);
  
#line 244 
  return;
}


#line 247  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
void ldv_emg_wrapper_sge_qstats_stop_5(struct seq_file *arg0, void *arg1)
{
  
#line 248 
  sge_qstats_stop(arg0,arg1);
  
#line 249 
  return;
}


#line 252  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
int ldv_emg_wrapper_sge_qinfo_open_3(struct inode *arg0, struct file *arg1)
{
  int tmp;
  
#line 253 
  tmp = sge_qinfo_open(arg0,arg1);
  
#line 253 
  return tmp;
}


#line 257  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
void ldv_emg_wrapper_cxgb4vf_get_drvinfo_10(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 258 
  cxgb4vf_get_drvinfo(arg0,arg1);
  
#line 259 
  return;
}


#line 262  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
int ldv_emg_wrapper_cxgb4vf_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 263 
  tmp = cxgb4vf_open(arg0);
  
#line 263 
  return tmp;
}


#line 267  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
void ldv_emg_wrapper_cxgb4vf_pci_remove_4(struct pci_dev *arg0)
{
  
#line 268 
  cxgb4vf_pci_remove(arg0);
  
#line 269 
  return;
}


#line 272  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
void ldv_emg_wrapper_cxgb4vf_get_regs_19(struct net_device *arg0, struct ethtool_regs *arg1, void *arg2)
{
  
#line 273 
  cxgb4vf_get_regs(arg0,arg1,arg2);
  
#line 274 
  return;
}


#line 277  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
int ldv_emg_wrapper_sge_qstats_show_4(struct seq_file *arg0, void *arg1)
{
  int tmp;
  
#line 278 
  tmp = sge_qstats_show(arg0,arg1);
  
#line 278 
  return tmp;
}


#line 282  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
int ldv_emg_wrapper_cxgb4vf_set_mac_addr_14(struct net_device *arg0, void *arg1)
{
  int tmp;
  
#line 283 
  tmp = cxgb4vf_set_mac_addr(arg0,arg1);
  
#line 283 
  return tmp;
}


#line 287  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
void *ldv_emg_wrapper_sge_qstats_next_3(struct seq_file *arg0, void *arg1, long long *arg2)
{
  void *tmp;
  
#line 288 
  tmp = sge_qstats_next(arg0,arg1,arg2);
  
#line 288 
  return tmp;
}


#line 292  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
int ldv_emg_cxgb4vf_module_init(void)
{
  int tmp;
  
#line 293 
  tmp = cxgb4vf_module_init();
  
#line 293 
  return tmp;
}


#line 296  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
void ldv_emg_wrapper_cxgb4vf_set_msglevel_22(struct net_device *arg0, unsigned int arg1)
{
  
#line 297 
  cxgb4vf_set_msglevel(arg0,arg1);
  
#line 298 
  return;
}


#line 301  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
int ldv_emg_wrapper_cxgb4vf_phys_id_4(struct net_device *arg0, enum ethtool_phys_id_state arg1)
{
  int tmp;
  
#line 302 
  tmp = cxgb4vf_phys_id(arg0,arg1);
  
#line 302 
  return tmp;
}


#line 306  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
int ldv_emg_wrapper_interfaces_show_4(struct seq_file *arg0, void *arg1)
{
  int tmp;
  
#line 307 
  tmp = interfaces_show(arg0,arg1);
  
#line 307 
  return tmp;
}


#line 311  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
void ldv_emg_wrapper_cxgb4vf_get_strings_5(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  
#line 312 
  cxgb4vf_get_strings(arg0,arg1,arg2);
  
#line 313 
  return;
}


#line 316  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
void *ldv_emg_wrapper_sge_queue_start_2(struct seq_file *arg0, long long *arg1)
{
  void *tmp;
  
#line 317 
  tmp = sge_queue_start(arg0,arg1);
  
#line 317 
  return tmp;
}


#line 345  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static bool IS_ERR_OR_NULL(void const *ptr)
{
  bool __retres;
  long ret;
  
#line 349 
  ret = ldv_is_err_or_null(ptr);
  
#line 350 
  __retres = (_Bool)(ret != 0L);
  
#line 350 
  return __retres;
}


#line 746  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 749 
  tmp = ldv_kzalloc(size,flags);
  
#line 749 
  return tmp;
}


#line 992  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static int ldv_request_irq_72(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 996 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 996 
  return tmp;
}


#line 1000  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static int ldv_request_irq_73(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1004 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1004 
  return tmp;
}


#line 1008  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static void ldv_free_irq_74(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1012 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1013 
  return;
}


#line 1016  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static void ldv_free_irq_75(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1020 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1021 
  return;
}


#line 1024  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static void ldv_free_irq_76(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1028 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1029 
  return;
}


#line 1032  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static void ldv_free_irq_77(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1036 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1037 
  return;
}


#line 1040  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static int ldv_request_irq_78(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1044 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1044 
  return tmp;
}


#line 1048  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static void ldv_free_irq_79(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1052 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1053 
  return;
}


#line 1056  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static void ldv_spin_lock_80(spinlock_t *lock)
{
  
#line 1060 
  ldv_spin_model_lock((char *)"stats_lock_of_adapter");
  
#line 1062 
  spin_lock_0(lock);
  
#line 1063 
  return;
}


#line 1066  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static void ldv_spin_unlock_81(spinlock_t *lock)
{
  
#line 1070 
  ldv_spin_model_unlock((char *)"stats_lock_of_adapter");
  
#line 1072 
  spin_unlock_0(lock);
  
#line 1073 
  return;
}


#line 1076  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static int ldv_seq_open_82(struct file *ldv_func_arg1, struct seq_operations const *ldv_func_arg2)
{
  int tmp;
  
#line 1080 
  tmp = ldv_emg_seq_open(ldv_func_arg1,(struct seq_operations *)ldv_func_arg2);
  
#line 1080 
  return tmp;
}


#line 1084  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static int ldv_seq_open_83(struct file *ldv_func_arg1, struct seq_operations const *ldv_func_arg2)
{
  int tmp;
  
#line 1088 
  tmp = ldv_emg_seq_open(ldv_func_arg1,(struct seq_operations *)ldv_func_arg2);
  
#line 1088 
  return tmp;
}


#line 1092  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static int ldv_seq_open_84(struct file *ldv_func_arg1, struct seq_operations const *ldv_func_arg2)
{
  int tmp;
  
#line 1096 
  tmp = ldv_emg_seq_open(ldv_func_arg1,(struct seq_operations *)ldv_func_arg2);
  
#line 1096 
  return tmp;
}


#line 1100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static struct dentry *ldv_debugfs_create_file_85(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1104 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1104 
  return tmp;
}


#line 1108  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_86(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 1112 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1112 
  return tmp;
}


#line 1116  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static int ldv_register_netdev_87(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 1120 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 1120 
  return tmp;
}


#line 1124  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static void ldv_unregister_netdev_88(struct net_device *ldv_func_arg1)
{
  
#line 1128 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1129 
  return;
}


#line 1132  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static void ldv_free_netdev_89(struct net_device *ldv_func_arg1)
{
  
#line 1136 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1137 
  return;
}


#line 1140  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static void ldv_unregister_netdev_90(struct net_device *ldv_func_arg1)
{
  
#line 1144 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1145 
  return;
}


#line 1148  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static void ldv_free_netdev_91(struct net_device *ldv_func_arg1)
{
  
#line 1152 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1153 
  return;
}


#line 1156  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static void ldv_unregister_netdev_92(struct net_device *ldv_func_arg1)
{
  
#line 1160 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1161 
  return;
}


#line 1164  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static int ldv___pci_register_driver_93(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 1168 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 1168 
  return tmp;
}


#line 1172  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static void ldv_debugfs_remove_94(struct dentry *ldv_func_arg1)
{
  
#line 1176 
  ldv_emg_debugfs_remove(ldv_func_arg1);
  
#line 1177 
  return;
}


#line 1180  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static void ldv_pci_unregister_driver_95(struct pci_driver *ldv_func_arg1)
{
  
#line 1184 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 1185 
  return;
}


#line 1188  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/weaver/.tmp_cxgb4vf_main.c.aux"
static void ldv_debugfs_remove_96(struct dentry *ldv_func_arg1)
{
  
#line 1192 
  ldv_emg_debugfs_remove(ldv_func_arg1);
  
#line 1193 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
__inline static void *ERR_PTR(long error)
{
  void *__retres;
  
#line 25 
  __retres = (void *)error;
  
#line 25 
  return __retres;
}


#line 124  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_5_1(struct net_device *arg0);


#line 125 
void *ldv_interrupt_scenario_25(void *arg0);


#line 126 
void *ldv_character_driver_scenario_15(void *arg0);


#line 127 
void ldv_dispatch_register_9_4(struct net_device *arg0);


#line 129 
void *ldv_character_driver_scenario_21(void *arg0);


#line 132 
void ldv_dispatch_irq_register_14_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 133 
void *ldv_traverse_kernel_items_scenario_22(void *arg0);


#line 135 
void *ldv_character_driver_scenario_24(void *arg0);


#line 137 
void *ldv_traverse_kernel_items_scenario_23(void *arg0);


#line 138 
void *ldv_random_allocationless_scenario_17(void *arg0);


#line 140 
void ldv_dispatch_register_11_3(struct pci_driver *arg0);


#line 141 
void *ldv_initialization_1(void *arg0);


#line 142 
void *ldv_character_driver_scenario_16(void *arg0);


#line 144 
int main(void);


#line 145 
void ldv_dispatch_deregister_8_1(struct pci_driver *arg0);


#line 147 
void ldv_dispatch_register_13_3(struct file_operations *arg0);


#line 149 
void ldv_dispatch_irq_deregister_7_1(int arg0);


#line 150 
void ldv_dispatch_instance_register_3_3(struct timer_list *arg0);


#line 153 
void ldv_dispatch_instance_deregister_12_1(struct timer_list *arg0);


#line 154 
void *ldv_timer_scenario_20(void *arg0);


#line 155 
void ldv_dispatch_register_10_1(struct seq_file *arg0, struct seq_operations *arg1);


#line 156 
void *ldv_pci_scenario_18(void *arg0);


#line 157 
void ldv_dispatch_deregister_6_1(struct file_operations *arg0);


#line 159 
void *ldv_traverse_kernel_items_scenario_19(void *arg0);


#line 163  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_17;

#line 164  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_22;

#line 165  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_21;

#line 166  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_16;

#line 167  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_19;

#line 168  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_24;

#line 169  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_23;

#line 170  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_15;

#line 171  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_25;

#line 172  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_20;

#line 173  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_18;

#line 177  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_5_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_17 *cf_arg_17;
  int tmp;
  
#line 180 
  tmp = ldv_undef_int();
  
#line 180 
  switch (tmp) {
    case 0: 
#line 181 
    ;
    
#line 182 
    ret = pthread_join(ldv_thread_17,(void **)0);
    
#line 183 
    __VERIFIER_assume(ret == 0);
    
#line 184 
    goto ldv_45563;
    default: 
#line 186 
    ;
    
#line 186 
    __VERIFIER_assume(0);
  }
  ldv_45563: 
#line 187 
  ;
  
#line 188 
  return;
}


#line 192  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_25(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_25_ret_val;
  int ldv_25_line;
  void *ldv_25_data;
  enum irqreturn (*ldv_25_thread)(int , void *);
  int tmp;
  
#line 198 
  enum irqreturn (*ldv_25_callback)(int , void *) = & t4vf_sge_intr_msix;
  
#line 201 
  struct ldv_struct_interrupt_scenario_25 *data = (struct ldv_struct_interrupt_scenario_25 *)arg0;
  
#line 206 
  if (data != (struct ldv_struct_interrupt_scenario_25 *)0) {
    
#line 207 
    ldv_25_line = data->arg0;
    
#line 208 
    ldv_25_callback = data->arg1;
    
#line 209 
    ldv_25_thread = data->arg2;
    
#line 210 
    ldv_25_data = data->arg3;
    
#line 211 
    ldv_free((void *)data);
  }
  else ;
  
#line 217 
  ldv_switch_to_interrupt_context();
  
#line 219 
  ldv_25_ret_val = t4vf_sge_intr_msix(ldv_25_line,ldv_25_data);
  
#line 221 
  ldv_switch_to_process_context();
  
#line 224 
  tmp = ldv_undef_int();
  
#line 224 
  if (tmp != 0) {
    
#line 226 
    __VERIFIER_assume(ldv_25_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 230 
    if (ldv_25_thread != (enum irqreturn (*)(int , void *))0) 
#line 232 
                                                              (*ldv_25_thread)(ldv_25_line,ldv_25_data); else ;
  }
  else 
#line 239 
       __VERIFIER_assume(ldv_25_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 248 
  __retres = (void *)0;
  
#line 248 
  goto return_label;
  
#line 250 
  __retres = (void *)0;
  return_label: 
#line 250 
                return __retres;
}


#line 255  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_15(void *arg0)
{
  void *__retres;
  struct file *ldv_15_resource_1;
  int ldv_15_ldv_param_2_3;
  long long ldv_15_ldv_param_1_2;
  char *ldv_15_ldv_param_1_4;
  struct inode *ldv_15_resource_0;
  unsigned long ldv_15_size_cnt;
  long long *ldv_15_ldv_param_3_5;
  char *ldv_15_ldv_param_1_6;
  long long *ldv_15_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 266 
  struct file_operations *ldv_15_container = ldv_emg_alias_sge_qinfo_debugfs_fops_2;
  
#line 267 
  int ldv_15_ret = ldv_undef_int();
  
#line 270 
  struct ldv_struct_character_driver_scenario_15 *data = (struct ldv_struct_character_driver_scenario_15 *)arg0;
  
#line 274 
  ldv_15_ret = ldv_undef_int();
  
#line 277 
  if (data != (struct ldv_struct_character_driver_scenario_15 *)0) {
    
#line 278 
    ldv_15_container = data->arg0;
    
#line 279 
    ldv_free((void *)data);
  }
  else ;
  
#line 284 
  ldv_15_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 285 
  tmp_1 = ldv_undef_int();
  
#line 285 
  ldv_15_size_cnt = (unsigned long)tmp_1;
  
#line 292 
  goto ldv_main_15;
  
#line 294 
  __retres = (void *)0;
  
#line 294 
  goto return_label;
  ldv_main_15: 
#line 297 
  ;
  
#line 300 
  tmp_3 = ldv_undef_int();
  
#line 300 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 303 
    ldv_15_ret = ldv_emg_wrapper_sge_qinfo_open_3(ldv_15_resource_0,ldv_15_resource_1);
    
#line 305 
    ldv_15_ret = ldv_filter_err_code(ldv_15_ret);
    
#line 308 
    tmp_2 = ldv_undef_int();
    
#line 308 
    if (tmp_2 != 0) {
      
#line 310 
      __VERIFIER_assume(ldv_15_ret == 0);
      
#line 317 
      goto ldv_call_15;
    }
    else {
      
#line 321 
      __VERIFIER_assume(ldv_15_ret != 0);
      
#line 328 
      goto ldv_main_15;
    }
  }
  else {
    
#line 333 
    ldv_free((void *)ldv_15_resource_0);
    
#line 341 
    __retres = (void *)0;
    
#line 341 
    goto return_label;
  }
  
#line 344 
  __retres = (void *)0;
  
#line 344 
  goto return_label;
  ldv_call_15: 
#line 347 
  ;
  
#line 350 
  tmp_4 = ldv_undef_int();
  
#line 350 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 351 
    ;
    
#line 353 
    ldv_15_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 354 
    ldv_15_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 358 
    if (ldv_15_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 364 
      __VERIFIER_assume(ldv_15_size_cnt <= 2147479552UL);
      
#line 366 
      (*(ldv_15_container->write))(ldv_15_resource_1,(char const *)ldv_15_ldv_param_1_6,ldv_15_size_cnt,ldv_15_ldv_param_3_7);
    }
    else ;
    
#line 371 
    ldv_free((void *)ldv_15_ldv_param_1_6);
    
#line 372 
    ldv_free((void *)ldv_15_ldv_param_3_7);
    
#line 379 
    goto ldv_call_15;
    case 2: 
#line 382 
    ;
    
#line 385 
    (*ldv_emg_alias_seq_release_5)(ldv_15_resource_0,ldv_15_resource_1);
    
#line 392 
    goto ldv_main_15;
    case 3: 
#line 395 
    ;
    
#line 399 
    tmp_9 = ldv_undef_int();
    
#line 399 
    if (tmp_9 != 0) 
#line 402 
                    (*ldv_emg_alias_seq_lseek_3)(ldv_15_resource_1,ldv_15_ldv_param_1_2,ldv_15_ldv_param_2_3);
    else {
      
#line 408 
      ldv_15_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 409 
      ldv_15_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 414 
      (*ldv_emg_alias_seq_read_4)(ldv_15_resource_1,ldv_15_ldv_param_1_4,ldv_15_size_cnt,ldv_15_ldv_param_3_5);
      
#line 418 
      ldv_free((void *)ldv_15_ldv_param_1_4);
      
#line 419 
      ldv_free((void *)ldv_15_ldv_param_3_5);
    }
    
#line 423 
    goto ldv_45598;
    default: 
#line 425 
    ;
    
#line 425 
    __VERIFIER_assume(0);
  }
  ldv_45598: 
#line 434 
  ;
  
#line 434 
  goto ldv_call_15;
  
#line 436 
  __retres = (void *)0;
  return_label: 
#line 436 
                return __retres;
}


#line 441  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_9_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_17 *cf_arg_17;
  int tmp;
  
#line 444 
  tmp = ldv_undef_int();
  
#line 444 
  switch (tmp) {
    case 0: 
#line 445 
    ;
    
#line 446 
    cf_arg_17 = (struct ldv_struct_random_allocationless_scenario_17 *)ldv_xmalloc(16UL);
    
#line 447 
    cf_arg_17->arg0 = arg0;
    
#line 448 
    ret = pthread_create(& ldv_thread_17,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_17,(void *)cf_arg_17);
    
#line 449 
    __VERIFIER_assume(ret == 0);
    
#line 450 
    goto ldv_45606;
    default: 
#line 452 
    ;
    
#line 452 
    __VERIFIER_assume(0);
  }
  ldv_45606: 
#line 453 
  ;
  
#line 454 
  return;
}


#line 458  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 461 
  struct pci_driver *ldv_11_pci_driver = ldv_emg_alias_cxgb4vf_driver_2;
  
#line 465 
  tmp_0 = ldv_undef_int();
  
#line 465 
  if (tmp_0 != 0) {
    
#line 467 
    ldv_11_pci_driver = arg0;
    
#line 471 
    ldv_dispatch_register_11_3(ldv_11_pci_driver);
    
#line 475 
    __retres = 0;
    
#line 475 
    goto return_label;
  }
  else {
    int tmp;
    
#line 482 
    tmp = ldv_undef_int_negative();
    
#line 482 
    __retres = tmp;
    
#line 482 
    goto return_label;
  }
  return_label: 
#line 465 
                return __retres;
}


#line 492  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_21(void *arg0)
{
  void *__retres;
  struct file *ldv_21_resource_1;
  int ldv_21_ldv_param_2_3;
  long long ldv_21_ldv_param_1_2;
  char *ldv_21_ldv_param_1_4;
  struct inode *ldv_21_resource_0;
  unsigned long ldv_21_size_cnt;
  long long *ldv_21_ldv_param_3_5;
  char *ldv_21_ldv_param_1_6;
  long long *ldv_21_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 503 
  struct file_operations *ldv_21_container = ldv_emg_alias_interfaces_proc_fops_2;
  
#line 504 
  int ldv_21_ret = ldv_undef_int();
  
#line 507 
  struct ldv_struct_character_driver_scenario_15 *data = (struct ldv_struct_character_driver_scenario_15 *)arg0;
  
#line 511 
  ldv_21_ret = ldv_undef_int();
  
#line 514 
  if (data != (struct ldv_struct_character_driver_scenario_15 *)0) {
    
#line 515 
    ldv_21_container = data->arg0;
    
#line 516 
    ldv_free((void *)data);
  }
  else ;
  
#line 521 
  ldv_21_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 522 
  tmp_1 = ldv_undef_int();
  
#line 522 
  ldv_21_size_cnt = (unsigned long)tmp_1;
  
#line 529 
  goto ldv_main_21;
  
#line 531 
  __retres = (void *)0;
  
#line 531 
  goto return_label;
  ldv_main_21: 
#line 534 
  ;
  
#line 537 
  tmp_3 = ldv_undef_int();
  
#line 537 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 540 
    ldv_21_ret = ldv_emg_wrapper_interfaces_open_6(ldv_21_resource_0,ldv_21_resource_1);
    
#line 542 
    ldv_21_ret = ldv_filter_err_code(ldv_21_ret);
    
#line 545 
    tmp_2 = ldv_undef_int();
    
#line 545 
    if (tmp_2 != 0) {
      
#line 547 
      __VERIFIER_assume(ldv_21_ret == 0);
      
#line 554 
      goto ldv_call_21;
    }
    else {
      
#line 558 
      __VERIFIER_assume(ldv_21_ret != 0);
      
#line 565 
      goto ldv_main_21;
    }
  }
  else {
    
#line 570 
    ldv_free((void *)ldv_21_resource_0);
    
#line 578 
    __retres = (void *)0;
    
#line 578 
    goto return_label;
  }
  
#line 581 
  __retres = (void *)0;
  
#line 581 
  goto return_label;
  ldv_call_21: 
#line 584 
  ;
  
#line 587 
  tmp_4 = ldv_undef_int();
  
#line 587 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 588 
    ;
    
#line 590 
    ldv_21_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 591 
    ldv_21_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 595 
    if (ldv_21_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 601 
      __VERIFIER_assume(ldv_21_size_cnt <= 2147479552UL);
      
#line 603 
      (*(ldv_21_container->write))(ldv_21_resource_1,(char const *)ldv_21_ldv_param_1_6,ldv_21_size_cnt,ldv_21_ldv_param_3_7);
    }
    else ;
    
#line 608 
    ldv_free((void *)ldv_21_ldv_param_1_6);
    
#line 609 
    ldv_free((void *)ldv_21_ldv_param_3_7);
    
#line 616 
    goto ldv_call_21;
    case 2: 
#line 619 
    ;
    
#line 622 
    (*ldv_emg_alias_seq_release_5)(ldv_21_resource_0,ldv_21_resource_1);
    
#line 629 
    goto ldv_main_21;
    case 3: 
#line 632 
    ;
    
#line 636 
    tmp_9 = ldv_undef_int();
    
#line 636 
    if (tmp_9 != 0) 
#line 639 
                    (*ldv_emg_alias_seq_lseek_3)(ldv_21_resource_1,ldv_21_ldv_param_1_2,ldv_21_ldv_param_2_3);
    else {
      
#line 645 
      ldv_21_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 646 
      ldv_21_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 651 
      (*ldv_emg_alias_seq_read_4)(ldv_21_resource_1,ldv_21_ldv_param_1_4,ldv_21_size_cnt,ldv_21_ldv_param_3_5);
      
#line 655 
      ldv_free((void *)ldv_21_ldv_param_3_5);
      
#line 656 
      ldv_free((void *)ldv_21_ldv_param_1_4);
    }
    
#line 660 
    goto ldv_45634;
    default: 
#line 662 
    ;
    
#line 662 
    __VERIFIER_assume(0);
  }
  ldv_45634: 
#line 671 
  ;
  
#line 671 
  goto ldv_call_21;
  
#line 673 
  __retres = (void *)0;
  return_label: 
#line 673 
                return __retres;
}


#line 678  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
struct dentry *ldv_emg_debugfs_create_file(char *arg0, unsigned short arg1, struct dentry *arg2, void *arg3, struct file_operations *arg4)
{
  struct dentry *__retres;
  struct dentry *ldv_13_dentry;
  struct file_operations *ldv_13_file_operations;
  int tmp_1;
  
#line 686 
  tmp_1 = ldv_undef_int();
  
#line 686 
  if (tmp_1 != 0) {
    
#line 688 
    ldv_13_dentry = (struct dentry *)ldv_xmalloc_unknown_size(0UL);
    
#line 689 
    ldv_13_file_operations = arg4;
    
#line 693 
    ldv_dispatch_register_13_3(ldv_13_file_operations);
    
#line 697 
    __retres = ldv_13_dentry;
    
#line 697 
    goto return_label;
  }
  else {
    struct dentry *tmp_0;
    
#line 704 
    tmp_0 = (struct dentry *)ERR_PTR(-19L);
    
#line 704 
    __retres = tmp_0;
    
#line 704 
    goto return_label;
  }
  return_label: 
#line 686 
                return __retres;
}


#line 714  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1)
{
  int __retres;
  struct timer_list *ldv_3_timer_list;
  int tmp_0;
  
#line 721 
  tmp_0 = ldv_undef_int();
  
#line 721 
  if (tmp_0 != 0) {
    
#line 723 
    ldv_3_timer_list = arg0;
    
#line 727 
    ldv_dispatch_instance_register_3_3(ldv_3_timer_list);
    
#line 731 
    __retres = 0;
    
#line 731 
    goto return_label;
  }
  else {
    int tmp;
    
#line 738 
    tmp = ldv_undef_int_negative();
    
#line 738 
    __retres = tmp;
    
#line 738 
    goto return_label;
  }
  return_label: 
#line 721 
                return __retres;
}


#line 748  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_14_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_25 *cf_arg_25;
  int tmp;
  
#line 751 
  tmp = ldv_undef_int();
  
#line 751 
  switch (tmp) {
    case 0: 
#line 752 
    ;
    
#line 753 
    cf_arg_25 = (struct ldv_struct_interrupt_scenario_25 *)ldv_xmalloc(32UL);
    
#line 754 
    cf_arg_25->arg0 = arg0;
    
#line 755 
    cf_arg_25->arg1 = arg1;
    
#line 756 
    cf_arg_25->arg2 = arg2;
    
#line 757 
    cf_arg_25->arg3 = arg3;
    
#line 758 
    ret = pthread_create(& ldv_thread_25,(pthread_attr_t const *)0,& ldv_interrupt_scenario_25,(void *)cf_arg_25);
    
#line 759 
    __VERIFIER_assume(ret == 0);
    
#line 760 
    goto ldv_45663;
    default: 
#line 762 
    ;
    
#line 762 
    __VERIFIER_assume(0);
  }
  ldv_45663: 
#line 763 
  ;
  
#line 764 
  return;
}


#line 768  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_traverse_kernel_items_scenario_22(void *arg0)
{
  void *__retres;
  void *ldv_22_ldv_param_1_2;
  long long *ldv_22_index;
  struct seq_file *ldv_22_seq_file;
  void *ldv_22_ldv_param_1_3;
  void *ldv_22_ldv_param_1_4;
  int tmp_2;
  int tmp_6;
  
#line 774 
  struct seq_operations *ldv_22_ops = ldv_emg_alias_interfaces_seq_ops_6;
  
#line 775 
  int ldv_22_show_ret = ldv_undef_int();
  
#line 778 
  void *ldv_22_ret = ldv_undef_ptr();
  
#line 780 
  struct ldv_struct_traverse_kernel_items_scenario_19 *data = (struct ldv_struct_traverse_kernel_items_scenario_19 *)arg0;
  
#line 784 
  ldv_22_show_ret = ldv_undef_int();
  
#line 787 
  if (data != (struct ldv_struct_traverse_kernel_items_scenario_19 *)0) {
    
#line 788 
    ldv_22_seq_file = data->arg0;
    
#line 789 
    ldv_22_ops = data->arg1;
    
#line 790 
    ldv_free((void *)data);
  }
  else ;
  
#line 795 
  ldv_22_index = (long long *)ldv_xmalloc_unknown_size(0UL);
  
#line 802 
  goto ldv_outer_loop_22;
  
#line 804 
  __retres = (void *)0;
  
#line 804 
  goto return_label;
  ldv_outer_loop_22: 
#line 807 
  ;
  
#line 810 
  tmp_2 = ldv_undef_int();
  
#line 810 
  if (tmp_2 != 0) {
    
#line 813 
    *ldv_22_index = 0LL;
    
#line 815 
    ldv_22_ret = ldv_emg_wrapper_interfaces_start_2(ldv_22_seq_file,ldv_22_index);
    
#line 822 
    goto ldv_inner_loop_22;
  }
  else {
    
#line 826 
    ldv_free((void *)ldv_22_index);
    
#line 834 
    __retres = (void *)0;
    
#line 834 
    goto return_label;
  }
  
#line 837 
  __retres = (void *)0;
  
#line 837 
  goto return_label;
  ldv_inner_loop_22: 
#line 840 
  ;
  
#line 843 
  tmp_6 = ldv_undef_int();
  
#line 843 
  if (tmp_6 != 0) {
    long tmp_3;
    int tmp_4;
    
#line 845 
    tmp_3 = ldv_is_err_or_null((void const *)ldv_22_ret);
    
#line 845 
    __VERIFIER_assume(tmp_3 == 0L);
    
#line 849 
    ldv_22_ldv_param_1_3 = ldv_xmalloc_unknown_size(0UL);
    
#line 854 
    ldv_22_show_ret = ldv_emg_wrapper_interfaces_show_4(ldv_22_seq_file,ldv_22_ldv_param_1_3);
    
#line 858 
    ldv_free(ldv_22_ldv_param_1_3);
    
#line 861 
    tmp_4 = ldv_undef_int();
    
#line 861 
    if (tmp_4 != 0) {
      
#line 863 
      __VERIFIER_assume(ldv_22_show_ret >= 0);
      
#line 867 
      ldv_22_ldv_param_1_2 = ldv_xmalloc_unknown_size(0UL);
      
#line 872 
      ldv_22_ret = ldv_emg_wrapper_interfaces_next_3(ldv_22_seq_file,ldv_22_ldv_param_1_2,ldv_22_index);
      
#line 876 
      ldv_free(ldv_22_ldv_param_1_2);
      
#line 883 
      goto ldv_inner_loop_22;
    }
    else {
      
#line 887 
      ldv_22_ldv_param_1_4 = ldv_xmalloc_unknown_size(0UL);
      
#line 892 
      ldv_22_seq_file->index = *ldv_22_index;
      
#line 894 
      ldv_emg_wrapper_interfaces_stop_5(ldv_22_seq_file,ldv_22_ldv_param_1_4);
      
#line 896 
      ldv_22_seq_file->index = *ldv_22_index;
      
#line 900 
      ldv_free(ldv_22_ldv_param_1_4);
      
#line 907 
      goto ldv_outer_loop_22;
    }
  }
  else {
    long tmp_5;
    
#line 912 
    tmp_5 = ldv_is_err_or_null((void const *)ldv_22_ret);
    
#line 912 
    __VERIFIER_assume((int)tmp_5);
    
#line 916 
    ldv_22_ldv_param_1_4 = ldv_xmalloc_unknown_size(0UL);
    
#line 921 
    ldv_22_seq_file->index = *ldv_22_index;
    
#line 923 
    ldv_emg_wrapper_interfaces_stop_5(ldv_22_seq_file,ldv_22_ldv_param_1_4);
    
#line 925 
    ldv_22_seq_file->index = *ldv_22_index;
    
#line 929 
    ldv_free(ldv_22_ldv_param_1_4);
    
#line 936 
    goto ldv_outer_loop_22;
  }
  
#line 939 
  __retres = (void *)0;
  return_label: 
#line 939 
                return __retres;
}


#line 944  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_4_netdev;
  int tmp_0;
  
#line 951 
  tmp_0 = ldv_undef_int();
  
#line 951 
  if (tmp_0 != 0) {
    
#line 953 
    ldv_4_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 957 
    __retres = ldv_4_netdev;
    
#line 957 
    goto return_label;
  }
  else {
    
#line 964 
    __retres = (struct net_device *)0;
    
#line 964 
    goto return_label;
  }
  return_label: 
#line 951 
                return __retres;
}


#line 974  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_11_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_18 *cf_arg_18;
  int tmp;
  
#line 977 
  tmp = ldv_undef_int();
  
#line 977 
  switch (tmp) {
    case 0: 
#line 978 
    ;
    
#line 979 
    cf_arg_18 = (struct ldv_struct_pci_scenario_18 *)ldv_xmalloc(16UL);
    
#line 980 
    cf_arg_18->arg0 = arg0;
    
#line 981 
    ret = pthread_create(& ldv_thread_18,(pthread_attr_t const *)0,& ldv_pci_scenario_18,(void *)cf_arg_18);
    
#line 982 
    __VERIFIER_assume(ret == 0);
    
#line 983 
    goto ldv_45691;
    default: 
#line 985 
    ;
    
#line 985 
    __VERIFIER_assume(0);
  }
  ldv_45691: 
#line 986 
  ;
  
#line 987 
  return;
}


#line 991  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_del_timer_sync(struct timer_list *arg0)
{
  int __retres;
  struct timer_list *ldv_12_timer_list;
  
#line 997 
  ldv_12_timer_list = arg0;
  
#line 1001 
  ldv_dispatch_instance_deregister_12_1(ldv_12_timer_list);
  
#line 1002 
  ;
  
#line 1002 
  __retres = 0;
  
#line 1002 
  return __retres;
}


#line 1010  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_traverse_kernel_items_scenario_23(void *arg0)
{
  void *__retres;
  void *ldv_23_ldv_param_1_2;
  long long *ldv_23_index;
  struct seq_file *ldv_23_seq_file;
  void *ldv_23_ldv_param_1_3;
  void *ldv_23_ldv_param_1_4;
  int tmp_2;
  int tmp_6;
  
#line 1016 
  struct seq_operations *ldv_23_ops = ldv_emg_alias_sge_qstats_seq_ops_6;
  
#line 1017 
  int ldv_23_show_ret = ldv_undef_int();
  
#line 1020 
  void *ldv_23_ret = ldv_undef_ptr();
  
#line 1022 
  struct ldv_struct_traverse_kernel_items_scenario_19 *data = (struct ldv_struct_traverse_kernel_items_scenario_19 *)arg0;
  
#line 1026 
  ldv_23_show_ret = ldv_undef_int();
  
#line 1029 
  if (data != (struct ldv_struct_traverse_kernel_items_scenario_19 *)0) {
    
#line 1030 
    ldv_23_seq_file = data->arg0;
    
#line 1031 
    ldv_23_ops = data->arg1;
    
#line 1032 
    ldv_free((void *)data);
  }
  else ;
  
#line 1037 
  ldv_23_index = (long long *)ldv_xmalloc_unknown_size(0UL);
  
#line 1044 
  goto ldv_outer_loop_23;
  
#line 1046 
  __retres = (void *)0;
  
#line 1046 
  goto return_label;
  ldv_outer_loop_23: 
#line 1049 
  ;
  
#line 1052 
  tmp_2 = ldv_undef_int();
  
#line 1052 
  if (tmp_2 != 0) {
    
#line 1055 
    *ldv_23_index = 0LL;
    
#line 1057 
    ldv_23_ret = ldv_emg_wrapper_sge_qstats_start_2(ldv_23_seq_file,ldv_23_index);
    
#line 1064 
    goto ldv_inner_loop_23;
  }
  else {
    
#line 1068 
    ldv_free((void *)ldv_23_index);
    
#line 1076 
    __retres = (void *)0;
    
#line 1076 
    goto return_label;
  }
  
#line 1079 
  __retres = (void *)0;
  
#line 1079 
  goto return_label;
  ldv_inner_loop_23: 
#line 1082 
  ;
  
#line 1085 
  tmp_6 = ldv_undef_int();
  
#line 1085 
  if (tmp_6 != 0) {
    long tmp_3;
    int tmp_4;
    
#line 1087 
    tmp_3 = ldv_is_err_or_null((void const *)ldv_23_ret);
    
#line 1087 
    __VERIFIER_assume(tmp_3 == 0L);
    
#line 1091 
    ldv_23_ldv_param_1_3 = ldv_xmalloc_unknown_size(0UL);
    
#line 1096 
    ldv_23_show_ret = ldv_emg_wrapper_sge_qstats_show_4(ldv_23_seq_file,ldv_23_ldv_param_1_3);
    
#line 1100 
    ldv_free(ldv_23_ldv_param_1_3);
    
#line 1103 
    tmp_4 = ldv_undef_int();
    
#line 1103 
    if (tmp_4 != 0) {
      
#line 1105 
      __VERIFIER_assume(ldv_23_show_ret >= 0);
      
#line 1109 
      ldv_23_ldv_param_1_2 = ldv_xmalloc_unknown_size(0UL);
      
#line 1114 
      ldv_23_ret = ldv_emg_wrapper_sge_qstats_next_3(ldv_23_seq_file,ldv_23_ldv_param_1_2,ldv_23_index);
      
#line 1118 
      ldv_free(ldv_23_ldv_param_1_2);
      
#line 1125 
      goto ldv_inner_loop_23;
    }
    else {
      
#line 1129 
      ldv_23_ldv_param_1_4 = ldv_xmalloc_unknown_size(0UL);
      
#line 1134 
      ldv_23_seq_file->index = *ldv_23_index;
      
#line 1136 
      ldv_emg_wrapper_sge_qstats_stop_5(ldv_23_seq_file,ldv_23_ldv_param_1_4);
      
#line 1138 
      ldv_23_seq_file->index = *ldv_23_index;
      
#line 1142 
      ldv_free(ldv_23_ldv_param_1_4);
      
#line 1149 
      goto ldv_outer_loop_23;
    }
  }
  else {
    long tmp_5;
    
#line 1154 
    tmp_5 = ldv_is_err_or_null((void const *)ldv_23_ret);
    
#line 1154 
    __VERIFIER_assume((int)tmp_5);
    
#line 1158 
    ldv_23_ldv_param_1_4 = ldv_xmalloc_unknown_size(0UL);
    
#line 1163 
    ldv_23_seq_file->index = *ldv_23_index;
    
#line 1165 
    ldv_emg_wrapper_sge_qstats_stop_5(ldv_23_seq_file,ldv_23_ldv_param_1_4);
    
#line 1167 
    ldv_23_seq_file->index = *ldv_23_index;
    
#line 1171 
    ldv_free(ldv_23_ldv_param_1_4);
    
#line 1178 
    goto ldv_outer_loop_23;
  }
  
#line 1181 
  __retres = (void *)0;
  return_label: 
#line 1181 
                return __retres;
}


#line 1186  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_17(void *arg0)
{
  void *__retres;
  struct sk_buff *ldv_17_ldv_param_0_13;
  enum ethtool_phys_id_state *ldv_17_ldv_param_1_3;
  struct ethtool_drvinfo *ldv_17_ldv_param_1_10;
  struct ethtool_cmd *ldv_17_ldv_param_1_15;
  struct ethtool_coalesce *ldv_17_ldv_param_1_25;
  unsigned char *ldv_17_ldv_param_2_23;
  void *ldv_17_ldv_param_1_14;
  struct ethtool_pauseparam *ldv_17_ldv_param_1_2;
  unsigned int ldv_17_ldv_param_1_4;
  int ldv_17_ldv_param_1_5;
  unsigned long long ldv_17_ldv_param_1_11;
  unsigned long long *ldv_17_ldv_param_2_7;
  struct ethtool_ringparam *ldv_17_ldv_param_1_8;
  struct net_device *ldv_17_container;
  void *ldv_17_ldv_param_2_20;
  struct ethtool_ringparam *ldv_17_ldv_param_1_12;
  struct ethtool_wolinfo *ldv_17_ldv_param_1_16;
  int ldv_17_ldv_param_1_21;
  struct ethtool_stats *ldv_17_ldv_param_1_6;
  unsigned long long ldv_17_ldv_param_1_9;
  struct ifreq *ldv_17_ldv_param_1_17;
  struct ethtool_regs *ldv_17_ldv_param_1_19;
  struct ethtool_coalesce *ldv_17_ldv_param_1_24;
  unsigned int ldv_17_ldv_param_1_22;
  int ldv_17_ldv_param_2_18;
  int tmp_15;
  
#line 1215 
  struct ldv_struct_random_allocationless_scenario_17 *data = (struct ldv_struct_random_allocationless_scenario_17 *)arg0;
  
#line 1220 
  if (data != (struct ldv_struct_random_allocationless_scenario_17 *)0) {
    
#line 1221 
    ldv_17_container = data->arg0;
    
#line 1222 
    ldv_free((void *)data);
  }
  else ;
  
#line 1230 
  goto ldv_call_17;
  
#line 1232 
  __retres = (void *)0;
  
#line 1232 
  goto return_label;
  ldv_call_17: 
#line 1235 
  ;
  
#line 1238 
  tmp_15 = ldv_undef_int();
  
#line 1238 
  if (tmp_15 != 0) {
    int tmp_0;
    
#line 1240 
    ldv_17_ldv_param_1_2 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
    
#line 1243 
    tmp_0 = ldv_undef_int();
    
#line 1243 
    switch (tmp_0) {
      case 1: 
#line 1244 
      ;
      
#line 1247 
      ldv_emg_wrapper_cxgb4vf_get_pauseparam_2(ldv_17_container,ldv_17_ldv_param_1_2);
      
#line 1250 
      goto ldv_45742;
      case 2: 
#line 1252 
      ;
      
#line 1255 
      ldv_emg_wrapper_cxgb4vf_set_rxmode_27(ldv_17_container);
      
#line 1258 
      goto ldv_45742;
      case 3: 
#line 1260 
      ;
      
#line 1263 
      ldv_emg_wrapper_cxgb4vf_poll_controller_26(ldv_17_container);
      
#line 1266 
      goto ldv_45742;
      case 4: 
#line 1268 
      ;
      
#line 1270 
      ldv_17_ldv_param_1_25 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 1275 
      ldv_emg_wrapper_cxgb4vf_set_coalesce_25(ldv_17_container,ldv_17_ldv_param_1_25);
      
#line 1279 
      ldv_free((void *)ldv_17_ldv_param_1_25);
      
#line 1282 
      goto ldv_45742;
      case 5: 
#line 1284 
      ;
      
#line 1287 
      ldv_emg_wrapper_cxgb4vf_get_regs_len_24(ldv_17_container);
      
#line 1290 
      goto ldv_45742;
      case 6: 
#line 1292 
      ;
      
#line 1294 
      ldv_17_ldv_param_1_24 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 1299 
      ldv_emg_wrapper_cxgb4vf_get_coalesce_23(ldv_17_container,ldv_17_ldv_param_1_24);
      
#line 1303 
      ldv_free((void *)ldv_17_ldv_param_1_24);
      
#line 1306 
      goto ldv_45742;
      case 7: 
#line 1308 
      ;
      
#line 1310 
      ldv_17_ldv_param_2_23 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1315 
      ldv_emg_wrapper_cxgb4vf_get_strings_5(ldv_17_container,ldv_17_ldv_param_1_22,ldv_17_ldv_param_2_23);
      
#line 1319 
      ldv_free((void *)ldv_17_ldv_param_2_23);
      
#line 1322 
      goto ldv_45742;
      case 8: 
#line 1324 
      ;
      
#line 1327 
      ldv_emg_wrapper_cxgb4vf_get_stats_21(ldv_17_container);
      
#line 1330 
      goto ldv_45742;
      case 9: 
#line 1332 
      ;
      
#line 1338 
      ldv_emg_wrapper_cxgb4vf_get_sset_count_20(ldv_17_container,ldv_17_ldv_param_1_21);
      
#line 1344 
      goto ldv_45742;
      case 10: 
#line 1346 
      ;
      
#line 1348 
      ldv_17_ldv_param_1_19 = (struct ethtool_regs *)ldv_xmalloc_unknown_size(0UL);
      
#line 1349 
      ldv_17_ldv_param_2_20 = ldv_xmalloc_unknown_size(0UL);
      
#line 1354 
      ldv_emg_wrapper_cxgb4vf_get_regs_19(ldv_17_container,ldv_17_ldv_param_1_19,ldv_17_ldv_param_2_20);
      
#line 1358 
      ldv_free((void *)ldv_17_ldv_param_1_19);
      
#line 1359 
      ldv_free(ldv_17_ldv_param_2_20);
      
#line 1362 
      goto ldv_45742;
      case 11: 
#line 1364 
      ;
      
#line 1366 
      ldv_17_ldv_param_1_17 = (struct ifreq *)ldv_xmalloc_unknown_size(0UL);
      
#line 1371 
      ldv_emg_wrapper_cxgb4vf_do_ioctl_17(ldv_17_container,ldv_17_ldv_param_1_17,ldv_17_ldv_param_2_18);
      
#line 1375 
      ldv_free((void *)ldv_17_ldv_param_1_17);
      
#line 1378 
      goto ldv_45742;
      case 12: 
#line 1380 
      ;
      
#line 1382 
      ldv_17_ldv_param_1_16 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1387 
      ldv_emg_wrapper_cxgb4vf_get_wol_16(ldv_17_container,ldv_17_ldv_param_1_16);
      
#line 1391 
      ldv_free((void *)ldv_17_ldv_param_1_16);
      
#line 1394 
      goto ldv_45742;
      case 13: 
#line 1396 
      ;
      
#line 1398 
      ldv_17_ldv_param_1_15 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 1403 
      ldv_emg_wrapper_cxgb4vf_get_settings_15(ldv_17_container,ldv_17_ldv_param_1_15);
      
#line 1407 
      ldv_free((void *)ldv_17_ldv_param_1_15);
      
#line 1410 
      goto ldv_45742;
      case 14: 
#line 1412 
      ;
      
#line 1414 
      ldv_17_ldv_param_1_14 = ldv_xmalloc_unknown_size(0UL);
      
#line 1419 
      ldv_emg_wrapper_cxgb4vf_set_mac_addr_14(ldv_17_container,ldv_17_ldv_param_1_14);
      
#line 1423 
      ldv_free(ldv_17_ldv_param_1_14);
      
#line 1426 
      goto ldv_45742;
      case 15: 
#line 1428 
      ;
      
#line 1430 
      ldv_17_ldv_param_0_13 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 1435 
      t4vf_eth_xmit(ldv_17_ldv_param_0_13,ldv_17_container);
      
#line 1439 
      ldv_free((void *)ldv_17_ldv_param_0_13);
      
#line 1442 
      goto ldv_45742;
      case 16: 
#line 1444 
      ;
      
#line 1447 
      ldv_emg_wrapper_cxgb4vf_get_msglevel_13(ldv_17_container);
      
#line 1450 
      goto ldv_45742;
      case 17: 
#line 1452 
      ;
      
#line 1454 
      ldv_17_ldv_param_1_12 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 1459 
      ldv_emg_wrapper_cxgb4vf_set_ringparam_12(ldv_17_container,ldv_17_ldv_param_1_12);
      
#line 1463 
      ldv_free((void *)ldv_17_ldv_param_1_12);
      
#line 1466 
      goto ldv_45742;
      case 18: 
#line 1468 
      ;
      
#line 1474 
      ldv_emg_wrapper_cxgb4vf_fix_features_11(ldv_17_container,ldv_17_ldv_param_1_11);
      
#line 1480 
      goto ldv_45742;
      case 19: 
#line 1482 
      ;
      
#line 1484 
      ldv_17_ldv_param_1_10 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1489 
      ldv_emg_wrapper_cxgb4vf_get_drvinfo_10(ldv_17_container,ldv_17_ldv_param_1_10);
      
#line 1493 
      ldv_free((void *)ldv_17_ldv_param_1_10);
      
#line 1496 
      goto ldv_45742;
      case 20: 
#line 1498 
      ;
      
#line 1504 
      ldv_emg_wrapper_cxgb4vf_set_features_9(ldv_17_container,ldv_17_ldv_param_1_9);
      
#line 1510 
      goto ldv_45742;
      case 21: 
#line 1512 
      ;
      
#line 1514 
      ldv_17_ldv_param_1_8 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 1519 
      ldv_emg_wrapper_cxgb4vf_get_ringparam_6(ldv_17_container,ldv_17_ldv_param_1_8);
      
#line 1523 
      ldv_free((void *)ldv_17_ldv_param_1_8);
      
#line 1526 
      goto ldv_45742;
      case 22: 
#line 1528 
      ;
      
#line 1531 
      (*ldv_emg_alias_eth_validate_addr_18)(ldv_17_container);
      
#line 1534 
      goto ldv_45742;
      case 23: 
#line 1536 
      ;
      
#line 1538 
      ldv_17_ldv_param_2_7 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1539 
      ldv_17_ldv_param_1_6 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 1544 
      ldv_emg_wrapper_cxgb4vf_get_ethtool_stats_7(ldv_17_container,ldv_17_ldv_param_1_6,ldv_17_ldv_param_2_7);
      
#line 1548 
      ldv_free((void *)ldv_17_ldv_param_2_7);
      
#line 1549 
      ldv_free((void *)ldv_17_ldv_param_1_6);
      
#line 1552 
      goto ldv_45742;
      case 24: 
#line 1554 
      ;
      
#line 1560 
      ldv_emg_wrapper_cxgb4vf_change_mtu_8(ldv_17_container,ldv_17_ldv_param_1_5);
      
#line 1566 
      goto ldv_45742;
      case 25: 
#line 1568 
      ;
      
#line 1574 
      ldv_emg_wrapper_cxgb4vf_set_msglevel_22(ldv_17_container,ldv_17_ldv_param_1_4);
      
#line 1580 
      goto ldv_45742;
      case 26: 
#line 1582 
      ;
      
#line 1584 
      ldv_17_ldv_param_1_3 = (enum ethtool_phys_id_state *)ldv_xmalloc_unknown_size(0UL);
      
#line 1589 
      ldv_emg_wrapper_cxgb4vf_phys_id_4(ldv_17_container,*ldv_17_ldv_param_1_3);
      
#line 1593 
      ldv_free((void *)ldv_17_ldv_param_1_3);
      
#line 1596 
      goto ldv_45742;
      case 27: 
#line 1598 
      ;
      
#line 1601 
      (*ldv_emg_alias_ethtool_op_get_link_3)(ldv_17_container);
      
#line 1604 
      goto ldv_45742;
      default: 
#line 1606 
      ;
      
#line 1606 
      __VERIFIER_assume(0);
    }
    ldv_45742: 
#line 1609 
    ;
    
#line 1609 
    ldv_free((void *)ldv_17_ldv_param_1_2);
    
#line 1616 
    goto ldv_call_17;
  }
  else {
    
#line 1624 
    __retres = (void *)0;
    
#line 1624 
    goto return_label;
  }
  
#line 1627 
  __retres = (void *)0;
  return_label: 
#line 1627 
                return __retres;
}


#line 1632  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_seq_open(struct file *arg0, struct seq_operations *arg1)
{
  int __retres;
  struct seq_file *ldv_10_seq_file;
  struct seq_operations *ldv_10_ops;
  struct file *ldv_10_file;
  
#line 1640 
  ldv_10_seq_file = (struct seq_file *)ldv_xmalloc_unknown_size(0UL);
  
#line 1641 
  ldv_10_ops = arg1;
  
#line 1642 
  ldv_10_file->private_data = (void *)ldv_10_seq_file;
  
#line 1646 
  ldv_dispatch_register_10_1(ldv_10_seq_file,ldv_10_ops);
  
#line 1647 
  ;
  
#line 1647 
  __retres = 0;
  
#line 1647 
  return __retres;
}


#line 1655  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_6_1(struct file_operations *arg0)
{
  int ret;
  struct ldv_struct_character_driver_scenario_15 *cf_arg_16;
  struct ldv_struct_character_driver_scenario_15 *cf_arg_24;
  struct ldv_struct_character_driver_scenario_15 *cf_arg_21;
  struct ldv_struct_character_driver_scenario_15 *cf_arg_15;
  int tmp;
  
#line 1661 
  tmp = ldv_undef_int();
  
#line 1661 
  switch (tmp) {
    case 0: 
#line 1662 
    ;
    
#line 1663 
    ret = pthread_join(ldv_thread_16,(void **)0);
    
#line 1664 
    __VERIFIER_assume(ret == 0);
    
#line 1665 
    goto ldv_45786;
    case 1: 
#line 1667 
    ;
    
#line 1668 
    ret = pthread_join(ldv_thread_24,(void **)0);
    
#line 1669 
    __VERIFIER_assume(ret == 0);
    
#line 1670 
    goto ldv_45786;
    case 2: 
#line 1672 
    ;
    
#line 1673 
    ret = pthread_join(ldv_thread_21,(void **)0);
    
#line 1674 
    __VERIFIER_assume(ret == 0);
    
#line 1675 
    goto ldv_45786;
    case 3: 
#line 1677 
    ;
    
#line 1678 
    ret = pthread_join(ldv_thread_15,(void **)0);
    
#line 1679 
    __VERIFIER_assume(ret == 0);
    
#line 1680 
    goto ldv_45786;
    default: 
#line 1682 
    ;
    
#line 1682 
    __VERIFIER_assume(0);
  }
  ldv_45786: 
#line 1683 
  ;
  
#line 1684 
  return;
}


#line 1688  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_16(void *arg0)
{
  void *__retres;
  struct file *ldv_16_resource_1;
  int ldv_16_ldv_param_2_3;
  long long ldv_16_ldv_param_1_2;
  char *ldv_16_ldv_param_1_4;
  struct inode *ldv_16_resource_0;
  unsigned long ldv_16_size_cnt;
  long long *ldv_16_ldv_param_3_5;
  char *ldv_16_ldv_param_1_6;
  long long *ldv_16_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 1699 
  struct file_operations *ldv_16_container = ldv_emg_alias_resources_proc_fops_2;
  
#line 1700 
  int ldv_16_ret = ldv_undef_int();
  
#line 1703 
  struct ldv_struct_character_driver_scenario_15 *data = (struct ldv_struct_character_driver_scenario_15 *)arg0;
  
#line 1707 
  ldv_16_ret = ldv_undef_int();
  
#line 1710 
  if (data != (struct ldv_struct_character_driver_scenario_15 *)0) {
    
#line 1711 
    ldv_16_container = data->arg0;
    
#line 1712 
    ldv_free((void *)data);
  }
  else ;
  
#line 1717 
  ldv_16_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 1718 
  tmp_1 = ldv_undef_int();
  
#line 1718 
  ldv_16_size_cnt = (unsigned long)tmp_1;
  
#line 1725 
  goto ldv_main_16;
  
#line 1727 
  __retres = (void *)0;
  
#line 1727 
  goto return_label;
  ldv_main_16: 
#line 1730 
  ;
  
#line 1733 
  tmp_3 = ldv_undef_int();
  
#line 1733 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 1736 
    ldv_16_ret = ldv_emg_wrapper_resources_open_4(ldv_16_resource_0,ldv_16_resource_1);
    
#line 1738 
    ldv_16_ret = ldv_filter_err_code(ldv_16_ret);
    
#line 1741 
    tmp_2 = ldv_undef_int();
    
#line 1741 
    if (tmp_2 != 0) {
      
#line 1743 
      __VERIFIER_assume(ldv_16_ret == 0);
      
#line 1750 
      goto ldv_call_16;
    }
    else {
      
#line 1754 
      __VERIFIER_assume(ldv_16_ret != 0);
      
#line 1761 
      goto ldv_main_16;
    }
  }
  else {
    
#line 1766 
    ldv_free((void *)ldv_16_resource_0);
    
#line 1774 
    __retres = (void *)0;
    
#line 1774 
    goto return_label;
  }
  
#line 1777 
  __retres = (void *)0;
  
#line 1777 
  goto return_label;
  ldv_call_16: 
#line 1780 
  ;
  
#line 1783 
  tmp_4 = ldv_undef_int();
  
#line 1783 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 1784 
    ;
    
#line 1786 
    ldv_16_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 1787 
    ldv_16_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 1791 
    if (ldv_16_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 1797 
      __VERIFIER_assume(ldv_16_size_cnt <= 2147479552UL);
      
#line 1799 
      (*(ldv_16_container->write))(ldv_16_resource_1,(char const *)ldv_16_ldv_param_1_6,ldv_16_size_cnt,ldv_16_ldv_param_3_7);
    }
    else ;
    
#line 1804 
    ldv_free((void *)ldv_16_ldv_param_1_6);
    
#line 1805 
    ldv_free((void *)ldv_16_ldv_param_3_7);
    
#line 1812 
    goto ldv_call_16;
    case 2: 
#line 1815 
    ;
    
#line 1818 
    (*ldv_emg_alias_single_release_3)(ldv_16_resource_0,ldv_16_resource_1);
    
#line 1825 
    goto ldv_main_16;
    case 3: 
#line 1828 
    ;
    
#line 1832 
    tmp_9 = ldv_undef_int();
    
#line 1832 
    if (tmp_9 != 0) 
#line 1835 
                    (*ldv_emg_alias_seq_lseek_3)(ldv_16_resource_1,ldv_16_ldv_param_1_2,ldv_16_ldv_param_2_3);
    else {
      
#line 1841 
      ldv_16_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1842 
      ldv_16_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1847 
      (*ldv_emg_alias_seq_read_4)(ldv_16_resource_1,ldv_16_ldv_param_1_4,ldv_16_size_cnt,ldv_16_ldv_param_3_5);
      
#line 1851 
      ldv_free((void *)ldv_16_ldv_param_1_4);
      
#line 1852 
      ldv_free((void *)ldv_16_ldv_param_3_5);
    }
    
#line 1856 
    goto ldv_45811;
    default: 
#line 1858 
    ;
    
#line 1858 
    __VERIFIER_assume(0);
  }
  ldv_45811: 
#line 1867 
  ;
  
#line 1867 
  goto ldv_call_16;
  
#line 1869 
  __retres = (void *)0;
  return_label: 
#line 1869 
                return __retres;
}


#line 1874  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_9_netdev;
  int tmp_3;
  
#line 1878 
  int ldv_9_ret = ldv_undef_int();
  
#line 1881 
  ldv_9_ret = ldv_undef_int();
  
#line 1884 
  tmp_3 = ldv_undef_int();
  
#line 1884 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 1886 
    ldv_9_netdev = arg0;
    
#line 1891 
    ldv_9_ret = ldv_emg_wrapper_cxgb4vf_open_2(ldv_9_netdev);
    
#line 1894 
    tmp_1 = ldv_undef_int();
    
#line 1894 
    if (tmp_1 != 0) {
      
#line 1896 
      __VERIFIER_assume(ldv_9_ret == 0);
      
#line 1900 
      ldv_dispatch_register_9_4(ldv_9_netdev);
      
#line 1904 
      __retres = 0;
      
#line 1904 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 1911 
      __VERIFIER_assume(ldv_9_ret != 0);
      
#line 1912 
      ldv_failed_register_netdev();
      
#line 1913 
      tmp_0 = ldv_undef_int_negative();
      
#line 1913 
      __retres = tmp_0;
      
#line 1913 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 1921 
    ldv_failed_register_netdev();
    
#line 1922 
    tmp_2 = ldv_undef_int_negative();
    
#line 1922 
    __retres = tmp_2;
    
#line 1922 
    goto return_label;
  }
  return_label: 
#line 1884 
                return __retres;
}


#line 1932  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 1935 
  ldv_initialize();
  
#line 1938 
  ldv_initialization_1((void *)0);
  
#line 1940 
  __retres = 0;
  
#line 1940 
  return __retres;
}


#line 1945  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_8_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_18 *cf_arg_18;
  int tmp;
  
#line 1948 
  tmp = ldv_undef_int();
  
#line 1948 
  switch (tmp) {
    case 0: 
#line 1949 
    ;
    
#line 1950 
    ret = pthread_join(ldv_thread_18,(void **)0);
    
#line 1951 
    __VERIFIER_assume(ret == 0);
    
#line 1952 
    goto ldv_45827;
    default: 
#line 1954 
    ;
    
#line 1954 
    __VERIFIER_assume(0);
  }
  ldv_45827: 
#line 1955 
  ;
  
#line 1956 
  return;
}


#line 1960  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_debugfs_remove(struct dentry *arg0)
{
  struct dentry *ldv_6_dentry;
  struct file_operations *ldv_6_file_operations;
  
#line 1967 
  ldv_6_dentry = arg0;
  
#line 1968 
  ldv_free((void *)ldv_6_dentry);
  
#line 1972 
  ldv_dispatch_deregister_6_1(ldv_6_file_operations);
  
#line 1976 
  goto return_label;
  return_label: 
#line 1978 
                return;
}


#line 1983  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_13_3(struct file_operations *arg0)
{
  int ret;
  struct ldv_struct_character_driver_scenario_15 *cf_arg_16;
  struct ldv_struct_character_driver_scenario_15 *cf_arg_24;
  struct ldv_struct_character_driver_scenario_15 *cf_arg_21;
  struct ldv_struct_character_driver_scenario_15 *cf_arg_15;
  int tmp;
  
#line 1989 
  tmp = ldv_undef_int();
  
#line 1989 
  switch (tmp) {
    case 0: 
#line 1990 
    ;
    
#line 1991 
    cf_arg_16 = (struct ldv_struct_character_driver_scenario_15 *)ldv_xmalloc(16UL);
    
#line 1992 
    cf_arg_16->arg0 = arg0;
    
#line 1993 
    ret = pthread_create(& ldv_thread_16,(pthread_attr_t const *)0,& ldv_character_driver_scenario_16,(void *)cf_arg_16);
    
#line 1994 
    __VERIFIER_assume(ret == 0);
    
#line 1995 
    goto ldv_45843;
    case 1: 
#line 1997 
    ;
    
#line 1998 
    cf_arg_24 = (struct ldv_struct_character_driver_scenario_15 *)ldv_xmalloc(16UL);
    
#line 1999 
    cf_arg_24->arg0 = arg0;
    
#line 2000 
    ret = pthread_create(& ldv_thread_24,(pthread_attr_t const *)0,& ldv_character_driver_scenario_24,(void *)cf_arg_24);
    
#line 2001 
    __VERIFIER_assume(ret == 0);
    
#line 2002 
    goto ldv_45843;
    case 2: 
#line 2004 
    ;
    
#line 2005 
    cf_arg_21 = (struct ldv_struct_character_driver_scenario_15 *)ldv_xmalloc(16UL);
    
#line 2006 
    cf_arg_21->arg0 = arg0;
    
#line 2007 
    ret = pthread_create(& ldv_thread_21,(pthread_attr_t const *)0,& ldv_character_driver_scenario_21,(void *)cf_arg_21);
    
#line 2008 
    __VERIFIER_assume(ret == 0);
    
#line 2009 
    goto ldv_45843;
    case 3: 
#line 2011 
    ;
    
#line 2012 
    cf_arg_15 = (struct ldv_struct_character_driver_scenario_15 *)ldv_xmalloc(16UL);
    
#line 2013 
    cf_arg_15->arg0 = arg0;
    
#line 2014 
    ret = pthread_create(& ldv_thread_15,(pthread_attr_t const *)0,& ldv_character_driver_scenario_15,(void *)cf_arg_15);
    
#line 2015 
    __VERIFIER_assume(ret == 0);
    
#line 2016 
    goto ldv_45843;
    default: 
#line 2018 
    ;
    
#line 2018 
    __VERIFIER_assume(0);
  }
  ldv_45843: 
#line 2019 
  ;
  
#line 2020 
  return;
}


#line 2024  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 2027 
  struct pci_driver *ldv_8_pci_driver = ldv_emg_alias_cxgb4vf_driver_2;
  
#line 2030 
  ldv_8_pci_driver = arg0;
  
#line 2034 
  ldv_dispatch_deregister_8_1(ldv_8_pci_driver);
  
#line 2038 
  goto return_label;
  return_label: 
#line 2040 
                return;
}


#line 2045  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_7_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_7 *cf_arg_25;
  int tmp;
  
#line 2048 
  tmp = ldv_undef_int();
  
#line 2048 
  switch (tmp) {
    case 0: 
#line 2049 
    ;
    
#line 2050 
    ret = pthread_join(ldv_thread_25,(void **)0);
    
#line 2051 
    __VERIFIER_assume(ret == 0);
    
#line 2052 
    goto ldv_45858;
    default: 
#line 2054 
    ;
    
#line 2054 
    __VERIFIER_assume(0);
  }
  ldv_45858: 
#line 2055 
  ;
  
#line 2056 
  return;
}


#line 2060  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_register_3_3(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_20 *cf_arg_20;
  int tmp;
  
#line 2063 
  tmp = ldv_undef_int();
  
#line 2063 
  switch (tmp) {
    case 0: 
#line 2064 
    ;
    
#line 2065 
    cf_arg_20 = (struct ldv_struct_timer_scenario_20 *)ldv_xmalloc(16UL);
    
#line 2066 
    cf_arg_20->arg0 = arg0;
    
#line 2067 
    ret = pthread_create(& ldv_thread_20,(pthread_attr_t const *)0,& ldv_timer_scenario_20,(void *)cf_arg_20);
    
#line 2068 
    __VERIFIER_assume(ret == 0);
    
#line 2069 
    goto ldv_45866;
    default: 
#line 2071 
    ;
    
#line 2071 
    __VERIFIER_assume(0);
  }
  ldv_45866: 
#line 2072 
  ;
  
#line 2073 
  return;
}


#line 2077  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 2084 
  ldv_1_ret = ldv_emg_cxgb4vf_module_init();
  
#line 2085 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 2088 
  tmp = ldv_undef_int();
  
#line 2088 
  if (tmp != 0) {
    
#line 2090 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 2094 
    __retres = (void *)0;
    
#line 2094 
    goto return_label;
  }
  else {
    
#line 2098 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 2103 
    ldv_emg_cxgb4vf_module_exit();
    
#line 2107 
    __retres = (void *)0;
    
#line 2107 
    goto return_label;
  }
  
#line 2110 
  __retres = (void *)0;
  return_label: 
#line 2110 
                return __retres;
}


#line 2115  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_5_netdev;
  
#line 2121 
  ldv_5_netdev = arg0;
  
#line 2126 
  ldv_emg_wrapper_cxgb4vf_stop_2(ldv_5_netdev);
  
#line 2130 
  ldv_dispatch_deregister_5_1(ldv_5_netdev);
  
#line 2134 
  goto return_label;
  return_label: 
#line 2136 
                return;
}


#line 2141  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_7_line;
  
#line 2147 
  ldv_7_line = (int)arg0;
  
#line 2151 
  ldv_dispatch_irq_deregister_7_1(ldv_7_line);
  
#line 2155 
  goto return_label;
  return_label: 
#line 2157 
                return;
}


#line 2162  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_deregister_12_1(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_20 *cf_arg_20;
  int tmp;
  
#line 2165 
  tmp = ldv_undef_int();
  
#line 2165 
  switch (tmp) {
    case 0: 
#line 2166 
    ;
    
#line 2167 
    ret = pthread_join(ldv_thread_20,(void **)0);
    
#line 2168 
    __VERIFIER_assume(ret == 0);
    
#line 2169 
    goto ldv_45887;
    default: 
#line 2171 
    ;
    
#line 2171 
    __VERIFIER_assume(0);
  }
  ldv_45887: 
#line 2172 
  ;
  
#line 2173 
  return;
}


#line 2177  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_timer_scenario_20(void *arg0)
{
  void *__retres;
  struct timer_list *ldv_20_container;
  
#line 2182 
  struct ldv_struct_timer_scenario_20 *data = (struct ldv_struct_timer_scenario_20 *)arg0;
  
#line 2187 
  if (data != (struct ldv_struct_timer_scenario_20 *)0) {
    
#line 2188 
    ldv_20_container = data->arg0;
    
#line 2189 
    ldv_free((void *)data);
  }
  else ;
  
#line 2194 
  if (ldv_20_container->function != (void (*)(unsigned long ))0) {
    
#line 2196 
    ldv_switch_to_interrupt_context();
    
#line 2198 
    (*(ldv_20_container->function))(ldv_20_container->data);
    
#line 2200 
    ldv_switch_to_process_context();
  }
  else ;
  
#line 2209 
  __retres = (void *)0;
  
#line 2209 
  goto return_label;
  
#line 2211 
  __retres = (void *)0;
  return_label: 
#line 2211 
                return __retres;
}


#line 2216  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_10_1(struct seq_file *arg0, struct seq_operations *arg1)
{
  int ret;
  struct ldv_struct_traverse_kernel_items_scenario_19 *cf_arg_19;
  struct ldv_struct_traverse_kernel_items_scenario_19 *cf_arg_22;
  struct ldv_struct_traverse_kernel_items_scenario_19 *cf_arg_23;
  int tmp;
  
#line 2221 
  tmp = ldv_undef_int();
  
#line 2221 
  switch (tmp) {
    case 0: 
#line 2222 
    ;
    
#line 2223 
    cf_arg_19 = (struct ldv_struct_traverse_kernel_items_scenario_19 *)ldv_xmalloc(24UL);
    
#line 2224 
    cf_arg_19->arg0 = arg0;
    
#line 2225 
    cf_arg_19->arg1 = arg1;
    
#line 2226 
    ret = pthread_create(& ldv_thread_19,(pthread_attr_t const *)0,& ldv_traverse_kernel_items_scenario_19,(void *)cf_arg_19);
    
#line 2227 
    __VERIFIER_assume(ret == 0);
    
#line 2228 
    goto ldv_45903;
    case 1: 
#line 2230 
    ;
    
#line 2231 
    cf_arg_22 = (struct ldv_struct_traverse_kernel_items_scenario_19 *)ldv_xmalloc(24UL);
    
#line 2232 
    cf_arg_22->arg0 = arg0;
    
#line 2233 
    cf_arg_22->arg1 = arg1;
    
#line 2234 
    ret = pthread_create(& ldv_thread_22,(pthread_attr_t const *)0,& ldv_traverse_kernel_items_scenario_22,(void *)cf_arg_22);
    
#line 2235 
    __VERIFIER_assume(ret == 0);
    
#line 2236 
    goto ldv_45903;
    case 2: 
#line 2238 
    ;
    
#line 2239 
    cf_arg_23 = (struct ldv_struct_traverse_kernel_items_scenario_19 *)ldv_xmalloc(24UL);
    
#line 2240 
    cf_arg_23->arg0 = arg0;
    
#line 2241 
    cf_arg_23->arg1 = arg1;
    
#line 2242 
    ret = pthread_create(& ldv_thread_23,(pthread_attr_t const *)0,& ldv_traverse_kernel_items_scenario_23,(void *)cf_arg_23);
    
#line 2243 
    __VERIFIER_assume(ret == 0);
    
#line 2244 
    goto ldv_45903;
    default: 
#line 2246 
    ;
    
#line 2246 
    __VERIFIER_assume(0);
  }
  ldv_45903: 
#line 2247 
  ;
  
#line 2248 
  return;
}


#line 2252  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_18(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_18_resource_1;
  struct pci_device_id *ldv_18_ldv_param_1_2;
  struct pm_message ldv_18_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 2257 
  struct pci_driver *ldv_18_container = ldv_emg_alias_cxgb4vf_driver_2;
  
#line 2258 
  int ldv_18_ret = ldv_undef_int();
  
#line 2261 
  struct ldv_struct_pci_scenario_18 *data = (struct ldv_struct_pci_scenario_18 *)arg0;
  
#line 2265 
  ldv_18_ret = ldv_undef_int();
  
#line 2268 
  if (data != (struct ldv_struct_pci_scenario_18 *)0) {
    
#line 2269 
    ldv_18_container = data->arg0;
    
#line 2270 
    ldv_free((void *)data);
  }
  else ;
  
#line 2281 
  goto ldv_main_18;
  
#line 2283 
  __retres = (void *)0;
  
#line 2283 
  goto return_label;
  ldv_main_18: 
#line 2286 
  ;
  
#line 2289 
  tmp_2 = ldv_undef_int();
  
#line 2289 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 2291 
    ldv_18_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 2296 
    ldv_pre_probe();
    
#line 2298 
    ldv_18_ret = ldv_emg_wrapper_cxgb4vf_pci_probe_3(ldv_18_resource_1,ldv_18_ldv_param_1_2);
    
#line 2300 
    ldv_18_ret = ldv_post_probe(ldv_18_ret);
    
#line 2304 
    ldv_free((void *)ldv_18_ldv_param_1_2);
    
#line 2307 
    tmp_1 = ldv_undef_int();
    
#line 2307 
    if (tmp_1 != 0) {
      
#line 2309 
      __VERIFIER_assume(ldv_18_ret == 0);
      
#line 2316 
      goto ldv_call_18;
    }
    else {
      
#line 2320 
      __VERIFIER_assume(ldv_18_ret != 0);
      
#line 2327 
      goto ldv_main_18;
    }
  }
  else {
    
#line 2339 
    __retres = (void *)0;
    
#line 2339 
    goto return_label;
  }
  
#line 2342 
  __retres = (void *)0;
  
#line 2342 
  goto return_label;
  ldv_call_18: 
#line 2345 
  ;
  
#line 2348 
  tmp_3 = ldv_undef_int();
  
#line 2348 
  switch (tmp_3) {
    case 1: 
#line 2349 
    ;
    
#line 2358 
    goto ldv_call_18;
    case 2: 
#line 2361 
    ;
    
#line 2363 
    if (ldv_18_container->suspend != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 2365 
      ldv_18_ret = (*(ldv_18_container->suspend))(ldv_18_resource_1,ldv_18_resource_0);
      
#line 2367 
      ldv_18_ret = ldv_filter_err_code(ldv_18_ret);
    }
    else 
#line 2369 
         ldv_18_ret = ldv_undef_int();
    
#line 2374 
    if (ldv_18_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 2376 
      ldv_18_ret = (*(ldv_18_container->suspend_late))(ldv_18_resource_1,ldv_18_resource_0);
      
#line 2378 
      ldv_18_ret = ldv_filter_err_code(ldv_18_ret);
    }
    else 
#line 2380 
         ldv_18_ret = ldv_undef_int();
    
#line 2385 
    if (ldv_18_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 2387 
      (*(ldv_18_container->resume_early))(ldv_18_resource_1); else ;
    
#line 2392 
    if (ldv_18_container->resume != (int (*)(struct pci_dev *))0) 
#line 2394 
                                                                  (*(ldv_18_container->resume))(ldv_18_resource_1); else ;
    
#line 2402 
    goto ldv_call_18;
    case 3: 
#line 2405 
    ;
    
#line 2408 
    ldv_emg_wrapper_cxgb4vf_pci_shutdown_2(ldv_18_resource_1);
    
#line 2413 
    ldv_emg_wrapper_cxgb4vf_pci_remove_4(ldv_18_resource_1);
    
#line 2420 
    goto ldv_main_18;
    default: 
#line 2423 
    ;
    
#line 2423 
    __VERIFIER_assume(0);
  }
  
#line 2426 
  __retres = (void *)0;
  return_label: 
#line 2426 
                return __retres;
}


#line 2431  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_24(void *arg0)
{
  void *__retres;
  struct file *ldv_24_resource_1;
  int ldv_24_ldv_param_2_3;
  long long ldv_24_ldv_param_1_2;
  char *ldv_24_ldv_param_1_4;
  struct inode *ldv_24_resource_0;
  unsigned long ldv_24_size_cnt;
  long long *ldv_24_ldv_param_3_5;
  char *ldv_24_ldv_param_1_6;
  long long *ldv_24_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 2442 
  struct file_operations *ldv_24_container = ldv_emg_alias_sge_qstats_proc_fops_2;
  
#line 2443 
  int ldv_24_ret = ldv_undef_int();
  
#line 2446 
  struct ldv_struct_character_driver_scenario_15 *data = (struct ldv_struct_character_driver_scenario_15 *)arg0;
  
#line 2450 
  ldv_24_ret = ldv_undef_int();
  
#line 2453 
  if (data != (struct ldv_struct_character_driver_scenario_15 *)0) {
    
#line 2454 
    ldv_24_container = data->arg0;
    
#line 2455 
    ldv_free((void *)data);
  }
  else ;
  
#line 2460 
  ldv_24_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 2461 
  tmp_1 = ldv_undef_int();
  
#line 2461 
  ldv_24_size_cnt = (unsigned long)tmp_1;
  
#line 2468 
  goto ldv_main_24;
  
#line 2470 
  __retres = (void *)0;
  
#line 2470 
  goto return_label;
  ldv_main_24: 
#line 2473 
  ;
  
#line 2476 
  tmp_3 = ldv_undef_int();
  
#line 2476 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 2479 
    ldv_24_ret = ldv_emg_wrapper_sge_qstats_open_3(ldv_24_resource_0,ldv_24_resource_1);
    
#line 2481 
    ldv_24_ret = ldv_filter_err_code(ldv_24_ret);
    
#line 2484 
    tmp_2 = ldv_undef_int();
    
#line 2484 
    if (tmp_2 != 0) {
      
#line 2486 
      __VERIFIER_assume(ldv_24_ret == 0);
      
#line 2493 
      goto ldv_call_24;
    }
    else {
      
#line 2497 
      __VERIFIER_assume(ldv_24_ret != 0);
      
#line 2504 
      goto ldv_main_24;
    }
  }
  else {
    
#line 2509 
    ldv_free((void *)ldv_24_resource_0);
    
#line 2517 
    __retres = (void *)0;
    
#line 2517 
    goto return_label;
  }
  
#line 2520 
  __retres = (void *)0;
  
#line 2520 
  goto return_label;
  ldv_call_24: 
#line 2523 
  ;
  
#line 2526 
  tmp_4 = ldv_undef_int();
  
#line 2526 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 2527 
    ;
    
#line 2529 
    ldv_24_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 2530 
    ldv_24_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 2534 
    if (ldv_24_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 2540 
      __VERIFIER_assume(ldv_24_size_cnt <= 2147479552UL);
      
#line 2542 
      (*(ldv_24_container->write))(ldv_24_resource_1,(char const *)ldv_24_ldv_param_1_6,ldv_24_size_cnt,ldv_24_ldv_param_3_7);
    }
    else ;
    
#line 2547 
    ldv_free((void *)ldv_24_ldv_param_3_7);
    
#line 2548 
    ldv_free((void *)ldv_24_ldv_param_1_6);
    
#line 2555 
    goto ldv_call_24;
    case 2: 
#line 2558 
    ;
    
#line 2561 
    (*ldv_emg_alias_seq_release_5)(ldv_24_resource_0,ldv_24_resource_1);
    
#line 2568 
    goto ldv_main_24;
    case 3: 
#line 2571 
    ;
    
#line 2575 
    tmp_9 = ldv_undef_int();
    
#line 2575 
    if (tmp_9 != 0) 
#line 2578 
                    (*ldv_emg_alias_seq_lseek_3)(ldv_24_resource_1,ldv_24_ldv_param_1_2,ldv_24_ldv_param_2_3);
    else {
      
#line 2584 
      ldv_24_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 2585 
      ldv_24_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 2590 
      (*ldv_emg_alias_seq_read_4)(ldv_24_resource_1,ldv_24_ldv_param_1_4,ldv_24_size_cnt,ldv_24_ldv_param_3_5);
      
#line 2594 
      ldv_free((void *)ldv_24_ldv_param_1_4);
      
#line 2595 
      ldv_free((void *)ldv_24_ldv_param_3_5);
    }
    
#line 2599 
    goto ldv_45942;
    default: 
#line 2601 
    ;
    
#line 2601 
    __VERIFIER_assume(0);
  }
  ldv_45942: 
#line 2610 
  ;
  
#line 2610 
  goto ldv_call_24;
  
#line 2612 
  __retres = (void *)0;
  return_label: 
#line 2612 
                return __retres;
}


#line 2617  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 2623 
  ldv_2_netdev = arg0;
  
#line 2624 
  ldv_free((void *)ldv_2_netdev);
  
#line 2628 
  goto return_label;
  return_label: 
#line 2630 
                return;
}


#line 2635  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_traverse_kernel_items_scenario_19(void *arg0)
{
  void *__retres;
  void *ldv_19_ldv_param_1_2;
  long long *ldv_19_index;
  struct seq_file *ldv_19_seq_file;
  void *ldv_19_ldv_param_1_3;
  void *ldv_19_ldv_param_1_4;
  int tmp_2;
  int tmp_6;
  
#line 2641 
  struct seq_operations *ldv_19_ops = ldv_emg_alias_sge_qinfo_seq_ops_6;
  
#line 2642 
  int ldv_19_show_ret = ldv_undef_int();
  
#line 2645 
  void *ldv_19_ret = ldv_undef_ptr();
  
#line 2647 
  struct ldv_struct_traverse_kernel_items_scenario_19 *data = (struct ldv_struct_traverse_kernel_items_scenario_19 *)arg0;
  
#line 2651 
  ldv_19_show_ret = ldv_undef_int();
  
#line 2654 
  if (data != (struct ldv_struct_traverse_kernel_items_scenario_19 *)0) {
    
#line 2655 
    ldv_19_seq_file = data->arg0;
    
#line 2656 
    ldv_19_ops = data->arg1;
    
#line 2657 
    ldv_free((void *)data);
  }
  else ;
  
#line 2662 
  ldv_19_index = (long long *)ldv_xmalloc_unknown_size(0UL);
  
#line 2669 
  goto ldv_outer_loop_19;
  
#line 2671 
  __retres = (void *)0;
  
#line 2671 
  goto return_label;
  ldv_outer_loop_19: 
#line 2674 
  ;
  
#line 2677 
  tmp_2 = ldv_undef_int();
  
#line 2677 
  if (tmp_2 != 0) {
    
#line 2680 
    *ldv_19_index = 0LL;
    
#line 2682 
    ldv_19_ret = ldv_emg_wrapper_sge_queue_start_2(ldv_19_seq_file,ldv_19_index);
    
#line 2689 
    goto ldv_inner_loop_19;
  }
  else {
    
#line 2693 
    ldv_free((void *)ldv_19_index);
    
#line 2701 
    __retres = (void *)0;
    
#line 2701 
    goto return_label;
  }
  
#line 2704 
  __retres = (void *)0;
  
#line 2704 
  goto return_label;
  ldv_inner_loop_19: 
#line 2707 
  ;
  
#line 2710 
  tmp_6 = ldv_undef_int();
  
#line 2710 
  if (tmp_6 != 0) {
    long tmp_3;
    int tmp_4;
    
#line 2712 
    tmp_3 = ldv_is_err_or_null((void const *)ldv_19_ret);
    
#line 2712 
    __VERIFIER_assume(tmp_3 == 0L);
    
#line 2716 
    ldv_19_ldv_param_1_3 = ldv_xmalloc_unknown_size(0UL);
    
#line 2721 
    ldv_19_show_ret = ldv_emg_wrapper_sge_qinfo_show_4(ldv_19_seq_file,ldv_19_ldv_param_1_3);
    
#line 2725 
    ldv_free(ldv_19_ldv_param_1_3);
    
#line 2728 
    tmp_4 = ldv_undef_int();
    
#line 2728 
    if (tmp_4 != 0) {
      
#line 2730 
      __VERIFIER_assume(ldv_19_show_ret >= 0);
      
#line 2734 
      ldv_19_ldv_param_1_2 = ldv_xmalloc_unknown_size(0UL);
      
#line 2739 
      ldv_19_ret = ldv_emg_wrapper_sge_queue_next_3(ldv_19_seq_file,ldv_19_ldv_param_1_2,ldv_19_index);
      
#line 2743 
      ldv_free(ldv_19_ldv_param_1_2);
      
#line 2750 
      goto ldv_inner_loop_19;
    }
    else {
      
#line 2754 
      ldv_19_ldv_param_1_4 = ldv_xmalloc_unknown_size(0UL);
      
#line 2759 
      ldv_19_seq_file->index = *ldv_19_index;
      
#line 2761 
      ldv_emg_wrapper_sge_queue_stop_5(ldv_19_seq_file,ldv_19_ldv_param_1_4);
      
#line 2763 
      ldv_19_seq_file->index = *ldv_19_index;
      
#line 2767 
      ldv_free(ldv_19_ldv_param_1_4);
      
#line 2774 
      goto ldv_outer_loop_19;
    }
  }
  else {
    long tmp_5;
    
#line 2779 
    tmp_5 = ldv_is_err_or_null((void const *)ldv_19_ret);
    
#line 2779 
    __VERIFIER_assume((int)tmp_5);
    
#line 2783 
    ldv_19_ldv_param_1_4 = ldv_xmalloc_unknown_size(0UL);
    
#line 2788 
    ldv_19_seq_file->index = *ldv_19_index;
    
#line 2790 
    ldv_emg_wrapper_sge_queue_stop_5(ldv_19_seq_file,ldv_19_ldv_param_1_4);
    
#line 2792 
    ldv_19_seq_file->index = *ldv_19_index;
    
#line 2796 
    ldv_free(ldv_19_ldv_param_1_4);
    
#line 2803 
    goto ldv_outer_loop_19;
  }
  
#line 2806 
  __retres = (void *)0;
  return_label: 
#line 2806 
                return __retres;
}


#line 2811  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_14_line;
  void *ldv_14_data;
  enum irqreturn (*ldv_14_thread)(int , void *);
  int tmp_0;
  
#line 2816 
  enum irqreturn (*ldv_14_callback)(int , void *) = & t4vf_sge_intr_msix;
  
#line 2821 
  tmp_0 = ldv_undef_int();
  
#line 2821 
  if (tmp_0 != 0) {
    
#line 2823 
    ldv_14_line = (int)arg0;
    
#line 2824 
    ldv_14_callback = arg1;
    
#line 2825 
    ldv_14_thread = (enum irqreturn (*)(int , void *))0;
    
#line 2826 
    ldv_14_data = arg4;
    
#line 2830 
    ldv_dispatch_irq_register_14_3(ldv_14_line,ldv_14_callback,ldv_14_thread,ldv_14_data);
    
#line 2834 
    __retres = 0;
    
#line 2834 
    goto return_label;
  }
  else {
    int tmp;
    
#line 2841 
    tmp = ldv_undef_int_negative();
    
#line 2841 
    __retres = tmp;
    
#line 2841 
    goto return_label;
  }
  return_label: 
#line 2821 
                return __retres;
}


