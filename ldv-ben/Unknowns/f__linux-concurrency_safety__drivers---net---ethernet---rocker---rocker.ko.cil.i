/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __le16;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/stat.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_46 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_46 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_47 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_47 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct vm_area_struct;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue wait_queue_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue {
   unsigned int flags ;
   void *private ;
   int (*func)(wait_queue_t *, unsigned int , int , void *) ;
   struct list_head task_list ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_48 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_48 nodemask_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 193 
struct rw_semaphore;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 239 
enum hrtimer_restart;

#line 240  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_50 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_49 {
   struct __anonstruct_50 __anonCompField___anonunion_49_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_49 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11870 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_115 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_115 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmod.h"
struct cred;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/elf.h"
struct inode;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_148 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_149 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_147 {
   struct __anonstruct_148 __anonCompField___anonunion_147_33 ;
   struct __anonstruct_149 __anonCompField___anonunion_147_34 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_147 __anonCompField_uprobe_task_35 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_150 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_152 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_156 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_155 {
   atomic_t _mapcount ;
   struct __anonstruct_156 __anonCompField___anonunion_155_38 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_154 {
   union __anonunion_155 __anonCompField___anonstruct_154_39 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_153 {
   unsigned long counters ;
   struct __anonstruct_154 __anonCompField___anonunion_153_40 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_151 {
   union __anonunion_152 __anonCompField___anonstruct_151_37 ;
   union __anonunion_153 __anonCompField___anonstruct_151_41 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_158 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_159 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_157 {
   struct list_head lru ;
   struct __anonstruct_158 __anonCompField___anonunion_157_43 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_159 __anonCompField___anonunion_157_44 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_160 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_150 __anonCompField_page_36 ;
   struct __anonstruct_151 __anonCompField_page_42 ;
   union __anonunion_157 __anonCompField_page_45 ;
   union __anonunion_160 __anonCompField_page_46 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_161 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_161 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
union __anonunion_166 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_166 __anonCompField_idr_layer_47 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct dentry;

#line 186 
struct iattr;

#line 187 
struct super_block;

#line 188 
struct file_system_type;

#line 189 
struct kernfs_open_node;

#line 190 
struct kernfs_iattrs;

#line 213 
struct kernfs_root;

#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_171 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_171 __anonCompField_kernfs_node_48 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct sock;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct bin_attribute;

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_172 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_172 __anonCompField_kernel_param_49 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 74 
struct exception_table_entry;

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_183 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_183 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_185 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_186 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_187 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_188 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_190 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_189 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_190 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_191 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_192 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_184 {
   int _pad[28U] ;
   struct __anonstruct__kill_185 _kill ;
   struct __anonstruct__timer_186 _timer ;
   struct __anonstruct__rt_187 _rt ;
   struct __anonstruct__sigchld_188 _sigchld ;
   struct __anonstruct__sigfault_189 _sigfault ;
   struct __anonstruct__sigpoll_191 _sigpoll ;
   struct __anonstruct__sigsys_192 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_184 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_199 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_200 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_202 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_201 {
   struct keyring_index_key index_key ;
   struct __anonstruct_202 __anonCompField___anonunion_201_52 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_203 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_205 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_204 {
   union __anonunion_payload_205 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_199 __anonCompField_key_50 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_200 __anonCompField_key_51 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_201 __anonCompField_key_53 ;
   union __anonunion_type_data_203 type_data ;
   union __anonunion_204 __anonCompField_key_54 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct pipe_inode_info;

#line 1173 
struct uts_namespace;

#line 1174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct proc_dir_entry;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_220 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_220 __anonCompField_pci_dev_58 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 1249 
struct kvec;

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmapool.h"
struct msix_entry {
   u32 vector ;
   u16 entry ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pci_64.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 1911  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/prefetch.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_229 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_229 __anonCompField_iov_iter_66 ;
   unsigned long nr_segs ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_231 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_231 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_232 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_232 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_233 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_233 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_234 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_234 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_235 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_235 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_236 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_236 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_237 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_237 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_238 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_238 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_239 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_240 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_239 ifr_ifrn ;
   union __anonunion_ifr_ifru_240 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_245 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_244 {
   struct __anonstruct_245 __anonCompField___anonunion_244_67 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_244 __anonCompField_lockref_68 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_247 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_246 {
   struct __anonstruct_247 __anonCompField___anonunion_246_69 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_246 __anonCompField_qstr_70 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_248 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_248 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_252 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_251 {
   struct __anonstruct_252 __anonCompField___anonunion_251_71 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_251 __anonCompField_radix_tree_node_72 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct poll_table_struct;

#line 63 
struct kstatfs;

#line 64 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_256 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_256 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_257 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_257 __anonCompField_kqid_74 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_260 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_261 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_262 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_260 __anonCompField_inode_75 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_261 __anonCompField_inode_76 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_262 __anonCompField_inode_77 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_263 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_263 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 947 
struct net;

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19 
struct fasync_struct;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_265 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_264 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_265 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_264 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 715 
enum ldv_27111 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_27111 socket_state;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_280 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_280 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_27512 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_285 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_286 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_27512 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_285 __anonCompField_nf_bridge_info_81 ;
   union __anonunion_286 __anonCompField_nf_bridge_info_82 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 215 
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_287 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_287 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_289 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_288 {
   u64 v64 ;
   struct __anonstruct_289 __anonCompField___anonunion_288_83 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_288 __anonCompField_skb_mstamp_84 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_292 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_291 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_292 __anonCompField___anonstruct_291_85 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_290 {
   struct __anonstruct_291 __anonCompField___anonunion_290_86 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_294 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_293 {
   __wsum csum ;
   struct __anonstruct_294 __anonCompField___anonunion_293_88 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_295 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_296 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_297 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_290 __anonCompField_sk_buff_87 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_293 __anonCompField_sk_buff_89 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_295 __anonCompField_sk_buff_90 ;
   __u32 secmark ;
   union __anonunion_296 __anonCompField_sk_buff_91 ;
   union __anonunion_297 __anonCompField_sk_buff_92 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 767 
struct rtable;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 282  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct flowi_common {
   int flowic_oif ;
   int flowic_iif ;
   __u32 flowic_mark ;
   __u8 flowic_tos ;
   __u8 flowic_scope ;
   __u8 flowic_proto ;
   __u8 flowic_flags ;
   __u32 flowic_secid ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct __anonstruct_ports_300 {
   __be16 dport ;
   __be16 sport ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct __anonstruct_icmpt_301 {
   __u8 type ;
   __u8 code ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct __anonstruct_dnports_302 {
   __le16 dport ;
   __le16 sport ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct __anonstruct_mht_303 {
   __u8 type ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
union flowi_uli {
   struct __anonstruct_ports_300 ports ;
   struct __anonstruct_icmpt_301 icmpt ;
   struct __anonstruct_dnports_302 dnports ;
   __be32 spi ;
   __be32 gre_key ;
   struct __anonstruct_mht_303 mht ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct flowi4 {
   struct flowi_common __fl_common ;
   __be32 saddr ;
   __be32 daddr ;
   union flowi_uli uli ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct flowi6 {
   struct flowi_common __fl_common ;
   struct in6_addr daddr ;
   struct in6_addr saddr ;
   __be32 flowlabel ;
   union flowi_uli uli ;
};

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct flowidn {
   struct flowi_common __fl_common ;
   __le16 daddr ;
   __le16 saddr ;
   union flowi_uli uli ;
};

#line 150  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
union __anonunion_u_304 {
   struct flowi_common __fl_common ;
   struct flowi4 ip4 ;
   struct flowi6 ip6 ;
   struct flowidn dn ;
};

#line 150  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct flowi {
   union __anonunion_u_304 u ;
};

#line 235 
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib_device {
   atomic_long_t mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib_device {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_306 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_306 possible_net_t;

#line 376 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_29364 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_29364 phy_interface_t;

#line 126 
enum ldv_29417 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_29417 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct xfrm_policy;

#line 98 
struct xfrm_state;

#line 114 
struct request_sock;

#line 1628 
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_31127 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_31128 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_316 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_317 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_318 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_316 adj_list ;
   struct __anonstruct_all_adj_list_317 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_31127 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_31128 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_318 __anonCompField_net_device_95 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 2086  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_notifier_info {
   struct net_device *dev ;
};

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
struct ipv4_devconf {
   void *sysctl ;
   int data[29U] ;
   unsigned long state[1U] ;
};

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
struct in_ifaddr;

#line 20 
struct ip_mc_list;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
struct in_device {
   struct net_device *dev ;
   atomic_t refcnt ;
   int dead ;
   struct in_ifaddr *ifa_list ;
   struct ip_mc_list *mc_list ;
   struct ip_mc_list **mc_hash ;
   int mc_count ;
   spinlock_t mc_tomb_lock ;
   struct ip_mc_list *mc_tomb ;
   unsigned long mr_v1_seen ;
   unsigned long mr_v2_seen ;
   unsigned long mr_maxdelay ;
   unsigned char mr_qrv ;
   unsigned char mr_gq_running ;
   unsigned char mr_ifc_count ;
   struct timer_list mr_gq_timer ;
   struct timer_list mr_ifc_timer ;
   struct neigh_parms *arp_parms ;
   struct ipv4_devconf cnf ;
   struct callback_head callback_head ;
};

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
struct in_ifaddr {
   struct hlist_node hash ;
   struct in_ifaddr *ifa_next ;
   struct in_device *ifa_dev ;
   struct callback_head callback_head ;
   __be32 ifa_local ;
   __be32 ifa_address ;
   __be32 ifa_mask ;
   __be32 ifa_broadcast ;
   unsigned char ifa_scope ;
   unsigned char ifa_prefixlen ;
   __u32 ifa_flags ;
   char ifa_label[16U] ;
   __u32 ifa_valid_lft ;
   __u32 ifa_preferred_lft ;
   unsigned long ifa_cstamp ;
   unsigned long ifa_tstamp ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ctype.h"
enum switchdev_trans {
    SWITCHDEV_TRANS_NONE = 0,
    SWITCHDEV_TRANS_PREPARE = 1,
    SWITCHDEV_TRANS_ABORT = 2,
    SWITCHDEV_TRANS_COMMIT = 3
};

#line 76 
enum switchdev_attr_id {
    SWITCHDEV_ATTR_UNDEFINED = 0,
    SWITCHDEV_ATTR_PORT_PARENT_ID = 1,
    SWITCHDEV_ATTR_PORT_STP_STATE = 2,
    SWITCHDEV_ATTR_PORT_BRIDGE_FLAGS = 3
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ctype.h"
union __anonunion_u_336 {
   struct netdev_phys_item_id ppid ;
   u8 stp_state ;
   unsigned long brport_flags ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ctype.h"
struct switchdev_attr {
   enum switchdev_attr_id id ;
   enum switchdev_trans trans ;
   u32 flags ;
   union __anonunion_u_336 u ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/switchdev.h"
struct fib_info;

#line 44 
enum switchdev_obj_id {
    SWITCHDEV_OBJ_UNDEFINED = 0,
    SWITCHDEV_OBJ_PORT_VLAN = 1,
    SWITCHDEV_OBJ_IPV4_FIB = 2,
    SWITCHDEV_OBJ_PORT_FDB = 3
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/switchdev.h"
struct switchdev_obj_vlan {
   u16 flags ;
   u16 vid_begin ;
   u16 vid_end ;
};

#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/switchdev.h"
struct switchdev_obj_ipv4_fib {
   u32 dst ;
   int dst_len ;
   struct fib_info *fi ;
   u8 tos ;
   u8 type ;
   u32 nlflags ;
   u32 tb_id ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/switchdev.h"
struct switchdev_obj_fdb {
   unsigned char const *addr ;
   u16 vid ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/switchdev.h"
union __anonunion_u_337 {
   struct switchdev_obj_vlan vlan ;
   struct switchdev_obj_ipv4_fib ipv4_fib ;
   struct switchdev_obj_fdb fdb ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/switchdev.h"
struct switchdev_obj {
   enum switchdev_obj_id id ;
   enum switchdev_trans trans ;
   int (*cb)(struct net_device *, struct switchdev_obj *) ;
   union __anonunion_u_337 u ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/switchdev.h"
struct switchdev_ops {
   int (*switchdev_port_attr_get)(struct net_device *, struct switchdev_attr *) ;
   int (*switchdev_port_attr_set)(struct net_device *, struct switchdev_attr *) ;
   int (*switchdev_port_obj_add)(struct net_device *, struct switchdev_obj *) ;
   int (*switchdev_port_obj_del)(struct net_device *, struct switchdev_obj *) ;
   int (*switchdev_port_obj_dump)(struct net_device *, struct switchdev_obj *) ;
};

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/switchdev.h"
struct switchdev_notifier_info {
   struct net_device *dev ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/switchdev.h"
struct switchdev_notifier_fdb_info {
   struct switchdev_notifier_info info ;
   unsigned char const *addr ;
   u16 vid ;
};

#line 178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/switchdev.h"
struct nla_policy {
   u16 type ;
   u16 len ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char const *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   int maxtype ;
   struct nla_policy const *policy ;
   int (*validate)(struct nlattr **, struct nlattr **) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device const *) ;
   int (*fill_info)(struct sk_buff *, struct net_device const *) ;
   size_t (*get_xstats_size)(struct net_device const *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device const *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   int slave_maxtype ;
   struct nla_policy const *slave_policy ;
   int (*slave_validate)(struct nlattr **, struct nlattr **) ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **) ;
   size_t (*get_slave_size)(struct net_device const *, struct net_device const *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device const *, struct net_device const *) ;
   struct net *(*get_link_net)(struct net_device const *) ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct fib_rule_hdr {
   __u8 family ;
   __u8 dst_len ;
   __u8 src_len ;
   __u8 tos ;
   __u8 table ;
   __u8 res1 ;
   __u8 res2 ;
   __u8 action ;
   __u32 flags ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fib_rules.h"
struct fib_rule {
   struct list_head list ;
   int iifindex ;
   int oifindex ;
   u32 mark ;
   u32 mark_mask ;
   u32 flags ;
   u32 table ;
   u8 action ;
   u32 target ;
   struct fib_rule *ctarget ;
   struct net *fr_net ;
   atomic_t refcnt ;
   u32 pref ;
   int suppress_ifgroup ;
   int suppress_prefixlen ;
   char iifname[16U] ;
   char oifname[16U] ;
   struct callback_head rcu ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/fib_rules.h"
struct fib_lookup_arg {
   void *lookup_ptr ;
   void *result ;
   struct fib_rule *rule ;
   int flags ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/fib_rules.h"
struct fib_rules_ops {
   int family ;
   struct list_head list ;
   int rule_size ;
   int addr_size ;
   int unresolved_rules ;
   int nr_goto_rules ;
   int (*action)(struct fib_rule *, struct flowi *, int , struct fib_lookup_arg *) ;
   bool (*suppress)(struct fib_rule *, struct fib_lookup_arg *) ;
   int (*match)(struct fib_rule *, struct flowi *, int ) ;
   int (*configure)(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *, struct nlattr **) ;
   int (*delete)(struct fib_rule *) ;
   int (*compare)(struct fib_rule *, struct fib_rule_hdr *, struct nlattr **) ;
   int (*fill)(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *) ;
   u32 (*default_pref)(struct fib_rules_ops *) ;
   size_t (*nlmsg_payload)(struct fib_rule *) ;
   void (*flush_cache)(struct fib_rules_ops *) ;
   int nlgroup ;
   struct nla_policy const *policy ;
   struct list_head rules_list ;
   struct module *owner ;
   struct net *fro_net ;
   struct callback_head rcu ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_pinfo ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   struct ipv6_stable_secret stable_secret ;
   void *sysctl ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uaccess.h"
struct page_counter {
   atomic_long_t count ;
   unsigned long limit ;
   struct page_counter *parent ;
   unsigned long watermark ;
   unsigned long failcnt ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cacheflush.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/filter.h"
struct bpf_insn {
   __u8 code ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) dst_reg : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/bpf.h"
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4
};

#line 273 
struct bpf_prog_aux;

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
union __anonunion_345 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   bool jited ;
   bool gpl_compatible ;
   u32 len ;
   enum bpf_prog_type type ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(struct sk_buff const *, struct bpf_insn const *) ;
   union __anonunion_345 __anonCompField_bpf_prog_100 ;
};

#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sk_filter {
   atomic_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_nulls.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   unsigned long _key ;
};

#line 187 
struct neigh_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   void (*neigh_cleanup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   atomic_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
};

#line 129 
struct neigh_ops;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   atomic_t refcnt ;
   struct sk_buff_head arp_queue ;
   unsigned int arp_queue_len_bytes ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops const *ops ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 key[0U] ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_table {
   int family ;
   int entry_size ;
   int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void const *, struct net_device const *, __u32 *) ;
   bool (*key_eq)(struct neighbour const *, void const *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};

#line 278  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
union __anonunion___u_348 {
   struct neigh_hash_table *__val ;
   char __c[1U] ;
};

#line 283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
union __anonunion___u_350 {
   struct neighbour *__val ;
   char __c[1U] ;
};

#line 285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
union __anonunion___u_352 {
   struct neighbour *__val ;
   char __c[1U] ;
};

#line 519 
struct dn_route;

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
union __anonunion_353 {
   struct dst_entry *next ;
   struct rtable *rt_next ;
   struct rt6_info *rt6_next ;
   struct dn_route *dn_next ;
};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct dst_entry {
   struct callback_head callback_head ;
   struct dst_entry *child ;
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct dst_entry *path ;
   struct dst_entry *from ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   unsigned short pending_confirm ;
   short error ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   __u32 tclassid ;
   long __pad_to_align_refcnt[2U] ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   union __anonunion_353 __anonCompField_dst_entry_101 ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_socket_lock_t_354 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef struct __anonstruct_socket_lock_t_354 socket_lock_t;

#line 124 
struct proto;

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u32 __portpair;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u64 __addrpair;

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_356 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_355 {
   __addrpair skc_addrpair ;
   struct __anonstruct_356 __anonCompField___anonunion_355_102 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_357 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_359 {
   __be16 skc_dport ;
   __u16 skc_num ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_358 {
   __portpair skc_portpair ;
   struct __anonstruct_359 __anonCompField___anonunion_358_105 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_360 {
   struct hlist_node skc_bind_node ;
   struct hlist_nulls_node skc_portaddr_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_361 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock_common {
   union __anonunion_355 __anonCompField_sock_common_103 ;
   union __anonunion_357 __anonCompField_sock_common_104 ;
   union __anonunion_358 __anonCompField_sock_common_106 ;
   unsigned short skc_family ;
   unsigned char volatile skc_state ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) skc_reuse : 4 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_reuseport : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_ipv6only : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_360 __anonCompField_sock_common_107 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_361 __anonCompField_sock_common_108 ;
   int skc_tx_queue_mapping ;
   atomic_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
};

#line 219 
struct cg_proto;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_sk_backlog_362 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_362 sk_backlog ;
   int sk_forward_alloc ;
   __u32 sk_rxhash ;
   u16 sk_incoming_cpu ;
   __u32 sk_txhash ;
   unsigned int sk_napi_id ;
   unsigned int sk_ll_usec ;
   atomic_t sk_drops ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   struct socket_wq *sk_wq ;
   struct xfrm_policy *sk_policy[2U] ;
   unsigned long sk_flags ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   spinlock_t sk_dst_lock ;
   atomic_t sk_wmem_alloc ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   struct sk_buff_head sk_write_queue ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) sk_shutdown : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_tx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_rx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) sk_userlocks : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) sk_protocol : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) sk_type : 16 ;
   int sk_wmem_queued ;
   gfp_t sk_allocation ;
   u32 sk_pacing_rate ;
   u32 sk_max_pacing_rate ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   u16 sk_gso_max_segs ;
   int sk_rcvlowat ;
   unsigned long sk_lingertime ;
   struct sk_buff_head sk_error_queue ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   __u32 sk_priority ;
   __u32 sk_cgrp_prioidx ;
   struct pid *sk_peer_pid ;
   struct cred const *sk_peer_cred ;
   long sk_rcvtimeo ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u32 sk_tskey ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   struct page_frag sk_frag ;
   struct sk_buff *sk_send_head ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   void *sk_security ;
   __u32 sk_mark ;
   u32 sk_classid ;
   struct cg_proto *sk_cgrp ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
};

#line 914 
struct request_sock_ops;

#line 915 
struct timewait_sock_ops;

#line 916 
struct inet_hashinfo;

#line 917 
struct raw_hashinfo;

#line 932 
struct udp_table;

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_h_365 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
};

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   void (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   void (*clear_sk)(struct sock *, int ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock const *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   int *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   int slab_flags ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_365 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*init_cgroup)(struct mem_cgroup *, struct cgroup_subsys *) ;
   void (*destroy_cgroup)(struct mem_cgroup *) ;
   struct cg_proto *(*proto_cgroup)(struct mem_cgroup *) ;
};

#line 1054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct cg_proto {
   struct page_counter memory_allocated ;
   struct percpu_counter sockets_allocated ;
   int memory_pressure ;
   long sysctl_mem[3U] ;
   unsigned long flags ;
   struct mem_cgroup *memcg ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jhash.h"
struct request_sock_ops {
   int family ;
   int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock const *) ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   struct sock *rsk_listener ;
   u16 mss ;
   u8 num_retrans ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cookie_ts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) num_timeout : 7 ;
   u32 window_clamp ;
   u32 rcv_wnd ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops const *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};

#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_connection_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ip6_sf_list {
   struct ip6_sf_list *sf_next ;
   struct in6_addr sf_addr ;
   unsigned long sf_count[2U] ;
   unsigned char sf_gsresp ;
   unsigned char sf_oldin ;
   unsigned char sf_crcount ;
};

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifmcaddr6 {
   struct in6_addr mca_addr ;
   struct inet6_dev *idev ;
   struct ifmcaddr6 *next ;
   struct ip6_sf_list *mca_sources ;
   struct ip6_sf_list *mca_tomb ;
   unsigned int mca_sfmode ;
   unsigned char mca_crcount ;
   unsigned long mca_sfcount[2U] ;
   struct timer_list mca_timer ;
   unsigned int mca_flags ;
   int mca_users ;
   atomic_t mca_refcnt ;
   spinlock_t mca_lock ;
   unsigned long mca_cstamp ;
   unsigned long mca_tstamp ;
};

#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifacaddr6 {
   struct in6_addr aca_addr ;
   struct inet6_dev *aca_idev ;
   struct rt6_info *aca_rt ;
   struct ifacaddr6 *aca_next ;
   int aca_users ;
   atomic_t aca_refcnt ;
   unsigned long aca_cstamp ;
   unsigned long aca_tstamp ;
};

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ipv6_devstat {
   struct proc_dir_entry *proc_dir_entry ;
   struct ipstats_mib *ipv6 ;
   struct icmpv6_mib_device *icmpv6dev ;
   struct icmpv6msg_mib_device *icmpv6msgdev ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct inet6_dev {
   struct net_device *dev ;
   struct list_head addr_list ;
   struct ifmcaddr6 *mc_list ;
   struct ifmcaddr6 *mc_tomb ;
   spinlock_t mc_lock ;
   unsigned char mc_qrv ;
   unsigned char mc_gq_running ;
   unsigned char mc_ifc_count ;
   unsigned char mc_dad_count ;
   unsigned long mc_v1_seen ;
   unsigned long mc_qi ;
   unsigned long mc_qri ;
   unsigned long mc_maxdelay ;
   struct timer_list mc_gq_timer ;
   struct timer_list mc_ifc_timer ;
   struct timer_list mc_dad_timer ;
   struct ifacaddr6 *ac_list ;
   rwlock_t lock ;
   atomic_t refcnt ;
   __u32 if_flags ;
   int dead ;
   u8 rndid[8U] ;
   struct timer_list regen_timer ;
   struct list_head tempaddr_list ;
   struct in6_addr token ;
   struct neigh_parms *nd_parms ;
   struct ipv6_devconf cnf ;
   struct ipv6_devstat stats ;
   struct timer_list rs_timer ;
   __u8 rs_probes ;
   __u8 addr_gen_mode ;
   unsigned long tstamp ;
   struct callback_head rcu ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
union __anonunion_384 {
   __be32 a4 ;
   __be32 a6[4U] ;
   struct in6_addr in6 ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
struct inetpeer_addr_base {
   union __anonunion_384 __anonCompField_inetpeer_addr_base_110 ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inetpeer_addr {
   struct inetpeer_addr_base addr ;
   __u16 family ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_385 {
   struct list_head gc_list ;
   struct callback_head gc_rcu ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct __anonstruct_387 {
   atomic_t rid ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_386 {
   struct __anonstruct_387 __anonCompField___anonunion_386_112 ;
   struct callback_head rcu ;
   struct inet_peer *gc_next ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer {
   struct inet_peer *avl_left ;
   struct inet_peer *avl_right ;
   struct inetpeer_addr daddr ;
   __u32 avl_height ;
   u32 metrics[16U] ;
   u32 rate_tokens ;
   unsigned long rate_last ;
   union __anonunion_385 __anonCompField_inet_peer_111 ;
   union __anonunion_386 __anonCompField_inet_peer_113 ;
   __u32 dtime ;
   atomic_t refcnt ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer_base {
   struct inet_peer *root ;
   seqlock_t lock ;
   int total ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ip_fib.h"
struct fib_nh_exception {
   struct fib_nh_exception *fnhe_next ;
   int fnhe_genid ;
   __be32 fnhe_daddr ;
   u32 fnhe_pmtu ;
   __be32 fnhe_gw ;
   unsigned long fnhe_expires ;
   struct rtable *fnhe_rth_input ;
   struct rtable *fnhe_rth_output ;
   unsigned long fnhe_stamp ;
};

#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ip_fib.h"
struct fnhe_hash_bucket {
   struct fib_nh_exception *chain ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ip_fib.h"
struct fib_nh {
   struct net_device *nh_dev ;
   struct hlist_node nh_hash ;
   struct fib_info *nh_parent ;
   unsigned int nh_flags ;
   unsigned char nh_scope ;
   int nh_weight ;
   int nh_power ;
   __u32 nh_tclassid ;
   int nh_oif ;
   __be32 nh_gw ;
   __be32 nh_saddr ;
   int nh_saddr_genid ;
   struct rtable **nh_pcpu_rth_output ;
   struct rtable *nh_rth_input ;
   struct fnhe_hash_bucket *nh_exceptions ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ip_fib.h"
struct fib_info {
   struct hlist_node fib_hash ;
   struct hlist_node fib_lhash ;
   struct net *fib_net ;
   int fib_treeref ;
   atomic_t fib_clntref ;
   unsigned int fib_flags ;
   unsigned char fib_dead ;
   unsigned char fib_protocol ;
   unsigned char fib_scope ;
   unsigned char fib_type ;
   __be32 fib_prefsrc ;
   u32 fib_priority ;
   u32 *fib_metrics ;
   int fib_nhs ;
   int fib_power ;
   struct callback_head rcu ;
   struct fib_nh fib_nh[0U] ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ip_fib.h"
struct fib_table {
   struct hlist_node tb_hlist ;
   u32 tb_id ;
   int tb_num_default ;
   struct callback_head rcu ;
   unsigned long *tb_data ;
   unsigned long __data[0U] ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/io-64-nonatomic-lo-hi.h"
struct rocker_desc {
   u64 buf_addr ;
   u64 cookie ;
   u16 buf_size ;
   u16 tlv_size ;
   u16 resv[5U] ;
   u16 comp_err ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.h"
struct rocker_tlv {
   u32 type ;
   u16 len ;
};

#line 317 
enum rocker_of_dpa_table_id {
    ROCKER_OF_DPA_TABLE_ID_INGRESS_PORT = 0,
    ROCKER_OF_DPA_TABLE_ID_VLAN = 10,
    ROCKER_OF_DPA_TABLE_ID_TERMINATION_MAC = 20,
    ROCKER_OF_DPA_TABLE_ID_UNICAST_ROUTING = 30,
    ROCKER_OF_DPA_TABLE_ID_MULTICAST_ROUTING = 40,
    ROCKER_OF_DPA_TABLE_ID_BRIDGING = 50,
    ROCKER_OF_DPA_TABLE_ID_ACL_POLICY = 60
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct __anonstruct_ig_port_393 {
   u32 in_pport ;
   u32 in_pport_mask ;
   enum rocker_of_dpa_table_id goto_tbl ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct __anonstruct_vlan_394 {
   u32 in_pport ;
   __be16 vlan_id ;
   __be16 vlan_id_mask ;
   enum rocker_of_dpa_table_id goto_tbl ;
   bool untagged ;
   __be16 new_vlan_id ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct __anonstruct_term_mac_395 {
   u32 in_pport ;
   u32 in_pport_mask ;
   __be16 eth_type ;
   u8 eth_dst[6U] ;
   u8 eth_dst_mask[6U] ;
   __be16 vlan_id ;
   __be16 vlan_id_mask ;
   enum rocker_of_dpa_table_id goto_tbl ;
   bool copy_to_cpu ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct __anonstruct_ucast_routing_396 {
   __be16 eth_type ;
   __be32 dst4 ;
   __be32 dst4_mask ;
   enum rocker_of_dpa_table_id goto_tbl ;
   u32 group_id ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct __anonstruct_bridge_397 {
   u8 eth_dst[6U] ;
   u8 eth_dst_mask[6U] ;
   int has_eth_dst ;
   int has_eth_dst_mask ;
   __be16 vlan_id ;
   u32 tunnel_id ;
   enum rocker_of_dpa_table_id goto_tbl ;
   u32 group_id ;
   bool copy_to_cpu ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct __anonstruct_acl_398 {
   u32 in_pport ;
   u32 in_pport_mask ;
   u8 eth_src[6U] ;
   u8 eth_src_mask[6U] ;
   u8 eth_dst[6U] ;
   u8 eth_dst_mask[6U] ;
   __be16 eth_type ;
   __be16 vlan_id ;
   __be16 vlan_id_mask ;
   u8 ip_proto ;
   u8 ip_proto_mask ;
   u8 ip_tos ;
   u8 ip_tos_mask ;
   u32 group_id ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
union __anonunion_392 {
   struct __anonstruct_ig_port_393 ig_port ;
   struct __anonstruct_vlan_394 vlan ;
   struct __anonstruct_term_mac_395 term_mac ;
   struct __anonstruct_ucast_routing_396 ucast_routing ;
   struct __anonstruct_bridge_397 bridge ;
   struct __anonstruct_acl_398 acl ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct rocker_flow_tbl_key {
   u32 priority ;
   enum rocker_of_dpa_table_id tbl_id ;
   union __anonunion_392 __anonCompField_rocker_flow_tbl_key_114 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct rocker_flow_tbl_entry {
   struct hlist_node entry ;
   u32 cmd ;
   u64 cookie ;
   struct rocker_flow_tbl_key key ;
   size_t key_len ;
   u32 key_crc32 ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct __anonstruct_l2_interface_400 {
   u8 pop_vlan ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct __anonstruct_l2_rewrite_401 {
   u8 eth_src[6U] ;
   u8 eth_dst[6U] ;
   __be16 vlan_id ;
   u32 group_id ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct __anonstruct_l3_unicast_402 {
   u8 eth_src[6U] ;
   u8 eth_dst[6U] ;
   __be16 vlan_id ;
   bool ttl_check ;
   u32 group_id ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
union __anonunion_399 {
   struct __anonstruct_l2_interface_400 l2_interface ;
   struct __anonstruct_l2_rewrite_401 l2_rewrite ;
   struct __anonstruct_l3_unicast_402 l3_unicast ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct rocker_group_tbl_entry {
   struct hlist_node entry ;
   u32 cmd ;
   u32 group_id ;
   u16 group_count ;
   u32 *group_ids ;
   union __anonunion_399 __anonCompField_rocker_group_tbl_entry_115 ;
};

#line 150  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct rocker_fdb_tbl_key {
   u32 pport ;
   u8 addr[6U] ;
   __be16 vlan_id ;
};

#line 160  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct rocker_fdb_tbl_entry {
   struct hlist_node entry ;
   u32 key_crc32 ;
   bool learned ;
   struct rocker_fdb_tbl_key key ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct rocker_internal_vlan_tbl_entry {
   struct hlist_node entry ;
   int ifindex ;
   u32 ref_count ;
   __be16 vlan_id ;
};

#line 168  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct rocker_neigh_tbl_entry {
   struct hlist_node entry ;
   __be32 ip_addr ;
   struct net_device *dev ;
   u32 ref_count ;
   u32 index ;
   u8 eth_dst[6U] ;
   bool ttl_check ;
};

#line 178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct rocker_desc_info {
   char *data ;
   size_t data_size ;
   size_t tlv_size ;
   struct rocker_desc *desc ;
   dma_addr_t mapaddr ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct rocker_dma_ring_info {
   size_t size ;
   u32 head ;
   u32 tail ;
   struct rocker_desc *desc ;
   dma_addr_t mapaddr ;
   struct rocker_desc_info *desc_info ;
   unsigned int type ;
};

#line 196 
struct rocker;

#line 206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct rocker_port {
   struct net_device *dev ;
   struct net_device *bridge_dev ;
   struct rocker *rocker ;
   unsigned int port_number ;
   u32 pport ;
   __be16 internal_vlan_id ;
   int stp_state ;
   u32 brport_flags ;
   bool ctrls[5U] ;
   unsigned long vlan_bitmap[64U] ;
   struct napi_struct napi_tx ;
   struct napi_struct napi_rx ;
   struct rocker_dma_ring_info tx_ring ;
   struct rocker_dma_ring_info rx_ring ;
   struct list_head trans_mem ;
};

#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct __anonstruct_hw_403 {
   u64 id ;
};

#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct rocker {
   struct pci_dev *pdev ;
   u8 *hw_addr ;
   struct msix_entry *msix_entries ;
   unsigned int port_count ;
   struct rocker_port **ports ;
   struct __anonstruct_hw_403 hw ;
   spinlock_t cmd_ring_lock ;
   struct rocker_dma_ring_info cmd_ring ;
   struct rocker_dma_ring_info event_ring ;
   struct hlist_head flow_tbl[65536U] ;
   spinlock_t flow_tbl_lock ;
   u64 flow_tbl_next_cookie ;
   struct hlist_head group_tbl[65536U] ;
   spinlock_t group_tbl_lock ;
   struct hlist_head fdb_tbl[65536U] ;
   spinlock_t fdb_tbl_lock ;
   unsigned long internal_vlan_bitmap[4U] ;
   struct hlist_head internal_vlan_tbl[256U] ;
   spinlock_t internal_vlan_tbl_lock ;
   struct hlist_head neigh_tbl[65536U] ;
   spinlock_t neigh_tbl_lock ;
   u32 neigh_tbl_next_index ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct rocker_wait {
   wait_queue_head_t wait ;
   bool done ;
   bool nowait ;
};

#line 1719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct port_name {
   char *buf ;
   size_t len ;
};

#line 3202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct rocker_ctrl {
   u8 const *eth_dst ;
   u8 const *eth_dst_mask ;
   __be16 eth_type ;
   bool acl ;
   bool bridge ;
   bool term ;
   bool copy_to_cpu ;
};

#line 3475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct rocker_fdb_learn_work {
   struct work_struct work ;
   struct rocker_port *rocker_port ;
   enum switchdev_trans trans ;
   int flags ;
   u8 addr[6U] ;
   u16 vid ;
};

#line 4536  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct rocker_port_stats {
   char str[32U] ;
   int type ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_free_irq_3 {
   int arg0 ;
   int signal_pending ;
};

#line 18  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_12 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_11 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 31  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_13 {
   struct net_device *arg0 ;
   int signal_pending ;
};
unsigned short __builtin_bswap16(unsigned short);

unsigned int __builtin_bswap32(unsigned int);

void *__builtin_memcpy(void *, void const *, unsigned long);

void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/fvtp/.tmp_rocker.c"
void ldv_inline_asm(void);


#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compiler.h"
__inline static void __read_once_size(void const volatile *p, void *res, int size)
{
  
#line 203 
  switch (size) {
    case 1: 
#line 204 
    ;
    
#line 204 
    *((__u8 *)res) = *((__u8 volatile *)p);
    
#line 204 
    goto ldv_1185;
    case 2: 
#line 205 
    ;
    
#line 205 
    *((__u16 *)res) = *((__u16 volatile *)p);
    
#line 205 
    goto ldv_1185;
    case 4: 
#line 206 
    ;
    
#line 206 
    *((__u32 *)res) = *((__u32 volatile *)p);
    
#line 206 
    goto ldv_1185;
    case 8: 
#line 207 
    ;
    
#line 207 
    *((__u64 *)res) = *((__u64 volatile *)p);
    
#line 207 
    goto ldv_1185;
    default: 
#line 208 
    ;
    
#line 209 
    ldv_inline_asm();
    
#line 210 
    __builtin_memcpy(res,(void const *)p,(unsigned long)size);
    
#line 211 
    ldv_inline_asm();
  }
  ldv_1185: 
#line 213 
  ;
  
#line 214 
  return;
}


#line 9  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
int ldv_atomic_dec_and_test(atomic_t *v);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int variable_test_bit(long nr, unsigned long const volatile *addr)
{
  int oldbit;
  
#line 317 
  ldv_inline_asm();
  
#line 323 
  return oldbit;
}


#line 479  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int fls64(__u64 x)
{
  int __retres;
  
#line 481 
  int bitpos = -1;
  
#line 482 
  ldv_inline_asm();
  
#line 490 
  __retres = bitpos + 1;
  
#line 490 
  return __retres;
}


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u16 __fswab16(__u16 val)
{
  __u16 tmp;
  
#line 49 
  tmp = __builtin_bswap16((unsigned short)((int)val));
  
#line 49 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u32 __fswab32(__u32 val)
{
  __u32 tmp;
  
#line 60 
  tmp = __builtin_bswap32(val);
  
#line 60 
  return tmp;
}


#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitops.h"
__inline static unsigned int fls_long(unsigned long l)
{
  unsigned int __retres;
  int tmp_0;
  
#line 178 
  tmp_0 = fls64((unsigned long long)l);
  
#line 178 
  __retres = (unsigned int)tmp_0;
  
#line 178 
  return __retres;
}


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
int ____ilog2_NaN(void);


#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static int __ilog2_u64(u64 n)
{
  int __retres;
  int tmp;
  
#line 42 
  tmp = fls64(n);
  
#line 42 
  __retres = tmp + -1;
  
#line 42 
  return __retres;
}


#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static unsigned long __roundup_pow_of_two(unsigned long n)
{
  unsigned long __retres;
  unsigned int tmp;
  
#line 63 
  tmp = fls_long(n + 18446744073709551615UL);
  
#line 63 
  __retres = 1UL << tmp;
  
#line 63 
  return __retres;
}


#line 178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
void __might_sleep(char const *, int, int);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 48 
void __list_add(struct list_head *, struct list_head *, struct list_head *);


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_add_tail(struct list_head *new, struct list_head *head)
{
  
#line 77 
  __list_add(new,head->prev,head);
  
#line 78 
  return;
}


#line 112 
void __list_del_entry(struct list_head *);


#line 113 
void list_del(struct list_head *);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_del_init(struct list_head *entry)
{
  
#line 145 
  __list_del_entry(entry);
  
#line 146 
  INIT_LIST_HEAD(entry);
  
#line 147 
  return;
}


#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static int list_empty(struct list_head const *head)
{
  int __retres;
  
#line 189 
  __retres = (struct list_head const *)head->next == head;
  
#line 189 
  return __retres;
}


#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_HLIST_NODE(struct hlist_node *h)
{
  
#line 600 
  h->next = (struct hlist_node *)0;
  
#line 601 
  h->pprev = (struct hlist_node **)0;
  
#line 602 
  return;
}


#line 604  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static int hlist_unhashed(struct hlist_node const *h)
{
  int __retres;
  
#line 606 
  __retres = h->pprev == (struct hlist_node **)0;
  
#line 606 
  return __retres;
}


#line 614  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void __hlist_del(struct hlist_node *n)
{
  
#line 616 
  struct hlist_node *next = n->next;
  
#line 617 
  struct hlist_node **pprev = n->pprev;
  
#line 618 
  *pprev = next;
  
#line 619 
  if (next != (struct hlist_node *)0) 
#line 620 
                                      next->pprev = pprev; else ;
  
#line 621 
  return;
}


#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void hlist_del_init(struct hlist_node *n)
{
  int tmp;
  
#line 632 
  tmp = hlist_unhashed((struct hlist_node const *)n);
  
#line 632 
  if (tmp == 0) {
    
#line 633 
    __hlist_del(n);
    
#line 634 
    INIT_HLIST_NODE(n);
  }
  else ;
  
#line 636 
  return;
}


#line 638  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void hlist_add_head(struct hlist_node *n, struct hlist_head *h)
{
  
#line 640 
  struct hlist_node *first = h->first;
  
#line 641 
  n->next = first;
  
#line 642 
  if (first != (struct hlist_node *)0) 
#line 643 
                                       first->pprev = & n->next; else ;
  
#line 644 
  h->first = n;
  
#line 645 
  n->pprev = & h->first;
  
#line 646 
  return;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 63 
int memcmp(void const *, void const *, size_t);


#line 67 
int strcmp(char const *, char const *);


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
size_t strlcpy(char *, char const *, size_t);


#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
static bool IS_ERR(void const *ptr);


#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cmpxchg.h"
void __cmpxchg_wrong_size(void);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int atomic_read(atomic_t const *v)
{
  int __retres;
  int const volatile *tmp;
  {
    
#line 27 
    int const __var = 0;
    
#line 27 
    tmp = (int const volatile *)(& v->counter);
  }
  
#line 27 
  __retres = *tmp;
  
#line 27 
  return __retres;
}


#line 120 
static int atomic_dec_and_test(atomic_t *v);


#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int atomic_cmpxchg(atomic_t *v, int old, int new)
{
  int tmp;
  {
    int __ret;
    
#line 181 
    int __old = old;
    
#line 181 
    int __new = new;
    
#line 181 
    switch (4UL) {
      case (unsigned long)1: 
#line 181 
      ;
      {
        
#line 181 
        u8 volatile *__ptr = (u8 volatile *)(& v->counter);
        
#line 182 
        ldv_inline_asm();
        
#line 181 
        goto ldv_5991;
      }
      case (unsigned long)2: 
#line 181 
      ;
      {
        
#line 181 
        u16 volatile *__ptr_0 = (u16 volatile *)(& v->counter);
        
#line 182 
        ldv_inline_asm();
        
#line 181 
        goto ldv_5991;
      }
      case (unsigned long)4: 
#line 181 
      ;
      {
        
#line 181 
        u32 volatile *__ptr_1 = (u32 volatile *)(& v->counter);
        
#line 182 
        ldv_inline_asm();
        
#line 181 
        goto ldv_5991;
      }
      case (unsigned long)8: 
#line 181 
      ;
      {
        
#line 181 
        u64 volatile *__ptr_2 = (u64 volatile *)(& v->counter);
        
#line 182 
        ldv_inline_asm();
        
#line 181 
        goto ldv_5991;
      }
      default: 
#line 181 
      ;
      
#line 181 
      __cmpxchg_wrong_size();
    }
    ldv_5991: 
#line 181 
    ;
    
#line 181 
    tmp = __ret;
  }
  
#line 181 
  return tmp;
}


#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int __atomic_add_unless(atomic_t *v, int a, int u)
{
  int c;
  int old;
  
#line 197 
  c = atomic_read((atomic_t const *)v);
  ldv_6020: 
#line 198 
  ;
  
#line 199 
  if ((long)(c == u) != 0L) 
#line 200 
                            goto ldv_6019; else ;
  
#line 201 
  old = atomic_cmpxchg(v,c,c + a);
  
#line 202 
  if ((long)(old == c) != 0L) 
#line 203 
                              goto ldv_6019; else ;
  
#line 204 
  c = old;
  
#line 199 
  goto ldv_6020;
  ldv_6019: 
#line 200 
  ;
  
#line 206 
  return c;
}


#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/atomic.h"
__inline static int atomic_add_unless(atomic_t *v, int a, int u)
{
  int __retres;
  int tmp;
  
#line 17 
  tmp = __atomic_add_unless(v,a,u);
  
#line 17 
  ;
  
#line 17 
  __retres = tmp != u;
  
#line 17 
  return __retres;
}


#line 7  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
void __local_bh_disable_ip(unsigned long, unsigned int);


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
__inline static void local_bh_disable(void)
{
  __here_0: 
#line 18 
  ;
  
#line 18 
  __local_bh_disable_ip((unsigned long)((void *)0),512U);
  
#line 20 
  return;
}


#line 22 
void __local_bh_enable_ip(unsigned long, unsigned int);


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
__inline static void local_bh_enable(void)
{
  __here_0: 
#line 31 
  ;
  
#line 31 
  __local_bh_enable_ip((unsigned long)((void *)0),512U);
  
#line 33 
  return;
}


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 333 
void lock_acquire(struct lockdep_map *, unsigned int, int, int, int, struct lockdep_map *, unsigned long);


#line 337 
void lock_release(struct lockdep_map *, int, unsigned long);


#line 545 
void lockdep_rcu_suspicious(char const *, int const, char const *);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 45 
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_75(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 407 
static void ldv_spin_unlock_76(spinlock_t *lock);


#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 452 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 453 
  return;
}


#line 482 
static void ldv_spin_unlock_irqrestore_78(spinlock_t *lock, unsigned long flags);


#line 486 
static void ldv_spin_unlock_irqrestore_79(spinlock_t *lock, unsigned long flags);


#line 490 
static void ldv_spin_unlock_irqrestore_80(spinlock_t *lock, unsigned long flags);


#line 494 
static void ldv_spin_unlock_irqrestore_82(spinlock_t *lock, unsigned long flags);


#line 498 
static void ldv_spin_unlock_irqrestore_84(spinlock_t *lock, unsigned long flags);


#line 502 
static void ldv_spin_unlock_irqrestore_86(spinlock_t *lock, unsigned long flags);


#line 506 
static void ldv_spin_unlock_irqrestore_88(spinlock_t *lock, unsigned long flags);


#line 510 
static void ldv_spin_unlock_irqrestore_90(spinlock_t *lock, unsigned long flags);


#line 514 
static void ldv_spin_unlock_irqrestore_92(spinlock_t *lock, unsigned long flags);


#line 518 
static void ldv_spin_unlock_irqrestore_94(spinlock_t *lock, unsigned long flags);


#line 522 
static void ldv_spin_unlock_irqrestore_96(spinlock_t *lock, unsigned long flags);


#line 526 
static void ldv_spin_unlock_irqrestore_98(spinlock_t *lock, unsigned long flags);


#line 530 
static void ldv_spin_unlock_irqrestore_100(spinlock_t *lock, unsigned long flags);


#line 534 
static void ldv_spin_unlock_irqrestore_102(spinlock_t *lock, unsigned long flags);


#line 538 
static void ldv_spin_unlock_irqrestore_105(spinlock_t *lock, unsigned long flags);


#line 542 
static void ldv_spin_unlock_irqrestore_107(spinlock_t *lock, unsigned long flags);


#line 546 
static void ldv_spin_unlock_irqrestore_109(spinlock_t *lock, unsigned long flags);


#line 550 
static void ldv_spin_unlock_irqrestore_111(spinlock_t *lock, unsigned long flags);


#line 554 
static void ldv_spin_unlock_irqrestore_119(spinlock_t *lock, unsigned long flags);


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
void __ldv_spin_lock(spinlock_t *);


#line 70 
static void ldv___ldv_spin_lock_77(spinlock_t *ldv_func_arg1);


#line 74 
static void ldv___ldv_spin_lock_81(spinlock_t *ldv_func_arg1);


#line 78 
static void ldv___ldv_spin_lock_83(spinlock_t *ldv_func_arg1);


#line 82 
static void ldv___ldv_spin_lock_85(spinlock_t *ldv_func_arg1);


#line 86 
static void ldv___ldv_spin_lock_87(spinlock_t *ldv_func_arg1);


#line 90 
static void ldv___ldv_spin_lock_89(spinlock_t *ldv_func_arg1);


#line 94 
static void ldv___ldv_spin_lock_91(spinlock_t *ldv_func_arg1);


#line 98 
static void ldv___ldv_spin_lock_93(spinlock_t *ldv_func_arg1);


#line 102 
static void ldv___ldv_spin_lock_95(spinlock_t *ldv_func_arg1);


#line 106 
static void ldv___ldv_spin_lock_97(spinlock_t *ldv_func_arg1);


#line 110 
static void ldv___ldv_spin_lock_99(spinlock_t *ldv_func_arg1);


#line 114 
static void ldv___ldv_spin_lock_101(spinlock_t *ldv_func_arg1);


#line 118 
static void ldv___ldv_spin_lock_104(spinlock_t *ldv_func_arg1);


#line 122 
static void ldv___ldv_spin_lock_106(spinlock_t *ldv_func_arg1);


#line 126 
static void ldv___ldv_spin_lock_108(spinlock_t *ldv_func_arg1);


#line 130 
static void ldv___ldv_spin_lock_110(spinlock_t *ldv_func_arg1);


#line 134 
static void ldv___ldv_spin_lock_118(spinlock_t *ldv_func_arg1);


#line 142 
void ldv_spin_model_lock(char *);


#line 143 
void ldv_spin_model_unlock(char *);


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
void __init_waitqueue_head(wait_queue_head_t *, char const *, struct lock_class_key *);


#line 149 
void __wake_up(wait_queue_head_t *, unsigned int, int, void *);


#line 926 
long prepare_to_wait_event(wait_queue_head_t *, wait_queue_t *, int);


#line 927 
void finish_wait(wait_queue_head_t *, wait_queue_t *);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcutree.h"
bool rcu_is_watching(void);


#line 447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_lock_acquire(struct lockdep_map *map)
{
  __here_0: 
#line 449 
  ;
  
#line 449 
  ;
  
#line 449 
  lock_acquire(map,0U,0,2,0,(struct lockdep_map *)0,(unsigned long)((void *)0));
  
#line 451 
  return;
}


#line 452  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_lock_release(struct lockdep_map *map)
{
  __here_0: 
#line 454 
  ;
  
#line 454 
  ;
  
#line 454 
  lock_release(map,1,(unsigned long)((void *)0));
  
#line 456 
  return;
}


#line 458 
extern struct lockdep_map rcu_bh_lock_map;


#line 461 
int debug_lockdep_rcu_enabled(void);


#line 464 
int rcu_read_lock_bh_held(void);


#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_lock_bh(void)
{
  
#line 925 
  local_bh_disable();
  
#line 927 
  rcu_lock_acquire(& rcu_bh_lock_map);
  {
    bool __warned;
    int tmp;
    
#line 928 
    tmp = debug_lockdep_rcu_enabled();
    
#line 928 
    if (tmp != 0) {
      
#line 928 
      if (! __warned) {
        int tmp_1;
        bool tmp_0;
        
#line 928 
        tmp_0 = rcu_is_watching();
        
#line 928 
        if (tmp_0) 
#line 928 
                   tmp_1 = 0; else 
#line 928 
                                   tmp_1 = 1;
        
#line 928 
        if (tmp_1) {
          
#line 928 
          __warned = (_Bool)1;
          
#line 928 
          lockdep_rcu_suspicious("include/linux/rcupdate.h",929,"rcu_read_lock_bh() used illegally while idle");
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 931 
  return;
}


#line 937  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_unlock_bh(void)
{
  {
    bool __warned;
    int tmp;
    
#line 939 
    tmp = debug_lockdep_rcu_enabled();
    
#line 939 
    if (tmp != 0) {
      
#line 939 
      if (! __warned) {
        int tmp_1;
        bool tmp_0;
        
#line 939 
        tmp_0 = rcu_is_watching();
        
#line 939 
        if (tmp_0) 
#line 939 
                   tmp_1 = 0; else 
#line 939 
                                   tmp_1 = 1;
        
#line 939 
        if (tmp_1) {
          
#line 939 
          __warned = (_Bool)1;
          
#line 939 
          lockdep_rcu_suspicious("include/linux/rcupdate.h",940,"rcu_read_unlock_bh() used illegally while idle");
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 941 
  rcu_lock_release(& rcu_bh_lock_map);
  
#line 943 
  local_bh_enable();
  
#line 944 
  return;
}


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void __init_work(struct work_struct *, int);


#line 560 
static bool ldv_schedule_work_103(struct work_struct *work);


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile *addr)
{
  unsigned int ret;
  
#line 59 
  ldv_inline_asm();
  
#line 58 
  return ret;
}


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void volatile *addr)
{
  
#line 68 
  ldv_inline_asm();
  
#line 69 
  return;
}


#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned long readq(void const volatile *addr)
{
  unsigned long ret;
  
#line 91 
  ldv_inline_asm();
  
#line 90 
  return ret;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writeq(unsigned long val, void volatile *addr)
{
  
#line 93 
  ldv_inline_asm();
  
#line 94 
  return;
}


#line 181 
void *ioremap_nocache(resource_size_t, unsigned long);


#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void *ioremap(resource_size_t offset, unsigned long size)
{
  void *tmp;
  
#line 192 
  tmp = ioremap_nocache(offset,size);
  
#line 192 
  return tmp;
}


#line 195 
void iounmap(void volatile *);


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 1083 
void dev_err(struct device const *, char const * , ...);


#line 1085 
void dev_warn(struct device const *, char const * , ...);


#line 1089 
void _dev_info(struct device const *, char const * , ...);


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
long schedule_timeout(long);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 525 
static void *kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 542 
static void *kcalloc(size_t n, size_t size, gfp_t flags);


#line 581 
static void *kzalloc(size_t size, gfp_t flags);


#line 951  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
int pci_enable_device(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 1094 
int pci_request_regions(struct pci_dev *, char const *);


#line 1096 
void pci_release_regions(struct pci_dev *);


#line 1146 
static int ldv___pci_register_driver_132(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_133(struct pci_driver *ldv_func_arg1);


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page const *page)
{
  void *__retres;
  
#line 947 
  __retres = (void *)((unsigned long)((unsigned long long)(((long)page + 24189255811072L) / 64L) << 12) + 18446612132314218496UL);
  
#line 947 
  return __retres;
}


#line 1213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
int pci_msix_vec_count(struct pci_dev *);


#line 1216 
void pci_disable_msix(struct pci_dev *);


#line 1227 
int pci_enable_msix_range(struct pci_dev *, struct msix_entry *, int, int);


#line 1229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_enable_msix_exact(struct pci_dev *dev, struct msix_entry *entries, int nvec)
{
  int __retres;
  
#line 1232 
  int rc = pci_enable_msix_range(dev,entries,nvec,nvec);
  
#line 1233 
  if (rc < 0) {
    
#line 1234 
    __retres = rc;
    
#line 1234 
    goto return_label;
  }
  else ;
  
#line 1235 
  __retres = 0;
  return_label: 
#line 1235 
                return __retres;
}


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 42 
void debug_dma_mapping_error(struct device *, dma_addr_t);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  int __retres;
  
#line 49 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 50 
  debug_dma_mapping_error(dev,dma_addr);
  
#line 51 
  if (ops->mapping_error != (int (*)(struct device *, dma_addr_t ))0) {
    int tmp_0;
    
#line 52 
    tmp_0 = (*(ops->mapping_error))(dev,dma_addr);
    
#line 52 
    __retres = tmp_0;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 54 
  __retres = dma_addr == 0ULL;
  return_label: 
#line 54 
                return __retres;
}


#line 60 
int dma_supported(struct device *, u64);


#line 61 
int dma_set_mask(struct device *, u64);


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_coherent_mask(struct device *dev, u64 mask)
{
  int __retres;
  int tmp;
  
#line 103 
  tmp = dma_supported(dev,mask);
  
#line 103 
  if (tmp == 0) {
    
#line 104 
    __retres = -5;
    
#line 104 
    goto return_label;
  }
  else ;
  
#line 105 
  dev->coherent_dma_mask = mask;
  
#line 106 
  __retres = 0;
  return_label: 
#line 106 
                return __retres;
}


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void *pci_alloc_consistent(struct pci_dev *hwdev, size_t size, dma_addr_t *dma_handle)
{
  void *tmp_0;
  struct device *tmp;
  
#line 19 
  ;
  
#line 19 
  ;
  
#line 19 
  if (hwdev != (struct pci_dev *)0) 
#line 19 
                                    tmp = & hwdev->dev; else 
#line 19 
                                                             tmp = (struct device *)0;
  
#line 19 
  tmp_0 = dma_alloc_attrs(tmp,size,dma_handle,32U,(struct dma_attrs *)0);
  
#line 19 
  return tmp_0;
}


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_free_consistent(struct pci_dev *hwdev, size_t size, void *vaddr, dma_addr_t dma_handle)
{
  struct device *tmp;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  if (hwdev != (struct pci_dev *)0) 
#line 34 
                                    tmp = & hwdev->dev; else 
#line 34 
                                                             tmp = (struct device *)0;
  
#line 34 
  dma_free_attrs(tmp,size,vaddr,dma_handle,(struct dma_attrs *)0);
  
#line 35 
  return;
}


#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static dma_addr_t pci_map_single(struct pci_dev *hwdev, void *ptr, size_t size, int direction)
{
  dma_addr_t tmp_0;
  struct device *tmp;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  if (hwdev != (struct pci_dev *)0) 
#line 40 
                                    tmp = & hwdev->dev; else 
#line 40 
                                                             tmp = (struct device *)0;
  
#line 40 
  tmp_0 = dma_map_single_attrs(tmp,ptr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 40 
  return tmp_0;
}


#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_unmap_single(struct pci_dev *hwdev, dma_addr_t dma_addr, size_t size, int direction)
{
  struct device *tmp;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  if (hwdev != (struct pci_dev *)0) 
#line 47 
                                    tmp = & hwdev->dev; else 
#line 47 
                                                             tmp = (struct device *)0;
  
#line 47 
  dma_unmap_single_attrs(tmp,dma_addr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 48 
  return;
}


#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_dma_mapping_error(struct pci_dev *pdev, dma_addr_t dma_addr)
{
  int tmp;
  
#line 109 
  tmp = dma_mapping_error(& pdev->dev,dma_addr);
  
#line 109 
  return tmp;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 115 
  tmp = dma_set_mask(& dev->dev,mask);
  
#line 115 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_consistent_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 120 
  tmp = dma_set_coherent_mask(& dev->dev,mask);
  
#line 120 
  return tmp;
}


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  
#line 1478 
  dev_set_drvdata(& pdev->dev,data);
  
#line 1479 
  return;
}


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_73(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 145 
static int ldv_request_irq_112(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 149 
static int ldv_request_irq_113(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 153 
static int ldv_request_irq_126(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 157 
static int ldv_request_irq_127(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 169 
static void ldv_free_irq_74(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 173 
static void ldv_free_irq_114(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 177 
static void ldv_free_irq_115(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 181 
static void ldv_free_irq_116(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 185 
static void ldv_free_irq_117(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 189 
static void ldv_free_irq_128(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 193 
static void ldv_free_irq_129(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 197 
static void ldv_free_irq_130(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 201 
static void ldv_free_irq_131(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hash.h"
__inline static u32 hash_32(u32 val, unsigned int bits)
{
  u32 __retres;
  
#line 65 
  u32 hash = val * 2654404609U;
  
#line 68 
  __retres = hash >> (32U - bits);
  
#line 68 
  return __retres;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hash.h"
__inline static u32 hash32_ptr(void const *ptr)
{
  u32 __retres;
  
#line 78 
  unsigned long val = (unsigned long)ptr;
  
#line 81 
  val = (val >> 32) ^ val;
  
#line 83 
  __retres = (unsigned int)val;
  
#line 83 
  return __retres;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hashtable.h"
__inline static void __hash_init(struct hlist_head *ht, unsigned int sz)
{
  unsigned int i;
  
#line 33 
  i = 0U;
  
#line 33 
  goto ldv_29640;
  ldv_29639: 
#line 34 
  ;
  
#line 34 
  (ht + i)->first = (struct hlist_node *)0;
  
#line 33 
  i += 1U;
  ldv_29640: 
#line 34 
  ;
  
#line 33 
  if (i < sz) 
#line 35 
              goto ldv_29639; else 
#line 38 
                                   goto ldv_29641;
  ldv_29641: 
#line 39 
  ;
  
#line 40 
  return;
}


#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hashtable.h"
__inline static void hash_del(struct hlist_node *node)
{
  
#line 102 
  hlist_del_init(node);
  
#line 103 
  return;
}


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crc32.h"
u32 crc32_le(u32, unsigned char const *, size_t);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
void get_random_bytes(void *, int);


#line 37 
u32 prandom_u32(void);


#line 38 
void prandom_bytes(void *, size_t);


#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
int net_ratelimit(void);


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_frag_size(skb_frag_t const *frag)
{
  unsigned int __retres;
  
#line 232 
  __retres = frag->size;
  
#line 232 
  return __retres;
}


#line 775 
void consume_skb(struct sk_buff *);


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1574 
  __retres = skb->len - skb->data_len;
  
#line 1574 
  return __retres;
}


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *__netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length, gfp_t gfp)
{
  
#line 2179 
  struct sk_buff *skb = __netdev_alloc_skb(dev,length,gfp);
  
#line 2183 
  return skb;
}


#line 2186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2189 
  tmp = __netdev_alloc_skb_ip_align(dev,length,32U);
  
#line 2189 
  return tmp;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t const *frag)
{
  struct page *__retres;
  
#line 2274 
  __retres = frag->page.p;
  
#line 2274 
  return __retres;
}


#line 2330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void *skb_frag_address(skb_frag_t const *frag)
{
  void *__retres;
  void *tmp_0;
  struct page *tmp;
  
#line 2332 
  tmp = skb_frag_page(frag);
  
#line 2332 
  tmp_0 = lowmem_page_address((struct page const *)tmp);
  
#line 2332 
  ;
  
#line 2332 
  __retres = tmp_0 + frag->page_offset;
  
#line 2332 
  return __retres;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static void ethtool_cmd_speed_set(struct ethtool_cmd *ep, __u32 speed)
{
  
#line 117 
  ep->speed = (unsigned short)speed;
  
#line 118 
  ep->speed_hi = (unsigned short)(speed >> 16);
  
#line 119 
  return;
}


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static __u32 ethtool_cmd_speed(struct ethtool_cmd const *ep)
{
  __u32 __retres;
  
#line 123 
  __retres = (unsigned int)(((int)ep->speed_hi << 16) | (int)ep->speed);
  
#line 123 
  return __retres;
}


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
u32 ethtool_op_get_link(struct net_device *);


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule(struct napi_struct *);


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_disable_pending(struct napi_struct *n)
{
  bool __retres;
  int tmp;
  
#line 396 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& n->state));
  
#line 396 
  __retres = (_Bool)(tmp != 0);
  
#line 396 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_schedule_prep(struct napi_struct *n)
{
  bool __retres;
  int tmp_2;
  int tmp_0;
  bool tmp;
  
#line 410 
  tmp = napi_disable_pending(n);
  
#line 410 
  if (tmp) 
#line 410 
           tmp_0 = 0; else 
#line 410 
                           tmp_0 = 1;
  
#line 410 
  if (tmp_0) {
    int tmp_1;
    
#line 410 
    tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& n->state));
    
#line 410 
    if (tmp_1 == 0) 
#line 410 
                    tmp_2 = 1; else 
#line 410 
                                    tmp_2 = 0;
  }
  else 
#line 410 
       tmp_2 = 0;
  
#line 410 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 410 
  return __retres;
}


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_schedule(struct napi_struct *n)
{
  bool tmp;
  
#line 423 
  tmp = napi_schedule_prep(n);
  
#line 423 
  if ((int)tmp != 0) 
#line 424 
                     __napi_schedule(n); else ;
  
#line 425 
  return;
}


#line 450 
void napi_complete_done(struct napi_struct *, int);


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_complete(struct napi_struct *n)
{
  
#line 460 
  napi_complete_done(n,0);
  
#line 461 
  return;
}


#line 496 
void napi_disable(struct napi_struct *);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  int tmp;
  
#line 507 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 507 
  if ((long)(tmp == 0) != 0L) {
    
#line 509 
    ldv_inline_asm();
    
#line 507 
    ;
  }
  else ;
  
#line 509 
  ldv_inline_asm();
  
#line 509 
  set_bit(0L,(unsigned long volatile *)(& n->state));
  
#line 510 
  return;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 1911 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);


#line 2084 
int register_netdevice_notifier(struct notifier_block *);


#line 2085 
int unregister_netdevice_notifier(struct notifier_block *);


#line 2103  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct net_device *netdev_notifier_info_to_dev(struct netdev_notifier_info const *info)
{
  struct net_device *__retres;
  
#line 2105 
  __retres = info->dev;
  
#line 2105 
  return __retres;
}


#line 2205 
static void ldv_free_netdev_121(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_125(struct net_device *ldv_func_arg1);


#line 2515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  
#line 2517 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2518 
  return;
}


#line 2526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_start_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2528 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2528 
  netif_tx_start_queue(tmp);
  
#line 2529 
  return;
}


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_wake_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2552 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2552 
  netif_tx_wake_queue(tmp);
  
#line 2553 
  return;
}


#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_tx_queue_stopped(struct netdev_queue const *dev_queue)
{
  bool __retres;
  int tmp;
  
#line 2586 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev_queue->state));
  
#line 2586 
  __retres = (_Bool)(tmp != 0);
  
#line 2586 
  return __retres;
}


#line 2595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_queue_stopped(struct net_device const *dev)
{
  bool tmp_0;
  struct netdev_queue *tmp;
  
#line 2597 
  tmp = netdev_get_tx_queue(dev,0U);
  
#line 2597 
  tmp_0 = netif_tx_queue_stopped((struct netdev_queue const *)tmp);
  
#line 2597 
  return tmp_0;
}


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2943 
int netif_receive_skb_sk(struct sock *, struct sk_buff *);


#line 2944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int netif_receive_skb(struct sk_buff *skb)
{
  int tmp;
  
#line 2946 
  tmp = netif_receive_skb_sk(skb->sk,skb);
  
#line 2946 
  return tmp;
}


#line 3038  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_carrier_ok(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 3040 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& dev->state));
  
#line 3040 
  __retres = (_Bool)(tmp == 0);
  
#line 3040 
  return __retres;
}


#line 3047 
void netif_carrier_on(struct net_device *);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3355 
static int ldv_register_netdev_123(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_120(struct net_device *ldv_func_arg1);


#line 3364 
static void ldv_unregister_netdev_124(struct net_device *ldv_func_arg1);


#line 3532 
struct net_device *netdev_master_upper_dev_get(struct net_device *);


#line 3828 
void netdev_err(struct net_device const *, char const * , ...);


#line 3830 
void netdev_warn(struct net_device const *, char const * , ...);


#line 3834 
void netdev_info(struct net_device const *, char const * , ...);


#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
__inline static __be32 inet_make_mask(int logmask)
{
  __be32 __retres;
  
#line 247 
  if (logmask != 0) {
    unsigned int tmp_0;
    
#line 248 
    if (0 != 0) 
#line 248 
                tmp_0 = (((- (1U << (32 - logmask)) << 24) | ((- (1U << (32 - logmask)) << 8) & 16711680U)) | ((- (1U << (32 - logmask)) >> 8) & 65280U)) | (- (1U << (32 - logmask)) >> 24); else 
                                                                    
#line 248 
                                                                    tmp_0 = __fswab32(- (1U << (32 - logmask)));
    
#line 248 
    __retres = tmp_0;
    
#line 248 
    goto return_label;
  }
  else ;
  
#line 249 
  __retres = 0U;
  return_label: 
#line 249 
                return __retres;
}


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_122(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
static u8 const eth_reserved_addr_base[6U] = {(unsigned char)1U, (unsigned char)128U, (unsigned char)194U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U};

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_link_local_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 73 
  __be16 *a = (__be16 *)addr;
  
#line 74 
  __be16 const *b = (__be16 const *)(& eth_reserved_addr_base);
  
#line 75 
  __be16 const m = (unsigned short)61695U;
  
#line 79 
  __retres = (_Bool)(((*((u32 const *)addr) ^ *((u32 const *)b)) | ((unsigned int)((int)*(a + 2U) ^ (int)*(b + 2U)) & 61695U)) == 0U);
  
#line 79 
  return __retres;
}


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 const *addr)
{
  bool __retres;
  int tmp_3;
  int tmp_0;
  bool tmp;
  
#line 190 
  tmp = is_multicast_ether_addr(addr);
  
#line 190 
  if (tmp) 
#line 190 
           tmp_0 = 0; else 
#line 190 
                           tmp_0 = 1;
  
#line 190 
  if (tmp_0) {
    int tmp_2;
    bool tmp_1;
    
#line 190 
    tmp_1 = is_zero_ether_addr(addr);
    
#line 190 
    if (tmp_1) 
#line 190 
               tmp_2 = 0; else 
#line 190 
                               tmp_2 = 1;
    
#line 190 
    if (tmp_2) 
#line 190 
               tmp_3 = 1; else 
#line 190 
                               tmp_3 = 0;
  }
  else 
#line 190 
       tmp_3 = 0;
  
#line 190 
  __retres = (_Bool)(tmp_3 != 0);
  
#line 190 
  return __retres;
}


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_random_addr(u8 *addr)
{
  
#line 220 
  get_random_bytes((void *)addr,6);
  
#line 221 
  *addr = (unsigned char)((unsigned int)*addr & 254U);
  
#line 222 
  *addr = (unsigned char)((unsigned int)*addr | 2U);
  
#line 223 
  return;
}


#line 258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_hw_addr_random(struct net_device *dev)
{
  
#line 260 
  dev->addr_assign_type = (unsigned char)1U;
  
#line 261 
  eth_random_addr(dev->dev_addr);
  
#line 262 
  return;
}


#line 271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void ether_addr_copy(u8 *dst, u8 const *src)
{
  
#line 274 
  *((u32 *)dst) = *((u32 const *)src);
  
#line 275 
  *((u16 *)(dst + 4U)) = *((u16 const *)(src + 4U));
  
#line 276 
  return;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool ether_addr_equal(u8 const *addr1, u8 const *addr2)
{
  bool __retres;
  
#line 313 
  u32 fold = (*((u32 const *)addr1) ^ *((u32 const *)addr2)) | (unsigned int)((int)*((u16 const *)(addr1 + 4U)) ^ (int)*((u16 const *)(addr2 + 4U)));
  
#line 316 
  __retres = (_Bool)(fold == 0U);
  
#line 316 
  return __retres;
}


#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ctype.h"
extern unsigned char const _ctype[];


#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/switchdev.h"
int call_switchdev_notifiers(unsigned long, struct net_device *, struct switchdev_notifier_info *);


#line 139 
int switchdev_port_bridge_getlink(struct sk_buff *, u32, u32, struct net_device *, u32, int);


#line 142 
int switchdev_port_bridge_setlink(struct net_device *, struct nlmsghdr *, u16);


#line 144 
int switchdev_port_bridge_dellink(struct net_device *, struct nlmsghdr *, u16);


#line 151 
int switchdev_port_fdb_add(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16, u16);


#line 154 
int switchdev_port_fdb_del(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16);


#line 157 
int switchdev_port_fdb_dump(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int);


#line 255  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
__inline static bool neigh_key_eq32(struct neighbour const *n, void const *pkey)
{
  bool __retres;
  
#line 257 
  __retres = (_Bool)(*((u32 const *)(& n->primary_key)) == *((u32 const *)pkey));
  
#line 257 
  return __retres;
}


#line 269  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
__inline static struct neighbour *___neigh_lookup_noref(struct neigh_table *tbl, bool (*key_eq)(struct neighbour const *, void const *), __u32 (*hash)(void const *, struct net_device const *, __u32 *), void const *pkey, struct net_device *dev)
{
  struct neighbour *__retres;
  struct neigh_hash_table *tmp_3;
  struct neighbour *n;
  u32 hash_val;
  __u32 tmp_4;
  struct neighbour *tmp_9;
  struct neighbour *tmp_15;
  {
    struct neigh_hash_table *tmp_0;
    {
      struct neigh_hash_table *tmp;
      {
        union __anonunion___u_348 __u;
        
#line 278 
        __read_once_size((void const volatile *)(& tbl->nht),(void *)(& __u.__c),8);
        
#line 278 
        tmp = __u.__val;
      }
      
#line 278 
      struct neigh_hash_table *_________p1 = tmp;
      
#line 278 
      tmp_0 = _________p1;
    }
    
#line 278 
    struct neigh_hash_table *________p1 = tmp_0;
    {
      bool __warned;
      int tmp_1;
      
#line 278 
      tmp_1 = debug_lockdep_rcu_enabled();
      
#line 278 
      if (tmp_1 != 0) {
        
#line 278 
        if (! __warned) {
          int tmp_2;
          
#line 278 
          tmp_2 = rcu_read_lock_bh_held();
          
#line 278 
          if (tmp_2 == 0) {
            
#line 278 
            __warned = (_Bool)1;
            
#line 278 
            lockdep_rcu_suspicious("include/net/neighbour.h",278,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 278 
    tmp_3 = ________p1;
  }
  
#line 278 
  struct neigh_hash_table *nht = tmp_3;
  
#line 282 
  tmp_4 = (*hash)(pkey,(struct net_device const *)dev,(__u32 *)(& nht->hash_rnd));
  
#line 282 
  hash_val = tmp_4 >> (32U - nht->hash_shift);
  {
    struct neighbour *tmp_6;
    {
      struct neighbour *tmp_5;
      {
        union __anonunion___u_350 __u_0;
        
#line 283 
        __read_once_size((void const volatile *)(nht->hash_buckets + hash_val),(void *)(& __u_0.__c),8);
        
#line 283 
        tmp_5 = __u_0.__val;
      }
      
#line 283 
      struct neighbour *_________p1_0 = tmp_5;
      
#line 283 
      tmp_6 = _________p1_0;
    }
    
#line 283 
    struct neighbour *________p1_0 = tmp_6;
    {
      bool __warned_0;
      int tmp_7;
      
#line 283 
      tmp_7 = debug_lockdep_rcu_enabled();
      
#line 283 
      if (tmp_7 != 0) {
        
#line 283 
        if (! __warned_0) {
          int tmp_8;
          
#line 283 
          tmp_8 = rcu_read_lock_bh_held();
          
#line 283 
          if (tmp_8 == 0) {
            
#line 283 
            __warned_0 = (_Bool)1;
            
#line 283 
            lockdep_rcu_suspicious("include/net/neighbour.h",283,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 283 
    tmp_9 = ________p1_0;
  }
  
#line 283 
  n = tmp_9;
  
#line 283 
  goto ldv_49514;
  ldv_49513: 
#line 284 
  ;
  
#line 286 
  if (n->dev == dev) {
    bool tmp_10;
    
#line 286 
    tmp_10 = (*key_eq)((struct neighbour const *)n,pkey);
    
#line 286 
    if ((int)tmp_10 != 0) {
      
#line 287 
      __retres = n;
      
#line 287 
      goto return_label;
    }
    else ;
  }
  else ;
  {
    struct neighbour *tmp_12;
    {
      struct neighbour *tmp_11;
      {
        union __anonunion___u_352 __u_1;
        
#line 285 
        __read_once_size((void const volatile *)(& n->next),(void *)(& __u_1.__c),8);
        
#line 285 
        tmp_11 = __u_1.__val;
      }
      
#line 285 
      struct neighbour *_________p1_1 = tmp_11;
      
#line 285 
      tmp_12 = _________p1_1;
    }
    
#line 285 
    struct neighbour *________p1_1 = tmp_12;
    {
      bool __warned_1;
      int tmp_13;
      
#line 285 
      tmp_13 = debug_lockdep_rcu_enabled();
      
#line 285 
      if (tmp_13 != 0) {
        
#line 285 
        if (! __warned_1) {
          int tmp_14;
          
#line 285 
          tmp_14 = rcu_read_lock_bh_held();
          
#line 285 
          if (tmp_14 == 0) {
            
#line 285 
            __warned_1 = (_Bool)1;
            
#line 285 
            lockdep_rcu_suspicious("include/net/neighbour.h",285,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 285 
    tmp_15 = ________p1_1;
  }
  
#line 285 
  n = tmp_15;
  ldv_49514: 
#line 287 
  ;
  
#line 283 
  if (n != (struct neighbour *)0) 
#line 286 
                                  goto ldv_49513; else 
#line 289 
                                                       goto ldv_49515;
  ldv_49515: 
#line 290 
  ;
  
#line 290 
  __retres = (struct neighbour *)0;
  return_label: 
#line 290 
                return __retres;
}


#line 306 
struct neighbour *__neigh_create(struct neigh_table *, void const *, struct net_device *, bool);


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
__inline static struct neighbour *neigh_create(struct neigh_table *tbl, void const *pkey, struct net_device *dev)
{
  struct neighbour *tmp;
  
#line 312 
  tmp = __neigh_create(tbl,pkey,dev,(_Bool)1);
  
#line 312 
  return tmp;
}


#line 314 
void neigh_destroy(struct neighbour *);


#line 315 
int __neigh_event_send(struct neighbour *, struct sk_buff *);


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
__inline static void neigh_release(struct neighbour *neigh)
{
  int tmp;
  
#line 410 
  tmp = atomic_dec_and_test(& neigh->refcnt);
  
#line 410 
  if (tmp != 0) 
#line 411 
                neigh_destroy(neigh); else ;
  
#line 412 
  return;
}


#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
__inline static int neigh_event_send(struct neighbour *neigh, struct sk_buff *skb)
{
  int __retres;
  
#line 425 
  unsigned long now = jiffies;
  
#line 427 
  if (neigh->used != now) 
#line 428 
                          neigh->used = now; else ;
  
#line 429 
  if (((int)neigh->nud_state & 218) == 0) {
    int tmp;
    
#line 430 
    tmp = __neigh_event_send(neigh,skb);
    
#line 430 
    __retres = tmp;
    
#line 430 
    goto return_label;
  }
  else ;
  
#line 431 
  __retres = 0;
  return_label: 
#line 431 
                return __retres;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netevent.h"
int register_netevent_notifier(struct notifier_block *);


#line 30 
int unregister_netevent_notifier(struct notifier_block *);


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/arp.h"
extern struct neigh_table arp_tbl;


#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/arp.h"
__inline static u32 arp_hashfn(void const *pkey, struct net_device const *dev, u32 *hash_rnd)
{
  u32 __retres;
  u32 tmp;
  
#line 14 
  u32 key = *((u32 const *)pkey);
  
#line 15 
  tmp = hash32_ptr((void const *)dev);
  
#line 15 
  u32 val = tmp ^ key;
  
#line 17 
  __retres = *hash_rnd * val;
  
#line 17 
  return __retres;
}


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/arp.h"
__inline static struct neighbour *__ipv4_neigh_lookup_noref(struct net_device *dev, u32 key)
{
  struct neighbour *tmp;
  
#line 22 
  tmp = ___neigh_lookup_noref(& arp_tbl,& neigh_key_eq32,& arp_hashfn,(void const *)(& key),dev);
  
#line 22 
  return tmp;
}


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/arp.h"
__inline static struct neighbour *__ipv4_neigh_lookup(struct net_device *dev, u32 key)
{
  struct neighbour *n;
  
#line 29 
  rcu_read_lock_bh();
  
#line 30 
  n = __ipv4_neigh_lookup_noref(dev,key);
  
#line 31 
  if (n != (struct neighbour *)0) {
    int tmp;
    
#line 31 
    tmp = atomic_add_unless(& n->refcnt,1,0);
    
#line 31 
    if (tmp == 0) 
#line 32 
                  n = (struct neighbour *)0; else ;
  }
  else ;
  
#line 33 
  rcu_read_unlock_bh();
  
#line 35 
  return n;
}


#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static char const rocker_driver_name[7U] = {(char)'r', (char)'o', (char)'c', (char)'k', (char)'e', (char)'r', (char)'\000'};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static struct pci_device_id const rocker_pci_id_table[2U] = {{.vendor = 6966U, .device = 6U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static u8 const zero_mac[6U] = {(unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static u8 const ff_mac[6U] = {(unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U};

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static u8 const ll_mac[6U] = {(unsigned char)1U, (unsigned char)128U, (unsigned char)194U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U};

#line 261  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static u8 const ll_mask[6U] = {(unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)240U};

#line 262  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static u8 const mcast_mac[6U] = {(unsigned char)1U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U};

#line 263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static u8 const ipv4_mcast[6U] = {(unsigned char)1U, (unsigned char)0U, (unsigned char)94U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U};

#line 264  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static u8 const ipv4_mask[6U] = {(unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)128U, (unsigned char)0U, (unsigned char)0U};

#line 265  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static u8 const ipv6_mcast[6U] = {(unsigned char)51U, (unsigned char)51U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U};

#line 266  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static u8 const ipv6_mask[6U] = {(unsigned char)255U, (unsigned char)255U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U};

#line 289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static bool rocker_vlan_id_is_internal(__be16 vlan_id)
{
  bool __retres;
  int tmp_0;
  
#line 291 
  u16 start = (unsigned short)3840U;
  
#line 292 
  u16 end = (unsigned short)4094U;
  
#line 293 
  if (0 != 0) 
#line 293 
              tmp_0 = (int)((unsigned short)(((int)vlan_id << 8) | ((int)vlan_id >> 8)));
  else {
    __u16 tmp;
    
#line 293 
    tmp = __fswab16((unsigned short)((int)vlan_id));
    
#line 293 
    tmp_0 = (int)tmp;
  }
  
#line 293 
  u16 _vlan_id = (unsigned short)tmp_0;
  
#line 295 
  __retres = (_Bool)(((int)_vlan_id >= (int)start && (int)_vlan_id <= (int)end) != 0);
  
#line 295 
  return __retres;
}


#line 298  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static __be16 rocker_port_vid_to_vlan(struct rocker_port const *rocker_port, u16 vid, bool *pop_vlan)
{
  __be16 vlan_id;
  
#line 303 
  if (pop_vlan != (bool *)0) 
#line 304 
                             *pop_vlan = (_Bool)0; else ;
  
#line 305 
  if (0 != 0) 
#line 305 
              vlan_id = (unsigned short)(((int)vid << 8) | ((int)vid >> 8)); else 
                                                                    
#line 305 
                                                                    vlan_id = __fswab16((unsigned short)((int)vid));
  
#line 306 
  if ((unsigned int)vlan_id == 0U) {
    
#line 307 
    vlan_id = rocker_port->internal_vlan_id;
    
#line 308 
    if (pop_vlan != (bool *)0) 
#line 309 
                               *pop_vlan = (_Bool)1; else ;
  }
  else ;
  
#line 312 
  return vlan_id;
}


#line 315  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static u16 rocker_port_vlan_to_vid(struct rocker_port const *rocker_port, __be16 vlan_id)
{
  u16 __retres;
  bool tmp;
  int tmp_1;
  
#line 318 
  tmp = rocker_vlan_id_is_internal((unsigned short)((int)vlan_id));
  
#line 318 
  if ((int)tmp != 0) {
    
#line 319 
    __retres = (unsigned short)0U;
    
#line 319 
    goto return_label;
  }
  else ;
  
#line 321 
  if (0 != 0) 
#line 321 
              tmp_1 = (int)((unsigned short)(((int)vlan_id << 8) | ((int)vlan_id >> 8)));
  else {
    __u16 tmp_0;
    
#line 321 
    tmp_0 = __fswab16((unsigned short)((int)vlan_id));
    
#line 321 
    tmp_1 = (int)tmp_0;
  }
  
#line 321 
  __retres = (unsigned short)tmp_1;
  return_label: 
#line 321 
                return __retres;
}


#line 324  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static bool rocker_port_is_bridged(struct rocker_port const *rocker_port)
{
  bool __retres;
  
#line 326 
  __retres = (_Bool)(rocker_port->bridge_dev != (struct net_device *)0);
  
#line 326 
  return __retres;
}


#line 334  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void *__rocker_port_mem_alloc(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, size_t size)
{
  void *__retres;
  unsigned int tmp;
  struct list_head *tmp_3;
  
#line 338 
  struct list_head *elem = (struct list_head *)0;
  
#line 339 
  if (((unsigned long)flags & 2UL) != 0UL) 
#line 339 
                                           tmp = 32U; else 
#line 339 
                                                           tmp = 208U;
  
#line 339 
  gfp_t gfp_flags = tmp;
  
#line 351 
  switch ((unsigned int)trans) {
    int tmp_1;
    case (unsigned int)1: 
#line 352 
    ;
    
#line 353 
    elem = (struct list_head *)kzalloc(size + 16UL,gfp_flags);
    
#line 354 
    if (elem == (struct list_head *)0) {
      
#line 355 
      __retres = (void *)0;
      
#line 355 
      goto return_label;
    }
    else ;
    
#line 356 
    list_add_tail(elem,& rocker_port->trans_mem);
    
#line 357 
    goto ldv_54277;
    case (unsigned int)3: 
#line 358 
    ;
    
#line 359 
    tmp_1 = list_empty((struct list_head const *)(& rocker_port->trans_mem));
    
#line 359 
    if ((long)(tmp_1 != 0) != 0L) {
      
#line 361 
      ldv_inline_asm();
      
#line 359 
      ;
    }
    else ;
    
#line 360 
    elem = rocker_port->trans_mem.next;
    
#line 361 
    list_del_init(elem);
    
#line 362 
    goto ldv_54277;
    case (unsigned int)0: 
#line 363 
    ;
    
#line 364 
    elem = (struct list_head *)kzalloc(size + 16UL,gfp_flags);
    
#line 365 
    if (elem != (struct list_head *)0) 
#line 366 
                                       INIT_LIST_HEAD(elem); else ;
    
#line 367 
    goto ldv_54277;
    default: 
#line 368 
    ;
    
#line 369 
    goto ldv_54277;
  }
  ldv_54277: 
#line 372 
  ;
  
#line 372 
  if (elem != (struct list_head *)0) 
#line 372 
                                     tmp_3 = elem + 1U; else 
#line 372 
                                                             tmp_3 = (struct list_head *)0;
  
#line 372 
  __retres = (void *)tmp_3;
  return_label: 
#line 372 
                return __retres;
}


#line 375  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void *rocker_port_kzalloc(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, size_t size)
{
  void *tmp;
  
#line 379 
  tmp = __rocker_port_mem_alloc(rocker_port,trans,flags,size);
  
#line 379 
  return tmp;
}


#line 382  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void *rocker_port_kcalloc(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, size_t n, size_t size)
{
  void *tmp;
  
#line 386 
  tmp = __rocker_port_mem_alloc(rocker_port,trans,flags,n * size);
  
#line 386 
  return tmp;
}


#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_port_kfree(enum switchdev_trans trans, void const *mem)
{
  struct list_head *elem;
  int tmp;
  
#line 398 
  if (trans == (unsigned int)SWITCHDEV_TRANS_PREPARE) 
#line 399 
                                                      goto return_label; else ;
  
#line 401 
  elem = (struct list_head *)mem + 18446744073709551615U;
  
#line 402 
  tmp = list_empty((struct list_head const *)elem);
  
#line 402 
  if ((long)(tmp == 0) != 0L) {
    
#line 404 
    ldv_inline_asm();
    
#line 402 
    ;
  }
  else ;
  
#line 403 
  kfree((void const *)elem);
  return_label: 
#line 404 
                return;
}


#line 412  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_wait_reset(struct rocker_wait *wait)
{
  
#line 414 
  wait->done = (_Bool)0;
  
#line 415 
  wait->nowait = (_Bool)0;
  
#line 416 
  return;
}


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_wait_init(struct rocker_wait *wait)
{
  {
    struct lock_class_key __key;
    
#line 420 
    __init_waitqueue_head(& wait->wait,"&wait->wait",& __key);
  }
  
#line 421 
  rocker_wait_reset(wait);
  
#line 422 
  return;
}


#line 424  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static struct rocker_wait *rocker_wait_create(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags)
{
  struct rocker_wait *__retres;
  struct rocker_wait *wait;
  
#line 430 
  wait = (struct rocker_wait *)rocker_port_kzalloc(rocker_port,trans,flags,96UL);
  
#line 431 
  if (wait == (struct rocker_wait *)0) {
    
#line 432 
    __retres = (struct rocker_wait *)0;
    
#line 432 
    goto return_label;
  }
  else ;
  
#line 433 
  rocker_wait_init(wait);
  
#line 434 
  __retres = wait;
  return_label: 
#line 434 
                return __retres;
}


#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_wait_destroy(enum switchdev_trans trans, struct rocker_wait *wait)
{
  
#line 440 
  rocker_port_kfree(trans,(void const *)wait);
  
#line 441 
  return;
}


#line 443  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static bool rocker_wait_event_timeout(struct rocker_wait *wait, unsigned long timeout)
{
  bool __retres;
  {
    
#line 446 
    long __ret = 25L;
    
#line 446 
    __might_sleep("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c",446,0);
    {
      int tmp_2;
      {
        
#line 446 
        bool __cond_0 = wait->done;
        
#line 446 
        if ((int)__cond_0 != 0 && __ret == 0L) 
#line 446 
                                               __ret = 1L; else ;
        
#line 446 
        tmp_2 = ((int)__cond_0 != 0 || __ret == 0L) != 0;
      }
      
#line 446 
      if (tmp_2 == 0) {
        long tmp_1;
        {
          wait_queue_t __wait;
          
#line 446 
          long __ret_0 = 25L;
          
#line 446 
          INIT_LIST_HEAD(& __wait.task_list);
          
#line 446 
          __wait.flags = 0U;
          ldv_54334: 
#line 449 
          ;
          {
            int tmp_0;
            
#line 446 
            long __int = prepare_to_wait_event(& wait->wait,& __wait,2);
            {
              
#line 446 
              bool __cond = wait->done;
              
#line 446 
              if ((int)__cond != 0 && __ret_0 == 0L) 
#line 446 
                                                     __ret_0 = 1L; else ;
              
#line 446 
              tmp_0 = ((int)__cond != 0 || __ret_0 == 0L) != 0;
            }
            
#line 446 
            if (tmp_0 != 0) 
#line 446 
                            goto ldv_54333; else ;
            
#line 446 
            __ret_0 = schedule_timeout(__ret_0);
          }
          
#line 446 
          goto ldv_54334;
          ldv_54333: 
#line 447 
          ;
          
#line 446 
          finish_wait(& wait->wait,& __wait);
          __out_0: 
#line 446 
          ;
          
#line 446 
          tmp_1 = __ret_0;
        }
        
#line 446 
        __ret = tmp_1;
      }
      else ;
    }
    
#line 446 
    long tmp_3 = __ret;
  }
  
#line 447 
  if (! wait->done) {
    
#line 448 
    __retres = (_Bool)0;
    
#line 448 
    goto return_label;
  }
  else ;
  
#line 449 
  __retres = (_Bool)1;
  return_label: 
#line 449 
                return __retres;
}


#line 452  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_wait_wake_up(struct rocker_wait *wait)
{
  
#line 454 
  wait->done = (_Bool)1;
  
#line 455 
  __wake_up(& wait->wait,3U,1,(void *)0);
  
#line 456 
  return;
}


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static u32 rocker_msix_vector(struct rocker const *rocker, unsigned int vector)
{
  u32 __retres;
  
#line 460 
  __retres = (rocker->msix_entries + vector)->vector;
  
#line 460 
  return __retres;
}


#line 463  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static u32 rocker_msix_tx_vector(struct rocker_port const *rocker_port)
{
  u32 tmp;
  
#line 465 
  tmp = rocker_msix_vector((struct rocker const *)rocker_port->rocker,(rocker_port->port_number + 2U) * 2U);
  
#line 465 
  return tmp;
}


#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static u32 rocker_msix_rx_vector(struct rocker_port const *rocker_port)
{
  u32 tmp;
  
#line 471 
  tmp = rocker_msix_vector((struct rocker const *)rocker_port->rocker,rocker_port->port_number * 2U + 5U);
  
#line 471 
  return tmp;
}


#line 488  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_reg_test(struct rocker const *rocker)
{
  int __retres;
  u64 test_reg;
  u64 rnd;
  u32 tmp;
  unsigned int tmp_0;
  u32 tmp_1;
  u32 tmp_2;
  
#line 490 
  struct pci_dev const *pdev = (struct pci_dev const *)rocker->pdev;
  
#line 494 
  tmp = prandom_u32();
  
#line 494 
  rnd = (unsigned long long)tmp;
  
#line 495 
  rnd >>= 1;
  
#line 496 
  writel((unsigned int)rnd,(void volatile *)(rocker->hw_addr + 16U));
  
#line 497 
  tmp_0 = readl((void const volatile *)(rocker->hw_addr + 16U));
  
#line 497 
  test_reg = (unsigned long long)tmp_0;
  
#line 498 
  if (rnd * 2ULL != test_reg) {
    
#line 499 
    dev_err(& pdev->dev,"unexpected 32bit register value %08llx, expected %08llx\n",test_reg,rnd * 2ULL);
    
#line 501 
    __retres = -5;
    
#line 501 
    goto return_label;
  }
  else ;
  
#line 504 
  tmp_1 = prandom_u32();
  
#line 504 
  rnd = (unsigned long long)tmp_1;
  
#line 505 
  rnd <<= 31;
  
#line 506 
  tmp_2 = prandom_u32();
  
#line 506 
  rnd = (unsigned long long)tmp_2 | rnd;
  
#line 507 
  writeq((unsigned long)rnd,(void volatile *)(rocker->hw_addr + 24U));
  
#line 508 
  test_reg = (u64)readq((void const volatile *)(rocker->hw_addr + 24U));
  
#line 509 
  if (rnd * 2ULL != test_reg) {
    
#line 510 
    dev_err(& pdev->dev,"unexpected 64bit register value %16llx, expected %16llx\n",test_reg,rnd * 2ULL);
    
#line 512 
    __retres = -5;
    
#line 512 
    goto return_label;
  }
  else ;
  
#line 515 
  __retres = 0;
  return_label: 
#line 515 
                return __retres;
}


#line 518  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_dma_test_one(struct rocker const *rocker, struct rocker_wait *wait, u32 test_type, dma_addr_t dma_handle, unsigned char const *buf, unsigned char const *expect, size_t size)
{
  int __retres;
  int i;
  int tmp_0;
  bool tmp;
  
#line 523 
  struct pci_dev const *pdev = (struct pci_dev const *)rocker->pdev;
  
#line 526 
  rocker_wait_reset(wait);
  
#line 527 
  writel(test_type,(void volatile *)(rocker->hw_addr + 52U));
  
#line 529 
  tmp = rocker_wait_event_timeout(wait,25UL);
  
#line 529 
  if (tmp) 
#line 529 
           tmp_0 = 0; else 
#line 529 
                           tmp_0 = 1;
  
#line 529 
  if (tmp_0) {
    
#line 530 
    dev_err(& pdev->dev,"no interrupt received within a timeout\n");
    
#line 531 
    __retres = -5;
    
#line 531 
    goto return_label;
  }
  else ;
  
#line 534 
  i = 0;
  
#line 534 
  goto ldv_54368;
  ldv_54367: 
#line 535 
  ;
  
#line 535 
  if ((int)*(buf + i) != (int)*(expect + i)) {
    
#line 536 
    dev_err(& pdev->dev,"unexpected memory content %02x at byte %x\n, %02x expected",(int)*(buf + i),i,(int)*(expect + i));
    
#line 538 
    __retres = -5;
    
#line 538 
    goto return_label;
  }
  else ;
  
#line 534 
  i += 1;
  ldv_54368: 
#line 535 
  ;
  
#line 534 
  if ((unsigned long)i < size) 
#line 536 
                               goto ldv_54367; else 
#line 539 
                                                    goto ldv_54369;
  ldv_54369: 
#line 540 
  ;
  
#line 541 
  __retres = 0;
  return_label: 
#line 541 
                return __retres;
}


#line 547  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_dma_test_offset(struct rocker const *rocker, struct rocker_wait *wait, int offset)
{
  int __retres;
  unsigned char *alloc;
  unsigned char *buf;
  unsigned char *expect;
  dma_addr_t dma_handle;
  int i;
  int err;
  int tmp_0;
  
#line 550 
  struct pci_dev *pdev = rocker->pdev;
  
#line 558 
  alloc = (unsigned char *)kzalloc((unsigned long)offset + 32768UL,209U);
  
#line 560 
  if (alloc == (unsigned char *)0U) {
    
#line 561 
    __retres = -12;
    
#line 561 
    goto return_label;
  }
  else ;
  
#line 562 
  buf = alloc + offset;
  
#line 563 
  expect = buf + 16384U;
  
#line 565 
  dma_handle = pci_map_single(pdev,(void *)buf,16384UL,0);
  
#line 567 
  tmp_0 = pci_dma_mapping_error(pdev,dma_handle);
  
#line 567 
  if (tmp_0 != 0) {
    
#line 568 
    err = -5;
    
#line 569 
    goto free_alloc;
  }
  else ;
  
#line 572 
  writeq((unsigned long)dma_handle,(void volatile *)(rocker->hw_addr + 40U));
  
#line 573 
  writel(16384U,(void volatile *)(rocker->hw_addr + 48U));
  
#line 575 
  memset((void *)expect,150,16384UL);
  
#line 576 
  err = rocker_dma_test_one(rocker,wait,2U,dma_handle,(unsigned char const *)buf,(unsigned char const *)expect,16384UL);
  
#line 579 
  if (err != 0) 
#line 580 
                goto unmap; else ;
  
#line 582 
  memset((void *)expect,0,16384UL);
  
#line 583 
  err = rocker_dma_test_one(rocker,wait,1U,dma_handle,(unsigned char const *)buf,(unsigned char const *)expect,16384UL);
  
#line 586 
  if (err != 0) 
#line 587 
                goto unmap; else ;
  
#line 589 
  prandom_bytes((void *)buf,16384UL);
  
#line 590 
  i = 0;
  
#line 590 
  goto ldv_54385;
  ldv_54384: 
#line 591 
  ;
  
#line 591 
  *(expect + i) = (unsigned char)(~ ((int)*(buf + i)));
  
#line 590 
  i += 1;
  ldv_54385: 
#line 591 
  ;
  
#line 590 
  if ((unsigned int)i <= 16383U) 
#line 592 
                                 goto ldv_54384; else 
#line 595 
                                                      goto ldv_54386;
  ldv_54386: 
#line 596 
  ;
  
#line 592 
  err = rocker_dma_test_one(rocker,wait,4U,dma_handle,(unsigned char const *)buf,(unsigned char const *)expect,16384UL);
  
#line 595 
  if (err != 0) 
#line 596 
                goto unmap; else ;
  unmap: 
#line 598 
  ;
  
#line 599 
  pci_unmap_single(pdev,dma_handle,16384UL,0);
  free_alloc: 
#line 601 
  ;
  
#line 602 
  kfree((void const *)alloc);
  
#line 604 
  __retres = err;
  return_label: 
#line 604 
                return __retres;
}


#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_dma_test(struct rocker const *rocker, struct rocker_wait *wait)
{
  int __retres;
  int i;
  int err;
  
#line 613 
  i = 0;
  
#line 613 
  goto ldv_54394;
  ldv_54393: 
#line 614 
  ;
  
#line 614 
  err = rocker_dma_test_offset(rocker,wait,i);
  
#line 615 
  if (err != 0) {
    
#line 616 
    __retres = err;
    
#line 616 
    goto return_label;
  }
  else ;
  
#line 613 
  i += 1;
  ldv_54394: 
#line 614 
  ;
  
#line 613 
  if (i <= 7) 
#line 615 
              goto ldv_54393; else 
#line 618 
                                   goto ldv_54395;
  ldv_54395: 
#line 619 
  ;
  
#line 618 
  __retres = 0;
  return_label: 
#line 618 
                return __retres;
}


#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static irqreturn_t rocker_test_irq_handler(int irq, void *dev_id)
{
  irqreturn_t __retres;
  
#line 623 
  struct rocker_wait *wait = (struct rocker_wait *)dev_id;
  
#line 625 
  rocker_wait_wake_up(wait);
  
#line 627 
  __retres = IRQ_HANDLED;
  
#line 627 
  return __retres;
}


#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_basic_hw_test(struct rocker const *rocker)
{
  int __retres;
  struct rocker_wait wait;
  int err;
  u32 tmp;
  int tmp_1;
  bool tmp_0;
  u32 tmp_2;
  
#line 632 
  struct pci_dev const *pdev = (struct pci_dev const *)rocker->pdev;
  
#line 636 
  err = rocker_reg_test(rocker);
  
#line 637 
  if (err != 0) {
    
#line 638 
    dev_err(& pdev->dev,"reg test failed\n");
    
#line 639 
    __retres = err;
    
#line 639 
    goto return_label;
  }
  else ;
  
#line 642 
  tmp = rocker_msix_vector(rocker,2U);
  
#line 642 
  err = ldv_request_irq_73(tmp,& rocker_test_irq_handler,0UL,(char const *)(& rocker_driver_name),(void *)(& wait));
  
#line 645 
  if (err != 0) {
    
#line 646 
    dev_err(& pdev->dev,"cannot assign test irq\n");
    
#line 647 
    __retres = err;
    
#line 647 
    goto return_label;
  }
  else ;
  
#line 650 
  rocker_wait_init(& wait);
  
#line 651 
  writel(2U,(void volatile *)(rocker->hw_addr + 32U));
  
#line 653 
  tmp_0 = rocker_wait_event_timeout(& wait,25UL);
  
#line 653 
  if (tmp_0) 
#line 653 
             tmp_1 = 0; else 
#line 653 
                             tmp_1 = 1;
  
#line 653 
  if (tmp_1) {
    
#line 654 
    dev_err(& pdev->dev,"no interrupt received within a timeout\n");
    
#line 655 
    err = -5;
    
#line 656 
    goto free_irq;
  }
  else ;
  
#line 659 
  err = rocker_dma_test(rocker,& wait);
  
#line 660 
  if (err != 0) 
#line 661 
                dev_err(& pdev->dev,"dma test failed\n"); else ;
  free_irq: 
#line 663 
  ;
  
#line 664 
  tmp_2 = rocker_msix_vector(rocker,2U);
  
#line 664 
  ldv_free_irq_74(tmp_2,(void *)(& wait));
  
#line 665 
  __retres = err;
  return_label: 
#line 665 
                return __retres;
}


#line 685  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static struct rocker_tlv *rocker_tlv_next(struct rocker_tlv const *tlv, int *remaining)
{
  struct rocker_tlv *__retres;
  
#line 688 
  int totlen = (int)((unsigned int)tlv->len + 7U) & -8;
  
#line 690 
  *remaining -= totlen;
  
#line 691 
  __retres = (struct rocker_tlv *)tlv + totlen;
  
#line 691 
  return __retres;
}


#line 694  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_tlv_ok(struct rocker_tlv const *tlv, int remaining)
{
  int __retres;
  
#line 697 
  __retres = ((remaining > 7 && (unsigned int)tlv->len > 7U) && (int)tlv->len <= remaining) != 0;
  
#line 697 
  return __retres;
}


#line 710  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_tlv_attr_size(int payload)
{
  int __retres;
  
#line 712 
  __retres = (int)((unsigned int)payload + 8U);
  
#line 712 
  return __retres;
}


#line 715  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_tlv_total_size(int payload)
{
  int __retres;
  int tmp;
  
#line 717 
  tmp = rocker_tlv_attr_size(payload);
  
#line 717 
  __retres = (int)((unsigned int)tmp + 7U) & -8;
  
#line 717 
  return __retres;
}


#line 720  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_tlv_padlen(int payload)
{
  int __retres;
  int tmp;
  int tmp_0;
  
#line 722 
  tmp = rocker_tlv_total_size(payload);
  
#line 722 
  tmp_0 = rocker_tlv_attr_size(payload);
  
#line 722 
  __retres = tmp - tmp_0;
  
#line 722 
  return __retres;
}


#line 725  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_tlv_type(struct rocker_tlv const *tlv)
{
  int __retres;
  
#line 727 
  __retres = (int)tlv->type;
  
#line 727 
  return __retres;
}


#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void *rocker_tlv_data(struct rocker_tlv const *tlv)
{
  void *__retres;
  
#line 732 
  __retres = (void *)tlv + 8U;
  
#line 732 
  return __retres;
}


#line 735  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_tlv_len(struct rocker_tlv const *tlv)
{
  int __retres;
  
#line 737 
  __retres = (int)((unsigned int)tlv->len + 4294967288U);
  
#line 737 
  return __retres;
}


#line 740  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static u8 rocker_tlv_get_u8(struct rocker_tlv const *tlv)
{
  u8 __retres;
  void *tmp;
  
#line 742 
  tmp = rocker_tlv_data(tlv);
  
#line 742 
  __retres = *((u8 *)tmp);
  
#line 742 
  return __retres;
}


#line 745  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static u16 rocker_tlv_get_u16(struct rocker_tlv const *tlv)
{
  u16 __retres;
  void *tmp;
  
#line 747 
  tmp = rocker_tlv_data(tlv);
  
#line 747 
  __retres = *((u16 *)tmp);
  
#line 747 
  return __retres;
}


#line 750  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static __be16 rocker_tlv_get_be16(struct rocker_tlv const *tlv)
{
  __be16 __retres;
  void *tmp;
  
#line 752 
  tmp = rocker_tlv_data(tlv);
  
#line 752 
  __retres = *((__be16 *)tmp);
  
#line 752 
  return __retres;
}


#line 755  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static u32 rocker_tlv_get_u32(struct rocker_tlv const *tlv)
{
  u32 __retres;
  void *tmp;
  
#line 757 
  tmp = rocker_tlv_data(tlv);
  
#line 757 
  __retres = *((u32 *)tmp);
  
#line 757 
  return __retres;
}


#line 760  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static u64 rocker_tlv_get_u64(struct rocker_tlv const *tlv)
{
  u64 __retres;
  void *tmp;
  
#line 762 
  tmp = rocker_tlv_data(tlv);
  
#line 762 
  __retres = *((u64 *)tmp);
  
#line 762 
  return __retres;
}


#line 765  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_tlv_parse(struct rocker_tlv const **tb, int maxtype, char const *buf, int buf_len)
{
  struct rocker_tlv const *tlv;
  int rem;
  int tmp_1;
  
#line 769 
  struct rocker_tlv const *head = (struct rocker_tlv const *)buf;
  
#line 772 
  memset((void *)tb,0,(unsigned long)(maxtype + 1) * 8UL);
  
#line 774 
  tlv = head;
  
#line 774 
  rem = buf_len;
  
#line 774 
  goto ldv_54461;
  ldv_54460: 
#line 775 
  ;
  {
    int tmp;
    
#line 775 
    tmp = rocker_tlv_type(tlv);
    
#line 775 
    u32 type = (unsigned int)tmp;
    
#line 777 
    if (type != 0U && type <= (unsigned int)maxtype) 
#line 778 
                                                     *(tb + type) = tlv; else ;
  }
  
#line 774 
  tlv = (struct rocker_tlv const *)rocker_tlv_next(tlv,& rem);
  ldv_54461: 
#line 775 
  ;
  
#line 774 
  tmp_1 = rocker_tlv_ok(tlv,rem);
  
#line 774 
  if (tmp_1 != 0) 
#line 776 
                  goto ldv_54460; else 
#line 779 
                                       goto ldv_54462;
  ldv_54462: 
#line 780 
  ;
  
#line 781 
  return;
}


#line 782  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_tlv_parse_nested(struct rocker_tlv const **tb, int maxtype, struct rocker_tlv const *tlv)
{
  int tmp;
  void *tmp_0;
  
#line 785 
  tmp = rocker_tlv_len(tlv);
  
#line 785 
  tmp_0 = rocker_tlv_data(tlv);
  
#line 785 
  ;
  
#line 785 
  ;
  
#line 785 
  rocker_tlv_parse(tb,maxtype,(char const *)tmp_0,tmp);
  
#line 787 
  return;
}


#line 789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_tlv_parse_desc(struct rocker_tlv const **tb, int maxtype, struct rocker_desc_info const *desc_info)
{
  
#line 792 
  rocker_tlv_parse(tb,maxtype,(char const *)desc_info->data,(int)(desc_info->desc)->tlv_size);
  
#line 794 
  return;
}


#line 796  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static struct rocker_tlv *rocker_tlv_start(struct rocker_desc_info *desc_info)
{
  struct rocker_tlv *__retres;
  
#line 798 
  __retres = (struct rocker_tlv *)(desc_info->data + desc_info->tlv_size);
  
#line 798 
  return __retres;
}


#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_tlv_put(struct rocker_desc_info *desc_info, int attrtype, int attrlen, void const *data)
{
  int __retres;
  struct rocker_tlv *tlv;
  int tmp_0;
  void *tmp_1;
  int tmp_2;
  
#line 805 
  int tail_room = (int)(desc_info->data_size - desc_info->tlv_size);
  
#line 806 
  int total_size = rocker_tlv_total_size(attrlen);
  
#line 809 
  if ((long)(tail_room < total_size) != 0L) {
    
#line 810 
    __retres = -90;
    
#line 810 
    goto return_label;
  }
  else ;
  
#line 812 
  tlv = rocker_tlv_start(desc_info);
  
#line 813 
  desc_info->tlv_size += (unsigned long)total_size;
  
#line 814 
  tlv->type = (unsigned int)attrtype;
  
#line 815 
  tmp_0 = rocker_tlv_attr_size(attrlen);
  
#line 815 
  tlv->len = (unsigned short)tmp_0;
  
#line 816 
  ;
  
#line 816 
  ;
  
#line 816 
  tmp_1 = rocker_tlv_data((struct rocker_tlv const *)tlv);
  
#line 816 
  memcpy(tmp_1,data,(unsigned long)attrlen);
  
#line 817 
  tmp_2 = rocker_tlv_padlen(attrlen);
  
#line 817 
  ;
  
#line 817 
  memset((void *)tlv + (int)tlv->len,0,(unsigned long)tmp_2);
  
#line 818 
  __retres = 0;
  return_label: 
#line 818 
                return __retres;
}


#line 821  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_tlv_put_u8(struct rocker_desc_info *desc_info, int attrtype, u8 value)
{
  int tmp;
  
#line 824 
  tmp = rocker_tlv_put(desc_info,attrtype,1,(void const *)(& value));
  
#line 824 
  return tmp;
}


#line 827  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_tlv_put_u16(struct rocker_desc_info *desc_info, int attrtype, u16 value)
{
  int tmp;
  
#line 830 
  tmp = rocker_tlv_put(desc_info,attrtype,2,(void const *)(& value));
  
#line 830 
  return tmp;
}


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_tlv_put_be16(struct rocker_desc_info *desc_info, int attrtype, __be16 value)
{
  int tmp;
  
#line 836 
  tmp = rocker_tlv_put(desc_info,attrtype,2,(void const *)(& value));
  
#line 836 
  return tmp;
}


#line 839  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_tlv_put_u32(struct rocker_desc_info *desc_info, int attrtype, u32 value)
{
  int tmp;
  
#line 842 
  tmp = rocker_tlv_put(desc_info,attrtype,4,(void const *)(& value));
  
#line 842 
  return tmp;
}


#line 845  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_tlv_put_be32(struct rocker_desc_info *desc_info, int attrtype, __be32 value)
{
  int tmp;
  
#line 848 
  tmp = rocker_tlv_put(desc_info,attrtype,4,(void const *)(& value));
  
#line 848 
  return tmp;
}


#line 851  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_tlv_put_u64(struct rocker_desc_info *desc_info, int attrtype, u64 value)
{
  int tmp;
  
#line 854 
  tmp = rocker_tlv_put(desc_info,attrtype,8,(void const *)(& value));
  
#line 854 
  return tmp;
}


#line 858  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static struct rocker_tlv *rocker_tlv_nest_start(struct rocker_desc_info *desc_info, int attrtype)
{
  struct rocker_tlv *__retres;
  int tmp_0;
  
#line 860 
  struct rocker_tlv *start = rocker_tlv_start(desc_info);
  
#line 862 
  tmp_0 = rocker_tlv_put(desc_info,attrtype,0,(void const *)0);
  
#line 862 
  if (tmp_0 < 0) {
    
#line 863 
    __retres = (struct rocker_tlv *)0;
    
#line 863 
    goto return_label;
  }
  else ;
  
#line 865 
  __retres = start;
  return_label: 
#line 865 
                return __retres;
}


#line 868  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_tlv_nest_end(struct rocker_desc_info *desc_info, struct rocker_tlv *start)
{
  struct rocker_tlv *tmp;
  
#line 871 
  tmp = rocker_tlv_start(desc_info);
  
#line 871 
  start->len = (unsigned short)((long)tmp - (long)start);
  
#line 872 
  return;
}


#line 874  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_tlv_nest_cancel(struct rocker_desc_info *desc_info, struct rocker_tlv const *start)
{
  
#line 877 
  desc_info->tlv_size = (unsigned long)((long)start - (long)desc_info->data);
  
#line 878 
  return;
}


#line 884  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static u32 __pos_inc(u32 pos, size_t limit)
{
  u32 tmp;
  
#line 886 
  pos += 1U;
  
#line 886 
  ;
  
#line 886 
  if ((unsigned long)pos != limit) 
#line 886 
                                   tmp = pos; else 
#line 886 
                                                   tmp = 0U;
  
#line 886 
  return tmp;
}


#line 889  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_desc_err(struct rocker_desc_info const *desc_info)
{
  int __retres;
  
#line 891 
  int err = (int)(desc_info->desc)->comp_err & -32769;
  
#line 893 
  switch (err) {
    case 0: 
#line 894 
    ;
    
#line 895 
    __retres = 0;
    
#line 895 
    goto return_label;
    case -2: 
#line 896 
    ;
    
#line 897 
    __retres = -2;
    
#line 897 
    goto return_label;
    case -6: 
#line 898 
    ;
    
#line 899 
    __retres = -6;
    
#line 899 
    goto return_label;
    case -12: 
#line 900 
    ;
    
#line 901 
    __retres = -12;
    
#line 901 
    goto return_label;
    case -17: 
#line 902 
    ;
    
#line 903 
    __retres = -17;
    
#line 903 
    goto return_label;
    case -22: 
#line 904 
    ;
    
#line 905 
    __retres = -22;
    
#line 905 
    goto return_label;
    case -90: 
#line 906 
    ;
    
#line 907 
    __retres = -90;
    
#line 907 
    goto return_label;
    case -95: 
#line 908 
    ;
    
#line 909 
    __retres = -95;
    
#line 909 
    goto return_label;
    case -105: 
#line 910 
    ;
    
#line 911 
    __retres = -105;
    
#line 911 
    goto return_label;
  }
  
#line 914 
  __retres = -22;
  return_label: 
#line 914 
                return __retres;
}


#line 917  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_desc_gen_clear(struct rocker_desc_info const *desc_info)
{
  
#line 919 
  (desc_info->desc)->comp_err = (unsigned short)((unsigned int)(desc_info->desc)->comp_err & 32767U);
  
#line 920 
  return;
}


#line 922  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static bool rocker_desc_gen(struct rocker_desc_info const *desc_info)
{
  bool __retres;
  
#line 924 
  u32 comp_err = (unsigned int)(desc_info->desc)->comp_err;
  
#line 926 
  __retres = (_Bool)(((int)((unsigned long)comp_err >> 15) & 1) != 0);
  
#line 926 
  return __retres;
}


#line 929  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void *rocker_desc_cookie_ptr_get(struct rocker_desc_info const *desc_info)
{
  void *__retres;
  
#line 931 
  __retres = (void *)(desc_info->desc)->cookie;
  
#line 931 
  return __retres;
}


#line 934  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_desc_cookie_ptr_set(struct rocker_desc_info const *desc_info, void *ptr)
{
  
#line 937 
  (desc_info->desc)->cookie = (unsigned long long)ptr;
  
#line 938 
  return;
}


#line 941  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static struct rocker_desc_info *rocker_desc_head_get(struct rocker_dma_ring_info const *info)
{
  struct rocker_desc_info *__retres;
  struct rocker_desc_info *desc_info;
  
#line 944 
  u32 head = __pos_inc(info->head,info->size);
  
#line 946 
  desc_info = info->desc_info + info->head;
  
#line 947 
  if (info->tail == head) {
    
#line 948 
    __retres = (struct rocker_desc_info *)0;
    
#line 948 
    goto return_label;
  }
  else ;
  
#line 949 
  desc_info->tlv_size = 0UL;
  
#line 950 
  __retres = desc_info;
  return_label: 
#line 950 
                return __retres;
}


#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_desc_commit(struct rocker_desc_info const *desc_info)
{
  
#line 955 
  (desc_info->desc)->buf_size = (unsigned short)desc_info->data_size;
  
#line 956 
  (desc_info->desc)->tlv_size = (unsigned short)desc_info->tlv_size;
  
#line 957 
  return;
}


#line 959  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_desc_head_set(struct rocker const *rocker, struct rocker_dma_ring_info *info, struct rocker_desc_info const *desc_info)
{
  
#line 963 
  u32 head = __pos_inc(info->head,info->size);
  
#line 965 
  if ((long)(info->tail == head) != 0L) {
    
#line 967 
    ldv_inline_asm();
    
#line 965 
    ;
  }
  else ;
  
#line 966 
  rocker_desc_commit(desc_info);
  
#line 967 
  info->head = head;
  
#line 968 
  writel(head,(void volatile *)(rocker->hw_addr + (info->type * 32U + 4108U)));
  
#line 969 
  return;
}


#line 972  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static struct rocker_desc_info *rocker_desc_tail_get(struct rocker_dma_ring_info *info)
{
  struct rocker_desc_info *__retres;
  struct rocker_desc_info *desc_info;
  int tmp_0;
  bool tmp;
  
#line 976 
  if (info->tail == info->head) {
    
#line 977 
    __retres = (struct rocker_desc_info *)0;
    
#line 977 
    goto return_label;
  }
  else ;
  
#line 978 
  desc_info = info->desc_info + info->tail;
  
#line 979 
  tmp = rocker_desc_gen((struct rocker_desc_info const *)desc_info);
  
#line 979 
  if (tmp) 
#line 979 
           tmp_0 = 0; else 
#line 979 
                           tmp_0 = 1;
  
#line 979 
  if (tmp_0) {
    
#line 980 
    __retres = (struct rocker_desc_info *)0;
    
#line 980 
    goto return_label;
  }
  else ;
  
#line 981 
  info->tail = __pos_inc(info->tail,info->size);
  
#line 982 
  desc_info->tlv_size = (unsigned long)(desc_info->desc)->tlv_size;
  
#line 983 
  __retres = desc_info;
  return_label: 
#line 983 
                return __retres;
}


#line 986  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_dma_ring_credits_set(struct rocker const *rocker, struct rocker_dma_ring_info const *info, u32 credits)
{
  
#line 990 
  if (credits != 0U) 
#line 991 
                     writel(credits,(void volatile *)(rocker->hw_addr + (info->type * 32U + 4120U))); else ;
  
#line 992 
  return;
}


#line 994  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static unsigned long rocker_dma_ring_size_fix(size_t size)
{
  unsigned long tmp_74;
  {
    unsigned long tmp_72;
    unsigned long tmp_73;
    
#line 996 
    unsigned long _max1 = 2UL;
    {
      unsigned long tmp_70;
      unsigned long tmp_71;
      
#line 996 
      if (0 != 0) {
        unsigned long tmp_68;
        
#line 996 
        if (size != 1UL) {
          unsigned long tmp_67;
          
#line 996 
          if (0 != 0) {
            unsigned long tmp_65;
            
#line 996 
            if (size == 1UL) {
              int tmp;
              
#line 996 
              tmp = ____ilog2_NaN();
              
#line 996 
              tmp_65 = 1UL << (tmp + 1);
            }
            else {
              unsigned long tmp_64;
              
#line 996 
              if (size + 18446744073709551615UL >= (size_t)0) {
                unsigned long tmp_63;
                
#line 996 
                if (((unsigned long long)(size + 18446744073709551615UL) & 4611686018427387904ULL) == 0ULL) {
                  unsigned long tmp_62;
                  
#line 996 
                  if (((unsigned long long)(size + 18446744073709551615UL) & 2305843009213693952ULL) == 0ULL) {
                    unsigned long tmp_61;
                    
#line 996 
                    if (((unsigned long long)(size + 18446744073709551615UL) & 1152921504606846976ULL) == 0ULL) {
                      unsigned long tmp_60;
                      
#line 996 
                      if (((unsigned long long)(size + 18446744073709551615UL) & 576460752303423488ULL) == 0ULL) {
                        unsigned long tmp_59;
                        
#line 996 
                        if (((unsigned long long)(size + 18446744073709551615UL) & 288230376151711744ULL) == 0ULL) {
                          unsigned long tmp_58;
                          
#line 996 
                          if (((unsigned long long)(size + 18446744073709551615UL) & 144115188075855872ULL) == 0ULL) {
                            unsigned long tmp_57;
                            
#line 996 
                            if (((unsigned long long)(size + 18446744073709551615UL) & 72057594037927936ULL) == 0ULL) {
                              unsigned long tmp_56;
                              
#line 996 
                              if (((unsigned long long)(size + 18446744073709551615UL) & 36028797018963968ULL) == 0ULL) {
                                unsigned long tmp_55;
                                
#line 996 
                                if (((unsigned long long)(size + 18446744073709551615UL) & 18014398509481984ULL) == 0ULL) {
                                  unsigned long tmp_54;
                                  
#line 996 
                                  if (((unsigned long long)(size + 18446744073709551615UL) & 9007199254740992ULL) == 0ULL) {
                                    unsigned long tmp_53;
                                    
#line 996 
                                    if (((unsigned long long)(size + 18446744073709551615UL) & 4503599627370496ULL) == 0ULL) {
                                      unsigned long tmp_52;
                                      
#line 996 
                                      if (((unsigned long long)(size + 18446744073709551615UL) & 2251799813685248ULL) == 0ULL) {
                                        unsigned long tmp_51;
                                        
#line 996 
                                        if (((unsigned long long)(size + 18446744073709551615UL) & 1125899906842624ULL) == 0ULL) {
                                          unsigned long tmp_50;
                                          
#line 996 
                                          if (((unsigned long long)(size + 18446744073709551615UL) & 562949953421312ULL) == 0ULL) {
                                            unsigned long tmp_49;
                                            
#line 996 
                                            if (((unsigned long long)(size + 18446744073709551615UL) & 281474976710656ULL) == 0ULL) {
                                              unsigned long tmp_48;
                                              
#line 996 
                                              if (((unsigned long long)(size + 18446744073709551615UL) & 140737488355328ULL) == 0ULL) {
                                                unsigned long tmp_47;
                                                
#line 996 
                                                if (((unsigned long long)(size + 18446744073709551615UL) & 70368744177664ULL) == 0ULL) {
                                                  unsigned long tmp_46;
                                                  
#line 996 
                                                  if (((unsigned long long)(size + 18446744073709551615UL) & 35184372088832ULL) == 0ULL) {
                                                    unsigned long tmp_45;
                                                    
#line 996 
                                                    if (((unsigned long long)(size + 18446744073709551615UL) & 17592186044416ULL) == 0ULL) {
                                                      unsigned long tmp_44;
                                                      
#line 996 
                                                      if (((unsigned long long)(size + 18446744073709551615UL) & 8796093022208ULL) == 0ULL) {
                                                        unsigned long tmp_43;
                                                        
#line 996 
                                                        if (((unsigned long long)(size + 18446744073709551615UL) & 4398046511104ULL) == 0ULL) {
                                                          unsigned long tmp_42;
                                                          
#line 996 
                                                          if (((unsigned long long)(size + 18446744073709551615UL) & 2199023255552ULL) == 0ULL) {
                                                            unsigned long tmp_41;
                                                            
#line 996 
                                                            if (((unsigned long long)(size + 18446744073709551615UL) & 1099511627776ULL) == 0ULL) {
                                                              unsigned long tmp_40;
                                                              
#line 996 
                                                              if (((unsigned long long)(size + 18446744073709551615UL) & 549755813888ULL) == 0ULL) {
                                                                unsigned long tmp_39;
                                                                
#line 996 
                                                                if (((unsigned long long)(size + 18446744073709551615UL) & 274877906944ULL) == 0ULL) {
                                                                  unsigned long tmp_38;
                                                                  
#line 996 
                                                                  if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 137438953472ULL) == 0ULL) {
                                                                    unsigned long tmp_37;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 68719476736ULL) == 0ULL) {
                                                                    unsigned long tmp_36;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 34359738368ULL) == 0ULL) {
                                                                    unsigned long tmp_35;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 17179869184ULL) == 0ULL) {
                                                                    unsigned long tmp_34;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 8589934592ULL) == 0ULL) {
                                                                    unsigned long tmp_33;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 4294967296ULL) == 0ULL) {
                                                                    unsigned long tmp_32;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 2147483648ULL) == 0ULL) {
                                                                    unsigned long tmp_31;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 1073741824ULL) == 0ULL) {
                                                                    unsigned long tmp_30;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 536870912ULL) == 0ULL) {
                                                                    unsigned long tmp_29;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 268435456ULL) == 0ULL) {
                                                                    unsigned long tmp_28;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 134217728ULL) == 0ULL) {
                                                                    unsigned long tmp_27;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 67108864ULL) == 0ULL) {
                                                                    unsigned long tmp_26;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 33554432ULL) == 0ULL) {
                                                                    unsigned long tmp_25;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 16777216ULL) == 0ULL) {
                                                                    unsigned long tmp_24;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 8388608ULL) == 0ULL) {
                                                                    unsigned long tmp_23;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 4194304ULL) == 0ULL) {
                                                                    unsigned long tmp_22;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 2097152ULL) == 0ULL) {
                                                                    unsigned long tmp_21;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 1048576ULL) == 0ULL) {
                                                                    unsigned long tmp_20;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 524288ULL) == 0ULL) {
                                                                    unsigned long tmp_19;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 262144ULL) == 0ULL) {
                                                                    unsigned long tmp_18;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 131072ULL) == 0ULL) {
                                                                    unsigned long tmp_17;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 65536ULL) == 0ULL) {
                                                                    unsigned long tmp_16;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 32768ULL) == 0ULL) {
                                                                    unsigned long tmp_15;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 16384ULL) == 0ULL) {
                                                                    unsigned long tmp_14;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 8192ULL) == 0ULL) {
                                                                    unsigned long tmp_13;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 4096ULL) == 0ULL) {
                                                                    unsigned long tmp_12;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 2048ULL) == 0ULL) {
                                                                    unsigned long tmp_11;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 1024ULL) == 0ULL) {
                                                                    unsigned long tmp_10;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 512ULL) == 0ULL) {
                                                                    unsigned long tmp_9;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 256ULL) == 0ULL) {
                                                                    unsigned long tmp_8;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 128ULL) == 0ULL) {
                                                                    unsigned long tmp_7;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 64ULL) == 0ULL) {
                                                                    unsigned long tmp_6;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 32ULL) == 0ULL) {
                                                                    unsigned long tmp_5;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 16ULL) == 0ULL) {
                                                                    unsigned long tmp_4;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 8ULL) == 0ULL) {
                                                                    unsigned long tmp_3;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 4ULL) == 0ULL) {
                                                                    unsigned long tmp_2;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 2ULL) == 0ULL) {
                                                                    unsigned long tmp_1;
                                                                    
#line 996 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 1ULL) == 0ULL) {
                                                                    int tmp_0;
                                                                    
#line 996 
                                                                    tmp_0 = ____ilog2_NaN();
                                                                    
#line 996 
                                                                    tmp_1 = 1UL << (tmp_0 + 1);
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_1 = 2UL;
                                                                    
#line 996 
                                                                    tmp_2 = tmp_1;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_2 = 4UL;
                                                                    
#line 996 
                                                                    tmp_3 = tmp_2;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_3 = 8UL;
                                                                    
#line 996 
                                                                    tmp_4 = tmp_3;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_4 = 16UL;
                                                                    
#line 996 
                                                                    tmp_5 = tmp_4;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_5 = 32UL;
                                                                    
#line 996 
                                                                    tmp_6 = tmp_5;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_6 = 64UL;
                                                                    
#line 996 
                                                                    tmp_7 = tmp_6;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_7 = 128UL;
                                                                    
#line 996 
                                                                    tmp_8 = tmp_7;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_8 = 256UL;
                                                                    
#line 996 
                                                                    tmp_9 = tmp_8;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_9 = 512UL;
                                                                    
#line 996 
                                                                    tmp_10 = tmp_9;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_10 = 1024UL;
                                                                    
#line 996 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_11 = 2048UL;
                                                                    
#line 996 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_12 = 4096UL;
                                                                    
#line 996 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_13 = 8192UL;
                                                                    
#line 996 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_14 = 16384UL;
                                                                    
#line 996 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_15 = 32768UL;
                                                                    
#line 996 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_16 = 65536UL;
                                                                    
#line 996 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_17 = 131072UL;
                                                                    
#line 996 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_18 = 262144UL;
                                                                    
#line 996 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_19 = 524288UL;
                                                                    
#line 996 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_20 = 1048576UL;
                                                                    
#line 996 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_21 = 2097152UL;
                                                                    
#line 996 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_22 = 4194304UL;
                                                                    
#line 996 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_23 = 8388608UL;
                                                                    
#line 996 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_24 = 16777216UL;
                                                                    
#line 996 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_25 = 33554432UL;
                                                                    
#line 996 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_26 = 67108864UL;
                                                                    
#line 996 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_27 = 134217728UL;
                                                                    
#line 996 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_28 = 268435456UL;
                                                                    
#line 996 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_29 = 536870912UL;
                                                                    
#line 996 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_30 = 1073741824UL;
                                                                    
#line 996 
                                                                    tmp_31 = tmp_30;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_31 = 2147483648UL;
                                                                    
#line 996 
                                                                    tmp_32 = tmp_31;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_32 = 4294967296UL;
                                                                    
#line 996 
                                                                    tmp_33 = tmp_32;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_33 = 8589934592UL;
                                                                    
#line 996 
                                                                    tmp_34 = tmp_33;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_34 = 17179869184UL;
                                                                    
#line 996 
                                                                    tmp_35 = tmp_34;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_35 = 34359738368UL;
                                                                    
#line 996 
                                                                    tmp_36 = tmp_35;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_36 = 68719476736UL;
                                                                    
#line 996 
                                                                    tmp_37 = tmp_36;
                                                                    }
                                                                    else 
                                                                    
#line 996 
                                                                    tmp_37 = 137438953472UL;
                                                                    
#line 996 
                                                                    tmp_38 = tmp_37;
                                                                  }
                                                                  else 
                                                                    
#line 996 
                                                                    tmp_38 = 274877906944UL;
                                                                  
#line 996 
                                                                  tmp_39 = tmp_38;
                                                                }
                                                                else 
                                                                  
#line 996 
                                                                  tmp_39 = 549755813888UL;
                                                                
#line 996 
                                                                tmp_40 = tmp_39;
                                                              }
                                                              else 
#line 996 
                                                                   tmp_40 = 1099511627776UL;
                                                              
#line 996 
                                                              tmp_41 = tmp_40;
                                                            }
                                                            else 
#line 996 
                                                                 tmp_41 = 2199023255552UL;
                                                            
#line 996 
                                                            tmp_42 = tmp_41;
                                                          }
                                                          else 
#line 996 
                                                               tmp_42 = 4398046511104UL;
                                                          
#line 996 
                                                          tmp_43 = tmp_42;
                                                        }
                                                        else 
#line 996 
                                                             tmp_43 = 8796093022208UL;
                                                        
#line 996 
                                                        tmp_44 = tmp_43;
                                                      }
                                                      else 
#line 996 
                                                           tmp_44 = 17592186044416UL;
                                                      
#line 996 
                                                      tmp_45 = tmp_44;
                                                    }
                                                    else 
#line 996 
                                                         tmp_45 = 35184372088832UL;
                                                    
#line 996 
                                                    tmp_46 = tmp_45;
                                                  }
                                                  else 
#line 996 
                                                       tmp_46 = 70368744177664UL;
                                                  
#line 996 
                                                  tmp_47 = tmp_46;
                                                }
                                                else 
#line 996 
                                                     tmp_47 = 140737488355328UL;
                                                
#line 996 
                                                tmp_48 = tmp_47;
                                              }
                                              else 
#line 996 
                                                   tmp_48 = 281474976710656UL;
                                              
#line 996 
                                              tmp_49 = tmp_48;
                                            }
                                            else 
#line 996 
                                                 tmp_49 = 562949953421312UL;
                                            
#line 996 
                                            tmp_50 = tmp_49;
                                          }
                                          else 
#line 996 
                                               tmp_50 = 1125899906842624UL;
                                          
#line 996 
                                          tmp_51 = tmp_50;
                                        }
                                        else 
#line 996 
                                             tmp_51 = 2251799813685248UL;
                                        
#line 996 
                                        tmp_52 = tmp_51;
                                      }
                                      else 
#line 996 
                                           tmp_52 = 4503599627370496UL;
                                      
#line 996 
                                      tmp_53 = tmp_52;
                                    }
                                    else 
#line 996 
                                         tmp_53 = 9007199254740992UL;
                                    
#line 996 
                                    tmp_54 = tmp_53;
                                  }
                                  else 
#line 996 
                                       tmp_54 = 18014398509481984UL;
                                  
#line 996 
                                  tmp_55 = tmp_54;
                                }
                                else 
#line 996 
                                     tmp_55 = 36028797018963968UL;
                                
#line 996 
                                tmp_56 = tmp_55;
                              }
                              else 
#line 996 
                                   tmp_56 = 72057594037927936UL;
                              
#line 996 
                              tmp_57 = tmp_56;
                            }
                            else 
#line 996 
                                 tmp_57 = 144115188075855872UL;
                            
#line 996 
                            tmp_58 = tmp_57;
                          }
                          else 
#line 996 
                               tmp_58 = 288230376151711744UL;
                          
#line 996 
                          tmp_59 = tmp_58;
                        }
                        else 
#line 996 
                             tmp_59 = 576460752303423488UL;
                        
#line 996 
                        tmp_60 = tmp_59;
                      }
                      else 
#line 996 
                           tmp_60 = 1152921504606846976UL;
                      
#line 996 
                      tmp_61 = tmp_60;
                    }
                    else 
#line 996 
                         tmp_61 = 2305843009213693952UL;
                    
#line 996 
                    tmp_62 = tmp_61;
                  }
                  else 
#line 996 
                       tmp_62 = 4611686018427387904UL;
                  
#line 996 
                  tmp_63 = tmp_62;
                }
                else 
#line 996 
                     tmp_63 = 9223372036854775808UL;
                
#line 996 
                tmp_64 = tmp_63;
              }
              else 
#line 996 
                   tmp_64 = 0UL;
              
#line 996 
              tmp_65 = tmp_64;
            }
            
#line 996 
            tmp_67 = tmp_65;
          }
          else {
            int tmp_66;
            
#line 996 
            tmp_66 = __ilog2_u64((unsigned long long)(size + 18446744073709551615UL));
            
#line 996 
            tmp_67 = 1UL << (tmp_66 + 1);
          }
          
#line 996 
          tmp_68 = tmp_67;
        }
        else 
#line 996 
             tmp_68 = 1UL;
        
#line 996 
        tmp_70 = tmp_68;
      }
      else 
#line 996 
           tmp_70 = __roundup_pow_of_two(size);
      
#line 996 
      unsigned long _min1 = tmp_70;
      
#line 996 
      unsigned long _min2 = 65536UL;
      
#line 996 
      if (_min1 < _min2) 
#line 996 
                         tmp_71 = _min1; else 
#line 996 
                                              tmp_71 = _min2;
      
#line 996 
      tmp_72 = tmp_71;
    }
    
#line 996 
    unsigned long _max2 = tmp_72;
    
#line 996 
    if (_max1 > _max2) 
#line 996 
                       tmp_73 = _max1; else 
#line 996 
                                            tmp_73 = _max2;
    
#line 996 
    tmp_74 = tmp_73;
  }
  
#line 996 
  return tmp_74;
}


#line 1000  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_dma_ring_create(struct rocker const *rocker, unsigned int type, size_t size, struct rocker_dma_ring_info *info)
{
  int __retres;
  int i;
  unsigned long tmp;
  
#line 1007 
  tmp = rocker_dma_ring_size_fix(size);
  
#line 1007 
  ;
  
#line 1007 
  if ((long)(tmp != size) != 0L) {
    
#line 1009 
    ldv_inline_asm();
    
#line 1007 
    ;
  }
  else ;
  
#line 1008 
  info->size = size;
  
#line 1009 
  info->type = type;
  
#line 1010 
  info->head = 0U;
  
#line 1011 
  info->tail = 0U;
  
#line 1012 
  info->desc_info = (struct rocker_desc_info *)kcalloc(info->size,40UL,208U);
  
#line 1014 
  if (info->desc_info == (struct rocker_desc_info *)0) {
    
#line 1015 
    __retres = -12;
    
#line 1015 
    goto return_label;
  }
  else ;
  
#line 1017 
  info->desc = (struct rocker_desc *)pci_alloc_consistent(rocker->pdev,info->size * 32UL,& info->mapaddr);
  
#line 1020 
  if (info->desc == (struct rocker_desc *)0) {
    
#line 1021 
    kfree((void const *)info->desc_info);
    
#line 1022 
    __retres = -12;
    
#line 1022 
    goto return_label;
  }
  else ;
  
#line 1025 
  i = 0;
  
#line 1025 
  goto ldv_54602;
  ldv_54601: 
#line 1026 
  ;
  
#line 1026 
  (info->desc_info + i)->desc = info->desc + i;
  
#line 1025 
  i += 1;
  ldv_54602: 
#line 1026 
  ;
  
#line 1025 
  if ((unsigned long)i < info->size) 
#line 1027 
                                     goto ldv_54601; else 
#line 1030 
                                                          goto ldv_54603;
  ldv_54603: 
#line 1031 
  ;
  
#line 1028 
  writel(1U,(void volatile *)(rocker->hw_addr + (info->type * 32U + 4116U)));
  
#line 1030 
  writeq((unsigned long)info->mapaddr,(void volatile *)(rocker->hw_addr + (info->type + 128U) * 32U));
  
#line 1031 
  writel((unsigned int)info->size,(void volatile *)(rocker->hw_addr + (info->type * 32U + 4104U)));
  
#line 1033 
  __retres = 0;
  return_label: 
#line 1033 
                return __retres;
}


#line 1036  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_dma_ring_destroy(struct rocker const *rocker, struct rocker_dma_ring_info const *info)
{
  
#line 1039 
  writeq(0UL,(void volatile *)(rocker->hw_addr + (info->type + 128U) * 32U));
  
#line 1041 
  pci_free_consistent(rocker->pdev,info->size * 32UL,(void *)info->desc,info->mapaddr);
  
#line 1044 
  kfree((void const *)info->desc_info);
  
#line 1045 
  return;
}


#line 1047  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_dma_ring_pass_to_producer(struct rocker const *rocker, struct rocker_dma_ring_info *info)
{
  int i;
  
#line 1052 
  if ((long)(info->head != 0U) != 0L || (long)(info->tail != 0U) != 0L) {
    
#line 1054 
    ldv_inline_asm();
    
#line 1052 
    ;
  }
  else ;
  
#line 1057 
  i = 0;
  
#line 1057 
  goto ldv_54614;
  ldv_54613: 
#line 1058 
  ;
  
#line 1058 
  rocker_desc_head_set(rocker,info,(struct rocker_desc_info const *)(info->desc_info + i));
  
#line 1057 
  i += 1;
  ldv_54614: 
#line 1058 
  ;
  
#line 1057 
  if ((unsigned long)i < info->size + 18446744073709551615UL) 
#line 1059 
                                                              goto ldv_54613; else 
                                                                    
#line 1062 
                                                                    goto ldv_54615;
  ldv_54615: 
#line 1063 
  ;
  
#line 1059 
  rocker_desc_commit((struct rocker_desc_info const *)(info->desc_info + i));
  
#line 1060 
  return;
}


#line 1062  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_dma_ring_bufs_alloc(struct rocker const *rocker, struct rocker_dma_ring_info const *info, int direction, size_t buf_size)
{
  int __retres;
  int i;
  int err;
  
#line 1066 
  struct pci_dev *pdev = rocker->pdev;
  
#line 1070 
  i = 0;
  
#line 1070 
  goto ldv_54631;
  ldv_54630: 
#line 1071 
  ;
  {
    dma_addr_t dma_handle;
    char *buf;
    int tmp_0;
    
#line 1071 
    struct rocker_desc_info *desc_info = info->desc_info + i;
    
#line 1072 
    struct rocker_desc *desc = info->desc + i;
    
#line 1076 
    buf = (char *)kzalloc(buf_size,209U);
    
#line 1077 
    if (buf == (char *)0) {
      
#line 1078 
      err = -12;
      
#line 1079 
      goto rollback;
    }
    else ;
    
#line 1082 
    dma_handle = pci_map_single(pdev,(void *)buf,buf_size,direction);
    
#line 1083 
    tmp_0 = pci_dma_mapping_error(pdev,dma_handle);
    
#line 1083 
    if (tmp_0 != 0) {
      
#line 1084 
      kfree((void const *)buf);
      
#line 1085 
      err = -5;
      
#line 1086 
      goto rollback;
    }
    else ;
    
#line 1089 
    desc_info->data = buf;
    
#line 1090 
    desc_info->data_size = buf_size;
    
#line 1091 
    desc_info->mapaddr = dma_handle;
    
#line 1093 
    desc->buf_addr = dma_handle;
    
#line 1094 
    desc->buf_size = (unsigned short)buf_size;
  }
  
#line 1070 
  i += 1;
  ldv_54631: 
#line 1071 
  ;
  
#line 1070 
  if ((unsigned long)i < info->size) 
#line 1072 
                                     goto ldv_54630; else 
#line 1075 
                                                          goto ldv_54632;
  ldv_54632: 
#line 1076 
  ;
  
#line 1096 
  __retres = 0;
  
#line 1096 
  goto return_label;
  rollback: 
#line 1098 
  ;
  
#line 1099 
  i -= 1;
  
#line 1099 
  goto ldv_54635;
  ldv_54634: 
#line 1100 
  ;
  {
    
#line 1100 
    struct rocker_desc_info const *desc_info_0 = (struct rocker_desc_info const *)(info->desc_info + i);
    
#line 1102 
    pci_unmap_single(pdev,desc_info_0->mapaddr,desc_info_0->data_size,direction);
    
#line 1104 
    kfree((void const *)desc_info_0->data);
  }
  
#line 1099 
  i -= 1;
  ldv_54635: 
#line 1100 
  ;
  
#line 1099 
  if (i >= 0) 
#line 1101 
              goto ldv_54634; else 
#line 1104 
                                   goto ldv_54636;
  ldv_54636: 
#line 1105 
  ;
  
#line 1106 
  __retres = err;
  return_label: 
#line 1106 
                return __retres;
}


#line 1109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_dma_ring_bufs_free(struct rocker const *rocker, struct rocker_dma_ring_info const *info, int direction)
{
  int i;
  
#line 1113 
  struct pci_dev *pdev = rocker->pdev;
  
#line 1116 
  i = 0;
  
#line 1116 
  goto ldv_54647;
  ldv_54646: 
#line 1117 
  ;
  {
    
#line 1117 
    struct rocker_desc_info const *desc_info = (struct rocker_desc_info const *)(info->desc_info + i);
    
#line 1118 
    struct rocker_desc *desc = info->desc + i;
    
#line 1120 
    desc->buf_addr = 0ULL;
    
#line 1121 
    desc->buf_size = (unsigned short)0U;
    
#line 1122 
    pci_unmap_single(pdev,desc_info->mapaddr,desc_info->data_size,direction);
    
#line 1124 
    kfree((void const *)desc_info->data);
  }
  
#line 1116 
  i += 1;
  ldv_54647: 
#line 1117 
  ;
  
#line 1116 
  if ((unsigned long)i < info->size) 
#line 1118 
                                     goto ldv_54646; else 
#line 1121 
                                                          goto ldv_54648;
  ldv_54648: 
#line 1122 
  ;
  
#line 1123 
  return;
}


#line 1128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_dma_rings_init(struct rocker *rocker)
{
  int __retres;
  int err;
  
#line 1130 
  struct pci_dev const *pdev = (struct pci_dev const *)rocker->pdev;
  
#line 1133 
  err = rocker_dma_ring_create((struct rocker const *)rocker,0U,32UL,& rocker->cmd_ring);
  
#line 1136 
  if (err != 0) {
    
#line 1137 
    dev_err(& pdev->dev,"failed to create command dma ring\n");
    
#line 1138 
    __retres = err;
    
#line 1138 
    goto return_label;
  }
  else ;
  
#line 1141 
  spinlock_check(& rocker->cmd_ring_lock);
  {
    struct lock_class_key __key;
    
#line 1141 
    __raw_spin_lock_init(& rocker->cmd_ring_lock.__anonCompField_spinlock_18.rlock,"&(&rocker->cmd_ring_lock)->rlock",& __key);
  }
  
#line 1143 
  err = rocker_dma_ring_bufs_alloc((struct rocker const *)rocker,(struct rocker_dma_ring_info const *)(& rocker->cmd_ring),0,4096UL);
  
#line 1145 
  if (err != 0) {
    
#line 1146 
    dev_err(& pdev->dev,"failed to alloc command dma ring buffers\n");
    
#line 1147 
    goto err_dma_cmd_ring_bufs_alloc;
  }
  else ;
  
#line 1150 
  err = rocker_dma_ring_create((struct rocker const *)rocker,1U,32UL,& rocker->event_ring);
  
#line 1153 
  if (err != 0) {
    
#line 1154 
    dev_err(& pdev->dev,"failed to create event dma ring\n");
    
#line 1155 
    goto err_dma_event_ring_create;
  }
  else ;
  
#line 1158 
  err = rocker_dma_ring_bufs_alloc((struct rocker const *)rocker,(struct rocker_dma_ring_info const *)(& rocker->event_ring),2,4096UL);
  
#line 1160 
  if (err != 0) {
    
#line 1161 
    dev_err(& pdev->dev,"failed to alloc event dma ring buffers\n");
    
#line 1162 
    goto err_dma_event_ring_bufs_alloc;
  }
  else ;
  
#line 1164 
  rocker_dma_ring_pass_to_producer((struct rocker const *)rocker,& rocker->event_ring);
  
#line 1165 
  __retres = 0;
  
#line 1165 
  goto return_label;
  err_dma_event_ring_bufs_alloc: 
#line 1167 
  ;
  
#line 1168 
  rocker_dma_ring_destroy((struct rocker const *)rocker,(struct rocker_dma_ring_info const *)(& rocker->event_ring));
  err_dma_event_ring_create: 
#line 1169 
  ;
  
#line 1170 
  rocker_dma_ring_bufs_free((struct rocker const *)rocker,(struct rocker_dma_ring_info const *)(& rocker->cmd_ring),0);
  err_dma_cmd_ring_bufs_alloc: 
#line 1172 
  ;
  
#line 1173 
  rocker_dma_ring_destroy((struct rocker const *)rocker,(struct rocker_dma_ring_info const *)(& rocker->cmd_ring));
  
#line 1174 
  __retres = err;
  return_label: 
#line 1174 
                return __retres;
}


#line 1177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_dma_rings_fini(struct rocker *rocker)
{
  
#line 1179 
  rocker_dma_ring_bufs_free((struct rocker const *)rocker,(struct rocker_dma_ring_info const *)(& rocker->event_ring),0);
  
#line 1181 
  rocker_dma_ring_destroy((struct rocker const *)rocker,(struct rocker_dma_ring_info const *)(& rocker->event_ring));
  
#line 1182 
  rocker_dma_ring_bufs_free((struct rocker const *)rocker,(struct rocker_dma_ring_info const *)(& rocker->cmd_ring),0);
  
#line 1184 
  rocker_dma_ring_destroy((struct rocker const *)rocker,(struct rocker_dma_ring_info const *)(& rocker->cmd_ring));
  
#line 1185 
  return;
}


#line 1187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_dma_rx_ring_skb_map(struct rocker_port const *rocker_port, struct rocker_desc_info *desc_info, struct sk_buff *skb, size_t buf_len)
{
  int __retres;
  dma_addr_t dma_handle;
  int tmp;
  int tmp_0;
  int tmp_1;
  
#line 1191 
  struct rocker const *rocker = (struct rocker const *)rocker_port->rocker;
  
#line 1192 
  struct pci_dev *pdev = rocker->pdev;
  
#line 1195 
  dma_handle = pci_map_single(pdev,(void *)skb->data,buf_len,2);
  
#line 1197 
  tmp = pci_dma_mapping_error(pdev,dma_handle);
  
#line 1197 
  if (tmp != 0) {
    
#line 1198 
    __retres = -5;
    
#line 1198 
    goto return_label;
  }
  else ;
  
#line 1199 
  tmp_0 = rocker_tlv_put_u64(desc_info,3,dma_handle);
  
#line 1199 
  if (tmp_0 != 0) 
#line 1200 
                  goto tlv_put_failure; else ;
  
#line 1201 
  tmp_1 = rocker_tlv_put_u16(desc_info,4,(unsigned short)((int)((unsigned short)buf_len)));
  
#line 1201 
  if (tmp_1 != 0) 
#line 1202 
                  goto tlv_put_failure; else ;
  
#line 1203 
  __retres = 0;
  
#line 1203 
  goto return_label;
  tlv_put_failure: 
#line 1205 
  ;
  
#line 1206 
  pci_unmap_single(pdev,dma_handle,buf_len,2);
  
#line 1207 
  desc_info->tlv_size = 0UL;
  
#line 1208 
  __retres = -90;
  return_label: 
#line 1208 
                return __retres;
}


#line 1211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static size_t rocker_port_rx_buf_len(struct rocker_port const *rocker_port)
{
  size_t __retres;
  
#line 1213 
  __retres = (unsigned long)((rocker_port->dev)->mtu + 22U);
  
#line 1213 
  return __retres;
}


#line 1216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_dma_rx_ring_skb_alloc(struct rocker_port const *rocker_port, struct rocker_desc_info *desc_info)
{
  int __retres;
  struct sk_buff *skb;
  int err;
  
#line 1219 
  struct net_device *dev = rocker_port->dev;
  
#line 1221 
  size_t buf_len = rocker_port_rx_buf_len(rocker_port);
  
#line 1227 
  rocker_desc_cookie_ptr_set((struct rocker_desc_info const *)desc_info,(void *)0);
  
#line 1228 
  desc_info->tlv_size = 0UL;
  
#line 1230 
  skb = netdev_alloc_skb_ip_align(dev,(unsigned int)buf_len);
  
#line 1231 
  if (skb == (struct sk_buff *)0) {
    
#line 1232 
    __retres = -12;
    
#line 1232 
    goto return_label;
  }
  else ;
  
#line 1233 
  err = rocker_dma_rx_ring_skb_map(rocker_port,desc_info,skb,buf_len);
  
#line 1234 
  if (err != 0) {
    
#line 1235 
    dev_kfree_skb_any(skb);
    
#line 1236 
    __retres = err;
    
#line 1236 
    goto return_label;
  }
  else ;
  
#line 1238 
  rocker_desc_cookie_ptr_set((struct rocker_desc_info const *)desc_info,(void *)skb);
  
#line 1239 
  __retres = 0;
  return_label: 
#line 1239 
                return __retres;
}


#line 1242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_dma_rx_ring_skb_unmap(struct rocker const *rocker, struct rocker_tlv const **attrs)
{
  dma_addr_t dma_handle;
  size_t len;
  u16 tmp;
  
#line 1245 
  struct pci_dev *pdev = rocker->pdev;
  
#line 1249 
  if (*(attrs + 3U) == (struct rocker_tlv const *)0 || *(attrs + 4U) == (struct rocker_tlv const *)0) 
    
#line 1251 
    goto return_label; else ;
  
#line 1252 
  dma_handle = rocker_tlv_get_u64(*(attrs + 3U));
  
#line 1253 
  tmp = rocker_tlv_get_u16(*(attrs + 4U));
  
#line 1253 
  len = (unsigned long)tmp;
  
#line 1254 
  pci_unmap_single(pdev,dma_handle,len,2);
  return_label: 
#line 1255 
                return;
}


#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_dma_rx_ring_skb_free(struct rocker const *rocker, struct rocker_desc_info const *desc_info)
{
  struct rocker_tlv const *attrs[6U];
  
#line 1261 
  struct sk_buff *skb = rocker_desc_cookie_ptr_get(desc_info);
  
#line 1263 
  if (skb == (struct sk_buff *)0) 
#line 1264 
                                  goto return_label; else ;
  
#line 1265 
  rocker_tlv_parse_desc((struct rocker_tlv const **)(& attrs),5,desc_info);
  
#line 1266 
  rocker_dma_rx_ring_skb_unmap(rocker,(struct rocker_tlv const **)(& attrs));
  
#line 1267 
  dev_kfree_skb_any(skb);
  return_label: 
#line 1268 
                return;
}


#line 1270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_dma_rx_ring_skbs_alloc(struct rocker_port const *rocker_port)
{
  int __retres;
  int i;
  int err;
  
#line 1272 
  struct rocker_dma_ring_info const *rx_ring = & rocker_port->rx_ring;
  
#line 1273 
  struct rocker const *rocker = (struct rocker const *)rocker_port->rocker;
  
#line 1277 
  i = 0;
  
#line 1277 
  goto ldv_54704;
  ldv_54703: 
#line 1278 
  ;
  
#line 1278 
  err = rocker_dma_rx_ring_skb_alloc(rocker_port,rx_ring->desc_info + i);
  
#line 1280 
  if (err != 0) 
#line 1281 
                goto rollback; else ;
  
#line 1277 
  i += 1;
  ldv_54704: 
#line 1278 
  ;
  
#line 1277 
  if ((unsigned long)i < rx_ring->size) 
#line 1279 
                                        goto ldv_54703; else 
#line 1282 
                                                             goto ldv_54705;
  ldv_54705: 
#line 1283 
  ;
  
#line 1283 
  __retres = 0;
  
#line 1283 
  goto return_label;
  rollback: 
#line 1285 
  ;
  
#line 1286 
  i -= 1;
  
#line 1286 
  goto ldv_54707;
  ldv_54706: 
#line 1287 
  ;
  
#line 1287 
  rocker_dma_rx_ring_skb_free(rocker,(struct rocker_desc_info const *)(rx_ring->desc_info + i));
  
#line 1286 
  i -= 1;
  ldv_54707: 
#line 1287 
  ;
  
#line 1286 
  if (i >= 0) 
#line 1288 
              goto ldv_54706; else 
#line 1291 
                                   goto ldv_54708;
  ldv_54708: 
#line 1292 
  ;
  
#line 1288 
  __retres = err;
  return_label: 
#line 1288 
                return __retres;
}


#line 1291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_dma_rx_ring_skbs_free(struct rocker_port const *rocker_port)
{
  int i;
  
#line 1293 
  struct rocker_dma_ring_info const *rx_ring = & rocker_port->rx_ring;
  
#line 1294 
  struct rocker const *rocker = (struct rocker const *)rocker_port->rocker;
  
#line 1297 
  i = 0;
  
#line 1297 
  goto ldv_54716;
  ldv_54715: 
#line 1298 
  ;
  
#line 1298 
  rocker_dma_rx_ring_skb_free(rocker,(struct rocker_desc_info const *)(rx_ring->desc_info + i));
  
#line 1297 
  i += 1;
  ldv_54716: 
#line 1298 
  ;
  
#line 1297 
  if ((unsigned long)i < rx_ring->size) 
#line 1299 
                                        goto ldv_54715; else 
#line 1302 
                                                             goto ldv_54717;
  ldv_54717: 
#line 1303 
  ;
  
#line 1304 
  return;
}


#line 1301  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_dma_rings_init(struct rocker_port *rocker_port)
{
  int __retres;
  int err;
  
#line 1303 
  struct rocker *rocker = rocker_port->rocker;
  
#line 1306 
  err = rocker_dma_ring_create((struct rocker const *)rocker,(rocker_port->port_number + 1U) * 2U,64UL,& rocker_port->tx_ring);
  
#line 1310 
  if (err != 0) {
    
#line 1311 
    netdev_err((struct net_device const *)rocker_port->dev,"failed to create tx dma ring\n");
    
#line 1312 
    __retres = err;
    
#line 1312 
    goto return_label;
  }
  else ;
  
#line 1315 
  err = rocker_dma_ring_bufs_alloc((struct rocker const *)rocker,(struct rocker_dma_ring_info const *)(& rocker_port->tx_ring),1,256UL);
  
#line 1318 
  if (err != 0) {
    
#line 1319 
    netdev_err((struct net_device const *)rocker_port->dev,"failed to alloc tx dma ring buffers\n");
    
#line 1320 
    goto err_dma_tx_ring_bufs_alloc;
  }
  else ;
  
#line 1323 
  err = rocker_dma_ring_create((struct rocker const *)rocker,rocker_port->port_number * 2U + 3U,64UL,& rocker_port->rx_ring);
  
#line 1327 
  if (err != 0) {
    
#line 1328 
    netdev_err((struct net_device const *)rocker_port->dev,"failed to create rx dma ring\n");
    
#line 1329 
    goto err_dma_rx_ring_create;
  }
  else ;
  
#line 1332 
  err = rocker_dma_ring_bufs_alloc((struct rocker const *)rocker,(struct rocker_dma_ring_info const *)(& rocker_port->rx_ring),0,256UL);
  
#line 1335 
  if (err != 0) {
    
#line 1336 
    netdev_err((struct net_device const *)rocker_port->dev,"failed to alloc rx dma ring buffers\n");
    
#line 1337 
    goto err_dma_rx_ring_bufs_alloc;
  }
  else ;
  
#line 1340 
  err = rocker_dma_rx_ring_skbs_alloc((struct rocker_port const *)rocker_port);
  
#line 1341 
  if (err != 0) {
    
#line 1342 
    netdev_err((struct net_device const *)rocker_port->dev,"failed to alloc rx dma ring skbs\n");
    
#line 1343 
    goto err_dma_rx_ring_skbs_alloc;
  }
  else ;
  
#line 1345 
  rocker_dma_ring_pass_to_producer((struct rocker const *)rocker,& rocker_port->rx_ring);
  
#line 1347 
  __retres = 0;
  
#line 1347 
  goto return_label;
  err_dma_rx_ring_skbs_alloc: 
#line 1349 
  ;
  
#line 1350 
  rocker_dma_ring_bufs_free((struct rocker const *)rocker,(struct rocker_dma_ring_info const *)(& rocker_port->rx_ring),0);
  err_dma_rx_ring_bufs_alloc: 
#line 1352 
  ;
  
#line 1353 
  rocker_dma_ring_destroy((struct rocker const *)rocker,(struct rocker_dma_ring_info const *)(& rocker_port->rx_ring));
  err_dma_rx_ring_create: 
#line 1354 
  ;
  
#line 1355 
  rocker_dma_ring_bufs_free((struct rocker const *)rocker,(struct rocker_dma_ring_info const *)(& rocker_port->tx_ring),1);
  err_dma_tx_ring_bufs_alloc: 
#line 1357 
  ;
  
#line 1358 
  rocker_dma_ring_destroy((struct rocker const *)rocker,(struct rocker_dma_ring_info const *)(& rocker_port->tx_ring));
  
#line 1359 
  __retres = err;
  return_label: 
#line 1359 
                return __retres;
}


#line 1362  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_port_dma_rings_fini(struct rocker_port *rocker_port)
{
  
#line 1364 
  struct rocker *rocker = rocker_port->rocker;
  
#line 1366 
  rocker_dma_rx_ring_skbs_free((struct rocker_port const *)rocker_port);
  
#line 1367 
  rocker_dma_ring_bufs_free((struct rocker const *)rocker,(struct rocker_dma_ring_info const *)(& rocker_port->rx_ring),0);
  
#line 1369 
  rocker_dma_ring_destroy((struct rocker const *)rocker,(struct rocker_dma_ring_info const *)(& rocker_port->rx_ring));
  
#line 1370 
  rocker_dma_ring_bufs_free((struct rocker const *)rocker,(struct rocker_dma_ring_info const *)(& rocker_port->tx_ring),1);
  
#line 1372 
  rocker_dma_ring_destroy((struct rocker const *)rocker,(struct rocker_dma_ring_info const *)(& rocker_port->tx_ring));
  
#line 1373 
  return;
}


#line 1375  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_port_set_enable(struct rocker_port const *rocker_port, bool enable)
{
  
#line 1378 
  u64 val = readq((void const volatile *)((rocker_port->rocker)->hw_addr + 792U));
  
#line 1380 
  if ((int)enable != 0) 
#line 1381 
                        val = (1ULL << rocker_port->pport) | val; else 
                                                                    
#line 1383 
                                                                    val = ~ (1ULL << rocker_port->pport) & val;
  
#line 1384 
  writeq((unsigned long)val,(void volatile *)((rocker_port->rocker)->hw_addr + 792U));
  
#line 1385 
  return;
}


#line 1391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static irqreturn_t rocker_cmd_irq_handler(int irq, void *dev_id)
{
  irqreturn_t __retres;
  struct rocker_desc_info const *desc_info;
  struct rocker_wait *wait;
  
#line 1393 
  struct rocker *rocker = (struct rocker *)dev_id;
  
#line 1396 
  u32 credits = 0U;
  
#line 1398 
  ldv_spin_lock_75(& rocker->cmd_ring_lock);
  
#line 1399 
  goto ldv_54745;
  ldv_54744: 
#line 1400 
  ;
  
#line 1400 
  wait = (struct rocker_wait *)rocker_desc_cookie_ptr_get(desc_info);
  
#line 1401 
  if ((int)wait->nowait != 0) {
    
#line 1402 
    rocker_desc_gen_clear(desc_info);
    
#line 1403 
    rocker_wait_destroy((enum switchdev_trans)SWITCHDEV_TRANS_NONE,wait);
  }
  else 
#line 1405 
       rocker_wait_wake_up(wait);
  
#line 1407 
  credits += 1U;
  ldv_54745: 
#line 1408 
  ;
  
#line 1399 
  desc_info = (struct rocker_desc_info const *)rocker_desc_tail_get(& rocker->cmd_ring);
  
#line 1399 
  if (desc_info != (struct rocker_desc_info const *)0) 
#line 1401 
                                                       goto ldv_54744; else 
                                                                    
#line 1404 
                                                                    goto ldv_54746;
  ldv_54746: 
#line 1405 
  ;
  
#line 1409 
  ldv_spin_unlock_76(& rocker->cmd_ring_lock);
  
#line 1410 
  rocker_dma_ring_credits_set((struct rocker const *)rocker,(struct rocker_dma_ring_info const *)(& rocker->cmd_ring),credits);
  
#line 1412 
  __retres = IRQ_HANDLED;
  
#line 1412 
  return __retres;
}


#line 1415  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_port_link_up(struct rocker_port const *rocker_port)
{
  
#line 1417 
  netif_carrier_on(rocker_port->dev);
  
#line 1418 
  netdev_info((struct net_device const *)rocker_port->dev,"Link is up\n");
  
#line 1419 
  return;
}


#line 1421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_port_link_down(struct rocker_port const *rocker_port)
{
  
#line 1423 
  netif_carrier_off(rocker_port->dev);
  
#line 1424 
  netdev_info((struct net_device const *)rocker_port->dev,"Link is down\n");
  
#line 1425 
  return;
}


#line 1427  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_event_link_change(struct rocker const *rocker, struct rocker_tlv const *info)
{
  int __retres;
  struct rocker_tlv const *attrs[3U];
  unsigned int port_number;
  bool link_up;
  struct rocker_port *rocker_port;
  u32 tmp;
  u8 tmp_0;
  bool tmp_1;
  
#line 1435 
  rocker_tlv_parse_nested((struct rocker_tlv const **)(& attrs),2,info);
  
#line 1436 
  if (attrs[1] == (struct rocker_tlv const *)0 || attrs[2] == (struct rocker_tlv const *)0) {
    
#line 1438 
    __retres = -5;
    
#line 1438 
    goto return_label;
  }
  else ;
  
#line 1439 
  tmp = rocker_tlv_get_u32(attrs[1]);
  
#line 1439 
  port_number = tmp + 4294967295U;
  
#line 1441 
  tmp_0 = rocker_tlv_get_u8(attrs[2]);
  
#line 1441 
  link_up = (_Bool)((unsigned int)tmp_0 != 0U);
  
#line 1443 
  if (rocker->port_count <= port_number) {
    
#line 1444 
    __retres = -22;
    
#line 1444 
    goto return_label;
  }
  else ;
  
#line 1446 
  rocker_port = *(rocker->ports + port_number);
  
#line 1447 
  tmp_1 = netif_carrier_ok((struct net_device const *)rocker_port->dev);
  
#line 1447 
  ;
  
#line 1447 
  if ((int)tmp_1 != (int)link_up) 
    
#line 1448 
    if ((int)link_up != 0) 
#line 1449 
                           rocker_port_link_up((struct rocker_port const *)rocker_port); else 
                                                                    
#line 1451 
                                                                    rocker_port_link_down((struct rocker_port const *)rocker_port);
  else ;
  
#line 1454 
  __retres = 0;
  return_label: 
#line 1454 
                return __retres;
}


#line 1457 
static int rocker_port_fdb(struct rocker_port *rocker_port, enum switchdev_trans trans, unsigned char const *addr, __be16 vlan_id, int flags);


#line 1462  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_event_mac_vlan_seen(struct rocker const *rocker, struct rocker_tlv const *info)
{
  int __retres;
  struct rocker_tlv const *attrs[4U];
  unsigned int port_number;
  struct rocker_port *rocker_port;
  unsigned char const *addr;
  __be16 vlan_id;
  u32 tmp;
  int tmp_1;
  
#line 1469 
  int flags = 6;
  
#line 1472 
  rocker_tlv_parse_nested((struct rocker_tlv const **)(& attrs),3,info);
  
#line 1473 
  if ((attrs[1] == (struct rocker_tlv const *)0 || attrs[2] == (struct rocker_tlv const *)0) || attrs[3] == (struct rocker_tlv const *)0) {
    
#line 1476 
    __retres = -5;
    
#line 1476 
    goto return_label;
  }
  else ;
  
#line 1477 
  tmp = rocker_tlv_get_u32(attrs[1]);
  
#line 1477 
  port_number = tmp + 4294967295U;
  
#line 1479 
  addr = (unsigned char const *)rocker_tlv_data(attrs[2]);
  
#line 1480 
  vlan_id = rocker_tlv_get_be16(attrs[3]);
  
#line 1482 
  if (rocker->port_count <= port_number) {
    
#line 1483 
    __retres = -22;
    
#line 1483 
    goto return_label;
  }
  else ;
  
#line 1485 
  rocker_port = *(rocker->ports + port_number);
  
#line 1487 
  if ((unsigned int)rocker_port->stp_state + 4294967294U > 1U) {
    
#line 1489 
    __retres = 0;
    
#line 1489 
    goto return_label;
  }
  else ;
  
#line 1491 
  tmp_1 = rocker_port_fdb(rocker_port,(enum switchdev_trans)SWITCHDEV_TRANS_NONE,addr,(unsigned short)((int)vlan_id),flags);
  
#line 1491 
  __retres = tmp_1;
  return_label: 
#line 1491 
                return __retres;
}


#line 1495  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_event_process(struct rocker const *rocker, struct rocker_desc_info const *desc_info)
{
  int __retres;
  struct rocker_tlv const *attrs[3U];
  struct rocker_tlv const *info;
  u16 type;
  
#line 1502 
  rocker_tlv_parse_desc((struct rocker_tlv const **)(& attrs),2,desc_info);
  
#line 1503 
  if (attrs[1] == (struct rocker_tlv const *)0 || attrs[2] == (struct rocker_tlv const *)0) {
    
#line 1505 
    __retres = -5;
    
#line 1505 
    goto return_label;
  }
  else ;
  
#line 1507 
  type = rocker_tlv_get_u16(attrs[1]);
  
#line 1508 
  info = attrs[2];
  
#line 1510 
  switch ((int)type) {
    int tmp;
    int tmp_0;
    case 1: 
#line 1511 
    ;
    
#line 1512 
    tmp = rocker_event_link_change(rocker,info);
    
#line 1512 
    __retres = tmp;
    
#line 1512 
    goto return_label;
    case 2: 
#line 1513 
    ;
    
#line 1514 
    tmp_0 = rocker_event_mac_vlan_seen(rocker,info);
    
#line 1514 
    __retres = tmp_0;
    
#line 1514 
    goto return_label;
  }
  
#line 1517 
  __retres = -95;
  return_label: 
#line 1517 
                return __retres;
}


#line 1520  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static irqreturn_t rocker_event_irq_handler(int irq, void *dev_id)
{
  irqreturn_t __retres;
  struct rocker_desc_info const *desc_info;
  int err;
  
#line 1522 
  struct rocker *rocker = (struct rocker *)dev_id;
  
#line 1523 
  struct pci_dev const *pdev = (struct pci_dev const *)rocker->pdev;
  
#line 1525 
  u32 credits = 0U;
  
#line 1528 
  goto ldv_54796;
  ldv_54795: 
#line 1529 
  ;
  
#line 1529 
  err = rocker_desc_err(desc_info);
  
#line 1530 
  if (err != 0) 
#line 1531 
                dev_err(& pdev->dev,"event desc received with err %d\n",err);
  else {
    
#line 1534 
    err = rocker_event_process((struct rocker const *)rocker,desc_info);
    
#line 1535 
    if (err != 0) 
#line 1536 
                  dev_err(& pdev->dev,"event processing failed with err %d\n",err); else ;
  }
  
#line 1539 
  rocker_desc_gen_clear(desc_info);
  
#line 1540 
  rocker_desc_head_set((struct rocker const *)rocker,& rocker->event_ring,desc_info);
  
#line 1541 
  credits += 1U;
  ldv_54796: 
#line 1542 
  ;
  
#line 1528 
  desc_info = (struct rocker_desc_info const *)rocker_desc_tail_get(& rocker->event_ring);
  
#line 1528 
  if (desc_info != (struct rocker_desc_info const *)0) 
#line 1530 
                                                       goto ldv_54795; else 
                                                                    
#line 1533 
                                                                    goto ldv_54797;
  ldv_54797: 
#line 1534 
  ;
  
#line 1543 
  rocker_dma_ring_credits_set((struct rocker const *)rocker,(struct rocker_dma_ring_info const *)(& rocker->event_ring),credits);
  
#line 1545 
  __retres = IRQ_HANDLED;
  
#line 1545 
  return __retres;
}


#line 1548  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static irqreturn_t rocker_tx_irq_handler(int irq, void *dev_id)
{
  irqreturn_t __retres;
  
#line 1550 
  struct rocker_port *rocker_port = (struct rocker_port *)dev_id;
  
#line 1552 
  napi_schedule(& rocker_port->napi_tx);
  
#line 1553 
  __retres = IRQ_HANDLED;
  
#line 1553 
  return __retres;
}


#line 1556  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static irqreturn_t rocker_rx_irq_handler(int irq, void *dev_id)
{
  irqreturn_t __retres;
  
#line 1558 
  struct rocker_port *rocker_port = (struct rocker_port *)dev_id;
  
#line 1560 
  napi_schedule(& rocker_port->napi_rx);
  
#line 1561 
  __retres = IRQ_HANDLED;
  
#line 1561 
  return __retres;
}


#line 1576  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_exec(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, int (*prepare)(struct rocker_port const *, struct rocker_desc_info *, void *), void *prepare_priv, int (*process)(struct rocker_port const *, struct rocker_desc_info const *, void *), void *process_priv)
{
  int __retres;
  struct rocker_desc_info *desc_info;
  struct rocker_wait *wait;
  unsigned long lock_flags;
  int err;
  
#line 1581 
  struct rocker *rocker = rocker_port->rocker;
  
#line 1584 
  bool nowait = (_Bool)(((unsigned long)flags & 2UL) != 0UL);
  
#line 1588 
  wait = rocker_wait_create(rocker_port,trans,flags);
  
#line 1589 
  if (wait == (struct rocker_wait *)0) {
    
#line 1590 
    __retres = -12;
    
#line 1590 
    goto return_label;
  }
  else ;
  
#line 1591 
  wait->nowait = nowait;
  
#line 1593 
  ldv___ldv_spin_lock_77(& rocker->cmd_ring_lock);
  
#line 1595 
  desc_info = rocker_desc_head_get((struct rocker_dma_ring_info const *)(& rocker->cmd_ring));
  
#line 1596 
  if (desc_info == (struct rocker_desc_info *)0) {
    
#line 1597 
    ldv_spin_unlock_irqrestore_78(& rocker->cmd_ring_lock,lock_flags);
    
#line 1598 
    err = -11;
    
#line 1599 
    goto out;
  }
  else ;
  
#line 1602 
  err = (*prepare)((struct rocker_port const *)rocker_port,desc_info,prepare_priv);
  
#line 1603 
  if (err != 0) {
    
#line 1604 
    ldv_spin_unlock_irqrestore_79(& rocker->cmd_ring_lock,lock_flags);
    
#line 1605 
    goto out;
  }
  else ;
  
#line 1608 
  rocker_desc_cookie_ptr_set((struct rocker_desc_info const *)desc_info,(void *)wait);
  
#line 1610 
  if (trans != (unsigned int)SWITCHDEV_TRANS_PREPARE) 
#line 1611 
                                                      rocker_desc_head_set((struct rocker const *)rocker,& rocker->cmd_ring,(struct rocker_desc_info const *)desc_info); else ;
  
#line 1613 
  ldv_spin_unlock_irqrestore_80(& rocker->cmd_ring_lock,lock_flags);
  
#line 1615 
  if ((int)nowait != 0) {
    
#line 1616 
    __retres = 0;
    
#line 1616 
    goto return_label;
  }
  else ;
  
#line 1618 
  if (trans != (unsigned int)SWITCHDEV_TRANS_PREPARE) {
    int tmp_0;
    bool tmp;
    
#line 1619 
    tmp = rocker_wait_event_timeout(wait,25UL);
    
#line 1619 
    if (tmp) 
#line 1619 
             tmp_0 = 0; else 
#line 1619 
                             tmp_0 = 1;
    
#line 1619 
    if (tmp_0) {
      
#line 1620 
      __retres = -5;
      
#line 1620 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1622 
  err = rocker_desc_err((struct rocker_desc_info const *)desc_info);
  
#line 1623 
  if (err != 0) {
    
#line 1624 
    __retres = err;
    
#line 1624 
    goto return_label;
  }
  else ;
  
#line 1626 
  if (process != (int (*)(struct rocker_port const *, struct rocker_desc_info const *, void *))0) 
    
#line 1627 
    err = (*process)((struct rocker_port const *)rocker_port,(struct rocker_desc_info const *)desc_info,process_priv); else ;
  
#line 1629 
  rocker_desc_gen_clear((struct rocker_desc_info const *)desc_info);
  out: 
#line 1630 
  ;
  
#line 1631 
  rocker_wait_destroy(trans,wait);
  
#line 1632 
  __retres = err;
  return_label: 
#line 1632 
                return __retres;
}


#line 1636  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_get_port_settings_prep(struct rocker_port const *rocker_port, struct rocker_desc_info *desc_info, void *priv)
{
  int __retres;
  struct rocker_tlv *cmd_info;
  int tmp;
  int tmp_0;
  
#line 1642 
  tmp = rocker_tlv_put_u16(desc_info,1,(unsigned short)1);
  
#line 1642 
  if (tmp != 0) {
    
#line 1644 
    __retres = -90;
    
#line 1644 
    goto return_label;
  }
  else ;
  
#line 1645 
  cmd_info = rocker_tlv_nest_start(desc_info,2);
  
#line 1646 
  if (cmd_info == (struct rocker_tlv *)0) {
    
#line 1647 
    __retres = -90;
    
#line 1647 
    goto return_label;
  }
  else ;
  
#line 1648 
  tmp_0 = rocker_tlv_put_u32(desc_info,1,rocker_port->pport);
  
#line 1648 
  if (tmp_0 != 0) {
    
#line 1650 
    __retres = -90;
    
#line 1650 
    goto return_label;
  }
  else ;
  
#line 1651 
  rocker_tlv_nest_end(desc_info,cmd_info);
  
#line 1652 
  __retres = 0;
  return_label: 
#line 1652 
                return __retres;
}


#line 1656  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_get_port_settings_ethtool_proc(struct rocker_port const *rocker_port, struct rocker_desc_info const *desc_info, void *priv)
{
  int __retres;
  struct rocker_tlv const *attrs[3U];
  struct rocker_tlv const *info_attrs[9U];
  u32 speed;
  u8 duplex;
  u8 autoneg;
  
#line 1660 
  struct ethtool_cmd *ecmd = (struct ethtool_cmd *)priv;
  
#line 1667 
  rocker_tlv_parse_desc((struct rocker_tlv const **)(& attrs),2,desc_info);
  
#line 1668 
  if (attrs[2] == (struct rocker_tlv const *)0) {
    
#line 1669 
    __retres = -5;
    
#line 1669 
    goto return_label;
  }
  else ;
  
#line 1671 
  rocker_tlv_parse_nested((struct rocker_tlv const **)(& info_attrs),8,attrs[2]);
  
#line 1673 
  if ((info_attrs[2] == (struct rocker_tlv const *)0 || info_attrs[3] == (struct rocker_tlv const *)0) || info_attrs[4] == (struct rocker_tlv const *)0) {
    
#line 1676 
    __retres = -5;
    
#line 1676 
    goto return_label;
  }
  else ;
  
#line 1678 
  speed = rocker_tlv_get_u32(info_attrs[2]);
  
#line 1679 
  duplex = rocker_tlv_get_u8(info_attrs[3]);
  
#line 1680 
  autoneg = rocker_tlv_get_u8(info_attrs[4]);
  
#line 1682 
  ecmd->transceiver = (unsigned char)0U;
  
#line 1683 
  ecmd->supported = 128U;
  
#line 1684 
  ecmd->phy_address = (unsigned char)255U;
  
#line 1685 
  ecmd->port = (unsigned char)0U;
  
#line 1686 
  ethtool_cmd_speed_set(ecmd,speed);
  
#line 1687 
  ecmd->duplex = (unsigned char)((unsigned int)duplex != 0U);
  
#line 1688 
  ecmd->autoneg = (unsigned char)((unsigned int)autoneg != 0U);
  
#line 1690 
  __retres = 0;
  return_label: 
#line 1690 
                return __retres;
}


#line 1694  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_get_port_settings_macaddr_proc(struct rocker_port const *rocker_port, struct rocker_desc_info const *desc_info, void *priv)
{
  int __retres;
  struct rocker_tlv const *attrs[3U];
  struct rocker_tlv const *info_attrs[9U];
  struct rocker_tlv const *attr;
  int tmp;
  void *tmp_0;
  
#line 1698 
  unsigned char *macaddr = (unsigned char *)priv;
  
#line 1703 
  rocker_tlv_parse_desc((struct rocker_tlv const **)(& attrs),2,desc_info);
  
#line 1704 
  if (attrs[2] == (struct rocker_tlv const *)0) {
    
#line 1705 
    __retres = -5;
    
#line 1705 
    goto return_label;
  }
  else ;
  
#line 1707 
  rocker_tlv_parse_nested((struct rocker_tlv const **)(& info_attrs),8,attrs[2]);
  
#line 1709 
  attr = info_attrs[5];
  
#line 1710 
  if (attr == (struct rocker_tlv const *)0) {
    
#line 1711 
    __retres = -5;
    
#line 1711 
    goto return_label;
  }
  else ;
  
#line 1713 
  tmp = rocker_tlv_len(attr);
  
#line 1713 
  if (tmp != 6) {
    
#line 1714 
    __retres = -22;
    
#line 1714 
    goto return_label;
  }
  else ;
  
#line 1716 
  tmp_0 = rocker_tlv_data(attr);
  
#line 1716 
  ;
  
#line 1716 
  ether_addr_copy(macaddr,(u8 const *)tmp_0);
  
#line 1717 
  __retres = 0;
  return_label: 
#line 1717 
                return __retres;
}


#line 1726  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_get_port_settings_phys_name_proc(struct rocker_port const *rocker_port, struct rocker_desc_info const *desc_info, void *priv)
{
  int __retres;
  struct rocker_tlv const *info_attrs[9U];
  struct rocker_tlv const *attrs[3U];
  struct rocker_tlv const *attr;
  size_t i;
  size_t j;
  size_t len;
  char const *str;
  size_t tmp_1;
  
#line 1732 
  struct port_name *name = (struct port_name *)priv;
  
#line 1737 
  rocker_tlv_parse_desc((struct rocker_tlv const **)(& attrs),2,desc_info);
  
#line 1738 
  if (attrs[2] == (struct rocker_tlv const *)0) {
    
#line 1739 
    __retres = -5;
    
#line 1739 
    goto return_label;
  }
  else ;
  
#line 1741 
  rocker_tlv_parse_nested((struct rocker_tlv const **)(& info_attrs),8,attrs[2]);
  
#line 1743 
  attr = info_attrs[8];
  
#line 1744 
  if (attr == (struct rocker_tlv const *)0) {
    
#line 1745 
    __retres = -5;
    
#line 1745 
    goto return_label;
  }
  else ;
  {
    int tmp;
    size_t tmp_0;
    
#line 1747 
    tmp = rocker_tlv_len(attr);
    
#line 1747 
    size_t __min1 = (unsigned long)tmp;
    
#line 1747 
    size_t __min2 = name->len;
    
#line 1747 
    if (__min1 < __min2) 
#line 1747 
                         tmp_0 = __min1; else 
#line 1747 
                                              tmp_0 = __min2;
    
#line 1747 
    tmp_1 = tmp_0;
  }
  
#line 1747 
  len = tmp_1;
  
#line 1748 
  str = (char const *)rocker_tlv_data(attr);
  
#line 1751 
  j = 0UL;
  
#line 1751 
  i = j;
  
#line 1751 
  goto ldv_54878;
  ldv_54877: 
#line 1752 
  ;
  
#line 1752 
  if (((int)_ctype[(int)((unsigned char)*(str + i))] & 7) != 0) {
    
#line 1753 
    *(name->buf + j) = *(str + i);
    
#line 1754 
    j += 1UL;
  }
  else ;
  
#line 1751 
  i += 1UL;
  ldv_54878: 
#line 1752 
  ;
  
#line 1751 
  if (i < len) 
#line 1753 
               goto ldv_54877; else 
#line 1756 
                                    goto ldv_54879;
  ldv_54879: 
#line 1757 
  ;
  
#line 1758 
  if (j == 0UL) {
    
#line 1759 
    __retres = -5;
    
#line 1759 
    goto return_label;
  }
  else ;
  
#line 1761 
  *(name->buf + j) = (char)0;
  
#line 1763 
  __retres = 0;
  return_label: 
#line 1763 
                return __retres;
}


#line 1767  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_set_port_settings_ethtool_prep(struct rocker_port const *rocker_port, struct rocker_desc_info *desc_info, void *priv)
{
  int __retres;
  struct rocker_tlv *cmd_info;
  int tmp;
  int tmp_0;
  int tmp_2;
  __u32 tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 1771 
  struct ethtool_cmd *ecmd = (struct ethtool_cmd *)priv;
  
#line 1774 
  tmp = rocker_tlv_put_u16(desc_info,1,(unsigned short)2);
  
#line 1774 
  if (tmp != 0) {
    
#line 1776 
    __retres = -90;
    
#line 1776 
    goto return_label;
  }
  else ;
  
#line 1777 
  cmd_info = rocker_tlv_nest_start(desc_info,2);
  
#line 1778 
  if (cmd_info == (struct rocker_tlv *)0) {
    
#line 1779 
    __retres = -90;
    
#line 1779 
    goto return_label;
  }
  else ;
  
#line 1780 
  tmp_0 = rocker_tlv_put_u32(desc_info,1,rocker_port->pport);
  
#line 1780 
  if (tmp_0 != 0) {
    
#line 1782 
    __retres = -90;
    
#line 1782 
    goto return_label;
  }
  else ;
  
#line 1783 
  tmp_1 = ethtool_cmd_speed((struct ethtool_cmd const *)ecmd);
  
#line 1783 
  ;
  
#line 1783 
  tmp_2 = rocker_tlv_put_u32(desc_info,2,tmp_1);
  
#line 1783 
  if (tmp_2 != 0) {
    
#line 1785 
    __retres = -90;
    
#line 1785 
    goto return_label;
  }
  else ;
  
#line 1786 
  tmp_3 = rocker_tlv_put_u8(desc_info,3,(unsigned char)((int)ecmd->duplex));
  
#line 1786 
  if (tmp_3 != 0) {
    
#line 1788 
    __retres = -90;
    
#line 1788 
    goto return_label;
  }
  else ;
  
#line 1789 
  tmp_4 = rocker_tlv_put_u8(desc_info,4,(unsigned char)((int)ecmd->autoneg));
  
#line 1789 
  if (tmp_4 != 0) {
    
#line 1791 
    __retres = -90;
    
#line 1791 
    goto return_label;
  }
  else ;
  
#line 1792 
  rocker_tlv_nest_end(desc_info,cmd_info);
  
#line 1793 
  __retres = 0;
  return_label: 
#line 1793 
                return __retres;
}


#line 1797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_set_port_settings_macaddr_prep(struct rocker_port const *rocker_port, struct rocker_desc_info *desc_info, void *priv)
{
  int __retres;
  struct rocker_tlv *cmd_info;
  int tmp;
  int tmp_0;
  int tmp_1;
  
#line 1801 
  unsigned char const *macaddr = (unsigned char const *)priv;
  
#line 1804 
  tmp = rocker_tlv_put_u16(desc_info,1,(unsigned short)2);
  
#line 1804 
  if (tmp != 0) {
    
#line 1806 
    __retres = -90;
    
#line 1806 
    goto return_label;
  }
  else ;
  
#line 1807 
  cmd_info = rocker_tlv_nest_start(desc_info,2);
  
#line 1808 
  if (cmd_info == (struct rocker_tlv *)0) {
    
#line 1809 
    __retres = -90;
    
#line 1809 
    goto return_label;
  }
  else ;
  
#line 1810 
  tmp_0 = rocker_tlv_put_u32(desc_info,1,rocker_port->pport);
  
#line 1810 
  if (tmp_0 != 0) {
    
#line 1812 
    __retres = -90;
    
#line 1812 
    goto return_label;
  }
  else ;
  
#line 1813 
  tmp_1 = rocker_tlv_put(desc_info,5,6,(void const *)macaddr);
  
#line 1813 
  if (tmp_1 != 0) {
    
#line 1815 
    __retres = -90;
    
#line 1815 
    goto return_label;
  }
  else ;
  
#line 1816 
  rocker_tlv_nest_end(desc_info,cmd_info);
  
#line 1817 
  __retres = 0;
  return_label: 
#line 1817 
                return __retres;
}


#line 1821  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_set_port_learning_prep(struct rocker_port const *rocker_port, struct rocker_desc_info *desc_info, void *priv)
{
  int __retres;
  struct rocker_tlv *cmd_info;
  int tmp;
  int tmp_0;
  int tmp_1;
  
#line 1827 
  tmp = rocker_tlv_put_u16(desc_info,1,(unsigned short)2);
  
#line 1827 
  if (tmp != 0) {
    
#line 1829 
    __retres = -90;
    
#line 1829 
    goto return_label;
  }
  else ;
  
#line 1830 
  cmd_info = rocker_tlv_nest_start(desc_info,2);
  
#line 1831 
  if (cmd_info == (struct rocker_tlv *)0) {
    
#line 1832 
    __retres = -90;
    
#line 1832 
    goto return_label;
  }
  else ;
  
#line 1833 
  tmp_0 = rocker_tlv_put_u32(desc_info,1,rocker_port->pport);
  
#line 1833 
  if (tmp_0 != 0) {
    
#line 1835 
    __retres = -90;
    
#line 1835 
    goto return_label;
  }
  else ;
  
#line 1836 
  tmp_1 = rocker_tlv_put_u8(desc_info,7,(unsigned char)(((unsigned long)rocker_port->brport_flags & 32UL) != 0UL));
  
#line 1836 
  if (tmp_1 != 0) {
    
#line 1838 
    __retres = -90;
    
#line 1838 
    goto return_label;
  }
  else ;
  
#line 1839 
  rocker_tlv_nest_end(desc_info,cmd_info);
  
#line 1840 
  __retres = 0;
  return_label: 
#line 1840 
                return __retres;
}


#line 1843  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_get_port_settings_ethtool(struct rocker_port *rocker_port, struct ethtool_cmd *ecmd)
{
  int tmp;
  
#line 1846 
  tmp = rocker_cmd_exec(rocker_port,(enum switchdev_trans)SWITCHDEV_TRANS_NONE,0,& rocker_cmd_get_port_settings_prep,(void *)0,& rocker_cmd_get_port_settings_ethtool_proc,(void *)ecmd);
  
#line 1846 
  return tmp;
}


#line 1852  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_get_port_settings_macaddr(struct rocker_port *rocker_port, unsigned char *macaddr)
{
  int tmp;
  
#line 1855 
  tmp = rocker_cmd_exec(rocker_port,(enum switchdev_trans)SWITCHDEV_TRANS_NONE,0,& rocker_cmd_get_port_settings_prep,(void *)0,& rocker_cmd_get_port_settings_macaddr_proc,(void *)macaddr);
  
#line 1855 
  return tmp;
}


#line 1861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_set_port_settings_ethtool(struct rocker_port *rocker_port, struct ethtool_cmd *ecmd)
{
  int tmp;
  
#line 1864 
  tmp = rocker_cmd_exec(rocker_port,(enum switchdev_trans)SWITCHDEV_TRANS_NONE,0,& rocker_cmd_set_port_settings_ethtool_prep,(void *)ecmd,(int (*)(struct rocker_port const *, struct rocker_desc_info const *, void *))0,(void *)0);
  
#line 1864 
  return tmp;
}


#line 1869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_set_port_settings_macaddr(struct rocker_port *rocker_port, unsigned char *macaddr)
{
  int tmp;
  
#line 1872 
  tmp = rocker_cmd_exec(rocker_port,(enum switchdev_trans)SWITCHDEV_TRANS_NONE,0,& rocker_cmd_set_port_settings_macaddr_prep,(void *)macaddr,(int (*)(struct rocker_port const *, struct rocker_desc_info const *, void *))0,(void *)0);
  
#line 1872 
  return tmp;
}


#line 1877  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_set_learning(struct rocker_port *rocker_port, enum switchdev_trans trans)
{
  int tmp;
  
#line 1880 
  tmp = rocker_cmd_exec(rocker_port,trans,0,& rocker_cmd_set_port_learning_prep,(void *)0,(int (*)(struct rocker_port const *, struct rocker_desc_info const *, void *))0,(void *)0);
  
#line 1880 
  return tmp;
}


#line 1886  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_flow_tbl_add_ig_port(struct rocker_desc_info *desc_info, struct rocker_flow_tbl_entry const *entry)
{
  int __retres;
  int tmp;
  int tmp_0;
  int tmp_1;
  
#line 1889 
  tmp = rocker_tlv_put_u32(desc_info,6,entry->key.__anonCompField_rocker_flow_tbl_key_114.ig_port.in_pport);
  
#line 1889 
  if (tmp != 0) {
    
#line 1891 
    __retres = -90;
    
#line 1891 
    goto return_label;
  }
  else ;
  
#line 1892 
  tmp_0 = rocker_tlv_put_u32(desc_info,7,entry->key.__anonCompField_rocker_flow_tbl_key_114.ig_port.in_pport_mask);
  
#line 1892 
  if (tmp_0 != 0) {
    
#line 1894 
    __retres = -90;
    
#line 1894 
    goto return_label;
  }
  else ;
  
#line 1895 
  tmp_1 = rocker_tlv_put_u16(desc_info,9,(unsigned short)((int)((unsigned short)entry->key.__anonCompField_rocker_flow_tbl_key_114.ig_port.goto_tbl)));
  
#line 1895 
  if (tmp_1 != 0) {
    
#line 1897 
    __retres = -90;
    
#line 1897 
    goto return_label;
  }
  else ;
  
#line 1899 
  __retres = 0;
  return_label: 
#line 1899 
                return __retres;
}


#line 1903  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_flow_tbl_add_vlan(struct rocker_desc_info *desc_info, struct rocker_flow_tbl_entry const *entry)
{
  int __retres;
  int tmp;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  
#line 1906 
  tmp = rocker_tlv_put_u32(desc_info,6,entry->key.__anonCompField_rocker_flow_tbl_key_114.vlan.in_pport);
  
#line 1906 
  if (tmp != 0) {
    
#line 1908 
    __retres = -90;
    
#line 1908 
    goto return_label;
  }
  else ;
  
#line 1909 
  tmp_0 = rocker_tlv_put_be16(desc_info,14,(unsigned short)((int)entry->key.__anonCompField_rocker_flow_tbl_key_114.vlan.vlan_id));
  
#line 1909 
  if (tmp_0 != 0) {
    
#line 1911 
    __retres = -90;
    
#line 1911 
    goto return_label;
  }
  else ;
  
#line 1912 
  tmp_1 = rocker_tlv_put_be16(desc_info,15,(unsigned short)((int)entry->key.__anonCompField_rocker_flow_tbl_key_114.vlan.vlan_id_mask));
  
#line 1912 
  if (tmp_1 != 0) {
    
#line 1914 
    __retres = -90;
    
#line 1914 
    goto return_label;
  }
  else ;
  
#line 1915 
  tmp_2 = rocker_tlv_put_u16(desc_info,9,(unsigned short)((int)((unsigned short)entry->key.__anonCompField_rocker_flow_tbl_key_114.vlan.goto_tbl)));
  
#line 1915 
  if (tmp_2 != 0) {
    
#line 1917 
    __retres = -90;
    
#line 1917 
    goto return_label;
  }
  else ;
  
#line 1918 
  if ((int)entry->key.__anonCompField_rocker_flow_tbl_key_114.vlan.untagged != 0) {
    int tmp_3;
    
#line 1918 
    tmp_3 = rocker_tlv_put_be16(desc_info,19,(unsigned short)((int)entry->key.__anonCompField_rocker_flow_tbl_key_114.vlan.new_vlan_id));
    
#line 1918 
    if (tmp_3 != 0) {
      
#line 1921 
      __retres = -90;
      
#line 1921 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1923 
  __retres = 0;
  return_label: 
#line 1923 
                return __retres;
}


#line 1927  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_flow_tbl_add_term_mac(struct rocker_desc_info *desc_info, struct rocker_flow_tbl_entry const *entry)
{
  int __retres;
  int tmp;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  int tmp_5;
  int tmp_6;
  
#line 1930 
  tmp = rocker_tlv_put_u32(desc_info,6,entry->key.__anonCompField_rocker_flow_tbl_key_114.term_mac.in_pport);
  
#line 1930 
  if (tmp != 0) {
    
#line 1932 
    __retres = -90;
    
#line 1932 
    goto return_label;
  }
  else ;
  
#line 1933 
  tmp_0 = rocker_tlv_put_u32(desc_info,7,entry->key.__anonCompField_rocker_flow_tbl_key_114.term_mac.in_pport_mask);
  
#line 1933 
  if (tmp_0 != 0) {
    
#line 1935 
    __retres = -90;
    
#line 1935 
    goto return_label;
  }
  else ;
  
#line 1936 
  tmp_1 = rocker_tlv_put_be16(desc_info,23,(unsigned short)((int)entry->key.__anonCompField_rocker_flow_tbl_key_114.term_mac.eth_type));
  
#line 1936 
  if (tmp_1 != 0) {
    
#line 1938 
    __retres = -90;
    
#line 1938 
    goto return_label;
  }
  else ;
  
#line 1939 
  tmp_2 = rocker_tlv_put(desc_info,24,6,(void const *)(& entry->key.__anonCompField_rocker_flow_tbl_key_114.term_mac.eth_dst));
  
#line 1939 
  if (tmp_2 != 0) {
    
#line 1941 
    __retres = -90;
    
#line 1941 
    goto return_label;
  }
  else ;
  
#line 1942 
  tmp_3 = rocker_tlv_put(desc_info,25,6,(void const *)(& entry->key.__anonCompField_rocker_flow_tbl_key_114.term_mac.eth_dst_mask));
  
#line 1942 
  if (tmp_3 != 0) {
    
#line 1944 
    __retres = -90;
    
#line 1944 
    goto return_label;
  }
  else ;
  
#line 1945 
  tmp_4 = rocker_tlv_put_be16(desc_info,14,(unsigned short)((int)entry->key.__anonCompField_rocker_flow_tbl_key_114.term_mac.vlan_id));
  
#line 1945 
  if (tmp_4 != 0) {
    
#line 1947 
    __retres = -90;
    
#line 1947 
    goto return_label;
  }
  else ;
  
#line 1948 
  tmp_5 = rocker_tlv_put_be16(desc_info,15,(unsigned short)((int)entry->key.__anonCompField_rocker_flow_tbl_key_114.term_mac.vlan_id_mask));
  
#line 1948 
  if (tmp_5 != 0) {
    
#line 1950 
    __retres = -90;
    
#line 1950 
    goto return_label;
  }
  else ;
  
#line 1951 
  tmp_6 = rocker_tlv_put_u16(desc_info,9,(unsigned short)((int)((unsigned short)entry->key.__anonCompField_rocker_flow_tbl_key_114.term_mac.goto_tbl)));
  
#line 1951 
  if (tmp_6 != 0) {
    
#line 1953 
    __retres = -90;
    
#line 1953 
    goto return_label;
  }
  else ;
  
#line 1954 
  if ((int)entry->key.__anonCompField_rocker_flow_tbl_key_114.term_mac.copy_to_cpu != 0) {
    int tmp_7;
    
#line 1954 
    tmp_7 = rocker_tlv_put_u8(desc_info,61,(unsigned char)((int)entry->key.__anonCompField_rocker_flow_tbl_key_114.term_mac.copy_to_cpu));
    
#line 1954 
    if (tmp_7 != 0) {
      
#line 1957 
      __retres = -90;
      
#line 1957 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1959 
  __retres = 0;
  return_label: 
#line 1959 
                return __retres;
}


#line 1963  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_flow_tbl_add_ucast_routing(struct rocker_desc_info *desc_info, struct rocker_flow_tbl_entry const *entry)
{
  int __retres;
  int tmp;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  
#line 1966 
  tmp = rocker_tlv_put_be16(desc_info,23,(unsigned short)((int)entry->key.__anonCompField_rocker_flow_tbl_key_114.ucast_routing.eth_type));
  
#line 1966 
  if (tmp != 0) {
    
#line 1968 
    __retres = -90;
    
#line 1968 
    goto return_label;
  }
  else ;
  
#line 1969 
  tmp_0 = rocker_tlv_put_be32(desc_info,36,entry->key.__anonCompField_rocker_flow_tbl_key_114.ucast_routing.dst4);
  
#line 1969 
  if (tmp_0 != 0) {
    
#line 1971 
    __retres = -90;
    
#line 1971 
    goto return_label;
  }
  else ;
  
#line 1972 
  tmp_1 = rocker_tlv_put_be32(desc_info,37,entry->key.__anonCompField_rocker_flow_tbl_key_114.ucast_routing.dst4_mask);
  
#line 1972 
  if (tmp_1 != 0) {
    
#line 1974 
    __retres = -90;
    
#line 1974 
    goto return_label;
  }
  else ;
  
#line 1975 
  tmp_2 = rocker_tlv_put_u16(desc_info,9,(unsigned short)((int)((unsigned short)entry->key.__anonCompField_rocker_flow_tbl_key_114.ucast_routing.goto_tbl)));
  
#line 1975 
  if (tmp_2 != 0) {
    
#line 1977 
    __retres = -90;
    
#line 1977 
    goto return_label;
  }
  else ;
  
#line 1978 
  tmp_3 = rocker_tlv_put_u32(desc_info,10,entry->key.__anonCompField_rocker_flow_tbl_key_114.ucast_routing.group_id);
  
#line 1978 
  if (tmp_3 != 0) {
    
#line 1980 
    __retres = -90;
    
#line 1980 
    goto return_label;
  }
  else ;
  
#line 1982 
  __retres = 0;
  return_label: 
#line 1982 
                return __retres;
}


#line 1986  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_flow_tbl_add_bridge(struct rocker_desc_info *desc_info, struct rocker_flow_tbl_entry const *entry)
{
  int __retres;
  int tmp_3;
  int tmp_4;
  
#line 1989 
  if (entry->key.__anonCompField_rocker_flow_tbl_key_114.bridge.has_eth_dst != 0) {
    int tmp;
    
#line 1989 
    tmp = rocker_tlv_put(desc_info,24,6,(void const *)(& entry->key.__anonCompField_rocker_flow_tbl_key_114.bridge.eth_dst));
    
#line 1989 
    if (tmp != 0) {
      
#line 1992 
      __retres = -90;
      
#line 1992 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1993 
  if (entry->key.__anonCompField_rocker_flow_tbl_key_114.bridge.has_eth_dst_mask != 0) {
    int tmp_0;
    
#line 1993 
    tmp_0 = rocker_tlv_put(desc_info,25,6,(void const *)(& entry->key.__anonCompField_rocker_flow_tbl_key_114.bridge.eth_dst_mask));
    
#line 1993 
    if (tmp_0 != 0) {
      
#line 1996 
      __retres = -90;
      
#line 1996 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1997 
  if ((unsigned int)entry->key.__anonCompField_rocker_flow_tbl_key_114.bridge.vlan_id != 0U) {
    int tmp_1;
    
#line 1997 
    tmp_1 = rocker_tlv_put_be16(desc_info,14,(unsigned short)((int)entry->key.__anonCompField_rocker_flow_tbl_key_114.bridge.vlan_id));
    
#line 1997 
    if (tmp_1 != 0) {
      
#line 2000 
      __retres = -90;
      
#line 2000 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2001 
  if (entry->key.__anonCompField_rocker_flow_tbl_key_114.bridge.tunnel_id != 0U) {
    int tmp_2;
    
#line 2001 
    tmp_2 = rocker_tlv_put_u32(desc_info,21,entry->key.__anonCompField_rocker_flow_tbl_key_114.bridge.tunnel_id);
    
#line 2001 
    if (tmp_2 != 0) {
      
#line 2004 
      __retres = -90;
      
#line 2004 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2005 
  tmp_3 = rocker_tlv_put_u16(desc_info,9,(unsigned short)((int)((unsigned short)entry->key.__anonCompField_rocker_flow_tbl_key_114.bridge.goto_tbl)));
  
#line 2005 
  if (tmp_3 != 0) {
    
#line 2007 
    __retres = -90;
    
#line 2007 
    goto return_label;
  }
  else ;
  
#line 2008 
  tmp_4 = rocker_tlv_put_u32(desc_info,10,entry->key.__anonCompField_rocker_flow_tbl_key_114.bridge.group_id);
  
#line 2008 
  if (tmp_4 != 0) {
    
#line 2010 
    __retres = -90;
    
#line 2010 
    goto return_label;
  }
  else ;
  
#line 2011 
  if ((int)entry->key.__anonCompField_rocker_flow_tbl_key_114.bridge.copy_to_cpu != 0) {
    int tmp_5;
    
#line 2011 
    tmp_5 = rocker_tlv_put_u8(desc_info,61,(unsigned char)((int)entry->key.__anonCompField_rocker_flow_tbl_key_114.bridge.copy_to_cpu));
    
#line 2011 
    if (tmp_5 != 0) {
      
#line 2014 
      __retres = -90;
      
#line 2014 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2016 
  __retres = 0;
  return_label: 
#line 2016 
                return __retres;
}


#line 2020  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_flow_tbl_add_acl(struct rocker_desc_info *desc_info, struct rocker_flow_tbl_entry const *entry)
{
  int __retres;
  int tmp;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  int tmp_5;
  int tmp_6;
  int tmp_7;
  int tmp_9;
  
#line 2023 
  tmp = rocker_tlv_put_u32(desc_info,6,entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.in_pport);
  
#line 2023 
  if (tmp != 0) {
    
#line 2025 
    __retres = -90;
    
#line 2025 
    goto return_label;
  }
  else ;
  
#line 2026 
  tmp_0 = rocker_tlv_put_u32(desc_info,7,entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.in_pport_mask);
  
#line 2026 
  if (tmp_0 != 0) {
    
#line 2028 
    __retres = -90;
    
#line 2028 
    goto return_label;
  }
  else ;
  
#line 2029 
  tmp_1 = rocker_tlv_put(desc_info,26,6,(void const *)(& entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.eth_src));
  
#line 2029 
  if (tmp_1 != 0) {
    
#line 2031 
    __retres = -90;
    
#line 2031 
    goto return_label;
  }
  else ;
  
#line 2032 
  tmp_2 = rocker_tlv_put(desc_info,27,6,(void const *)(& entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.eth_src_mask));
  
#line 2032 
  if (tmp_2 != 0) {
    
#line 2034 
    __retres = -90;
    
#line 2034 
    goto return_label;
  }
  else ;
  
#line 2035 
  tmp_3 = rocker_tlv_put(desc_info,24,6,(void const *)(& entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.eth_dst));
  
#line 2035 
  if (tmp_3 != 0) {
    
#line 2037 
    __retres = -90;
    
#line 2037 
    goto return_label;
  }
  else ;
  
#line 2038 
  tmp_4 = rocker_tlv_put(desc_info,25,6,(void const *)(& entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.eth_dst_mask));
  
#line 2038 
  if (tmp_4 != 0) {
    
#line 2040 
    __retres = -90;
    
#line 2040 
    goto return_label;
  }
  else ;
  
#line 2041 
  tmp_5 = rocker_tlv_put_be16(desc_info,23,(unsigned short)((int)entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.eth_type));
  
#line 2041 
  if (tmp_5 != 0) {
    
#line 2043 
    __retres = -90;
    
#line 2043 
    goto return_label;
  }
  else ;
  
#line 2044 
  tmp_6 = rocker_tlv_put_be16(desc_info,14,(unsigned short)((int)entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.vlan_id));
  
#line 2044 
  if (tmp_6 != 0) {
    
#line 2046 
    __retres = -90;
    
#line 2046 
    goto return_label;
  }
  else ;
  
#line 2047 
  tmp_7 = rocker_tlv_put_be16(desc_info,15,(unsigned short)((int)entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.vlan_id_mask));
  
#line 2047 
  if (tmp_7 != 0) {
    
#line 2049 
    __retres = -90;
    
#line 2049 
    goto return_label;
  }
  else ;
  
#line 2051 
  if (0 != 0) 
#line 2051 
              tmp_9 = (int)((unsigned short)(((int)entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.eth_type << 8) | ((int)entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.eth_type >> 8)));
  else {
    __u16 tmp_8;
    
#line 2051 
    tmp_8 = __fswab16((unsigned short)((int)entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.eth_type));
    
#line 2051 
    tmp_9 = (int)tmp_8;
  }
  
#line 2051 
  switch (tmp_9) {
    int tmp_10;
    int tmp_11;
    int tmp_12;
    int tmp_13;
    int tmp_14;
    int tmp_15;
    case 2048: 
#line 2052 
    ;
    case 34525: 
#line 2053 
    ;
    
#line 2054 
    tmp_10 = rocker_tlv_put_u8(desc_info,28,(unsigned char)((int)entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.ip_proto));
    
#line 2054 
    if (tmp_10 != 0) {
      
#line 2056 
      __retres = -90;
      
#line 2056 
      goto return_label;
    }
    else ;
    
#line 2057 
    tmp_11 = rocker_tlv_put_u8(desc_info,29,(unsigned char)((int)entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.ip_proto_mask));
    
#line 2057 
    if (tmp_11 != 0) {
      
#line 2060 
      __retres = -90;
      
#line 2060 
      goto return_label;
    }
    else ;
    
#line 2061 
    tmp_12 = rocker_tlv_put_u8(desc_info,30,(unsigned char)((int)entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.ip_tos & 63));
    
#line 2061 
    if (tmp_12 != 0) {
      
#line 2063 
      __retres = -90;
      
#line 2063 
      goto return_label;
    }
    else ;
    
#line 2064 
    tmp_13 = rocker_tlv_put_u8(desc_info,31,(unsigned char)((int)entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.ip_tos_mask & 63));
    
#line 2064 
    if (tmp_13 != 0) {
      
#line 2067 
      __retres = -90;
      
#line 2067 
      goto return_label;
    }
    else ;
    
#line 2068 
    tmp_14 = rocker_tlv_put_u8(desc_info,34,(unsigned char)((int)entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.ip_tos >> 6));
    
#line 2068 
    if (tmp_14 != 0) {
      
#line 2070 
      __retres = -90;
      
#line 2070 
      goto return_label;
    }
    else ;
    
#line 2071 
    tmp_15 = rocker_tlv_put_u8(desc_info,35,(unsigned char)((int)entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.ip_tos_mask >> 6));
    
#line 2071 
    if (tmp_15 != 0) {
      
#line 2074 
      __retres = -90;
      
#line 2074 
      goto return_label;
    }
    else ;
    
#line 2075 
    goto ldv_54946;
  }
  ldv_54946: 
#line 2078 
  ;
  
#line 2078 
  if (entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.group_id != 0U) {
    int tmp_16;
    
#line 2078 
    tmp_16 = rocker_tlv_put_u32(desc_info,10,entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.group_id);
    
#line 2078 
    if (tmp_16 != 0) {
      
#line 2081 
      __retres = -90;
      
#line 2081 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2083 
  __retres = 0;
  return_label: 
#line 2083 
                return __retres;
}


#line 2086  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_flow_tbl_add(struct rocker_port const *rocker_port, struct rocker_desc_info *desc_info, void *priv)
{
  int __retres;
  struct rocker_tlv *cmd_info;
  int tmp;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  
#line 2090 
  struct rocker_flow_tbl_entry const *entry = (struct rocker_flow_tbl_entry const *)priv;
  
#line 2092 
  int err = 0;
  
#line 2094 
  tmp = rocker_tlv_put_u16(desc_info,1,(unsigned short)((int)((unsigned short)entry->cmd)));
  
#line 2094 
  if (tmp != 0) {
    
#line 2095 
    __retres = -90;
    
#line 2095 
    goto return_label;
  }
  else ;
  
#line 2096 
  cmd_info = rocker_tlv_nest_start(desc_info,2);
  
#line 2097 
  if (cmd_info == (struct rocker_tlv *)0) {
    
#line 2098 
    __retres = -90;
    
#line 2098 
    goto return_label;
  }
  else ;
  
#line 2099 
  tmp_0 = rocker_tlv_put_u16(desc_info,1,(unsigned short)((int)((unsigned short)entry->key.tbl_id)));
  
#line 2099 
  if (tmp_0 != 0) {
    
#line 2101 
    __retres = -90;
    
#line 2101 
    goto return_label;
  }
  else ;
  
#line 2102 
  tmp_1 = rocker_tlv_put_u32(desc_info,2,entry->key.priority);
  
#line 2102 
  if (tmp_1 != 0) {
    
#line 2104 
    __retres = -90;
    
#line 2104 
    goto return_label;
  }
  else ;
  
#line 2105 
  tmp_2 = rocker_tlv_put_u32(desc_info,3,0U);
  
#line 2105 
  if (tmp_2 != 0) {
    
#line 2106 
    __retres = -90;
    
#line 2106 
    goto return_label;
  }
  else ;
  
#line 2107 
  tmp_3 = rocker_tlv_put_u64(desc_info,5,entry->cookie);
  
#line 2107 
  if (tmp_3 != 0) {
    
#line 2109 
    __retres = -90;
    
#line 2109 
    goto return_label;
  }
  else ;
  
#line 2111 
  switch ((unsigned int)entry->key.tbl_id) {
    case (unsigned int)0: 
#line 2112 
    ;
    
#line 2113 
    err = rocker_cmd_flow_tbl_add_ig_port(desc_info,entry);
    
#line 2114 
    goto ldv_54956;
    case (unsigned int)10: 
#line 2115 
    ;
    
#line 2116 
    err = rocker_cmd_flow_tbl_add_vlan(desc_info,entry);
    
#line 2117 
    goto ldv_54956;
    case (unsigned int)20: 
#line 2118 
    ;
    
#line 2119 
    err = rocker_cmd_flow_tbl_add_term_mac(desc_info,entry);
    
#line 2120 
    goto ldv_54956;
    case (unsigned int)30: 
#line 2121 
    ;
    
#line 2122 
    err = rocker_cmd_flow_tbl_add_ucast_routing(desc_info,entry);
    
#line 2123 
    goto ldv_54956;
    case (unsigned int)50: 
#line 2124 
    ;
    
#line 2125 
    err = rocker_cmd_flow_tbl_add_bridge(desc_info,entry);
    
#line 2126 
    goto ldv_54956;
    case (unsigned int)60: 
#line 2127 
    ;
    
#line 2128 
    err = rocker_cmd_flow_tbl_add_acl(desc_info,entry);
    
#line 2129 
    goto ldv_54956;
    default: 
#line 2130 
    ;
    
#line 2131 
    err = -524;
    
#line 2132 
    goto ldv_54956;
  }
  ldv_54956: 
#line 2135 
  ;
  
#line 2135 
  if (err != 0) {
    
#line 2136 
    __retres = err;
    
#line 2136 
    goto return_label;
  }
  else ;
  
#line 2138 
  rocker_tlv_nest_end(desc_info,cmd_info);
  
#line 2140 
  __retres = 0;
  return_label: 
#line 2140 
                return __retres;
}


#line 2143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_flow_tbl_del(struct rocker_port const *rocker_port, struct rocker_desc_info *desc_info, void *priv)
{
  int __retres;
  struct rocker_tlv *cmd_info;
  int tmp;
  int tmp_0;
  
#line 2147 
  struct rocker_flow_tbl_entry const *entry = (struct rocker_flow_tbl_entry const *)priv;
  
#line 2150 
  tmp = rocker_tlv_put_u16(desc_info,1,(unsigned short)((int)((unsigned short)entry->cmd)));
  
#line 2150 
  if (tmp != 0) {
    
#line 2151 
    __retres = -90;
    
#line 2151 
    goto return_label;
  }
  else ;
  
#line 2152 
  cmd_info = rocker_tlv_nest_start(desc_info,2);
  
#line 2153 
  if (cmd_info == (struct rocker_tlv *)0) {
    
#line 2154 
    __retres = -90;
    
#line 2154 
    goto return_label;
  }
  else ;
  
#line 2155 
  tmp_0 = rocker_tlv_put_u64(desc_info,5,entry->cookie);
  
#line 2155 
  if (tmp_0 != 0) {
    
#line 2157 
    __retres = -90;
    
#line 2157 
    goto return_label;
  }
  else ;
  
#line 2158 
  rocker_tlv_nest_end(desc_info,cmd_info);
  
#line 2160 
  __retres = 0;
  return_label: 
#line 2160 
                return __retres;
}


#line 2164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_group_tbl_add_l2_interface(struct rocker_desc_info *desc_info, struct rocker_group_tbl_entry *entry)
{
  int __retres;
  int tmp;
  int tmp_0;
  
#line 2167 
  tmp = rocker_tlv_put_u32(desc_info,8,entry->group_id & 65535U);
  
#line 2167 
  if (tmp != 0) {
    
#line 2169 
    __retres = -90;
    
#line 2169 
    goto return_label;
  }
  else ;
  
#line 2170 
  tmp_0 = rocker_tlv_put_u8(desc_info,59,(unsigned char)((int)entry->__anonCompField_rocker_group_tbl_entry_115.l2_interface.pop_vlan));
  
#line 2170 
  if (tmp_0 != 0) {
    
#line 2172 
    __retres = -90;
    
#line 2172 
    goto return_label;
  }
  else ;
  
#line 2174 
  __retres = 0;
  return_label: 
#line 2174 
                return __retres;
}


#line 2178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_group_tbl_add_l2_rewrite(struct rocker_desc_info *desc_info, struct rocker_group_tbl_entry const *entry)
{
  int __retres;
  int tmp;
  int tmp_1;
  bool tmp_0;
  int tmp_4;
  bool tmp_3;
  
#line 2181 
  tmp = rocker_tlv_put_u32(desc_info,11,entry->__anonCompField_rocker_group_tbl_entry_115.l2_rewrite.group_id);
  
#line 2181 
  if (tmp != 0) {
    
#line 2183 
    __retres = -90;
    
#line 2183 
    goto return_label;
  }
  else ;
  
#line 2184 
  tmp_0 = is_zero_ether_addr((u8 const *)(& entry->__anonCompField_rocker_group_tbl_entry_115.l2_rewrite.eth_src));
  
#line 2184 
  if (tmp_0) 
#line 2184 
             tmp_1 = 0; else 
#line 2184 
                             tmp_1 = 1;
  
#line 2184 
  if (tmp_1) {
    int tmp_2;
    
#line 2184 
    tmp_2 = rocker_tlv_put(desc_info,26,6,(void const *)(& entry->__anonCompField_rocker_group_tbl_entry_115.l2_rewrite.eth_src));
    
#line 2184 
    if (tmp_2 != 0) {
      
#line 2187 
      __retres = -90;
      
#line 2187 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2188 
  tmp_3 = is_zero_ether_addr((u8 const *)(& entry->__anonCompField_rocker_group_tbl_entry_115.l2_rewrite.eth_dst));
  
#line 2188 
  if (tmp_3) 
#line 2188 
             tmp_4 = 0; else 
#line 2188 
                             tmp_4 = 1;
  
#line 2188 
  if (tmp_4) {
    int tmp_5;
    
#line 2188 
    tmp_5 = rocker_tlv_put(desc_info,24,6,(void const *)(& entry->__anonCompField_rocker_group_tbl_entry_115.l2_rewrite.eth_dst));
    
#line 2188 
    if (tmp_5 != 0) {
      
#line 2191 
      __retres = -90;
      
#line 2191 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2192 
  if ((unsigned int)entry->__anonCompField_rocker_group_tbl_entry_115.l2_rewrite.vlan_id != 0U) {
    int tmp_6;
    
#line 2192 
    tmp_6 = rocker_tlv_put_be16(desc_info,14,(unsigned short)((int)entry->__anonCompField_rocker_group_tbl_entry_115.l2_rewrite.vlan_id));
    
#line 2192 
    if (tmp_6 != 0) {
      
#line 2195 
      __retres = -90;
      
#line 2195 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2197 
  __retres = 0;
  return_label: 
#line 2197 
                return __retres;
}


#line 2201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_group_tbl_add_group_ids(struct rocker_desc_info *desc_info, struct rocker_group_tbl_entry const *entry)
{
  int __retres;
  int i;
  struct rocker_tlv *group_ids;
  int tmp;
  int tmp_0;
  
#line 2207 
  tmp = rocker_tlv_put_u16(desc_info,12,(unsigned short)((int)entry->group_count));
  
#line 2207 
  if (tmp != 0) {
    
#line 2209 
    __retres = -90;
    
#line 2209 
    goto return_label;
  }
  else ;
  
#line 2211 
  group_ids = rocker_tlv_nest_start(desc_info,13);
  
#line 2213 
  if (group_ids == (struct rocker_tlv *)0) {
    
#line 2214 
    __retres = -90;
    
#line 2214 
    goto return_label;
  }
  else ;
  
#line 2216 
  i = 0;
  
#line 2216 
  goto ldv_54985;
  ldv_54984: 
#line 2217 
  ;
  
#line 2218 
  tmp_0 = rocker_tlv_put_u32(desc_info,i + 1,*(entry->group_ids + i));
  
#line 2218 
  if (tmp_0 != 0) {
    
#line 2219 
    __retres = -90;
    
#line 2219 
    goto return_label;
  }
  else ;
  
#line 2216 
  i += 1;
  ldv_54985: 
#line 2217 
  ;
  
#line 2216 
  if ((int)entry->group_count > i) 
#line 2218 
                                   goto ldv_54984; else 
#line 2221 
                                                        goto ldv_54986;
  ldv_54986: 
#line 2222 
  ;
  
#line 2221 
  rocker_tlv_nest_end(desc_info,group_ids);
  
#line 2223 
  __retres = 0;
  return_label: 
#line 2223 
                return __retres;
}


#line 2227  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_group_tbl_add_l3_unicast(struct rocker_desc_info *desc_info, struct rocker_group_tbl_entry const *entry)
{
  int __retres;
  int tmp_0;
  bool tmp;
  int tmp_3;
  bool tmp_2;
  int tmp_6;
  int tmp_7;
  
#line 2230 
  tmp = is_zero_ether_addr((u8 const *)(& entry->__anonCompField_rocker_group_tbl_entry_115.l3_unicast.eth_src));
  
#line 2230 
  if (tmp) 
#line 2230 
           tmp_0 = 0; else 
#line 2230 
                           tmp_0 = 1;
  
#line 2230 
  if (tmp_0) {
    int tmp_1;
    
#line 2230 
    tmp_1 = rocker_tlv_put(desc_info,26,6,(void const *)(& entry->__anonCompField_rocker_group_tbl_entry_115.l3_unicast.eth_src));
    
#line 2230 
    if (tmp_1 != 0) {
      
#line 2233 
      __retres = -90;
      
#line 2233 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2234 
  tmp_2 = is_zero_ether_addr((u8 const *)(& entry->__anonCompField_rocker_group_tbl_entry_115.l3_unicast.eth_dst));
  
#line 2234 
  if (tmp_2) 
#line 2234 
             tmp_3 = 0; else 
#line 2234 
                             tmp_3 = 1;
  
#line 2234 
  if (tmp_3) {
    int tmp_4;
    
#line 2234 
    tmp_4 = rocker_tlv_put(desc_info,24,6,(void const *)(& entry->__anonCompField_rocker_group_tbl_entry_115.l3_unicast.eth_dst));
    
#line 2234 
    if (tmp_4 != 0) {
      
#line 2237 
      __retres = -90;
      
#line 2237 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2238 
  if ((unsigned int)entry->__anonCompField_rocker_group_tbl_entry_115.l3_unicast.vlan_id != 0U) {
    int tmp_5;
    
#line 2238 
    tmp_5 = rocker_tlv_put_be16(desc_info,14,(unsigned short)((int)entry->__anonCompField_rocker_group_tbl_entry_115.l3_unicast.vlan_id));
    
#line 2238 
    if (tmp_5 != 0) {
      
#line 2241 
      __retres = -90;
      
#line 2241 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2242 
  tmp_6 = rocker_tlv_put_u8(desc_info,60,(unsigned char)((int)entry->__anonCompField_rocker_group_tbl_entry_115.l3_unicast.ttl_check));
  
#line 2242 
  if (tmp_6 != 0) {
    
#line 2244 
    __retres = -90;
    
#line 2244 
    goto return_label;
  }
  else ;
  
#line 2245 
  tmp_7 = rocker_tlv_put_u32(desc_info,11,entry->__anonCompField_rocker_group_tbl_entry_115.l3_unicast.group_id);
  
#line 2245 
  if (tmp_7 != 0) {
    
#line 2247 
    __retres = -90;
    
#line 2247 
    goto return_label;
  }
  else ;
  
#line 2249 
  __retres = 0;
  return_label: 
#line 2249 
                return __retres;
}


#line 2252  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_group_tbl_add(struct rocker_port const *rocker_port, struct rocker_desc_info *desc_info, void *priv)
{
  int __retres;
  struct rocker_tlv *cmd_info;
  int tmp;
  int tmp_0;
  
#line 2256 
  struct rocker_group_tbl_entry *entry = (struct rocker_group_tbl_entry *)priv;
  
#line 2258 
  int err = 0;
  
#line 2260 
  tmp = rocker_tlv_put_u16(desc_info,1,(unsigned short)((int)((unsigned short)entry->cmd)));
  
#line 2260 
  if (tmp != 0) {
    
#line 2261 
    __retres = -90;
    
#line 2261 
    goto return_label;
  }
  else ;
  
#line 2262 
  cmd_info = rocker_tlv_nest_start(desc_info,2);
  
#line 2263 
  if (cmd_info == (struct rocker_tlv *)0) {
    
#line 2264 
    __retres = -90;
    
#line 2264 
    goto return_label;
  }
  else ;
  
#line 2266 
  tmp_0 = rocker_tlv_put_u32(desc_info,10,entry->group_id);
  
#line 2266 
  if (tmp_0 != 0) {
    
#line 2268 
    __retres = -90;
    
#line 2268 
    goto return_label;
  }
  else ;
  
#line 2270 
  switch (entry->group_id >> 28) {
    case (u32)0: 
#line 2271 
    ;
    
#line 2272 
    err = rocker_cmd_group_tbl_add_l2_interface(desc_info,entry);
    
#line 2273 
    goto ldv_55000;
    case (u32)1: 
#line 2274 
    ;
    
#line 2275 
    err = rocker_cmd_group_tbl_add_l2_rewrite(desc_info,(struct rocker_group_tbl_entry const *)entry);
    
#line 2276 
    goto ldv_55000;
    case (u32)4: 
#line 2277 
    ;
    case (u32)3: 
#line 2278 
    ;
    
#line 2279 
    err = rocker_cmd_group_tbl_add_group_ids(desc_info,(struct rocker_group_tbl_entry const *)entry);
    
#line 2280 
    goto ldv_55000;
    case (u32)2: 
#line 2281 
    ;
    
#line 2282 
    err = rocker_cmd_group_tbl_add_l3_unicast(desc_info,(struct rocker_group_tbl_entry const *)entry);
    
#line 2283 
    goto ldv_55000;
    default: 
#line 2284 
    ;
    
#line 2285 
    err = -524;
    
#line 2286 
    goto ldv_55000;
  }
  ldv_55000: 
#line 2289 
  ;
  
#line 2289 
  if (err != 0) {
    
#line 2290 
    __retres = err;
    
#line 2290 
    goto return_label;
  }
  else ;
  
#line 2292 
  rocker_tlv_nest_end(desc_info,cmd_info);
  
#line 2294 
  __retres = 0;
  return_label: 
#line 2294 
                return __retres;
}


#line 2297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_group_tbl_del(struct rocker_port const *rocker_port, struct rocker_desc_info *desc_info, void *priv)
{
  int __retres;
  struct rocker_tlv *cmd_info;
  int tmp;
  int tmp_0;
  
#line 2301 
  struct rocker_group_tbl_entry const *entry = (struct rocker_group_tbl_entry const *)priv;
  
#line 2304 
  tmp = rocker_tlv_put_u16(desc_info,1,(unsigned short)((int)((unsigned short)entry->cmd)));
  
#line 2304 
  if (tmp != 0) {
    
#line 2305 
    __retres = -90;
    
#line 2305 
    goto return_label;
  }
  else ;
  
#line 2306 
  cmd_info = rocker_tlv_nest_start(desc_info,2);
  
#line 2307 
  if (cmd_info == (struct rocker_tlv *)0) {
    
#line 2308 
    __retres = -90;
    
#line 2308 
    goto return_label;
  }
  else ;
  
#line 2309 
  tmp_0 = rocker_tlv_put_u32(desc_info,10,entry->group_id);
  
#line 2309 
  if (tmp_0 != 0) {
    
#line 2311 
    __retres = -90;
    
#line 2311 
    goto return_label;
  }
  else ;
  
#line 2312 
  rocker_tlv_nest_end(desc_info,cmd_info);
  
#line 2314 
  __retres = 0;
  return_label: 
#line 2314 
                return __retres;
}


#line 2321  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_init_tbls(struct rocker *rocker)
{
  int __retres;
  
#line 2323 
  __hash_init((struct hlist_head *)(& rocker->flow_tbl),65536U);
  
#line 2324 
  spinlock_check(& rocker->flow_tbl_lock);
  {
    struct lock_class_key __key;
    
#line 2324 
    __raw_spin_lock_init(& rocker->flow_tbl_lock.__anonCompField_spinlock_18.rlock,"&(&rocker->flow_tbl_lock)->rlock",& __key);
  }
  
#line 2326 
  __hash_init((struct hlist_head *)(& rocker->group_tbl),65536U);
  
#line 2327 
  spinlock_check(& rocker->group_tbl_lock);
  {
    struct lock_class_key __key_0;
    
#line 2327 
    __raw_spin_lock_init(& rocker->group_tbl_lock.__anonCompField_spinlock_18.rlock,"&(&rocker->group_tbl_lock)->rlock",& __key_0);
  }
  
#line 2329 
  __hash_init((struct hlist_head *)(& rocker->fdb_tbl),65536U);
  
#line 2330 
  spinlock_check(& rocker->fdb_tbl_lock);
  {
    struct lock_class_key __key_1;
    
#line 2330 
    __raw_spin_lock_init(& rocker->fdb_tbl_lock.__anonCompField_spinlock_18.rlock,"&(&rocker->fdb_tbl_lock)->rlock",& __key_1);
  }
  
#line 2332 
  __hash_init((struct hlist_head *)(& rocker->internal_vlan_tbl),256U);
  
#line 2333 
  spinlock_check(& rocker->internal_vlan_tbl_lock);
  {
    struct lock_class_key __key_2;
    
#line 2333 
    __raw_spin_lock_init(& rocker->internal_vlan_tbl_lock.__anonCompField_spinlock_18.rlock,"&(&rocker->internal_vlan_tbl_lock)->rlock",& __key_2);
  }
  
#line 2335 
  __hash_init((struct hlist_head *)(& rocker->neigh_tbl),65536U);
  
#line 2336 
  spinlock_check(& rocker->neigh_tbl_lock);
  {
    struct lock_class_key __key_3;
    
#line 2336 
    __raw_spin_lock_init(& rocker->neigh_tbl_lock.__anonCompField_spinlock_18.rlock,"&(&rocker->neigh_tbl_lock)->rlock",& __key_3);
  }
  
#line 2338 
  __retres = 0;
  
#line 2338 
  return __retres;
}


#line 2341  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_free_tbls(struct rocker *rocker)
{
  unsigned long flags;
  struct rocker_flow_tbl_entry *flow_entry;
  struct rocker_group_tbl_entry *group_entry;
  struct rocker_fdb_tbl_entry *fdb_entry;
  struct rocker_internal_vlan_tbl_entry *internal_vlan_entry;
  struct rocker_neigh_tbl_entry *neigh_entry;
  struct hlist_node *tmp;
  int bkt;
  struct rocker_flow_tbl_entry *tmp_2;
  struct rocker_flow_tbl_entry *tmp_5;
  struct rocker_group_tbl_entry *tmp_8;
  struct rocker_group_tbl_entry *tmp_11;
  struct rocker_fdb_tbl_entry *tmp_14;
  struct rocker_fdb_tbl_entry *tmp_17;
  struct rocker_internal_vlan_tbl_entry *tmp_20;
  struct rocker_internal_vlan_tbl_entry *tmp_23;
  struct rocker_neigh_tbl_entry *tmp_26;
  struct rocker_neigh_tbl_entry *tmp_29;
  
#line 2352 
  ldv___ldv_spin_lock_81(& rocker->flow_tbl_lock);
  
#line 2353 
  bkt = 0;
  
#line 2353 
  flow_entry = (struct rocker_flow_tbl_entry *)0;
  
#line 2353 
  goto ldv_55063;
  ldv_55062: 
#line 2354 
  ;
  {
    struct rocker_flow_tbl_entry *tmp_1;
    
#line 2353 
    struct hlist_node *____ptr = rocker->flow_tbl[bkt].first;
    
#line 2353 
    if (____ptr != (struct hlist_node *)0) {
      struct rocker_flow_tbl_entry *tmp_0;
      {
        
#line 2353 
        struct hlist_node const *__mptr = (struct hlist_node const *)____ptr;
        
#line 2353 
        tmp_0 = (struct rocker_flow_tbl_entry *)__mptr;
      }
      
#line 2353 
      tmp_1 = tmp_0;
    }
    else 
#line 2353 
         tmp_1 = (struct rocker_flow_tbl_entry *)0;
    
#line 2353 
    tmp_2 = tmp_1;
  }
  
#line 2353 
  flow_entry = tmp_2;
  
#line 2353 
  goto ldv_55060;
  ldv_55059: 
#line 2354 
  ;
  
#line 2354 
  hash_del(& flow_entry->entry);
  {
    struct rocker_flow_tbl_entry *tmp_4;
    
#line 2353 
    struct hlist_node *____ptr_0 = tmp;
    
#line 2353 
    if (____ptr_0 != (struct hlist_node *)0) {
      struct rocker_flow_tbl_entry *tmp_3;
      {
        
#line 2353 
        struct hlist_node const *__mptr_0 = (struct hlist_node const *)____ptr_0;
        
#line 2353 
        tmp_3 = (struct rocker_flow_tbl_entry *)__mptr_0;
      }
      
#line 2353 
      tmp_4 = tmp_3;
    }
    else 
#line 2353 
         tmp_4 = (struct rocker_flow_tbl_entry *)0;
    
#line 2353 
    tmp_5 = tmp_4;
  }
  
#line 2353 
  flow_entry = tmp_5;
  ldv_55060: 
#line 2355 
  ;
  
#line 2353 
  if (flow_entry != (struct rocker_flow_tbl_entry *)0) {
    
#line 2353 
    tmp = flow_entry->entry.next;
    
#line 2353 
    if (1 != 0) 
#line 2355 
                goto ldv_55059; else 
#line 2358 
                                     goto ldv_55061;
  }
  else 
#line 2358 
       goto ldv_55061;
  ldv_55061: 
#line 2359 
  ;
  
#line 2353 
  bkt += 1;
  ldv_55063: 
#line 2354 
  ;
  
#line 2353 
  if (flow_entry == (struct rocker_flow_tbl_entry *)0 && (unsigned int)bkt <= 65535U) 
    
#line 2355 
    goto ldv_55062; else 
#line 2358 
                         goto ldv_55064;
  ldv_55064: 
#line 2359 
  ;
  
#line 2355 
  ldv_spin_unlock_irqrestore_82(& rocker->flow_tbl_lock,flags);
  
#line 2357 
  ldv___ldv_spin_lock_83(& rocker->group_tbl_lock);
  
#line 2358 
  bkt = 0;
  
#line 2358 
  group_entry = (struct rocker_group_tbl_entry *)0;
  
#line 2358 
  goto ldv_55081;
  ldv_55080: 
#line 2359 
  ;
  {
    struct rocker_group_tbl_entry *tmp_7;
    
#line 2358 
    struct hlist_node *____ptr_1 = rocker->group_tbl[bkt].first;
    
#line 2358 
    if (____ptr_1 != (struct hlist_node *)0) {
      struct rocker_group_tbl_entry *tmp_6;
      {
        
#line 2358 
        struct hlist_node const *__mptr_1 = (struct hlist_node const *)____ptr_1;
        
#line 2358 
        tmp_6 = (struct rocker_group_tbl_entry *)__mptr_1;
      }
      
#line 2358 
      tmp_7 = tmp_6;
    }
    else 
#line 2358 
         tmp_7 = (struct rocker_group_tbl_entry *)0;
    
#line 2358 
    tmp_8 = tmp_7;
  }
  
#line 2358 
  group_entry = tmp_8;
  
#line 2358 
  goto ldv_55078;
  ldv_55077: 
#line 2359 
  ;
  
#line 2359 
  hash_del(& group_entry->entry);
  {
    struct rocker_group_tbl_entry *tmp_10;
    
#line 2358 
    struct hlist_node *____ptr_2 = tmp;
    
#line 2358 
    if (____ptr_2 != (struct hlist_node *)0) {
      struct rocker_group_tbl_entry *tmp_9;
      {
        
#line 2358 
        struct hlist_node const *__mptr_2 = (struct hlist_node const *)____ptr_2;
        
#line 2358 
        tmp_9 = (struct rocker_group_tbl_entry *)__mptr_2;
      }
      
#line 2358 
      tmp_10 = tmp_9;
    }
    else 
#line 2358 
         tmp_10 = (struct rocker_group_tbl_entry *)0;
    
#line 2358 
    tmp_11 = tmp_10;
  }
  
#line 2358 
  group_entry = tmp_11;
  ldv_55078: 
#line 2360 
  ;
  
#line 2358 
  if (group_entry != (struct rocker_group_tbl_entry *)0) {
    
#line 2358 
    tmp = group_entry->entry.next;
    
#line 2358 
    if (1 != 0) 
#line 2360 
                goto ldv_55077; else 
#line 2363 
                                     goto ldv_55079;
  }
  else 
#line 2363 
       goto ldv_55079;
  ldv_55079: 
#line 2364 
  ;
  
#line 2358 
  bkt += 1;
  ldv_55081: 
#line 2359 
  ;
  
#line 2358 
  if (group_entry == (struct rocker_group_tbl_entry *)0 && (unsigned int)bkt <= 65535U) 
    
#line 2360 
    goto ldv_55080; else 
#line 2363 
                         goto ldv_55082;
  ldv_55082: 
#line 2364 
  ;
  
#line 2360 
  ldv_spin_unlock_irqrestore_84(& rocker->group_tbl_lock,flags);
  
#line 2362 
  ldv___ldv_spin_lock_85(& rocker->fdb_tbl_lock);
  
#line 2363 
  bkt = 0;
  
#line 2363 
  fdb_entry = (struct rocker_fdb_tbl_entry *)0;
  
#line 2363 
  goto ldv_55099;
  ldv_55098: 
#line 2364 
  ;
  {
    struct rocker_fdb_tbl_entry *tmp_13;
    
#line 2363 
    struct hlist_node *____ptr_3 = rocker->fdb_tbl[bkt].first;
    
#line 2363 
    if (____ptr_3 != (struct hlist_node *)0) {
      struct rocker_fdb_tbl_entry *tmp_12;
      {
        
#line 2363 
        struct hlist_node const *__mptr_3 = (struct hlist_node const *)____ptr_3;
        
#line 2363 
        tmp_12 = (struct rocker_fdb_tbl_entry *)__mptr_3;
      }
      
#line 2363 
      tmp_13 = tmp_12;
    }
    else 
#line 2363 
         tmp_13 = (struct rocker_fdb_tbl_entry *)0;
    
#line 2363 
    tmp_14 = tmp_13;
  }
  
#line 2363 
  fdb_entry = tmp_14;
  
#line 2363 
  goto ldv_55096;
  ldv_55095: 
#line 2364 
  ;
  
#line 2364 
  hash_del(& fdb_entry->entry);
  {
    struct rocker_fdb_tbl_entry *tmp_16;
    
#line 2363 
    struct hlist_node *____ptr_4 = tmp;
    
#line 2363 
    if (____ptr_4 != (struct hlist_node *)0) {
      struct rocker_fdb_tbl_entry *tmp_15;
      {
        
#line 2363 
        struct hlist_node const *__mptr_4 = (struct hlist_node const *)____ptr_4;
        
#line 2363 
        tmp_15 = (struct rocker_fdb_tbl_entry *)__mptr_4;
      }
      
#line 2363 
      tmp_16 = tmp_15;
    }
    else 
#line 2363 
         tmp_16 = (struct rocker_fdb_tbl_entry *)0;
    
#line 2363 
    tmp_17 = tmp_16;
  }
  
#line 2363 
  fdb_entry = tmp_17;
  ldv_55096: 
#line 2365 
  ;
  
#line 2363 
  if (fdb_entry != (struct rocker_fdb_tbl_entry *)0) {
    
#line 2363 
    tmp = fdb_entry->entry.next;
    
#line 2363 
    if (1 != 0) 
#line 2365 
                goto ldv_55095; else 
#line 2368 
                                     goto ldv_55097;
  }
  else 
#line 2368 
       goto ldv_55097;
  ldv_55097: 
#line 2369 
  ;
  
#line 2363 
  bkt += 1;
  ldv_55099: 
#line 2364 
  ;
  
#line 2363 
  if (fdb_entry == (struct rocker_fdb_tbl_entry *)0 && (unsigned int)bkt <= 65535U) 
    
#line 2365 
    goto ldv_55098; else 
#line 2368 
                         goto ldv_55100;
  ldv_55100: 
#line 2369 
  ;
  
#line 2365 
  ldv_spin_unlock_irqrestore_86(& rocker->fdb_tbl_lock,flags);
  
#line 2367 
  ldv___ldv_spin_lock_87(& rocker->internal_vlan_tbl_lock);
  
#line 2368 
  bkt = 0;
  
#line 2368 
  internal_vlan_entry = (struct rocker_internal_vlan_tbl_entry *)0;
  
#line 2368 
  goto ldv_55117;
  ldv_55116: 
#line 2369 
  ;
  {
    struct rocker_internal_vlan_tbl_entry *tmp_19;
    
#line 2368 
    struct hlist_node *____ptr_5 = rocker->internal_vlan_tbl[bkt].first;
    
#line 2368 
    if (____ptr_5 != (struct hlist_node *)0) {
      struct rocker_internal_vlan_tbl_entry *tmp_18;
      {
        
#line 2368 
        struct hlist_node const *__mptr_5 = (struct hlist_node const *)____ptr_5;
        
#line 2368 
        tmp_18 = (struct rocker_internal_vlan_tbl_entry *)__mptr_5;
      }
      
#line 2368 
      tmp_19 = tmp_18;
    }
    else 
#line 2368 
         tmp_19 = (struct rocker_internal_vlan_tbl_entry *)0;
    
#line 2368 
    tmp_20 = tmp_19;
  }
  
#line 2368 
  internal_vlan_entry = tmp_20;
  
#line 2368 
  goto ldv_55114;
  ldv_55113: 
#line 2369 
  ;
  
#line 2370 
  hash_del(& internal_vlan_entry->entry);
  {
    struct rocker_internal_vlan_tbl_entry *tmp_22;
    
#line 2368 
    struct hlist_node *____ptr_6 = tmp;
    
#line 2368 
    if (____ptr_6 != (struct hlist_node *)0) {
      struct rocker_internal_vlan_tbl_entry *tmp_21;
      {
        
#line 2368 
        struct hlist_node const *__mptr_6 = (struct hlist_node const *)____ptr_6;
        
#line 2368 
        tmp_21 = (struct rocker_internal_vlan_tbl_entry *)__mptr_6;
      }
      
#line 2368 
      tmp_22 = tmp_21;
    }
    else 
#line 2368 
         tmp_22 = (struct rocker_internal_vlan_tbl_entry *)0;
    
#line 2368 
    tmp_23 = tmp_22;
  }
  
#line 2368 
  internal_vlan_entry = tmp_23;
  ldv_55114: 
#line 2370 
  ;
  
#line 2368 
  if (internal_vlan_entry != (struct rocker_internal_vlan_tbl_entry *)0) {
    
#line 2368 
    tmp = internal_vlan_entry->entry.next;
    
#line 2368 
    if (1 != 0) 
#line 2370 
                goto ldv_55113; else 
#line 2373 
                                     goto ldv_55115;
  }
  else 
#line 2373 
       goto ldv_55115;
  ldv_55115: 
#line 2374 
  ;
  
#line 2368 
  bkt += 1;
  ldv_55117: 
#line 2369 
  ;
  
#line 2368 
  if (internal_vlan_entry == (struct rocker_internal_vlan_tbl_entry *)0 && (unsigned int)bkt <= 255U) 
    
#line 2370 
    goto ldv_55116; else 
#line 2373 
                         goto ldv_55118;
  ldv_55118: 
#line 2374 
  ;
  
#line 2371 
  ldv_spin_unlock_irqrestore_88(& rocker->internal_vlan_tbl_lock,flags);
  
#line 2373 
  ldv___ldv_spin_lock_89(& rocker->neigh_tbl_lock);
  
#line 2374 
  bkt = 0;
  
#line 2374 
  neigh_entry = (struct rocker_neigh_tbl_entry *)0;
  
#line 2374 
  goto ldv_55135;
  ldv_55134: 
#line 2375 
  ;
  {
    struct rocker_neigh_tbl_entry *tmp_25;
    
#line 2374 
    struct hlist_node *____ptr_7 = rocker->neigh_tbl[bkt].first;
    
#line 2374 
    if (____ptr_7 != (struct hlist_node *)0) {
      struct rocker_neigh_tbl_entry *tmp_24;
      {
        
#line 2374 
        struct hlist_node const *__mptr_7 = (struct hlist_node const *)____ptr_7;
        
#line 2374 
        tmp_24 = (struct rocker_neigh_tbl_entry *)__mptr_7;
      }
      
#line 2374 
      tmp_25 = tmp_24;
    }
    else 
#line 2374 
         tmp_25 = (struct rocker_neigh_tbl_entry *)0;
    
#line 2374 
    tmp_26 = tmp_25;
  }
  
#line 2374 
  neigh_entry = tmp_26;
  
#line 2374 
  goto ldv_55132;
  ldv_55131: 
#line 2375 
  ;
  
#line 2375 
  hash_del(& neigh_entry->entry);
  {
    struct rocker_neigh_tbl_entry *tmp_28;
    
#line 2374 
    struct hlist_node *____ptr_8 = tmp;
    
#line 2374 
    if (____ptr_8 != (struct hlist_node *)0) {
      struct rocker_neigh_tbl_entry *tmp_27;
      {
        
#line 2374 
        struct hlist_node const *__mptr_8 = (struct hlist_node const *)____ptr_8;
        
#line 2374 
        tmp_27 = (struct rocker_neigh_tbl_entry *)__mptr_8;
      }
      
#line 2374 
      tmp_28 = tmp_27;
    }
    else 
#line 2374 
         tmp_28 = (struct rocker_neigh_tbl_entry *)0;
    
#line 2374 
    tmp_29 = tmp_28;
  }
  
#line 2374 
  neigh_entry = tmp_29;
  ldv_55132: 
#line 2376 
  ;
  
#line 2374 
  if (neigh_entry != (struct rocker_neigh_tbl_entry *)0) {
    
#line 2374 
    tmp = neigh_entry->entry.next;
    
#line 2374 
    if (1 != 0) 
#line 2376 
                goto ldv_55131; else 
#line 2379 
                                     goto ldv_55133;
  }
  else 
#line 2379 
       goto ldv_55133;
  ldv_55133: 
#line 2380 
  ;
  
#line 2374 
  bkt += 1;
  ldv_55135: 
#line 2375 
  ;
  
#line 2374 
  if (neigh_entry == (struct rocker_neigh_tbl_entry *)0 && (unsigned int)bkt <= 65535U) 
    
#line 2376 
    goto ldv_55134; else 
#line 2379 
                         goto ldv_55136;
  ldv_55136: 
#line 2380 
  ;
  
#line 2376 
  ldv_spin_unlock_irqrestore_90(& rocker->neigh_tbl_lock,flags);
  
#line 2377 
  return;
}


#line 2380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static struct rocker_flow_tbl_entry *rocker_flow_tbl_find(struct rocker const *rocker, struct rocker_flow_tbl_entry const *match)
{
  struct rocker_flow_tbl_entry *__retres;
  struct rocker_flow_tbl_entry *found;
  unsigned long tmp;
  struct rocker_flow_tbl_entry *tmp_3;
  int tmp_4;
  struct rocker_flow_tbl_entry *tmp_7;
  
#line 2384 
  if (match->key_len != 0UL) 
#line 2384 
                             tmp = match->key_len; else 
#line 2384 
                                                        tmp = 56UL;
  
#line 2384 
  size_t key_len = tmp;
  {
    u32 tmp_0;
    struct rocker_flow_tbl_entry *tmp_2;
    
#line 2386 
    tmp_0 = hash_32(match->key_crc32,16U);
    
#line 2386 
    struct hlist_node * const ____ptr = rocker->flow_tbl[(unsigned long long)tmp_0].first;
    
#line 2386 
    if (____ptr != (struct hlist_node *)0) {
      struct rocker_flow_tbl_entry *tmp_1;
      {
        
#line 2386 
        struct hlist_node const *__mptr = (struct hlist_node const *)____ptr;
        
#line 2386 
        tmp_1 = (struct rocker_flow_tbl_entry *)__mptr;
      }
      
#line 2386 
      tmp_2 = tmp_1;
    }
    else 
#line 2386 
         tmp_2 = (struct rocker_flow_tbl_entry *)0;
    
#line 2386 
    tmp_3 = tmp_2;
  }
  
#line 2386 
  found = tmp_3;
  
#line 2386 
  goto ldv_55980;
  ldv_55979: 
#line 2387 
  ;
  
#line 2388 
  tmp_4 = memcmp((void const *)(& found->key),(void const *)(& match->key),key_len);
  
#line 2388 
  if (tmp_4 == 0) {
    
#line 2389 
    __retres = found;
    
#line 2389 
    goto return_label;
  }
  else ;
  {
    struct rocker_flow_tbl_entry *tmp_6;
    
#line 2386 
    struct hlist_node *____ptr_0 = found->entry.next;
    
#line 2386 
    if (____ptr_0 != (struct hlist_node *)0) {
      struct rocker_flow_tbl_entry *tmp_5;
      {
        
#line 2386 
        struct hlist_node const *__mptr_0 = (struct hlist_node const *)____ptr_0;
        
#line 2386 
        tmp_5 = (struct rocker_flow_tbl_entry *)__mptr_0;
      }
      
#line 2386 
      tmp_6 = tmp_5;
    }
    else 
#line 2386 
         tmp_6 = (struct rocker_flow_tbl_entry *)0;
    
#line 2386 
    tmp_7 = tmp_6;
  }
  
#line 2386 
  found = tmp_7;
  ldv_55980: 
#line 2388 
  ;
  
#line 2386 
  if (found != (struct rocker_flow_tbl_entry *)0) 
#line 2388 
                                                  goto ldv_55979; else 
                                                                    
#line 2391 
                                                                    goto ldv_55981;
  ldv_55981: 
#line 2392 
  ;
  
#line 2392 
  __retres = (struct rocker_flow_tbl_entry *)0;
  return_label: 
#line 2392 
                return __retres;
}


#line 2395  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_flow_tbl_add(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, struct rocker_flow_tbl_entry *match)
{
  struct rocker_flow_tbl_entry *found;
  unsigned long tmp;
  unsigned long lock_flags;
  int tmp_2;
  
#line 2399 
  struct rocker *rocker = rocker_port->rocker;
  
#line 2401 
  if (match->key_len != 0UL) 
#line 2401 
                             tmp = match->key_len; else 
#line 2401 
                                                        tmp = 56UL;
  
#line 2401 
  size_t key_len = tmp;
  
#line 2404 
  match->key_crc32 = crc32_le(4294967295U,(unsigned char const *)(& match->key),key_len);
  
#line 2406 
  ldv___ldv_spin_lock_91(& rocker->flow_tbl_lock);
  
#line 2408 
  found = rocker_flow_tbl_find((struct rocker const *)rocker,(struct rocker_flow_tbl_entry const *)match);
  
#line 2410 
  if (found != (struct rocker_flow_tbl_entry *)0) {
    
#line 2411 
    match->cookie = found->cookie;
    
#line 2412 
    if (trans != (unsigned int)SWITCHDEV_TRANS_PREPARE) 
#line 2413 
                                                        hash_del(& found->entry); else ;
    
#line 2414 
    rocker_port_kfree(trans,(void const *)found);
    
#line 2415 
    found = match;
    
#line 2416 
    found->cmd = 4U;
  }
  else {
    u64 tmp_0;
    
#line 2418 
    found = match;
    
#line 2419 
    tmp_0 = rocker->flow_tbl_next_cookie;
    
#line 2419 
    rocker->flow_tbl_next_cookie += 1ULL;
    
#line 2419 
    found->cookie = tmp_0;
    
#line 2420 
    found->cmd = 3U;
  }
  
#line 2423 
  if (trans != (unsigned int)SWITCHDEV_TRANS_PREPARE) {
    u32 tmp_1;
    
#line 2424 
    tmp_1 = hash_32(found->key_crc32,16U);
    
#line 2424 
    ;
    
#line 2424 
    ;
    
#line 2424 
    hlist_add_head(& found->entry,& rocker->flow_tbl[(unsigned long long)tmp_1]);
  }
  else ;
  
#line 2426 
  ldv_spin_unlock_irqrestore_92(& rocker->flow_tbl_lock,lock_flags);
  
#line 2428 
  tmp_2 = rocker_cmd_exec(rocker_port,trans,flags,& rocker_cmd_flow_tbl_add,(void *)found,(int (*)(struct rocker_port const *, struct rocker_desc_info const *, void *))0,(void *)0);
  
#line 2428 
  return tmp_2;
}


#line 2432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_flow_tbl_del(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, struct rocker_flow_tbl_entry *match)
{
  struct rocker_flow_tbl_entry *found;
  unsigned long tmp;
  unsigned long lock_flags;
  
#line 2436 
  struct rocker *rocker = rocker_port->rocker;
  
#line 2438 
  if (match->key_len != 0UL) 
#line 2438 
                             tmp = match->key_len; else 
#line 2438 
                                                        tmp = 56UL;
  
#line 2438 
  size_t key_len = tmp;
  
#line 2440 
  int err = 0;
  
#line 2442 
  match->key_crc32 = crc32_le(4294967295U,(unsigned char const *)(& match->key),key_len);
  
#line 2444 
  ldv___ldv_spin_lock_93(& rocker->flow_tbl_lock);
  
#line 2446 
  found = rocker_flow_tbl_find((struct rocker const *)rocker,(struct rocker_flow_tbl_entry const *)match);
  
#line 2448 
  if (found != (struct rocker_flow_tbl_entry *)0) {
    
#line 2449 
    if (trans != (unsigned int)SWITCHDEV_TRANS_PREPARE) 
#line 2450 
                                                        hash_del(& found->entry); else ;
    
#line 2451 
    found->cmd = 5U;
  }
  else ;
  
#line 2454 
  ldv_spin_unlock_irqrestore_94(& rocker->flow_tbl_lock,lock_flags);
  
#line 2456 
  rocker_port_kfree(trans,(void const *)match);
  
#line 2458 
  if (found != (struct rocker_flow_tbl_entry *)0) {
    
#line 2459 
    err = rocker_cmd_exec(rocker_port,trans,flags,& rocker_cmd_flow_tbl_del,(void *)found,(int (*)(struct rocker_port const *, struct rocker_desc_info const *, void *))0,(void *)0);
    
#line 2462 
    rocker_port_kfree(trans,(void const *)found);
  }
  else ;
  
#line 2465 
  return err;
}


#line 2468  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_flow_tbl_do(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, struct rocker_flow_tbl_entry *entry)
{
  int __retres;
  
#line 2472 
  if (((unsigned long)flags & 1UL) != 0UL) {
    int tmp;
    
#line 2473 
    tmp = rocker_flow_tbl_del(rocker_port,trans,flags,entry);
    
#line 2473 
    __retres = tmp;
    
#line 2473 
    goto return_label;
  }
  else {
    int tmp_0;
    
#line 2475 
    tmp_0 = rocker_flow_tbl_add(rocker_port,trans,flags,entry);
    
#line 2475 
    __retres = tmp_0;
    
#line 2475 
    goto return_label;
  }
  return_label: 
#line 2472 
                return __retres;
}


#line 2478  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_flow_tbl_ig_port(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, u32 in_pport, u32 in_pport_mask, enum rocker_of_dpa_table_id goto_tbl)
{
  int __retres;
  struct rocker_flow_tbl_entry *entry;
  int tmp_0;
  
#line 2485 
  entry = (struct rocker_flow_tbl_entry *)rocker_port_kzalloc(rocker_port,trans,flags,104UL);
  
#line 2486 
  if (entry == (struct rocker_flow_tbl_entry *)0) {
    
#line 2487 
    __retres = -12;
    
#line 2487 
    goto return_label;
  }
  else ;
  
#line 2489 
  entry->key.priority = 1U;
  
#line 2490 
  entry->key.tbl_id = ROCKER_OF_DPA_TABLE_ID_INGRESS_PORT;
  
#line 2491 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.ig_port.in_pport = in_pport;
  
#line 2492 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.ig_port.in_pport_mask = in_pport_mask;
  
#line 2493 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.ig_port.goto_tbl = goto_tbl;
  
#line 2495 
  tmp_0 = rocker_flow_tbl_do(rocker_port,trans,flags,entry);
  
#line 2495 
  __retres = tmp_0;
  return_label: 
#line 2495 
                return __retres;
}


#line 2498  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_flow_tbl_vlan(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, u32 in_pport, __be16 vlan_id, __be16 vlan_id_mask, enum rocker_of_dpa_table_id goto_tbl, bool untagged, __be16 new_vlan_id)
{
  int __retres;
  struct rocker_flow_tbl_entry *entry;
  int tmp_0;
  
#line 2507 
  entry = (struct rocker_flow_tbl_entry *)rocker_port_kzalloc(rocker_port,trans,flags,104UL);
  
#line 2508 
  if (entry == (struct rocker_flow_tbl_entry *)0) {
    
#line 2509 
    __retres = -12;
    
#line 2509 
    goto return_label;
  }
  else ;
  
#line 2511 
  entry->key.priority = 1U;
  
#line 2512 
  entry->key.tbl_id = ROCKER_OF_DPA_TABLE_ID_VLAN;
  
#line 2513 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.vlan.in_pport = in_pport;
  
#line 2514 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.vlan.vlan_id = vlan_id;
  
#line 2515 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.vlan.vlan_id_mask = vlan_id_mask;
  
#line 2516 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.vlan.goto_tbl = goto_tbl;
  
#line 2518 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.vlan.untagged = untagged;
  
#line 2519 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.vlan.new_vlan_id = new_vlan_id;
  
#line 2521 
  tmp_0 = rocker_flow_tbl_do(rocker_port,trans,flags,entry);
  
#line 2521 
  __retres = tmp_0;
  return_label: 
#line 2521 
                return __retres;
}


#line 2524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_flow_tbl_term_mac(struct rocker_port *rocker_port, enum switchdev_trans trans, u32 in_pport, u32 in_pport_mask, __be16 eth_type, u8 const *eth_dst, u8 const *eth_dst_mask, __be16 vlan_id, __be16 vlan_id_mask, bool copy_to_cpu, int flags)
{
  int __retres;
  struct rocker_flow_tbl_entry *entry;
  bool tmp_0;
  int tmp_1;
  
#line 2534 
  entry = (struct rocker_flow_tbl_entry *)rocker_port_kzalloc(rocker_port,trans,flags,104UL);
  
#line 2535 
  if (entry == (struct rocker_flow_tbl_entry *)0) {
    
#line 2536 
    __retres = -12;
    
#line 2536 
    goto return_label;
  }
  else ;
  
#line 2538 
  tmp_0 = is_multicast_ether_addr(eth_dst);
  
#line 2538 
  if ((int)tmp_0 != 0) {
    
#line 2539 
    entry->key.priority = 1U;
    
#line 2540 
    entry->key.__anonCompField_rocker_flow_tbl_key_114.term_mac.goto_tbl = ROCKER_OF_DPA_TABLE_ID_MULTICAST_ROUTING;
  }
  else {
    
#line 2543 
    entry->key.priority = 0U;
    
#line 2544 
    entry->key.__anonCompField_rocker_flow_tbl_key_114.term_mac.goto_tbl = ROCKER_OF_DPA_TABLE_ID_UNICAST_ROUTING;
  }
  
#line 2548 
  entry->key.tbl_id = ROCKER_OF_DPA_TABLE_ID_TERMINATION_MAC;
  
#line 2549 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.term_mac.in_pport = in_pport;
  
#line 2550 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.term_mac.in_pport_mask = in_pport_mask;
  
#line 2551 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.term_mac.eth_type = eth_type;
  
#line 2552 
  ether_addr_copy((u8 *)(& entry->key.__anonCompField_rocker_flow_tbl_key_114.term_mac.eth_dst),eth_dst);
  
#line 2553 
  ether_addr_copy((u8 *)(& entry->key.__anonCompField_rocker_flow_tbl_key_114.term_mac.eth_dst_mask),eth_dst_mask);
  
#line 2554 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.term_mac.vlan_id = vlan_id;
  
#line 2555 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.term_mac.vlan_id_mask = vlan_id_mask;
  
#line 2556 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.term_mac.copy_to_cpu = copy_to_cpu;
  
#line 2558 
  tmp_1 = rocker_flow_tbl_do(rocker_port,trans,flags,entry);
  
#line 2558 
  __retres = tmp_1;
  return_label: 
#line 2558 
                return __retres;
}


#line 2561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_flow_tbl_bridge(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, u8 const *eth_dst, u8 const *eth_dst_mask, __be16 vlan_id, u32 tunnel_id, enum rocker_of_dpa_table_id goto_tbl, u32 group_id, bool copy_to_cpu)
{
  int __retres;
  struct rocker_flow_tbl_entry *entry;
  u32 priority;
  int tmp_2;
  
#line 2570 
  bool vlan_bridging = (_Bool)((unsigned int)vlan_id != 0U);
  
#line 2571 
  bool dflt = (_Bool)((eth_dst == (u8 const *)0U || (eth_dst != (u8 const *)0U && eth_dst_mask != (u8 const *)0U)) != 0);
  
#line 2572 
  bool wild = (_Bool)0;
  
#line 2574 
  entry = (struct rocker_flow_tbl_entry *)rocker_port_kzalloc(rocker_port,trans,flags,104UL);
  
#line 2575 
  if (entry == (struct rocker_flow_tbl_entry *)0) {
    
#line 2576 
    __retres = -12;
    
#line 2576 
    goto return_label;
  }
  else ;
  
#line 2578 
  entry->key.tbl_id = ROCKER_OF_DPA_TABLE_ID_BRIDGING;
  
#line 2580 
  if (eth_dst != (u8 const *)0U) {
    
#line 2581 
    entry->key.__anonCompField_rocker_flow_tbl_key_114.bridge.has_eth_dst = 1;
    
#line 2582 
    ether_addr_copy((u8 *)(& entry->key.__anonCompField_rocker_flow_tbl_key_114.bridge.eth_dst),eth_dst);
  }
  else ;
  
#line 2584 
  if (eth_dst_mask != (u8 const *)0U) {
    int tmp_1;
    bool tmp_0;
    
#line 2585 
    entry->key.__anonCompField_rocker_flow_tbl_key_114.bridge.has_eth_dst_mask = 1;
    
#line 2586 
    ether_addr_copy((u8 *)(& entry->key.__anonCompField_rocker_flow_tbl_key_114.bridge.eth_dst_mask),eth_dst_mask);
    
#line 2587 
    tmp_0 = ether_addr_equal(eth_dst_mask,(u8 const *)(& ff_mac));
    
#line 2587 
    if (tmp_0) 
#line 2587 
               tmp_1 = 0; else 
#line 2587 
                               tmp_1 = 1;
    
#line 2587 
    if (tmp_1) 
#line 2588 
               wild = (_Bool)1; else ;
  }
  else ;
  
#line 2591 
  priority = 0U;
  
#line 2592 
  if (((int)vlan_bridging != 0 && (int)dflt != 0) && (int)wild != 0) 
    
#line 2593 
    priority = 2U;
  else 
    
#line 2594 
    if (((int)vlan_bridging != 0 && (int)dflt != 0) && ! wild) 
#line 2595 
                                                               priority = 1U;
    else 
      
#line 2596 
      if ((int)vlan_bridging != 0 && ! dflt) 
#line 2597 
                                             priority = 3U;
      else 
        
#line 2598 
        if ((! vlan_bridging && (int)dflt != 0) && (int)wild != 0) 
#line 2599 
                                                                   priority = 2U;
        else 
          
#line 2600 
          if ((! vlan_bridging && (int)dflt != 0) && ! wild) 
#line 2601 
                                                             priority = 1U;
          else 
            
#line 2602 
            if (! vlan_bridging && ! dflt) 
#line 2603 
                                           priority = 3U; else ;
  
#line 2605 
  entry->key.priority = priority;
  
#line 2606 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.bridge.vlan_id = vlan_id;
  
#line 2607 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.bridge.tunnel_id = tunnel_id;
  
#line 2608 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.bridge.goto_tbl = goto_tbl;
  
#line 2609 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.bridge.group_id = group_id;
  
#line 2610 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.bridge.copy_to_cpu = copy_to_cpu;
  
#line 2612 
  tmp_2 = rocker_flow_tbl_do(rocker_port,trans,flags,entry);
  
#line 2612 
  __retres = tmp_2;
  return_label: 
#line 2612 
                return __retres;
}


#line 2615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_flow_tbl_ucast4_routing(struct rocker_port *rocker_port, enum switchdev_trans trans, __be16 eth_type, __be32 dst, __be32 dst_mask, u32 priority, enum rocker_of_dpa_table_id goto_tbl, u32 group_id, int flags)
{
  int __retres;
  struct rocker_flow_tbl_entry *entry;
  int tmp_0;
  
#line 2624 
  entry = (struct rocker_flow_tbl_entry *)rocker_port_kzalloc(rocker_port,trans,flags,104UL);
  
#line 2625 
  if (entry == (struct rocker_flow_tbl_entry *)0) {
    
#line 2626 
    __retres = -12;
    
#line 2626 
    goto return_label;
  }
  else ;
  
#line 2628 
  entry->key.tbl_id = ROCKER_OF_DPA_TABLE_ID_UNICAST_ROUTING;
  
#line 2629 
  entry->key.priority = priority;
  
#line 2630 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.ucast_routing.eth_type = eth_type;
  
#line 2631 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.ucast_routing.dst4 = dst;
  
#line 2632 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.ucast_routing.dst4_mask = dst_mask;
  
#line 2633 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.ucast_routing.goto_tbl = goto_tbl;
  
#line 2634 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.ucast_routing.group_id = group_id;
  
#line 2635 
  entry->key_len = 24UL;
  
#line 2638 
  tmp_0 = rocker_flow_tbl_do(rocker_port,trans,flags,entry);
  
#line 2638 
  __retres = tmp_0;
  return_label: 
#line 2638 
                return __retres;
}


#line 2641  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_flow_tbl_acl(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, u32 in_pport, u32 in_pport_mask, u8 const *eth_src, u8 const *eth_src_mask, u8 const *eth_dst, u8 const *eth_dst_mask, __be16 eth_type, __be16 vlan_id, __be16 vlan_id_mask, u8 ip_proto, u8 ip_proto_mask, u8 ip_tos, u8 ip_tos_mask, u32 group_id)
{
  int __retres;
  u32 priority;
  struct rocker_flow_tbl_entry *entry;
  int tmp_2;
  
#line 2654 
  entry = (struct rocker_flow_tbl_entry *)rocker_port_kzalloc(rocker_port,trans,flags,104UL);
  
#line 2655 
  if (entry == (struct rocker_flow_tbl_entry *)0) {
    
#line 2656 
    __retres = -12;
    
#line 2656 
    goto return_label;
  }
  else ;
  
#line 2658 
  priority = 2U;
  
#line 2659 
  if (eth_dst != (u8 const *)0U && eth_dst_mask != (u8 const *)0U) {
    bool tmp_1;
    
#line 2660 
    tmp_1 = ether_addr_equal(eth_dst_mask,(u8 const *)(& mcast_mac));
    
#line 2660 
    if ((int)tmp_1 != 0) 
#line 2661 
                         priority = 1U;
    else {
      bool tmp_0;
      
#line 2662 
      tmp_0 = is_link_local_ether_addr(eth_dst);
      
#line 2662 
      if ((int)tmp_0 != 0) 
#line 2663 
                           priority = 3U; else ;
    }
  }
  else ;
  
#line 2666 
  entry->key.priority = priority;
  
#line 2667 
  entry->key.tbl_id = ROCKER_OF_DPA_TABLE_ID_ACL_POLICY;
  
#line 2668 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.in_pport = in_pport;
  
#line 2669 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.in_pport_mask = in_pport_mask;
  
#line 2671 
  if (eth_src != (u8 const *)0U) 
#line 2672 
                                 ether_addr_copy((u8 *)(& entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.eth_src),eth_src); else ;
  
#line 2673 
  if (eth_src_mask != (u8 const *)0U) 
#line 2674 
                                      ether_addr_copy((u8 *)(& entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.eth_src_mask),eth_src_mask); else ;
  
#line 2675 
  if (eth_dst != (u8 const *)0U) 
#line 2676 
                                 ether_addr_copy((u8 *)(& entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.eth_dst),eth_dst); else ;
  
#line 2677 
  if (eth_dst_mask != (u8 const *)0U) 
#line 2678 
                                      ether_addr_copy((u8 *)(& entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.eth_dst_mask),eth_dst_mask); else ;
  
#line 2680 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.eth_type = eth_type;
  
#line 2681 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.vlan_id = vlan_id;
  
#line 2682 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.vlan_id_mask = vlan_id_mask;
  
#line 2683 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.ip_proto = ip_proto;
  
#line 2684 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.ip_proto_mask = ip_proto_mask;
  
#line 2685 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.ip_tos = ip_tos;
  
#line 2686 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.ip_tos_mask = ip_tos_mask;
  
#line 2687 
  entry->key.__anonCompField_rocker_flow_tbl_key_114.acl.group_id = group_id;
  
#line 2689 
  tmp_2 = rocker_flow_tbl_do(rocker_port,trans,flags,entry);
  
#line 2689 
  __retres = tmp_2;
  return_label: 
#line 2689 
                return __retres;
}


#line 2693  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static struct rocker_group_tbl_entry *rocker_group_tbl_find(struct rocker const *rocker, struct rocker_group_tbl_entry const *match)
{
  struct rocker_group_tbl_entry *__retres;
  struct rocker_group_tbl_entry *found;
  struct rocker_group_tbl_entry *tmp_2;
  struct rocker_group_tbl_entry *tmp_5;
  {
    u32 tmp;
    struct rocker_group_tbl_entry *tmp_1;
    
#line 2698 
    tmp = hash_32(match->group_id,16U);
    
#line 2698 
    struct hlist_node * const ____ptr = rocker->group_tbl[(unsigned long long)tmp].first;
    
#line 2698 
    if (____ptr != (struct hlist_node *)0) {
      struct rocker_group_tbl_entry *tmp_0;
      {
        
#line 2698 
        struct hlist_node const *__mptr = (struct hlist_node const *)____ptr;
        
#line 2698 
        tmp_0 = (struct rocker_group_tbl_entry *)__mptr;
      }
      
#line 2698 
      tmp_1 = tmp_0;
    }
    else 
#line 2698 
         tmp_1 = (struct rocker_group_tbl_entry *)0;
    
#line 2698 
    tmp_2 = tmp_1;
  }
  
#line 2698 
  found = tmp_2;
  
#line 2698 
  goto ldv_57350;
  ldv_57349: 
#line 2699 
  ;
  
#line 2700 
  if (found->group_id == match->group_id) {
    
#line 2701 
    __retres = found;
    
#line 2701 
    goto return_label;
  }
  else ;
  {
    struct rocker_group_tbl_entry *tmp_4;
    
#line 2698 
    struct hlist_node *____ptr_0 = found->entry.next;
    
#line 2698 
    if (____ptr_0 != (struct hlist_node *)0) {
      struct rocker_group_tbl_entry *tmp_3;
      {
        
#line 2698 
        struct hlist_node const *__mptr_0 = (struct hlist_node const *)____ptr_0;
        
#line 2698 
        tmp_3 = (struct rocker_group_tbl_entry *)__mptr_0;
      }
      
#line 2698 
      tmp_4 = tmp_3;
    }
    else 
#line 2698 
         tmp_4 = (struct rocker_group_tbl_entry *)0;
    
#line 2698 
    tmp_5 = tmp_4;
  }
  
#line 2698 
  found = tmp_5;
  ldv_57350: 
#line 2700 
  ;
  
#line 2698 
  if (found != (struct rocker_group_tbl_entry *)0) 
#line 2700 
                                                   goto ldv_57349; else 
                                                                    
#line 2703 
                                                                    goto ldv_57351;
  ldv_57351: 
#line 2704 
  ;
  
#line 2704 
  __retres = (struct rocker_group_tbl_entry *)0;
  return_label: 
#line 2704 
                return __retres;
}


#line 2707  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_group_tbl_entry_free(enum switchdev_trans trans, struct rocker_group_tbl_entry *entry)
{
  
#line 2710 
  switch (entry->group_id >> 28) {
    case (u32)4: 
#line 2711 
    ;
    case (u32)3: 
#line 2712 
    ;
    
#line 2713 
    rocker_port_kfree(trans,(void const *)entry->group_ids);
    
#line 2714 
    goto ldv_57358;
    default: 
#line 2715 
    ;
    
#line 2716 
    goto ldv_57358;
  }
  ldv_57358: 
#line 2718 
  ;
  
#line 2718 
  rocker_port_kfree(trans,(void const *)entry);
  
#line 2719 
  return;
}


#line 2721  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_group_tbl_add(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, struct rocker_group_tbl_entry *match)
{
  struct rocker_group_tbl_entry *found;
  unsigned long lock_flags;
  int tmp_0;
  
#line 2725 
  struct rocker *rocker = rocker_port->rocker;
  
#line 2729 
  ldv___ldv_spin_lock_95(& rocker->group_tbl_lock);
  
#line 2731 
  found = rocker_group_tbl_find((struct rocker const *)rocker,(struct rocker_group_tbl_entry const *)match);
  
#line 2733 
  if (found != (struct rocker_group_tbl_entry *)0) {
    
#line 2734 
    if (trans != (unsigned int)SWITCHDEV_TRANS_PREPARE) 
#line 2735 
                                                        hash_del(& found->entry); else ;
    
#line 2736 
    rocker_group_tbl_entry_free(trans,found);
    
#line 2737 
    found = match;
    
#line 2738 
    found->cmd = 8U;
  }
  else {
    
#line 2740 
    found = match;
    
#line 2741 
    found->cmd = 7U;
  }
  
#line 2744 
  if (trans != (unsigned int)SWITCHDEV_TRANS_PREPARE) {
    u32 tmp;
    
#line 2745 
    tmp = hash_32(found->group_id,16U);
    
#line 2745 
    ;
    
#line 2745 
    ;
    
#line 2745 
    hlist_add_head(& found->entry,& rocker->group_tbl[(unsigned long long)tmp]);
  }
  else ;
  
#line 2747 
  ldv_spin_unlock_irqrestore_96(& rocker->group_tbl_lock,lock_flags);
  
#line 2749 
  tmp_0 = rocker_cmd_exec(rocker_port,trans,flags,& rocker_cmd_group_tbl_add,(void *)found,(int (*)(struct rocker_port const *, struct rocker_desc_info const *, void *))0,(void *)0);
  
#line 2749 
  return tmp_0;
}


#line 2753  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_group_tbl_del(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, struct rocker_group_tbl_entry *match)
{
  struct rocker_group_tbl_entry *found;
  unsigned long lock_flags;
  
#line 2757 
  struct rocker *rocker = rocker_port->rocker;
  
#line 2760 
  int err = 0;
  
#line 2762 
  ldv___ldv_spin_lock_97(& rocker->group_tbl_lock);
  
#line 2764 
  found = rocker_group_tbl_find((struct rocker const *)rocker,(struct rocker_group_tbl_entry const *)match);
  
#line 2766 
  if (found != (struct rocker_group_tbl_entry *)0) {
    
#line 2767 
    if (trans != (unsigned int)SWITCHDEV_TRANS_PREPARE) 
#line 2768 
                                                        hash_del(& found->entry); else ;
    
#line 2769 
    found->cmd = 9U;
  }
  else ;
  
#line 2772 
  ldv_spin_unlock_irqrestore_98(& rocker->group_tbl_lock,lock_flags);
  
#line 2774 
  rocker_group_tbl_entry_free(trans,match);
  
#line 2776 
  if (found != (struct rocker_group_tbl_entry *)0) {
    
#line 2777 
    err = rocker_cmd_exec(rocker_port,trans,flags,& rocker_cmd_group_tbl_del,(void *)found,(int (*)(struct rocker_port const *, struct rocker_desc_info const *, void *))0,(void *)0);
    
#line 2780 
    rocker_group_tbl_entry_free(trans,found);
  }
  else ;
  
#line 2783 
  return err;
}


#line 2786  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_group_tbl_do(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, struct rocker_group_tbl_entry *entry)
{
  int __retres;
  
#line 2790 
  if (((unsigned long)flags & 1UL) != 0UL) {
    int tmp;
    
#line 2791 
    tmp = rocker_group_tbl_del(rocker_port,trans,flags,entry);
    
#line 2791 
    __retres = tmp;
    
#line 2791 
    goto return_label;
  }
  else {
    int tmp_0;
    
#line 2793 
    tmp_0 = rocker_group_tbl_add(rocker_port,trans,flags,entry);
    
#line 2793 
    __retres = tmp_0;
    
#line 2793 
    goto return_label;
  }
  return_label: 
#line 2790 
                return __retres;
}


#line 2796  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_group_l2_interface(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, __be16 vlan_id, u32 out_pport, int pop_vlan)
{
  int __retres;
  struct rocker_group_tbl_entry *entry;
  unsigned int tmp_1;
  int tmp_2;
  
#line 2803 
  entry = (struct rocker_group_tbl_entry *)rocker_port_kzalloc(rocker_port,trans,flags,64UL);
  
#line 2804 
  if (entry == (struct rocker_group_tbl_entry *)0) {
    
#line 2805 
    __retres = -12;
    
#line 2805 
    goto return_label;
  }
  else ;
  
#line 2807 
  if (0 != 0) 
#line 2807 
              tmp_1 = (unsigned int)((int)((unsigned short)(((int)vlan_id << 8) | ((int)vlan_id >> 8))) << 16) & 268369920U;
  else {
    __u16 tmp_0;
    
#line 2807 
    tmp_0 = __fswab16((unsigned short)((int)vlan_id));
    
#line 2807 
    tmp_1 = (unsigned int)((int)tmp_0 << 16) & 268369920U;
  }
  
#line 2807 
  entry->group_id = tmp_1 | (out_pport & 65535U);
  
#line 2808 
  entry->__anonCompField_rocker_group_tbl_entry_115.l2_interface.pop_vlan = (unsigned char)pop_vlan;
  
#line 2810 
  tmp_2 = rocker_group_tbl_do(rocker_port,trans,flags,entry);
  
#line 2810 
  __retres = tmp_2;
  return_label: 
#line 2810 
                return __retres;
}


#line 2813  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_group_l2_fan_out(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, u8 group_count, u32 const *group_ids, u32 group_id)
{
  int __retres;
  struct rocker_group_tbl_entry *entry;
  int tmp_1;
  
#line 2820 
  entry = (struct rocker_group_tbl_entry *)rocker_port_kzalloc(rocker_port,trans,flags,64UL);
  
#line 2821 
  if (entry == (struct rocker_group_tbl_entry *)0) {
    
#line 2822 
    __retres = -12;
    
#line 2822 
    goto return_label;
  }
  else ;
  
#line 2824 
  entry->group_id = group_id;
  
#line 2825 
  entry->group_count = (unsigned short)group_count;
  
#line 2827 
  entry->group_ids = (u32 *)rocker_port_kcalloc(rocker_port,trans,flags,(unsigned long)group_count,4UL);
  
#line 2829 
  if (entry->group_ids == (u32 *)0U) {
    
#line 2830 
    rocker_port_kfree(trans,(void const *)entry);
    
#line 2831 
    __retres = -12;
    
#line 2831 
    goto return_label;
  }
  else ;
  
#line 2833 
  memcpy((void *)entry->group_ids,(void const *)group_ids,(unsigned long)group_count * 4UL);
  
#line 2835 
  tmp_1 = rocker_group_tbl_do(rocker_port,trans,flags,entry);
  
#line 2835 
  __retres = tmp_1;
  return_label: 
#line 2835 
                return __retres;
}


#line 2838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_group_l2_flood(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, __be16 vlan_id, u8 group_count, u32 const *group_ids, u32 group_id)
{
  int tmp;
  
#line 2843 
  tmp = rocker_group_l2_fan_out(rocker_port,trans,flags,(unsigned char)((int)group_count),group_ids,group_id);
  
#line 2843 
  return tmp;
}


#line 2848  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_group_l3_unicast(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, u32 index, u8 const *src_mac, u8 const *dst_mac, __be16 vlan_id, bool ttl_check, u32 pport)
{
  int __retres;
  struct rocker_group_tbl_entry *entry;
  unsigned int tmp_1;
  int tmp_2;
  
#line 2855 
  entry = (struct rocker_group_tbl_entry *)rocker_port_kzalloc(rocker_port,trans,flags,64UL);
  
#line 2856 
  if (entry == (struct rocker_group_tbl_entry *)0) {
    
#line 2857 
    __retres = -12;
    
#line 2857 
    goto return_label;
  }
  else ;
  
#line 2859 
  entry->group_id = (index & 268435455U) | 536870912U;
  
#line 2860 
  if (src_mac != (u8 const *)0U) 
#line 2861 
                                 ether_addr_copy((u8 *)(& entry->__anonCompField_rocker_group_tbl_entry_115.l3_unicast.eth_src),src_mac); else ;
  
#line 2862 
  if (dst_mac != (u8 const *)0U) 
#line 2863 
                                 ether_addr_copy((u8 *)(& entry->__anonCompField_rocker_group_tbl_entry_115.l3_unicast.eth_dst),dst_mac); else ;
  
#line 2864 
  entry->__anonCompField_rocker_group_tbl_entry_115.l3_unicast.vlan_id = vlan_id;
  
#line 2865 
  entry->__anonCompField_rocker_group_tbl_entry_115.l3_unicast.ttl_check = ttl_check;
  
#line 2866 
  if (0 != 0) 
#line 2866 
              tmp_1 = (unsigned int)((int)((unsigned short)(((int)vlan_id << 8) | ((int)vlan_id >> 8))) << 16) & 268369920U;
  else {
    __u16 tmp_0;
    
#line 2866 
    tmp_0 = __fswab16((unsigned short)((int)vlan_id));
    
#line 2866 
    tmp_1 = (unsigned int)((int)tmp_0 << 16) & 268369920U;
  }
  
#line 2866 
  entry->__anonCompField_rocker_group_tbl_entry_115.l3_unicast.group_id = tmp_1 | (pport & 65535U);
  
#line 2868 
  tmp_2 = rocker_group_tbl_do(rocker_port,trans,flags,entry);
  
#line 2868 
  __retres = tmp_2;
  return_label: 
#line 2868 
                return __retres;
}


#line 2872  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static struct rocker_neigh_tbl_entry *rocker_neigh_tbl_find(struct rocker const *rocker, __be32 ip_addr)
{
  struct rocker_neigh_tbl_entry *__retres;
  struct rocker_neigh_tbl_entry *found;
  struct rocker_neigh_tbl_entry *tmp_4;
  struct rocker_neigh_tbl_entry *tmp_7;
  {
    u32 tmp_1;
    unsigned int tmp_0;
    struct rocker_neigh_tbl_entry *tmp_3;
    
#line 2876 
    if (0 != 0) 
#line 2876 
                tmp_0 = (((ip_addr << 24) | ((ip_addr << 8) & 16711680U)) | ((ip_addr >> 8) & 65280U)) | (ip_addr >> 24); else 
                                                                    
#line 2876 
                                                                    tmp_0 = __fswab32(ip_addr);
    
#line 2876 
    tmp_1 = hash_32(tmp_0,16U);
    
#line 2876 
    struct hlist_node * const ____ptr = rocker->neigh_tbl[(unsigned long long)tmp_1].first;
    
#line 2876 
    if (____ptr != (struct hlist_node *)0) {
      struct rocker_neigh_tbl_entry *tmp_2;
      {
        
#line 2876 
        struct hlist_node const *__mptr = (struct hlist_node const *)____ptr;
        
#line 2876 
        tmp_2 = (struct rocker_neigh_tbl_entry *)__mptr;
      }
      
#line 2876 
      tmp_3 = tmp_2;
    }
    else 
#line 2876 
         tmp_3 = (struct rocker_neigh_tbl_entry *)0;
    
#line 2876 
    tmp_4 = tmp_3;
  }
  
#line 2876 
  found = tmp_4;
  
#line 2876 
  goto ldv_58680;
  ldv_58679: 
#line 2877 
  ;
  
#line 2878 
  if (found->ip_addr == ip_addr) {
    
#line 2879 
    __retres = found;
    
#line 2879 
    goto return_label;
  }
  else ;
  {
    struct rocker_neigh_tbl_entry *tmp_6;
    
#line 2876 
    struct hlist_node *____ptr_0 = found->entry.next;
    
#line 2876 
    if (____ptr_0 != (struct hlist_node *)0) {
      struct rocker_neigh_tbl_entry *tmp_5;
      {
        
#line 2876 
        struct hlist_node const *__mptr_0 = (struct hlist_node const *)____ptr_0;
        
#line 2876 
        tmp_5 = (struct rocker_neigh_tbl_entry *)__mptr_0;
      }
      
#line 2876 
      tmp_6 = tmp_5;
    }
    else 
#line 2876 
         tmp_6 = (struct rocker_neigh_tbl_entry *)0;
    
#line 2876 
    tmp_7 = tmp_6;
  }
  
#line 2876 
  found = tmp_7;
  ldv_58680: 
#line 2878 
  ;
  
#line 2876 
  if (found != (struct rocker_neigh_tbl_entry *)0) 
#line 2878 
                                                   goto ldv_58679; else 
                                                                    
#line 2881 
                                                                    goto ldv_58681;
  ldv_58681: 
#line 2882 
  ;
  
#line 2881 
  __retres = (struct rocker_neigh_tbl_entry *)0;
  return_label: 
#line 2881 
                return __retres;
}


#line 2884  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void _rocker_neigh_add(struct rocker *rocker, enum switchdev_trans trans, struct rocker_neigh_tbl_entry *entry)
{
  u32 tmp_2;
  unsigned int tmp_1;
  
#line 2888 
  if (trans != (unsigned int)SWITCHDEV_TRANS_COMMIT) {
    u32 tmp;
    
#line 2889 
    tmp = rocker->neigh_tbl_next_index;
    
#line 2889 
    rocker->neigh_tbl_next_index += 1U;
    
#line 2889 
    entry->index = tmp;
  }
  else ;
  
#line 2890 
  if (trans == (unsigned int)SWITCHDEV_TRANS_PREPARE) 
#line 2891 
                                                      goto return_label; else ;
  
#line 2892 
  entry->ref_count += 1U;
  
#line 2893 
  if (0 != 0) 
#line 2893 
              tmp_1 = (((entry->ip_addr << 24) | ((entry->ip_addr << 8) & 16711680U)) | ((entry->ip_addr >> 8) & 65280U)) | (entry->ip_addr >> 24); else 
                                                                    
#line 2893 
                                                                    tmp_1 = __fswab32(entry->ip_addr);
  
#line 2893 
  tmp_2 = hash_32(tmp_1,16U);
  
#line 2893 
  ;
  
#line 2893 
  ;
  
#line 2893 
  hlist_add_head(& entry->entry,& rocker->neigh_tbl[(unsigned long long)tmp_2]);
  return_label: 
#line 2894 
                return;
}


#line 2897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void _rocker_neigh_del(enum switchdev_trans trans, struct rocker_neigh_tbl_entry *entry)
{
  
#line 2900 
  if (trans == (unsigned int)SWITCHDEV_TRANS_PREPARE) 
#line 2901 
                                                      goto return_label; else ;
  
#line 2902 
  entry->ref_count -= 1U;
  
#line 2902 
  if (entry->ref_count == 0U) {
    
#line 2903 
    hash_del(& entry->entry);
    
#line 2904 
    rocker_port_kfree(trans,(void const *)entry);
  }
  else ;
  return_label: 
#line 2906 
                return;
}


#line 2908  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void _rocker_neigh_update(struct rocker_neigh_tbl_entry *entry, enum switchdev_trans trans, u8 const *eth_dst, bool ttl_check)
{
  
#line 2912 
  if (eth_dst != (u8 const *)0U) {
    
#line 2913 
    ether_addr_copy((u8 *)(& entry->eth_dst),eth_dst);
    
#line 2914 
    entry->ttl_check = ttl_check;
  }
  else 
    
#line 2915 
    if (trans != (unsigned int)SWITCHDEV_TRANS_PREPARE) 
#line 2916 
                                                        entry->ref_count += 1U; else ;
  
#line 2917 
  return;
}


#line 2920  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_ipv4_neigh(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, __be32 ip_addr, u8 const *eth_dst)
{
  int __retres;
  struct rocker_neigh_tbl_entry *entry;
  struct rocker_neigh_tbl_entry *found;
  unsigned long lock_flags;
  u32 group_id;
  bool updating;
  bool removing;
  
#line 2924 
  struct rocker *rocker = rocker_port->rocker;
  
#line 2928 
  __be16 eth_type = (unsigned short)8U;
  
#line 2929 
  enum rocker_of_dpa_table_id goto_tbl = ROCKER_OF_DPA_TABLE_ID_ACL_POLICY;
  
#line 2932 
  u32 priority = 0U;
  
#line 2933 
  bool adding = (_Bool)(((unsigned long)flags & 1UL) == 0UL);
  
#line 2936 
  int err = 0;
  
#line 2938 
  entry = (struct rocker_neigh_tbl_entry *)rocker_port_kzalloc(rocker_port,trans,flags,48UL);
  
#line 2939 
  if (entry == (struct rocker_neigh_tbl_entry *)0) {
    
#line 2940 
    __retres = -12;
    
#line 2940 
    goto return_label;
  }
  else ;
  
#line 2942 
  ldv___ldv_spin_lock_99(& rocker->neigh_tbl_lock);
  
#line 2944 
  found = rocker_neigh_tbl_find((struct rocker const *)rocker,ip_addr);
  
#line 2946 
  updating = (_Bool)((found != (struct rocker_neigh_tbl_entry *)0 && (int)adding != 0) != 0);
  
#line 2947 
  removing = (_Bool)((found != (struct rocker_neigh_tbl_entry *)0 && ! adding) != 0);
  
#line 2948 
  adding = (_Bool)((found == (struct rocker_neigh_tbl_entry *)0 && (int)adding != 0) != 0);
  
#line 2950 
  if ((int)adding != 0) {
    
#line 2951 
    entry->ip_addr = ip_addr;
    
#line 2952 
    entry->dev = rocker_port->dev;
    
#line 2953 
    ether_addr_copy((u8 *)(& entry->eth_dst),eth_dst);
    
#line 2954 
    entry->ttl_check = (_Bool)1;
    
#line 2955 
    _rocker_neigh_add(rocker,trans,entry);
  }
  else 
    
#line 2956 
    if ((int)removing != 0) {
      
#line 2957 
      memcpy((void *)entry,(void const *)found,48UL);
      
#line 2958 
      _rocker_neigh_del(trans,found);
    }
    else 
      
#line 2959 
      if ((int)updating != 0) {
        
#line 2960 
        _rocker_neigh_update(found,trans,eth_dst,(_Bool)1);
        
#line 2961 
        memcpy((void *)entry,(void const *)found,48UL);
      }
      else 
#line 2963 
           err = -2;
  
#line 2966 
  ldv_spin_unlock_irqrestore_100(& rocker->neigh_tbl_lock,lock_flags);
  
#line 2968 
  if (err != 0) 
#line 2969 
                goto err_out; else ;
  
#line 2977 
  err = rocker_group_l3_unicast(rocker_port,trans,flags,entry->index,(u8 const *)(rocker_port->dev)->dev_addr,(u8 const *)(& entry->eth_dst),(unsigned short)((int)rocker_port->internal_vlan_id),(_Bool)((bool)((int)entry->ttl_check) != 0),rocker_port->pport);
  
#line 2984 
  if (err != 0) {
    
#line 2985 
    netdev_err((struct net_device const *)rocker_port->dev,"Error (%d) L3 unicast group index %d\n",err,entry->index);
    
#line 2988 
    goto err_out;
  }
  else ;
  
#line 2991 
  if ((int)adding != 0 || (int)removing != 0) {
    __be32 tmp_0;
    
#line 2992 
    group_id = (entry->index & 268435455U) | 536870912U;
    
#line 2993 
    ;
    
#line 2993 
    ;
    
#line 2993 
    ;
    
#line 2993 
    ;
    
#line 2993 
    tmp_0 = inet_make_mask(32);
    
#line 2993 
    ;
    
#line 2993 
    ;
    
#line 2993 
    ;
    
#line 2993 
    ;
    
#line 2993 
    err = rocker_flow_tbl_ucast4_routing(rocker_port,trans,(unsigned short)((int)eth_type),ip_addr,tmp_0,priority,goto_tbl,group_id,flags);
    
#line 2999 
    if (err != 0) 
#line 3000 
                  netdev_err((struct net_device const *)rocker_port->dev,"Error (%d) /32 unicast route %pI4 group 0x%08x\n",err,& entry->ip_addr,group_id); else ;
  }
  else ;
  err_out: 
#line 3005 
  ;
  
#line 3006 
  if (! adding) 
#line 3007 
                rocker_port_kfree(trans,(void const *)entry); else ;
  
#line 3009 
  __retres = err;
  return_label: 
#line 3009 
                return __retres;
}


#line 3012  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_ipv4_resolve(struct rocker_port *rocker_port, enum switchdev_trans trans, __be32 ip_addr)
{
  int __retres;
  
#line 3015 
  struct net_device *dev = rocker_port->dev;
  
#line 3016 
  struct neighbour *n = __ipv4_neigh_lookup(dev,ip_addr);
  
#line 3017 
  int err = 0;
  
#line 3019 
  if (n == (struct neighbour *)0) {
    bool tmp_1;
    
#line 3020 
    n = neigh_create(& arp_tbl,(void const *)(& ip_addr),dev);
    
#line 3021 
    tmp_1 = IS_ERR((void const *)n);
    
#line 3021 
    if ((int)tmp_1 != 0) {
      bool tmp_0;
      
#line 3022 
      tmp_0 = IS_ERR((void const *)n);
      
#line 3022 
      __retres = (int)tmp_0;
      
#line 3022 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 3030 
  if (((int)n->nud_state & 222) != 0) 
#line 3031 
                                      err = rocker_port_ipv4_neigh(rocker_port,trans,0,ip_addr,(u8 const *)(& n->ha)); else 
                                                                    
#line 3034 
                                                                    neigh_event_send(n,(struct sk_buff *)0);
  
#line 3036 
  neigh_release(n);
  
#line 3037 
  __retres = err;
  return_label: 
#line 3037 
                return __retres;
}


#line 3040  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_ipv4_nh(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, __be32 ip_addr, u32 *index)
{
  int __retres;
  struct rocker_neigh_tbl_entry *entry;
  struct rocker_neigh_tbl_entry *found;
  unsigned long lock_flags;
  bool updating;
  bool removing;
  
#line 3044 
  struct rocker *rocker = rocker_port->rocker;
  
#line 3048 
  bool adding = (_Bool)(((unsigned long)flags & 1UL) == 0UL);
  
#line 3051 
  bool resolved = (_Bool)1;
  
#line 3052 
  int err = 0;
  
#line 3054 
  entry = (struct rocker_neigh_tbl_entry *)rocker_port_kzalloc(rocker_port,trans,flags,48UL);
  
#line 3055 
  if (entry == (struct rocker_neigh_tbl_entry *)0) {
    
#line 3056 
    __retres = -12;
    
#line 3056 
    goto return_label;
  }
  else ;
  
#line 3058 
  ldv___ldv_spin_lock_101(& rocker->neigh_tbl_lock);
  
#line 3060 
  found = rocker_neigh_tbl_find((struct rocker const *)rocker,ip_addr);
  
#line 3061 
  if (found != (struct rocker_neigh_tbl_entry *)0) 
#line 3062 
                                                   *index = found->index; else ;
  
#line 3064 
  updating = (_Bool)((found != (struct rocker_neigh_tbl_entry *)0 && (int)adding != 0) != 0);
  
#line 3065 
  removing = (_Bool)((found != (struct rocker_neigh_tbl_entry *)0 && ! adding) != 0);
  
#line 3066 
  adding = (_Bool)((found == (struct rocker_neigh_tbl_entry *)0 && (int)adding != 0) != 0);
  
#line 3068 
  if ((int)adding != 0) {
    
#line 3069 
    entry->ip_addr = ip_addr;
    
#line 3070 
    entry->dev = rocker_port->dev;
    
#line 3071 
    _rocker_neigh_add(rocker,trans,entry);
    
#line 3072 
    *index = entry->index;
    
#line 3073 
    resolved = (_Bool)0;
  }
  else 
    
#line 3074 
    if ((int)removing != 0) 
#line 3075 
                            _rocker_neigh_del(trans,found);
    else 
      
#line 3076 
      if ((int)updating != 0) {
        int tmp_1;
        bool tmp_0;
        
#line 3077 
        _rocker_neigh_update(found,trans,(u8 const *)0U,(_Bool)0);
        
#line 3078 
        tmp_0 = is_zero_ether_addr((u8 const *)(& found->eth_dst));
        
#line 3078 
        if ((int)tmp_0 != 0) 
#line 3078 
                             tmp_1 = 0; else 
#line 3078 
                                             tmp_1 = 1;
        
#line 3078 
        resolved = (_Bool)(tmp_1 != 0);
      }
      else 
#line 3080 
           err = -2;
  
#line 3083 
  ldv_spin_unlock_irqrestore_102(& rocker->neigh_tbl_lock,lock_flags);
  
#line 3085 
  if (! adding) 
#line 3086 
                rocker_port_kfree(trans,(void const *)entry); else ;
  
#line 3088 
  if (err != 0) {
    
#line 3089 
    __retres = err;
    
#line 3089 
    goto return_label;
  }
  else ;
  
#line 3093 
  if (! resolved) 
#line 3094 
                  err = rocker_port_ipv4_resolve(rocker_port,trans,ip_addr); else ;
  
#line 3096 
  __retres = err;
  return_label: 
#line 3096 
                return __retres;
}


#line 3099  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_vlan_flood_group(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, __be16 vlan_id)
{
  int __retres;
  struct rocker_port *p;
  unsigned int tmp_0;
  u32 *group_ids;
  int i;
  int tmp_3;
  bool tmp_2;
  int tmp_15;
  
#line 3104 
  struct rocker const *rocker = (struct rocker const *)rocker_port->rocker;
  
#line 3105 
  if (0 != 0) 
#line 3105 
              tmp_0 = ((unsigned int)((int)((unsigned short)(((int)vlan_id << 8) | ((int)vlan_id >> 8))) << 16) & 268369920U) | 1073741824U;
  else {
    __u16 tmp;
    
#line 3105 
    tmp = __fswab16((unsigned short)((int)vlan_id));
    
#line 3105 
    tmp_0 = ((unsigned int)((int)tmp << 16) & 268369920U) | 1073741824U;
  }
  
#line 3105 
  u32 group_id = tmp_0;
  
#line 3107 
  u8 group_count = (unsigned char)0U;
  
#line 3108 
  int err = 0;
  
#line 3111 
  group_ids = (u32 *)rocker_port_kcalloc(rocker_port,trans,flags,(unsigned long)rocker->port_count,4UL);
  
#line 3113 
  if (group_ids == (u32 *)0U) {
    
#line 3114 
    __retres = -12;
    
#line 3114 
    goto return_label;
  }
  else ;
  
#line 3121 
  i = 0;
  
#line 3121 
  goto ldv_59170;
  ldv_59169: 
#line 3122 
  ;
  
#line 3122 
  p = *(rocker->ports + i);
  
#line 3123 
  if (p == (struct rocker_port *)0) 
#line 3124 
                                    goto ldv_59168; else ;
  
#line 3125 
  tmp_2 = rocker_port_is_bridged((struct rocker_port const *)p);
  
#line 3125 
  if (tmp_2) 
#line 3125 
             tmp_3 = 0; else 
#line 3125 
                             tmp_3 = 1;
  
#line 3125 
  if (tmp_3) 
#line 3126 
             goto ldv_59168; else ;
  
#line 3127 
  if (0 != 0) {
    int tmp_11;
    int tmp_10;
    
#line 3127 
    ;
    
#line 3127 
    if (0 != 0) 
#line 3127 
                tmp_10 = (int)((unsigned short)(((int)vlan_id << 8) | ((int)vlan_id >> 8)));
    else {
      __u16 tmp_9;
      
#line 3127 
      tmp_9 = __fswab16((unsigned short)((int)vlan_id));
      
#line 3127 
      tmp_10 = (int)tmp_9;
    }
    
#line 3127 
    tmp_11 = constant_test_bit((long)tmp_10,(unsigned long const volatile *)(& p->vlan_bitmap));
    
#line 3127 
    tmp_15 = tmp_11 != 0;
  }
  else {
    int tmp_14;
    int tmp_13;
    
#line 3127 
    ;
    
#line 3127 
    if (0 != 0) 
#line 3127 
                tmp_13 = (int)((unsigned short)(((int)vlan_id << 8) | ((int)vlan_id >> 8)));
    else {
      __u16 tmp_12;
      
#line 3127 
      tmp_12 = __fswab16((unsigned short)((int)vlan_id));
      
#line 3127 
      tmp_13 = (int)tmp_12;
    }
    
#line 3127 
    tmp_14 = variable_test_bit((long)tmp_13,(unsigned long const volatile *)(& p->vlan_bitmap));
    
#line 3127 
    tmp_15 = tmp_14 != 0;
  }
  
#line 3127 
  if (tmp_15) {
    u8 tmp_4;
    unsigned int tmp_6;
    
#line 3128 
    tmp_4 = group_count;
    
#line 3128 
    group_count = (u8)((int)group_count + 1);
    
#line 3128 
    if (0 != 0) 
#line 3128 
                tmp_6 = (unsigned int)((int)((unsigned short)(((int)vlan_id << 8) | ((int)vlan_id >> 8))) << 16) & 268369920U;
    else {
      __u16 tmp_5;
      
#line 3129 
      tmp_5 = __fswab16((unsigned short)((int)vlan_id));
      
#line 3128 
      tmp_6 = (unsigned int)((int)tmp_5 << 16) & 268369920U;
    }
    
#line 3128 
    *(group_ids + (int)tmp_4) = tmp_6 | (p->pport & 65535U);
  }
  else ;
  ldv_59168: 
#line 3130 
  ;
  
#line 3121 
  i += 1;
  ldv_59170: 
#line 3122 
  ;
  
#line 3121 
  if (rocker->port_count > (unsigned int)i) 
#line 3123 
                                            goto ldv_59169; else 
#line 3126 
                                                                 goto ldv_59171;
  ldv_59171: 
#line 3127 
  ;
  
#line 3134 
  if ((unsigned int)group_count == 0U) 
#line 3135 
                                       goto no_ports_in_vlan; else ;
  
#line 3137 
  err = rocker_group_l2_flood(rocker_port,trans,flags,(unsigned short)((int)vlan_id),(unsigned char)((int)group_count),(u32 const *)group_ids,group_id);
  
#line 3139 
  if (err != 0) 
#line 3140 
                netdev_err((struct net_device const *)rocker_port->dev,"Error (%d) port VLAN l2 flood group\n",err); else ;
  no_ports_in_vlan: 
#line 3143 
  ;
  
#line 3144 
  rocker_port_kfree(trans,(void const *)group_ids);
  
#line 3145 
  __retres = err;
  return_label: 
#line 3145 
                return __retres;
}


#line 3148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_vlan_l2_groups(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, __be16 vlan_id, bool pop_vlan)
{
  int __retres;
  struct rocker_port *p;
  u32 out_pport;
  int err;
  int i;
  
#line 3152 
  struct rocker const *rocker = (struct rocker const *)rocker_port->rocker;
  
#line 3154 
  bool adding = (_Bool)(((unsigned long)flags & 1UL) == 0UL);
  
#line 3156 
  int ref = 0;
  
#line 3164 
  if ((unsigned int)rocker_port->stp_state + 4294967294U <= 1U) {
    
#line 3166 
    out_pport = rocker_port->pport;
    
#line 3167 
    err = rocker_group_l2_interface(rocker_port,trans,flags,(unsigned short)((int)vlan_id),out_pport,(int)pop_vlan);
    
#line 3169 
    if (err != 0) {
      
#line 3170 
      netdev_err((struct net_device const *)rocker_port->dev,"Error (%d) port VLAN l2 group for pport %d\n",err,out_pport);
      
#line 3173 
      __retres = err;
      
#line 3173 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 3182 
  i = 0;
  
#line 3182 
  goto ldv_59188;
  ldv_59187: 
#line 3183 
  ;
  
#line 3183 
  p = *(rocker->ports + i);
  
#line 3184 
  if (p != (struct rocker_port *)0) {
    int tmp_7;
    
#line 3184 
    if (0 != 0) {
      int tmp_3;
      int tmp_2;
      
#line 3184 
      ;
      
#line 3184 
      if (0 != 0) 
#line 3184 
                  tmp_2 = (int)((unsigned short)(((int)vlan_id << 8) | ((int)vlan_id >> 8)));
      else {
        __u16 tmp_1;
        
#line 3184 
        tmp_1 = __fswab16((unsigned short)((int)vlan_id));
        
#line 3184 
        tmp_2 = (int)tmp_1;
      }
      
#line 3184 
      tmp_3 = constant_test_bit((long)tmp_2,(unsigned long const volatile *)(& p->vlan_bitmap));
      
#line 3184 
      tmp_7 = tmp_3 != 0;
    }
    else {
      int tmp_6;
      int tmp_5;
      
#line 3184 
      ;
      
#line 3184 
      if (0 != 0) 
#line 3184 
                  tmp_5 = (int)((unsigned short)(((int)vlan_id << 8) | ((int)vlan_id >> 8)));
      else {
        __u16 tmp_4;
        
#line 3184 
        tmp_4 = __fswab16((unsigned short)((int)vlan_id));
        
#line 3184 
        tmp_5 = (int)tmp_4;
      }
      
#line 3184 
      tmp_6 = variable_test_bit((long)tmp_5,(unsigned long const volatile *)(& p->vlan_bitmap));
      
#line 3184 
      tmp_7 = tmp_6 != 0;
    }
    
#line 3184 
    if (tmp_7) 
#line 3185 
               ref += 1; else ;
  }
  else ;
  
#line 3182 
  i += 1;
  ldv_59188: 
#line 3183 
  ;
  
#line 3182 
  if (rocker->port_count > (unsigned int)i) 
#line 3184 
                                            goto ldv_59187; else 
#line 3187 
                                                                 goto ldv_59189;
  ldv_59189: 
#line 3188 
  ;
  
#line 3188 
  if ((! adding || ref != 1) && ((int)adding != 0 || ref != 0)) {
    
#line 3189 
    __retres = 0;
    
#line 3189 
    goto return_label;
  }
  else ;
  
#line 3191 
  out_pport = 0U;
  
#line 3192 
  err = rocker_group_l2_interface(rocker_port,trans,flags,(unsigned short)((int)vlan_id),out_pport,(int)pop_vlan);
  
#line 3194 
  if (err != 0) {
    
#line 3195 
    netdev_err((struct net_device const *)rocker_port->dev,"Error (%d) port VLAN l2 group for CPU port\n",err);
    
#line 3197 
    __retres = err;
    
#line 3197 
    goto return_label;
  }
  else ;
  
#line 3200 
  __retres = 0;
  return_label: 
#line 3200 
                return __retres;
}


#line 3211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static struct rocker_ctrl rocker_ctrls[5U] = {{.eth_dst = (u8 const *)(& ll_mac), .eth_dst_mask = (u8 const *)(& ll_mask), .eth_type = (unsigned short)0, .acl = (_Bool)1, .bridge = (_Bool)0, .term = (_Bool)0, .copy_to_cpu = (_Bool)0}, {.eth_dst = (u8 const *)(& zero_mac), .eth_dst_mask = (u8 const *)(& zero_mac), .eth_type = (unsigned short)1544U, .acl = (_Bool)1, .bridge = (_Bool)0, .term = (_Bool)0, .copy_to_cpu = (_Bool)0}, {.eth_dst = (u8 const *)(& ipv4_mcast), .eth_dst_mask = (u8 const *)(& ipv4_mask), .eth_type = (unsigned short)8U, .acl = (_Bool)0, .bridge = (_Bool)0, .term = (_Bool)1, .copy_to_cpu = (_Bool)1}, {.eth_dst = (u8 const *)(& ipv6_mcast), .eth_dst_mask = (u8 const *)(& ipv6_mask), .eth_type = (unsigned short)56710U, .acl = (_Bool)0, .bridge = (_Bool)0, .term = (_Bool)1, .copy_to_cpu = (_Bool)1}, {.eth_dst = (u8 const *)0, .eth_dst_mask = (u8 const *)0, .eth_type = (unsigned short)0, .acl = (_Bool)0, .bridge = (_Bool)1, .term = (_Bool)0, .copy_to_cpu = (_Bool)1}};

#line 3248  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_ctrl_vlan_acl(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, struct rocker_ctrl const *ctrl, __be16 vlan_id)
{
  unsigned int tmp_0;
  int err;
  
#line 3252 
  u32 in_pport = rocker_port->pport;
  
#line 3253 
  u32 in_pport_mask = 4294967295U;
  
#line 3254 
  u32 out_pport = 0U;
  
#line 3255 
  u8 const *eth_src = (u8 const *)0U;
  
#line 3256 
  u8 const *eth_src_mask = (u8 const *)0U;
  
#line 3257 
  __be16 vlan_id_mask = (unsigned short)65535U;
  
#line 3258 
  u8 ip_proto = (unsigned char)0U;
  
#line 3259 
  u8 ip_proto_mask = (unsigned char)0U;
  
#line 3260 
  u8 ip_tos = (unsigned char)0U;
  
#line 3261 
  u8 ip_tos_mask = (unsigned char)0U;
  
#line 3262 
  if (0 != 0) 
#line 3262 
              tmp_0 = (unsigned int)((int)((unsigned short)(((int)vlan_id << 8) | ((int)vlan_id >> 8))) << 16) & 268369920U;
  else {
    __u16 tmp;
    
#line 3262 
    tmp = __fswab16((unsigned short)((int)vlan_id));
    
#line 3262 
    tmp_0 = (unsigned int)((int)tmp << 16) & 268369920U;
  }
  
#line 3262 
  u32 group_id = tmp_0 | (out_pport & 65535U);
  
#line 3265 
  err = rocker_flow_tbl_acl(rocker_port,trans,flags,in_pport,in_pport_mask,eth_src,eth_src_mask,ctrl->eth_dst,ctrl->eth_dst_mask,(unsigned short)((int)ctrl->eth_type),(unsigned short)((int)vlan_id),(unsigned short)((int)vlan_id_mask),(unsigned char)((int)ip_proto),(unsigned char)((int)ip_proto_mask),(unsigned char)((int)ip_tos),(unsigned char)((int)ip_tos_mask),group_id);
  
#line 3275 
  if (err != 0) 
#line 3276 
                netdev_err((struct net_device const *)rocker_port->dev,"Error (%d) ctrl ACL\n",err); else ;
  
#line 3278 
  return err;
}


#line 3281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_ctrl_vlan_bridge(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, struct rocker_ctrl const *ctrl, __be16 vlan_id)
{
  int __retres;
  unsigned int tmp_0;
  int err;
  int tmp_2;
  bool tmp_1;
  
#line 3286 
  enum rocker_of_dpa_table_id goto_tbl = ROCKER_OF_DPA_TABLE_ID_ACL_POLICY;
  
#line 3288 
  if (0 != 0) 
#line 3288 
              tmp_0 = ((unsigned int)((int)((unsigned short)(((int)vlan_id << 8) | ((int)vlan_id >> 8))) << 16) & 268369920U) | 1073741824U;
  else {
    __u16 tmp;
    
#line 3288 
    tmp = __fswab16((unsigned short)((int)vlan_id));
    
#line 3288 
    tmp_0 = ((unsigned int)((int)tmp << 16) & 268369920U) | 1073741824U;
  }
  
#line 3288 
  u32 group_id = tmp_0;
  
#line 3289 
  u32 tunnel_id = 0U;
  
#line 3292 
  tmp_1 = rocker_port_is_bridged((struct rocker_port const *)rocker_port);
  
#line 3292 
  if (tmp_1) 
#line 3292 
             tmp_2 = 0; else 
#line 3292 
                             tmp_2 = 1;
  
#line 3292 
  if (tmp_2) {
    
#line 3293 
    __retres = 0;
    
#line 3293 
    goto return_label;
  }
  else ;
  
#line 3295 
  err = rocker_flow_tbl_bridge(rocker_port,trans,flags,ctrl->eth_dst,ctrl->eth_dst_mask,(unsigned short)((int)vlan_id),tunnel_id,goto_tbl,group_id,(_Bool)((bool)((int)ctrl->copy_to_cpu) != 0));
  
#line 3300 
  if (err != 0) 
#line 3301 
                netdev_err((struct net_device const *)rocker_port->dev,"Error (%d) ctrl FLOOD\n",err); else ;
  
#line 3303 
  __retres = err;
  return_label: 
#line 3303 
                return __retres;
}


#line 3306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_ctrl_vlan_term(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, struct rocker_ctrl const *ctrl, __be16 vlan_id)
{
  int err;
  int tmp_0;
  
#line 3310 
  u32 in_pport_mask = 4294967295U;
  
#line 3311 
  __be16 vlan_id_mask = (unsigned short)65535U;
  
#line 3314 
  if (0 != 0) 
#line 3314 
              tmp_0 = (((int)vlan_id << 8) | ((int)vlan_id >> 8)) == 0;
  else {
    __u16 tmp;
    
#line 3314 
    tmp = __fswab16((unsigned short)((int)vlan_id));
    
#line 3314 
    tmp_0 = (unsigned int)tmp == 0U;
  }
  
#line 3314 
  if (tmp_0) 
#line 3315 
             vlan_id = rocker_port->internal_vlan_id; else ;
  
#line 3317 
  err = rocker_flow_tbl_term_mac(rocker_port,trans,rocker_port->pport,in_pport_mask,(unsigned short)((int)ctrl->eth_type),ctrl->eth_dst,ctrl->eth_dst_mask,(unsigned short)((int)vlan_id),(unsigned short)((int)vlan_id_mask),(_Bool)((bool)((int)ctrl->copy_to_cpu) != 0),flags);
  
#line 3324 
  if (err != 0) 
#line 3325 
                netdev_err((struct net_device const *)rocker_port->dev,"Error (%d) ctrl term\n",err); else ;
  
#line 3327 
  return err;
}


#line 3330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_ctrl_vlan(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, struct rocker_ctrl const *ctrl, __be16 vlan_id)
{
  int __retres;
  
#line 3334 
  if ((int)ctrl->acl != 0) {
    int tmp;
    
#line 3335 
    tmp = rocker_port_ctrl_vlan_acl(rocker_port,trans,flags,ctrl,(unsigned short)((int)vlan_id));
    
#line 3335 
    __retres = tmp;
    
#line 3335 
    goto return_label;
  }
  else ;
  
#line 3337 
  if ((int)ctrl->bridge != 0) {
    int tmp_0;
    
#line 3338 
    tmp_0 = rocker_port_ctrl_vlan_bridge(rocker_port,trans,flags,ctrl,(unsigned short)((int)vlan_id));
    
#line 3338 
    __retres = tmp_0;
    
#line 3338 
    goto return_label;
  }
  else ;
  
#line 3341 
  if ((int)ctrl->term != 0) {
    int tmp_1;
    
#line 3342 
    tmp_1 = rocker_port_ctrl_vlan_term(rocker_port,trans,flags,ctrl,(unsigned short)((int)vlan_id));
    
#line 3342 
    __retres = tmp_1;
    
#line 3342 
    goto return_label;
  }
  else ;
  
#line 3345 
  __retres = -95;
  return_label: 
#line 3345 
                return __retres;
}


#line 3348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_ctrl_vlan_add(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, __be16 vlan_id)
{
  int __retres;
  int i;
  
#line 3352 
  int err = 0;
  
#line 3355 
  i = 0;
  
#line 3355 
  goto ldv_59255;
  ldv_59254: 
#line 3356 
  ;
  
#line 3356 
  if ((int)rocker_port->ctrls[i] != 0) {
    
#line 3357 
    err = rocker_port_ctrl_vlan(rocker_port,trans,flags,(struct rocker_ctrl const *)(& rocker_ctrls[i]),(unsigned short)((int)vlan_id));
    
#line 3359 
    if (err != 0) {
      
#line 3360 
      __retres = err;
      
#line 3360 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 3355 
  i += 1;
  ldv_59255: 
#line 3356 
  ;
  
#line 3355 
  if (i <= 4) 
#line 3357 
              goto ldv_59254; else 
#line 3360 
                                   goto ldv_59256;
  ldv_59256: 
#line 3361 
  ;
  
#line 3364 
  __retres = err;
  return_label: 
#line 3364 
                return __retres;
}


#line 3367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_ctrl(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, struct rocker_ctrl const *ctrl)
{
  u16 vid;
  int tmp_1;
  int tmp_3;
  
#line 3372 
  int err = 0;
  
#line 3374 
  vid = (unsigned short)1U;
  
#line 3374 
  goto ldv_59268;
  ldv_59267: 
#line 3375 
  ;
  
#line 3375 
  if (0 != 0) {
    int tmp;
    
#line 3375 
    tmp = constant_test_bit((long)vid,(unsigned long const volatile *)(& rocker_port->vlan_bitmap));
    
#line 3375 
    tmp_1 = tmp == 0;
  }
  else {
    int tmp_0;
    
#line 3375 
    tmp_0 = variable_test_bit((long)vid,(unsigned long const volatile *)(& rocker_port->vlan_bitmap));
    
#line 3375 
    tmp_1 = tmp_0 == 0;
  }
  
#line 3375 
  if (tmp_1) 
#line 3376 
             goto ldv_59265; else ;
  
#line 3378 
  if (0 != 0) 
#line 3378 
              tmp_3 = (int)((unsigned short)(((int)vid << 8) | ((int)vid >> 8)));
  else {
    __u16 tmp_2;
    
#line 3378 
    tmp_2 = __fswab16((unsigned short)((int)vid));
    
#line 3378 
    tmp_3 = (int)tmp_2;
  }
  
#line 3377 
  ;
  
#line 3377 
  ;
  
#line 3377 
  ;
  
#line 3377 
  ;
  
#line 3377 
  err = rocker_port_ctrl_vlan(rocker_port,trans,flags,ctrl,(unsigned short)tmp_3);
  
#line 3379 
  if (err != 0) 
#line 3380 
                goto ldv_59266; else ;
  ldv_59265: 
#line 3381 
  ;
  
#line 3374 
  vid = (u16)((int)vid + 1);
  ldv_59268: 
#line 3375 
  ;
  
#line 3374 
  if ((unsigned int)vid <= 4095U) 
#line 3376 
                                  goto ldv_59267; else 
#line 3379 
                                                       goto ldv_59266;
  ldv_59266: 
#line 3380 
  ;
  
#line 3383 
  return err;
}


#line 3386  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_vlan(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, u16 vid)
{
  int __retres;
  int tmp_0;
  __be16 internal_vlan_id;
  bool untagged;
  int err;
  int tmp_20;
  
#line 3389 
  enum rocker_of_dpa_table_id goto_tbl = ROCKER_OF_DPA_TABLE_ID_TERMINATION_MAC;
  
#line 3391 
  u32 in_pport = rocker_port->pport;
  
#line 3392 
  if (0 != 0) 
#line 3392 
              tmp_0 = (int)((unsigned short)(((int)vid << 8) | ((int)vid >> 8)));
  else {
    __u16 tmp;
    
#line 3392 
    tmp = __fswab16((unsigned short)((int)vid));
    
#line 3392 
    tmp_0 = (int)tmp;
  }
  
#line 3392 
  __be16 vlan_id = (unsigned short)tmp_0;
  
#line 3393 
  __be16 vlan_id_mask = (unsigned short)65535U;
  
#line 3396 
  bool adding = (_Bool)(((unsigned long)flags & 1UL) == 0UL);
  
#line 3399 
  internal_vlan_id = rocker_port_vid_to_vlan((struct rocker_port const *)rocker_port,(unsigned short)((int)vid),& untagged);
  
#line 3401 
  if ((int)adding != 0) {
    int tmp_18;
    
#line 3401 
    if (0 != 0) {
      int tmp_14;
      int tmp_13;
      
#line 3401 
      ;
      
#line 3401 
      if (0 != 0) 
#line 3401 
                  tmp_13 = (int)((unsigned short)(((int)internal_vlan_id << 8) | ((int)internal_vlan_id >> 8)));
      else {
        __u16 tmp_12;
        
#line 3401 
        tmp_12 = __fswab16((unsigned short)((int)internal_vlan_id));
        
#line 3401 
        tmp_13 = (int)tmp_12;
      }
      
#line 3401 
      tmp_14 = constant_test_bit((long)tmp_13,(unsigned long const volatile *)(& rocker_port->vlan_bitmap));
      
#line 3401 
      tmp_18 = tmp_14 != 0;
    }
    else {
      int tmp_17;
      int tmp_16;
      
#line 3401 
      ;
      
#line 3401 
      if (0 != 0) 
#line 3401 
                  tmp_16 = (int)((unsigned short)(((int)internal_vlan_id << 8) | ((int)internal_vlan_id >> 8)));
      else {
        __u16 tmp_15;
        
#line 3401 
        tmp_15 = __fswab16((unsigned short)((int)internal_vlan_id));
        
#line 3401 
        tmp_16 = (int)tmp_15;
      }
      
#line 3401 
      tmp_17 = variable_test_bit((long)tmp_16,(unsigned long const volatile *)(& rocker_port->vlan_bitmap));
      
#line 3401 
      tmp_18 = tmp_17 != 0;
    }
    
#line 3401 
    if (tmp_18) {
      
#line 3403 
      __retres = 0;
      
#line 3403 
      goto return_label;
    }
    else 
#line 3401 
         goto _LAND;
  }
  else 
    _LAND: 
#line 3404 
           if (! adding) {
             int tmp_9;
             
#line 3404 
             if (0 != 0) {
               int tmp_5;
               int tmp_4;
               
#line 3404 
               ;
               
#line 3404 
               if (0 != 0) 
#line 3404 
                           tmp_4 = (int)((unsigned short)(((int)internal_vlan_id << 8) | ((int)internal_vlan_id >> 8)));
               else {
                 __u16 tmp_3;
                 
#line 3404 
                 tmp_3 = __fswab16((unsigned short)((int)internal_vlan_id));
                 
#line 3404 
                 tmp_4 = (int)tmp_3;
               }
               
#line 3404 
               tmp_5 = constant_test_bit((long)tmp_4,(unsigned long const volatile *)(& rocker_port->vlan_bitmap));
               
#line 3404 
               tmp_9 = tmp_5 == 0;
             }
             else {
               int tmp_8;
               int tmp_7;
               
#line 3404 
               ;
               
#line 3404 
               if (0 != 0) 
#line 3404 
                           tmp_7 = (int)((unsigned short)(((int)internal_vlan_id << 8) | ((int)internal_vlan_id >> 8)));
               else {
                 __u16 tmp_6;
                 
#line 3404 
                 tmp_6 = __fswab16((unsigned short)((int)internal_vlan_id));
                 
#line 3404 
                 tmp_7 = (int)tmp_6;
               }
               
#line 3404 
               tmp_8 = variable_test_bit((long)tmp_7,(unsigned long const volatile *)(& rocker_port->vlan_bitmap));
               
#line 3404 
               tmp_9 = tmp_8 == 0;
             }
             
#line 3404 
             if (tmp_9) {
               
#line 3406 
               __retres = 0;
               
#line 3406 
               goto return_label;
             }
             else ;
           }
           else ;
  
#line 3408 
  ;
  
#line 3408 
  if (0 != 0) 
#line 3408 
              tmp_20 = (int)((unsigned short)(((int)internal_vlan_id << 8) | ((int)internal_vlan_id >> 8)));
  else {
    __u16 tmp_19;
    
#line 3408 
    tmp_19 = __fswab16((unsigned short)((int)internal_vlan_id));
    
#line 3408 
    tmp_20 = (int)tmp_19;
  }
  
#line 3408 
  set_bit((long)tmp_20,(unsigned long volatile *)(& rocker_port->vlan_bitmap));
  
#line 3410 
  if ((int)adding != 0) {
    
#line 3411 
    err = rocker_port_ctrl_vlan_add(rocker_port,trans,flags,(unsigned short)((int)internal_vlan_id));
    
#line 3413 
    if (err != 0) {
      
#line 3414 
      netdev_err((struct net_device const *)rocker_port->dev,"Error (%d) port ctrl vlan add\n",err);
      
#line 3416 
      goto err_out;
    }
    else ;
  }
  else ;
  
#line 3420 
  err = rocker_port_vlan_l2_groups(rocker_port,trans,flags,(unsigned short)((int)internal_vlan_id),(_Bool)((bool)((int)untagged) != 0));
  
#line 3422 
  if (err != 0) {
    
#line 3423 
    netdev_err((struct net_device const *)rocker_port->dev,"Error (%d) port VLAN l2 groups\n",err);
    
#line 3425 
    goto err_out;
  }
  else ;
  
#line 3428 
  err = rocker_port_vlan_flood_group(rocker_port,trans,flags,(unsigned short)((int)internal_vlan_id));
  
#line 3430 
  if (err != 0) {
    
#line 3431 
    netdev_err((struct net_device const *)rocker_port->dev,"Error (%d) port VLAN l2 flood group\n",err);
    
#line 3433 
    goto err_out;
  }
  else ;
  
#line 3436 
  err = rocker_flow_tbl_vlan(rocker_port,trans,flags,in_pport,(unsigned short)((int)vlan_id),(unsigned short)((int)vlan_id_mask),goto_tbl,(_Bool)((bool)((int)untagged) != 0),(unsigned short)((int)internal_vlan_id));
  
#line 3439 
  if (err != 0) 
#line 3440 
                netdev_err((struct net_device const *)rocker_port->dev,"Error (%d) port VLAN table\n",err); else ;
  err_out: 
#line 3443 
  ;
  
#line 3444 
  if (trans == (unsigned int)SWITCHDEV_TRANS_PREPARE) {
    int tmp_22;
    
#line 3445 
    ;
    
#line 3445 
    if (0 != 0) 
#line 3445 
                tmp_22 = (int)((unsigned short)(((int)internal_vlan_id << 8) | ((int)internal_vlan_id >> 8)));
    else {
      __u16 tmp_21;
      
#line 3445 
      tmp_21 = __fswab16((unsigned short)((int)internal_vlan_id));
      
#line 3445 
      tmp_22 = (int)tmp_21;
    }
    
#line 3445 
    set_bit((long)tmp_22,(unsigned long volatile *)(& rocker_port->vlan_bitmap));
  }
  else ;
  
#line 3447 
  __retres = err;
  return_label: 
#line 3447 
                return __retres;
}


#line 3450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_ig_tbl(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags)
{
  enum rocker_of_dpa_table_id goto_tbl;
  u32 in_pport;
  u32 in_pport_mask;
  int err;
  
#line 3462 
  in_pport = 0U;
  
#line 3463 
  in_pport_mask = 4294901760U;
  
#line 3464 
  goto_tbl = ROCKER_OF_DPA_TABLE_ID_VLAN;
  
#line 3466 
  err = rocker_flow_tbl_ig_port(rocker_port,trans,flags,in_pport,in_pport_mask,goto_tbl);
  
#line 3469 
  if (err != 0) 
#line 3470 
                netdev_err((struct net_device const *)rocker_port->dev,"Error (%d) ingress port table entry\n",err); else ;
  
#line 3473 
  return err;
}


#line 3485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_port_fdb_learn_work(struct work_struct *work)
{
  struct rocker_fdb_learn_work *tmp;
  struct switchdev_notifier_fdb_info info;
  {
    
#line 3488 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 3488 
    tmp = (struct rocker_fdb_learn_work *)__mptr;
  }
  
#line 3487 
  struct rocker_fdb_learn_work const *lw = (struct rocker_fdb_learn_work const *)tmp;
  
#line 3489 
  bool removing = (_Bool)(((unsigned long)lw->flags & 1UL) != 0UL);
  
#line 3490 
  bool learned = (_Bool)(((unsigned long)lw->flags & 4UL) != 0UL);
  
#line 3493 
  info.addr = (unsigned char const *)(& lw->addr);
  
#line 3494 
  info.vid = lw->vid;
  
#line 3496 
  if ((int)learned != 0 && (int)removing != 0) 
#line 3497 
                                               call_switchdev_notifiers(2UL,(lw->rocker_port)->dev,& info.info);
  else 
    
#line 3499 
    if ((int)learned != 0 && ! removing) 
#line 3500 
                                         call_switchdev_notifiers(1UL,(lw->rocker_port)->dev,& info.info); else ;
  
#line 3503 
  rocker_port_kfree(lw->trans,(void const *)work);
  
#line 3504 
  return;
}


#line 3506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_fdb_learn(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, u8 const *addr, __be16 vlan_id)
{
  int __retres;
  struct rocker_fdb_learn_work *lw;
  int err;
  bool tmp_1;
  int tmp_3;
  bool tmp_2;
  
#line 3511 
  enum rocker_of_dpa_table_id goto_tbl = ROCKER_OF_DPA_TABLE_ID_ACL_POLICY;
  
#line 3513 
  u32 out_pport = rocker_port->pport;
  
#line 3514 
  u32 tunnel_id = 0U;
  
#line 3515 
  u32 group_id = 0U;
  
#line 3516 
  bool syncing = (_Bool)(((unsigned long)rocker_port->brport_flags & 512UL) != 0UL);
  
#line 3517 
  bool copy_to_cpu = (_Bool)0;
  
#line 3520 
  tmp_1 = rocker_port_is_bridged((struct rocker_port const *)rocker_port);
  
#line 3520 
  if ((int)tmp_1 != 0) {
    unsigned int tmp_0;
    
#line 3521 
    if (0 != 0) 
#line 3521 
                tmp_0 = (unsigned int)((int)((unsigned short)(((int)vlan_id << 8) | ((int)vlan_id >> 8))) << 16) & 268369920U;
    else {
      __u16 tmp;
      
#line 3521 
      tmp = __fswab16((unsigned short)((int)vlan_id));
      
#line 3521 
      tmp_0 = (unsigned int)((int)tmp << 16) & 268369920U;
    }
    
#line 3521 
    group_id = tmp_0 | (out_pport & 65535U);
  }
  else ;
  
#line 3523 
  if (((unsigned long)flags & 8UL) == 0UL) {
    
#line 3524 
    err = rocker_flow_tbl_bridge(rocker_port,trans,flags,addr,(u8 const *)0U,(unsigned short)((int)vlan_id),tunnel_id,goto_tbl,group_id,(_Bool)((bool)((int)copy_to_cpu) != 0));
    
#line 3527 
    if (err != 0) {
      
#line 3528 
      __retres = err;
      
#line 3528 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 3531 
  if (! syncing) {
    
#line 3532 
    __retres = 0;
    
#line 3532 
    goto return_label;
  }
  else ;
  
#line 3534 
  tmp_2 = rocker_port_is_bridged((struct rocker_port const *)rocker_port);
  
#line 3534 
  if (tmp_2) 
#line 3534 
             tmp_3 = 0; else 
#line 3534 
                             tmp_3 = 1;
  
#line 3534 
  if (tmp_3) {
    
#line 3535 
    __retres = 0;
    
#line 3535 
    goto return_label;
  }
  else ;
  
#line 3537 
  lw = (struct rocker_fdb_learn_work *)rocker_port_kzalloc(rocker_port,trans,flags,104UL);
  
#line 3538 
  if (lw == (struct rocker_fdb_learn_work *)0) {
    
#line 3539 
    __retres = -12;
    
#line 3539 
    goto return_label;
  }
  else ;
  {
    struct lock_class_key __key;
    
#line 3541 
    __init_work(& lw->work,0);
    
#line 3541 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 3541 
    lw->work.data = __constr_expr_37;
    
#line 3541 
    lockdep_init_map(& lw->work.lockdep_map,"(&lw->work)",& __key,0);
    
#line 3541 
    INIT_LIST_HEAD(& lw->work.entry);
    
#line 3541 
    lw->work.func = & rocker_port_fdb_learn_work;
  }
  
#line 3543 
  lw->rocker_port = rocker_port;
  
#line 3544 
  lw->trans = trans;
  
#line 3545 
  lw->flags = flags;
  
#line 3546 
  ether_addr_copy((u8 *)(& lw->addr),addr);
  
#line 3547 
  lw->vid = rocker_port_vlan_to_vid((struct rocker_port const *)rocker_port,(unsigned short)((int)vlan_id));
  
#line 3549 
  if (trans == (unsigned int)SWITCHDEV_TRANS_PREPARE) 
#line 3550 
                                                      rocker_port_kfree(trans,(void const *)lw); else 
                                                                    
#line 3552 
                                                                    ldv_schedule_work_103(& lw->work);
  
#line 3554 
  __retres = 0;
  return_label: 
#line 3554 
                return __retres;
}


#line 3558  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static struct rocker_fdb_tbl_entry *rocker_fdb_tbl_find(struct rocker const *rocker, struct rocker_fdb_tbl_entry const *match)
{
  struct rocker_fdb_tbl_entry *__retres;
  struct rocker_fdb_tbl_entry *found;
  struct rocker_fdb_tbl_entry *tmp_2;
  int tmp_3;
  struct rocker_fdb_tbl_entry *tmp_6;
  {
    u32 tmp;
    struct rocker_fdb_tbl_entry *tmp_1;
    
#line 3563 
    tmp = hash_32(match->key_crc32,16U);
    
#line 3563 
    struct hlist_node * const ____ptr = rocker->fdb_tbl[(unsigned long long)tmp].first;
    
#line 3563 
    if (____ptr != (struct hlist_node *)0) {
      struct rocker_fdb_tbl_entry *tmp_0;
      {
        
#line 3563 
        struct hlist_node const *__mptr = (struct hlist_node const *)____ptr;
        
#line 3563 
        tmp_0 = (struct rocker_fdb_tbl_entry *)__mptr;
      }
      
#line 3563 
      tmp_1 = tmp_0;
    }
    else 
#line 3563 
         tmp_1 = (struct rocker_fdb_tbl_entry *)0;
    
#line 3563 
    tmp_2 = tmp_1;
  }
  
#line 3563 
  found = tmp_2;
  
#line 3563 
  goto ldv_60168;
  ldv_60167: 
#line 3564 
  ;
  
#line 3564 
  tmp_3 = memcmp((void const *)(& found->key),(void const *)(& match->key),12UL);
  
#line 3564 
  if (tmp_3 == 0) {
    
#line 3565 
    __retres = found;
    
#line 3565 
    goto return_label;
  }
  else ;
  {
    struct rocker_fdb_tbl_entry *tmp_5;
    
#line 3563 
    struct hlist_node *____ptr_0 = found->entry.next;
    
#line 3563 
    if (____ptr_0 != (struct hlist_node *)0) {
      struct rocker_fdb_tbl_entry *tmp_4;
      {
        
#line 3563 
        struct hlist_node const *__mptr_0 = (struct hlist_node const *)____ptr_0;
        
#line 3563 
        tmp_4 = (struct rocker_fdb_tbl_entry *)__mptr_0;
      }
      
#line 3563 
      tmp_5 = tmp_4;
    }
    else 
#line 3563 
         tmp_5 = (struct rocker_fdb_tbl_entry *)0;
    
#line 3563 
    tmp_6 = tmp_5;
  }
  
#line 3563 
  found = tmp_6;
  ldv_60168: 
#line 3565 
  ;
  
#line 3563 
  if (found != (struct rocker_fdb_tbl_entry *)0) 
#line 3565 
                                                 goto ldv_60167; else 
                                                                   
#line 3568 
                                                                   goto ldv_60169;
  ldv_60169: 
#line 3569 
  ;
  
#line 3567 
  __retres = (struct rocker_fdb_tbl_entry *)0;
  return_label: 
#line 3567 
                return __retres;
}


#line 3570  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_fdb(struct rocker_port *rocker_port, enum switchdev_trans trans, unsigned char const *addr, __be16 vlan_id, int flags)
{
  int __retres;
  struct rocker_fdb_tbl_entry *fdb;
  struct rocker_fdb_tbl_entry *found;
  unsigned long lock_flags;
  int tmp_1;
  
#line 3575 
  struct rocker *rocker = rocker_port->rocker;
  
#line 3578 
  bool removing = (_Bool)(((unsigned long)flags & 1UL) != 0UL);
  
#line 3581 
  fdb = (struct rocker_fdb_tbl_entry *)rocker_port_kzalloc(rocker_port,trans,flags,40UL);
  
#line 3582 
  if (fdb == (struct rocker_fdb_tbl_entry *)0) {
    
#line 3583 
    __retres = -12;
    
#line 3583 
    goto return_label;
  }
  else ;
  
#line 3585 
  fdb->learned = (_Bool)(((unsigned long)flags & 4UL) != 0UL);
  
#line 3586 
  fdb->key.pport = rocker_port->pport;
  
#line 3587 
  ether_addr_copy((u8 *)(& fdb->key.addr),addr);
  
#line 3588 
  fdb->key.vlan_id = vlan_id;
  
#line 3589 
  fdb->key_crc32 = crc32_le(4294967295U,(unsigned char const *)(& fdb->key),12UL);
  
#line 3591 
  ldv___ldv_spin_lock_104(& rocker->fdb_tbl_lock);
  
#line 3593 
  found = rocker_fdb_tbl_find((struct rocker const *)rocker,(struct rocker_fdb_tbl_entry const *)fdb);
  
#line 3595 
  if ((int)removing != 0 && found != (struct rocker_fdb_tbl_entry *)0) {
    
#line 3596 
    rocker_port_kfree(trans,(void const *)fdb);
    
#line 3597 
    if (trans != (unsigned int)SWITCHDEV_TRANS_PREPARE) 
#line 3598 
                                                        hash_del(& found->entry); else ;
  }
  else 
    
#line 3599 
    if (! removing && found == (struct rocker_fdb_tbl_entry *)0) {
      
#line 3600 
      if (trans != (unsigned int)SWITCHDEV_TRANS_PREPARE) {
        u32 tmp_0;
        
#line 3601 
        tmp_0 = hash_32(fdb->key_crc32,16U);
        
#line 3601 
        ;
        
#line 3601 
        ;
        
#line 3601 
        hlist_add_head(& fdb->entry,& rocker->fdb_tbl[(unsigned long long)tmp_0]);
      }
      else ;
    }
    else ;
  
#line 3604 
  ldv_spin_unlock_irqrestore_105(& rocker->fdb_tbl_lock,lock_flags);
  
#line 3607 
  if ((found == (struct rocker_fdb_tbl_entry *)0) != ! removing) {
    
#line 3608 
    rocker_port_kfree(trans,(void const *)fdb);
    
#line 3609 
    if (found == (struct rocker_fdb_tbl_entry *)0 && (int)removing != 0) {
      
#line 3610 
      __retres = 0;
      
#line 3610 
      goto return_label;
    }
    else ;
    
#line 3612 
    flags |= 8;
  }
  else ;
  
#line 3615 
  tmp_1 = rocker_port_fdb_learn(rocker_port,trans,flags,addr,(unsigned short)((int)vlan_id));
  
#line 3615 
  __retres = tmp_1;
  return_label: 
#line 3615 
                return __retres;
}


#line 3618  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_fdb_flush(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags)
{
  int __retres;
  struct rocker_fdb_tbl_entry *found;
  unsigned long lock_flags;
  struct hlist_node *tmp;
  int bkt;
  struct rocker_fdb_tbl_entry *tmp_2;
  struct rocker_fdb_tbl_entry *tmp_5;
  
#line 3621 
  struct rocker *rocker = rocker_port->rocker;
  
#line 3626 
  int err = 0;
  
#line 3628 
  if ((unsigned int)rocker_port->stp_state + 4294967294U <= 1U) {
    
#line 3630 
    __retres = 0;
    
#line 3630 
    goto return_label;
  }
  else ;
  
#line 3632 
  flags |= 1;
  
#line 3634 
  ldv___ldv_spin_lock_106(& rocker->fdb_tbl_lock);
  
#line 3636 
  bkt = 0;
  
#line 3636 
  found = (struct rocker_fdb_tbl_entry *)0;
  
#line 3636 
  goto ldv_60625;
  ldv_60624: 
#line 3637 
  ;
  {
    struct rocker_fdb_tbl_entry *tmp_1;
    
#line 3636 
    struct hlist_node *____ptr = rocker->fdb_tbl[bkt].first;
    
#line 3636 
    if (____ptr != (struct hlist_node *)0) {
      struct rocker_fdb_tbl_entry *tmp_0;
      {
        
#line 3636 
        struct hlist_node const *__mptr = (struct hlist_node const *)____ptr;
        
#line 3636 
        tmp_0 = (struct rocker_fdb_tbl_entry *)__mptr;
      }
      
#line 3636 
      tmp_1 = tmp_0;
    }
    else 
#line 3636 
         tmp_1 = (struct rocker_fdb_tbl_entry *)0;
    
#line 3636 
    tmp_2 = tmp_1;
  }
  
#line 3636 
  found = tmp_2;
  
#line 3636 
  goto ldv_60622;
  ldv_60621: 
#line 3637 
  ;
  
#line 3637 
  if (found->key.pport != rocker_port->pport) 
#line 3638 
                                              goto ldv_60619; else ;
  
#line 3639 
  if (! found->learned) 
#line 3640 
                        goto ldv_60619; else ;
  
#line 3641 
  err = rocker_port_fdb_learn(rocker_port,trans,flags,(u8 const *)(& found->key.addr),(unsigned short)((int)found->key.vlan_id));
  
#line 3644 
  if (err != 0) 
#line 3645 
                goto err_out; else ;
  
#line 3646 
  if (trans != (unsigned int)SWITCHDEV_TRANS_PREPARE) 
#line 3647 
                                                      hash_del(& found->entry); else ;
  ldv_60619: 
#line 3648 
  ;
  {
    struct rocker_fdb_tbl_entry *tmp_4;
    
#line 3636 
    struct hlist_node *____ptr_0 = tmp;
    
#line 3636 
    if (____ptr_0 != (struct hlist_node *)0) {
      struct rocker_fdb_tbl_entry *tmp_3;
      {
        
#line 3636 
        struct hlist_node const *__mptr_0 = (struct hlist_node const *)____ptr_0;
        
#line 3636 
        tmp_3 = (struct rocker_fdb_tbl_entry *)__mptr_0;
      }
      
#line 3636 
      tmp_4 = tmp_3;
    }
    else 
#line 3636 
         tmp_4 = (struct rocker_fdb_tbl_entry *)0;
    
#line 3636 
    tmp_5 = tmp_4;
  }
  
#line 3636 
  found = tmp_5;
  ldv_60622: 
#line 3638 
  ;
  
#line 3636 
  if (found != (struct rocker_fdb_tbl_entry *)0) {
    
#line 3636 
    tmp = found->entry.next;
    
#line 3636 
    if (1 != 0) 
#line 3638 
                goto ldv_60621; else 
#line 3641 
                                     goto ldv_60623;
  }
  else 
#line 3641 
       goto ldv_60623;
  ldv_60623: 
#line 3642 
  ;
  
#line 3636 
  bkt += 1;
  ldv_60625: 
#line 3637 
  ;
  
#line 3636 
  if (found == (struct rocker_fdb_tbl_entry *)0 && (unsigned int)bkt <= 65535U) 
    
#line 3638 
    goto ldv_60624; else 
#line 3641 
                         goto ldv_60626;
  ldv_60626: 
#line 3642 
  ;
  err_out: 
#line 3650 
  ;
  
#line 3651 
  ldv_spin_unlock_irqrestore_107(& rocker->fdb_tbl_lock,lock_flags);
  
#line 3653 
  __retres = err;
  return_label: 
#line 3653 
                return __retres;
}


#line 3656  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_router_mac(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, __be16 vlan_id)
{
  int __retres;
  __be16 eth_type;
  int err;
  int tmp_0;
  
#line 3660 
  u32 in_pport_mask = 4294967295U;
  
#line 3662 
  u8 const *dst_mac_mask = (u8 const *)(& ff_mac);
  
#line 3663 
  __be16 vlan_id_mask = (unsigned short)65535U;
  
#line 3664 
  bool copy_to_cpu = (_Bool)0;
  
#line 3667 
  if (0 != 0) 
#line 3667 
              tmp_0 = (((int)vlan_id << 8) | ((int)vlan_id >> 8)) == 0;
  else {
    __u16 tmp;
    
#line 3667 
    tmp = __fswab16((unsigned short)((int)vlan_id));
    
#line 3667 
    tmp_0 = (unsigned int)tmp == 0U;
  }
  
#line 3667 
  if (tmp_0) 
#line 3668 
             vlan_id = rocker_port->internal_vlan_id; else ;
  
#line 3670 
  eth_type = (unsigned short)8U;
  
#line 3671 
  err = rocker_flow_tbl_term_mac(rocker_port,trans,rocker_port->pport,in_pport_mask,(unsigned short)((int)eth_type),(u8 const *)(rocker_port->dev)->dev_addr,dst_mac_mask,(unsigned short)((int)vlan_id),(unsigned short)((int)vlan_id_mask),(_Bool)((bool)((int)copy_to_cpu) != 0),flags);
  
#line 3676 
  if (err != 0) {
    
#line 3677 
    __retres = err;
    
#line 3677 
    goto return_label;
  }
  else ;
  
#line 3679 
  eth_type = (unsigned short)56710U;
  
#line 3680 
  err = rocker_flow_tbl_term_mac(rocker_port,trans,rocker_port->pport,in_pport_mask,(unsigned short)((int)eth_type),(u8 const *)(rocker_port->dev)->dev_addr,dst_mac_mask,(unsigned short)((int)vlan_id),(unsigned short)((int)vlan_id_mask),(_Bool)((bool)((int)copy_to_cpu) != 0),flags);
  
#line 3686 
  __retres = err;
  return_label: 
#line 3686 
                return __retres;
}


#line 3689  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_fwding(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags)
{
  int __retres;
  bool pop_vlan;
  u32 out_pport;
  __be16 vlan_id;
  u16 vid;
  int err;
  int tmp_1;
  
#line 3705 
  if ((unsigned int)rocker_port->stp_state + 4294967294U > 1U) 
#line 3707 
                                                               flags |= 1; else ;
  
#line 3709 
  out_pport = rocker_port->pport;
  
#line 3710 
  vid = (unsigned short)1U;
  
#line 3710 
  goto ldv_60651;
  ldv_60650: 
#line 3711 
  ;
  
#line 3711 
  if (0 != 0) {
    int tmp;
    
#line 3711 
    tmp = constant_test_bit((long)vid,(unsigned long const volatile *)(& rocker_port->vlan_bitmap));
    
#line 3711 
    tmp_1 = tmp == 0;
  }
  else {
    int tmp_0;
    
#line 3711 
    tmp_0 = variable_test_bit((long)vid,(unsigned long const volatile *)(& rocker_port->vlan_bitmap));
    
#line 3711 
    tmp_1 = tmp_0 == 0;
  }
  
#line 3711 
  if (tmp_1) 
#line 3712 
             goto ldv_60649; else ;
  
#line 3713 
  if (0 != 0) 
#line 3713 
              vlan_id = (unsigned short)(((int)vid << 8) | ((int)vid >> 8)); else 
                                                                    
#line 3713 
                                                                    vlan_id = __fswab16((unsigned short)((int)vid));
  
#line 3714 
  pop_vlan = rocker_vlan_id_is_internal((unsigned short)((int)vlan_id));
  
#line 3715 
  err = rocker_group_l2_interface(rocker_port,trans,flags,(unsigned short)((int)vlan_id),out_pport,(int)pop_vlan);
  
#line 3717 
  if (err != 0) {
    
#line 3718 
    netdev_err((struct net_device const *)rocker_port->dev,"Error (%d) port VLAN l2 group for pport %d\n",err,out_pport);
    
#line 3721 
    __retres = err;
    
#line 3721 
    goto return_label;
  }
  else ;
  ldv_60649: 
#line 3723 
  ;
  
#line 3710 
  vid = (u16)((int)vid + 1);
  ldv_60651: 
#line 3711 
  ;
  
#line 3710 
  if ((unsigned int)vid <= 4095U) 
#line 3712 
                                  goto ldv_60650; else 
#line 3715 
                                                       goto ldv_60652;
  ldv_60652: 
#line 3716 
  ;
  
#line 3725 
  __retres = 0;
  return_label: 
#line 3725 
                return __retres;
}


#line 3728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_stp_update(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags, u8 state)
{
  int __retres;
  bool prev_ctrls[5U];
  u8 prev_state;
  int err;
  int i;
  
#line 3732 
  bool want[5U] = {(_Bool)0};
  
#line 3738 
  if (trans == (unsigned int)SWITCHDEV_TRANS_PREPARE) {
    
#line 3739 
    memcpy((void *)(& prev_ctrls),(void const *)(& rocker_port->ctrls),5UL);
    
#line 3740 
    prev_state = (unsigned char)rocker_port->stp_state;
  }
  else ;
  
#line 3743 
  if (rocker_port->stp_state == (int)state) {
    
#line 3744 
    __retres = 0;
    
#line 3744 
    goto return_label;
  }
  else ;
  
#line 3746 
  rocker_port->stp_state = (int)state;
  
#line 3748 
  switch ((int)state) {
    bool tmp;
    case 0: 
#line 3749 
    ;
    
#line 3751 
    goto ldv_60665;
    case 1: 
#line 3752 
    ;
    case 4: 
#line 3753 
    ;
    
#line 3754 
    want[0] = (_Bool)1;
    
#line 3755 
    goto ldv_60665;
    case 2: 
#line 3756 
    ;
    case 3: 
#line 3757 
    ;
    
#line 3758 
    want[0] = (_Bool)1;
    
#line 3759 
    want[2] = (_Bool)1;
    
#line 3760 
    want[3] = (_Bool)1;
    
#line 3761 
    tmp = rocker_port_is_bridged((struct rocker_port const *)rocker_port);
    
#line 3761 
    if ((int)tmp != 0) 
#line 3762 
                       want[4] = (_Bool)1; else 
#line 3764 
                                                want[1] = (_Bool)1;
    
#line 3765 
    goto ldv_60665;
  }
  ldv_60665: 
#line 3768 
  ;
  
#line 3768 
  i = 0;
  
#line 3768 
  goto ldv_60673;
  ldv_60672: 
#line 3769 
  ;
  
#line 3769 
  if ((int)want[i] != (int)rocker_port->ctrls[i]) {
    
#line 3770 
    int ctrl_flags = ((int)want[i] == 0) | flags;
    
#line 3772 
    err = rocker_port_ctrl(rocker_port,trans,ctrl_flags,(struct rocker_ctrl const *)(& rocker_ctrls[i]));
    
#line 3774 
    if (err != 0) 
#line 3775 
                  goto err_out; else ;
    
#line 3776 
    rocker_port->ctrls[i] = want[i];
  }
  else ;
  
#line 3768 
  i += 1;
  ldv_60673: 
#line 3769 
  ;
  
#line 3768 
  if (i <= 4) 
#line 3770 
              goto ldv_60672; else 
#line 3773 
                                   goto ldv_60674;
  ldv_60674: 
#line 3774 
  ;
  
#line 3780 
  err = rocker_port_fdb_flush(rocker_port,trans,flags);
  
#line 3781 
  if (err != 0) 
#line 3782 
                goto err_out; else ;
  
#line 3784 
  err = rocker_port_fwding(rocker_port,trans,flags);
  err_out: 
#line 3786 
  ;
  
#line 3787 
  if (trans == (unsigned int)SWITCHDEV_TRANS_PREPARE) {
    
#line 3788 
    memcpy((void *)(& rocker_port->ctrls),(void const *)(& prev_ctrls),5UL);
    
#line 3789 
    rocker_port->stp_state = (int)prev_state;
  }
  else ;
  
#line 3792 
  __retres = err;
  return_label: 
#line 3792 
                return __retres;
}


#line 3795  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_fwd_enable(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags)
{
  int __retres;
  bool tmp;
  int tmp_0;
  
#line 3798 
  tmp = rocker_port_is_bridged((struct rocker_port const *)rocker_port);
  
#line 3798 
  if ((int)tmp != 0) {
    
#line 3800 
    __retres = 0;
    
#line 3800 
    goto return_label;
  }
  else ;
  
#line 3803 
  tmp_0 = rocker_port_stp_update(rocker_port,trans,flags,(unsigned char)3);
  
#line 3803 
  __retres = tmp_0;
  return_label: 
#line 3803 
                return __retres;
}


#line 3807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_fwd_disable(struct rocker_port *rocker_port, enum switchdev_trans trans, int flags)
{
  int __retres;
  bool tmp;
  int tmp_0;
  
#line 3810 
  tmp = rocker_port_is_bridged((struct rocker_port const *)rocker_port);
  
#line 3810 
  if ((int)tmp != 0) {
    
#line 3812 
    __retres = 0;
    
#line 3812 
    goto return_label;
  }
  else ;
  
#line 3815 
  tmp_0 = rocker_port_stp_update(rocker_port,trans,flags,(unsigned char)0);
  
#line 3815 
  __retres = tmp_0;
  return_label: 
#line 3815 
                return __retres;
}


#line 3820  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static struct rocker_internal_vlan_tbl_entry *rocker_internal_vlan_tbl_find(struct rocker const *rocker, int ifindex)
{
  struct rocker_internal_vlan_tbl_entry *__retres;
  struct rocker_internal_vlan_tbl_entry *found;
  struct rocker_internal_vlan_tbl_entry *tmp_2;
  struct rocker_internal_vlan_tbl_entry *tmp_5;
  {
    u32 tmp;
    struct rocker_internal_vlan_tbl_entry *tmp_1;
    
#line 3824 
    tmp = hash_32((unsigned int)ifindex,8U);
    
#line 3824 
    struct hlist_node * const ____ptr = rocker->internal_vlan_tbl[(unsigned long long)tmp].first;
    
#line 3824 
    if (____ptr != (struct hlist_node *)0) {
      struct rocker_internal_vlan_tbl_entry *tmp_0;
      {
        
#line 3824 
        struct hlist_node const *__mptr = (struct hlist_node const *)____ptr;
        
#line 3824 
        tmp_0 = (struct rocker_internal_vlan_tbl_entry *)__mptr;
      }
      
#line 3824 
      tmp_1 = tmp_0;
    }
    else 
#line 3824 
         tmp_1 = (struct rocker_internal_vlan_tbl_entry *)0;
    
#line 3824 
    tmp_2 = tmp_1;
  }
  
#line 3824 
  found = tmp_2;
  
#line 3824 
  goto ldv_61527;
  ldv_61526: 
#line 3825 
  ;
  
#line 3826 
  if (found->ifindex == ifindex) {
    
#line 3827 
    __retres = found;
    
#line 3827 
    goto return_label;
  }
  else ;
  {
    struct rocker_internal_vlan_tbl_entry *tmp_4;
    
#line 3824 
    struct hlist_node *____ptr_0 = found->entry.next;
    
#line 3824 
    if (____ptr_0 != (struct hlist_node *)0) {
      struct rocker_internal_vlan_tbl_entry *tmp_3;
      {
        
#line 3824 
        struct hlist_node const *__mptr_0 = (struct hlist_node const *)____ptr_0;
        
#line 3824 
        tmp_3 = (struct rocker_internal_vlan_tbl_entry *)__mptr_0;
      }
      
#line 3824 
      tmp_4 = tmp_3;
    }
    else 
#line 3824 
         tmp_4 = (struct rocker_internal_vlan_tbl_entry *)0;
    
#line 3824 
    tmp_5 = tmp_4;
  }
  
#line 3824 
  found = tmp_5;
  ldv_61527: 
#line 3826 
  ;
  
#line 3824 
  if (found != (struct rocker_internal_vlan_tbl_entry *)0) 
#line 3826 
                                                           goto ldv_61526; else 
                                                                    
#line 3829 
                                                                    goto ldv_61528;
  ldv_61528: 
#line 3830 
  ;
  
#line 3830 
  __retres = (struct rocker_internal_vlan_tbl_entry *)0;
  return_label: 
#line 3830 
                return __retres;
}


#line 3833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static __be16 rocker_port_internal_vlan_id_get(struct rocker_port *rocker_port, int ifindex)
{
  __be16 __retres;
  struct rocker_internal_vlan_tbl_entry *entry;
  struct rocker_internal_vlan_tbl_entry *found;
  unsigned long lock_flags;
  int i;
  u32 tmp_0;
  int tmp_1;
  
#line 3836 
  struct rocker *rocker = rocker_port->rocker;
  
#line 3842 
  entry = (struct rocker_internal_vlan_tbl_entry *)kzalloc(32UL,208U);
  
#line 3843 
  if (entry == (struct rocker_internal_vlan_tbl_entry *)0) {
    
#line 3844 
    __retres = (unsigned short)0U;
    
#line 3844 
    goto return_label;
  }
  else ;
  
#line 3846 
  entry->ifindex = ifindex;
  
#line 3848 
  ldv___ldv_spin_lock_108(& rocker->internal_vlan_tbl_lock);
  
#line 3850 
  found = rocker_internal_vlan_tbl_find((struct rocker const *)rocker,ifindex);
  
#line 3851 
  if (found != (struct rocker_internal_vlan_tbl_entry *)0) {
    
#line 3852 
    kfree((void const *)entry);
    
#line 3853 
    goto found;
  }
  else ;
  
#line 3856 
  found = entry;
  
#line 3857 
  tmp_0 = hash_32((unsigned int)found->ifindex,8U);
  
#line 3857 
  ;
  
#line 3857 
  ;
  
#line 3857 
  hlist_add_head(& found->entry,& rocker->internal_vlan_tbl[(unsigned long long)tmp_0]);
  
#line 3859 
  i = 0;
  
#line 3859 
  goto ldv_61955;
  ldv_61954: 
#line 3860 
  ;
  
#line 3860 
  tmp_1 = test_and_set_bit((long)i,(unsigned long volatile *)(& rocker->internal_vlan_bitmap));
  
#line 3860 
  if (tmp_1 != 0) 
#line 3861 
                  goto ldv_61953; else ;
  
#line 3862 
  if (0 != 0) 
#line 3862 
              found->vlan_id = (unsigned short)((unsigned int)((int)((unsigned int)((unsigned short)i) + 3840U) << 8) | (((unsigned int)((unsigned short)i) + 3840U) >> 8)); else 
                                                                    
#line 3862 
                                                                    found->vlan_id = __fswab16((unsigned short)((int)((unsigned int)((unsigned short)i) + 3840U)));
  
#line 3863 
  goto found;
  ldv_61953: 
#line 3864 
  ;
  
#line 3859 
  i += 1;
  ldv_61955: 
#line 3860 
  ;
  
#line 3859 
  if (i <= 254) 
#line 3861 
                goto ldv_61954; else 
#line 3864 
                                     goto ldv_61956;
  ldv_61956: 
#line 3865 
  ;
  
#line 3866 
  netdev_err((struct net_device const *)rocker_port->dev,"Out of internal VLAN IDs\n");
  found: 
#line 3868 
  ;
  
#line 3869 
  found->ref_count += 1U;
  
#line 3870 
  ldv_spin_unlock_irqrestore_109(& rocker->internal_vlan_tbl_lock,lock_flags);
  
#line 3872 
  __retres = found->vlan_id;
  return_label: 
#line 3872 
                return __retres;
}


#line 3876  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_port_internal_vlan_id_put(struct rocker_port const *rocker_port, int ifindex)
{
  struct rocker_internal_vlan_tbl_entry *found;
  unsigned long lock_flags;
  unsigned long bit;
  
#line 3879 
  struct rocker *rocker = rocker_port->rocker;
  
#line 3884 
  ldv___ldv_spin_lock_110(& rocker->internal_vlan_tbl_lock);
  
#line 3886 
  found = rocker_internal_vlan_tbl_find((struct rocker const *)rocker,ifindex);
  
#line 3887 
  if (found == (struct rocker_internal_vlan_tbl_entry *)0) {
    
#line 3888 
    netdev_err((struct net_device const *)rocker_port->dev,"ifindex (%d) not found in internal VLAN tbl\n",ifindex);
    
#line 3891 
    goto not_found;
  }
  else ;
  
#line 3894 
  found->ref_count -= 1U;
  
#line 3894 
  if (found->ref_count == 0U) {
    int tmp_0;
    
#line 3895 
    if (0 != 0) 
#line 3895 
                tmp_0 = (int)((unsigned short)(((int)found->vlan_id << 8) | ((int)found->vlan_id >> 8))) + -3840;
    else {
      __u16 tmp;
      
#line 3895 
      tmp = __fswab16((unsigned short)((int)found->vlan_id));
      
#line 3895 
      tmp_0 = (int)tmp + -3840;
    }
    
#line 3895 
    bit = (unsigned long)tmp_0;
    
#line 3896 
    set_bit((long)bit,(unsigned long volatile *)(& rocker->internal_vlan_bitmap));
    
#line 3897 
    hash_del(& found->entry);
    
#line 3898 
    kfree((void const *)found);
  }
  else ;
  not_found: 
#line 3901 
  ;
  
#line 3902 
  ldv_spin_unlock_irqrestore_111(& rocker->internal_vlan_tbl_lock,lock_flags);
  
#line 3903 
  return;
}


#line 3905  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_fib_ipv4(struct rocker_port *rocker_port, enum switchdev_trans trans, __be32 dst, int dst_len, struct fib_info const *fi, u32 tb_id, int flags)
{
  int __retres;
  struct fib_nh const *nh;
  u32 group_id;
  bool nh_on_port;
  bool has_gw;
  u32 index;
  int err;
  
#line 3911 
  __be16 eth_type = (unsigned short)8U;
  
#line 3912 
  __be32 dst_mask = inet_make_mask(dst_len);
  
#line 3913 
  __be16 internal_vlan_id = rocker_port->internal_vlan_id;
  
#line 3914 
  u32 priority = fi->fib_priority;
  
#line 3915 
  enum rocker_of_dpa_table_id goto_tbl = ROCKER_OF_DPA_TABLE_ID_ACL_POLICY;
  
#line 3925 
  nh = (struct fib_nh const *)(& fi->fib_nh);
  
#line 3926 
  nh_on_port = (_Bool)(fi->fib_nh[0].nh_dev == rocker_port->dev);
  
#line 3927 
  has_gw = (_Bool)(nh->nh_gw != 0U);
  
#line 3929 
  if ((int)has_gw != 0 && (int)nh_on_port != 0) {
    
#line 3930 
    err = rocker_port_ipv4_nh(rocker_port,trans,flags,nh->nh_gw,& index);
    
#line 3932 
    if (err != 0) {
      
#line 3933 
      __retres = err;
      
#line 3933 
      goto return_label;
    }
    else ;
    
#line 3935 
    group_id = (index & 268435455U) | 536870912U;
  }
  else 
    
#line 3938 
    if (0 != 0) 
#line 3938 
                group_id = (unsigned int)((int)((unsigned short)(((int)internal_vlan_id << 8) | ((int)internal_vlan_id >> 8))) << 16) & 268369920U;
    else {
      __u16 tmp_0;
      
#line 3938 
      tmp_0 = __fswab16((unsigned short)((int)internal_vlan_id));
      
#line 3938 
      group_id = (unsigned int)((int)tmp_0 << 16) & 268369920U;
    }
  
#line 3941 
  err = rocker_flow_tbl_ucast4_routing(rocker_port,trans,(unsigned short)((int)eth_type),dst,dst_mask,priority,goto_tbl,group_id,flags);
  
#line 3944 
  if (err != 0) 
#line 3945 
                netdev_err((struct net_device const *)rocker_port->dev,"Error (%d) IPv4 route %pI4\n",err,& dst); else ;
  
#line 3948 
  __retres = err;
  return_label: 
#line 3948 
                return __retres;
}


#line 3955  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_open(struct net_device *dev)
{
  int __retres;
  int err;
  u32 tmp_0;
  u32 tmp_1;
  u32 tmp_2;
  u32 tmp_3;
  
#line 3957 
  struct rocker_port *rocker_port = netdev_priv((struct net_device const *)dev);
  
#line 3960 
  err = rocker_port_dma_rings_init(rocker_port);
  
#line 3961 
  if (err != 0) {
    
#line 3962 
    __retres = err;
    
#line 3962 
    goto return_label;
  }
  else ;
  
#line 3964 
  ;
  
#line 3964 
  tmp_0 = rocker_msix_tx_vector((struct rocker_port const *)rocker_port);
  
#line 3964 
  err = ldv_request_irq_112(tmp_0,& rocker_tx_irq_handler,0UL,(char const *)(& rocker_driver_name),(void *)rocker_port);
  
#line 3967 
  if (err != 0) {
    
#line 3968 
    netdev_err((struct net_device const *)rocker_port->dev,"cannot assign tx irq\n");
    
#line 3969 
    goto err_request_tx_irq;
  }
  else ;
  
#line 3972 
  ;
  
#line 3972 
  tmp_1 = rocker_msix_rx_vector((struct rocker_port const *)rocker_port);
  
#line 3972 
  err = ldv_request_irq_113(tmp_1,& rocker_rx_irq_handler,0UL,(char const *)(& rocker_driver_name),(void *)rocker_port);
  
#line 3975 
  if (err != 0) {
    
#line 3976 
    netdev_err((struct net_device const *)rocker_port->dev,"cannot assign rx irq\n");
    
#line 3977 
    goto err_request_rx_irq;
  }
  else ;
  
#line 3980 
  err = rocker_port_fwd_enable(rocker_port,(enum switchdev_trans)SWITCHDEV_TRANS_NONE,0);
  
#line 3981 
  if (err != 0) 
#line 3982 
                goto err_fwd_enable; else ;
  
#line 3984 
  napi_enable(& rocker_port->napi_tx);
  
#line 3985 
  napi_enable(& rocker_port->napi_rx);
  
#line 3986 
  rocker_port_set_enable((struct rocker_port const *)rocker_port,(_Bool)1);
  
#line 3987 
  netif_start_queue(dev);
  
#line 3988 
  __retres = 0;
  
#line 3988 
  goto return_label;
  err_fwd_enable: 
#line 3990 
  ;
  
#line 3991 
  ;
  
#line 3991 
  tmp_2 = rocker_msix_rx_vector((struct rocker_port const *)rocker_port);
  
#line 3991 
  ldv_free_irq_114(tmp_2,(void *)rocker_port);
  err_request_rx_irq: 
#line 3992 
  ;
  
#line 3993 
  ;
  
#line 3993 
  tmp_3 = rocker_msix_tx_vector((struct rocker_port const *)rocker_port);
  
#line 3993 
  ldv_free_irq_115(tmp_3,(void *)rocker_port);
  err_request_tx_irq: 
#line 3994 
  ;
  
#line 3995 
  rocker_port_dma_rings_fini(rocker_port);
  
#line 3996 
  __retres = err;
  return_label: 
#line 3996 
                return __retres;
}


#line 3999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_stop(struct net_device *dev)
{
  int __retres;
  u32 tmp_0;
  u32 tmp_1;
  
#line 4001 
  struct rocker_port *rocker_port = netdev_priv((struct net_device const *)dev);
  
#line 4003 
  netif_start_queue(dev);
  
#line 4004 
  rocker_port_set_enable((struct rocker_port const *)rocker_port,(_Bool)0);
  
#line 4005 
  napi_disable(& rocker_port->napi_rx);
  
#line 4006 
  napi_disable(& rocker_port->napi_tx);
  
#line 4007 
  rocker_port_fwd_disable(rocker_port,(enum switchdev_trans)SWITCHDEV_TRANS_NONE,2);
  
#line 4009 
  ;
  
#line 4009 
  tmp_0 = rocker_msix_rx_vector((struct rocker_port const *)rocker_port);
  
#line 4009 
  ldv_free_irq_116(tmp_0,(void *)rocker_port);
  
#line 4010 
  ;
  
#line 4010 
  tmp_1 = rocker_msix_tx_vector((struct rocker_port const *)rocker_port);
  
#line 4010 
  ldv_free_irq_117(tmp_1,(void *)rocker_port);
  
#line 4011 
  rocker_port_dma_rings_fini(rocker_port);
  
#line 4013 
  __retres = 0;
  
#line 4013 
  return __retres;
}


#line 4016  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_tx_desc_frags_unmap(struct rocker_port const *rocker_port, struct rocker_desc_info const *desc_info)
{
  struct rocker_tlv const *attrs[6U];
  struct rocker_tlv *attr;
  int rem;
  int tmp_2;
  
#line 4019 
  struct rocker const *rocker = (struct rocker const *)rocker_port->rocker;
  
#line 4020 
  struct pci_dev *pdev = rocker->pdev;
  
#line 4025 
  rocker_tlv_parse_desc((struct rocker_tlv const **)(& attrs),5,desc_info);
  
#line 4026 
  if (attrs[5] == (struct rocker_tlv const *)0) 
#line 4027 
                                                goto return_label; else ;
  
#line 4028 
  attr = (struct rocker_tlv *)rocker_tlv_data(attrs[5]);
  
#line 4028 
  rem = rocker_tlv_len(attrs[5]);
  
#line 4028 
  goto ldv_62012;
  ldv_62011: 
#line 4029 
  ;
  {
    struct rocker_tlv const *frag_attrs[3U];
    dma_addr_t dma_handle;
    size_t len;
    int tmp_0;
    u16 tmp_1;
    
#line 4033 
    tmp_0 = rocker_tlv_type((struct rocker_tlv const *)attr);
    
#line 4033 
    if (tmp_0 != 1) 
#line 4034 
                    goto ldv_62010; else ;
    
#line 4035 
    rocker_tlv_parse_nested((struct rocker_tlv const **)(& frag_attrs),2,(struct rocker_tlv const *)attr);
    
#line 4037 
    if (frag_attrs[1] == (struct rocker_tlv const *)0 || frag_attrs[2] == (struct rocker_tlv const *)0) 
      
#line 4039 
      goto ldv_62010; else ;
    
#line 4040 
    dma_handle = rocker_tlv_get_u64(frag_attrs[1]);
    
#line 4041 
    tmp_1 = rocker_tlv_get_u16(frag_attrs[2]);
    
#line 4041 
    len = (unsigned long)tmp_1;
    
#line 4042 
    pci_unmap_single(pdev,dma_handle,len,1);
  }
  ldv_62010: 
#line 4044 
  ;
  
#line 4028 
  attr = rocker_tlv_next((struct rocker_tlv const *)attr,& rem);
  ldv_62012: 
#line 4029 
  ;
  
#line 4028 
  tmp_2 = rocker_tlv_ok((struct rocker_tlv const *)attr,rem);
  
#line 4028 
  if (tmp_2 != 0) 
#line 4030 
                  goto ldv_62011; else 
#line 4033 
                                       goto ldv_62013;
  ldv_62013: 
#line 4034 
  ;
  return_label: 
#line 4035 
                return;
}


#line 4046  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_tx_desc_frag_map_put(struct rocker_port const *rocker_port, struct rocker_desc_info *desc_info, char *buf, size_t buf_len)
{
  int __retres;
  dma_addr_t dma_handle;
  struct rocker_tlv *frag;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  
#line 4050 
  struct rocker const *rocker = (struct rocker const *)rocker_port->rocker;
  
#line 4051 
  struct pci_dev *pdev = rocker->pdev;
  
#line 4055 
  dma_handle = pci_map_single(pdev,(void *)buf,buf_len,1);
  
#line 4056 
  tmp_0 = pci_dma_mapping_error(pdev,dma_handle);
  
#line 4056 
  if ((long)(tmp_0 != 0) != 0L) {
    int tmp;
    
#line 4057 
    tmp = net_ratelimit();
    
#line 4057 
    if (tmp != 0) 
#line 4058 
                  netdev_err((struct net_device const *)rocker_port->dev,"failed to dma map tx frag\n"); else ;
    
#line 4059 
    __retres = -5;
    
#line 4059 
    goto return_label;
  }
  else ;
  
#line 4061 
  frag = rocker_tlv_nest_start(desc_info,1);
  
#line 4062 
  if (frag == (struct rocker_tlv *)0) 
#line 4063 
                                      goto unmap_frag; else ;
  
#line 4064 
  tmp_1 = rocker_tlv_put_u64(desc_info,1,dma_handle);
  
#line 4064 
  if (tmp_1 != 0) 
#line 4066 
                  goto nest_cancel; else ;
  
#line 4067 
  tmp_2 = rocker_tlv_put_u16(desc_info,2,(unsigned short)((int)((unsigned short)buf_len)));
  
#line 4067 
  if (tmp_2 != 0) 
#line 4069 
                  goto nest_cancel; else ;
  
#line 4070 
  rocker_tlv_nest_end(desc_info,frag);
  
#line 4071 
  __retres = 0;
  
#line 4071 
  goto return_label;
  nest_cancel: 
#line 4073 
  ;
  
#line 4074 
  rocker_tlv_nest_cancel(desc_info,(struct rocker_tlv const *)frag);
  unmap_frag: 
#line 4075 
  ;
  
#line 4076 
  pci_unmap_single(pdev,dma_handle,buf_len,1);
  
#line 4077 
  __retres = -90;
  return_label: 
#line 4077 
                return __retres;
}


#line 4080  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static netdev_tx_t rocker_port_xmit(struct sk_buff *skb, struct net_device *dev)
{
  netdev_tx_t __retres;
  struct rocker_desc_info *desc_info;
  struct rocker_tlv *frags;
  int i;
  int err;
  unsigned int tmp_1;
  unsigned char *tmp_2;
  unsigned char *tmp_6;
  
#line 4082 
  struct rocker_port *rocker_port = netdev_priv((struct net_device const *)dev);
  
#line 4083 
  struct rocker *rocker = rocker_port->rocker;
  
#line 4089 
  desc_info = rocker_desc_head_get((struct rocker_dma_ring_info const *)(& rocker_port->tx_ring));
  
#line 4090 
  if ((long)(desc_info == (struct rocker_desc_info *)0) != 0L) {
    int tmp_0;
    
#line 4091 
    tmp_0 = net_ratelimit();
    
#line 4091 
    if (tmp_0 != 0) 
#line 4092 
                    netdev_err((struct net_device const *)dev,"tx ring full when queue awake\n"); else ;
    
#line 4093 
    __retres = NETDEV_TX_BUSY;
    
#line 4093 
    goto return_label;
  }
  else ;
  
#line 4096 
  rocker_desc_cookie_ptr_set((struct rocker_desc_info const *)desc_info,(void *)skb);
  
#line 4098 
  frags = rocker_tlv_nest_start(desc_info,5);
  
#line 4099 
  if (frags == (struct rocker_tlv *)0) 
#line 4100 
                                       goto out; else ;
  
#line 4102 
  tmp_1 = skb_headlen((struct sk_buff const *)skb);
  
#line 4101 
  ;
  
#line 4101 
  ;
  
#line 4101 
  ;
  
#line 4101 
  err = rocker_tx_desc_frag_map_put((struct rocker_port const *)rocker_port,desc_info,(char *)skb->data,(unsigned long)tmp_1);
  
#line 4103 
  if (err != 0) 
#line 4104 
                goto nest_cancel; else ;
  
#line 4105 
  tmp_2 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 4105 
  ;
  
#line 4105 
  if ((unsigned int)((struct skb_shared_info *)tmp_2)->nr_frags > 16U) 
    
#line 4106 
    goto nest_cancel; else ;
  
#line 4108 
  i = 0;
  
#line 4108 
  goto ldv_62041;
  ldv_62040: 
#line 4109 
  ;
  {
    unsigned char *tmp_3;
    unsigned int tmp_4;
    void *tmp_5;
    
#line 4109 
    tmp_3 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 4109 
    skb_frag_t const *frag = (skb_frag_t const *)(& ((struct skb_shared_info *)tmp_3)->frags[i]);
    
#line 4113 
    tmp_4 = skb_frag_size(frag);
    
#line 4112 
    tmp_5 = skb_frag_address(frag);
    
#line 4111 
    ;
    
#line 4111 
    ;
    
#line 4111 
    err = rocker_tx_desc_frag_map_put((struct rocker_port const *)rocker_port,desc_info,(char *)tmp_5,(unsigned long)tmp_4);
    
#line 4114 
    if (err != 0) 
#line 4115 
                  goto unmap_frags; else ;
  }
  
#line 4108 
  i += 1;
  ldv_62041: 
#line 4109 
  ;
  
#line 4108 
  tmp_6 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 4108 
  ;
  
#line 4108 
  if ((int)((struct skb_shared_info *)tmp_6)->nr_frags > i) 
#line 4110 
                                                            goto ldv_62040; else 
                                                                    
#line 4113 
                                                                    goto ldv_62042;
  ldv_62042: 
#line 4114 
  ;
  
#line 4117 
  rocker_tlv_nest_end(desc_info,frags);
  
#line 4119 
  rocker_desc_gen_clear((struct rocker_desc_info const *)desc_info);
  
#line 4120 
  rocker_desc_head_set((struct rocker const *)rocker,& rocker_port->tx_ring,(struct rocker_desc_info const *)desc_info);
  
#line 4122 
  desc_info = rocker_desc_head_get((struct rocker_dma_ring_info const *)(& rocker_port->tx_ring));
  
#line 4123 
  if (desc_info == (struct rocker_desc_info *)0) 
#line 4124 
                                                 netif_start_queue(dev); else ;
  
#line 4126 
  __retres = NETDEV_TX_OK;
  
#line 4126 
  goto return_label;
  unmap_frags: 
#line 4128 
  ;
  
#line 4129 
  rocker_tx_desc_frags_unmap((struct rocker_port const *)rocker_port,(struct rocker_desc_info const *)desc_info);
  nest_cancel: 
#line 4130 
  ;
  
#line 4131 
  rocker_tlv_nest_cancel(desc_info,(struct rocker_tlv const *)frags);
  out: 
#line 4132 
  ;
  
#line 4133 
  consume_skb(skb);
  
#line 4134 
  dev->stats.tx_dropped += 1UL;
  
#line 4136 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 4136 
                return __retres;
}


#line 4139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_set_mac_address(struct net_device *dev, void *p)
{
  int __retres;
  int err;
  int tmp_1;
  bool tmp_0;
  
#line 4141 
  struct sockaddr *addr = (struct sockaddr *)p;
  
#line 4142 
  struct rocker_port *rocker_port = netdev_priv((struct net_device const *)dev);
  
#line 4145 
  tmp_0 = is_valid_ether_addr((u8 const *)(& addr->sa_data));
  
#line 4145 
  if (tmp_0) 
#line 4145 
             tmp_1 = 0; else 
#line 4145 
                             tmp_1 = 1;
  
#line 4145 
  if (tmp_1) {
    
#line 4146 
    __retres = -99;
    
#line 4146 
    goto return_label;
  }
  else ;
  
#line 4148 
  err = rocker_cmd_set_port_settings_macaddr(rocker_port,(unsigned char *)(& addr->sa_data));
  
#line 4149 
  if (err != 0) {
    
#line 4150 
    __retres = err;
    
#line 4150 
    goto return_label;
  }
  else ;
  
#line 4151 
  memcpy((void *)dev->dev_addr,(void const *)(& addr->sa_data),(unsigned long)dev->addr_len);
  
#line 4152 
  __retres = 0;
  return_label: 
#line 4152 
                return __retres;
}


#line 4155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_get_phys_port_name(struct net_device *dev, char *buf, size_t len)
{
  int err;
  int tmp_0;
  
#line 4158 
  struct rocker_port *rocker_port = netdev_priv((struct net_device const *)dev);
  
#line 4159 
  struct port_name name = {.buf = buf, .len = len};
  
#line 4162 
  err = rocker_cmd_exec(rocker_port,(enum switchdev_trans)SWITCHDEV_TRANS_NONE,0,& rocker_cmd_get_port_settings_prep,(void *)0,& rocker_cmd_get_port_settings_phys_name_proc,(void *)(& name));
  
#line 4167 
  if (err != 0) 
#line 4167 
                tmp_0 = -95; else 
#line 4167 
                                  tmp_0 = 0;
  
#line 4167 
  return tmp_0;
}


#line 4170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static struct net_device_ops const rocker_port_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & rocker_port_open, .ndo_stop = & rocker_port_stop, .ndo_start_xmit = & rocker_port_xmit, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = (void (*)(struct net_device *))0, .ndo_set_mac_address = & rocker_port_set_mac_address, .ndo_validate_addr = (int (*)(struct net_device *))0, .ndo_do_ioctl = (int (*)(struct net_device *, struct ifreq *, int ))0, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = (int (*)(struct net_device *, int ))0, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = (void (*)(struct net_device *))0, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = (struct net_device_stats *(*)(struct net_device *))0, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = (void (*)(struct net_device *))0, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = (int (*)(struct net_device *, netdev_features_t ))0, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = & switchdev_port_fdb_add, .ndo_fdb_del = & switchdev_port_fdb_del, .ndo_fdb_dump = & switchdev_port_fdb_dump, .ndo_bridge_setlink = & switchdev_port_bridge_setlink, .ndo_bridge_getlink = & switchdev_port_bridge_getlink, .ndo_bridge_dellink = & switchdev_port_bridge_dellink, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = & rocker_port_get_phys_port_name, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 4188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_attr_get(struct net_device *dev, struct switchdev_attr *attr)
{
  int __retres;
  
#line 4191 
  struct rocker_port const *rocker_port = netdev_priv((struct net_device const *)dev);
  
#line 4192 
  struct rocker const *rocker = (struct rocker const *)rocker_port->rocker;
  
#line 4194 
  switch ((unsigned int)attr->id) {
    case (unsigned int)1: 
#line 4195 
    ;
    
#line 4196 
    attr->u.ppid.id_len = (unsigned char)8U;
    
#line 4197 
    memcpy((void *)(& attr->u.ppid.id),(void const *)(& rocker->hw.id),(unsigned long)attr->u.ppid.id_len);
    
#line 4198 
    goto ldv_62066;
    case (unsigned int)3: 
#line 4199 
    ;
    
#line 4200 
    attr->u.brport_flags = (unsigned long)rocker_port->brport_flags;
    
#line 4201 
    goto ldv_62066;
    default: 
#line 4202 
    ;
    
#line 4203 
    __retres = -95;
    
#line 4203 
    goto return_label;
  }
  ldv_62066: 
#line 4206 
  ;
  
#line 4206 
  __retres = 0;
  return_label: 
#line 4206 
                return __retres;
}


#line 4209  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_port_trans_abort(struct rocker_port const *rocker_port)
{
  struct list_head *mem;
  struct list_head *tmp;
  
#line 4213 
  mem = rocker_port->trans_mem.next;
  
#line 4213 
  tmp = mem->next;
  
#line 4213 
  goto ldv_62075;
  ldv_62074: 
#line 4214 
  ;
  
#line 4214 
  list_del(mem);
  
#line 4215 
  kfree((void const *)mem);
  
#line 4213 
  mem = tmp;
  
#line 4213 
  tmp = mem->next;
  ldv_62075: 
#line 4214 
  ;
  
#line 4213 
  if (& rocker_port->trans_mem != (struct list_head const *)mem) 
#line 4215 
                                                                 goto ldv_62074; else 
                                                                    
#line 4218 
                                                                    goto ldv_62076;
  ldv_62076: 
#line 4219 
  ;
  
#line 4220 
  return;
}


#line 4219  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_brport_flags_set(struct rocker_port *rocker_port, enum switchdev_trans trans, unsigned long brport_flags)
{
  unsigned long orig_flags;
  
#line 4224 
  int err = 0;
  
#line 4226 
  orig_flags = (unsigned long)rocker_port->brport_flags;
  
#line 4227 
  rocker_port->brport_flags = (unsigned int)brport_flags;
  
#line 4228 
  if ((((unsigned long)rocker_port->brport_flags ^ orig_flags) & 32UL) != 0UL) 
    
#line 4229 
    err = rocker_port_set_learning(rocker_port,trans); else ;
  
#line 4231 
  if (trans == (unsigned int)SWITCHDEV_TRANS_PREPARE) 
#line 4232 
                                                      rocker_port->brport_flags = (unsigned int)orig_flags; else ;
  
#line 4234 
  return err;
}


#line 4237  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_attr_set(struct net_device *dev, struct switchdev_attr *attr)
{
  int __retres;
  
#line 4240 
  struct rocker_port *rocker_port = netdev_priv((struct net_device const *)dev);
  
#line 4241 
  int err = 0;
  
#line 4243 
  switch ((unsigned int)attr->trans) {
    int tmp_0;
    case (unsigned int)1: 
#line 4244 
    ;
    
#line 4245 
    tmp_0 = list_empty((struct list_head const *)(& rocker_port->trans_mem));
    
#line 4245 
    if ((long)(tmp_0 == 0) != 0L) {
      
#line 4247 
      ldv_inline_asm();
      
#line 4245 
      ;
    }
    else ;
    
#line 4246 
    goto ldv_62091;
    case (unsigned int)2: 
#line 4247 
    ;
    
#line 4248 
    rocker_port_trans_abort((struct rocker_port const *)rocker_port);
    
#line 4249 
    __retres = 0;
    
#line 4249 
    goto return_label;
    default: 
#line 4250 
    ;
    
#line 4251 
    goto ldv_62091;
  }
  ldv_62091: 
#line 4254 
  ;
  
#line 4254 
  switch ((unsigned int)attr->id) {
    case (unsigned int)2: 
#line 4255 
    ;
    
#line 4256 
    err = rocker_port_stp_update(rocker_port,attr->trans,2,(unsigned char)((int)attr->u.stp_state));
    
#line 4259 
    goto ldv_62095;
    case (unsigned int)3: 
#line 4260 
    ;
    
#line 4261 
    err = rocker_port_brport_flags_set(rocker_port,attr->trans,attr->u.brport_flags);
    
#line 4263 
    goto ldv_62095;
    default: 
#line 4264 
    ;
    
#line 4265 
    err = -95;
    
#line 4266 
    goto ldv_62095;
  }
  ldv_62095: 
#line 4269 
  ;
  
#line 4269 
  __retres = err;
  return_label: 
#line 4269 
                return __retres;
}


#line 4272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_vlan_add(struct rocker_port *rocker_port, enum switchdev_trans trans, u16 vid, u16 flags)
{
  int __retres;
  int err;
  int tmp_0;
  
#line 4279 
  err = rocker_port_vlan(rocker_port,trans,0,(unsigned short)((int)vid));
  
#line 4280 
  if (err != 0) {
    
#line 4281 
    __retres = err;
    
#line 4281 
    goto return_label;
  }
  else ;
  
#line 4283 
  if (0 != 0) 
#line 4283 
              tmp_0 = (int)((unsigned short)(((int)vid << 8) | ((int)vid >> 8)));
  else {
    __u16 tmp;
    
#line 4283 
    tmp = __fswab16((unsigned short)((int)vid));
    
#line 4283 
    tmp_0 = (int)tmp;
  }
  
#line 4283 
  ;
  
#line 4283 
  ;
  
#line 4283 
  err = rocker_port_router_mac(rocker_port,trans,0,(unsigned short)tmp_0);
  
#line 4284 
  if (err != 0) 
#line 4285 
                rocker_port_vlan(rocker_port,trans,1,(unsigned short)((int)vid)); else ;
  
#line 4288 
  __retres = err;
  return_label: 
#line 4288 
                return __retres;
}


#line 4291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_vlans_add(struct rocker_port *rocker_port, enum switchdev_trans trans, struct switchdev_obj_vlan const *vlan)
{
  int __retres;
  u16 vid;
  int err;
  
#line 4298 
  vid = vlan->vid_begin;
  
#line 4298 
  goto ldv_62113;
  ldv_62112: 
#line 4299 
  ;
  
#line 4299 
  err = rocker_port_vlan_add(rocker_port,trans,(unsigned short)((int)vid),(unsigned short)((int)vlan->flags));
  
#line 4301 
  if (err != 0) {
    
#line 4302 
    __retres = err;
    
#line 4302 
    goto return_label;
  }
  else ;
  
#line 4298 
  vid = (u16)((int)vid + 1);
  ldv_62113: 
#line 4299 
  ;
  
#line 4298 
  if ((int)vlan->vid_end >= (int)vid) 
#line 4300 
                                      goto ldv_62112; else 
#line 4303 
                                                           goto ldv_62114;
  ldv_62114: 
#line 4304 
  ;
  
#line 4305 
  __retres = 0;
  return_label: 
#line 4305 
                return __retres;
}


#line 4308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_fdb_add(struct rocker_port *rocker_port, enum switchdev_trans trans, struct switchdev_obj_fdb const *fdb)
{
  int __retres;
  int tmp_1;
  bool tmp_0;
  int tmp_2;
  
#line 4312 
  __be16 vlan_id = rocker_port_vid_to_vlan((struct rocker_port const *)rocker_port,(unsigned short)((int)fdb->vid),(bool *)0);
  
#line 4313 
  int flags = 0;
  
#line 4315 
  tmp_0 = rocker_port_is_bridged((struct rocker_port const *)rocker_port);
  
#line 4315 
  if (tmp_0) 
#line 4315 
             tmp_1 = 0; else 
#line 4315 
                             tmp_1 = 1;
  
#line 4315 
  if (tmp_1) {
    
#line 4316 
    __retres = -22;
    
#line 4316 
    goto return_label;
  }
  else ;
  
#line 4318 
  tmp_2 = rocker_port_fdb(rocker_port,trans,fdb->addr,(unsigned short)((int)vlan_id),flags);
  
#line 4318 
  __retres = tmp_2;
  return_label: 
#line 4318 
                return __retres;
}


#line 4321  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_obj_add(struct net_device *dev, struct switchdev_obj *obj)
{
  int __retres;
  struct switchdev_obj_ipv4_fib const *fib4;
  
#line 4324 
  struct rocker_port *rocker_port = netdev_priv((struct net_device const *)dev);
  
#line 4326 
  int err = 0;
  
#line 4328 
  switch ((unsigned int)obj->trans) {
    int tmp_0;
    case (unsigned int)1: 
#line 4329 
    ;
    
#line 4330 
    tmp_0 = list_empty((struct list_head const *)(& rocker_port->trans_mem));
    
#line 4330 
    if ((long)(tmp_0 == 0) != 0L) {
      
#line 4332 
      ldv_inline_asm();
      
#line 4330 
      ;
    }
    else ;
    
#line 4331 
    goto ldv_62130;
    case (unsigned int)2: 
#line 4332 
    ;
    
#line 4333 
    rocker_port_trans_abort((struct rocker_port const *)rocker_port);
    
#line 4334 
    __retres = 0;
    
#line 4334 
    goto return_label;
    default: 
#line 4335 
    ;
    
#line 4336 
    goto ldv_62130;
  }
  ldv_62130: 
#line 4339 
  ;
  
#line 4339 
  switch ((unsigned int)obj->id) {
    unsigned int tmp_2;
    case (unsigned int)1: 
#line 4340 
    ;
    
#line 4341 
    err = rocker_port_vlans_add(rocker_port,obj->trans,(struct switchdev_obj_vlan const *)(& obj->u.vlan));
    
#line 4343 
    goto ldv_62134;
    case (unsigned int)2: 
#line 4344 
    ;
    
#line 4345 
    fib4 = (struct switchdev_obj_ipv4_fib const *)(& obj->u.ipv4_fib);
    
#line 4346 
    ;
    
#line 4346 
    ;
    
#line 4346 
    ;
    
#line 4346 
    if (0 != 0) 
#line 4346 
                tmp_2 = (((fib4->dst << 24) | ((fib4->dst << 8) & 16711680U)) | ((fib4->dst >> 8) & 65280U)) | (fib4->dst >> 24); else 
                                                                    
#line 4347 
                                                                    tmp_2 = __fswab32(fib4->dst);
    
#line 4346 
    ;
    
#line 4346 
    ;
    
#line 4346 
    err = rocker_port_fib_ipv4(rocker_port,obj->trans,tmp_2,fib4->dst_len,(struct fib_info const *)fib4->fi,fib4->tb_id,0);
    
#line 4349 
    goto ldv_62134;
    case (unsigned int)3: 
#line 4350 
    ;
    
#line 4351 
    err = rocker_port_fdb_add(rocker_port,obj->trans,(struct switchdev_obj_fdb const *)(& obj->u.fdb));
    
#line 4352 
    goto ldv_62134;
    default: 
#line 4353 
    ;
    
#line 4354 
    err = -95;
    
#line 4355 
    goto ldv_62134;
  }
  ldv_62134: 
#line 4358 
  ;
  
#line 4358 
  __retres = err;
  return_label: 
#line 4358 
                return __retres;
}


#line 4361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_vlan_del(struct rocker_port *rocker_port, u16 vid, u16 flags)
{
  int __retres;
  int err;
  int tmp_0;
  int tmp_1;
  
#line 4367 
  if (0 != 0) 
#line 4367 
              tmp_0 = (int)((unsigned short)(((int)vid << 8) | ((int)vid >> 8)));
  else {
    __u16 tmp;
    
#line 4367 
    tmp = __fswab16((unsigned short)((int)vid));
    
#line 4367 
    tmp_0 = (int)tmp;
  }
  
#line 4366 
  ;
  
#line 4366 
  err = rocker_port_router_mac(rocker_port,(enum switchdev_trans)SWITCHDEV_TRANS_NONE,1,(unsigned short)tmp_0);
  
#line 4368 
  if (err != 0) {
    
#line 4369 
    __retres = err;
    
#line 4369 
    goto return_label;
  }
  else ;
  
#line 4371 
  tmp_1 = rocker_port_vlan(rocker_port,(enum switchdev_trans)SWITCHDEV_TRANS_NONE,1,(unsigned short)((int)vid));
  
#line 4371 
  __retres = tmp_1;
  return_label: 
#line 4371 
                return __retres;
}


#line 4375  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_vlans_del(struct rocker_port *rocker_port, struct switchdev_obj_vlan const *vlan)
{
  int __retres;
  u16 vid;
  int err;
  
#line 4381 
  vid = vlan->vid_begin;
  
#line 4381 
  goto ldv_62151;
  ldv_62150: 
#line 4382 
  ;
  
#line 4382 
  err = rocker_port_vlan_del(rocker_port,(unsigned short)((int)vid),(unsigned short)((int)vlan->flags));
  
#line 4383 
  if (err != 0) {
    
#line 4384 
    __retres = err;
    
#line 4384 
    goto return_label;
  }
  else ;
  
#line 4381 
  vid = (u16)((int)vid + 1);
  ldv_62151: 
#line 4382 
  ;
  
#line 4381 
  if ((int)vlan->vid_end >= (int)vid) 
#line 4383 
                                      goto ldv_62150; else 
#line 4386 
                                                           goto ldv_62152;
  ldv_62152: 
#line 4387 
  ;
  
#line 4387 
  __retres = 0;
  return_label: 
#line 4387 
                return __retres;
}


#line 4390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_fdb_del(struct rocker_port *rocker_port, enum switchdev_trans trans, struct switchdev_obj_fdb const *fdb)
{
  int __retres;
  int tmp_1;
  bool tmp_0;
  int tmp_2;
  
#line 4394 
  __be16 vlan_id = rocker_port_vid_to_vlan((struct rocker_port const *)rocker_port,(unsigned short)((int)fdb->vid),(bool *)0);
  
#line 4395 
  int flags = 3;
  
#line 4397 
  tmp_0 = rocker_port_is_bridged((struct rocker_port const *)rocker_port);
  
#line 4397 
  if (tmp_0) 
#line 4397 
             tmp_1 = 0; else 
#line 4397 
                             tmp_1 = 1;
  
#line 4397 
  if (tmp_1) {
    
#line 4398 
    __retres = -22;
    
#line 4398 
    goto return_label;
  }
  else ;
  
#line 4400 
  tmp_2 = rocker_port_fdb(rocker_port,trans,fdb->addr,(unsigned short)((int)vlan_id),flags);
  
#line 4400 
  __retres = tmp_2;
  return_label: 
#line 4400 
                return __retres;
}


#line 4403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_obj_del(struct net_device *dev, struct switchdev_obj *obj)
{
  struct switchdev_obj_ipv4_fib const *fib4;
  
#line 4406 
  struct rocker_port *rocker_port = netdev_priv((struct net_device const *)dev);
  
#line 4408 
  int err = 0;
  
#line 4410 
  switch ((unsigned int)obj->id) {
    unsigned int tmp_1;
    case (unsigned int)1: 
#line 4411 
    ;
    
#line 4412 
    err = rocker_port_vlans_del(rocker_port,(struct switchdev_obj_vlan const *)(& obj->u.vlan));
    
#line 4413 
    goto ldv_62168;
    case (unsigned int)2: 
#line 4414 
    ;
    
#line 4415 
    fib4 = (struct switchdev_obj_ipv4_fib const *)(& obj->u.ipv4_fib);
    
#line 4416 
    ;
    
#line 4416 
    ;
    
#line 4416 
    ;
    
#line 4416 
    if (0 != 0) 
#line 4416 
                tmp_1 = (((fib4->dst << 24) | ((fib4->dst << 8) & 16711680U)) | ((fib4->dst >> 8) & 65280U)) | (fib4->dst >> 24); else 
                                                                    
#line 4417 
                                                                    tmp_1 = __fswab32(fib4->dst);
    
#line 4416 
    ;
    
#line 4416 
    err = rocker_port_fib_ipv4(rocker_port,(enum switchdev_trans)SWITCHDEV_TRANS_NONE,tmp_1,fib4->dst_len,(struct fib_info const *)fib4->fi,fib4->tb_id,1);
    
#line 4420 
    goto ldv_62168;
    case (unsigned int)3: 
#line 4421 
    ;
    
#line 4422 
    err = rocker_port_fdb_del(rocker_port,obj->trans,(struct switchdev_obj_fdb const *)(& obj->u.fdb));
    
#line 4423 
    goto ldv_62168;
    default: 
#line 4424 
    ;
    
#line 4425 
    err = -95;
    
#line 4426 
    goto ldv_62168;
  }
  ldv_62168: 
#line 4429 
  ;
  
#line 4429 
  return err;
}


#line 4432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_fdb_dump(struct rocker_port const *rocker_port, struct switchdev_obj *obj)
{
  struct rocker_fdb_tbl_entry *found;
  struct hlist_node *tmp;
  unsigned long lock_flags;
  int bkt;
  struct rocker_fdb_tbl_entry *tmp_2;
  struct rocker_fdb_tbl_entry *tmp_5;
  
#line 4435 
  struct rocker *rocker = rocker_port->rocker;
  
#line 4436 
  struct switchdev_obj_fdb *fdb = & obj->u.fdb;
  
#line 4441 
  int err = 0;
  
#line 4443 
  ldv___ldv_spin_lock_118(& rocker->fdb_tbl_lock);
  
#line 4444 
  bkt = 0;
  
#line 4444 
  found = (struct rocker_fdb_tbl_entry *)0;
  
#line 4444 
  goto ldv_62200;
  ldv_62199: 
#line 4445 
  ;
  {
    struct rocker_fdb_tbl_entry *tmp_1;
    
#line 4444 
    struct hlist_node *____ptr = rocker->fdb_tbl[bkt].first;
    
#line 4444 
    if (____ptr != (struct hlist_node *)0) {
      struct rocker_fdb_tbl_entry *tmp_0;
      {
        
#line 4444 
        struct hlist_node const *__mptr = (struct hlist_node const *)____ptr;
        
#line 4444 
        tmp_0 = (struct rocker_fdb_tbl_entry *)__mptr;
      }
      
#line 4444 
      tmp_1 = tmp_0;
    }
    else 
#line 4444 
         tmp_1 = (struct rocker_fdb_tbl_entry *)0;
    
#line 4444 
    tmp_2 = tmp_1;
  }
  
#line 4444 
  found = tmp_2;
  
#line 4444 
  goto ldv_62198;
  ldv_62197: 
#line 4445 
  ;
  
#line 4445 
  if (found->key.pport != rocker_port->pport) 
#line 4446 
                                              goto ldv_62195; else ;
  
#line 4447 
  fdb->addr = (unsigned char const *)(& found->key.addr);
  
#line 4448 
  fdb->vid = rocker_port_vlan_to_vid(rocker_port,(unsigned short)((int)found->key.vlan_id));
  
#line 4450 
  err = (*(obj->cb))(rocker_port->dev,obj);
  
#line 4451 
  if (err != 0) 
#line 4452 
                goto ldv_62196; else ;
  ldv_62195: 
#line 4453 
  ;
  {
    struct rocker_fdb_tbl_entry *tmp_4;
    
#line 4444 
    struct hlist_node *____ptr_0 = tmp;
    
#line 4444 
    if (____ptr_0 != (struct hlist_node *)0) {
      struct rocker_fdb_tbl_entry *tmp_3;
      {
        
#line 4444 
        struct hlist_node const *__mptr_0 = (struct hlist_node const *)____ptr_0;
        
#line 4444 
        tmp_3 = (struct rocker_fdb_tbl_entry *)__mptr_0;
      }
      
#line 4444 
      tmp_4 = tmp_3;
    }
    else 
#line 4444 
         tmp_4 = (struct rocker_fdb_tbl_entry *)0;
    
#line 4444 
    tmp_5 = tmp_4;
  }
  
#line 4444 
  found = tmp_5;
  ldv_62198: 
#line 4446 
  ;
  
#line 4444 
  if (found != (struct rocker_fdb_tbl_entry *)0) {
    
#line 4444 
    tmp = found->entry.next;
    
#line 4444 
    if (1 != 0) 
#line 4446 
                goto ldv_62197; else 
#line 4449 
                                     goto ldv_62196;
  }
  else 
#line 4449 
       goto ldv_62196;
  ldv_62196: 
#line 4450 
  ;
  
#line 4444 
  bkt += 1;
  ldv_62200: 
#line 4445 
  ;
  
#line 4444 
  if (found == (struct rocker_fdb_tbl_entry *)0 && (unsigned int)bkt <= 65535U) 
    
#line 4446 
    goto ldv_62199; else 
#line 4449 
                         goto ldv_62201;
  ldv_62201: 
#line 4450 
  ;
  
#line 4454 
  ldv_spin_unlock_irqrestore_119(& rocker->fdb_tbl_lock,lock_flags);
  
#line 4456 
  return err;
}


#line 4459  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_vlan_dump(struct rocker_port const *rocker_port, struct switchdev_obj *obj)
{
  u16 vid;
  int tmp_1;
  bool tmp_4;
  int tmp_3;
  u16 tmp_5;
  
#line 4462 
  struct switchdev_obj_vlan *vlan = & obj->u.vlan;
  
#line 4464 
  int err = 0;
  
#line 4466 
  vid = (unsigned short)1U;
  
#line 4466 
  goto ldv_62212;
  ldv_62211: 
#line 4467 
  ;
  
#line 4467 
  if (0 != 0) {
    int tmp;
    
#line 4467 
    tmp = constant_test_bit((long)vid,(unsigned long const volatile *)(& rocker_port->vlan_bitmap));
    
#line 4467 
    tmp_1 = tmp == 0;
  }
  else {
    int tmp_0;
    
#line 4467 
    tmp_0 = variable_test_bit((long)vid,(unsigned long const volatile *)(& rocker_port->vlan_bitmap));
    
#line 4467 
    tmp_1 = tmp_0 == 0;
  }
  
#line 4467 
  if (tmp_1) 
#line 4468 
             goto ldv_62209; else ;
  
#line 4469 
  vlan->flags = (unsigned short)0U;
  
#line 4470 
  if (0 != 0) 
#line 4470 
              tmp_3 = (int)((unsigned short)(((int)vid << 8) | ((int)vid >> 8)));
  else {
    __u16 tmp_2;
    
#line 4470 
    tmp_2 = __fswab16((unsigned short)((int)vid));
    
#line 4470 
    tmp_3 = (int)tmp_2;
  }
  
#line 4470 
  tmp_4 = rocker_vlan_id_is_internal((unsigned short)tmp_3);
  
#line 4470 
  if ((int)tmp_4 != 0) 
#line 4471 
                       vlan->flags = (unsigned short)((unsigned int)vlan->flags | 2U); else ;
  
#line 4472 
  tmp_5 = vid;
  
#line 4472 
  vlan->vid_end = tmp_5;
  
#line 4472 
  vlan->vid_begin = tmp_5;
  
#line 4473 
  err = (*(obj->cb))(rocker_port->dev,obj);
  
#line 4474 
  if (err != 0) 
#line 4475 
                goto ldv_62210; else ;
  ldv_62209: 
#line 4476 
  ;
  
#line 4466 
  vid = (u16)((int)vid + 1);
  ldv_62212: 
#line 4467 
  ;
  
#line 4466 
  if ((unsigned int)vid <= 4095U) 
#line 4468 
                                  goto ldv_62211; else 
#line 4471 
                                                       goto ldv_62210;
  ldv_62210: 
#line 4472 
  ;
  
#line 4478 
  return err;
}


#line 4481  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_obj_dump(struct net_device *dev, struct switchdev_obj *obj)
{
  
#line 4484 
  struct rocker_port const *rocker_port = netdev_priv((struct net_device const *)dev);
  
#line 4485 
  int err = 0;
  
#line 4487 
  switch ((unsigned int)obj->id) {
    case (unsigned int)3: 
#line 4488 
    ;
    
#line 4489 
    err = rocker_port_fdb_dump(rocker_port,obj);
    
#line 4490 
    goto ldv_62220;
    case (unsigned int)1: 
#line 4491 
    ;
    
#line 4492 
    err = rocker_port_vlan_dump(rocker_port,obj);
    
#line 4493 
    goto ldv_62220;
    default: 
#line 4494 
    ;
    
#line 4495 
    err = -95;
    
#line 4496 
    goto ldv_62220;
  }
  ldv_62220: 
#line 4499 
  ;
  
#line 4499 
  return err;
}


#line 4502  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static struct switchdev_ops const rocker_port_switchdev_ops = {.switchdev_port_attr_get = & rocker_port_attr_get, .switchdev_port_attr_set = & rocker_port_attr_set, .switchdev_port_obj_add = & rocker_port_obj_add, .switchdev_port_obj_del = & rocker_port_obj_del, .switchdev_port_obj_dump = & rocker_port_obj_dump};

#line 4514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_get_settings(struct net_device *dev, struct ethtool_cmd *ecmd)
{
  int tmp_0;
  
#line 4517 
  struct rocker_port *rocker_port = netdev_priv((struct net_device const *)dev);
  
#line 4519 
  tmp_0 = rocker_cmd_get_port_settings_ethtool(rocker_port,ecmd);
  
#line 4519 
  return tmp_0;
}


#line 4522  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_set_settings(struct net_device *dev, struct ethtool_cmd *ecmd)
{
  int tmp_0;
  
#line 4525 
  struct rocker_port *rocker_port = netdev_priv((struct net_device const *)dev);
  
#line 4527 
  tmp_0 = rocker_cmd_set_port_settings_ethtool(rocker_port,ecmd);
  
#line 4527 
  return tmp_0;
}


#line 4530  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_port_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *drvinfo)
{
  
#line 4533 
  strlcpy((char *)(& drvinfo->driver),(char const *)(& rocker_driver_name),32UL);
  
#line 4534 
  strlcpy((char *)(& drvinfo->version),"4.2.6",32UL);
  
#line 4535 
  return;
}


#line 4540  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static struct rocker_port_stats rocker_port_stats[8U] = {{.str = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .type = 2}, {.str = {(char)'r', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, .type = 3}, {.str = {(char)'r', (char)'x', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'\000'}, .type = 4}, {.str = {(char)'r', (char)'x', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .type = 5}, {.str = {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .type = 6}, {.str = {(char)'t', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, .type = 7}, {.str = {(char)'t', (char)'x', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'\000'}, .type = 8}, {.str = {(char)'t', (char)'x', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .type = 9}};

#line 4554  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_port_get_strings(struct net_device *netdev, u32 stringset, u8 *data)
{
  int i;
  
#line 4557 
  u8 *p = data;
  
#line 4560 
  switch (stringset) {
    case (u32)1: 
#line 4561 
    ;
    
#line 4562 
    i = 0;
    
#line 4562 
    goto ldv_62254;
    ldv_62253: 
#line 4563 
    ;
    
#line 4563 
    memcpy((void *)p,(void const *)(& rocker_port_stats[i].str),32UL);
    
#line 4564 
    p += 32U;
    
#line 4562 
    i += 1;
    ldv_62254: 
#line 4563 
    ;
    
#line 4562 
    if ((unsigned int)i <= 7U) 
#line 4564 
                               goto ldv_62253; else 
#line 4567 
                                                    goto ldv_62255;
    ldv_62255: 
#line 4568 
    ;
    
#line 4566 
    goto ldv_62256;
  }
  ldv_62256: 
#line 4568 
  ;
  
#line 4569 
  return;
}


#line 4571  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_get_port_stats_prep(struct rocker_port const *rocker_port, struct rocker_desc_info *desc_info, void *priv)
{
  int __retres;
  struct rocker_tlv *cmd_stats;
  int tmp;
  int tmp_0;
  
#line 4577 
  tmp = rocker_tlv_put_u16(desc_info,1,(unsigned short)12);
  
#line 4577 
  if (tmp != 0) {
    
#line 4579 
    __retres = -90;
    
#line 4579 
    goto return_label;
  }
  else ;
  
#line 4581 
  cmd_stats = rocker_tlv_nest_start(desc_info,2);
  
#line 4582 
  if (cmd_stats == (struct rocker_tlv *)0) {
    
#line 4583 
    __retres = -90;
    
#line 4583 
    goto return_label;
  }
  else ;
  
#line 4585 
  tmp_0 = rocker_tlv_put_u32(desc_info,1,rocker_port->pport);
  
#line 4585 
  if (tmp_0 != 0) {
    
#line 4587 
    __retres = -90;
    
#line 4587 
    goto return_label;
  }
  else ;
  
#line 4589 
  rocker_tlv_nest_end(desc_info,cmd_stats);
  
#line 4591 
  __retres = 0;
  return_label: 
#line 4591 
                return __retres;
}


#line 4595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_get_port_stats_ethtool_proc(struct rocker_port const *rocker_port, struct rocker_desc_info const *desc_info, void *priv)
{
  int __retres;
  struct rocker_tlv const *attrs[3U];
  struct rocker_tlv const *stats_attrs[10U];
  struct rocker_tlv const *pattr;
  u32 pport;
  int i;
  
#line 4603 
  u64 *data = (u64 *)priv;
  
#line 4606 
  rocker_tlv_parse_desc((struct rocker_tlv const **)(& attrs),2,desc_info);
  
#line 4608 
  if (attrs[2] == (struct rocker_tlv const *)0) {
    
#line 4609 
    __retres = -5;
    
#line 4609 
    goto return_label;
  }
  else ;
  
#line 4611 
  rocker_tlv_parse_nested((struct rocker_tlv const **)(& stats_attrs),9,attrs[2]);
  
#line 4614 
  if (stats_attrs[1] == (struct rocker_tlv const *)0) {
    
#line 4615 
    __retres = -5;
    
#line 4615 
    goto return_label;
  }
  else ;
  
#line 4617 
  pport = rocker_tlv_get_u32(stats_attrs[1]);
  
#line 4618 
  if (rocker_port->pport != pport) {
    
#line 4619 
    __retres = -5;
    
#line 4619 
    goto return_label;
  }
  else ;
  
#line 4621 
  i = 0;
  
#line 4621 
  goto ldv_62279;
  ldv_62278: 
#line 4622 
  ;
  
#line 4622 
  pattr = stats_attrs[rocker_port_stats[i].type];
  
#line 4623 
  if (pattr == (struct rocker_tlv const *)0) 
#line 4624 
                                             goto ldv_62277; else ;
  
#line 4626 
  *(data + i) = rocker_tlv_get_u64(pattr);
  ldv_62277: 
#line 4627 
  ;
  
#line 4621 
  i += 1;
  ldv_62279: 
#line 4622 
  ;
  
#line 4621 
  if ((unsigned int)i <= 7U) 
#line 4623 
                             goto ldv_62278; else 
#line 4626 
                                                  goto ldv_62280;
  ldv_62280: 
#line 4627 
  ;
  
#line 4629 
  __retres = 0;
  return_label: 
#line 4629 
                return __retres;
}


#line 4632  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_cmd_get_port_stats_ethtool(struct rocker_port *rocker_port, void *priv)
{
  int tmp;
  
#line 4635 
  tmp = rocker_cmd_exec(rocker_port,(enum switchdev_trans)SWITCHDEV_TRANS_NONE,0,& rocker_cmd_get_port_stats_prep,(void *)0,& rocker_cmd_get_port_stats_ethtool_proc,priv);
  
#line 4635 
  return tmp;
}


#line 4641  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_port_get_stats(struct net_device *dev, struct ethtool_stats *stats, u64 *data)
{
  int tmp_0;
  
#line 4644 
  struct rocker_port *rocker_port = netdev_priv((struct net_device const *)dev);
  
#line 4646 
  tmp_0 = rocker_cmd_get_port_stats_ethtool(rocker_port,(void *)data);
  
#line 4646 
  if (tmp_0 != 0) {
    int i;
    
#line 4649 
    i = 0;
    
#line 4649 
    goto ldv_62296;
    ldv_62295: 
#line 4650 
    ;
    
#line 4650 
    *(data + i) = 0ULL;
    
#line 4649 
    i += 1;
    ldv_62296: 
#line 4650 
    ;
    
#line 4649 
    if ((unsigned int)i <= 7U) 
#line 4651 
                               goto ldv_62295; else 
#line 4654 
                                                    goto ldv_62297;
    ldv_62297: 
#line 4655 
    ;
  }
  else ;
  
#line 4657 
  return;
}


#line 4654  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_get_sset_count(struct net_device *netdev, int sset)
{
  int __retres;
  
#line 4656 
  switch (sset) {
    case 1: 
#line 4657 
    ;
    
#line 4658 
    __retres = 8;
    
#line 4658 
    goto return_label;
    default: 
#line 4659 
    ;
    
#line 4660 
    __retres = -95;
    
#line 4660 
    goto return_label;
  }
  return_label: 
#line 4656 
                return __retres;
}


#line 4664  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static struct ethtool_ops const rocker_port_ethtool_ops = {.get_settings = & rocker_port_get_settings, .set_settings = & rocker_port_set_settings, .get_drvinfo = & rocker_port_get_drvinfo, .get_regs_len = (int (*)(struct net_device *))0, .get_regs = (void (*)(struct net_device *, struct ethtool_regs *, void *))0, .get_wol = (void (*)(struct net_device *, struct ethtool_wolinfo *))0, .set_wol = (int (*)(struct net_device *, struct ethtool_wolinfo *))0, .get_msglevel = (u32 (*)(struct net_device *))0, .set_msglevel = (void (*)(struct net_device *, u32 ))0, .nway_reset = (int (*)(struct net_device *))0, .get_link = & ethtool_op_get_link, .get_eeprom_len = (int (*)(struct net_device *))0, .get_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .set_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .set_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .get_ringparam = (void (*)(struct net_device *, struct ethtool_ringparam *))0, .set_ringparam = (int (*)(struct net_device *, struct ethtool_ringparam *))0, .get_pauseparam = (void (*)(struct net_device *, struct ethtool_pauseparam *))0, .set_pauseparam = (int (*)(struct net_device *, struct ethtool_pauseparam *))0, .self_test = (void (*)(struct net_device *, struct ethtool_test *, u64 *))0, .get_strings = & rocker_port_get_strings, .set_phys_id = (int (*)(struct net_device *, enum ethtool_phys_id_state ))0, .get_ethtool_stats = & rocker_port_get_stats, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = & rocker_port_get_sset_count, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = (int (*)(struct net_device *, struct ethtool_ts_info *))0, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 4678  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static struct rocker_port *rocker_port_napi_tx_get(struct napi_struct *napi)
{
  struct rocker_port *tmp;
  {
    
#line 4680 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 4680 
    tmp = (struct rocker_port *)__mptr + 18446744073709551048U;
  }
  
#line 4680 
  return tmp;
}


#line 4683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_poll_tx(struct napi_struct *napi, int budget)
{
  int __retres;
  struct rocker_desc_info const *desc_info;
  int err;
  
#line 4685 
  struct rocker_port *rocker_port = rocker_port_napi_tx_get(napi);
  
#line 4686 
  struct rocker const *rocker = (struct rocker const *)rocker_port->rocker;
  
#line 4688 
  u32 credits = 0U;
  
#line 4692 
  goto ldv_62324;
  ldv_62323: 
#line 4693 
  ;
  {
    struct sk_buff *skb;
    
#line 4695 
    err = rocker_desc_err(desc_info);
    
#line 4696 
    if (err != 0) {
      int tmp_0;
      
#line 4696 
      tmp_0 = net_ratelimit();
      
#line 4696 
      if (tmp_0 != 0) 
#line 4697 
                      netdev_err((struct net_device const *)rocker_port->dev,"tx desc received with err %d\n",err); else ;
    }
    else ;
    
#line 4699 
    rocker_tx_desc_frags_unmap((struct rocker_port const *)rocker_port,desc_info);
    
#line 4701 
    skb = (struct sk_buff *)rocker_desc_cookie_ptr_get(desc_info);
    
#line 4702 
    if (err == 0) {
      
#line 4703 
      (rocker_port->dev)->stats.tx_packets += 1UL;
      
#line 4704 
      (rocker_port->dev)->stats.tx_bytes += (unsigned long)skb->len;
    }
    else 
#line 4706 
         (rocker_port->dev)->stats.tx_errors += 1UL;
    
#line 4709 
    dev_kfree_skb_any(skb);
    
#line 4710 
    credits += 1U;
  }
  ldv_62324: 
#line 4712 
  ;
  
#line 4692 
  desc_info = (struct rocker_desc_info const *)rocker_desc_tail_get(& rocker_port->tx_ring);
  
#line 4692 
  if (desc_info != (struct rocker_desc_info const *)0) 
#line 4694 
                                                       goto ldv_62323; else 
                                                                    
#line 4697 
                                                                    goto ldv_62325;
  ldv_62325: 
#line 4698 
  ;
  
#line 4713 
  if (credits != 0U) {
    bool tmp_3;
    
#line 4713 
    tmp_3 = netif_queue_stopped((struct net_device const *)rocker_port->dev);
    
#line 4713 
    if ((int)tmp_3 != 0) 
#line 4714 
                         netif_wake_queue(rocker_port->dev); else ;
  }
  else ;
  
#line 4716 
  napi_complete(napi);
  
#line 4717 
  rocker_dma_ring_credits_set(rocker,(struct rocker_dma_ring_info const *)(& rocker_port->tx_ring),credits);
  
#line 4719 
  __retres = 0;
  
#line 4719 
  return __retres;
}


#line 4722  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_rx_proc(struct rocker const *rocker, struct rocker_port const *rocker_port, struct rocker_desc_info *desc_info)
{
  int __retres;
  struct rocker_tlv const *attrs[6U];
  size_t rx_len;
  u16 tmp_0;
  int tmp_1;
  
#line 4727 
  struct sk_buff *skb = rocker_desc_cookie_ptr_get((struct rocker_desc_info const *)desc_info);
  
#line 4730 
  if (skb == (struct sk_buff *)0) {
    
#line 4731 
    __retres = -2;
    
#line 4731 
    goto return_label;
  }
  else ;
  
#line 4733 
  rocker_tlv_parse_desc((struct rocker_tlv const **)(& attrs),5,(struct rocker_desc_info const *)desc_info);
  
#line 4734 
  if (attrs[5] == (struct rocker_tlv const *)0) {
    
#line 4735 
    __retres = -22;
    
#line 4735 
    goto return_label;
  }
  else ;
  
#line 4737 
  rocker_dma_rx_ring_skb_unmap(rocker,(struct rocker_tlv const **)(& attrs));
  
#line 4739 
  tmp_0 = rocker_tlv_get_u16(attrs[5]);
  
#line 4739 
  rx_len = (unsigned long)tmp_0;
  
#line 4740 
  skb_put(skb,(unsigned int)rx_len);
  
#line 4741 
  skb->protocol = eth_type_trans(skb,rocker_port->dev);
  
#line 4743 
  (rocker_port->dev)->stats.rx_packets += 1UL;
  
#line 4744 
  (rocker_port->dev)->stats.rx_bytes += (unsigned long)skb->len;
  
#line 4746 
  netif_receive_skb(skb);
  
#line 4748 
  tmp_1 = rocker_dma_rx_ring_skb_alloc(rocker_port,desc_info);
  
#line 4748 
  __retres = tmp_1;
  return_label: 
#line 4748 
                return __retres;
}


#line 4751  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static struct rocker_port *rocker_port_napi_rx_get(struct napi_struct *napi)
{
  struct rocker_port *tmp;
  {
    
#line 4753 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 4753 
    tmp = (struct rocker_port *)__mptr + 18446744073709550768U;
  }
  
#line 4753 
  return tmp;
}


#line 4756  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_poll_rx(struct napi_struct *napi, int budget)
{
  int __retres;
  struct rocker_desc_info *desc_info;
  int err;
  
#line 4758 
  struct rocker_port *rocker_port = rocker_port_napi_rx_get(napi);
  
#line 4759 
  struct rocker const *rocker = (struct rocker const *)rocker_port->rocker;
  
#line 4761 
  u32 credits = 0U;
  
#line 4765 
  goto ldv_62349;
  ldv_62348: 
#line 4766 
  ;
  
#line 4767 
  err = rocker_desc_err((struct rocker_desc_info const *)desc_info);
  
#line 4768 
  if (err != 0) {
    int tmp_0;
    
#line 4769 
    tmp_0 = net_ratelimit();
    
#line 4769 
    if (tmp_0 != 0) 
#line 4770 
                    netdev_err((struct net_device const *)rocker_port->dev,"rx desc received with err %d\n",err); else ;
  }
  else {
    
#line 4773 
    err = rocker_port_rx_proc(rocker,(struct rocker_port const *)rocker_port,desc_info);
    
#line 4775 
    if (err != 0) {
      int tmp_1;
      
#line 4775 
      tmp_1 = net_ratelimit();
      
#line 4775 
      if (tmp_1 != 0) 
#line 4776 
                      netdev_err((struct net_device const *)rocker_port->dev,"rx processing failed with err %d\n",err); else ;
    }
    else ;
  }
  
#line 4779 
  if (err != 0) 
#line 4780 
                (rocker_port->dev)->stats.rx_errors += 1UL; else ;
  
#line 4782 
  rocker_desc_gen_clear((struct rocker_desc_info const *)desc_info);
  
#line 4783 
  rocker_desc_head_set(rocker,& rocker_port->rx_ring,(struct rocker_desc_info const *)desc_info);
  
#line 4784 
  credits += 1U;
  ldv_62349: 
#line 4785 
  ;
  
#line 4765 
  if (credits < (unsigned int)budget) {
    
#line 4766 
    desc_info = rocker_desc_tail_get(& rocker_port->rx_ring);
    
#line 4765 
    if (desc_info != (struct rocker_desc_info *)0) 
#line 4767 
                                                   goto ldv_62348; else 
                                                                    
#line 4770 
                                                                    goto ldv_62350;
  }
  else 
#line 4770 
       goto ldv_62350;
  ldv_62350: 
#line 4771 
  ;
  
#line 4787 
  if (credits < (unsigned int)budget) 
#line 4788 
                                      napi_complete(napi); else ;
  
#line 4790 
  rocker_dma_ring_credits_set(rocker,(struct rocker_dma_ring_info const *)(& rocker_port->rx_ring),credits);
  
#line 4792 
  __retres = (int)credits;
  
#line 4792 
  return __retres;
}


#line 4799  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_carrier_init(struct rocker_port const *rocker_port)
{
  bool link_up;
  
#line 4801 
  struct rocker const *rocker = (struct rocker const *)rocker_port->rocker;
  
#line 4802 
  u64 link_status = readq((void const volatile *)(rocker->hw_addr + 784U));
  
#line 4805 
  link_up = (_Bool)(((unsigned long long)(1 << rocker_port->pport) & link_status) != 0ULL);
  
#line 4806 
  if ((int)link_up != 0) 
#line 4807 
                         netif_carrier_on(rocker_port->dev); else 
#line 4809 
                                                                  netif_carrier_off(rocker_port->dev);
  
#line 4810 
  return;
}


#line 4812  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_remove_ports(struct rocker const *rocker)
{
  struct rocker_port *rocker_port;
  int i;
  
#line 4817 
  i = 0;
  
#line 4817 
  goto ldv_62364;
  ldv_62363: 
#line 4818 
  ;
  
#line 4818 
  rocker_port = *(rocker->ports + i);
  
#line 4819 
  if (rocker_port == (struct rocker_port *)0) 
#line 4820 
                                              goto ldv_62362; else ;
  
#line 4821 
  rocker_port_ig_tbl(rocker_port,(enum switchdev_trans)SWITCHDEV_TRANS_NONE,1);
  
#line 4823 
  ldv_unregister_netdev_120(rocker_port->dev);
  
#line 4824 
  ldv_free_netdev_121(rocker_port->dev);
  ldv_62362: 
#line 4825 
  ;
  
#line 4817 
  i += 1;
  ldv_62364: 
#line 4818 
  ;
  
#line 4817 
  if (rocker->port_count > (unsigned int)i) 
#line 4819 
                                            goto ldv_62363; else 
#line 4822 
                                                                 goto ldv_62365;
  ldv_62365: 
#line 4823 
  ;
  
#line 4826 
  kfree((void const *)rocker->ports);
  
#line 4827 
  return;
}


#line 4829  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_port_dev_addr_init(struct rocker_port *rocker_port)
{
  int err;
  
#line 4831 
  struct rocker const *rocker = (struct rocker const *)rocker_port->rocker;
  
#line 4832 
  struct pci_dev const *pdev = (struct pci_dev const *)rocker->pdev;
  
#line 4835 
  err = rocker_cmd_get_port_settings_macaddr(rocker_port,(rocker_port->dev)->dev_addr);
  
#line 4837 
  if (err != 0) {
    
#line 4838 
    dev_warn(& pdev->dev,"failed to get mac address, using random\n");
    
#line 4839 
    eth_hw_addr_random(rocker_port->dev);
  }
  else ;
  
#line 4841 
  return;
}


#line 4843  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_probe_port(struct rocker *rocker, unsigned int port_number)
{
  int __retres;
  struct rocker_port *rocker_port;
  struct net_device *dev;
  int err;
  
#line 4845 
  struct pci_dev const *pdev = (struct pci_dev const *)rocker->pdev;
  
#line 4848 
  u16 untagged_vid = (unsigned short)0U;
  
#line 4851 
  dev = ldv_alloc_etherdev_mqs_122(1240,1U,1U);
  
#line 4852 
  if (dev == (struct net_device *)0) {
    
#line 4853 
    __retres = -12;
    
#line 4853 
    goto return_label;
  }
  else ;
  
#line 4854 
  rocker_port = (struct rocker_port *)netdev_priv((struct net_device const *)dev);
  
#line 4855 
  rocker_port->dev = dev;
  
#line 4856 
  rocker_port->rocker = rocker;
  
#line 4857 
  rocker_port->port_number = port_number;
  
#line 4858 
  rocker_port->pport = port_number + 1U;
  
#line 4859 
  rocker_port->brport_flags = 544U;
  
#line 4860 
  INIT_LIST_HEAD(& rocker_port->trans_mem);
  
#line 4862 
  rocker_port_dev_addr_init(rocker_port);
  
#line 4863 
  dev->netdev_ops = & rocker_port_netdev_ops;
  
#line 4864 
  dev->ethtool_ops = & rocker_port_ethtool_ops;
  
#line 4865 
  dev->switchdev_ops = & rocker_port_switchdev_ops;
  
#line 4866 
  netif_napi_add(dev,& rocker_port->napi_tx,& rocker_port_poll_tx,64);
  
#line 4868 
  netif_napi_add(dev,& rocker_port->napi_rx,& rocker_port_poll_rx,64);
  
#line 4870 
  rocker_carrier_init((struct rocker_port const *)rocker_port);
  
#line 4872 
  dev->features |= 8192ULL;
  
#line 4874 
  err = ldv_register_netdev_123(dev);
  
#line 4875 
  if (err != 0) {
    
#line 4876 
    dev_err(& pdev->dev,"register_netdev failed\n");
    
#line 4877 
    goto err_register_netdev;
  }
  else ;
  
#line 4879 
  *(rocker->ports + port_number) = rocker_port;
  
#line 4881 
  rocker_port_set_learning(rocker_port,(enum switchdev_trans)SWITCHDEV_TRANS_NONE);
  
#line 4883 
  err = rocker_port_ig_tbl(rocker_port,(enum switchdev_trans)SWITCHDEV_TRANS_NONE,0);
  
#line 4884 
  if (err != 0) {
    
#line 4885 
    dev_err(& pdev->dev,"install ig port table failed\n");
    
#line 4886 
    goto err_port_ig_tbl;
  }
  else ;
  
#line 4889 
  rocker_port->internal_vlan_id = rocker_port_internal_vlan_id_get(rocker_port,dev->ifindex);
  
#line 4892 
  err = rocker_port_vlan_add(rocker_port,(enum switchdev_trans)SWITCHDEV_TRANS_NONE,(unsigned short)((int)untagged_vid),(unsigned short)0);
  
#line 4894 
  if (err != 0) {
    
#line 4895 
    netdev_err((struct net_device const *)rocker_port->dev,"install untagged VLAN failed\n");
    
#line 4896 
    goto err_untagged_vlan;
  }
  else ;
  
#line 4899 
  __retres = 0;
  
#line 4899 
  goto return_label;
  err_untagged_vlan: 
#line 4901 
  ;
  
#line 4902 
  rocker_port_ig_tbl(rocker_port,(enum switchdev_trans)SWITCHDEV_TRANS_NONE,1);
  err_port_ig_tbl: 
#line 4904 
  ;
  
#line 4905 
  ldv_unregister_netdev_124(dev);
  err_register_netdev: 
#line 4906 
  ;
  
#line 4907 
  ldv_free_netdev_125(dev);
  
#line 4908 
  __retres = err;
  return_label: 
#line 4908 
                return __retres;
}


#line 4911  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_probe_ports(struct rocker *rocker)
{
  int __retres;
  int i;
  size_t alloc_size;
  int err;
  
#line 4917 
  alloc_size = (unsigned long)rocker->port_count * 8UL;
  
#line 4918 
  rocker->ports = (struct rocker_port **)kzalloc(alloc_size,208U);
  
#line 4919 
  if (rocker->ports == (struct rocker_port **)0) {
    
#line 4920 
    __retres = -12;
    
#line 4920 
    goto return_label;
  }
  else ;
  
#line 4921 
  i = 0;
  
#line 4921 
  goto ldv_62392;
  ldv_62391: 
#line 4922 
  ;
  
#line 4922 
  err = rocker_probe_port(rocker,(unsigned int)i);
  
#line 4923 
  if (err != 0) 
#line 4924 
                goto remove_ports; else ;
  
#line 4921 
  i += 1;
  ldv_62392: 
#line 4922 
  ;
  
#line 4921 
  if (rocker->port_count > (unsigned int)i) 
#line 4923 
                                            goto ldv_62391; else 
#line 4926 
                                                                 goto ldv_62393;
  ldv_62393: 
#line 4927 
  ;
  
#line 4926 
  __retres = 0;
  
#line 4926 
  goto return_label;
  remove_ports: 
#line 4928 
  ;
  
#line 4929 
  rocker_remove_ports((struct rocker const *)rocker);
  
#line 4930 
  __retres = err;
  return_label: 
#line 4930 
                return __retres;
}


#line 4933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_msix_init(struct rocker *rocker)
{
  int __retres;
  int msix_entries;
  int i;
  int err;
  
#line 4935 
  struct pci_dev *pdev = rocker->pdev;
  
#line 4940 
  msix_entries = pci_msix_vec_count(pdev);
  
#line 4941 
  if (msix_entries < 0) {
    
#line 4942 
    __retres = msix_entries;
    
#line 4942 
    goto return_label;
  }
  else ;
  
#line 4944 
  if ((rocker->port_count + 2U) * 2U != (unsigned int)msix_entries) {
    
#line 4945 
    __retres = -22;
    
#line 4945 
    goto return_label;
  }
  else ;
  
#line 4947 
  rocker->msix_entries = (struct msix_entry *)kmalloc_array((unsigned long)msix_entries,8UL,208U);
  
#line 4950 
  if (rocker->msix_entries == (struct msix_entry *)0) {
    
#line 4951 
    __retres = -12;
    
#line 4951 
    goto return_label;
  }
  else ;
  
#line 4953 
  i = 0;
  
#line 4953 
  goto ldv_62402;
  ldv_62401: 
#line 4954 
  ;
  
#line 4954 
  (rocker->msix_entries + i)->entry = (unsigned short)i;
  
#line 4953 
  i += 1;
  ldv_62402: 
#line 4954 
  ;
  
#line 4953 
  if (i < msix_entries) 
#line 4955 
                        goto ldv_62401; else 
#line 4958 
                                             goto ldv_62403;
  ldv_62403: 
#line 4959 
  ;
  
#line 4956 
  err = pci_enable_msix_exact(pdev,rocker->msix_entries,msix_entries);
  
#line 4957 
  if (err < 0) 
#line 4958 
               goto err_enable_msix; else ;
  
#line 4960 
  __retres = 0;
  
#line 4960 
  goto return_label;
  err_enable_msix: 
#line 4962 
  ;
  
#line 4963 
  kfree((void const *)rocker->msix_entries);
  
#line 4964 
  __retres = err;
  return_label: 
#line 4964 
                return __retres;
}


#line 4967  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_msix_fini(struct rocker const *rocker)
{
  
#line 4969 
  pci_disable_msix(rocker->pdev);
  
#line 4970 
  kfree((void const *)rocker->msix_entries);
  
#line 4971 
  return;
}


#line 4973  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_probe(struct pci_dev *pdev, struct pci_device_id const *id)
{
  int __retres;
  struct rocker *rocker;
  int err;
  void *tmp_1;
  resource_size_t tmp_0;
  u32 tmp_2;
  u32 tmp_3;
  u32 tmp_5;
  u32 tmp_6;
  
#line 4978 
  rocker = (struct rocker *)kzalloc(2099824UL,208U);
  
#line 4979 
  if (rocker == (struct rocker *)0) {
    
#line 4980 
    __retres = -12;
    
#line 4980 
    goto return_label;
  }
  else ;
  
#line 4982 
  err = pci_enable_device(pdev);
  
#line 4983 
  if (err != 0) {
    
#line 4984 
    dev_err((struct device const *)(& pdev->dev),"pci_enable_device failed\n");
    
#line 4985 
    goto err_pci_enable_device;
  }
  else ;
  
#line 4988 
  err = pci_request_regions(pdev,(char const *)(& rocker_driver_name));
  
#line 4989 
  if (err != 0) {
    
#line 4990 
    dev_err((struct device const *)(& pdev->dev),"pci_request_regions failed\n");
    
#line 4991 
    goto err_pci_request_regions;
  }
  else ;
  
#line 4994 
  err = pci_set_dma_mask(pdev,18446744073709551615ULL);
  
#line 4995 
  if (err == 0) {
    
#line 4996 
    err = pci_set_consistent_dma_mask(pdev,18446744073709551615ULL);
    
#line 4997 
    if (err != 0) {
      
#line 4998 
      dev_err((struct device const *)(& pdev->dev),"pci_set_consistent_dma_mask failed\n");
      
#line 4999 
      goto err_pci_set_dma_mask;
    }
    else ;
  }
  else {
    
#line 5002 
    err = pci_set_dma_mask(pdev,4294967295ULL);
    
#line 5003 
    if (err != 0) {
      
#line 5004 
      dev_err((struct device const *)(& pdev->dev),"pci_set_dma_mask failed\n");
      
#line 5005 
      goto err_pci_set_dma_mask;
    }
    else ;
  }
  
#line 5009 
  if ((pdev->resource[0].start == 0ULL && pdev->resource[0].end == pdev->resource[0].start) || (pdev->resource[0].end - pdev->resource[0].start) + 1ULL <= 8191ULL) {
    
#line 5010 
    dev_err((struct device const *)(& pdev->dev),"invalid PCI region size\n");
    
#line 5011 
    err = -22;
    
#line 5012 
    goto err_pci_resource_len_check;
  }
  else ;
  
#line 5016 
  if (pdev->resource[0].start != 0ULL || pdev->resource[0].end != pdev->resource[0].start) 
    
#line 5016 
    tmp_0 = (pdev->resource[0].end - pdev->resource[0].start) + 1ULL; else 
                                                                    
#line 5016 
                                                                    tmp_0 = 0ULL;
  
#line 5015 
  ;
  
#line 5015 
  tmp_1 = ioremap(pdev->resource[0].start,(unsigned long)tmp_0);
  
#line 5015 
  rocker->hw_addr = (u8 *)tmp_1;
  
#line 5017 
  if (rocker->hw_addr == (u8 *)0U) {
    
#line 5018 
    dev_err((struct device const *)(& pdev->dev),"ioremap failed\n");
    
#line 5019 
    err = -5;
    
#line 5020 
    goto err_ioremap;
  }
  else ;
  
#line 5022 
  pci_set_master(pdev);
  
#line 5024 
  rocker->pdev = pdev;
  
#line 5025 
  pci_set_drvdata(pdev,(void *)rocker);
  
#line 5027 
  rocker->port_count = readl((void const volatile *)(rocker->hw_addr + 772U));
  
#line 5029 
  err = rocker_msix_init(rocker);
  
#line 5030 
  if (err != 0) {
    
#line 5031 
    dev_err((struct device const *)(& pdev->dev),"MSI-X init failed\n");
    
#line 5032 
    goto err_msix_init;
  }
  else ;
  
#line 5035 
  err = rocker_basic_hw_test((struct rocker const *)rocker);
  
#line 5036 
  if (err != 0) {
    
#line 5037 
    dev_err((struct device const *)(& pdev->dev),"basic hw test failed\n");
    
#line 5038 
    goto err_basic_hw_test;
  }
  else ;
  
#line 5041 
  writel(1U,(void volatile *)(rocker->hw_addr + 768U));
  
#line 5043 
  err = rocker_dma_rings_init(rocker);
  
#line 5044 
  if (err != 0) 
#line 5045 
                goto err_dma_rings_init; else ;
  
#line 5047 
  ;
  
#line 5047 
  tmp_2 = rocker_msix_vector((struct rocker const *)rocker,0U);
  
#line 5047 
  err = ldv_request_irq_126(tmp_2,& rocker_cmd_irq_handler,0UL,(char const *)(& rocker_driver_name),(void *)rocker);
  
#line 5050 
  if (err != 0) {
    
#line 5051 
    dev_err((struct device const *)(& pdev->dev),"cannot assign cmd irq\n");
    
#line 5052 
    goto err_request_cmd_irq;
  }
  else ;
  
#line 5055 
  ;
  
#line 5055 
  tmp_3 = rocker_msix_vector((struct rocker const *)rocker,1U);
  
#line 5055 
  err = ldv_request_irq_127(tmp_3,& rocker_event_irq_handler,0UL,(char const *)(& rocker_driver_name),(void *)rocker);
  
#line 5058 
  if (err != 0) {
    
#line 5059 
    dev_err((struct device const *)(& pdev->dev),"cannot assign event irq\n");
    
#line 5060 
    goto err_request_event_irq;
  }
  else ;
  
#line 5063 
  rocker->hw.id = (u64)readq((void const volatile *)(rocker->hw_addr + 800U));
  
#line 5065 
  err = rocker_init_tbls(rocker);
  
#line 5066 
  if (err != 0) {
    
#line 5067 
    dev_err((struct device const *)(& pdev->dev),"cannot init rocker tables\n");
    
#line 5068 
    goto err_init_tbls;
  }
  else ;
  
#line 5071 
  err = rocker_probe_ports(rocker);
  
#line 5072 
  if (err != 0) {
    
#line 5073 
    dev_err((struct device const *)(& pdev->dev),"failed to probe ports\n");
    
#line 5074 
    goto err_probe_ports;
  }
  else ;
  
#line 5077 
  _dev_info((struct device const *)(& pdev->dev),"Rocker switch with id %016llx\n",rocker->hw.id);
  
#line 5079 
  __retres = 0;
  
#line 5079 
  goto return_label;
  err_probe_ports: 
#line 5081 
  ;
  
#line 5082 
  rocker_free_tbls(rocker);
  err_init_tbls: 
#line 5083 
  ;
  
#line 5084 
  ;
  
#line 5084 
  tmp_5 = rocker_msix_vector((struct rocker const *)rocker,1U);
  
#line 5084 
  ldv_free_irq_128(tmp_5,(void *)rocker);
  err_request_event_irq: 
#line 5085 
  ;
  
#line 5086 
  ;
  
#line 5086 
  tmp_6 = rocker_msix_vector((struct rocker const *)rocker,0U);
  
#line 5086 
  ldv_free_irq_129(tmp_6,(void *)rocker);
  err_request_cmd_irq: 
#line 5087 
  ;
  
#line 5088 
  rocker_dma_rings_fini(rocker);
  err_dma_rings_init: 
#line 5089 
  ;
  err_basic_hw_test: 
#line 5090 
  ;
  
#line 5091 
  rocker_msix_fini((struct rocker const *)rocker);
  err_msix_init: 
#line 5092 
  ;
  
#line 5093 
  iounmap((void volatile *)rocker->hw_addr);
  err_ioremap: 
#line 5094 
  ;
  err_pci_resource_len_check: 
#line 5095 
  ;
  err_pci_set_dma_mask: 
#line 5096 
  ;
  
#line 5097 
  pci_release_regions(pdev);
  err_pci_request_regions: 
#line 5098 
  ;
  
#line 5099 
  pci_disable_device(pdev);
  err_pci_enable_device: 
#line 5100 
  ;
  
#line 5101 
  kfree((void const *)rocker);
  
#line 5102 
  __retres = err;
  return_label: 
#line 5102 
                return __retres;
}


#line 5105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_remove(struct pci_dev *pdev)
{
  u32 tmp_0;
  u32 tmp_1;
  
#line 5107 
  struct rocker *rocker = pci_get_drvdata(pdev);
  
#line 5109 
  rocker_free_tbls(rocker);
  
#line 5110 
  writel(1U,(void volatile *)(rocker->hw_addr + 768U));
  
#line 5111 
  rocker_remove_ports((struct rocker const *)rocker);
  
#line 5112 
  ;
  
#line 5112 
  tmp_0 = rocker_msix_vector((struct rocker const *)rocker,1U);
  
#line 5112 
  ldv_free_irq_130(tmp_0,(void *)rocker);
  
#line 5113 
  ;
  
#line 5113 
  tmp_1 = rocker_msix_vector((struct rocker const *)rocker,0U);
  
#line 5113 
  ldv_free_irq_131(tmp_1,(void *)rocker);
  
#line 5114 
  rocker_dma_rings_fini(rocker);
  
#line 5115 
  rocker_msix_fini((struct rocker const *)rocker);
  
#line 5116 
  iounmap((void volatile *)rocker->hw_addr);
  
#line 5117 
  pci_release_regions(rocker->pdev);
  
#line 5118 
  pci_disable_device(rocker->pdev);
  
#line 5119 
  kfree((void const *)rocker);
  
#line 5120 
  return;
}


#line 5122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static struct pci_driver rocker_pci_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = (char const *)(& rocker_driver_name), .id_table = (struct pci_device_id const *)(& rocker_pci_id_table), .probe = & rocker_probe, .remove = & rocker_remove, .suspend = (int (*)(struct pci_dev *, pm_message_t ))0, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = (int (*)(struct pci_dev *))0, .shutdown = (void (*)(struct pci_dev *))0, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = (struct pci_error_handlers const *)0, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = (struct dev_pm_ops const *)0, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 5133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static bool rocker_port_dev_check(struct net_device const *dev)
{
  bool __retres;
  
#line 5135 
  __retres = (_Bool)(dev->netdev_ops == & rocker_port_netdev_ops);
  
#line 5135 
  return __retres;
}


#line 5138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_bridge_join(struct rocker_port *rocker_port, struct net_device *bridge)
{
  int __retres;
  int err;
  int tmp;
  
#line 5141 
  u16 untagged_vid = (unsigned short)0U;
  
#line 5150 
  err = rocker_port_vlan_del(rocker_port,(unsigned short)((int)untagged_vid),(unsigned short)0);
  
#line 5151 
  if (err != 0) {
    
#line 5152 
    __retres = err;
    
#line 5152 
    goto return_label;
  }
  else ;
  
#line 5154 
  rocker_port_internal_vlan_id_put((struct rocker_port const *)rocker_port,(rocker_port->dev)->ifindex);
  
#line 5156 
  rocker_port->internal_vlan_id = rocker_port_internal_vlan_id_get(rocker_port,bridge->ifindex);
  
#line 5159 
  rocker_port->bridge_dev = bridge;
  
#line 5161 
  tmp = rocker_port_vlan_add(rocker_port,(enum switchdev_trans)SWITCHDEV_TRANS_NONE,(unsigned short)((int)untagged_vid),(unsigned short)0);
  
#line 5161 
  __retres = tmp;
  return_label: 
#line 5161 
                return __retres;
}


#line 5165  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_bridge_leave(struct rocker_port *rocker_port)
{
  int __retres;
  int err;
  
#line 5167 
  u16 untagged_vid = (unsigned short)0U;
  
#line 5170 
  err = rocker_port_vlan_del(rocker_port,(unsigned short)((int)untagged_vid),(unsigned short)0);
  
#line 5171 
  if (err != 0) {
    
#line 5172 
    __retres = err;
    
#line 5172 
    goto return_label;
  }
  else ;
  
#line 5174 
  rocker_port_internal_vlan_id_put((struct rocker_port const *)rocker_port,(rocker_port->bridge_dev)->ifindex);
  
#line 5176 
  rocker_port->internal_vlan_id = rocker_port_internal_vlan_id_get(rocker_port,(rocker_port->dev)->ifindex);
  
#line 5180 
  rocker_port->bridge_dev = (struct net_device *)0;
  
#line 5182 
  err = rocker_port_vlan_add(rocker_port,(enum switchdev_trans)SWITCHDEV_TRANS_NONE,(unsigned short)((int)untagged_vid),(unsigned short)0);
  
#line 5184 
  if (err != 0) {
    
#line 5185 
    __retres = err;
    
#line 5185 
    goto return_label;
  }
  else ;
  
#line 5187 
  if (((rocker_port->dev)->flags & 1U) != 0U) 
#line 5188 
                                              err = rocker_port_fwd_enable(rocker_port,(enum switchdev_trans)SWITCHDEV_TRANS_NONE,0); else ;
  
#line 5191 
  __retres = err;
  return_label: 
#line 5191 
                return __retres;
}


#line 5194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_port_master_changed(struct net_device *dev)
{
  
#line 5196 
  struct rocker_port *rocker_port = netdev_priv((struct net_device const *)dev);
  
#line 5197 
  struct net_device *master = netdev_master_upper_dev_get(dev);
  
#line 5198 
  int err = 0;
  
#line 5206 
  if (master != (struct net_device *)0 && master->rtnl_link_ops != (struct rtnl_link_ops const *)0) {
    int tmp_2;
    
#line 5206 
    tmp_2 = strcmp((master->rtnl_link_ops)->kind,"bridge");
    
#line 5206 
    if (tmp_2 == 0) 
#line 5208 
                    err = rocker_port_bridge_join(rocker_port,master); else 
                                                                    
#line 5206 
                                                                    goto _LAND;
  }
  else {
    bool tmp_1;
    _LAND: 
#line 5209 
    tmp_1 = rocker_port_is_bridged((struct rocker_port const *)rocker_port);
    
#line 5209 
    if ((int)tmp_1 != 0) 
#line 5210 
                         err = rocker_port_bridge_leave(rocker_port); else ;
  }
  
#line 5212 
  return err;
}


#line 5215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_netdevice_event(struct notifier_block *unused, unsigned long event, void *ptr)
{
  int __retres;
  struct net_device *dev;
  int err;
  
#line 5221 
  switch (event) {
    int tmp_0;
    bool tmp;
    case (unsigned long)21: 
#line 5222 
    ;
    
#line 5223 
    dev = netdev_notifier_info_to_dev((struct netdev_notifier_info const *)ptr);
    
#line 5224 
    tmp = rocker_port_dev_check((struct net_device const *)dev);
    
#line 5224 
    if (tmp) 
#line 5224 
             tmp_0 = 0; else 
#line 5224 
                             tmp_0 = 1;
    
#line 5224 
    if (tmp_0) {
      
#line 5225 
      __retres = 0;
      
#line 5225 
      goto return_label;
    }
    else ;
    
#line 5226 
    err = rocker_port_master_changed(dev);
    
#line 5227 
    if (err != 0) 
#line 5228 
                  netdev_warn((struct net_device const *)dev,"failed to reflect master change (err %d)\n",err); else ;
    
#line 5231 
    goto ldv_62459;
  }
  ldv_62459: 
#line 5234 
  ;
  
#line 5234 
  __retres = 0;
  return_label: 
#line 5234 
                return __retres;
}


#line 5237  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static struct notifier_block rocker_netdevice_nb = {.notifier_call = & rocker_netdevice_event, .next = (struct notifier_block *)0, .priority = 0};

#line 5245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_neigh_update(struct net_device *dev, struct neighbour *n)
{
  int tmp_0;
  int tmp_1;
  
#line 5247 
  struct rocker_port *rocker_port = netdev_priv((struct net_device const *)dev);
  
#line 5248 
  if (((int)n->nud_state & 222) == 0) 
#line 5248 
                                      tmp_0 = 3; else 
#line 5248 
                                                      tmp_0 = 2;
  
#line 5248 
  int flags = tmp_0;
  
#line 5250 
  __be32 ip_addr = *((__be32 *)(& n->primary_key));
  
#line 5252 
  tmp_1 = rocker_port_ipv4_neigh(rocker_port,(enum switchdev_trans)SWITCHDEV_TRANS_NONE,flags,ip_addr,(u8 const *)(& n->ha));
  
#line 5252 
  return tmp_1;
}


#line 5256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_netevent_event(struct notifier_block *unused, unsigned long event, void *ptr)
{
  int __retres;
  struct net_device *dev;
  int err;
  
#line 5260 
  struct neighbour *n = (struct neighbour *)ptr;
  
#line 5263 
  switch (event) {
    int tmp_0;
    bool tmp;
    case (unsigned long)1: 
#line 5264 
    ;
    
#line 5265 
    if (n->tbl != & arp_tbl) {
      
#line 5266 
      __retres = 0;
      
#line 5266 
      goto return_label;
    }
    else ;
    
#line 5267 
    dev = n->dev;
    
#line 5268 
    tmp = rocker_port_dev_check((struct net_device const *)dev);
    
#line 5268 
    if (tmp) 
#line 5268 
             tmp_0 = 0; else 
#line 5268 
                             tmp_0 = 1;
    
#line 5268 
    if (tmp_0) {
      
#line 5269 
      __retres = 0;
      
#line 5269 
      goto return_label;
    }
    else ;
    
#line 5270 
    err = rocker_neigh_update(dev,n);
    
#line 5271 
    if (err != 0) 
#line 5272 
                  netdev_warn((struct net_device const *)dev,"failed to handle neigh update (err %d)\n",err); else ;
    
#line 5275 
    goto ldv_62477;
  }
  ldv_62477: 
#line 5278 
  ;
  
#line 5278 
  __retres = 0;
  return_label: 
#line 5278 
                return __retres;
}


#line 5281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static struct notifier_block rocker_netevent_nb = {.notifier_call = & rocker_netevent_event, .next = (struct notifier_block *)0, .priority = 0};

#line 5289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static int rocker_module_init(void)
{
  int __retres;
  int err;
  
#line 5293 
  register_netdevice_notifier(& rocker_netdevice_nb);
  
#line 5294 
  register_netevent_notifier(& rocker_netevent_nb);
  
#line 5295 
  err = ldv___pci_register_driver_132(& rocker_pci_driver,& __this_module,"rocker");
  
#line 5296 
  if (err != 0) 
#line 5297 
                goto err_pci_register_driver; else ;
  
#line 5298 
  __retres = 0;
  
#line 5298 
  goto return_label;
  err_pci_register_driver: 
#line 5300 
  ;
  
#line 5301 
  unregister_netevent_notifier(& rocker_netevent_nb);
  
#line 5302 
  unregister_netdevice_notifier(& rocker_netdevice_nb);
  
#line 5303 
  __retres = err;
  return_label: 
#line 5303 
                return __retres;
}


#line 5306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
static void rocker_module_exit(void)
{
  
#line 5308 
  unregister_netevent_notifier(& rocker_netevent_nb);
  
#line 5309 
  unregister_netdevice_notifier(& rocker_netdevice_nb);
  
#line 5310 
  ldv_pci_unregister_driver_133(& rocker_pci_driver);
  
#line 5311 
  return;
}


#line 5320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/rocker/rocker.c"
struct pci_device_id const __mod_pci__rocker_pci_id_table_device_table[2U];

#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
int (*ldv_emg_alias_switchdev_port_fdb_dump_2)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) = & switchdev_port_fdb_dump;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
int (*ldv_emg_alias_switchdev_port_bridge_dellink_14)(struct net_device *, struct nlmsghdr *, unsigned short ) = & switchdev_port_bridge_dellink;

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
int (*ldv_emg_alias_switchdev_port_fdb_add_5)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, unsigned short , unsigned short ) = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, unsigned short , unsigned short ))(& switchdev_port_fdb_add);

#line 59  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
struct pci_driver *ldv_emg_alias_rocker_pci_driver_2 = & rocker_pci_driver;

#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
int (*ldv_emg_alias_switchdev_port_bridge_getlink_8)(struct sk_buff *, unsigned int , unsigned int , struct net_device *, unsigned int , int ) = & switchdev_port_bridge_getlink;

#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
unsigned int (*ldv_emg_alias_ethtool_op_get_link_4)(struct net_device *) = & ethtool_op_get_link;

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
int (*ldv_emg_alias_switchdev_port_fdb_del_6)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, unsigned short ) = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, unsigned short ))(& switchdev_port_fdb_del);

#line 63  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
int (*ldv_emg_alias_switchdev_port_bridge_setlink_15)(struct net_device *, struct nlmsghdr *, unsigned short ) = & switchdev_port_bridge_setlink;

#line 66 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 67 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 68 
_Bool ldv_emg_schedule_work(struct work_struct *arg0);


#line 69 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 70 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 71 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 72 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 73 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 74 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 78  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
enum irqreturn ldv_emg_wrapper_rocker_test_irq_handler_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 79 
  tmp = rocker_test_irq_handler(arg0,arg1);
  
#line 79 
  return tmp;
}


#line 83  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
int ldv_emg_wrapper_rocker_port_set_settings_9(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 84 
  tmp = rocker_port_set_settings(arg0,arg1);
  
#line 84 
  return tmp;
}


#line 88  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
int ldv_emg_wrapper_rocker_port_get_settings_3(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 89 
  tmp = rocker_port_get_settings(arg0,arg1);
  
#line 89 
  return tmp;
}


#line 93  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
void ldv_emg_wrapper_rocker_remove_3(struct pci_dev *arg0)
{
  
#line 94 
  rocker_remove(arg0);
  
#line 95 
  return;
}


#line 98  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
enum irqreturn ldv_emg_wrapper_rocker_cmd_irq_handler_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 99 
  tmp = rocker_cmd_irq_handler(arg0,arg1);
  
#line 99 
  return tmp;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
int ldv_emg_rocker_module_init(void)
{
  int tmp;
  
#line 104 
  tmp = rocker_module_init();
  
#line 104 
  return tmp;
}


#line 107  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
int ldv_emg_wrapper_rocker_port_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 108 
  tmp = rocker_port_open(arg0);
  
#line 108 
  return tmp;
}


#line 112  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
int ldv_emg_wrapper_rocker_port_get_phys_port_name_12(struct net_device *arg0, char *arg1, unsigned long arg2)
{
  int tmp;
  
#line 113 
  tmp = rocker_port_get_phys_port_name(arg0,arg1,arg2);
  
#line 113 
  return tmp;
}


#line 117  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
int ldv_emg_wrapper_rocker_port_stop_2(struct net_device *arg0)
{
  int tmp;
  
#line 118 
  tmp = rocker_port_stop(arg0);
  
#line 118 
  return tmp;
}


#line 122  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
enum netdev_tx ldv_emg_wrapper_rocker_port_xmit_16(struct sk_buff *arg0, struct net_device *arg1)
{
  enum netdev_tx tmp;
  
#line 123 
  tmp = rocker_port_xmit(arg0,arg1);
  
#line 123 
  return tmp;
}


#line 127  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
enum irqreturn ldv_emg_wrapper_rocker_event_irq_handler_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 128 
  tmp = rocker_event_irq_handler(arg0,arg1);
  
#line 128 
  return tmp;
}


#line 132  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
enum irqreturn ldv_emg_wrapper_rocker_rx_irq_handler_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 133 
  tmp = rocker_rx_irq_handler(arg0,arg1);
  
#line 133 
  return tmp;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
void ldv_emg_rocker_module_exit(void)
{
  
#line 138 
  rocker_module_exit();
  
#line 139 
  return;
}


#line 141  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
int ldv_emg_wrapper_rocker_port_get_sset_count_10(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 142 
  tmp = rocker_port_get_sset_count(arg0,arg1);
  
#line 142 
  return tmp;
}


#line 146  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
int ldv_emg_wrapper_rocker_port_set_mac_address_17(struct net_device *arg0, void *arg1)
{
  int tmp;
  
#line 147 
  tmp = rocker_port_set_mac_address(arg0,arg1);
  
#line 147 
  return tmp;
}


#line 151  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
enum irqreturn ldv_emg_wrapper_rocker_tx_irq_handler_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 152 
  tmp = rocker_tx_irq_handler(arg0,arg1);
  
#line 152 
  return tmp;
}


#line 156  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
int ldv_emg_wrapper_rocker_probe_2(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 157 
  tmp = rocker_probe(arg0,(struct pci_device_id const *)arg1);
  
#line 157 
  return tmp;
}


#line 161  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
void ldv_emg_wrapper_rocker_port_get_stats_7(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  
#line 162 
  rocker_port_get_stats(arg0,arg1,arg2);
  
#line 163 
  return;
}


#line 166  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
void ldv_emg_wrapper_rocker_port_get_strings_13(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  
#line 167 
  rocker_port_get_strings(arg0,arg1,arg2);
  
#line 168 
  return;
}


#line 171  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
void ldv_emg_wrapper_rocker_port_get_drvinfo_11(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 172 
  rocker_port_get_drvinfo(arg0,arg1);
  
#line 173 
  return;
}


#line 191  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static bool IS_ERR(void const *ptr)
{
  bool __retres;
  long ret;
  
#line 195 
  ret = ldv_is_err(ptr);
  
#line 196 
  __retres = (_Bool)(ret != 0L);
  
#line 196 
  return __retres;
}


#line 244  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static int atomic_dec_and_test(atomic_t *v)
{
  int tmp;
  
#line 247 
  tmp = ldv_atomic_dec_and_test(v);
  
#line 247 
  return tmp;
}


#line 587  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void *kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 590 
  tmp = ldv_kmalloc_array(n,size,flags);
  
#line 590 
  return tmp;
}


#line 594  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 597 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 597 
  return tmp;
}


#line 601  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 604 
  tmp = ldv_kzalloc(size,flags);
  
#line 604 
  return tmp;
}


#line 857  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static int ldv_request_irq_73(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 861 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 861 
  return tmp;
}


#line 865  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_free_irq_74(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 869 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 870 
  return;
}


#line 873  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_spin_lock_75(spinlock_t *lock)
{
  
#line 877 
  ldv_spin_model_lock((char *)"cmd_ring_lock_of_rocker");
  
#line 879 
  spin_lock(lock);
  
#line 880 
  return;
}


#line 883  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_spin_unlock_76(spinlock_t *lock)
{
  
#line 887 
  ldv_spin_model_unlock((char *)"cmd_ring_lock_of_rocker");
  
#line 889 
  spin_unlock(lock);
  
#line 890 
  return;
}


#line 893  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv___ldv_spin_lock_77(spinlock_t *ldv_func_arg1)
{
  
#line 897 
  ldv_spin_model_lock((char *)"cmd_ring_lock_of_rocker");
  
#line 899 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 900 
  return;
}


#line 903  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_spin_unlock_irqrestore_78(spinlock_t *lock, unsigned long flags)
{
  
#line 907 
  ldv_spin_model_unlock((char *)"cmd_ring_lock_of_rocker");
  
#line 909 
  spin_unlock_irqrestore(lock,flags);
  
#line 910 
  return;
}


#line 913  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_spin_unlock_irqrestore_79(spinlock_t *lock, unsigned long flags)
{
  
#line 917 
  ldv_spin_model_unlock((char *)"cmd_ring_lock_of_rocker");
  
#line 919 
  spin_unlock_irqrestore(lock,flags);
  
#line 920 
  return;
}


#line 923  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_spin_unlock_irqrestore_80(spinlock_t *lock, unsigned long flags)
{
  
#line 927 
  ldv_spin_model_unlock((char *)"cmd_ring_lock_of_rocker");
  
#line 929 
  spin_unlock_irqrestore(lock,flags);
  
#line 930 
  return;
}


#line 933  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv___ldv_spin_lock_81(spinlock_t *ldv_func_arg1)
{
  
#line 937 
  ldv_spin_model_lock((char *)"flow_tbl_lock_of_rocker");
  
#line 939 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 940 
  return;
}


#line 943  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_spin_unlock_irqrestore_82(spinlock_t *lock, unsigned long flags)
{
  
#line 947 
  ldv_spin_model_unlock((char *)"flow_tbl_lock_of_rocker");
  
#line 949 
  spin_unlock_irqrestore(lock,flags);
  
#line 950 
  return;
}


#line 953  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv___ldv_spin_lock_83(spinlock_t *ldv_func_arg1)
{
  
#line 957 
  ldv_spin_model_lock((char *)"group_tbl_lock_of_rocker");
  
#line 959 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 960 
  return;
}


#line 963  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_spin_unlock_irqrestore_84(spinlock_t *lock, unsigned long flags)
{
  
#line 967 
  ldv_spin_model_unlock((char *)"group_tbl_lock_of_rocker");
  
#line 969 
  spin_unlock_irqrestore(lock,flags);
  
#line 970 
  return;
}


#line 973  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv___ldv_spin_lock_85(spinlock_t *ldv_func_arg1)
{
  
#line 977 
  ldv_spin_model_lock((char *)"fdb_tbl_lock_of_rocker");
  
#line 979 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 980 
  return;
}


#line 983  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_spin_unlock_irqrestore_86(spinlock_t *lock, unsigned long flags)
{
  
#line 987 
  ldv_spin_model_unlock((char *)"fdb_tbl_lock_of_rocker");
  
#line 989 
  spin_unlock_irqrestore(lock,flags);
  
#line 990 
  return;
}


#line 993  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv___ldv_spin_lock_87(spinlock_t *ldv_func_arg1)
{
  
#line 997 
  ldv_spin_model_lock((char *)"internal_vlan_tbl_lock_of_rocker");
  
#line 999 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1000 
  return;
}


#line 1003  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_spin_unlock_irqrestore_88(spinlock_t *lock, unsigned long flags)
{
  
#line 1007 
  ldv_spin_model_unlock((char *)"internal_vlan_tbl_lock_of_rocker");
  
#line 1009 
  spin_unlock_irqrestore(lock,flags);
  
#line 1010 
  return;
}


#line 1013  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv___ldv_spin_lock_89(spinlock_t *ldv_func_arg1)
{
  
#line 1017 
  ldv_spin_model_lock((char *)"neigh_tbl_lock_of_rocker");
  
#line 1019 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1020 
  return;
}


#line 1023  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_spin_unlock_irqrestore_90(spinlock_t *lock, unsigned long flags)
{
  
#line 1027 
  ldv_spin_model_unlock((char *)"neigh_tbl_lock_of_rocker");
  
#line 1029 
  spin_unlock_irqrestore(lock,flags);
  
#line 1030 
  return;
}


#line 1033  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv___ldv_spin_lock_91(spinlock_t *ldv_func_arg1)
{
  
#line 1037 
  ldv_spin_model_lock((char *)"flow_tbl_lock_of_rocker");
  
#line 1039 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1040 
  return;
}


#line 1043  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_spin_unlock_irqrestore_92(spinlock_t *lock, unsigned long flags)
{
  
#line 1047 
  ldv_spin_model_unlock((char *)"flow_tbl_lock_of_rocker");
  
#line 1049 
  spin_unlock_irqrestore(lock,flags);
  
#line 1050 
  return;
}


#line 1053  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv___ldv_spin_lock_93(spinlock_t *ldv_func_arg1)
{
  
#line 1057 
  ldv_spin_model_lock((char *)"flow_tbl_lock_of_rocker");
  
#line 1059 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1060 
  return;
}


#line 1063  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_spin_unlock_irqrestore_94(spinlock_t *lock, unsigned long flags)
{
  
#line 1067 
  ldv_spin_model_unlock((char *)"flow_tbl_lock_of_rocker");
  
#line 1069 
  spin_unlock_irqrestore(lock,flags);
  
#line 1070 
  return;
}


#line 1073  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv___ldv_spin_lock_95(spinlock_t *ldv_func_arg1)
{
  
#line 1077 
  ldv_spin_model_lock((char *)"group_tbl_lock_of_rocker");
  
#line 1079 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1080 
  return;
}


#line 1083  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_spin_unlock_irqrestore_96(spinlock_t *lock, unsigned long flags)
{
  
#line 1087 
  ldv_spin_model_unlock((char *)"group_tbl_lock_of_rocker");
  
#line 1089 
  spin_unlock_irqrestore(lock,flags);
  
#line 1090 
  return;
}


#line 1093  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv___ldv_spin_lock_97(spinlock_t *ldv_func_arg1)
{
  
#line 1097 
  ldv_spin_model_lock((char *)"group_tbl_lock_of_rocker");
  
#line 1099 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1100 
  return;
}


#line 1103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_spin_unlock_irqrestore_98(spinlock_t *lock, unsigned long flags)
{
  
#line 1107 
  ldv_spin_model_unlock((char *)"group_tbl_lock_of_rocker");
  
#line 1109 
  spin_unlock_irqrestore(lock,flags);
  
#line 1110 
  return;
}


#line 1113  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv___ldv_spin_lock_99(spinlock_t *ldv_func_arg1)
{
  
#line 1117 
  ldv_spin_model_lock((char *)"neigh_tbl_lock_of_rocker");
  
#line 1119 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1120 
  return;
}


#line 1123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_spin_unlock_irqrestore_100(spinlock_t *lock, unsigned long flags)
{
  
#line 1127 
  ldv_spin_model_unlock((char *)"neigh_tbl_lock_of_rocker");
  
#line 1129 
  spin_unlock_irqrestore(lock,flags);
  
#line 1130 
  return;
}


#line 1133  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv___ldv_spin_lock_101(spinlock_t *ldv_func_arg1)
{
  
#line 1137 
  ldv_spin_model_lock((char *)"neigh_tbl_lock_of_rocker");
  
#line 1139 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1140 
  return;
}


#line 1143  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_spin_unlock_irqrestore_102(spinlock_t *lock, unsigned long flags)
{
  
#line 1147 
  ldv_spin_model_unlock((char *)"neigh_tbl_lock_of_rocker");
  
#line 1149 
  spin_unlock_irqrestore(lock,flags);
  
#line 1150 
  return;
}


#line 1153  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static bool ldv_schedule_work_103(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1157 
  tmp = ldv_emg_schedule_work(work);
  
#line 1157 
  __retres = tmp != 0;
  
#line 1157 
  return __retres;
}


#line 1161  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv___ldv_spin_lock_104(spinlock_t *ldv_func_arg1)
{
  
#line 1165 
  ldv_spin_model_lock((char *)"fdb_tbl_lock_of_rocker");
  
#line 1167 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1168 
  return;
}


#line 1171  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_spin_unlock_irqrestore_105(spinlock_t *lock, unsigned long flags)
{
  
#line 1175 
  ldv_spin_model_unlock((char *)"fdb_tbl_lock_of_rocker");
  
#line 1177 
  spin_unlock_irqrestore(lock,flags);
  
#line 1178 
  return;
}


#line 1181  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv___ldv_spin_lock_106(spinlock_t *ldv_func_arg1)
{
  
#line 1185 
  ldv_spin_model_lock((char *)"fdb_tbl_lock_of_rocker");
  
#line 1187 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1188 
  return;
}


#line 1191  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_spin_unlock_irqrestore_107(spinlock_t *lock, unsigned long flags)
{
  
#line 1195 
  ldv_spin_model_unlock((char *)"fdb_tbl_lock_of_rocker");
  
#line 1197 
  spin_unlock_irqrestore(lock,flags);
  
#line 1198 
  return;
}


#line 1201  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv___ldv_spin_lock_108(spinlock_t *ldv_func_arg1)
{
  
#line 1205 
  ldv_spin_model_lock((char *)"internal_vlan_tbl_lock_of_rocker");
  
#line 1207 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1208 
  return;
}


#line 1211  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_spin_unlock_irqrestore_109(spinlock_t *lock, unsigned long flags)
{
  
#line 1215 
  ldv_spin_model_unlock((char *)"internal_vlan_tbl_lock_of_rocker");
  
#line 1217 
  spin_unlock_irqrestore(lock,flags);
  
#line 1218 
  return;
}


#line 1221  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv___ldv_spin_lock_110(spinlock_t *ldv_func_arg1)
{
  
#line 1225 
  ldv_spin_model_lock((char *)"internal_vlan_tbl_lock_of_rocker");
  
#line 1227 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1228 
  return;
}


#line 1231  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_spin_unlock_irqrestore_111(spinlock_t *lock, unsigned long flags)
{
  
#line 1235 
  ldv_spin_model_unlock((char *)"internal_vlan_tbl_lock_of_rocker");
  
#line 1237 
  spin_unlock_irqrestore(lock,flags);
  
#line 1238 
  return;
}


#line 1241  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static int ldv_request_irq_112(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1245 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1245 
  return tmp;
}


#line 1249  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static int ldv_request_irq_113(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1253 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1253 
  return tmp;
}


#line 1257  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_free_irq_114(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1261 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1262 
  return;
}


#line 1265  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_free_irq_115(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1269 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1270 
  return;
}


#line 1273  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_free_irq_116(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1277 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1278 
  return;
}


#line 1281  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_free_irq_117(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1285 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1286 
  return;
}


#line 1289  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv___ldv_spin_lock_118(spinlock_t *ldv_func_arg1)
{
  
#line 1293 
  ldv_spin_model_lock((char *)"fdb_tbl_lock_of_rocker");
  
#line 1295 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1296 
  return;
}


#line 1299  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_spin_unlock_irqrestore_119(spinlock_t *lock, unsigned long flags)
{
  
#line 1303 
  ldv_spin_model_unlock((char *)"fdb_tbl_lock_of_rocker");
  
#line 1305 
  spin_unlock_irqrestore(lock,flags);
  
#line 1306 
  return;
}


#line 1309  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_unregister_netdev_120(struct net_device *ldv_func_arg1)
{
  
#line 1313 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1314 
  return;
}


#line 1317  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_free_netdev_121(struct net_device *ldv_func_arg1)
{
  
#line 1321 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1322 
  return;
}


#line 1325  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_122(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 1329 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1329 
  return tmp;
}


#line 1333  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static int ldv_register_netdev_123(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 1337 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 1337 
  return tmp;
}


#line 1341  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_unregister_netdev_124(struct net_device *ldv_func_arg1)
{
  
#line 1345 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1346 
  return;
}


#line 1349  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_free_netdev_125(struct net_device *ldv_func_arg1)
{
  
#line 1353 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1354 
  return;
}


#line 1357  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static int ldv_request_irq_126(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1361 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1361 
  return tmp;
}


#line 1365  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static int ldv_request_irq_127(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1369 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1369 
  return tmp;
}


#line 1373  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_free_irq_128(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1377 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1378 
  return;
}


#line 1381  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_free_irq_129(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1385 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1386 
  return;
}


#line 1389  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_free_irq_130(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1393 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1394 
  return;
}


#line 1397  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_free_irq_131(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1401 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1402 
  return;
}


#line 1405  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static int ldv___pci_register_driver_132(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 1409 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 1409 
  return tmp;
}


#line 1413  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/weaver/.tmp_rocker.c.aux"
static void ldv_pci_unregister_driver_133(struct pci_driver *ldv_func_arg1)
{
  
#line 1417 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 1418 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 69  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_5_1(struct net_device *arg0);


#line 70 
int main(void);


#line 71 
void ldv_dispatch_register_9_4(struct net_device *arg0);


#line 73 
void ldv_dispatch_irq_deregister_3_1(int arg0);


#line 75 
void *ldv_interrupt_scenario_17(void *arg0);


#line 77 
void *ldv_interrupt_scenario_16(void *arg0);


#line 78 
void *ldv_random_allocationless_scenario_13(void *arg0);


#line 80 
void *ldv_initialization_1(void *arg0);


#line 82 
void *ldv_pci_scenario_11(void *arg0);


#line 83 
void ldv_dispatch_deregister_8_1(struct pci_driver *arg0);


#line 84 
void *ldv_interrupt_scenario_15(void *arg0);


#line 86 
void ldv_dispatch_irq_register_10_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 88 
void ldv_dispatch_register_6_3(struct pci_driver *arg0);


#line 90 
void *ldv_interrupt_scenario_12(void *arg0);


#line 91 
void *ldv_interrupt_scenario_14(void *arg0);


#line 95  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_17;

#line 96  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_12;

#line 97  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_13;

#line 98  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_11;

#line 99  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_16;

#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_14;

#line 101  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_15;

#line 105  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_5_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_13 *cf_arg_13;
  int tmp;
  
#line 108 
  tmp = ldv_undef_int();
  
#line 108 
  switch (tmp) {
    case 0: 
#line 109 
    ;
    
#line 110 
    ret = pthread_join(ldv_thread_13,(void **)0);
    
#line 111 
    __VERIFIER_assume(ret == 0);
    
#line 112 
    goto ldv_44725;
    default: 
#line 114 
    ;
    
#line 114 
    __VERIFIER_assume(0);
  }
  ldv_44725: 
#line 115 
  ;
  
#line 116 
  return;
}


#line 120  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 123 
  ldv_initialize();
  
#line 126 
  ldv_initialization_1((void *)0);
  
#line 128 
  __retres = 0;
  
#line 128 
  return __retres;
}


#line 133  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_9_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_13 *cf_arg_13;
  int tmp;
  
#line 136 
  tmp = ldv_undef_int();
  
#line 136 
  switch (tmp) {
    case 0: 
#line 137 
    ;
    
#line 138 
    cf_arg_13 = (struct ldv_struct_random_allocationless_scenario_13 *)ldv_xmalloc(16UL);
    
#line 139 
    cf_arg_13->arg0 = arg0;
    
#line 140 
    ret = pthread_create(& ldv_thread_13,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_13,(void *)cf_arg_13);
    
#line 141 
    __VERIFIER_assume(ret == 0);
    
#line 142 
    goto ldv_44736;
    default: 
#line 144 
    ;
    
#line 144 
    __VERIFIER_assume(0);
  }
  ldv_44736: 
#line 145 
  ;
  
#line 146 
  return;
}


#line 150  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 153 
  struct pci_driver *ldv_6_pci_driver = ldv_emg_alias_rocker_pci_driver_2;
  
#line 157 
  tmp_0 = ldv_undef_int();
  
#line 157 
  if (tmp_0 != 0) {
    
#line 159 
    ldv_6_pci_driver = arg0;
    
#line 163 
    ldv_dispatch_register_6_3(ldv_6_pci_driver);
    
#line 167 
    __retres = 0;
    
#line 167 
    goto return_label;
  }
  else {
    int tmp;
    
#line 174 
    tmp = ldv_undef_int_negative();
    
#line 174 
    __retres = tmp;
    
#line 174 
    goto return_label;
  }
  return_label: 
#line 157 
                return __retres;
}


#line 184  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_3_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_3 *cf_arg_16;
  struct ldv_struct_free_irq_3 *cf_arg_17;
  struct ldv_struct_free_irq_3 *cf_arg_12;
  struct ldv_struct_free_irq_3 *cf_arg_14;
  struct ldv_struct_free_irq_3 *cf_arg_15;
  int tmp;
  
#line 191 
  tmp = ldv_undef_int();
  
#line 191 
  switch (tmp) {
    case 0: 
#line 192 
    ;
    
#line 193 
    ret = pthread_join(ldv_thread_16,(void **)0);
    
#line 194 
    __VERIFIER_assume(ret == 0);
    
#line 195 
    goto ldv_44754;
    case 1: 
#line 197 
    ;
    
#line 198 
    ret = pthread_join(ldv_thread_17,(void **)0);
    
#line 199 
    __VERIFIER_assume(ret == 0);
    
#line 200 
    goto ldv_44754;
    case 2: 
#line 202 
    ;
    
#line 203 
    ret = pthread_join(ldv_thread_12,(void **)0);
    
#line 204 
    __VERIFIER_assume(ret == 0);
    
#line 205 
    goto ldv_44754;
    case 3: 
#line 207 
    ;
    
#line 208 
    ret = pthread_join(ldv_thread_14,(void **)0);
    
#line 209 
    __VERIFIER_assume(ret == 0);
    
#line 210 
    goto ldv_44754;
    case 4: 
#line 212 
    ;
    
#line 213 
    ret = pthread_join(ldv_thread_15,(void **)0);
    
#line 214 
    __VERIFIER_assume(ret == 0);
    
#line 215 
    goto ldv_44754;
    default: 
#line 217 
    ;
    
#line 217 
    __VERIFIER_assume(0);
  }
  ldv_44754: 
#line 218 
  ;
  
#line 219 
  return;
}


#line 223  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_4_netdev;
  int tmp_0;
  
#line 230 
  tmp_0 = ldv_undef_int();
  
#line 230 
  if (tmp_0 != 0) {
    
#line 232 
    ldv_4_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 236 
    __retres = ldv_4_netdev;
    
#line 236 
    goto return_label;
  }
  else {
    
#line 243 
    __retres = (struct net_device *)0;
    
#line 243 
    goto return_label;
  }
  return_label: 
#line 230 
                return __retres;
}


#line 253  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_17(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_17_ret_val;
  int ldv_17_line;
  void *ldv_17_data;
  enum irqreturn (*ldv_17_thread)(int , void *);
  int tmp;
  
#line 259 
  enum irqreturn (*ldv_17_callback)(int , void *) = & ldv_emg_wrapper_rocker_cmd_irq_handler_2;
  
#line 262 
  struct ldv_struct_interrupt_scenario_12 *data = (struct ldv_struct_interrupt_scenario_12 *)arg0;
  
#line 267 
  if (data != (struct ldv_struct_interrupt_scenario_12 *)0) {
    
#line 268 
    ldv_17_line = data->arg0;
    
#line 269 
    ldv_17_callback = data->arg1;
    
#line 270 
    ldv_17_thread = data->arg2;
    
#line 271 
    ldv_17_data = data->arg3;
    
#line 272 
    ldv_free((void *)data);
  }
  else ;
  
#line 278 
  ldv_switch_to_interrupt_context();
  
#line 280 
  ldv_17_ret_val = ldv_emg_wrapper_rocker_cmd_irq_handler_2(ldv_17_line,ldv_17_data);
  
#line 282 
  ldv_switch_to_process_context();
  
#line 285 
  tmp = ldv_undef_int();
  
#line 285 
  if (tmp != 0) {
    
#line 287 
    __VERIFIER_assume(ldv_17_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 291 
    if (ldv_17_thread != (enum irqreturn (*)(int , void *))0) 
#line 293 
                                                              (*ldv_17_thread)(ldv_17_line,ldv_17_data); else ;
  }
  else 
#line 300 
       __VERIFIER_assume(ldv_17_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 309 
  __retres = (void *)0;
  
#line 309 
  goto return_label;
  
#line 311 
  __retres = (void *)0;
  return_label: 
#line 311 
                return __retres;
}


#line 316  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_10_line;
  void *ldv_10_data;
  enum irqreturn (*ldv_10_thread)(int , void *);
  int tmp_0;
  
#line 321 
  enum irqreturn (*ldv_10_callback)(int , void *) = & ldv_emg_wrapper_rocker_tx_irq_handler_2;
  
#line 326 
  tmp_0 = ldv_undef_int();
  
#line 326 
  if (tmp_0 != 0) {
    
#line 328 
    ldv_10_line = (int)arg0;
    
#line 329 
    ldv_10_callback = arg1;
    
#line 330 
    ldv_10_thread = (enum irqreturn (*)(int , void *))0;
    
#line 331 
    ldv_10_data = arg4;
    
#line 335 
    ldv_dispatch_irq_register_10_3(ldv_10_line,ldv_10_callback,ldv_10_thread,ldv_10_data);
    
#line 339 
    __retres = 0;
    
#line 339 
    goto return_label;
  }
  else {
    int tmp;
    
#line 346 
    tmp = ldv_undef_int_negative();
    
#line 346 
    __retres = tmp;
    
#line 346 
    goto return_label;
  }
  return_label: 
#line 326 
                return __retres;
}


#line 356  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_16(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_16_ret_val;
  int ldv_16_line;
  void *ldv_16_data;
  enum irqreturn (*ldv_16_thread)(int , void *);
  int tmp;
  
#line 362 
  enum irqreturn (*ldv_16_callback)(int , void *) = & ldv_emg_wrapper_rocker_event_irq_handler_2;
  
#line 365 
  struct ldv_struct_interrupt_scenario_12 *data = (struct ldv_struct_interrupt_scenario_12 *)arg0;
  
#line 370 
  if (data != (struct ldv_struct_interrupt_scenario_12 *)0) {
    
#line 371 
    ldv_16_line = data->arg0;
    
#line 372 
    ldv_16_callback = data->arg1;
    
#line 373 
    ldv_16_thread = data->arg2;
    
#line 374 
    ldv_16_data = data->arg3;
    
#line 375 
    ldv_free((void *)data);
  }
  else ;
  
#line 381 
  ldv_switch_to_interrupt_context();
  
#line 383 
  ldv_16_ret_val = ldv_emg_wrapper_rocker_event_irq_handler_2(ldv_16_line,ldv_16_data);
  
#line 385 
  ldv_switch_to_process_context();
  
#line 388 
  tmp = ldv_undef_int();
  
#line 388 
  if (tmp != 0) {
    
#line 390 
    __VERIFIER_assume(ldv_16_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 394 
    if (ldv_16_thread != (enum irqreturn (*)(int , void *))0) 
#line 396 
                                                              (*ldv_16_thread)(ldv_16_line,ldv_16_data); else ;
  }
  else 
#line 403 
       __VERIFIER_assume(ldv_16_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 412 
  __retres = (void *)0;
  
#line 412 
  goto return_label;
  
#line 414 
  __retres = (void *)0;
  return_label: 
#line 414 
                return __retres;
}


#line 419  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_13(void *arg0)
{
  void *__retres;
  int ldv_13_ldv_param_5_22;
  struct netlink_callback *ldv_13_ldv_param_1_3;
  struct sk_buff *ldv_13_ldv_param_0_18;
  struct nlattr **ldv_13_ldv_param_1_13;
  unsigned int ldv_13_ldv_param_4_21;
  unsigned long long *ldv_13_ldv_param_2_17;
  unsigned char *ldv_13_ldv_param_2_28;
  char *ldv_13_ldv_param_1_34;
  struct ethtool_drvinfo *ldv_13_ldv_param_1_25;
  struct ndmsg *ldv_13_ldv_param_0_7;
  struct nlattr **ldv_13_ldv_param_1_8;
  struct sk_buff *ldv_13_ldv_param_0_2;
  unsigned int ldv_13_ldv_param_1_19;
  unsigned short ldv_13_ldv_param_5_11;
  unsigned char *ldv_13_ldv_param_3_14;
  void *ldv_13_ldv_param_1_26;
  unsigned int ldv_13_ldv_param_2_20;
  unsigned int ldv_13_ldv_param_1_27;
  struct ethtool_stats *ldv_13_ldv_param_1_16;
  unsigned short ldv_13_ldv_param_4_10;
  struct nlmsghdr *ldv_13_ldv_param_1_29;
  unsigned long ldv_13_ldv_param_2_35;
  struct ethtool_cmd *ldv_13_ldv_param_1_23;
  struct ethtool_cmd *ldv_13_ldv_param_1_6;
  struct nlmsghdr *ldv_13_ldv_param_1_31;
  struct net_device *ldv_13_ldv_param_3_4;
  unsigned char *ldv_13_ldv_param_3_9;
  unsigned short ldv_13_ldv_param_4_15;
  unsigned short ldv_13_ldv_param_2_32;
  struct sk_buff *ldv_13_ldv_param_0_33;
  unsigned short ldv_13_ldv_param_2_30;
  struct net_device *ldv_13_container;
  int ldv_13_ldv_param_4_5;
  struct ndmsg *ldv_13_ldv_param_0_12;
  int ldv_13_ldv_param_1_24;
  int tmp_20;
  
#line 458 
  struct ldv_struct_random_allocationless_scenario_13 *data = (struct ldv_struct_random_allocationless_scenario_13 *)arg0;
  
#line 463 
  if (data != (struct ldv_struct_random_allocationless_scenario_13 *)0) {
    
#line 464 
    ldv_13_container = data->arg0;
    
#line 465 
    ldv_free((void *)data);
  }
  else ;
  
#line 473 
  goto ldv_call_13;
  
#line 475 
  __retres = (void *)0;
  
#line 475 
  goto return_label;
  ldv_call_13: 
#line 478 
  ;
  
#line 481 
  tmp_20 = ldv_undef_int();
  
#line 481 
  if (tmp_20 != 0) {
    int tmp_2;
    
#line 483 
    ldv_13_ldv_param_0_2 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
    
#line 484 
    ldv_13_ldv_param_3_4 = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 485 
    ldv_13_ldv_param_1_3 = (struct netlink_callback *)ldv_xmalloc_unknown_size(0UL);
    
#line 488 
    tmp_2 = ldv_undef_int();
    
#line 488 
    switch (tmp_2) {
      case 1: 
#line 489 
      ;
      
#line 492 
      (*ldv_emg_alias_switchdev_port_fdb_dump_2)(ldv_13_ldv_param_0_2,ldv_13_ldv_param_1_3,ldv_13_container,ldv_13_ldv_param_3_4,ldv_13_ldv_param_4_5);
      
#line 495 
      goto ldv_44850;
      case 2: 
#line 497 
      ;
      
#line 499 
      ldv_13_ldv_param_1_34 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 504 
      ldv_emg_wrapper_rocker_port_get_phys_port_name_12(ldv_13_container,ldv_13_ldv_param_1_34,ldv_13_ldv_param_2_35);
      
#line 508 
      ldv_free((void *)ldv_13_ldv_param_1_34);
      
#line 511 
      goto ldv_44850;
      case 3: 
#line 513 
      ;
      
#line 515 
      ldv_13_ldv_param_0_33 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 520 
      ldv_emg_wrapper_rocker_port_xmit_16(ldv_13_ldv_param_0_33,ldv_13_container);
      
#line 524 
      ldv_free((void *)ldv_13_ldv_param_0_33);
      
#line 527 
      goto ldv_44850;
      case 4: 
#line 529 
      ;
      
#line 531 
      ldv_13_ldv_param_1_31 = (struct nlmsghdr *)ldv_xmalloc_unknown_size(0UL);
      
#line 536 
      (*ldv_emg_alias_switchdev_port_bridge_setlink_15)(ldv_13_container,ldv_13_ldv_param_1_31,(unsigned short)((int)ldv_13_ldv_param_2_32));
      
#line 540 
      ldv_free((void *)ldv_13_ldv_param_1_31);
      
#line 543 
      goto ldv_44850;
      case 5: 
#line 545 
      ;
      
#line 547 
      ldv_13_ldv_param_1_29 = (struct nlmsghdr *)ldv_xmalloc_unknown_size(0UL);
      
#line 552 
      (*ldv_emg_alias_switchdev_port_bridge_dellink_14)(ldv_13_container,ldv_13_ldv_param_1_29,(unsigned short)((int)ldv_13_ldv_param_2_30));
      
#line 556 
      ldv_free((void *)ldv_13_ldv_param_1_29);
      
#line 559 
      goto ldv_44850;
      case 6: 
#line 561 
      ;
      
#line 563 
      ldv_13_ldv_param_2_28 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 568 
      ldv_emg_wrapper_rocker_port_get_strings_13(ldv_13_container,ldv_13_ldv_param_1_27,ldv_13_ldv_param_2_28);
      
#line 572 
      ldv_free((void *)ldv_13_ldv_param_2_28);
      
#line 575 
      goto ldv_44850;
      case 7: 
#line 577 
      ;
      
#line 579 
      ldv_13_ldv_param_1_26 = ldv_xmalloc_unknown_size(0UL);
      
#line 584 
      ldv_emg_wrapper_rocker_port_set_mac_address_17(ldv_13_container,ldv_13_ldv_param_1_26);
      
#line 588 
      ldv_free(ldv_13_ldv_param_1_26);
      
#line 591 
      goto ldv_44850;
      case 8: 
#line 593 
      ;
      
#line 595 
      ldv_13_ldv_param_1_25 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 600 
      ldv_emg_wrapper_rocker_port_get_drvinfo_11(ldv_13_container,ldv_13_ldv_param_1_25);
      
#line 604 
      ldv_free((void *)ldv_13_ldv_param_1_25);
      
#line 607 
      goto ldv_44850;
      case 9: 
#line 609 
      ;
      
#line 615 
      ldv_emg_wrapper_rocker_port_get_sset_count_10(ldv_13_container,ldv_13_ldv_param_1_24);
      
#line 621 
      goto ldv_44850;
      case 10: 
#line 623 
      ;
      
#line 625 
      ldv_13_ldv_param_1_23 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 630 
      ldv_emg_wrapper_rocker_port_set_settings_9(ldv_13_container,ldv_13_ldv_param_1_23);
      
#line 634 
      ldv_free((void *)ldv_13_ldv_param_1_23);
      
#line 637 
      goto ldv_44850;
      case 11: 
#line 639 
      ;
      
#line 641 
      ldv_13_ldv_param_0_18 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 646 
      (*ldv_emg_alias_switchdev_port_bridge_getlink_8)(ldv_13_ldv_param_0_18,ldv_13_ldv_param_1_19,ldv_13_ldv_param_2_20,ldv_13_container,ldv_13_ldv_param_4_21,ldv_13_ldv_param_5_22);
      
#line 650 
      ldv_free((void *)ldv_13_ldv_param_0_18);
      
#line 653 
      goto ldv_44850;
      case 12: 
#line 655 
      ;
      
#line 657 
      ldv_13_ldv_param_1_16 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 658 
      ldv_13_ldv_param_2_17 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 663 
      ldv_emg_wrapper_rocker_port_get_stats_7(ldv_13_container,ldv_13_ldv_param_1_16,ldv_13_ldv_param_2_17);
      
#line 667 
      ldv_free((void *)ldv_13_ldv_param_1_16);
      
#line 668 
      ldv_free((void *)ldv_13_ldv_param_2_17);
      
#line 671 
      goto ldv_44850;
      case 13: 
#line 673 
      ;
      
#line 675 
      ldv_13_ldv_param_3_14 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 676 
      ldv_13_ldv_param_1_13 = (struct nlattr **)ldv_xmalloc_unknown_size(0UL);
      
#line 677 
      ldv_13_ldv_param_0_12 = (struct ndmsg *)ldv_xmalloc_unknown_size(0UL);
      
#line 682 
      (*ldv_emg_alias_switchdev_port_fdb_del_6)(ldv_13_ldv_param_0_12,ldv_13_ldv_param_1_13,ldv_13_container,ldv_13_ldv_param_3_14,(unsigned short)((int)ldv_13_ldv_param_4_15));
      
#line 686 
      ldv_free((void *)ldv_13_ldv_param_3_14);
      
#line 687 
      ldv_free((void *)ldv_13_ldv_param_1_13);
      
#line 688 
      ldv_free((void *)ldv_13_ldv_param_0_12);
      
#line 691 
      goto ldv_44850;
      case 14: 
#line 693 
      ;
      
#line 695 
      ldv_13_ldv_param_0_7 = (struct ndmsg *)ldv_xmalloc_unknown_size(0UL);
      
#line 696 
      ldv_13_ldv_param_1_8 = (struct nlattr **)ldv_xmalloc_unknown_size(0UL);
      
#line 697 
      ldv_13_ldv_param_3_9 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 702 
      (*ldv_emg_alias_switchdev_port_fdb_add_5)(ldv_13_ldv_param_0_7,ldv_13_ldv_param_1_8,ldv_13_container,ldv_13_ldv_param_3_9,(unsigned short)((int)ldv_13_ldv_param_4_10),(unsigned short)((int)ldv_13_ldv_param_5_11));
      
#line 706 
      ldv_free((void *)ldv_13_ldv_param_0_7);
      
#line 707 
      ldv_free((void *)ldv_13_ldv_param_1_8);
      
#line 708 
      ldv_free((void *)ldv_13_ldv_param_3_9);
      
#line 711 
      goto ldv_44850;
      case 15: 
#line 713 
      ;
      
#line 716 
      (*ldv_emg_alias_ethtool_op_get_link_4)(ldv_13_container);
      
#line 719 
      goto ldv_44850;
      case 16: 
#line 721 
      ;
      
#line 723 
      ldv_13_ldv_param_1_6 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 728 
      ldv_emg_wrapper_rocker_port_get_settings_3(ldv_13_container,ldv_13_ldv_param_1_6);
      
#line 732 
      ldv_free((void *)ldv_13_ldv_param_1_6);
      
#line 735 
      goto ldv_44850;
      default: 
#line 737 
      ;
      
#line 737 
      __VERIFIER_assume(0);
    }
    ldv_44850: 
#line 740 
    ;
    
#line 740 
    ldv_free((void *)ldv_13_ldv_param_0_2);
    
#line 741 
    ldv_free((void *)ldv_13_ldv_param_3_4);
    
#line 742 
    ldv_free((void *)ldv_13_ldv_param_1_3);
    
#line 749 
    goto ldv_call_13;
  }
  else {
    
#line 757 
    __retres = (void *)0;
    
#line 757 
    goto return_label;
  }
  
#line 760 
  __retres = (void *)0;
  return_label: 
#line 760 
                return __retres;
}


#line 765  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_schedule_work(struct work_struct *arg0)
{
  _Bool __retres;
  struct work_struct *ldv_7_work_struct;
  int tmp;
  
#line 772 
  tmp = ldv_undef_int();
  
#line 772 
  if (tmp != 0) {
    
#line 774 
    ldv_7_work_struct = arg0;
    
#line 778 
    if (ldv_7_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 780 
      (*(ldv_7_work_struct->func))(ldv_7_work_struct); else ;
    
#line 785 
    __retres = (_Bool)1;
    
#line 785 
    goto return_label;
  }
  else {
    
#line 792 
    __retres = (_Bool)0;
    
#line 792 
    goto return_label;
  }
  return_label: 
#line 772 
                return __retres;
}


#line 802  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 809 
  ldv_1_ret = ldv_emg_rocker_module_init();
  
#line 810 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 813 
  tmp = ldv_undef_int();
  
#line 813 
  if (tmp != 0) {
    
#line 815 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 819 
    __retres = (void *)0;
    
#line 819 
    goto return_label;
  }
  else {
    
#line 823 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 828 
    ldv_emg_rocker_module_exit();
    
#line 832 
    __retres = (void *)0;
    
#line 832 
    goto return_label;
  }
  
#line 835 
  __retres = (void *)0;
  return_label: 
#line 835 
                return __retres;
}


#line 840  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_10_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_12 *cf_arg_16;
  struct ldv_struct_interrupt_scenario_12 *cf_arg_17;
  struct ldv_struct_interrupt_scenario_12 *cf_arg_12;
  struct ldv_struct_interrupt_scenario_12 *cf_arg_14;
  struct ldv_struct_interrupt_scenario_12 *cf_arg_15;
  int tmp;
  
#line 847 
  tmp = ldv_undef_int();
  
#line 847 
  switch (tmp) {
    case 0: 
#line 848 
    ;
    
#line 849 
    cf_arg_16 = (struct ldv_struct_interrupt_scenario_12 *)ldv_xmalloc(32UL);
    
#line 850 
    cf_arg_16->arg0 = arg0;
    
#line 851 
    cf_arg_16->arg1 = arg1;
    
#line 852 
    cf_arg_16->arg2 = arg2;
    
#line 853 
    cf_arg_16->arg3 = arg3;
    
#line 854 
    ret = pthread_create(& ldv_thread_16,(pthread_attr_t const *)0,& ldv_interrupt_scenario_16,(void *)cf_arg_16);
    
#line 855 
    __VERIFIER_assume(ret == 0);
    
#line 856 
    goto ldv_44892;
    case 1: 
#line 858 
    ;
    
#line 859 
    cf_arg_17 = (struct ldv_struct_interrupt_scenario_12 *)ldv_xmalloc(32UL);
    
#line 860 
    cf_arg_17->arg0 = arg0;
    
#line 861 
    cf_arg_17->arg1 = arg1;
    
#line 862 
    cf_arg_17->arg2 = arg2;
    
#line 863 
    cf_arg_17->arg3 = arg3;
    
#line 864 
    ret = pthread_create(& ldv_thread_17,(pthread_attr_t const *)0,& ldv_interrupt_scenario_17,(void *)cf_arg_17);
    
#line 865 
    __VERIFIER_assume(ret == 0);
    
#line 866 
    goto ldv_44892;
    case 2: 
#line 868 
    ;
    
#line 869 
    cf_arg_12 = (struct ldv_struct_interrupt_scenario_12 *)ldv_xmalloc(32UL);
    
#line 870 
    cf_arg_12->arg0 = arg0;
    
#line 871 
    cf_arg_12->arg1 = arg1;
    
#line 872 
    cf_arg_12->arg2 = arg2;
    
#line 873 
    cf_arg_12->arg3 = arg3;
    
#line 874 
    ret = pthread_create(& ldv_thread_12,(pthread_attr_t const *)0,& ldv_interrupt_scenario_12,(void *)cf_arg_12);
    
#line 875 
    __VERIFIER_assume(ret == 0);
    
#line 876 
    goto ldv_44892;
    case 3: 
#line 878 
    ;
    
#line 879 
    cf_arg_14 = (struct ldv_struct_interrupt_scenario_12 *)ldv_xmalloc(32UL);
    
#line 880 
    cf_arg_14->arg0 = arg0;
    
#line 881 
    cf_arg_14->arg1 = arg1;
    
#line 882 
    cf_arg_14->arg2 = arg2;
    
#line 883 
    cf_arg_14->arg3 = arg3;
    
#line 884 
    ret = pthread_create(& ldv_thread_14,(pthread_attr_t const *)0,& ldv_interrupt_scenario_14,(void *)cf_arg_14);
    
#line 885 
    __VERIFIER_assume(ret == 0);
    
#line 886 
    goto ldv_44892;
    case 4: 
#line 888 
    ;
    
#line 889 
    cf_arg_15 = (struct ldv_struct_interrupt_scenario_12 *)ldv_xmalloc(32UL);
    
#line 890 
    cf_arg_15->arg0 = arg0;
    
#line 891 
    cf_arg_15->arg1 = arg1;
    
#line 892 
    cf_arg_15->arg2 = arg2;
    
#line 893 
    cf_arg_15->arg3 = arg3;
    
#line 894 
    ret = pthread_create(& ldv_thread_15,(pthread_attr_t const *)0,& ldv_interrupt_scenario_15,(void *)cf_arg_15);
    
#line 895 
    __VERIFIER_assume(ret == 0);
    
#line 896 
    goto ldv_44892;
    default: 
#line 898 
    ;
    
#line 898 
    __VERIFIER_assume(0);
  }
  ldv_44892: 
#line 899 
  ;
  
#line 900 
  return;
}


#line 904  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_11(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_11_resource_1;
  struct pci_device_id *ldv_11_ldv_param_1_2;
  struct pm_message ldv_11_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 909 
  struct pci_driver *ldv_11_container = ldv_emg_alias_rocker_pci_driver_2;
  
#line 910 
  int ldv_11_ret = ldv_undef_int();
  
#line 913 
  struct ldv_struct_pci_scenario_11 *data = (struct ldv_struct_pci_scenario_11 *)arg0;
  
#line 917 
  ldv_11_ret = ldv_undef_int();
  
#line 920 
  if (data != (struct ldv_struct_pci_scenario_11 *)0) {
    
#line 921 
    ldv_11_container = data->arg0;
    
#line 922 
    ldv_free((void *)data);
  }
  else ;
  
#line 933 
  goto ldv_main_11;
  
#line 935 
  __retres = (void *)0;
  
#line 935 
  goto return_label;
  ldv_main_11: 
#line 938 
  ;
  
#line 941 
  tmp_2 = ldv_undef_int();
  
#line 941 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 943 
    ldv_11_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 948 
    ldv_pre_probe();
    
#line 950 
    ldv_11_ret = ldv_emg_wrapper_rocker_probe_2(ldv_11_resource_1,ldv_11_ldv_param_1_2);
    
#line 952 
    ldv_11_ret = ldv_post_probe(ldv_11_ret);
    
#line 956 
    ldv_free((void *)ldv_11_ldv_param_1_2);
    
#line 959 
    tmp_1 = ldv_undef_int();
    
#line 959 
    if (tmp_1 != 0) {
      
#line 961 
      __VERIFIER_assume(ldv_11_ret == 0);
      
#line 968 
      goto ldv_call_11;
    }
    else {
      
#line 972 
      __VERIFIER_assume(ldv_11_ret != 0);
      
#line 979 
      goto ldv_main_11;
    }
  }
  else {
    
#line 991 
    __retres = (void *)0;
    
#line 991 
    goto return_label;
  }
  
#line 994 
  __retres = (void *)0;
  
#line 994 
  goto return_label;
  ldv_call_11: 
#line 997 
  ;
  
#line 1000 
  tmp_3 = ldv_undef_int();
  
#line 1000 
  switch (tmp_3) {
    case 1: 
#line 1001 
    ;
    
#line 1010 
    goto ldv_call_11;
    case 2: 
#line 1013 
    ;
    
#line 1015 
    if (ldv_11_container->suspend != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 1017 
      ldv_11_ret = (*(ldv_11_container->suspend))(ldv_11_resource_1,ldv_11_resource_0);
      
#line 1019 
      ldv_11_ret = ldv_filter_err_code(ldv_11_ret);
    }
    else 
#line 1021 
         ldv_11_ret = ldv_undef_int();
    
#line 1026 
    if (ldv_11_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 1028 
      ldv_11_ret = (*(ldv_11_container->suspend_late))(ldv_11_resource_1,ldv_11_resource_0);
      
#line 1030 
      ldv_11_ret = ldv_filter_err_code(ldv_11_ret);
    }
    else 
#line 1032 
         ldv_11_ret = ldv_undef_int();
    
#line 1037 
    if (ldv_11_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 1039 
      (*(ldv_11_container->resume_early))(ldv_11_resource_1); else ;
    
#line 1044 
    if (ldv_11_container->resume != (int (*)(struct pci_dev *))0) 
#line 1046 
                                                                  (*(ldv_11_container->resume))(ldv_11_resource_1); else ;
    
#line 1054 
    goto ldv_call_11;
    case 3: 
#line 1057 
    ;
    
#line 1059 
    if (ldv_11_container->shutdown != (void (*)(struct pci_dev *))0) 
      
#line 1061 
      (*(ldv_11_container->shutdown))(ldv_11_resource_1); else ;
    
#line 1067 
    ldv_emg_wrapper_rocker_remove_3(ldv_11_resource_1);
    
#line 1074 
    goto ldv_main_11;
    default: 
#line 1077 
    ;
    
#line 1077 
    __VERIFIER_assume(0);
  }
  
#line 1080 
  __retres = (void *)0;
  return_label: 
#line 1080 
                return __retres;
}


#line 1085  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_8_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_11 *cf_arg_11;
  int tmp;
  
#line 1088 
  tmp = ldv_undef_int();
  
#line 1088 
  switch (tmp) {
    case 0: 
#line 1089 
    ;
    
#line 1090 
    ret = pthread_join(ldv_thread_11,(void **)0);
    
#line 1091 
    __VERIFIER_assume(ret == 0);
    
#line 1092 
    goto ldv_44919;
    default: 
#line 1094 
    ;
    
#line 1094 
    __VERIFIER_assume(0);
  }
  ldv_44919: 
#line 1095 
  ;
  
#line 1096 
  return;
}


#line 1100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_15(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_15_ret_val;
  int ldv_15_line;
  void *ldv_15_data;
  enum irqreturn (*ldv_15_thread)(int , void *);
  int tmp;
  
#line 1106 
  enum irqreturn (*ldv_15_callback)(int , void *) = & ldv_emg_wrapper_rocker_tx_irq_handler_2;
  
#line 1109 
  struct ldv_struct_interrupt_scenario_12 *data = (struct ldv_struct_interrupt_scenario_12 *)arg0;
  
#line 1114 
  if (data != (struct ldv_struct_interrupt_scenario_12 *)0) {
    
#line 1115 
    ldv_15_line = data->arg0;
    
#line 1116 
    ldv_15_callback = data->arg1;
    
#line 1117 
    ldv_15_thread = data->arg2;
    
#line 1118 
    ldv_15_data = data->arg3;
    
#line 1119 
    ldv_free((void *)data);
  }
  else ;
  
#line 1125 
  ldv_switch_to_interrupt_context();
  
#line 1127 
  ldv_15_ret_val = ldv_emg_wrapper_rocker_tx_irq_handler_2(ldv_15_line,ldv_15_data);
  
#line 1129 
  ldv_switch_to_process_context();
  
#line 1132 
  tmp = ldv_undef_int();
  
#line 1132 
  if (tmp != 0) {
    
#line 1134 
    __VERIFIER_assume(ldv_15_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 1138 
    if (ldv_15_thread != (enum irqreturn (*)(int , void *))0) 
#line 1140 
                                                              (*ldv_15_thread)(ldv_15_line,ldv_15_data); else ;
  }
  else 
#line 1147 
       __VERIFIER_assume(ldv_15_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 1156 
  __retres = (void *)0;
  
#line 1156 
  goto return_label;
  
#line 1158 
  __retres = (void *)0;
  return_label: 
#line 1158 
                return __retres;
}


#line 1163  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 1166 
  struct pci_driver *ldv_8_pci_driver = ldv_emg_alias_rocker_pci_driver_2;
  
#line 1169 
  ldv_8_pci_driver = arg0;
  
#line 1173 
  ldv_dispatch_deregister_8_1(ldv_8_pci_driver);
  
#line 1177 
  goto return_label;
  return_label: 
#line 1179 
                return;
}


#line 1184  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_5_netdev;
  
#line 1190 
  ldv_5_netdev = arg0;
  
#line 1195 
  ldv_emg_wrapper_rocker_port_stop_2(ldv_5_netdev);
  
#line 1199 
  ldv_dispatch_deregister_5_1(ldv_5_netdev);
  
#line 1203 
  goto return_label;
  return_label: 
#line 1205 
                return;
}


#line 1210  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_3_line;
  
#line 1216 
  ldv_3_line = (int)arg0;
  
#line 1220 
  ldv_dispatch_irq_deregister_3_1(ldv_3_line);
  
#line 1224 
  goto return_label;
  return_label: 
#line 1226 
                return;
}


#line 1231  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_6_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_11 *cf_arg_11;
  int tmp;
  
#line 1234 
  tmp = ldv_undef_int();
  
#line 1234 
  switch (tmp) {
    case 0: 
#line 1235 
    ;
    
#line 1236 
    cf_arg_11 = (struct ldv_struct_pci_scenario_11 *)ldv_xmalloc(16UL);
    
#line 1237 
    cf_arg_11->arg0 = arg0;
    
#line 1238 
    ret = pthread_create(& ldv_thread_11,(pthread_attr_t const *)0,& ldv_pci_scenario_11,(void *)cf_arg_11);
    
#line 1239 
    __VERIFIER_assume(ret == 0);
    
#line 1240 
    goto ldv_44953;
    default: 
#line 1242 
    ;
    
#line 1242 
    __VERIFIER_assume(0);
  }
  ldv_44953: 
#line 1243 
  ;
  
#line 1244 
  return;
}


#line 1248  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 1254 
  ldv_2_netdev = arg0;
  
#line 1255 
  ldv_free((void *)ldv_2_netdev);
  
#line 1259 
  goto return_label;
  return_label: 
#line 1261 
                return;
}


#line 1266  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_12(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_12_ret_val;
  int ldv_12_line;
  void *ldv_12_data;
  enum irqreturn (*ldv_12_thread)(int , void *);
  int tmp;
  
#line 1272 
  enum irqreturn (*ldv_12_callback)(int , void *) = & ldv_emg_wrapper_rocker_rx_irq_handler_2;
  
#line 1275 
  struct ldv_struct_interrupt_scenario_12 *data = (struct ldv_struct_interrupt_scenario_12 *)arg0;
  
#line 1280 
  if (data != (struct ldv_struct_interrupt_scenario_12 *)0) {
    
#line 1281 
    ldv_12_line = data->arg0;
    
#line 1282 
    ldv_12_callback = data->arg1;
    
#line 1283 
    ldv_12_thread = data->arg2;
    
#line 1284 
    ldv_12_data = data->arg3;
    
#line 1285 
    ldv_free((void *)data);
  }
  else ;
  
#line 1291 
  ldv_switch_to_interrupt_context();
  
#line 1293 
  ldv_12_ret_val = ldv_emg_wrapper_rocker_rx_irq_handler_2(ldv_12_line,ldv_12_data);
  
#line 1295 
  ldv_switch_to_process_context();
  
#line 1298 
  tmp = ldv_undef_int();
  
#line 1298 
  if (tmp != 0) {
    
#line 1300 
    __VERIFIER_assume(ldv_12_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 1304 
    if (ldv_12_thread != (enum irqreturn (*)(int , void *))0) 
#line 1306 
                                                              (*ldv_12_thread)(ldv_12_line,ldv_12_data); else ;
  }
  else 
#line 1313 
       __VERIFIER_assume(ldv_12_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 1322 
  __retres = (void *)0;
  
#line 1322 
  goto return_label;
  
#line 1324 
  __retres = (void *)0;
  return_label: 
#line 1324 
                return __retres;
}


#line 1329  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_14(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_14_ret_val;
  int ldv_14_line;
  void *ldv_14_data;
  enum irqreturn (*ldv_14_thread)(int , void *);
  int tmp;
  
#line 1335 
  enum irqreturn (*ldv_14_callback)(int , void *) = & ldv_emg_wrapper_rocker_test_irq_handler_2;
  
#line 1338 
  struct ldv_struct_interrupt_scenario_12 *data = (struct ldv_struct_interrupt_scenario_12 *)arg0;
  
#line 1343 
  if (data != (struct ldv_struct_interrupt_scenario_12 *)0) {
    
#line 1344 
    ldv_14_line = data->arg0;
    
#line 1345 
    ldv_14_callback = data->arg1;
    
#line 1346 
    ldv_14_thread = data->arg2;
    
#line 1347 
    ldv_14_data = data->arg3;
    
#line 1348 
    ldv_free((void *)data);
  }
  else ;
  
#line 1354 
  ldv_switch_to_interrupt_context();
  
#line 1356 
  ldv_14_ret_val = ldv_emg_wrapper_rocker_test_irq_handler_2(ldv_14_line,ldv_14_data);
  
#line 1358 
  ldv_switch_to_process_context();
  
#line 1361 
  tmp = ldv_undef_int();
  
#line 1361 
  if (tmp != 0) {
    
#line 1363 
    __VERIFIER_assume(ldv_14_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 1367 
    if (ldv_14_thread != (enum irqreturn (*)(int , void *))0) 
#line 1369 
                                                              (*ldv_14_thread)(ldv_14_line,ldv_14_data); else ;
  }
  else 
#line 1376 
       __VERIFIER_assume(ldv_14_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 1385 
  __retres = (void *)0;
  
#line 1385 
  goto return_label;
  
#line 1387 
  __retres = (void *)0;
  return_label: 
#line 1387 
                return __retres;
}


#line 1392  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/rocker/rocker.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_9_netdev;
  int tmp_3;
  
#line 1396 
  int ldv_9_ret = ldv_undef_int();
  
#line 1399 
  ldv_9_ret = ldv_undef_int();
  
#line 1402 
  tmp_3 = ldv_undef_int();
  
#line 1402 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 1404 
    ldv_9_netdev = arg0;
    
#line 1409 
    ldv_9_ret = ldv_emg_wrapper_rocker_port_open_2(ldv_9_netdev);
    
#line 1412 
    tmp_1 = ldv_undef_int();
    
#line 1412 
    if (tmp_1 != 0) {
      
#line 1414 
      __VERIFIER_assume(ldv_9_ret == 0);
      
#line 1418 
      ldv_dispatch_register_9_4(ldv_9_netdev);
      
#line 1422 
      __retres = 0;
      
#line 1422 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 1429 
      __VERIFIER_assume(ldv_9_ret != 0);
      
#line 1430 
      ldv_failed_register_netdev();
      
#line 1431 
      tmp_0 = ldv_undef_int_negative();
      
#line 1431 
      __retres = tmp_0;
      
#line 1431 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 1439 
    ldv_failed_register_netdev();
    
#line 1440 
    tmp_2 = ldv_undef_int_negative();
    
#line 1440 
    __retres = tmp_2;
    
#line 1440 
    goto return_label;
  }
  return_label: 
#line 1402 
                return __retres;
}


