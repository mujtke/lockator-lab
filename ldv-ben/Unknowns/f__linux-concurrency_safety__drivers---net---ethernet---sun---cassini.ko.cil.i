/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u64 __le64;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __sum16;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct _ddebug {
   char const *modname ;
   char const *function ;
   char const *filename ;
   char const *format ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))) lineno : 18 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) flags : 8 ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
typedef int pao_T__;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/stat.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_46 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_46 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_47 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_47 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct vm_area_struct;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_48 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_48 nodemask_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 225 
struct rw_semaphore;

#line 226  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 243 
enum hrtimer_restart;

#line 244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_50 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_49 {
   struct __anonstruct_50 __anonCompField___anonunion_49_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_49 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_12146 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_115 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_115 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmod.h"
struct cred;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/elf.h"
struct inode;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_148 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_149 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_147 {
   struct __anonstruct_148 __anonCompField___anonunion_147_33 ;
   struct __anonstruct_149 __anonCompField___anonunion_147_34 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_147 __anonCompField_uprobe_task_35 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_150 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_152 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_156 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_155 {
   atomic_t _mapcount ;
   struct __anonstruct_156 __anonCompField___anonunion_155_38 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_154 {
   union __anonunion_155 __anonCompField___anonstruct_154_39 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_153 {
   unsigned long counters ;
   struct __anonstruct_154 __anonCompField___anonunion_153_40 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_151 {
   union __anonunion_152 __anonCompField___anonstruct_151_37 ;
   union __anonunion_153 __anonCompField___anonstruct_151_41 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_158 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_159 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_157 {
   struct list_head lru ;
   struct __anonstruct_158 __anonCompField___anonunion_157_43 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_159 __anonCompField___anonunion_157_44 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_160 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_150 __anonCompField_page_36 ;
   struct __anonstruct_151 __anonCompField_page_42 ;
   union __anonunion_157 __anonCompField_page_45 ;
   union __anonunion_160 __anonCompField_page_46 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_161 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_161 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
union __anonunion_166 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_166 __anonCompField_idr_layer_47 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct dentry;

#line 186 
struct iattr;

#line 187 
struct super_block;

#line 188 
struct file_system_type;

#line 189 
struct kernfs_open_node;

#line 190 
struct kernfs_iattrs;

#line 213 
struct kernfs_root;

#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_171 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_171 __anonCompField_kernfs_node_48 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct sock;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct bin_attribute;

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_172 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_172 __anonCompField_kernel_param_49 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 74 
struct exception_table_entry;

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_180 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_180 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_182 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_183 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_184 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_185 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_187 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_186 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_187 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_188 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_189 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_181 {
   int _pad[28U] ;
   struct __anonstruct__kill_182 _kill ;
   struct __anonstruct__timer_183 _timer ;
   struct __anonstruct__rt_184 _rt ;
   struct __anonstruct__sigchld_185 _sigchld ;
   struct __anonstruct__sigfault_186 _sigfault ;
   struct __anonstruct__sigpoll_188 _sigpoll ;
   struct __anonstruct__sigsys_189 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_181 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_196 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_197 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_199 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_198 {
   struct keyring_index_key index_key ;
   struct __anonstruct_199 __anonCompField___anonunion_198_52 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_200 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_202 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_201 {
   union __anonunion_payload_202 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_196 __anonCompField_key_50 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_197 __anonCompField_key_51 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_198 __anonCompField_key_53 ;
   union __anonunion_type_data_200 type_data ;
   union __anonunion_201 __anonCompField_key_54 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct pipe_inode_info;

#line 1173 
struct uts_namespace;

#line 1174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 398  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irq.h"
struct proc_dir_entry;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_228 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_228 __anonCompField_pci_dev_65 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 1249 
struct kvec;

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pci_64.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_232 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_231 {
   struct __anonstruct_232 __anonCompField___anonunion_231_66 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_231 __anonCompField_lockref_67 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_234 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_233 {
   struct __anonstruct_234 __anonCompField___anonunion_233_68 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_233 __anonCompField_qstr_69 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_235 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_235 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_239 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_238 {
   struct __anonstruct_239 __anonCompField___anonunion_238_70 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_238 __anonCompField_radix_tree_node_71 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct iovec;

#line 63 
struct kiocb;

#line 64 
struct poll_table_struct;

#line 65 
struct kstatfs;

#line 66 
struct swap_info_struct;

#line 67 
struct iov_iter;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_243 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_243 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_244 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_244 __anonCompField_kqid_73 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_247 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_248 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_249 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_247 __anonCompField_inode_74 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_248 __anonCompField_inode_75 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_249 __anonCompField_inode_76 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_250 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_250 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 947 
struct net;

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19 
struct fasync_struct;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_252 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_251 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_252 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_251 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/prefetch.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_253 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_253 __anonCompField_iov_iter_77 ;
   unsigned long nr_segs ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_255 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_255 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_256 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_256 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_257 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_257 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_258 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_258 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_259 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_259 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_260 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_260 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_261 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_261 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_262 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_262 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_263 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_264 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_263 ifr_ifrn ;
   union __anonunion_ifr_ifru_264 ifr_ifru ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
enum ldv_27509 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_27509 socket_state;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_280 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_280 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_27910 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_285 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_286 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_27910 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_285 __anonCompField_nf_bridge_info_81 ;
   union __anonunion_286 __anonCompField_nf_bridge_info_82 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 215 
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_287 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_287 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_289 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_288 {
   u64 v64 ;
   struct __anonstruct_289 __anonCompField___anonunion_288_83 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_288 __anonCompField_skb_mstamp_84 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_292 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_291 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_292 __anonCompField___anonstruct_291_85 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_290 {
   struct __anonstruct_291 __anonCompField___anonunion_290_86 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_294 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_293 {
   __wsum csum ;
   struct __anonstruct_294 __anonCompField___anonunion_293_88 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_295 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_296 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_297 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_290 __anonCompField_sk_buff_87 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_293 __anonCompField_sk_buff_89 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_295 __anonCompField_sk_buff_90 ;
   __u32 secmark ;
   union __anonunion_296 __anonCompField_sk_buff_91 ;
   union __anonunion_297 __anonCompField_sk_buff_92 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 767 
struct rtable;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_306 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_306 possible_net_t;

#line 376 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 1084  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct mii_ioctl_data {
   __u16 phy_id ;
   __u16 reg_num ;
   __u16 val_in ;
   __u16 val_out ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_29762 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_29762 phy_interface_t;

#line 126 
enum ldv_29815 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_29815 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct xfrm_policy;

#line 98 
struct xfrm_state;

#line 114 
struct request_sock;

#line 1628 
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_31525 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_31526 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_316 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_317 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_318 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_316 adj_list ;
   struct __anonstruct_all_adj_list_317 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_31525 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_31526 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_318 __anonCompField_net_device_95 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ip.h"
struct page_counter {
   atomic_long_t count ;
   unsigned long limit ;
   struct page_counter *parent ;
   unsigned long watermark ;
   unsigned long failcnt ;
};

#line 580  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/memcontrol.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/filter.h"
struct bpf_insn {
   __u8 code ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) dst_reg : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/bpf.h"
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4
};

#line 273 
struct bpf_prog_aux;

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
union __anonunion_333 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   bool jited ;
   bool gpl_compatible ;
   u32 len ;
   enum bpf_prog_type type ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(struct sk_buff const *, struct bpf_insn const *) ;
   union __anonunion_333 __anonCompField_bpf_prog_100 ;
};

#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sk_filter {
   atomic_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_nulls.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   unsigned long _key ;
};

#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
struct nla_policy {
   u16 type ;
   u16 len ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char const *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   int maxtype ;
   struct nla_policy const *policy ;
   int (*validate)(struct nlattr **, struct nlattr **) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device const *) ;
   int (*fill_info)(struct sk_buff *, struct net_device const *) ;
   size_t (*get_xstats_size)(struct net_device const *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device const *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   int slave_maxtype ;
   struct nla_policy const *slave_policy ;
   int (*slave_validate)(struct nlattr **, struct nlattr **) ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **) ;
   size_t (*get_slave_size)(struct net_device const *, struct net_device const *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device const *, struct net_device const *) ;
   struct net *(*get_link_net)(struct net_device const *) ;
};

#line 171 
struct neigh_table;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   void (*neigh_cleanup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   atomic_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
};

#line 129 
struct neigh_ops;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   atomic_t refcnt ;
   struct sk_buff_head arp_queue ;
   unsigned int arp_queue_len_bytes ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops const *ops ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 key[0U] ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_table {
   int family ;
   int entry_size ;
   int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void const *, struct net_device const *, __u32 *) ;
   bool (*key_eq)(struct neighbour const *, void const *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};

#line 519 
struct dn_route;

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
union __anonunion_344 {
   struct dst_entry *next ;
   struct rtable *rt_next ;
   struct rt6_info *rt6_next ;
   struct dn_route *dn_next ;
};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct dst_entry {
   struct callback_head callback_head ;
   struct dst_entry *child ;
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct dst_entry *path ;
   struct dst_entry *from ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   unsigned short pending_confirm ;
   short error ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   __u32 tclassid ;
   long __pad_to_align_refcnt[2U] ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   union __anonunion_344 __anonCompField_dst_entry_101 ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_socket_lock_t_345 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef struct __anonstruct_socket_lock_t_345 socket_lock_t;

#line 124 
struct proto;

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u32 __portpair;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u64 __addrpair;

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_347 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_346 {
   __addrpair skc_addrpair ;
   struct __anonstruct_347 __anonCompField___anonunion_346_102 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_348 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_350 {
   __be16 skc_dport ;
   __u16 skc_num ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_349 {
   __portpair skc_portpair ;
   struct __anonstruct_350 __anonCompField___anonunion_349_105 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_351 {
   struct hlist_node skc_bind_node ;
   struct hlist_nulls_node skc_portaddr_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_352 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock_common {
   union __anonunion_346 __anonCompField_sock_common_103 ;
   union __anonunion_348 __anonCompField_sock_common_104 ;
   union __anonunion_349 __anonCompField_sock_common_106 ;
   unsigned short skc_family ;
   unsigned char volatile skc_state ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) skc_reuse : 4 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_reuseport : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_ipv6only : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_351 __anonCompField_sock_common_107 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_352 __anonCompField_sock_common_108 ;
   int skc_tx_queue_mapping ;
   atomic_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
};

#line 219 
struct cg_proto;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_sk_backlog_353 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_353 sk_backlog ;
   int sk_forward_alloc ;
   __u32 sk_rxhash ;
   u16 sk_incoming_cpu ;
   __u32 sk_txhash ;
   unsigned int sk_napi_id ;
   unsigned int sk_ll_usec ;
   atomic_t sk_drops ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   struct socket_wq *sk_wq ;
   struct xfrm_policy *sk_policy[2U] ;
   unsigned long sk_flags ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   spinlock_t sk_dst_lock ;
   atomic_t sk_wmem_alloc ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   struct sk_buff_head sk_write_queue ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) sk_shutdown : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_tx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_rx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) sk_userlocks : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) sk_protocol : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) sk_type : 16 ;
   int sk_wmem_queued ;
   gfp_t sk_allocation ;
   u32 sk_pacing_rate ;
   u32 sk_max_pacing_rate ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   u16 sk_gso_max_segs ;
   int sk_rcvlowat ;
   unsigned long sk_lingertime ;
   struct sk_buff_head sk_error_queue ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   __u32 sk_priority ;
   __u32 sk_cgrp_prioidx ;
   struct pid *sk_peer_pid ;
   struct cred const *sk_peer_cred ;
   long sk_rcvtimeo ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u32 sk_tskey ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   struct page_frag sk_frag ;
   struct sk_buff *sk_send_head ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   void *sk_security ;
   __u32 sk_mark ;
   u32 sk_classid ;
   struct cg_proto *sk_cgrp ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
};

#line 914 
struct request_sock_ops;

#line 915 
struct timewait_sock_ops;

#line 916 
struct inet_hashinfo;

#line 917 
struct raw_hashinfo;

#line 932 
struct udp_table;

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_h_356 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
};

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   void (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   void (*clear_sk)(struct sock *, int ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock const *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   int *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   int slab_flags ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_356 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*init_cgroup)(struct mem_cgroup *, struct cgroup_subsys *) ;
   void (*destroy_cgroup)(struct mem_cgroup *) ;
   struct cg_proto *(*proto_cgroup)(struct mem_cgroup *) ;
};

#line 1054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct cg_proto {
   struct page_counter memory_allocated ;
   struct percpu_counter sockets_allocated ;
   int memory_pressure ;
   long sysctl_mem[3U] ;
   unsigned long flags ;
   struct mem_cgroup *memcg ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jhash.h"
struct request_sock_ops {
   int family ;
   int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock const *) ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   struct sock *rsk_listener ;
   u16 mss ;
   u8 num_retrans ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cookie_ts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) num_timeout : 7 ;
   u32 window_clamp ;
   u32 rcv_wnd ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops const *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};

#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_connection_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};

#line 410  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
struct firmware {
   size_t size ;
   u8 const *data ;
   struct page **pages ;
   void *priv ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/firmware.h"
struct cas_hp_inst {
   char const *note ;
   u16 mask ;
   u16 val ;
   u8 op ;
   u8 soff ;
   u8 snext ;
   u8 foff ;
   u8 fnext ;
   u8 outop ;
   u16 outarg ;
   u8 outenab ;
   u8 outshift ;
   u16 outmask ;
};

#line 2147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.h"
typedef struct cas_hp_inst cas_hp_inst_t;

#line 2511  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.h"
struct cas_tx_desc {
   __le64 control ;
   __le64 buffer ;
};

#line 2609  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.h"
struct cas_rx_desc {
   __le64 index ;
   __le64 buffer ;
};

#line 2618  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.h"
struct cas_rx_comp {
   __le64 word1 ;
   __le64 word2 ;
   __le64 word3 ;
   __le64 word4 ;
};

#line 2699 
enum link_state {
    link_down = 0,
    link_aneg = 1,
    link_force_try = 2,
    link_force_ret = 3,
    link_force_ok = 4,
    link_up = 5
};

#line 2708  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.h"
struct cas_page {
   struct list_head list ;
   struct page *buffer ;
   dma_addr_t dma_addr ;
   int used ;
};

#line 2714  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.h"
typedef struct cas_page cas_page_t;

#line 2715  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.h"
struct cas_init_block {
   struct cas_rx_comp rxcs[1U][2048U] ;
   struct cas_rx_desc rxds[2U][512U] ;
   struct cas_tx_desc txds[4U][512U] ;
   __le64 tx_compwb ;
};

#line 2738  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.h"
struct cas_tiny_count {
   int nbufs ;
   int used ;
};

#line 2750  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.h"
struct cas {
   spinlock_t lock ;
   spinlock_t tx_lock[4U] ;
   spinlock_t stat_lock[5U] ;
   spinlock_t rx_inuse_lock ;
   spinlock_t rx_spare_lock ;
   void *regs ;
   int tx_new[4U] ;
   int tx_old[4U] ;
   int rx_old[2U] ;
   int rx_cur[1U] ;
   int rx_new[1U] ;
   int rx_last[2U] ;
   struct napi_struct napi ;
   int hw_running ;
   int opened ;
   struct mutex pm_mutex ;
   struct cas_init_block *init_block ;
   struct cas_tx_desc *init_txds[4U] ;
   struct cas_rx_desc *init_rxds[2U] ;
   struct cas_rx_comp *init_rxcs[4U] ;
   struct sk_buff *tx_skbs[4U][512U] ;
   struct sk_buff_head rx_flows[64U] ;
   cas_page_t *rx_pages[2U][512U] ;
   struct list_head rx_spare_list ;
   struct list_head rx_inuse_list ;
   int rx_spares_needed ;
   struct cas_tiny_count tx_tiny_use[4U][512U] ;
   u8 *tx_tiny_bufs[4U] ;
   u32 msg_enable ;
   struct net_device_stats net_stats[5U] ;
   u32 pci_cfg[16U] ;
   u8 pci_revision ;
   int phy_type ;
   int phy_addr ;
   u32 phy_id ;
   u32 cas_flags ;
   int packet_min ;
   int tx_fifo_size ;
   int rx_fifo_size ;
   int rx_pause_off ;
   int rx_pause_on ;
   int crc_size ;
   int pci_irq_INTC ;
   int min_frame_size ;
   int page_size ;
   int page_order ;
   int mtu_stride ;
   u32 mac_rx_cfg ;
   int link_cntl ;
   int link_fcntl ;
   enum link_state lstate ;
   struct timer_list link_timer ;
   int timer_ticks ;
   struct work_struct reset_task ;
   atomic_t reset_task_pending ;
   atomic_t reset_task_pending_mtu ;
   atomic_t reset_task_pending_spare ;
   atomic_t reset_task_pending_all ;
   int link_transition ;
   int link_transition_jiffies_valid ;
   unsigned long link_transition_jiffies ;
   u8 orig_cacheline_size ;
   int casreg_len ;
   u64 pause_entered ;
   u16 pause_last_time_recvd ;
   dma_addr_t block_dvma ;
   dma_addr_t tx_tiny_dvma[4U] ;
   struct pci_dev *pdev ;
   struct net_device *dev ;
   struct device_node *of_node ;
   u16 fw_load_addr ;
   u32 fw_size ;
   u8 *fw_data ;
};

#line 4349  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
struct __anonstruct_ethtool_cassini_statnames_372 {
   char const name[32U] ;
};

#line 4371  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
struct __anonstruct_ethtool_register_table_373 {
   int const offsets ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_free_irq_6 {
   int arg0 ;
   int signal_pending ;
};

#line 19  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_14 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_16 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_15 {
   struct net_device *arg0 ;
   int signal_pending ;
};

#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_timer_scenario_17 {
   struct timer_list *arg0 ;
   int signal_pending ;
};
unsigned short __builtin_bswap16(unsigned short);

void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/fvtp/.tmp_cassini.c"
void ldv_inline_asm(void);


#line 5  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
void ldv_atomic_sub(int i, atomic_t *v);


#line 7 
void ldv_atomic_inc(atomic_t *v);


#line 8 
void ldv_atomic_dec(atomic_t *v);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/arch_hweight.h"
__inline static unsigned long __arch_hweight64(__u64 w)
{
  
#line 47 
  unsigned long res = 0UL;
  
#line 48 
  ldv_inline_asm();
  
#line 58 
  return res;
}


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u16 __fswab16(__u16 val)
{
  __u16 tmp;
  
#line 49 
  tmp = __builtin_bswap16((unsigned short)((int)val));
  
#line 49 
  return tmp;
}


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitops.h"
__inline static unsigned long hweight_long(unsigned long w)
{
  unsigned long tmp_0;
  
#line 80 
  if (0 != 0) 
#line 80 
              tmp_0 = (unsigned long)((((unsigned int)((((((((((unsigned long long)w & 1ULL) != 0ULL) + (((unsigned long long)w & 2ULL) != 0ULL)) + (((unsigned long long)w & 4ULL) != 0ULL)) + (((unsigned long long)w & 8ULL) != 0ULL)) + (((unsigned long long)w & 16ULL) != 0ULL)) + (((unsigned long long)w & 32ULL) != 0ULL)) + (((unsigned long long)w & 64ULL) != 0ULL)) + (((unsigned long long)w & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 8) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 8) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 128ULL) != 0ULL))) + ((unsigned int)((((((((((unsigned long long)(w >> 16) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 16) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 24) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 24) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 128ULL) != 0ULL)))) + (((unsigned int)((((((((((unsigned long long)(w >> 32) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 32) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 40) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 40) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 128ULL) != 0ULL))) + ((unsigned int)((((((((((unsigned long long)(w >> 48) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 48) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 56) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 56) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 128ULL) != 0ULL))))); else 
                                                                    
#line 80 
                                                                    tmp_0 = __arch_hweight64((unsigned long long)w);
  
#line 80 
  return tmp_0;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
void __dynamic_netdev_dbg(struct _ddebug *, struct net_device const *, char const * , ...);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 48 
void __list_add(struct list_head *, struct list_head *, struct list_head *);


#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_add(struct list_head *new, struct list_head *head)
{
  
#line 63 
  __list_add(new,head,head->next);
  
#line 64 
  return;
}


#line 113 
void list_del(struct list_head *);


#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static int list_empty(struct list_head const *head)
{
  int __retres;
  
#line 189 
  __retres = (struct list_head const *)head->next == head;
  
#line 189 
  return __retres;
}


#line 274  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void __list_splice(struct list_head const *list, struct list_head *prev, struct list_head *next)
{
  
#line 278 
  struct list_head *first = list->next;
  
#line 279 
  struct list_head *last = list->prev;
  
#line 281 
  first->prev = prev;
  
#line 282 
  prev->next = first;
  
#line 284 
  last->next = next;
  
#line 285 
  next->prev = last;
  
#line 286 
  return;
}


#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_splice(struct list_head const *list, struct list_head *head)
{
  int tmp;
  
#line 296 
  tmp = list_empty(list);
  
#line 296 
  if (tmp == 0) 
#line 297 
                __list_splice(list,head,head->next); else ;
  
#line 298 
  return;
}


#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_splice_init(struct list_head *list, struct list_head *head)
{
  int tmp;
  
#line 322 
  tmp = list_empty((struct list_head const *)list);
  
#line 322 
  if (tmp == 0) {
    
#line 323 
    __list_splice((struct list_head const *)list,head,head->next);
    
#line 324 
    INIT_LIST_HEAD(list);
  }
  else ;
  
#line 326 
  return;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bug.h"
void warn_slowpath_null(char const *, int const);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/current.h"
__inline static struct task_struct *get_current(void)
{
  struct task_struct *tmp;
  {
    struct task_struct *pfo_ret__;
    
#line 14 
    switch (8UL) {
      case (unsigned long)1: 
#line 14 
      ;
      
#line 15 
      ldv_inline_asm();
      
#line 14 
      goto ldv_3477;
      case (unsigned long)2: 
#line 14 
      ;
      
#line 15 
      ldv_inline_asm();
      
#line 14 
      goto ldv_3477;
      case (unsigned long)4: 
#line 14 
      ;
      
#line 15 
      ldv_inline_asm();
      
#line 14 
      goto ldv_3477;
      case (unsigned long)8: 
#line 14 
      ;
      
#line 15 
      ldv_inline_asm();
      
#line 14 
      goto ldv_3477;
      default: 
#line 14 
      ;
      
#line 14 
      __bad_percpu_size();
    }
    ldv_3477: 
#line 14 
    ;
    
#line 14 
    tmp = pfo_ret__;
  }
  
#line 14 
  return tmp;
}


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 64 
size_t strlen(char const *);


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
size_t strlcpy(char *, char const *, size_t);


#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
int __bitmap_weight(unsigned long const *, unsigned int);


#line 298  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
__inline static int bitmap_weight(unsigned long const *src, unsigned int nbits)
{
  int __retres;
  int tmp_0;
  
#line 300 
  if (0 != 0 && nbits <= 64U) {
    unsigned long tmp;
    
#line 301 
    tmp = hweight_long(*src & (18446744073709551615UL >> (- nbits & 63U)));
    
#line 301 
    __retres = (int)tmp;
    
#line 301 
    goto return_label;
  }
  else ;
  
#line 302 
  tmp_0 = __bitmap_weight(src,nbits);
  
#line 302 
  __retres = tmp_0;
  return_label: 
#line 302 
                return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
extern int nr_cpu_ids;


#line 89 
extern struct cpumask const * const cpu_online_mask;


#line 474  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
__inline static unsigned int cpumask_weight(struct cpumask const *srcp)
{
  unsigned int __retres;
  int tmp;
  
#line 476 
  tmp = bitmap_weight((unsigned long const *)(& srcp->bits),(unsigned int)nr_cpu_ids);
  
#line 476 
  __retres = (unsigned int)tmp;
  
#line 476 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int atomic_read(atomic_t const *v)
{
  int __retres;
  int const volatile *tmp;
  {
    
#line 27 
    int const __var = 0;
    
#line 27 
    tmp = (int const volatile *)(& v->counter);
  }
  
#line 27 
  __retres = *tmp;
  
#line 27 
  return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static void atomic_set(atomic_t *v, int i)
{
  
#line 39 
  v->counter = i;
  
#line 40 
  return;
}


#line 67 
static void atomic_sub(int i, atomic_t *v);


#line 98 
static void atomic_inc(atomic_t *v);


#line 114 
static void atomic_dec(atomic_t *v);


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_add(int val)
{
  int tmp;
  
#line 72 
  if (0 != 0 && (val == 1 || val == -1)) 
#line 72 
                                         tmp = val; else 
#line 72 
                                                         tmp = 0;
  
#line 72 
  int const pao_ID__ = tmp;
  
#line 72 
  switch (4UL) {
    case (unsigned long)1: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)2: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)4: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)8: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    default: 
#line 72 
    ;
    
#line 72 
    __bad_percpu_size();
  }
  ldv_6377: 
#line 72 
  ;
  
#line 74 
  return;
}


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_sub(int val)
{
  int tmp;
  
#line 77 
  if (0 != 0 && (- val == 1 || - val == -1)) 
#line 77 
                                             tmp = - val; else 
#line 77 
                                                               tmp = 0;
  
#line 77 
  int const pao_ID__ = tmp;
  
#line 77 
  switch (4UL) {
    case (unsigned long)1: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)2: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)4: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)8: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    default: 
#line 77 
    ;
    
#line 77 
    __bad_percpu_size();
  }
  ldv_6389: 
#line 77 
  ;
  
#line 79 
  return;
}


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 45 
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_77(spinlock_t *lock);


#line 362 
static void ldv_spin_lock_79(spinlock_t *lock);


#line 366 
static void ldv_spin_lock_81(spinlock_t *lock);


#line 370 
static void ldv_spin_lock_83(spinlock_t *lock);


#line 374 
static void ldv_spin_lock_85(spinlock_t *lock);


#line 378 
static void ldv_spin_lock_87(spinlock_t *lock);


#line 382 
static void ldv_spin_lock_90(spinlock_t *lock);


#line 386 
static void ldv_spin_lock_92(spinlock_t *lock);


#line 390 
static void ldv_spin_lock_94(spinlock_t *lock);


#line 394 
static void ldv_spin_lock_96(spinlock_t *lock);


#line 398 
static void ldv_spin_lock_98(spinlock_t *lock);


#line 402 
static void ldv_spin_lock_105(spinlock_t *lock);


#line 406 
static void ldv_spin_lock_107(spinlock_t *lock);


#line 410 
static void ldv_spin_lock_109(spinlock_t *lock);


#line 414 
static void ldv_spin_lock_111(spinlock_t *lock);


#line 418 
static void ldv_spin_lock_113(spinlock_t *lock);


#line 422 
static void ldv_spin_lock_116(spinlock_t *lock);


#line 426 
static void ldv_spin_lock_117(spinlock_t *lock);


#line 430 
static void ldv_spin_lock_121(spinlock_t *lock);


#line 434 
static void ldv_spin_lock_123(spinlock_t *lock);


#line 438 
static void ldv_spin_lock_125(spinlock_t *lock);


#line 442 
static void ldv_spin_lock_127(spinlock_t *lock);


#line 446 
static void ldv_spin_lock_129(spinlock_t *lock);


#line 450 
static void ldv_spin_lock_137(spinlock_t *lock);


#line 454 
static void ldv_spin_lock_139(spinlock_t *lock);


#line 458 
static void ldv_spin_lock_168(spinlock_t *lock);


#line 462 
static void ldv_spin_lock_170(spinlock_t *lock);


#line 367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 369 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 370 
  return;
}


#line 411 
static void ldv_spin_unlock_75(spinlock_t *lock);


#line 415 
static void ldv_spin_unlock_78(spinlock_t *lock);


#line 419 
static void ldv_spin_unlock_80(spinlock_t *lock);


#line 423 
static void ldv_spin_unlock_82(spinlock_t *lock);


#line 427 
static void ldv_spin_unlock_84(spinlock_t *lock);


#line 431 
static void ldv_spin_unlock_86(spinlock_t *lock);


#line 435 
static void ldv_spin_unlock_88(spinlock_t *lock);


#line 439 
static void ldv_spin_unlock_89(spinlock_t *lock);


#line 443 
static void ldv_spin_unlock_91(spinlock_t *lock);


#line 447 
static void ldv_spin_unlock_93(spinlock_t *lock);


#line 451 
static void ldv_spin_unlock_95(spinlock_t *lock);


#line 455 
static void ldv_spin_unlock_97(spinlock_t *lock);


#line 459 
static void ldv_spin_unlock_99(spinlock_t *lock);


#line 463 
static void ldv_spin_unlock_100(spinlock_t *lock);


#line 467 
static void ldv_spin_unlock_106(spinlock_t *lock);


#line 471 
static void ldv_spin_unlock_108(spinlock_t *lock);


#line 475 
static void ldv_spin_unlock_110(spinlock_t *lock);


#line 479 
static void ldv_spin_unlock_112(spinlock_t *lock);


#line 483 
static void ldv_spin_unlock_114(spinlock_t *lock);


#line 487 
static void ldv_spin_unlock_118(spinlock_t *lock);


#line 491 
static void ldv_spin_unlock_119(spinlock_t *lock);


#line 495 
static void ldv_spin_unlock_122(spinlock_t *lock);


#line 499 
static void ldv_spin_unlock_124(spinlock_t *lock);


#line 503 
static void ldv_spin_unlock_126(spinlock_t *lock);


#line 507 
static void ldv_spin_unlock_128(spinlock_t *lock);


#line 511 
static void ldv_spin_unlock_130(spinlock_t *lock);


#line 515 
static void ldv_spin_unlock_138(spinlock_t *lock);


#line 519 
static void ldv_spin_unlock_140(spinlock_t *lock);


#line 523 
static void ldv_spin_unlock_169(spinlock_t *lock);


#line 527 
static void ldv_spin_unlock_171(spinlock_t *lock);


#line 574  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 576 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 577 
  return;
}


#line 606 
static void ldv_spin_unlock_irqrestore_132(spinlock_t *lock, unsigned long flags);


#line 610 
static void ldv_spin_unlock_irqrestore_135(spinlock_t *lock, unsigned long flags);


#line 614 
static void ldv_spin_unlock_irqrestore_136(spinlock_t *lock, unsigned long flags);


#line 618 
static void ldv_spin_unlock_irqrestore_143(spinlock_t *lock, unsigned long flags);


#line 622 
static void ldv_spin_unlock_irqrestore_147(spinlock_t *lock, unsigned long flags);


#line 626 
static void ldv_spin_unlock_irqrestore_151(spinlock_t *lock, unsigned long flags);


#line 630 
static void ldv_spin_unlock_irqrestore_154(spinlock_t *lock, unsigned long flags);


#line 634 
static void ldv_spin_unlock_irqrestore_157(spinlock_t *lock, unsigned long flags);


#line 638 
static void ldv_spin_unlock_irqrestore_162(spinlock_t *lock, unsigned long flags);


#line 642 
static void ldv_spin_unlock_irqrestore_166(spinlock_t *lock, unsigned long flags);


#line 646 
static void ldv_spin_unlock_irqrestore_172(spinlock_t *lock, unsigned long flags);


#line 650 
static void ldv_spin_unlock_irqrestore_174(spinlock_t *lock, unsigned long flags);


#line 654 
static void ldv_spin_unlock_irqrestore_176(spinlock_t *lock, unsigned long flags);


#line 658 
static void ldv_spin_unlock_irqrestore_178(spinlock_t *lock, unsigned long flags);


#line 662 
static void ldv_spin_unlock_irqrestore_180(spinlock_t *lock, unsigned long flags);


#line 666 
static void ldv_spin_unlock_irqrestore_183(spinlock_t *lock, unsigned long flags);


#line 670 
static void ldv_spin_unlock_irqrestore_185(spinlock_t *lock, unsigned long flags);


#line 674 
static void ldv_spin_unlock_irqrestore_198(spinlock_t *lock, unsigned long flags);


#line 678 
static void ldv_spin_unlock_irqrestore_202(spinlock_t *lock, unsigned long flags);


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_mutex_lock_152(struct mutex *ldv_func_arg1);


#line 41 
static void ldv_mutex_lock_160(struct mutex *ldv_func_arg1);


#line 45 
static void ldv_mutex_lock_181(struct mutex *ldv_func_arg1);


#line 49 
static void ldv_mutex_lock_189(struct mutex *ldv_func_arg1);


#line 53 
static void ldv_mutex_lock_193(struct mutex *ldv_func_arg1);


#line 57 
static void ldv_mutex_lock_196(struct mutex *ldv_func_arg1);


#line 61 
static void ldv_mutex_lock_200(struct mutex *ldv_func_arg1);


#line 67 
void ldv_mutex_model_lock(struct mutex *, char *);


#line 69 
void ldv_mutex_model_unlock(struct mutex *, char *);


#line 71 
void __ldv_spin_lock(spinlock_t *);


#line 98 
static void ldv___ldv_spin_lock_73(spinlock_t *ldv_func_arg1);


#line 102 
static void ldv___ldv_spin_lock_131(spinlock_t *ldv_func_arg1);


#line 106 
static void ldv___ldv_spin_lock_134(spinlock_t *ldv_func_arg1);


#line 110 
static void ldv___ldv_spin_lock_142(spinlock_t *ldv_func_arg1);


#line 114 
static void ldv___ldv_spin_lock_146(spinlock_t *ldv_func_arg1);


#line 118 
static void ldv___ldv_spin_lock_148(spinlock_t *ldv_func_arg1);


#line 122 
static void ldv___ldv_spin_lock_153(spinlock_t *ldv_func_arg1);


#line 126 
static void ldv___ldv_spin_lock_156(spinlock_t *ldv_func_arg1);


#line 130 
static void ldv___ldv_spin_lock_161(spinlock_t *ldv_func_arg1);


#line 134 
static void ldv___ldv_spin_lock_165(spinlock_t *ldv_func_arg1);


#line 138 
static void ldv___ldv_spin_lock_167(spinlock_t *ldv_func_arg1);


#line 142 
static void ldv___ldv_spin_lock_173(spinlock_t *ldv_func_arg1);


#line 146 
static void ldv___ldv_spin_lock_175(spinlock_t *ldv_func_arg1);


#line 150 
static void ldv___ldv_spin_lock_177(spinlock_t *ldv_func_arg1);


#line 154 
static void ldv___ldv_spin_lock_179(spinlock_t *ldv_func_arg1);


#line 158 
static void ldv___ldv_spin_lock_182(spinlock_t *ldv_func_arg1);


#line 162 
static void ldv___ldv_spin_lock_184(spinlock_t *ldv_func_arg1);


#line 166 
static void ldv___ldv_spin_lock_197(spinlock_t *ldv_func_arg1);


#line 170 
static void ldv___ldv_spin_lock_201(spinlock_t *ldv_func_arg1);


#line 178 
void ldv_spin_model_lock(char *);


#line 179 
void ldv_spin_model_unlock(char *);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmdebug.h"
void dump_page(struct page *, char const *);


#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
void __mutex_init(struct mutex *, char const *, struct lock_class_key *);


#line 193 
static void ldv_mutex_unlock_158(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_unlock_159(struct mutex *ldv_func_arg1);


#line 201 
static void ldv_mutex_unlock_164(struct mutex *ldv_func_arg1);


#line 205 
static void ldv_mutex_unlock_186(struct mutex *ldv_func_arg1);


#line 209 
static void ldv_mutex_unlock_190(struct mutex *ldv_func_arg1);


#line 213 
static void ldv_mutex_unlock_194(struct mutex *ldv_func_arg1);


#line 217 
static void ldv_mutex_unlock_199(struct mutex *ldv_func_arg1);


#line 221 
static void ldv_mutex_unlock_203(struct mutex *ldv_func_arg1);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
__inline static int timer_pending(struct timer_list const *timer)
{
  int __retres;
  
#line 165 
  __retres = timer->entry.pprev != (struct hlist_node **)0;
  
#line 165 
  return __retres;
}


#line 173 
static int ldv_mod_timer_103(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 177 
static int ldv_mod_timer_104(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 181 
static int ldv_mod_timer_120(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 185 
static int ldv_mod_timer_150(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 232 
static int ldv_del_timer_sync_141(struct timer_list *ldv_func_arg1);


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void __init_work(struct work_struct *, int);


#line 446 
static bool ldv_flush_work_145(struct work_struct *ldv_func_arg1);


#line 448 
bool cancel_work_sync(struct work_struct *);


#line 560 
static bool ldv_schedule_work_101(struct work_struct *work);


#line 564 
static bool ldv_schedule_work_102(struct work_struct *work);


#line 568 
static bool ldv_schedule_work_115(struct work_struct *work);


#line 572 
static bool ldv_schedule_work_133(struct work_struct *work);


#line 576 
static bool ldv_schedule_work_144(struct work_struct *work);


#line 580 
static bool ldv_schedule_work_149(struct work_struct *work);


#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned char readb(void const volatile *addr)
{
  unsigned char ret;
  
#line 57 
  ldv_inline_asm();
  
#line 56 
  return ret;
}


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile *addr)
{
  unsigned int ret;
  
#line 59 
  ldv_inline_asm();
  
#line 58 
  return ret;
}


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void volatile *addr)
{
  
#line 68 
  ldv_inline_asm();
  
#line 69 
  return;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/iomap.h"
void pci_iounmap(struct pci_dev *, void *);


#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci_iomap.h"
void *pci_iomap(struct pci_dev *, int, unsigned long);


#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct page *alloc_pages_current(gfp_t, unsigned int);


#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
__inline static struct page *alloc_pages(gfp_t gfp_mask, unsigned int order)
{
  struct page *tmp;
  
#line 327 
  tmp = alloc_pages_current(gfp_mask,order);
  
#line 327 
  return tmp;
}


#line 366 
void __free_pages(struct page *, unsigned int);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 425  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
void schedule(void);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 418 
static void *kmalloc(size_t size, gfp_t flags);


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_155(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 153 
static void ldv_free_irq_163(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/vmalloc.h"
void *vmalloc(unsigned long);


#line 83 
void vfree(void const *);


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 1083 
void dev_err(struct device const *, char const * , ...);


#line 859  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
int pci_bus_read_config_byte(struct pci_bus *, unsigned int, int, u8 *);


#line 861 
int pci_bus_read_config_word(struct pci_bus *, unsigned int, int, u16 *);


#line 863 
int pci_bus_read_config_dword(struct pci_bus *, unsigned int, int, u32 *);


#line 865 
int pci_bus_write_config_byte(struct pci_bus *, unsigned int, int, u8);


#line 867 
int pci_bus_write_config_word(struct pci_bus *, unsigned int, int, u16);


#line 869 
int pci_bus_write_config_dword(struct pci_bus *, unsigned int, int, u32);


#line 883  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_byte(struct pci_dev const *dev, int where, u8 *val)
{
  int tmp;
  
#line 885 
  tmp = pci_bus_read_config_byte(dev->bus,dev->devfn,where,val);
  
#line 885 
  return tmp;
}


#line 887  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_word(struct pci_dev const *dev, int where, u16 *val)
{
  int tmp;
  
#line 889 
  tmp = pci_bus_read_config_word(dev->bus,dev->devfn,where,val);
  
#line 889 
  return tmp;
}


#line 891  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_dword(struct pci_dev const *dev, int where, u32 *val)
{
  int tmp;
  
#line 894 
  tmp = pci_bus_read_config_dword(dev->bus,dev->devfn,where,val);
  
#line 894 
  return tmp;
}


#line 896  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_write_config_byte(struct pci_dev const *dev, int where, u8 val)
{
  int tmp;
  
#line 898 
  tmp = pci_bus_write_config_byte(dev->bus,dev->devfn,where,(unsigned char)((int)val));
  
#line 898 
  return tmp;
}


#line 900  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_write_config_word(struct pci_dev const *dev, int where, u16 val)
{
  int tmp;
  
#line 902 
  tmp = pci_bus_write_config_word(dev->bus,dev->devfn,where,(unsigned short)((int)val));
  
#line 902 
  return tmp;
}


#line 904  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_write_config_dword(struct pci_dev const *dev, int where, u32 val)
{
  int tmp;
  
#line 907 
  tmp = pci_bus_write_config_dword(dev->bus,dev->devfn,where,val);
  
#line 907 
  return tmp;
}


#line 951 
int pci_enable_device(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 978 
int pci_try_set_mwi(struct pci_dev *);


#line 1026 
int pci_save_state(struct pci_dev *);


#line 1027 
void pci_restore_state(struct pci_dev *);


#line 1094 
int pci_request_regions(struct pci_dev *, char const *);


#line 1096 
void pci_release_regions(struct pci_dev *);


#line 1146 
static int ldv___pci_register_driver_204(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_205(struct pci_driver *ldv_func_arg1);


#line 400  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page-flags.h"
__inline static int PageTail(struct page const *page)
{
  int tmp;
  
#line 400 
  tmp = constant_test_bit(15L,(unsigned long const volatile *)(& page->flags));
  
#line 400 
  return tmp;
}


#line 440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static struct page *compound_head_by_tail(struct page *tail)
{
  struct page *__retres;
  int tmp;
  
#line 442 
  struct page *head = tail->__anonCompField_page_46.first_page;
  
#line 443 
  ldv_inline_asm();
  
#line 450 
  tmp = PageTail((struct page const *)tail);
  
#line 450 
  if ((long)(tmp != 0) != 0L) {
    
#line 451 
    __retres = head;
    
#line 451 
    goto return_label;
  }
  else ;
  
#line 452 
  __retres = tail;
  return_label: 
#line 452 
                return __retres;
}


#line 461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static struct page *compound_head(struct page *page)
{
  struct page *__retres;
  int tmp_0;
  
#line 463 
  tmp_0 = PageTail((struct page const *)page);
  
#line 463 
  if ((long)(tmp_0 != 0) != 0L) {
    struct page *tmp;
    
#line 464 
    tmp = compound_head_by_tail(page);
    
#line 464 
    __retres = tmp;
    
#line 464 
    goto return_label;
  }
  else ;
  
#line 465 
  __retres = page;
  return_label: 
#line 465 
                return __retres;
}


#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static int page_count(struct page *page)
{
  int tmp_0;
  struct page *tmp;
  
#line 498 
  tmp = compound_head(page);
  
#line 498 
  tmp_0 = atomic_read((atomic_t const *)(& tmp->__anonCompField_page_42.__anonCompField___anonstruct_151_41.__anonCompField___anonunion_153_40._count));
  
#line 498 
  return tmp_0;
}


#line 532 
bool __get_page_tail(struct page *);


#line 534  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void get_page(struct page *page)
{
  int tmp_0;
  int tmp_1;
  
#line 536 
  tmp_0 = PageTail((struct page const *)page);
  
#line 536 
  if ((long)(tmp_0 != 0) != 0L) {
    bool tmp;
    
#line 537 
    tmp = __get_page_tail(page);
    
#line 537 
    if ((long)((int)tmp != 0) != 0L) 
#line 538 
                                     goto return_label; else ;
  }
  else ;
  
#line 543 
  tmp_1 = atomic_read((atomic_t const *)(& page->__anonCompField_page_42.__anonCompField___anonstruct_151_41.__anonCompField___anonunion_153_40._count));
  
#line 543 
  if ((long)(tmp_1 <= 0) != 0L) {
    
#line 543 
    dump_page(page,"VM_BUG_ON_PAGE(");
    
#line 544 
    ldv_inline_asm();
    
#line 543 
    ;
  }
  else ;
  
#line 544 
  atomic_inc(& page->__anonCompField_page_42.__anonCompField___anonstruct_151_41.__anonCompField___anonunion_153_40._count);
  return_label: 
#line 545 
                return;
}


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page const *page)
{
  void *__retres;
  
#line 947 
  __retres = (void *)((unsigned long)((unsigned long long)(((long)page + 24189255811072L) / 64L) << 12) + 18446612132314218496UL);
  
#line 947 
  return __retres;
}


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 59 
void debug_dma_sync_single_for_cpu(struct device *, dma_addr_t, size_t, int);


#line 63 
void debug_dma_sync_single_for_device(struct device *, dma_addr_t, size_t, int);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_page(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t addr;
  void *tmp_0;
  int tmp_1;
  
#line 80 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 83 
  ;
  
#line 83 
  tmp_0 = lowmem_page_address((struct page const *)page);
  
#line 83 
  ;
  
#line 83 
  kmemcheck_mark_initialized(tmp_0 + offset,(unsigned int)size);
  
#line 84 
  tmp_1 = valid_dma_direction((int)dir);
  
#line 84 
  if ((long)(tmp_1 == 0) != 0L) {
    
#line 86 
    ldv_inline_asm();
    
#line 84 
    ;
  }
  else ;
  
#line 85 
  addr = (*(ops->map_page))(dev,page,offset,size,dir,(struct dma_attrs *)0);
  
#line 86 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr,(_Bool)0);
  
#line 88 
  return addr;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_page(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 94 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 96 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 96 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 98 
    ldv_inline_asm();
    
#line 96 
    ;
  }
  else ;
  
#line 97 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 98 
    (*(ops->unmap_page))(dev,addr,size,dir,(struct dma_attrs *)0); else ;
  
#line 99 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)0);
  
#line 100 
  return;
}


#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_for_cpu(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 106 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 108 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 108 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 110 
    ldv_inline_asm();
    
#line 108 
    ;
  }
  else ;
  
#line 109 
  if (ops->sync_single_for_cpu != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 110 
    (*(ops->sync_single_for_cpu))(dev,addr,size,dir); else ;
  
#line 111 
  debug_dma_sync_single_for_cpu(dev,addr,size,(int)dir);
  
#line 112 
  return;
}


#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_for_device(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 118 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 120 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 120 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 122 
    ldv_inline_asm();
    
#line 120 
    ;
  }
  else ;
  
#line 121 
  if (ops->sync_single_for_device != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 122 
    (*(ops->sync_single_for_device))(dev,addr,size,dir); else ;
  
#line 123 
  debug_dma_sync_single_for_device(dev,addr,size,(int)dir);
  
#line 124 
  return;
}


#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
int dma_supported(struct device *, u64);


#line 61 
int dma_set_mask(struct device *, u64);


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_coherent_mask(struct device *dev, u64 mask)
{
  int __retres;
  int tmp;
  
#line 103 
  tmp = dma_supported(dev,mask);
  
#line 103 
  if (tmp == 0) {
    
#line 104 
    __retres = -5;
    
#line 104 
    goto return_label;
  }
  else ;
  
#line 105 
  dev->coherent_dma_mask = mask;
  
#line 106 
  __retres = 0;
  return_label: 
#line 106 
                return __retres;
}


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void *pci_alloc_consistent(struct pci_dev *hwdev, size_t size, dma_addr_t *dma_handle)
{
  void *tmp_0;
  struct device *tmp;
  
#line 19 
  ;
  
#line 19 
  ;
  
#line 19 
  if (hwdev != (struct pci_dev *)0) 
#line 19 
                                    tmp = & hwdev->dev; else 
#line 19 
                                                             tmp = (struct device *)0;
  
#line 19 
  tmp_0 = dma_alloc_attrs(tmp,size,dma_handle,32U,(struct dma_attrs *)0);
  
#line 19 
  return tmp_0;
}


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_free_consistent(struct pci_dev *hwdev, size_t size, void *vaddr, dma_addr_t dma_handle)
{
  struct device *tmp;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  if (hwdev != (struct pci_dev *)0) 
#line 34 
                                    tmp = & hwdev->dev; else 
#line 34 
                                                             tmp = (struct device *)0;
  
#line 34 
  dma_free_attrs(tmp,size,vaddr,dma_handle,(struct dma_attrs *)0);
  
#line 35 
  return;
}


#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static dma_addr_t pci_map_page(struct pci_dev *hwdev, struct page *page, unsigned long offset, size_t size, int direction)
{
  dma_addr_t tmp_0;
  struct device *tmp;
  
#line 54 
  ;
  
#line 54 
  ;
  
#line 54 
  ;
  
#line 54 
  ;
  
#line 54 
  if (hwdev != (struct pci_dev *)0) 
#line 54 
                                    tmp = & hwdev->dev; else 
#line 54 
                                                             tmp = (struct device *)0;
  
#line 54 
  tmp_0 = dma_map_page(tmp,page,offset,size,(enum dma_data_direction)direction);
  
#line 54 
  return tmp_0;
}


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_unmap_page(struct pci_dev *hwdev, dma_addr_t dma_address, size_t size, int direction)
{
  struct device *tmp;
  
#line 61 
  ;
  
#line 61 
  ;
  
#line 61 
  ;
  
#line 61 
  if (hwdev != (struct pci_dev *)0) 
#line 61 
                                    tmp = & hwdev->dev; else 
#line 61 
                                                             tmp = (struct device *)0;
  
#line 61 
  dma_unmap_page(tmp,dma_address,size,(enum dma_data_direction)direction);
  
#line 62 
  return;
}


#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_dma_sync_single_for_cpu(struct pci_dev *hwdev, dma_addr_t dma_handle, size_t size, int direction)
{
  struct device *tmp;
  
#line 82 
  ;
  
#line 82 
  ;
  
#line 82 
  ;
  
#line 82 
  if (hwdev != (struct pci_dev *)0) 
#line 82 
                                    tmp = & hwdev->dev; else 
#line 82 
                                                             tmp = (struct device *)0;
  
#line 82 
  dma_sync_single_for_cpu(tmp,dma_handle,size,(enum dma_data_direction)direction);
  
#line 83 
  return;
}


#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_dma_sync_single_for_device(struct pci_dev *hwdev, dma_addr_t dma_handle, size_t size, int direction)
{
  struct device *tmp;
  
#line 89 
  ;
  
#line 89 
  ;
  
#line 89 
  ;
  
#line 89 
  if (hwdev != (struct pci_dev *)0) 
#line 89 
                                    tmp = & hwdev->dev; else 
#line 89 
                                                             tmp = (struct device *)0;
  
#line 89 
  dma_sync_single_for_device(tmp,dma_handle,size,(enum dma_data_direction)direction);
  
#line 90 
  return;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 115 
  tmp = dma_set_mask(& dev->dev,mask);
  
#line 115 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_consistent_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 120 
  tmp = dma_set_coherent_mask(& dev->dev,mask);
  
#line 120 
  return tmp;
}


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  
#line 1478 
  dev_set_drvdata(& pdev->dev,data);
  
#line 1479 
  return;
}


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static char const *pci_name(struct pci_dev const *pdev)
{
  char const *tmp;
  
#line 1486 
  tmp = dev_name(& pdev->dev);
  
#line 1486 
  return tmp;
}


#line 7  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uaccess.h"
__inline static void pagefault_disabled_inc(void)
{
  struct task_struct *tmp;
  
#line 9 
  tmp = get_current();
  
#line 9 
  tmp->pagefault_disabled += 1;
  
#line 10 
  return;
}


#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uaccess.h"
__inline static void pagefault_disabled_dec(void)
{
  struct task_struct *tmp;
  
#line 14 
  tmp = get_current();
  
#line 14 
  tmp->pagefault_disabled -= 1;
  {
    struct task_struct *tmp_0;
    
#line 15 
    tmp_0 = get_current();
    
#line 15 
    int __ret_warn_on = tmp_0->pagefault_disabled < 0;
    
#line 15 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 15 
                                          warn_slowpath_null("include/linux/uaccess.h",15); else ;
    
#line 15 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 17 
  return;
}


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uaccess.h"
__inline static void pagefault_disable(void)
{
  
#line 27 
  pagefault_disabled_inc();
  
#line 28 
  ldv_inline_asm();
  
#line 29 
  return;
}


#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uaccess.h"
__inline static void pagefault_enable(void)
{
  
#line 37 
  ldv_inline_asm();
  
#line 42 
  pagefault_disabled_dec();
  
#line 43 
  return;
}


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highmem.h"
__inline static void *kmap_atomic(struct page *page)
{
  void *tmp;
  
#line 68 
  __preempt_count_add(1);
  
#line 69 
  ldv_inline_asm();
  
#line 69 
  pagefault_disable();
  
#line 70 
  tmp = lowmem_page_address((struct page const *)page);
  
#line 70 
  return tmp;
}


#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highmem.h"
__inline static void __kunmap_atomic(void *addr)
{
  
#line 76 
  pagefault_enable();
  
#line 77 
  ldv_inline_asm();
  
#line 77 
  __preempt_count_sub(1);
  
#line 78 
  return;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
void get_random_bytes(void *, int);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static __sum16 csum_fold(__wsum sum)
{
  __sum16 __retres;
  
#line 24 
  ldv_inline_asm();
  
#line 29 
  __retres = (unsigned short)(~ sum >> 16);
  
#line 29 
  return __retres;
}


#line 129 
__wsum csum_partial(void const *, int, __wsum);


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
__inline static __wsum csum_unfold(__sum16 n)
{
  __wsum __retres;
  
#line 113 
  __retres = (unsigned int)n;
  
#line 113 
  return __retres;
}


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_frag_size(skb_frag_t const *frag)
{
  unsigned int __retres;
  
#line 232 
  __retres = frag->size;
  
#line 232 
  return __retres;
}


#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_frag_size_set(skb_frag_t *frag, unsigned int size)
{
  
#line 237 
  frag->size = size;
  
#line 238 
  return;
}


#line 862 
int skb_pad(struct sk_buff *, int);


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *skb_peek(struct sk_buff_head const *list_)
{
  
#line 1261 
  struct sk_buff *skb = list_->next;
  
#line 1263 
  if (skb == (struct sk_buff *)list_) 
#line 1264 
                                      skb = (struct sk_buff *)0; else ;
  
#line 1265 
  return skb;
}


#line 1331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_queue_head_init(struct sk_buff_head *list)
{
  struct sk_buff *tmp;
  
#line 1333 
  tmp = (struct sk_buff *)list;
  
#line 1333 
  list->next = tmp;
  
#line 1333 
  list->prev = tmp;
  
#line 1334 
  list->qlen = 0U;
  
#line 1335 
  return;
}


#line 1345  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_queue_head_init(struct sk_buff_head *list)
{
  
#line 1347 
  spinlock_check(& list->lock);
  {
    struct lock_class_key __key;
    
#line 1347 
    __raw_spin_lock_init(& list->lock.__anonCompField_spinlock_18.rlock,"&(&list->lock)->rlock",& __key);
  }
  
#line 1348 
  __skb_queue_head_init(list);
  
#line 1349 
  return;
}


#line 1366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_insert(struct sk_buff *newsk, struct sk_buff *prev, struct sk_buff *next, struct sk_buff_head *list)
{
  struct sk_buff *tmp;
  
#line 1370 
  newsk->__anonCompField_sk_buff_87.__anonCompField___anonunion_290_86.next = next;
  
#line 1371 
  newsk->__anonCompField_sk_buff_87.__anonCompField___anonunion_290_86.prev = prev;
  
#line 1372 
  tmp = newsk;
  
#line 1372 
  prev->__anonCompField_sk_buff_87.__anonCompField___anonunion_290_86.next = tmp;
  
#line 1372 
  next->__anonCompField_sk_buff_87.__anonCompField___anonunion_290_86.prev = tmp;
  
#line 1373 
  list->qlen += 1U;
  
#line 1374 
  return;
}


#line 1474  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_queue_before(struct sk_buff_head *list, struct sk_buff *next, struct sk_buff *newsk)
{
  
#line 1478 
  __skb_insert(newsk,next->__anonCompField_sk_buff_87.__anonCompField___anonunion_290_86.prev,next,list);
  
#line 1479 
  return;
}


#line 1509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_queue_tail(struct sk_buff_head *list, struct sk_buff *newsk)
{
  
#line 1512 
  __skb_queue_before(list,(struct sk_buff *)list,newsk);
  
#line 1513 
  return;
}


#line 1520  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_unlink(struct sk_buff *skb, struct sk_buff_head *list)
{
  struct sk_buff *next;
  struct sk_buff *prev;
  struct sk_buff *tmp;
  
#line 1524 
  list->qlen -= 1U;
  
#line 1525 
  next = skb->__anonCompField_sk_buff_87.__anonCompField___anonunion_290_86.next;
  
#line 1526 
  prev = skb->__anonCompField_sk_buff_87.__anonCompField___anonunion_290_86.prev;
  
#line 1527 
  tmp = (struct sk_buff *)0;
  
#line 1527 
  skb->__anonCompField_sk_buff_87.__anonCompField___anonunion_290_86.prev = tmp;
  
#line 1527 
  skb->__anonCompField_sk_buff_87.__anonCompField___anonunion_290_86.next = tmp;
  
#line 1528 
  next->__anonCompField_sk_buff_87.__anonCompField___anonunion_290_86.prev = prev;
  
#line 1529 
  prev->__anonCompField_sk_buff_87.__anonCompField___anonunion_290_86.next = next;
  
#line 1530 
  return;
}


#line 1541  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *__skb_dequeue(struct sk_buff_head *list)
{
  
#line 1543 
  struct sk_buff *skb = skb_peek((struct sk_buff_head const *)list);
  
#line 1544 
  if (skb != (struct sk_buff *)0) 
#line 1545 
                                  __skb_unlink(skb,list); else ;
  
#line 1546 
  return skb;
}


#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1574 
  __retres = skb->len - skb->data_len;
  
#line 1574 
  return __retres;
}


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1750  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headroom(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1752 
  __retres = (unsigned int)((long)skb->data - (long)skb->head);
  
#line 1752 
  return __retres;
}


#line 1789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reserve(struct sk_buff *skb, int len)
{
  
#line 1791 
  skb->data += len;
  
#line 1792 
  skb->tail += (unsigned int)len;
  
#line 1793 
  return;
}


#line 1962  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_checksum_start_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned int tmp;
  
#line 1964 
  tmp = skb_headroom(skb);
  
#line 1964 
  ;
  
#line 1964 
  __retres = (int)((unsigned int)skb->__anonCompField_sk_buff_89.__anonCompField___anonunion_293_88.csum_start - tmp);
  
#line 1964 
  return __retres;
}


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2159 
  tmp = __netdev_alloc_skb(dev,length,32U);
  
#line 2159 
  return tmp;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t const *frag)
{
  struct page *__retres;
  
#line 2274 
  __retres = frag->page.p;
  
#line 2274 
  return __retres;
}


#line 2283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_frag_ref(skb_frag_t *frag)
{
  struct page *tmp;
  
#line 2285 
  tmp = skb_frag_page((skb_frag_t const *)frag);
  
#line 2285 
  get_page(tmp);
  
#line 2286 
  return;
}


#line 2358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_frag_set_page(skb_frag_t *frag, struct page *page)
{
  
#line 2360 
  frag->page.p = page;
  
#line 2361 
  return;
}


#line 2390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static dma_addr_t skb_frag_dma_map(struct device *dev, skb_frag_t const *frag, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t tmp_0;
  struct page *tmp;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  tmp = skb_frag_page(frag);
  
#line 2395 
  ;
  
#line 2395 
  tmp_0 = dma_map_page(dev,tmp,(unsigned long)frag->page_offset + offset,size,dir);
  
#line 2395 
  return tmp_0;
}


#line 2483  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_padto(struct sk_buff *skb, unsigned int len)
{
  int __retres;
  int tmp;
  
#line 2485 
  unsigned int size = skb->len;
  
#line 2486 
  if ((long)(size >= len) != 0L) {
    
#line 2487 
    __retres = 0;
    
#line 2487 
    goto return_label;
  }
  else ;
  
#line 2488 
  tmp = skb_pad(skb,(int)(len - size));
  
#line 2488 
  __retres = tmp;
  return_label: 
#line 2488 
                return __retres;
}


#line 2796  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_copy_from_linear_data_offset(struct sk_buff const *skb, int const offset, void *to, unsigned int const len)
{
  
#line 2800 
  memcpy(to,(void const *)(skb->data + offset),(unsigned long)len);
  
#line 2801 
  return;
}


#line 3426  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_checksum_none_assert(struct sk_buff const *skb)
{
  
#line 3428 
  return;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static void ethtool_cmd_speed_set(struct ethtool_cmd *ep, __u32 speed)
{
  
#line 117 
  ep->speed = (unsigned short)speed;
  
#line 118 
  ep->speed_hi = (unsigned short)(speed >> 16);
  
#line 119 
  return;
}


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static __u32 ethtool_cmd_speed(struct ethtool_cmd const *ep)
{
  __u32 __retres;
  
#line 123 
  __retres = (unsigned int)(((int)ep->speed_hi << 16) | (int)ep->speed);
  
#line 123 
  return __retres;
}


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
__inline static struct mii_ioctl_data *if_mii(struct ifreq *rq)
{
  struct mii_ioctl_data *__retres;
  
#line 47 
  __retres = (struct mii_ioctl_data *)(& rq->ifr_ifru);
  
#line 47 
  return __retres;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 2205 
static void ldv_free_netdev_191(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_195(struct net_device *ldv_func_arg1);


#line 2515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  
#line 2517 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2518 
  return;
}


#line 2526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_start_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2528 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2528 
  netif_tx_start_queue(tmp);
  
#line 2529 
  return;
}


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_wake_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2552 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2552 
  netif_tx_wake_queue(tmp);
  
#line 2553 
  return;
}


#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_tx_queue_stopped(struct netdev_queue const *dev_queue)
{
  bool __retres;
  int tmp;
  
#line 2586 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev_queue->state));
  
#line 2586 
  __retres = (_Bool)(tmp != 0);
  
#line 2586 
  return __retres;
}


#line 2595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_queue_stopped(struct net_device const *dev)
{
  bool tmp_0;
  struct netdev_queue *tmp;
  
#line 2597 
  tmp = netdev_get_tx_queue(dev,0U);
  
#line 2597 
  tmp_0 = netif_tx_queue_stopped((struct netdev_queue const *)tmp);
  
#line 2597 
  return tmp_0;
}


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 2899 
void __dev_kfree_skb_irq(struct sk_buff *, enum skb_free_reason);


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2921  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_irq(struct sk_buff *skb)
{
  
#line 2923 
  __dev_kfree_skb_irq(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2924 
  return;
}


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2941 
int netif_rx(struct sk_buff *);


#line 3047 
void netif_carrier_on(struct net_device *);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_device_present(struct net_device *dev)
{
  bool __retres;
  int tmp;
  
#line 3114 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& dev->state));
  
#line 3114 
  __retres = (_Bool)(tmp != 0);
  
#line 3114 
  return __retres;
}


#line 3117 
void netif_device_detach(struct net_device *);


#line 3119 
void netif_device_attach(struct net_device *);


#line 3355 
static int ldv_register_netdev_188(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_192(struct net_device *ldv_func_arg1);


#line 3819 
void netdev_printk(char const *, struct net_device const *, char const * , ...);


#line 3828 
void netdev_err(struct net_device const *, char const * , ...);


#line 3830 
void netdev_warn(struct net_device const *, char const * , ...);


#line 3834 
void netdev_info(struct net_device const *, char const * , ...);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 45 
int eth_mac_addr(struct net_device *, void *);


#line 47 
int eth_validate_addr(struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_187(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crc32.h"
u32 crc32_le(u32, unsigned char const *, size_t);


#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/firmware.h"
int request_firmware(struct firmware const **, char const *, struct device *);


#line 51 
void release_firmware(struct firmware const *);


#line 2379  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.h"
static cas_hp_inst_t cas_prog_workaroundtab[21U] = {{.note = "packet arrival?", .mask = (unsigned short)65535U, .val = (unsigned short)0U, .op = (unsigned char)3U, .soff = (unsigned char)6U, .snext = (unsigned char)1U, .foff = (unsigned char)0U, .fnext = (unsigned char)0U, .outop = (unsigned char)0U, .outarg = (unsigned short)1023U, .outenab = (unsigned char)1U, .outshift = (unsigned char)0U, .outmask = (unsigned short)0U}, {.note = "VLAN?", .mask = (unsigned short)65535U, .val = (unsigned short)33024U, .op = (unsigned char)0U, .soff = (unsigned char)1U, .snext = (unsigned char)2U, .foff = (unsigned char)0U, .fnext = (unsigned char)3U, .outop = (unsigned char)13U, .outarg = (unsigned short)74U, .outenab = (unsigned char)3U, .outshift = (unsigned char)0U, .outmask = (unsigned short)65535U}, {.note = "CFI?", .mask = (unsigned short)4096U, .val = (unsigned short)4096U, .op = (unsigned char)0U, .soff = (unsigned char)0U, .snext = (unsigned char)18U, .foff = (unsigned char)1U, .fnext = (unsigned char)3U, .outop = (unsigned char)0U, .outarg = (unsigned short)0U, .outenab = (unsigned char)0U, .outshift = (unsigned char)0U, .outmask = (unsigned short)0U}, {.note = "8023?", .mask = (unsigned short)65535U, .val = (unsigned short)1536U, .op = (unsigned char)1U, .soff = (unsigned char)1U, .snext = (unsigned char)4U, .foff = (unsigned char)0U, .fnext = (unsigned char)6U, .outop = (unsigned char)0U, .outarg = (unsigned short)0U, .outenab = (unsigned char)0U, .outshift = (unsigned char)0U, .outmask = (unsigned short)0U}, {.note = "LLC?", .mask = (unsigned short)65535U, .val = (unsigned short)43690U, .op = (unsigned char)0U, .soff = (unsigned char)1U, .snext = (unsigned char)5U, .foff = (unsigned char)0U, .fnext = (unsigned char)18U, .outop = (unsigned char)0U, .outarg = (unsigned short)0U, .outenab = (unsigned char)0U, .outshift = (unsigned char)0U, .outmask = (unsigned short)0U}, {.note = "LLCc?", .mask = (unsigned short)65280U, .val = (unsigned short)768U, .op = (unsigned char)0U, .soff = (unsigned char)2U, .snext = (unsigned char)6U, .foff = (unsigned char)0U, .fnext = (unsigned char)18U, .outop = (unsigned char)0U, .outarg = (unsigned short)0U, .outenab = (unsigned char)0U, .outshift = (unsigned char)0U, .outmask = (unsigned short)0U}, {.note = "IPV4?", .mask = (unsigned short)65535U, .val = (unsigned short)2048U, .op = (unsigned char)0U, .soff = (unsigned char)1U, .snext = (unsigned char)7U, .foff = (unsigned char)0U, .fnext = (unsigned char)10U, .outop = (unsigned char)11U, .outarg = (unsigned short)1710U, .outenab = (unsigned char)3U, .outshift = (unsigned char)0U, .outmask = (unsigned short)65535U}, {.note = "IPV4 cont?", .mask = (unsigned short)65280U, .val = (unsigned short)17664U, .op = (unsigned char)0U, .soff = (unsigned char)3U, .snext = (unsigned char)8U, .foff = (unsigned char)0U, .fnext = (unsigned char)18U, .outop = (unsigned char)7U, .outarg = (unsigned short)10U, .outenab = (unsigned char)1U, .outshift = (unsigned char)0U, .outmask = (unsigned short)0U}, {.note = "IPV4 frag?", .mask = (unsigned short)16383U, .val = (unsigned short)0U, .op = (unsigned char)0U, .soff = (unsigned char)1U, .snext = (unsigned char)9U, .foff = (unsigned char)0U, .fnext = (unsigned char)18U, .outop = (unsigned char)14U, .outarg = (unsigned short)62U, .outenab = (unsigned char)1U, .outshift = (unsigned char)0U, .outmask = (unsigned short)65535U}, {.note = "TCP44?", .mask = (unsigned short)255U, .val = (unsigned short)6U, .op = (unsigned char)0U, .soff = (unsigned char)7U, .snext = (unsigned char)14U, .foff = (unsigned char)0U, .fnext = (unsigned char)18U, .outop = (unsigned char)1U, .outarg = (unsigned short)386U, .outenab = (unsigned char)3U, .outshift = (unsigned char)0U, .outmask = (unsigned short)65535U}, {.note = "IPV6?", .mask = (unsigned short)65535U, .val = (unsigned short)34525U, .op = (unsigned char)0U, .soff = (unsigned char)1U, .snext = (unsigned char)11U, .foff = (unsigned char)0U, .fnext = (unsigned char)18U, .outop = (unsigned char)7U, .outarg = (unsigned short)21U, .outenab = (unsigned char)1U, .outshift = (unsigned char)0U, .outmask = (unsigned short)0U}, {.note = "IPV6 len", .mask = (unsigned short)61440U, .val = (unsigned short)24576U, .op = (unsigned char)0U, .soff = (unsigned char)0U, .snext = (unsigned char)12U, .foff = (unsigned char)0U, .fnext = (unsigned char)18U, .outop = (unsigned char)12U, .outarg = (unsigned short)296U, .outenab = (unsigned char)1U, .outshift = (unsigned char)0U, .outmask = (unsigned short)65535U}, {.note = "IPV6 cont?", .mask = (unsigned short)0U, .val = (unsigned short)0U, .op = (unsigned char)0U, .soff = (unsigned char)3U, .snext = (unsigned char)13U, .foff = (unsigned char)0U, .fnext = (unsigned char)18U, .outop = (unsigned char)1U, .outarg = (unsigned short)1156U, .outenab = (unsigned char)1U, .outshift = (unsigned char)0U, .outmask = (unsigned short)65535U}, {.note = "TCP64?", .mask = (unsigned short)65280U, .val = (unsigned short)1536U, .op = (unsigned char)0U, .soff = (unsigned char)18U, .snext = (unsigned char)14U, .foff = (unsigned char)0U, .fnext = (unsigned char)18U, .outop = (unsigned char)14U, .outarg = (unsigned short)63U, .outenab = (unsigned char)1U, .outshift = (unsigned char)0U, .outmask = (unsigned short)65535U}, {.note = "TCP seq", .mask = (unsigned short)0U, .val = (unsigned short)0U, .op = (unsigned char)0U, .soff = (unsigned char)0U, .snext = (unsigned char)15U, .foff = (unsigned char)4U, .fnext = (unsigned char)15U, .outop = (unsigned char)2U, .outarg = (unsigned short)129U, .outenab = (unsigned char)3U, .outshift = (unsigned char)0U, .outmask = (unsigned short)65535U}, {.note = "TCP control flags", .mask = (unsigned short)0U, .val = (unsigned short)0U, .op = (unsigned char)0U, .soff = (unsigned char)0U, .snext = (unsigned char)16U, .foff = (unsigned char)0U, .fnext = (unsigned char)16U, .outop = (unsigned char)15U, .outarg = (unsigned short)69U, .outenab = (unsigned char)3U, .outshift = (unsigned char)0U, .outmask = (unsigned short)47U}, {.note = "TCP length", .mask = (unsigned short)0U, .val = (unsigned short)0U, .op = (unsigned char)0U, .soff = (unsigned char)0U, .snext = (unsigned char)17U, .foff = (unsigned char)0U, .fnext = (unsigned char)17U, .outop = (unsigned char)5U, .outarg = (unsigned short)517U, .outenab = (unsigned char)3U, .outshift = (unsigned char)11U, .outmask = (unsigned short)61440U}, {.note = "TCP length cont", .mask = (unsigned short)0U, .val = (unsigned short)0U, .op = (unsigned char)0U, .soff = (unsigned char)0U, .snext = (unsigned char)0U, .foff = (unsigned char)0U, .fnext = (unsigned char)0U, .outop = (unsigned char)8U, .outarg = (unsigned short)255U, .outenab = (unsigned char)3U, .outshift = (unsigned char)0U, .outmask = (unsigned short)65535U}, {.note = "Cleanup", .mask = (unsigned short)0U, .val = (unsigned short)0U, .op = (unsigned char)0U, .soff = (unsigned char)0U, .snext = (unsigned char)19U, .foff = (unsigned char)0U, .fnext = (unsigned char)19U, .outop = (unsigned char)11U, .outarg = (unsigned short)1710U, .outenab = (unsigned char)3U, .outshift = (unsigned char)0U, .outmask = (unsigned short)65535U}, {.note = "Cleanup 2", .mask = (unsigned short)0U, .val = (unsigned short)0U, .op = (unsigned char)0U, .soff = (unsigned char)0U, .snext = (unsigned char)0U, .foff = (unsigned char)0U, .fnext = (unsigned char)0U, .outop = (unsigned char)13U, .outarg = (unsigned short)1U, .outenab = (unsigned char)3U, .outshift = (unsigned char)0U, .outmask = (unsigned short)1U}, {.note = (char const *)0, .mask = (unsigned short)0, .val = (unsigned short)0, .op = (unsigned char)0, .soff = (unsigned char)0, .snext = (unsigned char)0, .foff = (unsigned char)0, .fnext = (unsigned char)0, .outop = (unsigned char)0, .outarg = (unsigned short)0, .outenab = (unsigned char)0, .outshift = (unsigned char)0, .outmask = (unsigned short)0}};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static char version[30U] = {(char)'c', (char)'a', (char)'s', (char)'s', (char)'i', (char)'n', (char)'i', (char)'\000'};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cassini_debug = -1;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int link_mode;

#line 209  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int linkdown_timeout = 5;

#line 219  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int link_transition_timeout;

#line 223  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static u16 link_modes[6U] = {(unsigned short)4096U, (unsigned short)0U, (unsigned short)8192U, (unsigned short)256U, (unsigned short)8448U, (unsigned short)320U};

#line 232  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static struct pci_device_id const cas_pci_tbl[3U] = {{.vendor = 4238U, .device = 43962U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4107U, .device = 53U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 240  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
struct pci_device_id const __mod_pci__cas_pci_tbl_device_table[3U];

#line 242 
static void cas_set_link_modes(struct cas *cp);


#line 244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
__inline static void cas_lock_tx(struct cas *cp)
{
  int i;
  
#line 248 
  i = 0;
  
#line 248 
  goto ldv_52117;
  ldv_52116: 
#line 249 
  ;
  
#line 249 
  ldv___ldv_spin_lock_73(& cp->tx_lock[i]);
  
#line 248 
  i += 1;
  ldv_52117: 
#line 249 
  ;
  
#line 248 
  if (i <= 3) 
#line 250 
              goto ldv_52116; else 
#line 253 
                                   goto ldv_52118;
  ldv_52118: 
#line 254 
  ;
  
#line 255 
  return;
}


#line 273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
__inline static void cas_unlock_tx(struct cas *cp)
{
  int i;
  
#line 277 
  i = 4;
  
#line 277 
  goto ldv_52127;
  ldv_52126: 
#line 278 
  ;
  
#line 278 
  ldv_spin_unlock_75(& cp->tx_lock[i + -1]);
  
#line 277 
  i -= 1;
  ldv_52127: 
#line 278 
  ;
  
#line 277 
  if (i > 0) 
#line 279 
             goto ldv_52126; else 
#line 282 
                                  goto ldv_52128;
  ldv_52128: 
#line 283 
  ;
  
#line 284 
  return;
}


#line 294  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_disable_irq(struct cas *cp, int const ring)
{
  
#line 297 
  if (ring == 0) {
    
#line 298 
    writel(4294967295U,(void volatile *)(cp->regs + 16U));
    
#line 299 
    goto return_label;
  }
  else ;
  
#line 303 
  if ((cp->cas_flags & 2U) != 0U) {
    
#line 304 
    switch (ring) {
      default: 
#line 319 
      ;
      
#line 320 
      writel(31U,(void volatile *)(cp->regs + ((ring + -1) * 16 + 4152)));
      
#line 322 
      goto ldv_52137;
    }
    ldv_52137: 
#line 324 
    ;
  }
  else ;
  return_label: 
#line 326 
                return;
}


#line 327  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
__inline static void cas_mask_intr(struct cas *cp)
{
  int i;
  
#line 331 
  i = 0;
  
#line 331 
  goto ldv_52143;
  ldv_52142: 
#line 332 
  ;
  
#line 332 
  cas_disable_irq(cp,i);
  
#line 331 
  i += 1;
  ldv_52143: 
#line 332 
  ;
  
#line 331 
  if (i <= 0) 
#line 333 
              goto ldv_52142; else 
#line 336 
                                   goto ldv_52144;
  ldv_52144: 
#line 337 
  ;
  
#line 338 
  return;
}


#line 335  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_enable_irq(struct cas *cp, int const ring)
{
  
#line 337 
  if (ring == 0) {
    
#line 338 
    writel(4U,(void volatile *)(cp->regs + 16U));
    
#line 339 
    goto return_label;
  }
  else ;
  
#line 342 
  if ((cp->cas_flags & 2U) != 0U) {
    
#line 343 
    switch (ring) {
      default: 
#line 358 
      ;
      
#line 359 
      goto ldv_52150;
    }
    ldv_52150: 
#line 361 
    ;
  }
  else ;
  return_label: 
#line 363 
                return;
}


#line 364  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
__inline static void cas_unmask_intr(struct cas *cp)
{
  int i;
  
#line 368 
  i = 0;
  
#line 368 
  goto ldv_52156;
  ldv_52155: 
#line 369 
  ;
  
#line 369 
  cas_enable_irq(cp,i);
  
#line 368 
  i += 1;
  ldv_52156: 
#line 369 
  ;
  
#line 368 
  if (i <= 0) 
#line 370 
              goto ldv_52155; else 
#line 373 
                                   goto ldv_52157;
  ldv_52157: 
#line 374 
  ;
  
#line 375 
  return;
}


#line 372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
__inline static void cas_entropy_gather(struct cas *cp)
{
  
#line 374 
  return;
}


#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static u16 cas_phy_read(struct cas *cp, int reg)
{
  u16 __retres;
  u32 cmd;
  int tmp;
  
#line 407 
  int limit = 1000;
  
#line 409 
  cmd = 1610612736U;
  
#line 410 
  cmd = ((unsigned int)(cp->phy_addr << 23) & 260046848U) | cmd;
  
#line 411 
  cmd = ((unsigned int)(reg << 18) & 8126464U) | cmd;
  
#line 412 
  cmd |= 131072U;
  
#line 413 
  writel(cmd,(void volatile *)(cp->regs + 25100U));
  
#line 416 
  goto ldv_52171;
  ldv_52170: 
#line 417 
  ;
  
#line 417 
  __const_udelay(42950UL);
  
#line 418 
  cmd = readl((void const volatile *)(cp->regs + 25100U));
  
#line 419 
  if ((cmd & 65536U) != 0U) {
    
#line 420 
    __retres = (unsigned short)cmd;
    
#line 420 
    goto return_label;
  }
  else ;
  ldv_52171: 
#line 421 
  ;
  
#line 416 
  tmp = limit;
  
#line 416 
  limit -= 1;
  
#line 416 
  ;
  
#line 416 
  if (tmp > 0) 
#line 418 
               goto ldv_52170; else 
#line 421 
                                    goto ldv_52172;
  ldv_52172: 
#line 422 
  ;
  
#line 422 
  __retres = (unsigned short)65535U;
  return_label: 
#line 422 
                return __retres;
}


#line 425  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_phy_write(struct cas *cp, int reg, u16 val)
{
  int __retres;
  u32 cmd;
  int tmp;
  
#line 427 
  int limit = 1000;
  
#line 430 
  cmd = 1342177280U;
  
#line 431 
  cmd = ((unsigned int)(cp->phy_addr << 23) & 260046848U) | cmd;
  
#line 432 
  cmd = ((unsigned int)(reg << 18) & 8126464U) | cmd;
  
#line 433 
  cmd |= 131072U;
  
#line 434 
  cmd = (unsigned int)val | cmd;
  
#line 435 
  writel(cmd,(void volatile *)(cp->regs + 25100U));
  
#line 438 
  goto ldv_52181;
  ldv_52180: 
#line 439 
  ;
  
#line 439 
  __const_udelay(42950UL);
  
#line 440 
  cmd = readl((void const volatile *)(cp->regs + 25100U));
  
#line 441 
  if ((cmd & 65536U) != 0U) {
    
#line 442 
    __retres = 0;
    
#line 442 
    goto return_label;
  }
  else ;
  ldv_52181: 
#line 443 
  ;
  
#line 438 
  tmp = limit;
  
#line 438 
  limit -= 1;
  
#line 438 
  ;
  
#line 438 
  if (tmp > 0) 
#line 440 
               goto ldv_52180; else 
#line 443 
                                    goto ldv_52182;
  ldv_52182: 
#line 444 
  ;
  
#line 444 
  __retres = -1;
  return_label: 
#line 444 
                return __retres;
}


#line 447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_phy_powerup(struct cas *cp)
{
  
#line 449 
  u16 ctl = cas_phy_read(cp,0);
  
#line 451 
  if (((int)ctl & 2048) == 0) 
#line 452 
                              goto return_label; else ;
  
#line 453 
  ctl = (unsigned short)((unsigned int)ctl & 63487U);
  
#line 454 
  cas_phy_write(cp,0,(unsigned short)((int)ctl));
  return_label: 
#line 455 
                return;
}


#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_phy_powerdown(struct cas *cp)
{
  
#line 459 
  u16 ctl = cas_phy_read(cp,0);
  
#line 461 
  if (((int)ctl & 2048) != 0) 
#line 462 
                              goto return_label; else ;
  
#line 463 
  ctl = (unsigned short)((unsigned int)ctl | 2048U);
  
#line 464 
  cas_phy_write(cp,0,(unsigned short)((int)ctl));
  return_label: 
#line 465 
                return;
}


#line 468  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_page_free(struct cas *cp, cas_page_t *page)
{
  int __retres;
  
#line 470 
  pci_unmap_page(cp->pdev,page->dma_addr,(unsigned long)cp->page_size,2);
  
#line 472 
  __free_pages(page->buffer,(unsigned int)cp->page_order);
  
#line 473 
  kfree((void const *)page);
  
#line 474 
  __retres = 0;
  
#line 474 
  return __retres;
}


#line 488  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static cas_page_t *cas_page_alloc(struct cas *cp, gfp_t const flags)
{
  cas_page_t *__retres;
  cas_page_t *page;
  
#line 492 
  page = (cas_page_t *)kmalloc(40UL,flags);
  
#line 493 
  if (page == (cas_page_t *)0) {
    
#line 494 
    __retres = (cas_page_t *)0;
    
#line 494 
    goto return_label;
  }
  else ;
  
#line 496 
  INIT_LIST_HEAD(& page->list);
  
#line 498 
  page->buffer = alloc_pages(flags,(unsigned int)cp->page_order);
  
#line 499 
  if (page->buffer == (struct page *)0) 
#line 500 
                                        goto page_err; else ;
  
#line 501 
  page->dma_addr = pci_map_page(cp->pdev,page->buffer,0UL,(unsigned long)cp->page_size,2);
  
#line 503 
  __retres = page;
  
#line 503 
  goto return_label;
  page_err: 
#line 505 
  ;
  
#line 506 
  kfree((void const *)page);
  
#line 507 
  __retres = (cas_page_t *)0;
  return_label: 
#line 507 
                return __retres;
}


#line 511  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_spare_init(struct cas *cp)
{
  
#line 513 
  ldv_spin_lock_77(& cp->rx_inuse_lock);
  
#line 514 
  INIT_LIST_HEAD(& cp->rx_inuse_list);
  
#line 515 
  ldv_spin_unlock_78(& cp->rx_inuse_lock);
  
#line 517 
  ldv_spin_lock_79(& cp->rx_spare_lock);
  
#line 518 
  INIT_LIST_HEAD(& cp->rx_spare_list);
  
#line 519 
  cp->rx_spares_needed = 256;
  
#line 520 
  ldv_spin_unlock_80(& cp->rx_spare_lock);
  
#line 521 
  return;
}


#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_spare_free(struct cas *cp)
{
  struct list_head list;
  struct list_head *elem;
  struct list_head *tmp;
  cas_page_t *tmp_0;
  cas_page_t *tmp_1;
  
#line 529 
  INIT_LIST_HEAD(& list);
  
#line 530 
  ldv_spin_lock_81(& cp->rx_spare_lock);
  
#line 531 
  list_splice_init(& cp->rx_spare_list,& list);
  
#line 532 
  ldv_spin_unlock_82(& cp->rx_spare_lock);
  
#line 533 
  elem = list.next;
  
#line 533 
  tmp = elem->next;
  
#line 533 
  goto ldv_52213;
  ldv_52212: 
#line 534 
  ;
  {
    
#line 534 
    struct list_head const *__mptr = (struct list_head const *)elem;
    
#line 534 
    tmp_0 = (cas_page_t *)__mptr;
  }
  
#line 534 
  ;
  
#line 534 
  cas_page_free(cp,tmp_0);
  
#line 533 
  elem = tmp;
  
#line 533 
  tmp = elem->next;
  ldv_52213: 
#line 534 
  ;
  
#line 533 
  if (& list != elem) 
#line 535 
                      goto ldv_52212; else 
#line 538 
                                           goto ldv_52214;
  ldv_52214: 
#line 539 
  ;
  
#line 537 
  INIT_LIST_HEAD(& list);
  
#line 543 
  ldv_spin_lock_83(& cp->rx_inuse_lock);
  
#line 544 
  list_splice_init(& cp->rx_inuse_list,& list);
  
#line 545 
  ldv_spin_unlock_84(& cp->rx_inuse_lock);
  
#line 551 
  elem = list.next;
  
#line 551 
  tmp = elem->next;
  
#line 551 
  goto ldv_52218;
  ldv_52217: 
#line 552 
  ;
  {
    
#line 552 
    struct list_head const *__mptr_0 = (struct list_head const *)elem;
    
#line 552 
    tmp_1 = (cas_page_t *)__mptr_0;
  }
  
#line 552 
  ;
  
#line 552 
  cas_page_free(cp,tmp_1);
  
#line 551 
  elem = tmp;
  
#line 551 
  tmp = elem->next;
  ldv_52218: 
#line 552 
  ;
  
#line 551 
  if (& list != elem) 
#line 553 
                      goto ldv_52217; else 
#line 556 
                                           goto ldv_52219;
  ldv_52219: 
#line 557 
  ;
  
#line 558 
  return;
}


#line 557  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_spare_recover(struct cas *cp, gfp_t const flags)
{
  struct list_head list;
  struct list_head *elem;
  struct list_head *tmp;
  int needed;
  int i;
  int tmp_2;
  
#line 567 
  INIT_LIST_HEAD(& list);
  
#line 568 
  ldv_spin_lock_85(& cp->rx_inuse_lock);
  
#line 569 
  list_splice_init(& cp->rx_inuse_list,& list);
  
#line 570 
  ldv_spin_unlock_86(& cp->rx_inuse_lock);
  
#line 572 
  elem = list.next;
  
#line 572 
  tmp = elem->next;
  
#line 572 
  goto ldv_52234;
  ldv_52233: 
#line 573 
  ;
  {
    cas_page_t *tmp_0;
    int tmp_1;
    {
      
#line 573 
      struct list_head const *__mptr = (struct list_head const *)elem;
      
#line 573 
      tmp_0 = (cas_page_t *)__mptr;
    }
    
#line 573 
    cas_page_t *page = tmp_0;
    
#line 587 
    tmp_1 = page_count(page->buffer);
    
#line 587 
    if (tmp_1 > 1) 
#line 588 
                   goto ldv_52232; else ;
    
#line 590 
    list_del(elem);
    
#line 591 
    ldv_spin_lock_87(& cp->rx_spare_lock);
    
#line 592 
    if (cp->rx_spares_needed > 0) {
      
#line 593 
      list_add(elem,& cp->rx_spare_list);
      
#line 594 
      cp->rx_spares_needed -= 1;
      
#line 595 
      ldv_spin_unlock_88(& cp->rx_spare_lock);
    }
    else {
      
#line 597 
      ldv_spin_unlock_89(& cp->rx_spare_lock);
      
#line 598 
      cas_page_free(cp,page);
    }
  }
  ldv_52232: 
#line 601 
  ;
  
#line 572 
  elem = tmp;
  
#line 572 
  tmp = elem->next;
  ldv_52234: 
#line 573 
  ;
  
#line 572 
  if (& list != elem) 
#line 574 
                      goto ldv_52233; else 
#line 577 
                                           goto ldv_52235;
  ldv_52235: 
#line 578 
  ;
  
#line 603 
  tmp_2 = list_empty((struct list_head const *)(& list));
  
#line 603 
  if (tmp_2 == 0) {
    
#line 604 
    ldv_spin_lock_90(& cp->rx_inuse_lock);
    
#line 605 
    list_splice((struct list_head const *)(& list),& cp->rx_inuse_list);
    
#line 606 
    ldv_spin_unlock_91(& cp->rx_inuse_lock);
  }
  else ;
  
#line 609 
  ldv_spin_lock_92(& cp->rx_spare_lock);
  
#line 610 
  needed = cp->rx_spares_needed;
  
#line 611 
  ldv_spin_unlock_93(& cp->rx_spare_lock);
  
#line 612 
  if (needed == 0) 
#line 613 
                   goto return_label; else ;
  
#line 616 
  INIT_LIST_HEAD(& list);
  
#line 617 
  i = 0;
  
#line 618 
  goto ldv_52239;
  ldv_52238: 
#line 619 
  ;
  {
    
#line 619 
    cas_page_t *spare = cas_page_alloc(cp,flags);
    
#line 620 
    if (spare == (cas_page_t *)0) 
#line 621 
                                  goto ldv_52237; else ;
    
#line 622 
    list_add(& spare->list,& list);
    
#line 623 
    i += 1;
  }
  ldv_52239: 
#line 625 
  ;
  
#line 618 
  if (i < needed) 
#line 620 
                  goto ldv_52238; else 
#line 623 
                                       goto ldv_52237;
  ldv_52237: 
#line 624 
  ;
  
#line 626 
  ldv_spin_lock_94(& cp->rx_spare_lock);
  
#line 627 
  list_splice((struct list_head const *)(& list),& cp->rx_spare_list);
  
#line 628 
  cp->rx_spares_needed -= i;
  
#line 629 
  ldv_spin_unlock_95(& cp->rx_spare_lock);
  return_label: 
#line 630 
                return;
}


#line 633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static cas_page_t *cas_page_dequeue(struct cas *cp)
{
  cas_page_t *__retres;
  struct list_head *entry;
  int recover;
  int tmp_0;
  cas_page_t *tmp_1;
  
#line 638 
  ldv_spin_lock_96(& cp->rx_spare_lock);
  
#line 639 
  tmp_0 = list_empty((struct list_head const *)(& cp->rx_spare_list));
  
#line 639 
  if (tmp_0 != 0) {
    int tmp;
    
#line 641 
    ldv_spin_unlock_97(& cp->rx_spare_lock);
    
#line 642 
    cas_spare_recover(cp,32U);
    
#line 643 
    ldv_spin_lock_98(& cp->rx_spare_lock);
    
#line 644 
    tmp = list_empty((struct list_head const *)(& cp->rx_spare_list));
    
#line 644 
    if (tmp != 0) {
      
#line 645 
      if ((cp->msg_enable & 64U) != 0U) 
#line 645 
                                        netdev_err((struct net_device const *)cp->dev,"no spare buffers available\n"); else ;
      
#line 647 
      ldv_spin_unlock_99(& cp->rx_spare_lock);
      
#line 648 
      __retres = (cas_page_t *)0;
      
#line 648 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 652 
  entry = cp->rx_spare_list.next;
  
#line 653 
  list_del(entry);
  
#line 654 
  cp->rx_spares_needed += 1;
  
#line 654 
  recover = cp->rx_spares_needed;
  
#line 655 
  ldv_spin_unlock_100(& cp->rx_spare_lock);
  
#line 658 
  if ((recover & 63) == 0) {
    
#line 660 
    atomic_inc(& cp->reset_task_pending);
    
#line 661 
    atomic_inc(& cp->reset_task_pending_spare);
    
#line 662 
    ldv_schedule_work_101(& cp->reset_task);
  }
  else ;
  {
    
#line 668 
    struct list_head const *__mptr = (struct list_head const *)entry;
    
#line 668 
    tmp_1 = (cas_page_t *)__mptr;
  }
  
#line 668 
  __retres = tmp_1;
  return_label: 
#line 668 
                return __retres;
}


#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_mif_poll(struct cas *cp, int const enable)
{
  u32 cfg;
  int tmp;
  
#line 676 
  cfg = readl((void const volatile *)(cp->regs + 25104U));
  
#line 677 
  cfg &= 768U;
  
#line 679 
  if ((cp->phy_type & 4) != 0) 
#line 680 
                               cfg |= 1U; else ;
  
#line 683 
  if (enable != 0) {
    
#line 684 
    cfg |= 2U;
    
#line 685 
    cfg |= 8U;
    
#line 686 
    cfg = ((unsigned int)(cp->phy_addr << 10) & 31744U) | cfg;
  }
  else ;
  
#line 688 
  ;
  
#line 688 
  if (enable != 0) 
#line 688 
                   tmp = -37; else 
#line 688 
                                   tmp = 65535;
  
#line 688 
  writel((unsigned int)tmp,(void volatile *)(cp->regs + 25108U));
  
#line 690 
  writel(cfg,(void volatile *)(cp->regs + 25104U));
  
#line 691 
  return;
}


#line 694  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_begin_auto_negotiation(struct cas *cp, struct ethtool_cmd *ep)
{
  u16 ctl;
  int lcntl;
  
#line 699 
  int changed = 0;
  
#line 700 
  int oldstate = (int)cp->lstate;
  
#line 701 
  int link_was_not_down = oldstate != 0;
  
#line 704 
  if (ep == (struct ethtool_cmd *)0) 
#line 705 
                                     goto start_aneg; else ;
  
#line 706 
  lcntl = cp->link_cntl;
  
#line 707 
  if ((unsigned int)ep->autoneg == 1U) 
#line 708 
                                       cp->link_cntl = 4096;
  else {
    
#line 710 
    u32 speed = ethtool_cmd_speed((struct ethtool_cmd const *)ep);
    
#line 711 
    cp->link_cntl = 0;
    
#line 712 
    if (speed == 100U) 
#line 713 
                       cp->link_cntl |= 8192;
    else 
      
#line 714 
      if (speed == 1000U) 
#line 715 
                          cp->link_cntl |= 64; else ;
    
#line 716 
    if ((unsigned int)ep->duplex == 1U) 
#line 717 
                                        cp->link_cntl |= 256; else ;
  }
  
#line 720 
  changed = cp->link_cntl != lcntl;
  start_aneg: 
#line 722 
  ;
  
#line 723 
  if (cp->lstate == (unsigned int)link_up) 
#line 724 
                                           netdev_info((struct net_device const *)cp->dev,"PCS link down\n");
  else 
    
#line 726 
    if (changed != 0) 
#line 727 
                      netdev_info((struct net_device const *)cp->dev,"link configuration changed\n"); else ;
  
#line 730 
  cp->lstate = link_down;
  
#line 731 
  cp->link_transition = 5;
  
#line 732 
  if (cp->hw_running == 0) 
#line 733 
                           goto return_label; else ;
  
#line 740 
  if (oldstate == 5) 
#line 741 
                     netif_carrier_off(cp->dev); else ;
  
#line 742 
  if (changed != 0 && link_was_not_down != 0) {
    
#line 748 
    atomic_inc(& cp->reset_task_pending);
    
#line 749 
    atomic_inc(& cp->reset_task_pending_all);
    
#line 750 
    ldv_schedule_work_102(& cp->reset_task);
    
#line 751 
    cp->timer_ticks = 0;
    
#line 752 
    ldv_mod_timer_103(& cp->link_timer,jiffies + 550UL);
    
#line 753 
    goto return_label;
  }
  else ;
  
#line 756 
  if ((cp->phy_type & 1) != 0) {
    
#line 757 
    u32 val = readl((void const volatile *)(cp->regs + 36864U));
    
#line 759 
    if ((cp->link_cntl & 4096) != 0) {
      
#line 760 
      val |= 4608U;
      
#line 761 
      cp->lstate = link_aneg;
    }
    else {
      
#line 763 
      if ((cp->link_cntl & 256) != 0) 
#line 764 
                                      val |= 256U; else ;
      
#line 765 
      val &= 4294963199U;
      
#line 766 
      cp->lstate = link_force_ok;
    }
    
#line 768 
    cp->link_transition = 4;
    
#line 769 
    writel(val,(void volatile *)(cp->regs + 36864U));
  }
  else {
    
#line 772 
    cas_mif_poll(cp,0);
    
#line 773 
    ctl = cas_phy_read(cp,0);
    
#line 774 
    ctl = (unsigned short)((unsigned int)ctl & 52927U);
    
#line 776 
    ctl = (unsigned short)(cp->link_cntl | (int)ctl);
    
#line 777 
    if (((int)ctl & 4096) != 0) {
      
#line 778 
      ctl = (unsigned short)((unsigned int)ctl | 512U);
      
#line 779 
      cp->lstate = link_aneg;
    }
    else 
#line 781 
         cp->lstate = link_force_ok;
    
#line 783 
    cp->link_transition = 4;
    
#line 784 
    cas_phy_write(cp,0,(unsigned short)((int)ctl));
    
#line 785 
    cas_mif_poll(cp,1);
  }
  
#line 788 
  cp->timer_ticks = 0;
  
#line 789 
  ldv_mod_timer_104(& cp->link_timer,jiffies + 550UL);
  return_label: 
#line 790 
                return;
}


#line 793  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_reset_mii_phy(struct cas *cp)
{
  int __retres;
  u16 val;
  
#line 795 
  int limit = 1000;
  
#line 798 
  cas_phy_write(cp,0,(unsigned short)32768);
  
#line 799 
  __const_udelay(429500UL);
  
#line 800 
  goto ldv_52271;
  ldv_52270: 
#line 801 
  ;
  
#line 801 
  val = cas_phy_read(cp,0);
  
#line 802 
  if ((int)val >= 0) 
#line 803 
                     goto ldv_52269; else ;
  
#line 804 
  __const_udelay(42950UL);
  ldv_52271: 
#line 806 
  ;
  
#line 800 
  limit -= 1;
  
#line 800 
  if (limit != 0) 
#line 802 
                  goto ldv_52270; else 
#line 805 
                                       goto ldv_52269;
  ldv_52269: 
#line 806 
  ;
  
#line 806 
  __retres = limit <= 0;
  
#line 806 
  return __retres;
}


#line 809  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_saturn_firmware_init(struct cas *cp)
{
  struct firmware const *fw;
  int err;
  
#line 812 
  char const fw_name[16U] = {(char)'s', (char)'u', (char)'n', (char)'/', (char)'c', (char)'a', (char)'s', (char)'s', (char)'i', (char)'n', (char)'i', (char)'.', (char)'b', (char)'i', (char)'n', (char)'\000'};
  
#line 815 
  if (cp->phy_id != 536894584U) 
#line 816 
                                goto return_label; else ;
  
#line 818 
  err = request_firmware(& fw,(char const *)(& fw_name),& (cp->pdev)->dev);
  
#line 819 
  if (err != 0) {
    
#line 820 
    printk("\001",(char const *)(& fw_name));
    
#line 822 
    goto return_label;
  }
  else ;
  
#line 824 
  if (fw->size <= 1UL) {
    
#line 825 
    printk("\001",fw->size,(char const *)(& fw_name));
    
#line 827 
    goto out;
  }
  else ;
  
#line 829 
  cp->fw_load_addr = (unsigned short)(((int)*(fw->data + 1U) << 8) | (int)*(fw->data));
  
#line 830 
  cp->fw_size = (unsigned int)fw->size + 4294967294U;
  
#line 831 
  cp->fw_data = (u8 *)vmalloc((unsigned long)cp->fw_size);
  
#line 832 
  if (cp->fw_data == (u8 *)0U) 
#line 833 
                               goto out; else ;
  
#line 834 
  memcpy((void *)cp->fw_data,(void const *)(fw->data + 2U),(unsigned long)cp->fw_size);
  out: 
#line 835 
  ;
  
#line 836 
  release_firmware(fw);
  return_label: 
#line 837 
                return;
}


#line 839  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_saturn_firmware_load(struct cas *cp)
{
  int i;
  
#line 843 
  if (cp->fw_data == (u8 *)0U) 
#line 844 
                               goto return_label; else ;
  
#line 846 
  cas_phy_powerdown(cp);
  
#line 849 
  cas_phy_write(cp,22,(unsigned short)0);
  
#line 852 
  cas_phy_write(cp,30,(unsigned short)36857);
  
#line 853 
  cas_phy_write(cp,29,(unsigned short)189);
  
#line 854 
  cas_phy_write(cp,30,(unsigned short)36858);
  
#line 855 
  cas_phy_write(cp,29,(unsigned short)130);
  
#line 856 
  cas_phy_write(cp,30,(unsigned short)36859);
  
#line 857 
  cas_phy_write(cp,29,(unsigned short)0);
  
#line 858 
  cas_phy_write(cp,30,(unsigned short)36860);
  
#line 859 
  cas_phy_write(cp,29,(unsigned short)57);
  
#line 862 
  cas_phy_write(cp,22,(unsigned short)1);
  
#line 863 
  cas_phy_write(cp,30,(unsigned short)((int)cp->fw_load_addr));
  
#line 864 
  i = 0;
  
#line 864 
  goto ldv_52284;
  ldv_52283: 
#line 865 
  ;
  
#line 865 
  cas_phy_write(cp,29,(unsigned short)((int)*(cp->fw_data + i)));
  
#line 864 
  i += 1;
  ldv_52284: 
#line 865 
  ;
  
#line 864 
  if (cp->fw_size > (unsigned int)i) 
#line 866 
                                     goto ldv_52283; else 
#line 869 
                                                          goto ldv_52285;
  ldv_52285: 
#line 870 
  ;
  
#line 868 
  cas_phy_write(cp,30,(unsigned short)36856);
  
#line 869 
  cas_phy_write(cp,29,(unsigned short)1);
  return_label: 
#line 870 
                return;
}


#line 874  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_phy_init(struct cas *cp)
{
  u16 val;
  
#line 879 
  if ((cp->phy_type & 6) != 0) {
    u16 tmp;
    
#line 880 
    writel(0U,(void volatile *)(cp->regs + 36944U));
    
#line 883 
    cas_mif_poll(cp,0);
    
#line 884 
    cas_reset_mii_phy(cp);
    
#line 886 
    if (cp->phy_id == 4420641U) {
      
#line 888 
      cas_phy_write(cp,31,(unsigned short)32768);
      
#line 889 
      cas_phy_write(cp,0,(unsigned short)241);
      
#line 890 
      cas_phy_write(cp,31,(unsigned short)0);
    }
    else 
      
#line 892 
      if ((cp->phy_id & 4294967292U) == 2121808U) {
        
#line 894 
        cas_phy_write(cp,24,(unsigned short)3104);
        
#line 895 
        cas_phy_write(cp,23,(unsigned short)18);
        
#line 896 
        cas_phy_write(cp,21,(unsigned short)6148);
        
#line 897 
        cas_phy_write(cp,23,(unsigned short)19);
        
#line 898 
        cas_phy_write(cp,21,(unsigned short)4612);
        
#line 899 
        cas_phy_write(cp,23,(unsigned short)32774);
        
#line 900 
        cas_phy_write(cp,21,(unsigned short)306);
        
#line 901 
        cas_phy_write(cp,23,(unsigned short)32774);
        
#line 902 
        cas_phy_write(cp,21,(unsigned short)562);
        
#line 903 
        cas_phy_write(cp,23,(unsigned short)8223);
        
#line 904 
        cas_phy_write(cp,21,(unsigned short)2592);
      }
      else 
        
#line 906 
        if (cp->phy_id == 2121841U) {
          
#line 907 
          val = cas_phy_read(cp,20);
          
#line 908 
          val = cas_phy_read(cp,20);
          
#line 909 
          if (((int)val & 128) != 0) 
#line 911 
                                     cas_phy_write(cp,20,(unsigned short)((int)val & 65407)); else ;
        }
        else 
          
#line 915 
          if ((cp->cas_flags & 8U) != 0U) {
            
#line 916 
            writel((unsigned int)(cp->phy_type << 8) & 512U,(void volatile *)(cp->regs + 4204U));
            
#line 924 
            if (cp->phy_id == 536894584U) 
#line 925 
                                          cas_saturn_firmware_load(cp); else ;
            
#line 927 
            cas_phy_powerup(cp);
          }
          else ;
    
#line 931 
    val = cas_phy_read(cp,0);
    
#line 932 
    val = (unsigned short)((unsigned int)val & 61439U);
    
#line 933 
    cas_phy_write(cp,0,(unsigned short)((int)val));
    
#line 934 
    __const_udelay(42950UL);
    
#line 937 
    tmp = cas_phy_read(cp,4);
    
#line 936 
    ;
    
#line 936 
    cas_phy_write(cp,4,(unsigned short)((int)((unsigned int)tmp | 3552U)));
    
#line 943 
    if ((cp->cas_flags & 1U) != 0U) {
      
#line 947 
      val = cas_phy_read(cp,9);
      
#line 948 
      val = (unsigned short)((unsigned int)val & 65279U);
      
#line 949 
      val = (unsigned short)((unsigned int)val | 512U);
      
#line 950 
      cas_phy_write(cp,9,(unsigned short)((int)val));
    }
    else ;
  }
  else {
    u32 val_0;
    int limit;
    unsigned int tmp_0;
    
#line 958 
    writel(2U,(void volatile *)(cp->regs + 36944U));
    
#line 962 
    if ((cp->cas_flags & 8U) != 0U) 
#line 963 
                                    writel(0U,(void volatile *)(cp->regs + 4204U)); else ;
    
#line 966 
    val_0 = readl((void const volatile *)(cp->regs + 36864U));
    
#line 967 
    val_0 |= 32768U;
    
#line 968 
    writel(val_0,(void volatile *)(cp->regs + 36864U));
    
#line 970 
    limit = 5000;
    
#line 971 
    goto ldv_52294;
    ldv_52293: 
#line 972 
    ;
    
#line 972 
    __const_udelay(42950UL);
    
#line 973 
    tmp_0 = readl((void const volatile *)(cp->regs + 36864U));
    
#line 973 
    if ((tmp_0 & 32768U) == 0U) 
#line 975 
                                goto ldv_52292; else ;
    ldv_52294: 
#line 976 
    ;
    
#line 971 
    limit -= 1;
    
#line 971 
    if (limit > 0) 
#line 973 
                   goto ldv_52293; else 
#line 976 
                                        goto ldv_52292;
    ldv_52292: 
#line 977 
    ;
    
#line 977 
    if (limit <= 0) {
      unsigned int tmp_1;
      
#line 978 
      tmp_1 = readl((void const volatile *)(cp->regs + 36884U));
      
#line 978 
      ;
      
#line 978 
      netdev_warn((struct net_device const *)cp->dev,"PCS reset bit would not clear [%08x]\n",tmp_1);
    }
    else ;
    
#line 984 
    writel(0U,(void volatile *)(cp->regs + 36880U));
    
#line 987 
    val_0 = readl((void const volatile *)(cp->regs + 36872U));
    
#line 988 
    val_0 &= 4294967231U;
    
#line 989 
    val_0 |= 416U;
    
#line 991 
    writel(val_0,(void volatile *)(cp->regs + 36872U));
    
#line 994 
    writel(1U,(void volatile *)(cp->regs + 36880U));
    
#line 997 
    writel(2U,(void volatile *)(cp->regs + 36948U));
  }
  
#line 1000 
  return;
}


#line 1003  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_pcs_link_check(struct cas *cp)
{
  int __retres;
  u32 stat;
  u32 state_machine;
  
#line 1006 
  int retval = 0;
  
#line 1012 
  stat = readl((void const volatile *)(cp->regs + 36868U));
  
#line 1013 
  if ((stat & 4U) == 0U) 
#line 1014 
                         stat = readl((void const volatile *)(cp->regs + 36868U)); else ;
  
#line 1019 
  if ((stat & 48U) == 48U) {
    
#line 1022 
    if ((cp->msg_enable & 4U) != 0U) 
#line 1022 
                                     netdev_info((struct net_device const *)cp->dev,"PCS RemoteFault\n"); else ;
  }
  else ;
  
#line 1027 
  state_machine = readl((void const volatile *)(cp->regs + 36884U));
  
#line 1028 
  if ((state_machine & 122880U) != 90112U) 
#line 1029 
                                           stat &= 4294967291U;
  else 
    
#line 1030 
    if ((state_machine & 1792U) != 0U) 
#line 1031 
                                       stat |= 4U; else ;
  
#line 1034 
  if ((stat & 4U) != 0U) {
    
#line 1035 
    if (cp->lstate != (unsigned int)link_up) {
      
#line 1036 
      if (cp->opened != 0) {
        
#line 1037 
        cp->lstate = link_up;
        
#line 1038 
        cp->link_transition = 3;
        
#line 1040 
        cas_set_link_modes(cp);
        
#line 1041 
        netif_carrier_on(cp->dev);
      }
      else ;
    }
    else ;
  }
  else 
    
#line 1044 
    if (cp->lstate == (unsigned int)link_up) {
      
#line 1045 
      cp->lstate = link_down;
      
#line 1046 
      if ((link_transition_timeout != 0 && cp->link_transition != 6) && cp->link_transition_jiffies_valid == 0) {
        
#line 1061 
        retval = 1;
        
#line 1062 
        cp->link_transition = 6;
        
#line 1063 
        cp->link_transition_jiffies = jiffies;
        
#line 1064 
        cp->link_transition_jiffies_valid = 1;
      }
      else 
#line 1066 
           cp->link_transition = 1;
      
#line 1068 
      netif_carrier_off(cp->dev);
      
#line 1069 
      if (cp->opened != 0) {
        
#line 1070 
        if ((cp->msg_enable & 4U) != 0U) 
#line 1070 
                                         netdev_info((struct net_device const *)cp->dev,"PCS link down\n"); else ;
      }
      else ;
      
#line 1080 
      if ((cp->cas_flags & 2U) == 0U) {
        
#line 1082 
        stat = readl((void const volatile *)(cp->regs + 36956U));
        
#line 1083 
        if (stat == 3U) {
          
#line 1084 
          __retres = 1;
          
#line 1084 
          goto return_label;
        }
        else ;
      }
      else ;
    }
    else 
      
#line 1086 
      if (cp->lstate == (unsigned int)link_down) 
        
#line 1087 
        if ((link_transition_timeout != 0 && cp->link_transition != 6) && cp->link_transition_jiffies_valid == 0) {
          
#line 1095 
          retval = 1;
          
#line 1096 
          cp->link_transition = 6;
          
#line 1097 
          cp->link_transition_jiffies = jiffies;
          
#line 1098 
          cp->link_transition_jiffies_valid = 1;
        }
        else 
#line 1100 
             cp->link_transition = 2;
      else ;
  
#line 1104 
  __retres = retval;
  return_label: 
#line 1104 
                return __retres;
}


#line 1107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_pcs_interrupt(struct net_device *dev, struct cas *cp, u32 status)
{
  int __retres;
  int tmp_0;
  
#line 1110 
  u32 stat = readl((void const volatile *)(cp->regs + 36888U));
  
#line 1112 
  if ((stat & 4U) == 0U) {
    
#line 1113 
    __retres = 0;
    
#line 1113 
    goto return_label;
  }
  else ;
  
#line 1114 
  tmp_0 = cas_pcs_link_check(cp);
  
#line 1114 
  __retres = tmp_0;
  return_label: 
#line 1114 
                return __retres;
}


#line 1117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_txmac_interrupt(struct net_device *dev, struct cas *cp, u32 status)
{
  int __retres;
  
#line 1120 
  u32 txmac_stat = readl((void const volatile *)(cp->regs + 24592U));
  
#line 1122 
  if (txmac_stat == 0U) {
    
#line 1123 
    __retres = 0;
    
#line 1123 
    goto return_label;
  }
  else ;
  
#line 1125 
  if ((cp->msg_enable & 512U) != 0U) 
#line 1125 
                                     netdev_printk("\001",(struct net_device const *)cp->dev,"txmac interrupt, txmac_stat: 0x%x\n",txmac_stat); else ;
  
#line 1131 
  if ((txmac_stat & 128U) != 0U && (txmac_stat & 4294967167U) == 0U) {
    
#line 1133 
    __retres = 0;
    
#line 1133 
    goto return_label;
  }
  else ;
  
#line 1135 
  ldv_spin_lock_105(& cp->stat_lock[0]);
  
#line 1136 
  if ((txmac_stat & 2U) != 0U) {
    
#line 1137 
    netdev_err((struct net_device const *)dev,"TX MAC xmit underrun\n");
    
#line 1138 
    cp->net_stats[0].tx_fifo_errors += 1UL;
  }
  else ;
  
#line 1141 
  if ((txmac_stat & 4U) != 0U) {
    
#line 1142 
    netdev_err((struct net_device const *)dev,"TX MAC max packet size error\n");
    
#line 1143 
    cp->net_stats[0].tx_errors += 1UL;
  }
  else ;
  
#line 1149 
  if ((txmac_stat & 8U) != 0U) 
#line 1150 
                               cp->net_stats[0].collisions += 65536UL; else ;
  
#line 1152 
  if ((txmac_stat & 16U) != 0U) {
    
#line 1153 
    cp->net_stats[0].tx_aborted_errors += 65536UL;
    
#line 1154 
    cp->net_stats[0].collisions += 65536UL;
  }
  else ;
  
#line 1157 
  if ((txmac_stat & 32U) != 0U) {
    
#line 1158 
    cp->net_stats[0].tx_aborted_errors += 65536UL;
    
#line 1159 
    cp->net_stats[0].collisions += 65536UL;
  }
  else ;
  
#line 1161 
  ldv_spin_unlock_106(& cp->stat_lock[0]);
  
#line 1166 
  __retres = 0;
  return_label: 
#line 1166 
                return __retres;
}


#line 1169  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_load_firmware(struct cas *cp, cas_hp_inst_t *firmware)
{
  cas_hp_inst_t *inst;
  u32 val;
  int i;
  
#line 1175 
  i = 0;
  
#line 1176 
  goto ldv_52321;
  ldv_52320: 
#line 1177 
  ;
  
#line 1177 
  writel((unsigned int)i,(void volatile *)(cp->regs + 16708U));
  
#line 1179 
  val = (unsigned int)inst->val;
  
#line 1180 
  val = (unsigned int)((int)inst->mask << 16) | val;
  
#line 1181 
  writel(val,(void volatile *)(cp->regs + 16720U));
  
#line 1183 
  val = (unsigned int)((int)inst->outarg >> 10) & 3U;
  
#line 1184 
  val = ((unsigned int)((int)inst->outop << 2) & 60U) | val;
  
#line 1185 
  val = ((unsigned int)((int)inst->fnext << 6) & 1984U) | val;
  
#line 1186 
  val = ((unsigned int)((int)inst->foff << 11) & 260096U) | val;
  
#line 1187 
  val = ((unsigned int)((int)inst->snext << 18) & 8126464U) | val;
  
#line 1188 
  val = ((unsigned int)((int)inst->soff << 23) & 1065353216U) | val;
  
#line 1189 
  val = (unsigned int)((int)inst->op << 30) | val;
  
#line 1190 
  writel(val,(void volatile *)(cp->regs + 16716U));
  
#line 1192 
  val = (unsigned int)inst->outmask;
  
#line 1193 
  val = ((unsigned int)((int)inst->outshift << 16) & 983040U) | val;
  
#line 1194 
  val = ((unsigned int)((int)inst->outenab << 20) & 3145728U) | val;
  
#line 1195 
  val = (unsigned int)((int)inst->outarg << 22) | val;
  
#line 1196 
  writel(val,(void volatile *)(cp->regs + 16712U));
  
#line 1197 
  firmware += 1;
  
#line 1198 
  i += 1;
  ldv_52321: 
#line 1199 
  ;
  
#line 1176 
  inst = firmware;
  
#line 1176 
  if (inst != (cas_hp_inst_t *)0) {
    
#line 1176 
    if (inst->note != (char const *)0) 
#line 1178 
                                       goto ldv_52320; else 
#line 1181 
                                                            goto ldv_52322;
  }
  else 
#line 1181 
       goto ldv_52322;
  ldv_52322: 
#line 1182 
  ;
  
#line 1183 
  return;
}


#line 1202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_init_rx_dma(struct cas *cp)
{
  u32 val;
  int i;
  int size;
  unsigned int tmp;
  
#line 1204 
  u64 desc_dma = cp->block_dvma;
  
#line 1209 
  val = 2048U;
  
#line 1210 
  val |= 8U;
  
#line 1211 
  val |= 128U;
  
#line 1212 
  if ((cp->cas_flags & 2U) != 0U) 
#line 1214 
                                  val |= 262144U; else ;
  
#line 1215 
  writel(val,(void volatile *)(cp->regs + 16384U));
  
#line 1217 
  val = (unsigned int)((unsigned long)cp->init_rxds[0] - (unsigned long)cp->init_block);
  
#line 1219 
  writel((unsigned int)(((unsigned long long)val + desc_dma) >> 32),(void volatile *)(cp->regs + 16428U));
  
#line 1220 
  writel((unsigned int)desc_dma + val,(void volatile *)(cp->regs + 16424U));
  
#line 1221 
  writel(508U,(void volatile *)(cp->regs + 16420U));
  
#line 1223 
  if ((cp->cas_flags & 2U) != 0U) {
    
#line 1227 
    val = (unsigned int)((unsigned long)cp->init_rxds[1] - (unsigned long)cp->init_block);
    
#line 1229 
    writel((unsigned int)(((unsigned long long)val + desc_dma) >> 32),(void volatile *)(cp->regs + 16900U));
    
#line 1230 
    writel((unsigned int)desc_dma + val,(void volatile *)(cp->regs + 16896U));
    
#line 1232 
    writel(508U,(void volatile *)(cp->regs + 16928U));
  }
  else ;
  
#line 1237 
  val = (unsigned int)((unsigned long)cp->init_rxcs[0] - (unsigned long)cp->init_block);
  
#line 1239 
  writel((unsigned int)(((unsigned long long)val + desc_dma) >> 32),(void volatile *)(cp->regs + 16436U));
  
#line 1240 
  writel((unsigned int)desc_dma + val,(void volatile *)(cp->regs + 16432U));
  
#line 1242 
  if ((cp->cas_flags & 2U) != 0U) {
    
#line 1244 
    i = 1;
    
#line 1244 
    goto ldv_52331;
    ldv_52330: 
#line 1245 
    ;
    
#line 1245 
    val = (unsigned int)((unsigned long)cp->init_rxcs[i] - (unsigned long)cp->init_block);
    
#line 1247 
    writel((unsigned int)(((unsigned long long)val + desc_dma) >> 32),(void volatile *)(cp->regs + ((i + -1) * 8 + 16908)));
    
#line 1249 
    writel((unsigned int)desc_dma + val,(void volatile *)(cp->regs + (i + 2112) * 8));
    
#line 1244 
    i += 1;
    ldv_52331: 
#line 1245 
    ;
    
#line 1244 
    if (i <= 3) 
#line 1246 
                goto ldv_52330; else 
#line 1249 
                                     goto ldv_52332;
    ldv_52332: 
#line 1250 
    ;
  }
  else ;
  
#line 1258 
  readl((void const volatile *)(cp->regs + 28U));
  
#line 1259 
  writel(48U,(void volatile *)(cp->regs + 20U));
  
#line 1260 
  if ((cp->cas_flags & 2U) != 0U) {
    
#line 1261 
    i = 1;
    
#line 1261 
    goto ldv_52334;
    ldv_52333: 
#line 1262 
    ;
    
#line 1262 
    readl((void const volatile *)(cp->regs + ((i + -1) * 16 + 4164)));
    
#line 1261 
    i += 1;
    ldv_52334: 
#line 1262 
    ;
    
#line 1261 
    if (i <= 0) 
#line 1263 
                goto ldv_52333; else 
#line 1266 
                                     goto ldv_52335;
    ldv_52335: 
#line 1267 
    ;
    
#line 1269 
    i = 2;
    
#line 1269 
    goto ldv_52337;
    ldv_52336: 
#line 1270 
    ;
    
#line 1270 
    writel(1U,(void volatile *)(cp->regs + (i + 259) * 16));
    
#line 1269 
    i += 1;
    ldv_52337: 
#line 1270 
    ;
    
#line 1269 
    if (i <= 0) 
#line 1271 
                goto ldv_52336; else 
#line 1274 
                                     goto ldv_52338;
    ldv_52338: 
#line 1275 
    ;
  }
  else ;
  
#line 1275 
  val = (unsigned int)(cp->rx_pause_off / 64) & 511U;
  
#line 1277 
  val = ((unsigned int)(cp->rx_pause_on / 64 << 12) & 2093056U) | val;
  
#line 1279 
  writel(val,(void volatile *)(cp->regs + 16416U));
  
#line 1282 
  i = 0;
  
#line 1282 
  goto ldv_52340;
  ldv_52339: 
#line 1283 
  ;
  
#line 1283 
  writel((unsigned int)i,(void volatile *)(cp->regs + 16680U));
  
#line 1284 
  writel(0U,(void volatile *)(cp->regs + 16684U));
  
#line 1285 
  writel(0U,(void volatile *)(cp->regs + 16688U));
  
#line 1286 
  writel(0U,(void volatile *)(cp->regs + 16692U));
  
#line 1282 
  i += 1;
  ldv_52340: 
#line 1283 
  ;
  
#line 1282 
  if (i <= 63) 
#line 1284 
               goto ldv_52339; else 
#line 1287 
                                    goto ldv_52341;
  ldv_52341: 
#line 1288 
  ;
  
#line 1290 
  writel(0U,(void volatile *)(cp->regs + 16532U));
  
#line 1291 
  writel(0U,(void volatile *)(cp->regs + 16644U));
  
#line 1295 
  val = 61440U;
  
#line 1296 
  val |= 5U;
  
#line 1297 
  writel(val,(void volatile *)(cp->regs + 16452U));
  
#line 1308 
  val = 8388608U;
  
#line 1309 
  writel(val,(void volatile *)(cp->regs + 16456U));
  
#line 1310 
  if ((cp->cas_flags & 2U) != 0U) {
    
#line 1311 
    val = 256U;
    
#line 1312 
    writel(val,(void volatile *)(cp->regs + 16960U));
  }
  else ;
  
#line 1318 
  writel(0U,(void volatile *)(cp->regs + 16460U));
  
#line 1321 
  val = 0U;
  
#line 1322 
  if (cp->page_size == 4096) 
#line 1323 
                             val = 1U;
  else 
    
#line 1324 
    if (cp->page_size == 8192) 
#line 1325 
                               val = 2U;
    else 
      
#line 1326 
      if (cp->page_size == 16384) 
#line 1327 
                                  val = 3U; else ;
  
#line 1330 
  size = (int)((cp->dev)->mtu + 64U);
  
#line 1331 
  if (cp->page_size < size) 
#line 1332 
                            size = cp->page_size; else ;
  
#line 1334 
  if (size <= 1024) 
#line 1335 
                    i = 0;
  else 
    
#line 1336 
    if (size <= 2048) 
#line 1337 
                      i = 1;
    else 
      
#line 1338 
      if (size <= 4096) 
#line 1339 
                        i = 2; else 
#line 1341 
                                    i = 3;
  
#line 1343 
  cp->mtu_stride = 1 << (i + 10);
  
#line 1344 
  val &= 3U;
  
#line 1345 
  val = ((unsigned int)(i << 27) & 402653184U) | val;
  
#line 1346 
  val = ((unsigned int)((cp->page_size >> (i + 10)) << 11) & 30720U) | val;
  
#line 1347 
  val |= 1073741824U;
  
#line 1348 
  writel(val,(void volatile *)(cp->regs + 16388U));
  
#line 1354 
  tmp = cpumask_weight(cpu_online_mask);
  
#line 1354 
  if (tmp <= 63U) {
    unsigned int tmp_0;
    
#line 1354 
    tmp_0 = cpumask_weight(cpu_online_mask);
    
#line 1354 
    val = (tmp_0 << 2) & 252U;
  }
  else 
#line 1354 
       val = 0U;
  
#line 1355 
  val |= 257U;
  
#line 1356 
  val |= 783360U;
  
#line 1357 
  writel(val,(void volatile *)(cp->regs + 16704U));
  
#line 1358 
  return;
}


#line 1360  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
__inline static void cas_rxc_init(struct cas_rx_comp *rxc)
{
  
#line 1362 
  memset((void *)rxc,0,32UL);
  
#line 1363 
  rxc->word4 = 8796093022208ULL;
  
#line 1364 
  return;
}


#line 1370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
__inline static cas_page_t *cas_page_spare(struct cas *cp, int const index)
{
  cas_page_t *__retres;
  cas_page_t *new;
  int tmp;
  
#line 1372 
  cas_page_t *page = cp->rx_pages[1][index];
  
#line 1375 
  tmp = page_count(page->buffer);
  
#line 1375 
  if (tmp == 1) {
    
#line 1376 
    __retres = page;
    
#line 1376 
    goto return_label;
  }
  else ;
  
#line 1378 
  new = cas_page_dequeue(cp);
  
#line 1379 
  if (new != (cas_page_t *)0) {
    
#line 1380 
    ldv_spin_lock_107(& cp->rx_inuse_lock);
    
#line 1381 
    list_add(& page->list,& cp->rx_inuse_list);
    
#line 1382 
    ldv_spin_unlock_108(& cp->rx_inuse_lock);
  }
  else ;
  
#line 1384 
  __retres = new;
  return_label: 
#line 1384 
                return __retres;
}


#line 1388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static cas_page_t *cas_page_swap(struct cas *cp, int const ring, int const index)
{
  cas_page_t *__retres;
  int tmp_0;
  
#line 1391 
  cas_page_t **page0 = (cas_page_t **)(& cp->rx_pages[0]);
  
#line 1392 
  cas_page_t **page1 = (cas_page_t **)(& cp->rx_pages[1]);
  
#line 1395 
  tmp_0 = page_count((*(page0 + index))->buffer);
  
#line 1395 
  if (tmp_0 > 1) {
    
#line 1396 
    cas_page_t *new = cas_page_spare(cp,index);
    
#line 1397 
    if (new != (cas_page_t *)0) {
      
#line 1398 
      *(page1 + index) = *(page0 + index);
      
#line 1399 
      *(page0 + index) = new;
    }
    else ;
  }
  else ;
  
#line 1403 
  __retres = *(page0 + index);
  
#line 1403 
  return __retres;
}


#line 1406  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_clean_rxds(struct cas *cp)
{
  int i;
  int size;
  
#line 1409 
  struct cas_rx_desc *rxd = cp->init_rxds[0];
  
#line 1413 
  i = 0;
  
#line 1413 
  goto ldv_52370;
  ldv_52369: 
#line 1414 
  ;
  {
    struct sk_buff *skb;
    
#line 1415 
    goto ldv_52367;
    ldv_52366: 
#line 1416 
    ;
    
#line 1416 
    netif_rx(skb);
    ldv_52367: 
#line 1417 
    ;
    
#line 1415 
    skb = __skb_dequeue(& cp->rx_flows[i]);
    
#line 1415 
    if (skb != (struct sk_buff *)0) 
#line 1417 
                                    goto ldv_52366; else 
#line 1420 
                                                         goto ldv_52368;
    ldv_52368: 
#line 1421 
    ;
  }
  
#line 1413 
  i += 1;
  ldv_52370: 
#line 1414 
  ;
  
#line 1413 
  if (i <= 63) 
#line 1415 
               goto ldv_52369; else 
#line 1418 
                                    goto ldv_52371;
  ldv_52371: 
#line 1419 
  ;
  
#line 1421 
  size = 512;
  
#line 1422 
  i = 0;
  
#line 1422 
  goto ldv_52374;
  ldv_52373: 
#line 1423 
  ;
  {
    
#line 1423 
    cas_page_t *page = cas_page_swap(cp,0,i);
    
#line 1424 
    (rxd + i)->buffer = page->dma_addr;
    
#line 1425 
    (rxd + i)->index = (unsigned long long)i & 4095ULL;
  }
  
#line 1422 
  i += 1;
  ldv_52374: 
#line 1423 
  ;
  
#line 1422 
  if (i < size) 
#line 1424 
                goto ldv_52373; else 
#line 1427 
                                     goto ldv_52375;
  ldv_52375: 
#line 1428 
  ;
  
#line 1429 
  cp->rx_old[0] = 508;
  
#line 1430 
  cp->rx_last[0] = 0;
  
#line 1431 
  cp->cas_flags &= 4294967279U;
  
#line 1432 
  return;
}


#line 1434  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_clean_rxcs(struct cas *cp)
{
  int i;
  int j;
  
#line 1439 
  memset((void *)(& cp->rx_cur),0,4UL);
  
#line 1440 
  memset((void *)(& cp->rx_new),0,4UL);
  
#line 1441 
  i = 0;
  
#line 1441 
  goto ldv_52386;
  ldv_52385: 
#line 1442 
  ;
  {
    
#line 1442 
    struct cas_rx_comp *rxc = cp->init_rxcs[i];
    
#line 1443 
    j = 0;
    
#line 1443 
    goto ldv_52383;
    ldv_52382: 
#line 1444 
    ;
    
#line 1444 
    cas_rxc_init(rxc + j);
    
#line 1443 
    j += 1;
    ldv_52383: 
#line 1444 
    ;
    
#line 1443 
    if (j <= 2047) 
#line 1445 
                   goto ldv_52382; else 
#line 1448 
                                        goto ldv_52384;
    ldv_52384: 
#line 1449 
    ;
  }
  
#line 1441 
  i += 1;
  ldv_52386: 
#line 1442 
  ;
  
#line 1441 
  if (i <= 0) 
#line 1443 
              goto ldv_52385; else 
#line 1446 
                                   goto ldv_52387;
  ldv_52387: 
#line 1447 
  ;
  
#line 1448 
  return;
}


#line 1517  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_rxmac_interrupt(struct net_device *dev, struct cas *cp, u32 status)
{
  int __retres;
  
#line 1520 
  u32 stat = readl((void const volatile *)(cp->regs + 24596U));
  
#line 1522 
  if (stat == 0U) {
    
#line 1523 
    __retres = 0;
    
#line 1523 
    goto return_label;
  }
  else ;
  
#line 1525 
  if ((cp->msg_enable & 512U) != 0U) {
    
#line 1525 
    struct _ddebug descriptor = {.modname = "cassini", .function = "cas_rxmac_interrupt", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c", .format = "rxmac interrupt, stat: 0x%x\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1525U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1525 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1525 
                                                        __dynamic_netdev_dbg(& descriptor,(struct net_device const *)cp->dev,"rxmac interrupt, stat: 0x%x\n",stat); else ;
  }
  else ;
  
#line 1528 
  ldv_spin_lock_109(& cp->stat_lock[0]);
  
#line 1529 
  if ((stat & 8U) != 0U) 
#line 1530 
                         cp->net_stats[0].rx_frame_errors += 65536UL; else ;
  
#line 1532 
  if ((stat & 16U) != 0U) 
#line 1533 
                          cp->net_stats[0].rx_crc_errors += 65536UL; else ;
  
#line 1535 
  if ((stat & 32U) != 0U) 
#line 1536 
                          cp->net_stats[0].rx_length_errors += 65536UL; else ;
  
#line 1538 
  if ((stat & 2U) != 0U) {
    
#line 1539 
    cp->net_stats[0].rx_over_errors += 1UL;
    
#line 1540 
    cp->net_stats[0].rx_fifo_errors += 1UL;
  }
  else ;
  
#line 1546 
  ldv_spin_unlock_110(& cp->stat_lock[0]);
  
#line 1547 
  __retres = 0;
  return_label: 
#line 1547 
                return __retres;
}


#line 1550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_mac_interrupt(struct net_device *dev, struct cas *cp, u32 status)
{
  int __retres;
  
#line 1553 
  u32 stat = readl((void const volatile *)(cp->regs + 24600U));
  
#line 1555 
  if (stat == 0U) {
    
#line 1556 
    __retres = 0;
    
#line 1556 
    goto return_label;
  }
  else ;
  
#line 1558 
  if ((cp->msg_enable & 512U) != 0U) 
#line 1558 
                                     netdev_printk("\001",(struct net_device const *)cp->dev,"mac interrupt, stat: 0x%x\n",stat); else ;
  
#line 1565 
  if ((stat & 2U) != 0U) 
#line 1566 
                         cp->pause_entered += 1ULL; else ;
  
#line 1568 
  if ((stat & 1U) != 0U) 
#line 1569 
                         cp->pause_last_time_recvd = (unsigned short)(stat >> 16); else ;
  
#line 1571 
  __retres = 0;
  return_label: 
#line 1571 
                return __retres;
}


#line 1576  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
__inline static int cas_mdio_link_not_up(struct cas *cp)
{
  int __retres;
  u16 val;
  
#line 1580 
  switch ((unsigned int)cp->lstate) {
    int tmp;
    case (unsigned int)3: 
#line 1581 
    ;
    
#line 1582 
    if ((cp->msg_enable & 4U) != 0U) 
#line 1582 
                                     netdev_info((struct net_device const *)cp->dev,"Autoneg failed again, keeping forced mode\n"); else ;
    
#line 1583 
    cas_phy_write(cp,0,(unsigned short)((int)((unsigned short)cp->link_fcntl)));
    
#line 1584 
    cp->timer_ticks = 5;
    
#line 1585 
    cp->lstate = link_force_ok;
    
#line 1586 
    cp->link_transition = 4;
    
#line 1587 
    goto ldv_52407;
    case (unsigned int)1: 
#line 1589 
    ;
    
#line 1590 
    val = cas_phy_read(cp,0);
    
#line 1595 
    val = (unsigned short)((unsigned int)val & 60927U);
    
#line 1596 
    val = (unsigned short)((unsigned int)val | 256U);
    
#line 1597 
    if ((cp->cas_flags & 1U) != 0U) 
#line 1597 
                                    tmp = 64; else 
#line 1597 
                                                   tmp = 8192;
    
#line 1597 
    val = (unsigned short)(tmp | (int)val);
    
#line 1599 
    cas_phy_write(cp,0,(unsigned short)((int)val));
    
#line 1600 
    cp->timer_ticks = 5;
    
#line 1601 
    cp->lstate = link_force_try;
    
#line 1602 
    cp->link_transition = 4;
    
#line 1603 
    goto ldv_52407;
    case (unsigned int)2: 
#line 1605 
    ;
    
#line 1607 
    val = cas_phy_read(cp,0);
    
#line 1608 
    cp->timer_ticks = 5;
    
#line 1609 
    if (((int)val & 64) != 0) {
      
#line 1610 
      val = (unsigned short)((unsigned int)val & 65471U);
      
#line 1611 
      val = (unsigned short)((unsigned int)val | 8448U);
      
#line 1612 
      cas_phy_write(cp,0,(unsigned short)((int)val));
      
#line 1613 
      goto ldv_52407;
    }
    else ;
    
#line 1616 
    if (((int)val & 8192) != 0) {
      
#line 1617 
      if (((int)val & 256) != 0) 
#line 1618 
                                 val = (unsigned short)((unsigned int)val & 65279U); else 
                                                                    
#line 1620 
                                                                    val = (unsigned short)((unsigned int)val & 57343U);
      
#line 1622 
      cas_phy_write(cp,0,(unsigned short)((int)val));
      
#line 1623 
      goto ldv_52407;
    }
    else ;
    default: 
#line 1625 
    ;
    
#line 1626 
    goto ldv_52407;
  }
  ldv_52407: 
#line 1628 
  ;
  
#line 1628 
  __retres = 0;
  
#line 1628 
  return __retres;
}


#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_mii_link_check(struct cas *cp, u16 const bmsr)
{
  int __retres;
  int restart;
  
#line 1637 
  if (((int)bmsr & 4) != 0) {
    
#line 1643 
    if (cp->lstate == (unsigned int)link_force_try && (cp->link_cntl & 4096) != 0) {
      u16 tmp;
      
#line 1645 
      cp->lstate = link_force_ret;
      
#line 1646 
      cp->link_transition = 4;
      
#line 1647 
      cas_mif_poll(cp,0);
      
#line 1648 
      tmp = cas_phy_read(cp,0);
      
#line 1648 
      cp->link_fcntl = (int)tmp;
      
#line 1649 
      cp->timer_ticks = 5;
      
#line 1650 
      if (cp->opened != 0) {
        
#line 1651 
        if ((cp->msg_enable & 4U) != 0U) 
#line 1651 
                                         netdev_info((struct net_device const *)cp->dev,"Got link after fallback, retrying autoneg once...\n"); else ;
      }
      else ;
      
#line 1653 
      cas_phy_write(cp,0,(unsigned short)((int)((unsigned short)(cp->link_fcntl | 4608))));
      
#line 1656 
      cas_mif_poll(cp,1);
    }
    else 
      
#line 1658 
      if (cp->lstate != (unsigned int)link_up) {
        
#line 1659 
        cp->lstate = link_up;
        
#line 1660 
        cp->link_transition = 3;
        
#line 1662 
        if (cp->opened != 0) {
          
#line 1663 
          cas_set_link_modes(cp);
          
#line 1664 
          netif_carrier_on(cp->dev);
        }
        else ;
      }
      else ;
    
#line 1667 
    __retres = 0;
    
#line 1667 
    goto return_label;
  }
  else ;
  
#line 1673 
  restart = 0;
  
#line 1674 
  if (cp->lstate == (unsigned int)link_up) {
    
#line 1675 
    cp->lstate = link_down;
    
#line 1676 
    cp->link_transition = 5;
    
#line 1678 
    netif_carrier_off(cp->dev);
    
#line 1679 
    if (cp->opened != 0) {
      
#line 1680 
      if ((cp->msg_enable & 4U) != 0U) 
#line 1680 
                                       netdev_info((struct net_device const *)cp->dev,"Link down\n"); else ;
    }
    else ;
    
#line 1681 
    restart = 1;
  }
  else {
    
#line 1683 
    cp->timer_ticks += 1;
    
#line 1683 
    if (cp->timer_ticks > 10) 
#line 1684 
                              cas_mdio_link_not_up(cp); else ;
  }
  
#line 1686 
  __retres = restart;
  return_label: 
#line 1686 
                return __retres;
}


#line 1689  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_mif_interrupt(struct net_device *dev, struct cas *cp, u32 status)
{
  int __retres;
  u16 bmsr;
  int tmp_0;
  
#line 1692 
  u32 stat = readl((void const volatile *)(cp->regs + 25112U));
  
#line 1696 
  if ((stat & 65535U) == 0U) {
    
#line 1697 
    __retres = 0;
    
#line 1697 
    goto return_label;
  }
  else ;
  
#line 1699 
  bmsr = (unsigned short)(stat >> 16);
  
#line 1700 
  tmp_0 = cas_mii_link_check(cp,(unsigned short)((int)bmsr));
  
#line 1700 
  __retres = tmp_0;
  return_label: 
#line 1700 
                return __retres;
}


#line 1703  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_pci_interrupt(struct net_device *dev, struct cas *cp, u32 status)
{
  int __retres;
  unsigned int tmp_0;
  
#line 1706 
  u32 stat = readl((void const volatile *)(cp->regs + 4096U));
  
#line 1708 
  if (stat == 0U) {
    
#line 1709 
    __retres = 0;
    
#line 1709 
    goto return_label;
  }
  else ;
  
#line 1711 
  tmp_0 = readl((void const volatile *)(cp->regs + 4108U));
  
#line 1711 
  ;
  
#line 1711 
  ;
  
#line 1711 
  netdev_err((struct net_device const *)dev,"PCI error [%04x:%04x]",stat,tmp_0);
  
#line 1715 
  if ((stat & 1U) != 0U && (cp->cas_flags & 2U) == 0U) 
#line 1717 
                                                       printk(""); else ;
  
#line 1719 
  if ((stat & 2U) != 0U) 
#line 1720 
                         printk(""); else ;
  
#line 1721 
  if ((stat & 4U) != 0U) 
#line 1722 
                         printk(""); else ;
  
#line 1723 
  if ((stat & 8U) != 0U) 
#line 1724 
                         printk(""); else ;
  
#line 1725 
  if ((stat & 16U) != 0U) 
#line 1726 
                          printk(""); else ;
  
#line 1727 
  printk("");
  
#line 1729 
  if ((stat & 4U) != 0U) {
    u16 cfg;
    
#line 1735 
    pci_read_config_word((struct pci_dev const *)cp->pdev,6,& cfg);
    
#line 1736 
    netdev_err((struct net_device const *)dev,"Read PCI cfg space status [%04x]\n",(int)cfg);
    
#line 1737 
    if (((int)cfg & 256) != 0) 
#line 1738 
                               netdev_err((struct net_device const *)dev,"PCI parity error detected\n"); else ;
    
#line 1739 
    if (((int)cfg & 2048) != 0) 
#line 1740 
                                netdev_err((struct net_device const *)dev,"PCI target abort\n"); else ;
    
#line 1741 
    if (((int)cfg & 4096) != 0) 
#line 1742 
                                netdev_err((struct net_device const *)dev,"PCI master acks target abort\n"); else ;
    
#line 1743 
    if (((int)cfg & 8192) != 0) 
#line 1744 
                                netdev_err((struct net_device const *)dev,"PCI master abort\n"); else ;
    
#line 1745 
    if (((int)cfg & 16384) != 0) 
#line 1746 
                                 netdev_err((struct net_device const *)dev,"PCI system error SERR#\n"); else ;
    
#line 1747 
    if ((int)cfg < 0) 
#line 1748 
                      netdev_err((struct net_device const *)dev,"PCI parity error\n"); else ;
    
#line 1751 
    cfg = (unsigned short)((unsigned int)cfg & 63744U);
    
#line 1757 
    pci_write_config_word((struct pci_dev const *)cp->pdev,6,(unsigned short)((int)cfg));
  }
  else ;
  
#line 1761 
  __retres = 1;
  return_label: 
#line 1761 
                return __retres;
}


#line 1769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_abnormal_irq(struct net_device *dev, struct cas *cp, u32 status)
{
  int __retres;
  
#line 1772 
  if ((status & 64U) != 0U) {
    
#line 1774 
    if ((cp->msg_enable & 64U) != 0U) 
#line 1774 
                                      netdev_printk("\001",(struct net_device const *)cp->dev,"corrupt rx tag framing\n"); else ;
    
#line 1776 
    ldv_spin_lock_111(& cp->stat_lock[0]);
    
#line 1777 
    cp->net_stats[0].rx_errors += 1UL;
    
#line 1778 
    ldv_spin_unlock_112(& cp->stat_lock[0]);
    
#line 1779 
    goto do_reset;
  }
  else ;
  
#line 1782 
  if ((status & 1024U) != 0U) {
    
#line 1784 
    if ((cp->msg_enable & 64U) != 0U) 
#line 1784 
                                      netdev_printk("\001",(struct net_device const *)cp->dev,"length mismatch for rx frame\n"); else ;
    
#line 1786 
    ldv_spin_lock_113(& cp->stat_lock[0]);
    
#line 1787 
    cp->net_stats[0].rx_errors += 1UL;
    
#line 1788 
    ldv_spin_unlock_114(& cp->stat_lock[0]);
    
#line 1789 
    goto do_reset;
  }
  else ;
  
#line 1792 
  if ((status & 8192U) != 0U) {
    int tmp;
    
#line 1793 
    tmp = cas_pcs_interrupt(dev,cp,status);
    
#line 1793 
    if (tmp != 0) 
#line 1794 
                  goto do_reset; else ;
  }
  else ;
  
#line 1797 
  if ((status & 16384U) != 0U) {
    int tmp_0;
    
#line 1798 
    tmp_0 = cas_txmac_interrupt(dev,cp,status);
    
#line 1798 
    if (tmp_0 != 0) 
#line 1799 
                    goto do_reset; else ;
  }
  else ;
  
#line 1802 
  if ((status & 32768U) != 0U) {
    int tmp_1;
    
#line 1803 
    tmp_1 = cas_rxmac_interrupt(dev,cp,status);
    
#line 1803 
    if (tmp_1 != 0) 
#line 1804 
                    goto do_reset; else ;
  }
  else ;
  
#line 1807 
  if ((status & 65536U) != 0U) {
    int tmp_2;
    
#line 1808 
    tmp_2 = cas_mac_interrupt(dev,cp,status);
    
#line 1808 
    if (tmp_2 != 0) 
#line 1809 
                    goto do_reset; else ;
  }
  else ;
  
#line 1812 
  if ((status & 131072U) != 0U) {
    int tmp_3;
    
#line 1813 
    tmp_3 = cas_mif_interrupt(dev,cp,status);
    
#line 1813 
    if (tmp_3 != 0) 
#line 1814 
                    goto do_reset; else ;
  }
  else ;
  
#line 1817 
  if ((status & 262144U) != 0U) {
    int tmp_4;
    
#line 1818 
    tmp_4 = cas_pci_interrupt(dev,cp,status);
    
#line 1818 
    if (tmp_4 != 0) 
#line 1819 
                    goto do_reset; else ;
  }
  else ;
  
#line 1821 
  __retres = 0;
  
#line 1821 
  goto return_label;
  do_reset: 
#line 1823 
  ;
  
#line 1825 
  atomic_inc(& cp->reset_task_pending);
  
#line 1826 
  atomic_inc(& cp->reset_task_pending_all);
  
#line 1827 
  netdev_err((struct net_device const *)dev,"reset called in cas_abnormal_irq [0x%x]\n",status);
  
#line 1828 
  ldv_schedule_work_115(& cp->reset_task);
  
#line 1834 
  __retres = 1;
  return_label: 
#line 1834 
                return __retres;
}


#line 1842  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
__inline static int cas_calc_tabort(struct cas *cp, unsigned long const addr, int const len)
{
  int __retres;
  
#line 1845 
  unsigned long off = (unsigned long)len + addr;
  
#line 1847 
  if ((cp->cas_flags & 4U) == 0U) {
    
#line 1848 
    __retres = 0;
    
#line 1848 
    goto return_label;
  }
  else ;
  
#line 1849 
  if (((off + 4095UL) & 18446744073709547520UL) - off > 32UL) {
    
#line 1850 
    __retres = 0;
    
#line 1850 
    goto return_label;
  }
  else ;
  
#line 1851 
  __retres = 32;
  return_label: 
#line 1851 
                return __retres;
}


#line 1854  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
__inline static void cas_tx_ringN(struct cas *cp, int ring, int limit)
{
  struct cas_tx_desc *txds;
  struct sk_buff **skbs;
  int entry;
  int count;
  bool tmp_1;
  
#line 1858 
  struct net_device *dev = cp->dev;
  
#line 1861 
  ldv_spin_lock_116(& cp->tx_lock[ring]);
  
#line 1862 
  txds = cp->init_txds[ring];
  
#line 1863 
  skbs = (struct sk_buff **)(& cp->tx_skbs[ring]);
  
#line 1864 
  entry = cp->tx_old[ring];
  
#line 1866 
  if (entry <= limit) 
#line 1866 
                      count = limit - entry; else 
#line 1866 
                                                  count = (512 - entry) + limit;
  
#line 1867 
  goto ldv_52456;
  ldv_52462: 
#line 1868 
  ;
  {
    dma_addr_t daddr;
    u32 dlen;
    int frag;
    unsigned char *tmp;
    unsigned char *tmp_0;
    
#line 1868 
    struct sk_buff *skb = *(skbs + entry);
    
#line 1873 
    if (skb == (struct sk_buff *)0) {
      
#line 1875 
      entry = (entry + 1) & 511;
      
#line 1876 
      goto ldv_52456;
    }
    else ;
    
#line 1880 
    tmp = skb_end_pointer((struct sk_buff const *)skb);
    
#line 1881 
    count -= ((int)((struct skb_shared_info *)tmp)->nr_frags + cp->tx_tiny_use[ring][entry].nbufs) + 1;
    
#line 1882 
    if (count < 0) 
#line 1883 
                   goto ldv_52457; else ;
    
#line 1885 
    if ((cp->msg_enable & 1024U) != 0U) 
#line 1885 
                                        netdev_printk("\001",(struct net_device const *)cp->dev,"tx[%d] done, slot %d\n",ring,entry); else ;
    
#line 1888 
    *(skbs + entry) = (struct sk_buff *)0;
    
#line 1889 
    cp->tx_tiny_use[ring][entry].nbufs = 0;
    
#line 1891 
    frag = 0;
    
#line 1891 
    goto ldv_52460;
    ldv_52459: 
#line 1892 
    ;
    {
      
#line 1892 
      struct cas_tx_desc *txd = txds + entry;
      
#line 1894 
      daddr = txd->buffer;
      
#line 1895 
      dlen = (unsigned int)txd->control & 16383U;
      
#line 1897 
      pci_unmap_page(cp->pdev,daddr,(unsigned long)dlen,1);
      
#line 1899 
      entry = (entry + 1) & 511;
      
#line 1902 
      if (cp->tx_tiny_use[ring][entry].used != 0) {
        
#line 1903 
        cp->tx_tiny_use[ring][entry].used = 0;
        
#line 1904 
        entry = (entry + 1) & 511;
      }
      else ;
    }
    
#line 1891 
    frag += 1;
    ldv_52460: 
#line 1892 
    ;
    
#line 1891 
    tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 1891 
    ;
    
#line 1891 
    if ((int)((struct skb_shared_info *)tmp_0)->nr_frags >= frag) 
#line 1893 
                                                                  goto ldv_52459; else 
                                                                    
#line 1896 
                                                                    goto ldv_52461;
    ldv_52461: 
#line 1897 
    ;
    
#line 1908 
    ldv_spin_lock_117(& cp->stat_lock[ring]);
    
#line 1909 
    cp->net_stats[ring].tx_packets += 1UL;
    
#line 1910 
    cp->net_stats[ring].tx_bytes += (unsigned long)skb->len;
    
#line 1911 
    ldv_spin_unlock_118(& cp->stat_lock[ring]);
    
#line 1912 
    dev_kfree_skb_irq(skb);
  }
  ldv_52456: 
#line 1914 
  ;
  
#line 1867 
  if (entry != limit) 
#line 1869 
                      goto ldv_52462; else 
#line 1872 
                                           goto ldv_52457;
  ldv_52457: 
#line 1873 
  ;
  
#line 1914 
  cp->tx_old[ring] = entry;
  
#line 1920 
  tmp_1 = netif_queue_stopped((struct net_device const *)dev);
  
#line 1920 
  if ((int)tmp_1 != 0) {
    int tmp_2;
    int tmp_3;
    
#line 1921 
    if (cp->tx_old[ring] <= cp->tx_new[ring]) 
#line 1921 
                                              tmp_2 = (cp->tx_old[ring] + 511) - cp->tx_new[ring]; else 
                                                                    
#line 1921 
                                                                    tmp_2 = (cp->tx_old[ring] - cp->tx_new[ring]) + -1;
    
#line 1921 
    if ((cp->cas_flags & 4U) != 0U) 
#line 1921 
                                    tmp_3 = 2; else 
#line 1921 
                                                    tmp_3 = 1;
    
#line 1921 
    if ((unsigned long)tmp_2 > (unsigned long)tmp_3 * 18UL) 
#line 1922 
                                                            netif_wake_queue(dev); else ;
  }
  else ;
  
#line 1923 
  ldv_spin_unlock_119(& cp->tx_lock[ring]);
  
#line 1924 
  return;
}


#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_tx(struct net_device *dev, struct cas *cp, u32 status)
{
  int limit;
  int ring;
  
#line 1931 
  u64 compwb = (cp->init_block)->tx_compwb;
  
#line 1933 
  if ((cp->msg_enable & 512U) != 0U) 
#line 1933 
                                     netdev_printk("\001",(struct net_device const *)cp->dev,"tx interrupt, status: 0x%x, %llx\n",status,compwb); else ;
  
#line 1937 
  ring = 0;
  
#line 1937 
  goto ldv_52472;
  ldv_52471: 
#line 1938 
  ;
  
#line 1940 
  limit = (int)(((compwb << 8U) & (unsigned long long)65535U) | ((compwb >> 8) & (unsigned long long)255U));
  
#line 1942 
  compwb >>= 16;
  
#line 1946 
  if (cp->tx_old[ring] != limit) 
#line 1947 
                                 cas_tx_ringN(cp,ring,limit); else ;
  
#line 1937 
  ring += 1;
  ldv_52472: 
#line 1938 
  ;
  
#line 1937 
  if (ring <= 3) 
#line 1939 
                 goto ldv_52471; else 
#line 1942 
                                      goto ldv_52473;
  ldv_52473: 
#line 1943 
  ;
  
#line 1944 
  return;
}


#line 1997 
void __compiletime_assert_1997(void);


#line 2032 
void __compiletime_assert_2032(void);


#line 2106 
void __compiletime_assert_2106(void);


#line 2125 
void __compiletime_assert_2125(void);


#line 2142 
void __compiletime_assert_2142(void);


#line 1952  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_rx_process_pkt(struct cas *cp, struct cas_rx_comp *rxc, int entry, u64 const *words, struct sk_buff **skbref)
{
  int __retres;
  int dlen;
  int hlen;
  int len;
  int i;
  int alloclen;
  int off;
  struct cas_page *page;
  struct sk_buff *skb;
  void *addr;
  void *crcaddr;
  __sum16 csum;
  char *p;
  
#line 1957 
  int swivel = 2;
  
#line 1964 
  hlen = (int)(*(words + 1U) >> 35) & 511;
  
#line 1965 
  dlen = (int)(*words >> 13) & 16383;
  
#line 1966 
  len = hlen + dlen;
  
#line 1968 
  if ((*(words + 2U) & 1ULL) != 0ULL) 
#line 1969 
                                      alloclen = len;
  else {
    int tmp_0;
    {
      int tmp;
      
#line 1971 
      int _max1 = hlen;
      
#line 1971 
      int _max2 = 64;
      
#line 1971 
      if (_max1 > _max2) 
#line 1971 
                         tmp = _max1; else 
#line 1971 
                                           tmp = _max2;
      
#line 1971 
      tmp_0 = tmp;
    }
    
#line 1971 
    alloclen = tmp_0;
  }
  
#line 1973 
  skb = netdev_alloc_skb(cp->dev,(unsigned int)((alloclen + swivel) + cp->crc_size));
  
#line 1974 
  if (skb == (struct sk_buff *)0) {
    
#line 1975 
    __retres = -1;
    
#line 1975 
    goto return_label;
  }
  else ;
  
#line 1977 
  *skbref = skb;
  
#line 1978 
  skb_reserve(skb,swivel);
  
#line 1980 
  p = (char *)skb->data;
  
#line 1981 
  crcaddr = (void *)0;
  
#line 1981 
  addr = crcaddr;
  
#line 1982 
  if (hlen != 0) {
    
#line 1983 
    i = (int)(*(words + 1U) >> 50);
    
#line 1984 
    page = cp->rx_pages[((unsigned long long)i >> 12) & 1ULL][(unsigned long long)i & 4095ULL];
    
#line 1985 
    off = (int)(((*(words + 1U) >> 44) & (unsigned long long)63U) * (unsigned long long)256U + (unsigned long long)swivel);
    
#line 1988 
    i = hlen;
    
#line 1989 
    if (dlen == 0) 
#line 1990 
                   i = cp->crc_size + i; else ;
    
#line 1991 
    pci_dma_sync_single_for_cpu(cp->pdev,page->dma_addr + (unsigned long long)off,(unsigned long)i,2);
    
#line 1993 
    addr = kmap_atomic(page->buffer);
    
#line 1994 
    memcpy((void *)p,(void const *)(addr + off),(unsigned long)i);
    
#line 1995 
    pci_dma_sync_single_for_device(cp->pdev,page->dma_addr + (unsigned long long)off,(unsigned long)i,2);
    {
      
#line 1997 
      bool __cond = (_Bool)0;
      
#line 1997 
      if ((int)__cond != 0) 
#line 1997 
                            __compiletime_assert_1997(); else ;
    }
    
#line 1997 
    __kunmap_atomic(addr);
    
#line 1999 
    p += hlen;
    
#line 2000 
    swivel = 0;
  }
  else ;
  
#line 2004 
  if (hlen + dlen > alloclen) {
    unsigned char *tmp_1;
    int tmp_3;
    unsigned char *tmp_4;
    
#line 2005 
    tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 2005 
    skb_frag_t *frag = (skb_frag_t *)(& ((struct skb_shared_info *)tmp_1)->frags);
    
#line 2008 
    i = (int)(*words >> 41) & 16383;
    
#line 2009 
    page = cp->rx_pages[((unsigned long long)i >> 12) & 1ULL][(unsigned long long)i & 4095ULL];
    
#line 2010 
    off = (int)(((*words >> 27) & (unsigned long long)16383U) + (unsigned long long)swivel);
    {
      int tmp_2;
      
#line 2012 
      int _min1 = cp->page_size - off;
      
#line 2012 
      int _min2 = dlen;
      
#line 2012 
      if (_min1 < _min2) 
#line 2012 
                         tmp_2 = _min1; else 
#line 2012 
                                             tmp_2 = _min2;
      
#line 2012 
      tmp_3 = tmp_2;
    }
    
#line 2012 
    hlen = tmp_3;
    
#line 2013 
    if (hlen < 0) {
      
#line 2014 
      if ((cp->msg_enable & 64U) != 0U) 
#line 2014 
                                        netdev_printk("\001",(struct net_device const *)cp->dev,"rx page overflow: %d\n",hlen); else ;
      
#line 2016 
      dev_kfree_skb_irq(skb);
      
#line 2017 
      __retres = -1;
      
#line 2017 
      goto return_label;
    }
    else ;
    
#line 2019 
    i = hlen;
    
#line 2020 
    if (i == dlen) 
#line 2021 
                   i = cp->crc_size + i; else ;
    
#line 2022 
    pci_dma_sync_single_for_cpu(cp->pdev,page->dma_addr + (unsigned long long)off,(unsigned long)i,2);
    
#line 2026 
    swivel = 0;
    
#line 2027 
    if ((char *)skb->data == p) {
      
#line 2028 
      addr = kmap_atomic(page->buffer);
      
#line 2029 
      memcpy((void *)p,(void const *)(addr + off),64UL);
      
#line 2030 
      pci_dma_sync_single_for_device(cp->pdev,page->dma_addr + (unsigned long long)off,(unsigned long)i,2);
      {
        
#line 2032 
        bool __cond_0 = (_Bool)0;
        
#line 2032 
        if ((int)__cond_0 != 0) 
#line 2032 
                                __compiletime_assert_2032(); else ;
      }
      
#line 2032 
      __kunmap_atomic(addr);
      
#line 2033 
      off += 64;
      
#line 2034 
      swivel = 64;
    }
    else ;
    
#line 2039 
    skb_put(skb,(unsigned int)alloclen);
    
#line 2041 
    tmp_4 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 2041 
    ((struct skb_shared_info *)tmp_4)->nr_frags = (unsigned char)((int)((struct skb_shared_info *)tmp_4)->nr_frags + 1);
    
#line 2042 
    skb->data_len += (unsigned int)(hlen - swivel);
    
#line 2043 
    skb->truesize += (unsigned int)(hlen - swivel);
    
#line 2044 
    skb->len += (unsigned int)(hlen - swivel);
    
#line 2046 
    __skb_frag_set_page(frag,page->buffer);
    
#line 2047 
    __skb_frag_ref(frag);
    
#line 2048 
    frag->page_offset = (unsigned int)off;
    
#line 2049 
    skb_frag_size_set(frag,(unsigned int)(hlen - swivel));
    
#line 2052 
    if ((*words & 288230376151711744ULL) != 0ULL) {
      
#line 2052 
      dlen -= hlen;
      
#line 2052 
      if (dlen > 0) {
        unsigned char *tmp_5;
        
#line 2053 
        hlen = dlen;
        
#line 2054 
        off = 0;
        
#line 2056 
        i = (int)(*(words + 1U) >> 21) & 16383;
        
#line 2057 
        page = cp->rx_pages[((unsigned long long)i >> 12) & 1ULL][(unsigned long long)i & 4095ULL];
        
#line 2058 
        pci_dma_sync_single_for_cpu(cp->pdev,page->dma_addr,(unsigned long)(cp->crc_size + hlen),2);
        
#line 2061 
        pci_dma_sync_single_for_device(cp->pdev,page->dma_addr,(unsigned long)(cp->crc_size + hlen),2);
        
#line 2065 
        tmp_5 = skb_end_pointer((struct sk_buff const *)skb);
        
#line 2065 
        ((struct skb_shared_info *)tmp_5)->nr_frags = (unsigned char)((int)((struct skb_shared_info *)tmp_5)->nr_frags + 1);
        
#line 2066 
        skb->data_len += (unsigned int)hlen;
        
#line 2067 
        skb->len += (unsigned int)hlen;
        
#line 2068 
        frag += 1;
        
#line 2070 
        __skb_frag_set_page(frag,page->buffer);
        
#line 2071 
        __skb_frag_ref(frag);
        
#line 2072 
        frag->page_offset = 0U;
        
#line 2073 
        skb_frag_size_set(frag,(unsigned int)hlen);
      }
      else ;
    }
    else ;
    
#line 2077 
    if (cp->crc_size != 0) {
      
#line 2078 
      addr = kmap_atomic(page->buffer);
      
#line 2079 
      crcaddr = addr + (off + hlen);
    }
    else ;
  }
  else {
    int tmp_7;
    
#line 2084 
    if (dlen == 0) 
#line 2085 
                   goto end_copy_pkt; else ;
    
#line 2087 
    i = (int)(*words >> 41) & 16383;
    
#line 2088 
    page = cp->rx_pages[((unsigned long long)i >> 12) & 1ULL][(unsigned long long)i & 4095ULL];
    
#line 2089 
    off = (int)(((*words >> 27) & (unsigned long long)16383U) + (unsigned long long)swivel);
    {
      int tmp_6;
      
#line 2090 
      int _min1_0 = cp->page_size - off;
      
#line 2090 
      int _min2_0 = dlen;
      
#line 2090 
      if (_min1_0 < _min2_0) 
#line 2090 
                             tmp_6 = _min1_0; else 
#line 2090 
                                                   tmp_6 = _min2_0;
      
#line 2090 
      tmp_7 = tmp_6;
    }
    
#line 2090 
    hlen = tmp_7;
    
#line 2091 
    if (hlen < 0) {
      
#line 2092 
      if ((cp->msg_enable & 64U) != 0U) 
#line 2092 
                                        netdev_printk("\001",(struct net_device const *)cp->dev,"rx page overflow: %d\n",hlen); else ;
      
#line 2094 
      dev_kfree_skb_irq(skb);
      
#line 2095 
      __retres = -1;
      
#line 2095 
      goto return_label;
    }
    else ;
    
#line 2097 
    i = hlen;
    
#line 2098 
    if (i == dlen) 
#line 2099 
                   i = cp->crc_size + i; else ;
    
#line 2100 
    pci_dma_sync_single_for_cpu(cp->pdev,page->dma_addr + (unsigned long long)off,(unsigned long)i,2);
    
#line 2102 
    addr = kmap_atomic(page->buffer);
    
#line 2103 
    memcpy((void *)p,(void const *)(addr + off),(unsigned long)i);
    
#line 2104 
    pci_dma_sync_single_for_device(cp->pdev,page->dma_addr + (unsigned long long)off,(unsigned long)i,2);
    {
      
#line 2106 
      bool __cond_1 = (_Bool)0;
      
#line 2106 
      if ((int)__cond_1 != 0) 
#line 2106 
                              __compiletime_assert_2106(); else ;
    }
    
#line 2106 
    __kunmap_atomic(addr);
    
#line 2107 
    if ((char *)skb->data == p) ; else ;
    
#line 2113 
    if ((*words & 288230376151711744ULL) != 0ULL) {
      
#line 2113 
      dlen -= hlen;
      
#line 2113 
      if (dlen > 0) {
        
#line 2114 
        p += hlen;
        
#line 2115 
        i = (int)(*(words + 1U) >> 21) & 16383;
        
#line 2116 
        page = cp->rx_pages[((unsigned long long)i >> 12) & 1ULL][(unsigned long long)i & 4095ULL];
        
#line 2117 
        pci_dma_sync_single_for_cpu(cp->pdev,page->dma_addr,(unsigned long)(cp->crc_size + dlen),2);
        
#line 2120 
        addr = kmap_atomic(page->buffer);
        
#line 2121 
        memcpy((void *)p,(void const *)addr,(unsigned long)(cp->crc_size + dlen));
        
#line 2122 
        pci_dma_sync_single_for_device(cp->pdev,page->dma_addr,(unsigned long)(cp->crc_size + dlen),2);
        {
          
#line 2125 
          bool __cond_2 = (_Bool)0;
          
#line 2125 
          if ((int)__cond_2 != 0) 
#line 2125 
                                  __compiletime_assert_2125(); else ;
        }
        
#line 2125 
        __kunmap_atomic(addr);
      }
      else ;
    }
    else ;
    end_copy_pkt: 
#line 2128 
    ;
    
#line 2129 
    if (cp->crc_size != 0) {
      
#line 2130 
      addr = (void *)0;
      
#line 2131 
      crcaddr = (void *)(skb->data + alloclen);
    }
    else ;
    
#line 2133 
    skb_put(skb,(unsigned int)alloclen);
  }
  
#line 2136 
  if (0 != 0) 
#line 2136 
              csum = (unsigned short)(((int)((unsigned short)*(words + 3U)) << 8) | ((int)((unsigned short)*(words + 3U)) >> 8)); else 
                                                                    
#line 2136 
                                                                    csum = __fswab16((unsigned short)((int)((unsigned short)*(words + 3U))));
  
#line 2137 
  if (cp->crc_size != 0) {
    __wsum tmp_10;
    __wsum tmp_9;
    
#line 2139 
    tmp_9 = csum_unfold((unsigned short)((int)csum));
    
#line 2139 
    ;
    
#line 2139 
    ;
    
#line 2139 
    tmp_10 = csum_partial((void const *)crcaddr,cp->crc_size,tmp_9);
    
#line 2139 
    csum = csum_fold(tmp_10);
    
#line 2141 
    if (addr != (void *)0) {
      {
        
#line 2142 
        bool __cond_3 = (_Bool)0;
        
#line 2142 
        if ((int)__cond_3 != 0) 
#line 2142 
                                __compiletime_assert_2142(); else ;
      }
      
#line 2142 
      __kunmap_atomic(addr);
    }
    else ;
  }
  else ;
  
#line 2144 
  skb->protocol = eth_type_trans(skb,cp->dev);
  
#line 2145 
  if ((unsigned int)skb->protocol == 8U) {
    
#line 2146 
    skb->__anonCompField_sk_buff_89.csum = csum_unfold((unsigned short)(~ ((int)csum)));
    
#line 2147 
    skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))2U;
  }
  else 
#line 2149 
       skb_checksum_none_assert((struct sk_buff const *)skb);
  
#line 2150 
  __retres = len;
  return_label: 
#line 2150 
                return __retres;
}


#line 2168  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
__inline static void cas_rx_flow_pkt(struct cas *cp, u64 const *words, struct sk_buff *skb)
{
  
#line 2171 
  int flowid = (int)(*(words + 2U) >> 19) & 63;
  
#line 2172 
  struct sk_buff_head *flow = & cp->rx_flows[flowid];
  
#line 2178 
  __skb_queue_tail(flow,skb);
  
#line 2179 
  if ((*words & 576460752303423488ULL) != 0ULL) {
    
#line 2180 
    goto ldv_52533;
    ldv_52532: 
#line 2181 
    ;
    
#line 2181 
    netif_rx(skb);
    ldv_52533: 
#line 2182 
    ;
    
#line 2180 
    skb = __skb_dequeue(flow);
    
#line 2180 
    if (skb != (struct sk_buff *)0) 
#line 2182 
                                    goto ldv_52532; else 
#line 2185 
                                                         goto ldv_52534;
    ldv_52534: 
#line 2186 
    ;
  }
  else ;
  
#line 2188 
  return;
}


#line 2189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_post_page(struct cas *cp, int const ring, int const index)
{
  cas_page_t *new;
  int entry;
  
#line 2194 
  entry = cp->rx_old[ring];
  
#line 2196 
  new = cas_page_swap(cp,ring,index);
  
#line 2197 
  (cp->init_rxds[ring] + entry)->buffer = new->dma_addr;
  
#line 2198 
  (cp->init_rxds[ring] + entry)->index = ((unsigned long long)index & 4095ULL) | ((unsigned long long)(ring << 12) & 4096ULL);
  
#line 2202 
  entry = (entry + 1) & 511;
  
#line 2203 
  cp->rx_old[ring] = entry;
  
#line 2205 
  if (((unsigned int)entry & 3U) != 0U) 
#line 2206 
                                        goto return_label; else ;
  
#line 2208 
  if (ring == 0) 
#line 2209 
                 writel((unsigned int)entry,(void volatile *)(cp->regs + 16420U));
  else 
    
#line 2210 
    if ((cp->cas_flags & 2U) != 0U) 
#line 2212 
                                    writel((unsigned int)entry,(void volatile *)(cp->regs + 16928U)); else ;
  return_label: 
#line 2213 
                return;
}


#line 2217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_post_rxds_ringN(struct cas *cp, int ring, int num)
{
  int __retres;
  unsigned int entry;
  unsigned int last;
  unsigned int count;
  unsigned int released;
  int cluster;
  int tmp_2;
  
#line 2221 
  cas_page_t **page = (cas_page_t **)(& cp->rx_pages[ring]);
  
#line 2223 
  entry = (unsigned int)cp->rx_old[ring];
  
#line 2225 
  if ((cp->msg_enable & 512U) != 0U) 
#line 2225 
                                     netdev_printk("\001",(struct net_device const *)cp->dev,"rxd[%d] interrupt, done: %d\n",ring,entry); else ;
  
#line 2228 
  cluster = -1;
  
#line 2229 
  count = entry & 3U;
  
#line 2230 
  if (num != 0) 
#line 2230 
                last = ((entry + (unsigned int)num) + 4294967292U) & 511U; else 
                                                                    
#line 2230 
                                                                    last = (entry + 4294967292U) & 511U;
  
#line 2231 
  released = 0U;
  
#line 2232 
  goto ldv_52555;
  ldv_52554: 
#line 2233 
  ;
  
#line 2234 
  tmp_2 = page_count((*(page + entry))->buffer);
  
#line 2234 
  if (tmp_2 > 1) {
    
#line 2235 
    cas_page_t *new = cas_page_dequeue(cp);
    
#line 2236 
    if (new == (cas_page_t *)0) {
      int tmp_0;
      unsigned int tmp_1;
      
#line 2240 
      cp->cas_flags |= (unsigned int)(1 << (ring + 4)) & 240U;
      
#line 2241 
      tmp_0 = timer_pending((struct timer_list const *)(& cp->link_timer));
      
#line 2241 
      if (tmp_0 == 0) 
#line 2242 
                      ldv_mod_timer_120(& cp->link_timer,jiffies + 1UL); else ;
      
#line 2244 
      cp->rx_old[ring] = (int)entry;
      
#line 2245 
      if (num != 0) 
#line 2245 
                    tmp_1 = (unsigned int)num - released; else 
#line 2245 
                                                               tmp_1 = 0U;
      
#line 2245 
      cp->rx_last[ring] = (int)tmp_1;
      
#line 2246 
      __retres = -12;
      
#line 2246 
      goto return_label;
    }
    else ;
    
#line 2248 
    ldv_spin_lock_121(& cp->rx_inuse_lock);
    
#line 2249 
    list_add(& (*(page + entry))->list,& cp->rx_inuse_list);
    
#line 2250 
    ldv_spin_unlock_122(& cp->rx_inuse_lock);
    
#line 2251 
    (cp->init_rxds[ring] + entry)->buffer = new->dma_addr;
    
#line 2253 
    *(page + entry) = new;
  }
  else ;
  
#line 2257 
  count += 1U;
  
#line 2257 
  if (count == 4U) {
    
#line 2258 
    cluster = (int)entry;
    
#line 2259 
    count = 0U;
  }
  else ;
  
#line 2261 
  released += 1U;
  
#line 2262 
  entry = (entry + 1U) & 511U;
  ldv_52555: 
#line 2263 
  ;
  
#line 2232 
  if (entry != last) 
#line 2234 
                     goto ldv_52554; else 
#line 2237 
                                          goto ldv_52556;
  ldv_52556: 
#line 2238 
  ;
  
#line 2264 
  cp->rx_old[ring] = (int)entry;
  
#line 2266 
  if (cluster < 0) {
    
#line 2267 
    __retres = 0;
    
#line 2267 
    goto return_label;
  }
  else ;
  
#line 2269 
  if (ring == 0) 
#line 2270 
                 writel((unsigned int)cluster,(void volatile *)(cp->regs + 16420U));
  else 
    
#line 2271 
    if ((cp->cas_flags & 2U) != 0U) 
#line 2273 
                                    writel((unsigned int)cluster,(void volatile *)(cp->regs + 16928U)); else ;
  
#line 2274 
  __retres = 0;
  return_label: 
#line 2274 
                return __retres;
}


#line 2290  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_rx_ringN(struct cas *cp, int ring, int budget)
{
  int entry;
  int drops;
  
#line 2292 
  struct cas_rx_comp *rxcs = cp->init_rxcs[ring];
  
#line 2294 
  int npackets = 0;
  
#line 2296 
  if ((cp->msg_enable & 512U) != 0U) {
    unsigned int tmp;
    
#line 2296 
    ;
    
#line 2296 
    tmp = readl((void const volatile *)(cp->regs + 16444U));
    
#line 2296 
    ;
    
#line 2296 
    ;
    
#line 2296 
    netdev_printk("\001",(struct net_device const *)cp->dev,"rx[%d] interrupt, done: %d/%d\n",ring,tmp,cp->rx_new[ring]);
  }
  else ;
  
#line 2301 
  entry = cp->rx_new[ring];
  
#line 2302 
  drops = 0;
  ldv_52576: 
#line 2303 
  ;
  {
    int type;
    int len;
    u64 words[4U];
    int i;
    int dring;
    
#line 2304 
    struct cas_rx_comp *rxc = rxcs + entry;
    
#line 2305 
    struct sk_buff *skb = skb;
    
#line 2310 
    words[0] = rxc->word1;
    
#line 2311 
    words[1] = rxc->word2;
    
#line 2312 
    words[2] = rxc->word3;
    
#line 2313 
    words[3] = rxc->word4;
    
#line 2316 
    type = (int)(words[0] >> 62);
    
#line 2317 
    if (type == 0) 
#line 2318 
                   goto ldv_52573; else ;
    
#line 2321 
    if ((words[3] & 8796093022208ULL) != 0ULL) 
#line 2322 
                                               goto ldv_52573; else ;
    
#line 2326 
    if ((words[3] & 13835058055282163712ULL) != 0ULL) {
      
#line 2327 
      ldv_spin_lock_123(& cp->stat_lock[ring]);
      
#line 2328 
      cp->net_stats[ring].rx_errors += 1UL;
      
#line 2329 
      if (words[3] < (u64)0) 
#line 2330 
                             cp->net_stats[ring].rx_length_errors += 1UL; else ;
      
#line 2331 
      if ((words[3] & 4611686018427387904ULL) != 0ULL) 
#line 2332 
                                                       cp->net_stats[ring].rx_crc_errors += 1UL; else ;
      
#line 2333 
      ldv_spin_unlock_124(& cp->stat_lock[ring]);
      drop_it: 
#line 2336 
      ;
      
#line 2337 
      ldv_spin_lock_125(& cp->stat_lock[ring]);
      
#line 2338 
      cp->net_stats[ring].rx_dropped += 1UL;
      
#line 2339 
      ldv_spin_unlock_126(& cp->stat_lock[ring]);
      
#line 2340 
      goto next;
    }
    else ;
    
#line 2343 
    len = cas_rx_process_pkt(cp,rxc,entry,(u64 const *)(& words),& skb);
    
#line 2344 
    if (len < 0) {
      
#line 2345 
      drops += 1;
      
#line 2346 
      goto drop_it;
    }
    else ;
    
#line 2352 
    if (type == 2) 
#line 2354 
                   netif_rx(skb); else 
#line 2356 
                                       cas_rx_flow_pkt(cp,(u64 const *)(& words),skb);
    
#line 2359 
    ldv_spin_lock_127(& cp->stat_lock[ring]);
    
#line 2360 
    cp->net_stats[ring].rx_packets += 1UL;
    
#line 2361 
    cp->net_stats[ring].rx_bytes += (unsigned long)len;
    
#line 2362 
    ldv_spin_unlock_128(& cp->stat_lock[ring]);
    next: 
#line 2364 
    ;
    
#line 2365 
    npackets += 1;
    
#line 2368 
    if ((words[0] & 2305843009213693952ULL) != 0ULL) {
      
#line 2369 
      i = (int)(words[1] >> 50);
      
#line 2370 
      dring = (int)((unsigned long long)i >> 12) & 1;
      
#line 2371 
      i &= 4095;
      
#line 2372 
      cas_post_page(cp,dring,i);
    }
    else ;
    
#line 2375 
    if ((words[0] & 1152921504606846976ULL) != 0ULL) {
      
#line 2376 
      i = (int)(words[0] >> 41) & 16383;
      
#line 2377 
      dring = (int)((unsigned long long)i >> 12) & 1;
      
#line 2378 
      i &= 4095;
      
#line 2379 
      cas_post_page(cp,dring,i);
    }
    else ;
    
#line 2382 
    if ((words[0] & 144115188075855872ULL) != 0ULL) {
      
#line 2383 
      i = (int)(words[1] >> 21) & 16383;
      
#line 2384 
      dring = (int)((unsigned long long)i >> 12) & 1;
      
#line 2385 
      i &= 4095;
      
#line 2386 
      cas_post_page(cp,dring,i);
    }
    else ;
    
#line 2390 
    entry = (int)((((words[0] >> 55) & (unsigned long long)3U) + (unsigned long long)entry) + (unsigned long long)1U) & 2047;
  }
  
#line 2303 
  goto ldv_52576;
  ldv_52573: 
#line 2304 
  ;
  
#line 2397 
  cp->rx_new[ring] = entry;
  
#line 2399 
  if (drops != 0) 
#line 2400 
                  netdev_info((struct net_device const *)cp->dev,"Memory squeeze, deferring packet\n"); else ;
  
#line 2401 
  return npackets;
}


#line 2406  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_post_rxcs_ringN(struct net_device *dev, struct cas *cp, int ring)
{
  int last;
  int entry;
  
#line 2409 
  struct cas_rx_comp *rxc = cp->init_rxcs[ring];
  
#line 2412 
  last = cp->rx_cur[ring];
  
#line 2413 
  entry = cp->rx_new[ring];
  
#line 2414 
  if ((cp->msg_enable & 512U) != 0U) {
    unsigned int tmp;
    
#line 2414 
    ;
    
#line 2414 
    tmp = readl((void const volatile *)(cp->regs + 16444U));
    
#line 2414 
    ;
    
#line 2414 
    ;
    
#line 2414 
    netdev_printk("\001",(struct net_device const *)dev,"rxc[%d] interrupt, done: %d/%d\n",ring,tmp,entry);
  }
  else ;
  
#line 2419 
  goto ldv_52586;
  ldv_52585: 
#line 2420 
  ;
  
#line 2420 
  cas_rxc_init(rxc + last);
  
#line 2421 
  last = (last + 1) & 2047;
  ldv_52586: 
#line 2422 
  ;
  
#line 2419 
  if (last != entry) 
#line 2421 
                     goto ldv_52585; else 
#line 2424 
                                          goto ldv_52587;
  ldv_52587: 
#line 2425 
  ;
  
#line 2423 
  cp->rx_cur[ring] = last;
  
#line 2425 
  if (ring == 0) 
#line 2426 
                 writel((unsigned int)last,(void volatile *)(cp->regs + 16448U));
  else 
    
#line 2427 
    if ((cp->cas_flags & 2U) != 0U) 
#line 2428 
                                    writel((unsigned int)last,(void volatile *)(cp->regs + ((ring + -1) * 8 + 16940))); else ;
  
#line 2429 
  return;
}


#line 2525  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
__inline static void cas_handle_irq(struct net_device *dev, struct cas *cp, u32 const status)
{
  
#line 2529 
  if ((status & 517192U) != 0U) 
#line 2530 
                                cas_abnormal_irq(dev,cp,status); else ;
  
#line 2532 
  if ((status & 32U) != 0U) {
    
#line 2536 
    cas_post_rxds_ringN(cp,0,0);
    
#line 2537 
    ldv_spin_lock_129(& cp->stat_lock[0]);
    
#line 2538 
    cp->net_stats[0].rx_dropped += 1UL;
    
#line 2539 
    ldv_spin_unlock_130(& cp->stat_lock[0]);
  }
  else 
    
#line 2540 
    if ((status & 256U) != 0U) 
#line 2541 
                               cas_post_rxds_ringN(cp,0,256); else ;
  
#line 2545 
  if ((status & 640U) != 0U) 
#line 2546 
                             cas_post_rxcs_ringN(dev,cp,0); else ;
  
#line 2547 
  return;
}


#line 2549  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static irqreturn_t cas_interrupt(int irq, void *dev_id)
{
  irqreturn_t __retres;
  unsigned long flags;
  
#line 2551 
  struct net_device *dev = (struct net_device *)dev_id;
  
#line 2552 
  struct cas *cp = netdev_priv((struct net_device const *)dev);
  
#line 2554 
  u32 status = readl((void const volatile *)(cp->regs + 12U));
  
#line 2556 
  if (status == 0U) {
    
#line 2557 
    __retres = IRQ_NONE;
    
#line 2557 
    goto return_label;
  }
  else ;
  
#line 2559 
  ldv___ldv_spin_lock_131(& cp->lock);
  
#line 2560 
  if ((status & 3U) != 0U) {
    
#line 2561 
    cas_tx(dev,cp,status);
    
#line 2562 
    status &= 4294967292U;
  }
  else ;
  
#line 2565 
  if ((status & 16U) != 0U) {
    
#line 2570 
    cas_rx_ringN(cp,0,0);
    
#line 2572 
    status &= 4294967279U;
  }
  else ;
  
#line 2575 
  if (status != 0U) 
#line 2576 
                    cas_handle_irq(dev,cp,status); else ;
  
#line 2577 
  ldv_spin_unlock_irqrestore_132(& cp->lock,flags);
  
#line 2578 
  __retres = IRQ_HANDLED;
  return_label: 
#line 2578 
                return __retres;
}


#line 2654  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_netpoll(struct net_device *dev)
{
  
#line 2656 
  struct cas *cp = netdev_priv((struct net_device const *)dev);
  
#line 2658 
  cas_disable_irq(cp,0);
  
#line 2659 
  cas_interrupt((int)(cp->pdev)->irq,(void *)dev);
  
#line 2660 
  cas_enable_irq(cp,0);
  
#line 2661 
  return;
}


#line 2680  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_tx_timeout(struct net_device *dev)
{
  unsigned int tmp_0;
  unsigned int tmp_1;
  unsigned int tmp_2;
  unsigned int tmp_3;
  unsigned int tmp_4;
  unsigned int tmp_5;
  unsigned int tmp_6;
  unsigned int tmp_7;
  unsigned int tmp_8;
  unsigned int tmp_9;
  unsigned int tmp_10;
  unsigned int tmp_11;
  unsigned int tmp_12;
  unsigned int tmp_13;
  unsigned int tmp_14;
  unsigned int tmp_15;
  unsigned int tmp_16;
  
#line 2682 
  struct cas *cp = netdev_priv((struct net_device const *)dev);
  
#line 2684 
  netdev_err((struct net_device const *)dev,"transmit timed out, resetting\n");
  
#line 2685 
  if (cp->hw_running == 0) {
    
#line 2686 
    netdev_err((struct net_device const *)dev,"hrm.. hw not running!\n");
    
#line 2687 
    goto return_label;
  }
  else ;
  
#line 2690 
  tmp_0 = readl((void const volatile *)(cp->regs + 25116U));
  
#line 2690 
  ;
  
#line 2690 
  netdev_err((struct net_device const *)dev,"MIF_STATE[%08x]\n",tmp_0);
  
#line 2693 
  tmp_1 = readl((void const volatile *)(cp->regs + 25040U));
  
#line 2693 
  ;
  
#line 2693 
  netdev_err((struct net_device const *)dev,"MAC_STATE[%08x]\n",tmp_1);
  
#line 2703 
  tmp_2 = readl((void const volatile *)(cp->regs + 8236U));
  
#line 2702 
  tmp_3 = readl((void const volatile *)(cp->regs + 8232U));
  
#line 2701 
  tmp_4 = readl((void const volatile *)(cp->regs + 8220U));
  
#line 2700 
  tmp_5 = readl((void const volatile *)(cp->regs + 8212U));
  
#line 2699 
  tmp_6 = readl((void const volatile *)(cp->regs + 8228U));
  
#line 2698 
  tmp_7 = readl((void const volatile *)(cp->regs + 24624U));
  
#line 2697 
  tmp_8 = readl((void const volatile *)(cp->regs + 24592U));
  
#line 2696 
  tmp_9 = readl((void const volatile *)(cp->regs + 8196U));
  
#line 2696 
  ;
  
#line 2696 
  netdev_err((struct net_device const *)dev,"TX_STATE[%08x:%08x:%08x] FIFO[%08x:%08x:%08x] SM1[%08x] SM2[%08x]\n",tmp_9,tmp_8,tmp_7,tmp_6,tmp_5,tmp_4,tmp_3,tmp_2);
  
#line 2708 
  tmp_10 = readl((void const volatile *)(cp->regs + 24628U));
  
#line 2707 
  tmp_11 = readl((void const volatile *)(cp->regs + 24596U));
  
#line 2706 
  tmp_12 = readl((void const volatile *)(cp->regs + 16384U));
  
#line 2706 
  ;
  
#line 2706 
  netdev_err((struct net_device const *)dev,"RX_STATE[%08x:%08x:%08x]\n",tmp_12,tmp_11,tmp_10);
  
#line 2714 
  tmp_13 = readl((void const volatile *)(cp->regs + 16792U));
  
#line 2713 
  tmp_14 = readl((void const volatile *)(cp->regs + 16788U));
  
#line 2712 
  tmp_15 = readl((void const volatile *)(cp->regs + 16784U));
  
#line 2711 
  tmp_16 = readl((void const volatile *)(cp->regs + 16780U));
  
#line 2711 
  ;
  
#line 2711 
  netdev_err((struct net_device const *)dev,"HP_STATE[%08x:%08x:%08x:%08x]\n",tmp_16,tmp_15,tmp_14,tmp_13);
  
#line 2718 
  atomic_inc(& cp->reset_task_pending);
  
#line 2719 
  atomic_inc(& cp->reset_task_pending_all);
  
#line 2720 
  ldv_schedule_work_133(& cp->reset_task);
  return_label: 
#line 2721 
                return;
}


#line 2727  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
__inline static int cas_intme(int ring, int entry)
{
  int __retres;
  
#line 2730 
  if ((entry & 255) == 0) {
    
#line 2731 
    __retres = 1;
    
#line 2731 
    goto return_label;
  }
  else ;
  
#line 2732 
  __retres = 0;
  return_label: 
#line 2732 
                return __retres;
}


#line 2736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_write_txd(struct cas *cp, int ring, int entry, dma_addr_t mapping, int len, u64 ctrl, int last)
{
  int tmp;
  
#line 2739 
  struct cas_tx_desc *txd = cp->init_txds[ring] + entry;
  
#line 2741 
  ctrl = ((unsigned long long)len & 16383ULL) | ctrl;
  
#line 2742 
  tmp = cas_intme(ring,entry);
  
#line 2742 
  if (tmp != 0) 
#line 2743 
                ctrl |= 4294967296ULL; else ;
  
#line 2744 
  if (last != 0) 
#line 2745 
                 ctrl |= 1073741824ULL; else ;
  
#line 2746 
  txd->control = ctrl;
  
#line 2747 
  txd->buffer = mapping;
  
#line 2748 
  return;
}


#line 2750  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
__inline static void *tx_tiny_buf(struct cas *cp, int const ring, int const entry)
{
  void *__retres;
  
#line 2753 
  __retres = (void *)(cp->tx_tiny_bufs[ring] + entry * 256);
  
#line 2753 
  return __retres;
}


#line 2756  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
__inline static dma_addr_t tx_tiny_map(struct cas *cp, int const ring, int const entry, int const tentry)
{
  dma_addr_t __retres;
  
#line 2759 
  cp->tx_tiny_use[ring][tentry].nbufs += 1;
  
#line 2760 
  cp->tx_tiny_use[ring][entry].used = 1;
  
#line 2761 
  __retres = cp->tx_tiny_dvma[ring] + (unsigned long long)(entry * 256);
  
#line 2761 
  return __retres;
}


#line 2843 
void __compiletime_assert_2843(void);


#line 2764  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
__inline static int cas_xmit_tx_ringN(struct cas *cp, int ring, struct sk_buff *skb)
{
  int __retres;
  int entry;
  int nr_frags;
  int frag;
  int tabort;
  int tentry;
  dma_addr_t mapping;
  unsigned long flags;
  u64 ctrl;
  u32 len;
  int tmp;
  int tmp_0;
  unsigned char *tmp_1;
  unsigned char *tmp_3;
  unsigned long tmp_4;
  int tmp_9;
  int tmp_10;
  
#line 2767 
  struct net_device *dev = cp->dev;
  
#line 2774 
  ldv___ldv_spin_lock_134(& cp->tx_lock[ring]);
  
#line 2777 
  if (cp->tx_old[ring] <= cp->tx_new[ring]) 
#line 2777 
                                            tmp = (cp->tx_old[ring] + 511) - cp->tx_new[ring]; else 
                                                                    
#line 2777 
                                                                    tmp = (cp->tx_old[ring] - cp->tx_new[ring]) + -1;
  
#line 2777 
  if ((cp->cas_flags & 4U) != 0U) 
#line 2777 
                                  tmp_0 = 2; else 
#line 2777 
                                                  tmp_0 = 1;
  
#line 2778 
  tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2777 
  ;
  
#line 2777 
  if (tmp <= tmp_0 * ((int)((struct skb_shared_info *)tmp_1)->nr_frags + 1)) {
    
#line 2779 
    netif_start_queue(dev);
    
#line 2780 
    ldv_spin_unlock_irqrestore_135(& cp->tx_lock[ring],flags);
    
#line 2781 
    netdev_err((struct net_device const *)dev,"BUG! Tx Ring full when queue awake!\n");
    
#line 2782 
    __retres = 1;
    
#line 2782 
    goto return_label;
  }
  else ;
  
#line 2785 
  ctrl = 0ULL;
  
#line 2786 
  if ((unsigned int)*((unsigned char *)skb + 145UL) == 6U) {
    int tmp_2;
    
#line 2787 
    tmp_2 = skb_checksum_start_offset((struct sk_buff const *)skb);
    
#line 2787 
    u64 const csum_start_off = (unsigned long long)tmp_2;
    
#line 2788 
    u64 const csum_stuff_off = (unsigned long long)skb->__anonCompField_sk_buff_89.__anonCompField___anonunion_293_88.csum_offset + csum_start_off;
    
#line 2790 
    ctrl = (((csum_start_off << 15) & 2064384ULL) | ((csum_stuff_off << 21) & 534773760ULL)) | 536870912ULL;
  }
  else ;
  
#line 2795 
  entry = cp->tx_new[ring];
  
#line 2796 
  cp->tx_skbs[ring][entry] = skb;
  
#line 2798 
  tmp_3 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2798 
  nr_frags = (int)((struct skb_shared_info *)tmp_3)->nr_frags;
  
#line 2799 
  len = skb_headlen((struct sk_buff const *)skb);
  
#line 2800 
  ;
  
#line 2800 
  ;
  
#line 2800 
  tmp_4 = __phys_addr((unsigned long)skb->data);
  
#line 2800 
  ;
  
#line 2800 
  mapping = pci_map_page(cp->pdev,(struct page *)(-24189255811072) + (tmp_4 >> 12),(unsigned long)skb->data & 4095UL,(unsigned long)len,1);
  
#line 2804 
  tentry = entry;
  
#line 2805 
  tabort = cas_calc_tabort(cp,(unsigned long)skb->data,(int)len);
  
#line 2806 
  if ((long)(tabort != 0) != 0L) {
    void *tmp_5;
    
#line 2808 
    cas_write_txd(cp,ring,entry,mapping,(int)(len - (unsigned int)tabort),ctrl | 2147483648ULL,0);
    
#line 2810 
    entry = (entry + 1) & 511;
    
#line 2812 
    ;
    
#line 2812 
    tmp_5 = tx_tiny_buf(cp,ring,entry);
    
#line 2812 
    ;
    
#line 2812 
    ;
    
#line 2812 
    skb_copy_from_linear_data_offset((struct sk_buff const *)skb,(int)(len - (unsigned int)tabort),tmp_5,(unsigned int)tabort);
    
#line 2814 
    mapping = tx_tiny_map(cp,ring,entry,tentry);
    
#line 2815 
    cas_write_txd(cp,ring,entry,mapping,tabort,ctrl,nr_frags == 0);
  }
  else 
#line 2818 
       cas_write_txd(cp,ring,entry,mapping,(int)len,ctrl | 2147483648ULL,nr_frags == 0);
  
#line 2821 
  entry = (entry + 1) & 511;
  
#line 2823 
  frag = 0;
  
#line 2823 
  goto ldv_52658;
  ldv_52657: 
#line 2824 
  ;
  {
    unsigned char *tmp_6;
    
#line 2824 
    tmp_6 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 2824 
    skb_frag_t const *fragp = (skb_frag_t const *)(& ((struct skb_shared_info *)tmp_6)->frags[frag]);
    
#line 2826 
    len = skb_frag_size(fragp);
    
#line 2827 
    mapping = skb_frag_dma_map(& (cp->pdev)->dev,fragp,0UL,(unsigned long)len,(enum dma_data_direction)DMA_TO_DEVICE);
    
#line 2830 
    tabort = cas_calc_tabort(cp,(unsigned long)fragp->page_offset,(int)len);
    
#line 2831 
    if ((long)(tabort != 0) != 0L) {
      void *addr;
      struct page *tmp_7;
      void *tmp_8;
      
#line 2835 
      cas_write_txd(cp,ring,entry,mapping,(int)(len - (unsigned int)tabort),ctrl,0);
      
#line 2837 
      entry = (entry + 1) & 511;
      
#line 2839 
      tmp_7 = skb_frag_page(fragp);
      
#line 2839 
      addr = kmap_atomic(tmp_7);
      
#line 2840 
      ;
      
#line 2840 
      ;
      
#line 2840 
      tmp_8 = tx_tiny_buf(cp,ring,entry);
      
#line 2840 
      memcpy(tmp_8,(void const *)(addr + ((fragp->page_offset + len) + (__u32)(- tabort))),(unsigned long)tabort);
      {
        
#line 2843 
        bool __cond = (_Bool)0;
        
#line 2843 
        if ((int)__cond != 0) 
#line 2843 
                              __compiletime_assert_2843(); else ;
      }
      
#line 2843 
      __kunmap_atomic(addr);
      
#line 2844 
      mapping = tx_tiny_map(cp,ring,entry,tentry);
      
#line 2845 
      len = (unsigned int)tabort;
    }
    else ;
    
#line 2848 
    cas_write_txd(cp,ring,entry,mapping,(int)len,ctrl,frag + 1 == nr_frags);
    
#line 2850 
    entry = (entry + 1) & 511;
  }
  
#line 2823 
  frag += 1;
  ldv_52658: 
#line 2824 
  ;
  
#line 2823 
  if (frag < nr_frags) 
#line 2825 
                       goto ldv_52657; else 
#line 2828 
                                            goto ldv_52659;
  ldv_52659: 
#line 2829 
  ;
  
#line 2853 
  cp->tx_new[ring] = entry;
  
#line 2854 
  if (cp->tx_old[ring] <= cp->tx_new[ring]) 
#line 2854 
                                            tmp_9 = (cp->tx_old[ring] + 511) - cp->tx_new[ring]; else 
                                                                    
#line 2854 
                                                                    tmp_9 = (cp->tx_old[ring] - cp->tx_new[ring]) + -1;
  
#line 2854 
  if ((cp->cas_flags & 4U) != 0U) 
#line 2854 
                                  tmp_10 = 2; else 
#line 2854 
                                                   tmp_10 = 1;
  
#line 2854 
  if ((unsigned long)tmp_9 <= (unsigned long)tmp_10 * 18UL) 
#line 2855 
                                                            netif_start_queue(dev); else ;
  
#line 2857 
  if ((cp->msg_enable & 256U) != 0U) {
    int tmp_11;
    
#line 2857 
    if (cp->tx_old[ring] <= cp->tx_new[ring]) 
#line 2857 
                                              tmp_11 = (cp->tx_old[ring] + 511) - cp->tx_new[ring]; else 
                                                                    
#line 2857 
                                                                    tmp_11 = (cp->tx_old[ring] - cp->tx_new[ring]) + -1;
    
#line 2857 
    ;
    
#line 2857 
    ;
    
#line 2857 
    ;
    
#line 2857 
    ;
    
#line 2857 
    netdev_printk("\001",(struct net_device const *)dev,"tx[%d] queued, slot %d, skblen %d, avail %d\n",ring,entry,skb->len,tmp_11);
  }
  else ;
  
#line 2860 
  writel((unsigned int)entry,(void volatile *)(cp->regs + (ring + 2062) * 4));
  
#line 2861 
  ldv_spin_unlock_irqrestore_136(& cp->tx_lock[ring],flags);
  
#line 2862 
  __retres = 0;
  return_label: 
#line 2862 
                return __retres;
}


#line 2865  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static netdev_tx_t cas_start_xmit(struct sk_buff *skb, struct net_device *dev)
{
  netdev_tx_t __retres;
  int ring;
  int tmp_0;
  int tmp_2;
  int tmp_1;
  
#line 2867 
  struct cas *cp = netdev_priv((struct net_device const *)dev);
  
#line 2874 
  tmp_0 = skb_padto(skb,(unsigned int)cp->min_frame_size);
  
#line 2874 
  if (tmp_0 != 0) {
    
#line 2875 
    __retres = NETDEV_TX_OK;
    
#line 2875 
    goto return_label;
  }
  else ;
  
#line 2880 
  ;
  
#line 2880 
  tmp_1 = ring;
  
#line 2880 
  ring += 1;
  
#line 2880 
  ;
  
#line 2880 
  ;
  
#line 2880 
  tmp_2 = cas_xmit_tx_ringN(cp,tmp_1 & 3,skb);
  
#line 2880 
  if (tmp_2 != 0) {
    
#line 2881 
    __retres = NETDEV_TX_BUSY;
    
#line 2881 
    goto return_label;
  }
  else ;
  
#line 2882 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 2882 
                return __retres;
}


#line 2885  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_init_tx_dma(struct cas *cp)
{
  unsigned long off;
  u32 val;
  int i;
  
#line 2887 
  u64 desc_dma = cp->block_dvma;
  
#line 2894 
  off = 114688UL;
  
#line 2895 
  writel((unsigned int)((desc_dma + (unsigned long long)off) >> 32),(void volatile *)(cp->regs + 8284U));
  
#line 2896 
  writel((unsigned int)desc_dma + (unsigned int)off,(void volatile *)(cp->regs + 8280U));
  
#line 2902 
  val = 1058013184U;
  
#line 2908 
  i = 0;
  
#line 2908 
  goto ldv_52674;
  ldv_52673: 
#line 2909 
  ;
  
#line 2909 
  off = (unsigned long)cp->init_txds[i] - (unsigned long)cp->init_block;
  
#line 2912 
  val = (unsigned int)((4 << (i * 4 + 2)) & (60 << i * 4)) | val;
  
#line 2913 
  writel((unsigned int)((desc_dma + (unsigned long long)off) >> 32),(void volatile *)(cp->regs + (i * 8 + 8292)));
  
#line 2914 
  writel((unsigned int)desc_dma + (unsigned int)off,(void volatile *)(cp->regs + (i + 1036) * 8));
  
#line 2908 
  i += 1;
  ldv_52674: 
#line 2909 
  ;
  
#line 2908 
  if (i <= 3) 
#line 2910 
              goto ldv_52673; else 
#line 2913 
                                   goto ldv_52675;
  ldv_52675: 
#line 2914 
  ;
  
#line 2920 
  writel(val,(void volatile *)(cp->regs + 8196U));
  
#line 2931 
  writel(2048U,(void volatile *)(cp->regs + 8320U));
  
#line 2932 
  writel(2048U,(void volatile *)(cp->regs + 8324U));
  
#line 2933 
  writel(2048U,(void volatile *)(cp->regs + 8328U));
  
#line 2934 
  writel(2048U,(void volatile *)(cp->regs + 8332U));
  
#line 2935 
  return;
}


#line 2939  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
__inline static void cas_init_dma(struct cas *cp)
{
  
#line 2941 
  cas_init_tx_dma(cp);
  
#line 2942 
  cas_init_rx_dma(cp);
  
#line 2943 
  return;
}


#line 2945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_process_mc_list(struct cas *cp)
{
  u16 hash_table[16U];
  u32 crc;
  struct netdev_hw_addr *ha;
  struct netdev_hw_addr *tmp;
  struct netdev_hw_addr *tmp_0;
  
#line 2950 
  int i = 1;
  
#line 2952 
  memset((void *)(& hash_table),0,32UL);
  {
    
#line 2953 
    struct list_head const *__mptr = (struct list_head const *)(cp->dev)->mc.list.next;
    
#line 2953 
    tmp = (struct netdev_hw_addr *)__mptr;
  }
  
#line 2953 
  ha = tmp;
  
#line 2953 
  goto ldv_52691;
  ldv_52690: 
#line 2954 
  ;
  
#line 2954 
  if (i <= 15) {
    
#line 2958 
    writel((unsigned int)(((int)ha->addr[4] << 8) | (int)ha->addr[5]),(void volatile *)(cp->regs + (i * 12 + 24704)));
    
#line 2960 
    writel((unsigned int)(((int)ha->addr[2] << 8) | (int)ha->addr[3]),(void volatile *)(cp->regs + (i * 3 + 6177) * 4));
    
#line 2962 
    writel((unsigned int)(((int)ha->addr[0] << 8) | (int)ha->addr[1]),(void volatile *)(cp->regs + (i * 3 + 6178) * 4));
    
#line 2964 
    i += 1;
  }
  else {
    
#line 2970 
    crc = crc32_le(4294967295U,(unsigned char const *)(& ha->addr),6UL);
    
#line 2971 
    crc >>= 24;
    
#line 2972 
    hash_table[crc >> 4] = (unsigned short)((int)hash_table[crc >> 4] | (1 << (~ crc & 15U)));
  }
  {
    
#line 2953 
    struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
    
#line 2953 
    tmp_0 = (struct netdev_hw_addr *)__mptr_0;
  }
  
#line 2953 
  ha = tmp_0;
  ldv_52691: 
#line 2955 
  ;
  
#line 2953 
  if (& ha->list != & (cp->dev)->mc.list) 
#line 2955 
                                          goto ldv_52690; else 
#line 2958 
                                                               goto ldv_52692;
  ldv_52692: 
#line 2959 
  ;
  
#line 2975 
  i = 0;
  
#line 2975 
  goto ldv_52694;
  ldv_52693: 
#line 2976 
  ;
  
#line 2976 
  writel((unsigned int)hash_table[i],(void volatile *)(cp->regs + (i + 6232) * 4));
  
#line 2975 
  i += 1;
  ldv_52694: 
#line 2976 
  ;
  
#line 2975 
  if (i <= 15) 
#line 2977 
               goto ldv_52693; else 
#line 2980 
                                    goto ldv_52695;
  ldv_52695: 
#line 2981 
  ;
  
#line 2982 
  return;
}


#line 2980  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static u32 cas_setup_multicast(struct cas *cp)
{
  int i;
  
#line 2982 
  u32 rxcfg = 0U;
  
#line 2985 
  if (((cp->dev)->flags & 256U) != 0U) 
#line 2986 
                                       rxcfg |= 8U;
  else 
    
#line 2988 
    if (((cp->dev)->flags & 512U) != 0U) {
      
#line 2989 
      i = 0;
      
#line 2989 
      goto ldv_52702;
      ldv_52701: 
#line 2990 
      ;
      
#line 2990 
      writel(65535U,(void volatile *)(cp->regs + (i + 6232) * 4));
      
#line 2989 
      i += 1;
      ldv_52702: 
#line 2990 
      ;
      
#line 2989 
      if (i <= 15) 
#line 2991 
                   goto ldv_52701; else 
#line 2994 
                                        goto ldv_52703;
      ldv_52703: 
#line 2995 
      ;
      
#line 2991 
      rxcfg |= 32U;
    }
    else {
      
#line 2994 
      cas_process_mc_list(cp);
      
#line 2995 
      rxcfg |= 32U;
    }
  
#line 2998 
  return rxcfg;
}


#line 3002  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_clear_mac_err(struct cas *cp)
{
  
#line 3004 
  writel(0U,(void volatile *)(cp->regs + 24992U));
  
#line 3005 
  writel(0U,(void volatile *)(cp->regs + 24996U));
  
#line 3006 
  writel(0U,(void volatile *)(cp->regs + 25000U));
  
#line 3007 
  writel(0U,(void volatile *)(cp->regs + 25004U));
  
#line 3008 
  writel(0U,(void volatile *)(cp->regs + 25008U));
  
#line 3009 
  writel(0U,(void volatile *)(cp->regs + 25012U));
  
#line 3010 
  writel(0U,(void volatile *)(cp->regs + 25016U));
  
#line 3011 
  writel(0U,(void volatile *)(cp->regs + 25020U));
  
#line 3012 
  writel(0U,(void volatile *)(cp->regs + 25024U));
  
#line 3013 
  writel(0U,(void volatile *)(cp->regs + 25028U));
  
#line 3014 
  writel(0U,(void volatile *)(cp->regs + 25032U));
  
#line 3015 
  return;
}


#line 3018  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_mac_reset(struct cas *cp)
{
  int i;
  unsigned int tmp;
  int tmp_0;
  unsigned int tmp_1;
  int tmp_2;
  unsigned int tmp_6;
  unsigned int tmp_7;
  
#line 3023 
  writel(1U,(void volatile *)(cp->regs + 24576U));
  
#line 3024 
  writel(1U,(void volatile *)(cp->regs + 24580U));
  
#line 3027 
  i = 5000;
  
#line 3028 
  goto ldv_52713;
  ldv_52712: 
#line 3029 
  ;
  
#line 3029 
  tmp = readl((void const volatile *)(cp->regs + 24576U));
  
#line 3029 
  if (tmp == 0U) 
#line 3030 
                 goto ldv_52711; else ;
  
#line 3031 
  __const_udelay(42950UL);
  ldv_52713: 
#line 3033 
  ;
  
#line 3028 
  tmp_0 = i;
  
#line 3028 
  i -= 1;
  
#line 3028 
  ;
  
#line 3028 
  if (tmp_0 > 0) 
#line 3030 
                 goto ldv_52712; else 
#line 3033 
                                      goto ldv_52711;
  ldv_52711: 
#line 3034 
  ;
  
#line 3035 
  i = 5000;
  
#line 3036 
  goto ldv_52716;
  ldv_52715: 
#line 3037 
  ;
  
#line 3037 
  tmp_1 = readl((void const volatile *)(cp->regs + 24580U));
  
#line 3037 
  if (tmp_1 == 0U) 
#line 3038 
                   goto ldv_52714; else ;
  
#line 3039 
  __const_udelay(42950UL);
  ldv_52716: 
#line 3041 
  ;
  
#line 3036 
  tmp_2 = i;
  
#line 3036 
  i -= 1;
  
#line 3036 
  ;
  
#line 3036 
  if (tmp_2 > 0) 
#line 3038 
                 goto ldv_52715; else 
#line 3041 
                                      goto ldv_52714;
  ldv_52714: 
#line 3042 
  ;
  
#line 3042 
  tmp_6 = readl((void const volatile *)(cp->regs + 24576U));
  
#line 3042 
  tmp_7 = readl((void const volatile *)(cp->regs + 24580U));
  
#line 3042 
  if ((tmp_6 | tmp_7) != 0U) {
    unsigned int tmp_3;
    unsigned int tmp_4;
    unsigned int tmp_5;
    
#line 3046 
    tmp_3 = readl((void const volatile *)(cp->regs + 25040U));
    
#line 3045 
    tmp_4 = readl((void const volatile *)(cp->regs + 24580U));
    
#line 3044 
    tmp_5 = readl((void const volatile *)(cp->regs + 24576U));
    
#line 3044 
    ;
    
#line 3044 
    netdev_err((struct net_device const *)cp->dev,"mac tx[%d]/rx[%d] reset failed [%08x]\n",tmp_5,tmp_4,tmp_3);
  }
  else ;
  
#line 3048 
  return;
}


#line 3052  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_init_mac(struct cas *cp)
{
  int i;
  int tmp_0;
  
#line 3054 
  unsigned char *e = (cp->dev)->dev_addr;
  
#line 3056 
  cas_mac_reset(cp);
  
#line 3059 
  writel(16U,(void volatile *)(cp->regs + 4U));
  
#line 3065 
  if ((cp->cas_flags & 4U) == 0U) 
#line 3066 
                                  writel(1U,(void volatile *)(cp->regs + 8U)); else ;
  
#line 3069 
  writel(7152U,(void volatile *)(cp->regs + 24584U));
  
#line 3071 
  writel(0U,(void volatile *)(cp->regs + 24640U));
  
#line 3072 
  writel(8U,(void volatile *)(cp->regs + 24644U));
  
#line 3073 
  writel(4U,(void volatile *)(cp->regs + 24648U));
  
#line 3076 
  writel(64U,(void volatile *)(cp->regs + 24652U));
  
#line 3079 
  writel(64U,(void volatile *)(cp->regs + 24656U));
  
#line 3085 
  ;
  {
    int tmp;
    
#line 3086 
    int _min1 = (cp->page_size << 1) + -80;
    
#line 3086 
    int _min2 = 9000;
    
#line 3086 
    if (_min1 < _min2) 
#line 3086 
                       tmp = _min1; else 
#line 3086 
                                         tmp = _min2;
    
#line 3086 
    tmp_0 = tmp;
  }
  
#line 3085 
  writel((unsigned int)(((tmp_0 + 22) & 32767) | 536870912),(void volatile *)(cp->regs + 24660U));
  
#line 3094 
  if ((cp->cas_flags & 8U) != 0U && cp->crc_size != 0) 
#line 3095 
                                                       writel(65U,(void volatile *)(cp->regs + 24664U)); else 
                                                                    
#line 3097 
                                                                    writel(7U,(void volatile *)(cp->regs + 24664U));
  
#line 3098 
  writel(4U,(void volatile *)(cp->regs + 24668U));
  
#line 3099 
  writel(16U,(void volatile *)(cp->regs + 24672U));
  
#line 3100 
  writel(34824U,(void volatile *)(cp->regs + 24676U));
  
#line 3102 
  writel((unsigned int)((int)*(e + 5U) | ((int)*(e + 4U) << 8)) & 1023U,(void volatile *)(cp->regs + 25036U));
  
#line 3104 
  writel(0U,(void volatile *)(cp->regs + 24908U));
  
#line 3105 
  writel(0U,(void volatile *)(cp->regs + 24912U));
  
#line 3106 
  writel(0U,(void volatile *)(cp->regs + 24916U));
  
#line 3107 
  writel(0U,(void volatile *)(cp->regs + 24920U));
  
#line 3108 
  writel(0U,(void volatile *)(cp->regs + 24924U));
  
#line 3111 
  i = 0;
  
#line 3111 
  goto ldv_52726;
  ldv_52725: 
#line 3112 
  ;
  
#line 3112 
  writel(0U,(void volatile *)(cp->regs + (i + 6176) * 4));
  
#line 3111 
  i += 1;
  ldv_52726: 
#line 3112 
  ;
  
#line 3111 
  if (i <= 44) 
#line 3113 
               goto ldv_52725; else 
#line 3116 
                                    goto ldv_52727;
  ldv_52727: 
#line 3117 
  ;
  
#line 3114 
  writel((unsigned int)(((int)*(e + 4U) << 8) | (int)*(e + 5U)),(void volatile *)(cp->regs + 24704U));
  
#line 3115 
  writel((unsigned int)(((int)*(e + 2U) << 8) | (int)*(e + 3U)),(void volatile *)(cp->regs + 24708U));
  
#line 3116 
  writel((unsigned int)(((int)*e << 8) | (int)*(e + 1U)),(void volatile *)(cp->regs + 24712U));
  
#line 3118 
  writel(1U,(void volatile *)(cp->regs + 24872U));
  
#line 3119 
  writel(49664U,(void volatile *)(cp->regs + 24876U));
  
#line 3120 
  writel(384U,(void volatile *)(cp->regs + 24880U));
  
#line 3122 
  cp->mac_rx_cfg = cas_setup_multicast(cp);
  
#line 3124 
  ldv_spin_lock_137(& cp->stat_lock[4]);
  
#line 3125 
  cas_clear_mac_err(cp);
  
#line 3126 
  ldv_spin_unlock_138(& cp->stat_lock[4]);
  
#line 3132 
  writel(1U,(void volatile *)(cp->regs + 24608U));
  
#line 3133 
  writel(1U,(void volatile *)(cp->regs + 24612U));
  
#line 3138 
  writel(4294967295U,(void volatile *)(cp->regs + 24616U));
  
#line 3139 
  return;
}


#line 3142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_init_pause_thresholds(struct cas *cp)
{
  
#line 3147 
  if (cp->rx_fifo_size <= 2048) {
    int tmp;
    
#line 3148 
    tmp = cp->rx_fifo_size;
    
#line 3148 
    cp->rx_pause_on = tmp;
    
#line 3148 
    cp->rx_pause_off = tmp;
  }
  else {
    
#line 3150 
    int max_frame = (int)((cp->dev)->mtu + 86U) & -64;
    
#line 3151 
    if (max_frame * 3 > cp->rx_fifo_size) {
      
#line 3152 
      cp->rx_pause_off = 7104;
      
#line 3153 
      cp->rx_pause_on = 960;
    }
    else {
      
#line 3155 
      int off = cp->rx_fifo_size - max_frame * 2;
      
#line 3156 
      int on = off - max_frame;
      
#line 3157 
      cp->rx_pause_off = off;
      
#line 3158 
      cp->rx_pause_on = on;
    }
  }
  
#line 3161 
  return;
}


#line 3163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_vpd_match(void const *p, char const *str)
{
  int __retres;
  size_t tmp;
  int i;
  unsigned char tmp_0;
  
#line 3165 
  tmp = strlen(str);
  
#line 3165 
  int len = (int)(tmp + (size_t)1U);
  
#line 3168 
  i = 0;
  
#line 3168 
  goto ldv_52741;
  ldv_52740: 
#line 3169 
  ;
  
#line 3169 
  tmp_0 = readb((void const volatile *)(p + i));
  
#line 3169 
  ;
  
#line 3169 
  if ((int)tmp_0 != (int)*(str + i)) {
    
#line 3170 
    __retres = 0;
    
#line 3170 
    goto return_label;
  }
  else ;
  
#line 3168 
  i += 1;
  ldv_52741: 
#line 3169 
  ;
  
#line 3168 
  if (i < len) 
#line 3170 
               goto ldv_52740; else 
#line 3173 
                                    goto ldv_52742;
  ldv_52742: 
#line 3174 
  ;
  
#line 3172 
  __retres = 1;
  return_label: 
#line 3172 
                return __retres;
}


#line 3187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_get_vpd_info(struct cas *cp, unsigned char *dev_addr, int const offset)
{
  void *base;
  void *kstart;
  int i;
  int len;
  unsigned char tmp;
  unsigned char tmp_3;
  unsigned char tmp_8;
  unsigned char tmp_9;
  unsigned char tmp_10;
  unsigned char tmp_11;
  unsigned char tmp_12;
  
#line 3190 
  void *p = cp->regs + 1048576U;
  
#line 3193 
  int found = 0;
  
#line 3197 
  int phy_type = 2;
  
#line 3198 
  int mac_off = 0;
  
#line 3205 
  writel(3U,(void volatile *)(cp->regs + 4128U));
  
#line 3209 
  tmp = readb((void const volatile *)p);
  
#line 3209 
  if ((unsigned int)tmp != 85U) 
#line 3210 
                                goto use_random_mac_addr;
  else {
    unsigned char tmp_0;
    
#line 3209 
    tmp_0 = readb((void const volatile *)(p + 1U));
    
#line 3209 
    if ((unsigned int)tmp_0 != 170U) 
#line 3210 
                                     goto use_random_mac_addr; else ;
  }
  
#line 3213 
  base = (void *)0;
  
#line 3214 
  i = 2;
  
#line 3214 
  goto ldv_52759;
  ldv_52758: 
#line 3215 
  ;
  
#line 3216 
  tmp_3 = readb((void const volatile *)(p + i));
  
#line 3216 
  if ((unsigned int)tmp_3 == 80U) {
    unsigned char tmp_4;
    
#line 3216 
    tmp_4 = readb((void const volatile *)(p + ((unsigned int)i + 1U)));
    
#line 3216 
    if ((unsigned int)tmp_4 == 67U) {
      unsigned char tmp_5;
      
#line 3217 
      tmp_5 = readb((void const volatile *)(p + ((unsigned int)i + 2U)));
      
#line 3217 
      if ((unsigned int)tmp_5 == 73U) {
        unsigned char tmp_6;
        
#line 3218 
        tmp_6 = readb((void const volatile *)(p + ((unsigned int)i + 3U)));
        
#line 3218 
        if ((unsigned int)tmp_6 == 82U) {
          unsigned char tmp_1;
          unsigned char tmp_2;
          
#line 3220 
          tmp_1 = readb((void const volatile *)(p + ((unsigned int)i + 8U)));
          
#line 3221 
          tmp_2 = readb((void const volatile *)(p + ((unsigned int)i + 9U)));
          
#line 3220 
          base = p + ((int)tmp_1 | ((int)tmp_2 << 8));
          
#line 3222 
          goto ldv_52757;
        }
        else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 3214 
  i += 1;
  ldv_52759: 
#line 3215 
  ;
  
#line 3214 
  if (i <= 65535) 
#line 3216 
                  goto ldv_52758; else 
#line 3219 
                                       goto ldv_52757;
  ldv_52757: 
#line 3220 
  ;
  
#line 3226 
  if (base == (void *)0) 
#line 3227 
                         goto use_random_mac_addr;
  else {
    unsigned char tmp_7;
    
#line 3226 
    tmp_7 = readb((void const volatile *)base);
    
#line 3226 
    if ((unsigned int)tmp_7 != 130U) 
#line 3227 
                                     goto use_random_mac_addr; else ;
  }
  
#line 3229 
  tmp_8 = readb((void const volatile *)(base + 1U));
  
#line 3229 
  tmp_9 = readb((void const volatile *)(base + 2U));
  
#line 3229 
  i = ((int)tmp_8 | ((int)tmp_9 << 8)) + 3;
  
#line 3230 
  goto ldv_52773;
  ldv_52772: 
#line 3231 
  ;
  
#line 3231 
  tmp_10 = readb((void const volatile *)(base + i));
  
#line 3231 
  if ((unsigned int)tmp_10 != 144U) 
#line 3232 
                                    goto use_random_mac_addr; else ;
  
#line 3235 
  tmp_11 = readb((void const volatile *)(base + ((unsigned int)i + 1U)));
  
#line 3235 
  tmp_12 = readb((void const volatile *)(base + ((unsigned int)i + 2U)));
  
#line 3235 
  len = (int)tmp_11 | ((int)tmp_12 << 8);
  
#line 3238 
  kstart = base + ((unsigned int)i + 3U);
  
#line 3239 
  p = kstart;
  
#line 3240 
  goto ldv_52770;
  ldv_52769: 
#line 3241 
  ;
  {
    unsigned char tmp_13;
    int j;
    char type;
    unsigned char tmp_14;
    unsigned char tmp_15;
    
#line 3241 
    tmp_13 = readb((void const volatile *)(p + 2U));
    
#line 3241 
    int klen = (int)tmp_13;
    
#line 3245 
    p += 3U;
    
#line 3284 
    tmp_14 = readb((void const volatile *)p);
    
#line 3284 
    if ((unsigned int)tmp_14 != 73U) 
#line 3285 
                                     goto next; else ;
    
#line 3288 
    tmp_15 = readb((void const volatile *)(p + 3U));
    
#line 3288 
    type = (char)tmp_15;
    
#line 3289 
    if ((int)type == 66) {
      
#line 3290 
      if (klen == 29) {
        unsigned char tmp_17;
        
#line 3290 
        tmp_17 = readb((void const volatile *)(p + 4U));
        
#line 3290 
        if ((unsigned int)tmp_17 == 6U) {
          int tmp_18;
          
#line 3290 
          tmp_18 = cas_vpd_match((void const *)(p + 5U),"local-mac-address");
          
#line 3290 
          if (tmp_18 != 0) {
            int tmp_16;
            
#line 3293 
            tmp_16 = mac_off;
            
#line 3293 
            mac_off += 1;
            
#line 3293 
            ;
            
#line 3293 
            if (tmp_16 > offset) 
#line 3294 
                                 goto next; else ;
            
#line 3297 
            j = 0;
            
#line 3297 
            goto ldv_52765;
            ldv_52764: 
#line 3298 
            ;
            
#line 3298 
            *(dev_addr + j) = readb((void const volatile *)(p + ((unsigned int)j + 23U)));
            
#line 3297 
            j += 1;
            ldv_52765: 
#line 3298 
            ;
            
#line 3297 
            if (j <= 5) 
#line 3299 
                        goto ldv_52764; else 
#line 3302 
                                             goto ldv_52766;
            ldv_52766: 
#line 3303 
            ;
            
#line 3300 
            goto found_mac;
          }
          else ;
        }
        else ;
      }
      else ;
    }
    else ;
    
#line 3304 
    if ((int)type != 83) 
#line 3305 
                         goto next; else ;
    
#line 3316 
    if ((found & 2) != 0) 
#line 3317 
                          goto next; else ;
    
#line 3319 
    if (klen == 18) {
      unsigned char tmp_20;
      
#line 3319 
      tmp_20 = readb((void const volatile *)(p + 4U));
      
#line 3319 
      if ((unsigned int)tmp_20 == 4U) {
        int tmp_21;
        
#line 3319 
        tmp_21 = cas_vpd_match((void const *)(p + 5U),"phy-type");
        
#line 3319 
        if (tmp_21 != 0) {
          int tmp_19;
          
#line 3321 
          tmp_19 = cas_vpd_match((void const *)(p + 14U),"pcs");
          
#line 3321 
          if (tmp_19 != 0) {
            
#line 3322 
            phy_type = 1;
            
#line 3323 
            goto found_phy;
          }
          else ;
        }
        else ;
      }
      else ;
    }
    else ;
    
#line 3327 
    if (klen == 23) {
      unsigned char tmp_23;
      
#line 3327 
      tmp_23 = readb((void const volatile *)(p + 4U));
      
#line 3327 
      if ((unsigned int)tmp_23 == 4U) {
        int tmp_24;
        
#line 3327 
        tmp_24 = cas_vpd_match((void const *)(p + 5U),"phy-interface");
        
#line 3327 
        if (tmp_24 != 0) {
          int tmp_22;
          
#line 3329 
          tmp_22 = cas_vpd_match((void const *)(p + 19U),"pcs");
          
#line 3329 
          if (tmp_22 != 0) {
            
#line 3330 
            phy_type = 1;
            
#line 3331 
            goto found_phy;
          }
          else ;
        }
        else ;
      }
      else ;
    }
    else ;
    found_mac: 
#line 3334 
    ;
    
#line 3335 
    found |= 1;
    
#line 3336 
    goto next;
    found_phy: 
#line 3338 
    ;
    
#line 3339 
    found |= 2;
    next: 
#line 3341 
    ;
    
#line 3342 
    p += klen;
  }
  ldv_52770: 
#line 3344 
  ;
  
#line 3240 
  if ((long)p - (long)kstart < (long)len) 
#line 3242 
                                          goto ldv_52769; else 
#line 3245 
                                                               goto ldv_52771;
  ldv_52771: 
#line 3246 
  ;
  
#line 3344 
  i = (len + 3) + i;
  ldv_52773: 
#line 3345 
  ;
  
#line 3230 
  if (i <= 65535) 
#line 3232 
                  goto ldv_52772; else 
#line 3235 
                                       goto ldv_52774;
  ldv_52774: 
#line 3236 
  ;
  use_random_mac_addr: 
#line 3347 
  ;
  
#line 3348 
  if ((found & 1) != 0) 
#line 3349 
                        goto done; else ;
  
#line 3360 
  printk("\001");
  
#line 3361 
  *dev_addr = (unsigned char)8U;
  
#line 3362 
  *(dev_addr + 1U) = (unsigned char)0U;
  
#line 3363 
  *(dev_addr + 2U) = (unsigned char)32U;
  
#line 3364 
  get_random_bytes((void *)(dev_addr + 3U),3);
  done: 
#line 3366 
  ;
  
#line 3367 
  writel(0U,(void volatile *)(cp->regs + 4128U));
  
#line 3368 
  return phy_type;
}


#line 3372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_check_pci_invariants(struct cas *cp)
{
  
#line 3374 
  struct pci_dev *pdev = cp->pdev;
  
#line 3376 
  cp->cas_flags = 0U;
  
#line 3377 
  if ((unsigned int)pdev->vendor == 4238U && (unsigned int)pdev->device == 43962U) {
    
#line 3379 
    if ((unsigned int)pdev->revision > 15U) 
#line 3380 
                                            cp->cas_flags |= 2U; else ;
    
#line 3381 
    if ((unsigned int)pdev->revision <= 16U) 
#line 3382 
                                             cp->cas_flags |= 4U; else ;
    
#line 3387 
    if ((unsigned int)pdev->revision <= 1U) 
#line 3388 
                                            cp->cas_flags |= 512U; else ;
  }
  else {
    
#line 3391 
    cp->cas_flags |= 2U;
    
#line 3396 
    if ((unsigned int)pdev->vendor == 4107U && (unsigned int)pdev->device == 53U) 
      
#line 3398 
      cp->cas_flags |= 8U; else ;
  }
  
#line 3400 
  return;
}


#line 3403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_check_invariants(struct cas *cp)
{
  int __retres;
  u32 cfg;
  int i;
  unsigned int tmp_2;
  unsigned int tmp_5;
  u16 tmp_6;
  
#line 3405 
  struct pci_dev *pdev = cp->pdev;
  
#line 3410 
  cp->page_order = 0;
  {
    
#line 3414 
    struct page *page = alloc_pages(32U,1U);
    
#line 3417 
    if (page != (struct page *)0) {
      
#line 3418 
      __free_pages(page,1U);
      
#line 3419 
      cp->page_order = 1;
    }
    else {
      int tmp_1;
      {
        int tmp_0;
        
#line 3421 
        int _min1 = (cp->page_size << 1) + -80;
        
#line 3421 
        int _min2 = 9000;
        
#line 3421 
        if (_min1 < _min2) 
#line 3421 
                           tmp_0 = _min1; else 
#line 3421 
                                               tmp_0 = _min2;
        
#line 3421 
        tmp_1 = tmp_0;
      }
      
#line 3421 
      printk("MTU limited to %d bytes\n",tmp_1);
    }
  }
  
#line 3425 
  cp->page_size = (int)(4096UL << cp->page_order);
  
#line 3428 
  tmp_2 = readl((void const volatile *)(cp->regs + 8472U));
  
#line 3428 
  cp->tx_fifo_size = (int)(tmp_2 * 64U);
  
#line 3429 
  cp->rx_fifo_size = 16384;
  
#line 3434 
  cp->phy_type = cas_get_vpd_info(cp,(cp->dev)->dev_addr,(int)(pdev->devfn >> 3) & 31);
  
#line 3436 
  if ((cp->phy_type & 1) != 0) {
    
#line 3437 
    cp->cas_flags |= 1U;
    
#line 3438 
    __retres = 0;
    
#line 3438 
    goto return_label;
  }
  else ;
  
#line 3442 
  cfg = readl((void const volatile *)(cp->regs + 25104U));
  
#line 3443 
  if ((cfg & 512U) != 0U) 
#line 3444 
                          cp->phy_type = 4;
  else 
    
#line 3445 
    if ((cfg & 256U) != 0U) 
#line 3446 
                            cp->phy_type = 2; else ;
  
#line 3449 
  cas_mif_poll(cp,0);
  
#line 3450 
  writel(0U,(void volatile *)(cp->regs + 36944U));
  
#line 3452 
  i = 0;
  
#line 3452 
  goto ldv_52797;
  ldv_52796: 
#line 3453 
  ;
  {
    u32 phy_id;
    int j;
    u16 tmp_3;
    u16 tmp_4;
    
#line 3456 
    j = 0;
    
#line 3456 
    goto ldv_52794;
    ldv_52793: 
#line 3457 
    ;
    
#line 3457 
    cp->phy_addr = i;
    
#line 3458 
    tmp_3 = cas_phy_read(cp,2);
    
#line 3458 
    phy_id = (unsigned int)((int)tmp_3 << 16);
    
#line 3459 
    tmp_4 = cas_phy_read(cp,3);
    
#line 3459 
    phy_id = (unsigned int)tmp_4 | phy_id;
    
#line 3460 
    if (phy_id + 4294967295U <= 4294967293U) {
      
#line 3461 
      cp->phy_id = phy_id;
      
#line 3462 
      goto done;
    }
    else ;
    
#line 3456 
    j += 1;
    ldv_52794: 
#line 3457 
    ;
    
#line 3456 
    if (j <= 2) 
#line 3458 
                goto ldv_52793; else 
#line 3461 
                                     goto ldv_52795;
    ldv_52795: 
#line 3462 
    ;
  }
  
#line 3452 
  i += 1;
  ldv_52797: 
#line 3453 
  ;
  
#line 3452 
  if (i <= 31) 
#line 3454 
               goto ldv_52796; else 
#line 3457 
                                    goto ldv_52798;
  ldv_52798: 
#line 3458 
  ;
  
#line 3466 
  tmp_5 = readl((void const volatile *)(cp->regs + 25116U));
  
#line 3466 
  printk("\001",tmp_5);
  
#line 3468 
  __retres = -1;
  
#line 3468 
  goto return_label;
  done: 
#line 3470 
  ;
  
#line 3472 
  tmp_6 = cas_phy_read(cp,1);
  
#line 3472 
  cfg = (unsigned int)tmp_6;
  
#line 3473 
  if ((cfg & 256U) != 0U) {
    u16 tmp_7;
    
#line 3473 
    tmp_7 = cas_phy_read(cp,15);
    
#line 3473 
    if ((unsigned int)tmp_7 != 0U) 
#line 3475 
                                   cp->cas_flags |= 1U; else ;
  }
  else ;
  
#line 3476 
  __retres = 0;
  return_label: 
#line 3476 
                return __retres;
}


#line 3480  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
__inline static void cas_start_dma(struct cas *cp)
{
  int i;
  u32 val;
  unsigned int tmp;
  unsigned int tmp_0;
  unsigned int tmp_1;
  unsigned int tmp_2;
  int tmp_3;
  int tmp_6;
  unsigned int tmp_7;
  unsigned int tmp_8;
  char *tmp_9;
  
#line 3484 
  int txfailed = 0;
  
#line 3487 
  tmp = readl((void const volatile *)(cp->regs + 8196U));
  
#line 3487 
  val = tmp | 1U;
  
#line 3488 
  writel(val,(void volatile *)(cp->regs + 8196U));
  
#line 3489 
  tmp_0 = readl((void const volatile *)(cp->regs + 16384U));
  
#line 3489 
  val = tmp_0 | 1U;
  
#line 3490 
  writel(val,(void volatile *)(cp->regs + 16384U));
  
#line 3493 
  tmp_1 = readl((void const volatile *)(cp->regs + 24624U));
  
#line 3493 
  val = tmp_1 | 1U;
  
#line 3494 
  writel(val,(void volatile *)(cp->regs + 24624U));
  
#line 3495 
  tmp_2 = readl((void const volatile *)(cp->regs + 24628U));
  
#line 3495 
  val = tmp_2 | 1U;
  
#line 3496 
  writel(val,(void volatile *)(cp->regs + 24628U));
  
#line 3498 
  i = 5000;
  
#line 3499 
  goto ldv_52807;
  ldv_52806: 
#line 3500 
  ;
  
#line 3500 
  val = readl((void const volatile *)(cp->regs + 24624U));
  
#line 3501 
  if ((val & 1U) != 0U) 
#line 3502 
                        goto ldv_52805; else ;
  
#line 3503 
  __const_udelay(42950UL);
  ldv_52807: 
#line 3505 
  ;
  
#line 3499 
  tmp_3 = i;
  
#line 3499 
  i -= 1;
  
#line 3499 
  ;
  
#line 3499 
  if (tmp_3 > 0) 
#line 3501 
                 goto ldv_52806; else 
#line 3504 
                                      goto ldv_52805;
  ldv_52805: 
#line 3505 
  ;
  
#line 3505 
  if (i < 0) 
#line 3505 
             txfailed = 1; else ;
  
#line 3506 
  i = 5000;
  
#line 3507 
  goto ldv_52810;
  ldv_52809: 
#line 3508 
  ;
  
#line 3508 
  val = readl((void const volatile *)(cp->regs + 24628U));
  
#line 3509 
  if ((val & 1U) != 0U) {
    
#line 3510 
    if (txfailed != 0) {
      unsigned int tmp_4;
      unsigned int tmp_5;
      
#line 3513 
      tmp_4 = readl((void const volatile *)(cp->regs + 25040U));
      
#line 3512 
      tmp_5 = readl((void const volatile *)(cp->regs + 25116U));
      
#line 3511 
      ;
      
#line 3511 
      netdev_err((struct net_device const *)cp->dev,"enabling mac failed [tx:%08x:%08x]\n",tmp_5,tmp_4);
    }
    else ;
    
#line 3516 
    goto enable_rx_done;
  }
  else ;
  
#line 3518 
  __const_udelay(42950UL);
  ldv_52810: 
#line 3520 
  ;
  
#line 3507 
  tmp_6 = i;
  
#line 3507 
  i -= 1;
  
#line 3507 
  ;
  
#line 3507 
  if (tmp_6 > 0) 
#line 3509 
                 goto ldv_52809; else 
#line 3512 
                                      goto ldv_52811;
  ldv_52811: 
#line 3513 
  ;
  
#line 3522 
  tmp_7 = readl((void const volatile *)(cp->regs + 25040U));
  
#line 3521 
  tmp_8 = readl((void const volatile *)(cp->regs + 25116U));
  
#line 3520 
  if (txfailed != 0) 
#line 3520 
                     tmp_9 = (char *)"tx,rx"; else 
#line 3520 
                                                   tmp_9 = (char *)"rx";
  
#line 3520 
  ;
  
#line 3520 
  netdev_err((struct net_device const *)cp->dev,"enabling mac failed [%s:%08x:%08x]\n",tmp_9,tmp_8,tmp_7);
  enable_rx_done: 
#line 3525 
  ;
  
#line 3526 
  cas_unmask_intr(cp);
  
#line 3527 
  writel(508U,(void volatile *)(cp->regs + 16420U));
  
#line 3528 
  writel(0U,(void volatile *)(cp->regs + 16448U));
  
#line 3530 
  if ((cp->cas_flags & 2U) != 0U) {
    
#line 3532 
    writel(508U,(void volatile *)(cp->regs + 16928U));
    
#line 3535 
    i = 1;
    
#line 3535 
    goto ldv_52813;
    ldv_52812: 
#line 3536 
    ;
    
#line 3536 
    writel(0U,(void volatile *)(cp->regs + ((i + -1) * 8 + 16940)));
    
#line 3535 
    i += 1;
    ldv_52813: 
#line 3536 
    ;
    
#line 3535 
    if (i <= 0) 
#line 3537 
                goto ldv_52812; else 
#line 3540 
                                     goto ldv_52814;
    ldv_52814: 
#line 3541 
    ;
  }
  else ;
  
#line 3543 
  return;
}


#line 3541  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_read_pcs_link_mode(struct cas *cp, int *fd, int *spd, int *pause)
{
  
#line 3544 
  u32 val = readl((void const volatile *)(cp->regs + 36876U));
  
#line 3545 
  *fd = (int)(val >> 5) & 1;
  
#line 3546 
  *pause = (int)(val >> 7) & 1;
  
#line 3547 
  if ((val & 256U) != 0U) 
#line 3548 
                          *pause |= 16; else ;
  
#line 3549 
  *spd = 1000;
  
#line 3550 
  return;
}


#line 3553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_read_mii_link_mode(struct cas *cp, int *fd, int *spd, int *pause)
{
  u32 val;
  u16 tmp;
  
#line 3558 
  *fd = 0;
  
#line 3559 
  *spd = 10;
  
#line 3560 
  *pause = 0;
  
#line 3563 
  tmp = cas_phy_read(cp,5);
  
#line 3563 
  val = (unsigned int)tmp;
  
#line 3564 
  if ((val & 1024U) != 0U) 
#line 3565 
                           *pause = 1; else ;
  
#line 3567 
  if ((val & 2048U) != 0U) 
#line 3568 
                           *pause |= 16; else ;
  
#line 3570 
  if ((val & 320U) != 0U) 
#line 3571 
                          *fd = 1; else ;
  
#line 3572 
  if ((val & 896U) != 0U) 
#line 3573 
                          *spd = 100; else ;
  
#line 3575 
  if ((cp->cas_flags & 1U) != 0U) {
    u16 tmp_0;
    
#line 3576 
    tmp_0 = cas_phy_read(cp,10);
    
#line 3576 
    val = (unsigned int)tmp_0;
    
#line 3577 
    if ((val & 3072U) != 0U) 
#line 3578 
                             *spd = 1000; else ;
    
#line 3579 
    if ((val & 2048U) != 0U) 
#line 3580 
                             *fd = 1; else ;
  }
  else ;
  
#line 3582 
  return;
}


#line 3589  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_set_link_modes(struct cas *cp)
{
  u32 val;
  int full_duplex;
  int speed;
  int pause;
  
#line 3594 
  full_duplex = 0;
  
#line 3595 
  speed = 10;
  
#line 3596 
  pause = 0;
  
#line 3598 
  if ((cp->phy_type & 6) != 0) {
    u16 tmp;
    
#line 3599 
    cas_mif_poll(cp,0);
    
#line 3600 
    tmp = cas_phy_read(cp,0);
    
#line 3600 
    val = (unsigned int)tmp;
    
#line 3601 
    if ((val & 4096U) != 0U) 
#line 3602 
                             cas_read_mii_link_mode(cp,& full_duplex,& speed,& pause);
    else {
      
#line 3605 
      if ((val & 256U) != 0U) 
#line 3606 
                              full_duplex = 1; else ;
      
#line 3608 
      if ((val & 8192U) != 0U) 
#line 3609 
                               speed = 100;
      else 
        
#line 3610 
        if ((val & 64U) != 0U) 
          
#line 3611 
          if ((cp->cas_flags & 1U) != 0U) 
#line 3611 
                                          speed = 1000; else 
#line 3611 
                                                             speed = 100;
        else ;
    }
    
#line 3614 
    cas_mif_poll(cp,1);
  }
  else {
    
#line 3617 
    val = readl((void const volatile *)(cp->regs + 36864U));
    
#line 3618 
    cas_read_pcs_link_mode(cp,& full_duplex,& speed,& pause);
    
#line 3619 
    if ((val & 4096U) == 0U) {
      
#line 3620 
      if ((val & 256U) != 0U) 
#line 3621 
                              full_duplex = 1; else ;
    }
    else ;
  }
  
#line 3625 
  if ((cp->msg_enable & 4U) != 0U) {
    char *tmp_0;
    
#line 3625 
    if (full_duplex != 0) 
#line 3625 
                          tmp_0 = (char *)"full"; else 
#line 3625 
                                                       tmp_0 = (char *)"half";
    
#line 3625 
    ;
    
#line 3625 
    ;
    
#line 3625 
    netdev_info((struct net_device const *)cp->dev,"Link up at %d Mbps, %s-duplex\n",speed,tmp_0);
  }
  else ;
  
#line 3628 
  val = 33U;
  
#line 3629 
  if ((cp->phy_type & 6) != 0) {
    
#line 3630 
    val |= 16U;
    
#line 3631 
    if (full_duplex == 0) 
#line 3632 
                          val |= 4U; else ;
  }
  else ;
  
#line 3634 
  if (full_duplex != 0) 
#line 3635 
                        val |= 64U; else ;
  
#line 3636 
  if (speed == 1000) 
#line 3637 
                     val |= 8U; else ;
  
#line 3638 
  writel(val,(void volatile *)(cp->regs + 24636U));
  
#line 3641 
  val = 8U;
  
#line 3642 
  if (full_duplex != 0) {
    
#line 3643 
    val |= 2U;
    
#line 3644 
    val |= 4U;
  }
  else ;
  
#line 3658 
  if (speed == 1000 && full_duplex == 0) {
    
#line 3659 
    writel(val | 512U,(void volatile *)(cp->regs + 24624U));
    
#line 3662 
    val = readl((void const volatile *)(cp->regs + 24628U));
    
#line 3663 
    val &= 4294967291U;
    
#line 3664 
    writel(val | 256U,(void volatile *)(cp->regs + 24628U));
    
#line 3667 
    writel(512U,(void volatile *)(cp->regs + 24652U));
    
#line 3669 
    cp->crc_size = 4;
    
#line 3671 
    cp->min_frame_size = 255;
  }
  else {
    
#line 3674 
    writel(val,(void volatile *)(cp->regs + 24624U));
    
#line 3679 
    val = readl((void const volatile *)(cp->regs + 24628U));
    
#line 3680 
    if (full_duplex != 0) {
      
#line 3681 
      val |= 4U;
      
#line 3682 
      cp->crc_size = 0;
      
#line 3683 
      cp->min_frame_size = 60;
    }
    else {
      
#line 3685 
      val &= 4294967291U;
      
#line 3686 
      cp->crc_size = 4;
      
#line 3687 
      cp->min_frame_size = 97;
    }
    
#line 3689 
    writel(val & 4294967039U,(void volatile *)(cp->regs + 24628U));
    
#line 3691 
    writel(64U,(void volatile *)(cp->regs + 24652U));
  }
  
#line 3694 
  if ((cp->msg_enable & 4U) != 0U) 
    
#line 3695 
    if ((pause & 1) != 0) 
#line 3696 
                          netdev_info((struct net_device const *)cp->dev,"Pause is enabled (rxfifo: %d off: %d on: %d)\n",cp->rx_fifo_size,cp->rx_pause_off,cp->rx_pause_on);
    else 
      
#line 3700 
      if ((pause & 16) != 0) 
#line 3701 
                             netdev_info((struct net_device const *)cp->dev,"TX pause enabled\n"); else 
                                                                    
#line 3703 
                                                                    netdev_info((struct net_device const *)cp->dev,"Pause is disabled\n");
  else ;
  
#line 3707 
  val = readl((void const volatile *)(cp->regs + 24632U));
  
#line 3708 
  val &= 4294967292U;
  
#line 3709 
  if (pause != 0) {
    
#line 3710 
    val |= 1U;
    
#line 3711 
    if ((pause & 1) != 0) 
#line 3712 
                          val |= 2U; else ;
  }
  else ;
  
#line 3715 
  writel(val,(void volatile *)(cp->regs + 24632U));
  
#line 3716 
  cas_start_dma(cp);
  
#line 3717 
  return;
}


#line 3720  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_init_hw(struct cas *cp, int restart_link)
{
  
#line 3722 
  if (restart_link != 0) 
#line 3723 
                         cas_phy_init(cp); else ;
  
#line 3725 
  cas_init_pause_thresholds(cp);
  
#line 3726 
  cas_init_mac(cp);
  
#line 3727 
  cas_init_dma(cp);
  
#line 3729 
  if (restart_link != 0) {
    
#line 3731 
    cp->timer_ticks = 0;
    
#line 3732 
    cas_begin_auto_negotiation(cp,(struct ethtool_cmd *)0);
  }
  else 
    
#line 3733 
    if (cp->lstate == (unsigned int)link_up) {
      
#line 3734 
      cas_set_link_modes(cp);
      
#line 3735 
      netif_carrier_on(cp->dev);
    }
    else ;
  
#line 3737 
  return;
}


#line 3743  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_hard_reset(struct cas *cp)
{
  
#line 3745 
  writel(8U,(void volatile *)(cp->regs + 4128U));
  
#line 3746 
  __const_udelay(85900UL);
  
#line 3747 
  pci_restore_state(cp->pdev);
  
#line 3748 
  return;
}


#line 3751  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_global_reset(struct cas *cp, int blkflag)
{
  int limit;
  int tmp_1;
  
#line 3756 
  if (blkflag != 0 && (cp->phy_type & 6) == 0) 
#line 3763 
                                               writel(11U,(void volatile *)(cp->regs + 4112U)); else 
                                                                    
#line 3766 
                                                                    writel(3U,(void volatile *)(cp->regs + 4112U));
  
#line 3770 
  if (1) 
#line 3770 
         __const_udelay(12885000UL);
  else {
    
#line 3770 
    unsigned long __ms = 3UL;
    {
      unsigned long tmp;
      
#line 3770 
      goto ldv_52850;
      ldv_52849: 
#line 3771 
      ;
      
#line 3770 
      __const_udelay(4295000UL);
      ldv_52850: 
#line 3772 
      ;
      
#line 3770 
      tmp = __ms;
      
#line 3770 
      __ms -= 1UL;
      
#line 3770 
      ;
      
#line 3770 
      if (tmp != 0UL) 
#line 3772 
                      goto ldv_52849; else 
#line 3775 
                                           goto ldv_52851;
      ldv_52851: 
#line 3776 
      ;
    }
  }
  
#line 3772 
  limit = 5000;
  
#line 3773 
  goto ldv_52855;
  ldv_52854: 
#line 3774 
  ;
  {
    
#line 3774 
    u32 val = readl((void const volatile *)(cp->regs + 4112U));
    
#line 3775 
    if ((val & 3U) == 0U) 
#line 3776 
                          goto done; else ;
    
#line 3777 
    __const_udelay(42950UL);
  }
  ldv_52855: 
#line 3780 
  ;
  
#line 3773 
  tmp_1 = limit;
  
#line 3773 
  limit -= 1;
  
#line 3773 
  ;
  
#line 3773 
  if (tmp_1 > 0) 
#line 3775 
                 goto ldv_52854; else 
#line 3778 
                                      goto ldv_52856;
  ldv_52856: 
#line 3779 
  ;
  
#line 3779 
  netdev_err((struct net_device const *)cp->dev,"sw reset failed\n");
  done: 
#line 3781 
  ;
  
#line 3783 
  writel(224U,(void volatile *)(cp->regs + 4104U));
  
#line 3790 
  writel(4294967264U,(void volatile *)(cp->regs + 4100U));
  
#line 3798 
  writel(0U,(void volatile *)(cp->regs + 36944U));
  
#line 3799 
  return;
}


#line 3801  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_reset(struct cas *cp, int blkflag)
{
  u32 val;
  
#line 3805 
  cas_mask_intr(cp);
  
#line 3806 
  cas_global_reset(cp,blkflag);
  
#line 3807 
  cas_mac_reset(cp);
  
#line 3808 
  cas_entropy_gather(cp);
  
#line 3811 
  val = readl((void const volatile *)(cp->regs + 8196U));
  
#line 3812 
  val &= 4294967294U;
  
#line 3813 
  writel(val,(void volatile *)(cp->regs + 8196U));
  
#line 3815 
  val = readl((void const volatile *)(cp->regs + 16384U));
  
#line 3816 
  val &= 4294967294U;
  
#line 3817 
  writel(val,(void volatile *)(cp->regs + 16384U));
  
#line 3822 
  cas_load_firmware(cp,(cas_hp_inst_t *)(& cas_prog_workaroundtab));
  
#line 3828 
  ldv_spin_lock_139(& cp->stat_lock[4]);
  
#line 3829 
  cas_clear_mac_err(cp);
  
#line 3830 
  ldv_spin_unlock_140(& cp->stat_lock[4]);
  
#line 3831 
  return;
}


#line 3834  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_shutdown(struct cas *cp)
{
  unsigned long flags;
  int tmp;
  
#line 3839 
  cp->hw_running = 0;
  
#line 3841 
  ldv_del_timer_sync_141(& cp->link_timer);
  
#line 3851 
  goto ldv_52867;
  ldv_52866: 
#line 3852 
  ;
  
#line 3852 
  schedule();
  ldv_52867: 
#line 3853 
  ;
  
#line 3851 
  tmp = atomic_read((atomic_t const *)(& cp->reset_task_pending));
  
#line 3851 
  if (tmp != 0) 
#line 3853 
                goto ldv_52866; else 
#line 3856 
                                     goto ldv_52868;
  ldv_52868: 
#line 3857 
  ;
  {
    
#line 3855 
    struct cas *xxxcp = cp;
    
#line 3855 
    ldv___ldv_spin_lock_142(& xxxcp->lock);
    
#line 3855 
    cas_lock_tx(xxxcp);
  }
  
#line 3856 
  cas_reset(cp,0);
  
#line 3857 
  if ((cp->cas_flags & 8U) != 0U) 
#line 3858 
                                  cas_phy_powerdown(cp); else ;
  {
    
#line 3859 
    struct cas *xxxcp_0 = cp;
    
#line 3859 
    cas_unlock_tx(xxxcp_0);
    
#line 3859 
    ldv_spin_unlock_irqrestore_143(& xxxcp_0->lock,flags);
  }
  
#line 3861 
  return;
}


#line 3862  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_change_mtu(struct net_device *dev, int new_mtu)
{
  int __retres;
  int tmp_3;
  bool tmp_2;
  
#line 3864 
  struct cas *cp = netdev_priv((struct net_device const *)dev);
  
#line 3866 
  if (new_mtu <= 59) {
    
#line 3867 
    __retres = -22;
    
#line 3867 
    goto return_label;
  }
  else {
    int tmp_1;
    {
      int tmp_0;
      
#line 3866 
      int _min1 = (cp->page_size << 1) + -80;
      
#line 3866 
      int _min2 = 9000;
      
#line 3866 
      if (_min1 < _min2) 
#line 3866 
                         tmp_0 = _min1; else 
#line 3866 
                                             tmp_0 = _min2;
      
#line 3866 
      tmp_1 = tmp_0;
    }
    
#line 3866 
    ;
    
#line 3866 
    if (tmp_1 < new_mtu) {
      
#line 3867 
      __retres = -22;
      
#line 3867 
      goto return_label;
    }
    else ;
  }
  
#line 3869 
  dev->mtu = (unsigned int)new_mtu;
  
#line 3870 
  tmp_2 = netif_running((struct net_device const *)dev);
  
#line 3870 
  if (tmp_2) 
#line 3870 
             tmp_3 = 0; else 
#line 3870 
                             tmp_3 = 1;
  
#line 3870 
  if (tmp_3) {
    
#line 3871 
    __retres = 0;
    
#line 3871 
    goto return_label;
  }
  else {
    int tmp_5;
    bool tmp_4;
    
#line 3870 
    tmp_4 = netif_device_present(dev);
    
#line 3870 
    if (tmp_4) 
#line 3870 
               tmp_5 = 0; else 
#line 3870 
                               tmp_5 = 1;
    
#line 3870 
    if (tmp_5) {
      
#line 3871 
      __retres = 0;
      
#line 3871 
      goto return_label;
    }
    else ;
  }
  
#line 3875 
  atomic_inc(& cp->reset_task_pending);
  
#line 3876 
  if ((cp->phy_type & 1) != 0) 
#line 3877 
                               atomic_inc(& cp->reset_task_pending_all); else 
                                                                    
#line 3879 
                                                                    atomic_inc(& cp->reset_task_pending_mtu);
  
#line 3881 
  ldv_schedule_work_144(& cp->reset_task);
  
#line 3889 
  ldv_flush_work_145(& cp->reset_task);
  
#line 3890 
  __retres = 0;
  return_label: 
#line 3890 
                return __retres;
}


#line 3893  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_clean_txd(struct cas *cp, int ring)
{
  struct sk_buff *skb;
  u64 daddr;
  u64 dlen;
  int i;
  int size;
  
#line 3895 
  struct cas_tx_desc *txd = cp->init_txds[ring];
  
#line 3896 
  struct sk_buff **skbs = (struct sk_buff **)(& cp->tx_skbs[ring]);
  
#line 3900 
  size = 512;
  
#line 3901 
  i = 0;
  
#line 3901 
  goto ldv_52897;
  ldv_52896: 
#line 3902 
  ;
  {
    int frag;
    unsigned char *tmp_0;
    
#line 3904 
    if (*(skbs + i) == (struct sk_buff *)0) 
#line 3905 
                                            goto ldv_52891; else ;
    
#line 3907 
    skb = *(skbs + i);
    
#line 3908 
    *(skbs + i) = (struct sk_buff *)0;
    
#line 3910 
    frag = 0;
    
#line 3910 
    goto ldv_52894;
    ldv_52893: 
#line 3911 
    ;
    {
      unsigned char *tmp;
      
#line 3911 
      int ent = (size + -1) & i;
      
#line 3916 
      daddr = (txd + ent)->buffer;
      
#line 3917 
      dlen = (txd + ent)->control & 16383ULL;
      
#line 3919 
      pci_unmap_page(cp->pdev,daddr,(unsigned long)dlen,1);
      
#line 3922 
      tmp = skb_end_pointer((struct sk_buff const *)skb);
      
#line 3922 
      ;
      
#line 3922 
      if ((int)((struct skb_shared_info *)tmp)->nr_frags != frag) {
        
#line 3923 
        i += 1;
        
#line 3928 
        ent = (size + -1) & i;
        
#line 3929 
        if (cp->tx_tiny_use[ring][ent].used != 0) 
#line 3930 
                                                  i += 1; else ;
      }
      else ;
    }
    
#line 3910 
    frag += 1;
    ldv_52894: 
#line 3911 
    ;
    
#line 3910 
    tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 3910 
    ;
    
#line 3910 
    if ((int)((struct skb_shared_info *)tmp_0)->nr_frags >= frag) 
#line 3912 
                                                                  goto ldv_52893; else 
                                                                    
#line 3915 
                                                                    goto ldv_52895;
    ldv_52895: 
#line 3916 
    ;
    
#line 3933 
    dev_kfree_skb_any(skb);
  }
  ldv_52891: 
#line 3935 
  ;
  
#line 3901 
  i += 1;
  ldv_52897: 
#line 3902 
  ;
  
#line 3901 
  if (i < size) 
#line 3903 
                goto ldv_52896; else 
#line 3906 
                                     goto ldv_52898;
  ldv_52898: 
#line 3907 
  ;
  
#line 3937 
  memset((void *)(& cp->tx_tiny_use[ring]),0,(unsigned long)size * 8UL);
  
#line 3938 
  return;
}


#line 3941  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
__inline static void cas_free_rx_desc(struct cas *cp, int ring)
{
  int i;
  int size;
  
#line 3943 
  cas_page_t **page = (cas_page_t **)(& cp->rx_pages[ring]);
  
#line 3946 
  size = 512;
  
#line 3947 
  i = 0;
  
#line 3947 
  goto ldv_52907;
  ldv_52906: 
#line 3948 
  ;
  
#line 3948 
  if (*(page + i) != (cas_page_t *)0) {
    
#line 3949 
    cas_page_free(cp,*(page + i));
    
#line 3950 
    *(page + i) = (cas_page_t *)0;
  }
  else ;
  
#line 3947 
  i += 1;
  ldv_52907: 
#line 3948 
  ;
  
#line 3947 
  if (i < size) 
#line 3949 
                goto ldv_52906; else 
#line 3952 
                                     goto ldv_52908;
  ldv_52908: 
#line 3953 
  ;
  
#line 3954 
  return;
}


#line 3955  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_free_rxds(struct cas *cp)
{
  int i;
  
#line 3959 
  i = 0;
  
#line 3959 
  goto ldv_52914;
  ldv_52913: 
#line 3960 
  ;
  
#line 3960 
  cas_free_rx_desc(cp,i);
  
#line 3959 
  i += 1;
  ldv_52914: 
#line 3960 
  ;
  
#line 3959 
  if (i <= 1) 
#line 3961 
              goto ldv_52913; else 
#line 3964 
                                   goto ldv_52915;
  ldv_52915: 
#line 3965 
  ;
  
#line 3966 
  return;
}


#line 3964  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_clean_rings(struct cas *cp)
{
  int i;
  
#line 3969 
  memset((void *)(& cp->tx_old),0,16UL);
  
#line 3970 
  memset((void *)(& cp->tx_new),0,16UL);
  
#line 3971 
  i = 0;
  
#line 3971 
  goto ldv_52921;
  ldv_52920: 
#line 3972 
  ;
  
#line 3972 
  cas_clean_txd(cp,i);
  
#line 3971 
  i += 1;
  ldv_52921: 
#line 3972 
  ;
  
#line 3971 
  if (i <= 3) 
#line 3973 
              goto ldv_52920; else 
#line 3976 
                                   goto ldv_52922;
  ldv_52922: 
#line 3977 
  ;
  
#line 3975 
  memset((void *)cp->init_block,0,114696UL);
  
#line 3976 
  cas_clean_rxds(cp);
  
#line 3977 
  cas_clean_rxcs(cp);
  
#line 3978 
  return;
}


#line 3981  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
__inline static int cas_alloc_rx_desc(struct cas *cp, int ring)
{
  int __retres;
  int size;
  cas_page_t *tmp;
  
#line 3983 
  cas_page_t **page = (cas_page_t **)(& cp->rx_pages[ring]);
  
#line 3984 
  int i = 0;
  
#line 3986 
  size = 512;
  
#line 3987 
  i = 0;
  
#line 3987 
  goto ldv_52931;
  ldv_52930: 
#line 3988 
  ;
  
#line 3988 
  tmp = cas_page_alloc(cp,208U);
  
#line 3988 
  *(page + i) = tmp;
  
#line 3988 
  if (tmp == (cas_page_t *)0) {
    
#line 3989 
    __retres = -1;
    
#line 3989 
    goto return_label;
  }
  else ;
  
#line 3987 
  i += 1;
  ldv_52931: 
#line 3988 
  ;
  
#line 3987 
  if (i < size) 
#line 3989 
                goto ldv_52930; else 
#line 3992 
                                     goto ldv_52932;
  ldv_52932: 
#line 3993 
  ;
  
#line 3991 
  __retres = 0;
  return_label: 
#line 3991 
                return __retres;
}


#line 3994  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_alloc_rxds(struct cas *cp)
{
  int __retres;
  int i;
  int tmp;
  
#line 3998 
  i = 0;
  
#line 3998 
  goto ldv_52938;
  ldv_52937: 
#line 3999 
  ;
  
#line 3999 
  tmp = cas_alloc_rx_desc(cp,i);
  
#line 3999 
  if (tmp < 0) {
    
#line 4000 
    cas_free_rxds(cp);
    
#line 4001 
    __retres = -1;
    
#line 4001 
    goto return_label;
  }
  else ;
  
#line 3998 
  i += 1;
  ldv_52938: 
#line 3999 
  ;
  
#line 3998 
  if (i <= 1) 
#line 4000 
              goto ldv_52937; else 
#line 4003 
                                   goto ldv_52939;
  ldv_52939: 
#line 4004 
  ;
  
#line 4004 
  __retres = 0;
  return_label: 
#line 4004 
                return __retres;
}


#line 4007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_reset_task(struct work_struct *work)
{
  struct cas *tmp;
  {
    
#line 4009 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 4009 
    tmp = (struct cas *)__mptr + 18446744073709501768U;
  }
  
#line 4009 
  struct cas *cp = tmp;
  
#line 4013 
  int pending_all = atomic_read((atomic_t const *)(& cp->reset_task_pending_all));
  
#line 4014 
  int pending_spare = atomic_read((atomic_t const *)(& cp->reset_task_pending_spare));
  
#line 4015 
  int pending_mtu = atomic_read((atomic_t const *)(& cp->reset_task_pending_mtu));
  
#line 4017 
  if ((pending_all == 0 && pending_spare == 0) && pending_mtu == 0) {
    
#line 4021 
    atomic_dec(& cp->reset_task_pending);
    
#line 4022 
    goto return_label;
  }
  else ;
  
#line 4029 
  if (cp->hw_running != 0) {
    unsigned long flags;
    
#line 4033 
    netif_device_detach(cp->dev);
    {
      
#line 4034 
      struct cas *xxxcp = cp;
      
#line 4034 
      ldv___ldv_spin_lock_146(& xxxcp->lock);
      
#line 4034 
      cas_lock_tx(xxxcp);
    }
    
#line 4036 
    if (cp->opened != 0) 
#line 4041 
                         cas_spare_recover(cp,32U); else ;
    
#line 4045 
    if (pending_all == 0 && pending_mtu == 0) 
#line 4046 
                                              goto done; else ;
    
#line 4059 
    cas_reset(cp,pending_all <= 0);
    
#line 4060 
    if (cp->opened != 0) 
#line 4061 
                         cas_clean_rings(cp); else ;
    
#line 4062 
    cas_init_hw(cp,pending_all > 0);
    done: 
#line 4070 
    ;
    {
      
#line 4071 
      struct cas *xxxcp_0 = cp;
      
#line 4071 
      cas_unlock_tx(xxxcp_0);
      
#line 4071 
      ldv_spin_unlock_irqrestore_147(& xxxcp_0->lock,flags);
    }
    
#line 4072 
    netif_device_attach(cp->dev);
  }
  else ;
  
#line 4075 
  atomic_sub(pending_all,& cp->reset_task_pending_all);
  
#line 4076 
  atomic_sub(pending_spare,& cp->reset_task_pending_spare);
  
#line 4077 
  atomic_sub(pending_mtu,& cp->reset_task_pending_mtu);
  
#line 4078 
  atomic_dec(& cp->reset_task_pending);
  return_label: 
#line 4079 
                return;
}


#line 4084  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_link_timer(unsigned long data)
{
  int mask;
  unsigned long flags;
  int tmp;
  unsigned int tmp_4;
  
#line 4086 
  struct cas *cp = (struct cas *)data;
  
#line 4087 
  int pending = 0;
  
#line 4087 
  int reset = 0;
  
#line 4090 
  if ((link_transition_timeout != 0 && cp->link_transition_jiffies_valid != 0) && jiffies - cp->link_transition_jiffies > (unsigned long)link_transition_timeout) 
    
#line 4098 
    cp->link_transition_jiffies_valid = 0; else ;
  
#line 4101 
  if (cp->hw_running == 0) 
#line 4102 
                           goto return_label; else ;
  
#line 4104 
  ldv___ldv_spin_lock_148(& cp->lock);
  
#line 4105 
  cas_lock_tx(cp);
  
#line 4106 
  cas_entropy_gather(cp);
  
#line 4112 
  tmp = atomic_read((atomic_t const *)(& cp->reset_task_pending_all));
  
#line 4112 
  if (tmp != 0) 
#line 4115 
                goto done;
  else {
    int tmp_0;
    
#line 4112 
    tmp_0 = atomic_read((atomic_t const *)(& cp->reset_task_pending_spare));
    
#line 4112 
    if (tmp_0 != 0) 
#line 4115 
                    goto done;
    else {
      int tmp_1;
      
#line 4113 
      tmp_1 = atomic_read((atomic_t const *)(& cp->reset_task_pending_mtu));
      
#line 4113 
      if (tmp_1 != 0) 
#line 4115 
                      goto done; else ;
    }
  }
  
#line 4122 
  mask = (int)cp->cas_flags & 240;
  
#line 4122 
  if (mask != 0) {
    int i;
    int rmask;
    int tmp_2;
    
#line 4125 
    i = 0;
    
#line 4125 
    goto ldv_52966;
    ldv_52965: 
#line 4126 
    ;
    
#line 4126 
    rmask = (1 << (i + 4)) & 240;
    
#line 4127 
    if ((mask & rmask) == 0) 
#line 4128 
                             goto ldv_52964; else ;
    
#line 4131 
    tmp_2 = cas_post_rxds_ringN(cp,i,cp->rx_last[i]);
    
#line 4131 
    if (tmp_2 < 0) {
      
#line 4132 
      pending = 1;
      
#line 4133 
      goto ldv_52964;
    }
    else ;
    
#line 4135 
    cp->cas_flags &= (unsigned int)(~ rmask);
    ldv_52964: 
#line 4136 
    ;
    
#line 4125 
    i += 1;
    ldv_52966: 
#line 4126 
    ;
    
#line 4125 
    if (i <= 1) 
#line 4127 
                goto ldv_52965; else 
#line 4130 
                                     goto ldv_52967;
    ldv_52967: 
#line 4131 
    ;
  }
  else ;
  
#line 4139 
  if ((cp->phy_type & 6) != 0) {
    u16 bmsr;
    
#line 4141 
    cas_mif_poll(cp,0);
    
#line 4142 
    bmsr = cas_phy_read(cp,1);
    
#line 4148 
    bmsr = cas_phy_read(cp,1);
    
#line 4149 
    cas_mif_poll(cp,1);
    
#line 4150 
    readl((void const volatile *)(cp->regs + 25112U));
    
#line 4151 
    reset = cas_mii_link_check(cp,(unsigned short)((int)bmsr));
  }
  else 
#line 4153 
       reset = cas_pcs_link_check(cp);
  
#line 4156 
  if (reset != 0) 
#line 4157 
                  goto done; else ;
  
#line 4160 
  tmp_4 = readl((void const volatile *)(cp->regs + 24592U));
  
#line 4160 
  if ((tmp_4 & 1U) == 0U) {
    u32 wptr;
    u32 rptr;
    
#line 4161 
    u32 val = readl((void const volatile *)(cp->regs + 25040U));
    
#line 4163 
    int tlm = (int)(val >> 16) & 15;
    
#line 4165 
    if ((tlm == 5 || tlm == 3) && ((val >> 12) & 15U) == 0U) {
      
#line 4167 
      if ((cp->msg_enable & 128U) != 0U) 
#line 4167 
                                         netdev_printk("\001",(struct net_device const *)cp->dev,"tx err: MAC_STATE[%08x]\n",val); else ;
      
#line 4169 
      reset = 1;
      
#line 4170 
      goto done;
    }
    else ;
    
#line 4173 
    val = readl((void const volatile *)(cp->regs + 8228U));
    
#line 4174 
    wptr = readl((void const volatile *)(cp->regs + 8212U));
    
#line 4175 
    rptr = readl((void const volatile *)(cp->regs + 8220U));
    
#line 4176 
    if (val == 0U && wptr != rptr) {
      
#line 4177 
      if ((cp->msg_enable & 128U) != 0U) 
#line 4177 
                                         netdev_printk("\001",(struct net_device const *)cp->dev,"tx err: TX_FIFO[%08x:%08x:%08x]\n",val,wptr,rptr); else ;
      
#line 4180 
      reset = 1;
    }
    else ;
    
#line 4183 
    if (reset != 0) 
#line 4184 
                    cas_hard_reset(cp); else ;
  }
  else ;
  done: 
#line 4187 
  ;
  
#line 4188 
  if (reset != 0) {
    
#line 4190 
    atomic_inc(& cp->reset_task_pending);
    
#line 4191 
    atomic_inc(& cp->reset_task_pending_all);
    
#line 4192 
    ldv_schedule_work_149(& cp->reset_task);
  }
  else ;
  
#line 4200 
  if (pending == 0) 
#line 4201 
                    ldv_mod_timer_150(& cp->link_timer,jiffies + 550UL); else ;
  
#line 4202 
  cas_unlock_tx(cp);
  
#line 4203 
  ldv_spin_unlock_irqrestore_151(& cp->lock,flags);
  return_label: 
#line 4204 
                return;
}


#line 4209  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_tx_tiny_free(struct cas *cp)
{
  int i;
  
#line 4211 
  struct pci_dev *pdev = cp->pdev;
  
#line 4214 
  i = 0;
  
#line 4214 
  goto ldv_52980;
  ldv_52979: 
#line 4215 
  ;
  
#line 4215 
  if (cp->tx_tiny_bufs[i] == (u8 *)0U) 
#line 4216 
                                       goto ldv_52978; else ;
  
#line 4218 
  pci_free_consistent(pdev,131328UL,(void *)cp->tx_tiny_bufs[i],cp->tx_tiny_dvma[i]);
  
#line 4221 
  cp->tx_tiny_bufs[i] = (u8 *)0U;
  ldv_52978: 
#line 4222 
  ;
  
#line 4214 
  i += 1;
  ldv_52980: 
#line 4215 
  ;
  
#line 4214 
  if (i <= 3) 
#line 4216 
              goto ldv_52979; else 
#line 4219 
                                   goto ldv_52981;
  ldv_52981: 
#line 4220 
  ;
  
#line 4221 
  return;
}


#line 4225  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_tx_tiny_alloc(struct cas *cp)
{
  int __retres;
  int i;
  
#line 4227 
  struct pci_dev *pdev = cp->pdev;
  
#line 4230 
  i = 0;
  
#line 4230 
  goto ldv_52988;
  ldv_52987: 
#line 4231 
  ;
  
#line 4232 
  cp->tx_tiny_bufs[i] = (u8 *)pci_alloc_consistent(pdev,131328UL,& cp->tx_tiny_dvma[i]);
  
#line 4234 
  if (cp->tx_tiny_bufs[i] == (u8 *)0U) {
    
#line 4235 
    cas_tx_tiny_free(cp);
    
#line 4236 
    __retres = -1;
    
#line 4236 
    goto return_label;
  }
  else ;
  
#line 4230 
  i += 1;
  ldv_52988: 
#line 4231 
  ;
  
#line 4230 
  if (i <= 3) 
#line 4232 
              goto ldv_52987; else 
#line 4235 
                                   goto ldv_52989;
  ldv_52989: 
#line 4236 
  ;
  
#line 4239 
  __retres = 0;
  return_label: 
#line 4239 
                return __retres;
}


#line 4243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_open(struct net_device *dev)
{
  int __retres;
  int hw_was_up;
  int err;
  unsigned long flags;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  
#line 4245 
  struct cas *cp = netdev_priv((struct net_device const *)dev);
  
#line 4249 
  ldv_mutex_lock_152(& cp->pm_mutex);
  
#line 4251 
  hw_was_up = cp->hw_running;
  
#line 4256 
  if (cp->hw_running == 0) {
    {
      
#line 4258 
      struct cas *xxxcp = cp;
      
#line 4258 
      ldv___ldv_spin_lock_153(& xxxcp->lock);
      
#line 4258 
      cas_lock_tx(xxxcp);
    }
    
#line 4264 
    cas_reset(cp,0);
    
#line 4265 
    cp->hw_running = 1;
    {
      
#line 4266 
      struct cas *xxxcp_0 = cp;
      
#line 4266 
      cas_unlock_tx(xxxcp_0);
      
#line 4266 
      ldv_spin_unlock_irqrestore_154(& xxxcp_0->lock,flags);
    }
  }
  else ;
  
#line 4269 
  err = -12;
  
#line 4270 
  tmp_0 = cas_tx_tiny_alloc(cp);
  
#line 4270 
  if (tmp_0 < 0) 
#line 4271 
                 goto err_unlock; else ;
  
#line 4274 
  tmp_1 = cas_alloc_rxds(cp);
  
#line 4274 
  if (tmp_1 < 0) 
#line 4275 
                 goto err_tx_tiny; else ;
  
#line 4278 
  cas_spare_init(cp);
  
#line 4279 
  cas_spare_recover(cp,208U);
  
#line 4286 
  tmp_2 = ldv_request_irq_155((cp->pdev)->irq,& cas_interrupt,128UL,(char const *)(& dev->name),(void *)dev);
  
#line 4286 
  if (tmp_2 != 0) {
    
#line 4288 
    netdev_err((struct net_device const *)cp->dev,"failed to request irq !\n");
    
#line 4289 
    err = -11;
    
#line 4290 
    goto err_spare;
  }
  else ;
  {
    
#line 4297 
    struct cas *xxxcp_1 = cp;
    
#line 4297 
    ldv___ldv_spin_lock_156(& xxxcp_1->lock);
    
#line 4297 
    cas_lock_tx(xxxcp_1);
  }
  
#line 4298 
  cas_clean_rings(cp);
  
#line 4299 
  cas_init_hw(cp,hw_was_up == 0);
  
#line 4300 
  cp->opened = 1;
  {
    
#line 4301 
    struct cas *xxxcp_2 = cp;
    
#line 4301 
    cas_unlock_tx(xxxcp_2);
    
#line 4301 
    ldv_spin_unlock_irqrestore_157(& xxxcp_2->lock,flags);
  }
  
#line 4303 
  netif_start_queue(dev);
  
#line 4304 
  ldv_mutex_unlock_158(& cp->pm_mutex);
  
#line 4305 
  __retres = 0;
  
#line 4305 
  goto return_label;
  err_spare: 
#line 4307 
  ;
  
#line 4308 
  cas_spare_free(cp);
  
#line 4309 
  cas_free_rxds(cp);
  err_tx_tiny: 
#line 4310 
  ;
  
#line 4311 
  cas_tx_tiny_free(cp);
  err_unlock: 
#line 4312 
  ;
  
#line 4313 
  ldv_mutex_unlock_159(& cp->pm_mutex);
  
#line 4314 
  __retres = err;
  return_label: 
#line 4314 
                return __retres;
}


#line 4317  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_close(struct net_device *dev)
{
  int __retres;
  unsigned long flags;
  
#line 4320 
  struct cas *cp = netdev_priv((struct net_device const *)dev);
  
#line 4326 
  ldv_mutex_lock_160(& cp->pm_mutex);
  
#line 4328 
  netif_start_queue(dev);
  {
    
#line 4331 
    struct cas *xxxcp = cp;
    
#line 4331 
    ldv___ldv_spin_lock_161(& xxxcp->lock);
    
#line 4331 
    cas_lock_tx(xxxcp);
  }
  
#line 4332 
  cp->opened = 0;
  
#line 4333 
  cas_reset(cp,0);
  
#line 4334 
  cas_phy_init(cp);
  
#line 4335 
  cas_begin_auto_negotiation(cp,(struct ethtool_cmd *)0);
  
#line 4336 
  cas_clean_rings(cp);
  {
    
#line 4337 
    struct cas *xxxcp_0 = cp;
    
#line 4337 
    cas_unlock_tx(xxxcp_0);
    
#line 4337 
    ldv_spin_unlock_irqrestore_162(& xxxcp_0->lock,flags);
  }
  
#line 4339 
  ldv_free_irq_163((cp->pdev)->irq,(void *)dev);
  
#line 4340 
  cas_spare_free(cp);
  
#line 4341 
  cas_free_rxds(cp);
  
#line 4342 
  cas_tx_tiny_free(cp);
  
#line 4343 
  ldv_mutex_unlock_164(& cp->pm_mutex);
  
#line 4344 
  __retres = 0;
  
#line 4344 
  return __retres;
}


#line 4349  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static struct __anonstruct_ethtool_cassini_statnames_372 ethtool_cassini_statnames[16U] = {{.name = {(char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s', (char)'\000'}}, {.name = {(char)'r', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}}, {.name = {(char)'r', (char)'x', (char)'_', (char)'c', (char)'r', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}}, {.name = {(char)'r', (char)'x', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'\000'}}, {.name = {(char)'r', (char)'x', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}}, {.name = {(char)'r', (char)'x', (char)'_', (char)'f', (char)'i', (char)'f', (char)'o', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}}, {.name = {(char)'r', (char)'x', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}}, {.name = {(char)'r', (char)'x', (char)'_', (char)'l', (char)'e', (char)'n', (char)'g', (char)'t', (char)'h', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}}, {.name = {(char)'r', (char)'x', (char)'_', (char)'o', (char)'v', (char)'e', (char)'r', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}}, {.name = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.name = {(char)'t', (char)'x', (char)'_', (char)'a', (char)'b', (char)'o', (char)'r', (char)'t', (char)'e', (char)'d', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}}, {.name = {(char)'t', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}}, {.name = {(char)'t', (char)'x', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'\000'}}, {.name = {(char)'t', (char)'x', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}}, {.name = {(char)'t', (char)'x', (char)'_', (char)'f', (char)'i', (char)'f', (char)'o', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}}, {.name = {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}};

#line 4371  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static struct __anonstruct_ethtool_register_table_373 ethtool_register_table[18U] = {{.offsets = -1}, {.offsets = 0}, {.offsets = 4}, {.offsets = 8}, {.offsets = 4104}, {.offsets = 16384}, {.offsets = 16704}, {.offsets = 24624}, {.offsets = 24628}, {.offsets = 24632}, {.offsets = 24636}, {.offsets = 25104}, {.offsets = 36880}, {.offsets = 4204}, {.offsets = 36868}, {.offsets = 36884}, {.offsets = 25000}, {.offsets = 25004}};

#line 4394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_read_regs(struct cas *cp, u8 *ptr, int len)
{
  u8 *p;
  int i;
  unsigned long flags;
  
#line 4400 
  ldv___ldv_spin_lock_165(& cp->lock);
  
#line 4401 
  i = 0;
  
#line 4401 
  p = ptr;
  
#line 4401 
  goto ldv_53028;
  ldv_53027: 
#line 4402 
  ;
  {
    u16 hval;
    u32 val;
    
#line 4404 
    if (ethtool_register_table[i].offsets < 0) {
      
#line 4405 
      hval = cas_phy_read(cp,- ethtool_register_table[i].offsets);
      
#line 4407 
      val = (unsigned int)hval;
    }
    else 
#line 4409 
         val = readl((void const volatile *)(cp->regs + ethtool_register_table[i].offsets));
    
#line 4411 
    memcpy((void *)p,(void const *)(& val),4UL);
  }
  
#line 4401 
  i += 1;
  
#line 4401 
  p += 4U;
  ldv_53028: 
#line 4402 
  ;
  
#line 4401 
  if (i < len) 
#line 4403 
               goto ldv_53027; else 
#line 4406 
                                    goto ldv_53029;
  ldv_53029: 
#line 4407 
  ;
  
#line 4413 
  ldv_spin_unlock_irqrestore_166(& cp->lock,flags);
  
#line 4414 
  return;
}


#line 4416  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static struct net_device_stats *cas_get_stats(struct net_device *dev)
{
  struct net_device_stats *__retres;
  unsigned long flags;
  int i;
  unsigned long tmp_0;
  unsigned int tmp_1;
  unsigned int tmp_2;
  unsigned int tmp_3;
  unsigned int tmp_4;
  unsigned int tmp_5;
  unsigned int tmp_6;
  
#line 4418 
  struct cas *cp = netdev_priv((struct net_device const *)dev);
  
#line 4419 
  struct net_device_stats *stats = (struct net_device_stats *)(& cp->net_stats);
  
#line 4425 
  if (cp->hw_running == 0) {
    
#line 4426 
    __retres = stats + 4U;
    
#line 4426 
    goto return_label;
  }
  else ;
  
#line 4436 
  ldv___ldv_spin_lock_167(& cp->stat_lock[4]);
  
#line 4438 
  tmp_1 = readl((void const volatile *)(cp->regs + 25028U));
  
#line 4438 
  (stats + 4U)->rx_crc_errors += (unsigned long)(tmp_1 & 65535U);
  
#line 4440 
  tmp_2 = readl((void const volatile *)(cp->regs + 25024U));
  
#line 4440 
  (stats + 4U)->rx_frame_errors += (unsigned long)(tmp_2 & 65535U);
  
#line 4442 
  tmp_3 = readl((void const volatile *)(cp->regs + 25020U));
  
#line 4442 
  (stats + 4U)->rx_length_errors += (unsigned long)(tmp_3 & 65535U);
  
#line 4444 
  tmp_4 = readl((void const volatile *)(cp->regs + 25000U));
  
#line 4444 
  tmp_5 = readl((void const volatile *)(cp->regs + 25004U));
  
#line 4444 
  tmp_0 = (unsigned long)((tmp_4 & 65535U) + (tmp_5 & 65535U));
  
#line 4446 
  (stats + 4U)->tx_aborted_errors += tmp_0;
  
#line 4448 
  tmp_6 = readl((void const volatile *)(cp->regs + 24992U));
  
#line 4448 
  (stats + 4U)->collisions += ((unsigned long)tmp_6 & 65535UL) + tmp_0;
  
#line 4455 
  cas_clear_mac_err(cp);
  
#line 4458 
  ldv_spin_lock_168(& cp->stat_lock[0]);
  
#line 4459 
  (stats + 4U)->collisions += stats->collisions;
  
#line 4460 
  (stats + 4U)->rx_over_errors += stats->rx_over_errors;
  
#line 4461 
  (stats + 4U)->rx_frame_errors += stats->rx_frame_errors;
  
#line 4462 
  (stats + 4U)->rx_fifo_errors += stats->rx_fifo_errors;
  
#line 4463 
  (stats + 4U)->tx_aborted_errors += stats->tx_aborted_errors;
  
#line 4464 
  (stats + 4U)->tx_fifo_errors += stats->tx_fifo_errors;
  
#line 4465 
  ldv_spin_unlock_169(& cp->stat_lock[0]);
  
#line 4467 
  i = 0;
  
#line 4467 
  goto ldv_53039;
  ldv_53038: 
#line 4468 
  ;
  
#line 4468 
  ldv_spin_lock_170(& cp->stat_lock[i]);
  
#line 4469 
  (stats + 4U)->rx_length_errors += (stats + i)->rx_length_errors;
  
#line 4471 
  (stats + 4U)->rx_crc_errors += (stats + i)->rx_crc_errors;
  
#line 4472 
  (stats + 4U)->rx_packets += (stats + i)->rx_packets;
  
#line 4473 
  (stats + 4U)->tx_packets += (stats + i)->tx_packets;
  
#line 4474 
  (stats + 4U)->rx_bytes += (stats + i)->rx_bytes;
  
#line 4475 
  (stats + 4U)->tx_bytes += (stats + i)->tx_bytes;
  
#line 4476 
  (stats + 4U)->rx_errors += (stats + i)->rx_errors;
  
#line 4477 
  (stats + 4U)->tx_errors += (stats + i)->tx_errors;
  
#line 4478 
  (stats + 4U)->rx_dropped += (stats + i)->rx_dropped;
  
#line 4479 
  (stats + 4U)->tx_dropped += (stats + i)->tx_dropped;
  
#line 4480 
  memset((void *)(stats + i),0,184UL);
  
#line 4481 
  ldv_spin_unlock_171(& cp->stat_lock[i]);
  
#line 4467 
  i += 1;
  ldv_53039: 
#line 4468 
  ;
  
#line 4467 
  if (i <= 3) 
#line 4469 
              goto ldv_53038; else 
#line 4472 
                                   goto ldv_53040;
  ldv_53040: 
#line 4473 
  ;
  
#line 4483 
  ldv_spin_unlock_irqrestore_172(& cp->stat_lock[4],flags);
  
#line 4484 
  __retres = stats + 4U;
  return_label: 
#line 4484 
                return __retres;
}


#line 4488  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_set_multicast(struct net_device *dev)
{
  u32 rxcfg;
  u32 rxcfg_new;
  unsigned long flags;
  int tmp_0;
  unsigned int tmp_1;
  int tmp_2;
  unsigned int tmp_3;
  
#line 4490 
  struct cas *cp = netdev_priv((struct net_device const *)dev);
  
#line 4493 
  int limit = 5000;
  
#line 4495 
  if (cp->hw_running == 0) 
#line 4496 
                           goto return_label; else ;
  
#line 4498 
  ldv___ldv_spin_lock_173(& cp->lock);
  
#line 4499 
  rxcfg = readl((void const volatile *)(cp->regs + 24628U));
  
#line 4502 
  writel(rxcfg & 4294967294U,(void volatile *)(cp->regs + 24628U));
  
#line 4503 
  goto ldv_53051;
  ldv_53050: 
#line 4504 
  ;
  
#line 4504 
  tmp_0 = limit;
  
#line 4504 
  limit -= 1;
  
#line 4504 
  ;
  
#line 4504 
  if (tmp_0 == 0) 
#line 4505 
                  goto ldv_53049; else ;
  
#line 4506 
  __const_udelay(42950UL);
  ldv_53051: 
#line 4508 
  ;
  
#line 4503 
  tmp_1 = readl((void const volatile *)(cp->regs + 24628U));
  
#line 4503 
  if ((tmp_1 & 1U) != 0U) 
#line 4505 
                          goto ldv_53050; else 
#line 4508 
                                               goto ldv_53049;
  ldv_53049: 
#line 4509 
  ;
  
#line 4510 
  limit = 5000;
  
#line 4511 
  rxcfg &= 4294967255U;
  
#line 4512 
  writel(rxcfg & 4294967294U,(void volatile *)(cp->regs + 24628U));
  
#line 4513 
  goto ldv_53054;
  ldv_53053: 
#line 4514 
  ;
  
#line 4514 
  tmp_2 = limit;
  
#line 4514 
  limit -= 1;
  
#line 4514 
  ;
  
#line 4514 
  if (tmp_2 == 0) 
#line 4515 
                  goto ldv_53052; else ;
  
#line 4516 
  __const_udelay(42950UL);
  ldv_53054: 
#line 4518 
  ;
  
#line 4513 
  tmp_3 = readl((void const volatile *)(cp->regs + 24628U));
  
#line 4513 
  if ((tmp_3 & 32U) != 0U) 
#line 4515 
                           goto ldv_53053; else 
#line 4518 
                                                goto ldv_53052;
  ldv_53052: 
#line 4519 
  ;
  
#line 4520 
  rxcfg_new = cas_setup_multicast(cp);
  
#line 4520 
  cp->mac_rx_cfg = rxcfg_new;
  
#line 4521 
  rxcfg |= rxcfg_new;
  
#line 4522 
  writel(rxcfg,(void volatile *)(cp->regs + 24628U));
  
#line 4523 
  ldv_spin_unlock_irqrestore_174(& cp->lock,flags);
  return_label: 
#line 4524 
                return;
}


#line 4526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
{
  char const *tmp_0;
  unsigned int tmp_1;
  
#line 4528 
  struct cas *cp = netdev_priv((struct net_device const *)dev);
  
#line 4529 
  strlcpy((char *)(& info->driver),"cassini",32UL);
  
#line 4530 
  strlcpy((char *)(& info->version),"1.6",32UL);
  
#line 4531 
  tmp_0 = pci_name((struct pci_dev const *)cp->pdev);
  
#line 4531 
  ;
  
#line 4531 
  strlcpy((char *)(& info->bus_info),tmp_0,32UL);
  
#line 4532 
  if (72U < (unsigned int)cp->casreg_len) 
#line 4532 
                                          tmp_1 = 72U; else 
#line 4532 
                                                            tmp_1 = (unsigned int)cp->casreg_len;
  
#line 4532 
  info->regdump_len = tmp_1;
  
#line 4534 
  info->n_stats = 16U;
  
#line 4535 
  return;
}


#line 4537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)
{
  int __retres;
  u16 bmcr;
  int full_duplex;
  int speed;
  int pause;
  unsigned long flags;
  
#line 4539 
  struct cas *cp = netdev_priv((struct net_device const *)dev);
  
#line 4543 
  enum link_state linkstate = link_up;
  
#line 4545 
  cmd->advertising = 0U;
  
#line 4546 
  cmd->supported = 64U;
  
#line 4547 
  if ((cp->cas_flags & 1U) != 0U) {
    
#line 4548 
    cmd->supported |= 32U;
    
#line 4549 
    cmd->advertising |= 32U;
  }
  else ;
  
#line 4553 
  ldv___ldv_spin_lock_175(& cp->lock);
  
#line 4554 
  bmcr = (unsigned short)0U;
  
#line 4555 
  linkstate = cp->lstate;
  
#line 4556 
  if ((cp->phy_type & 6) != 0) {
    
#line 4557 
    cmd->port = (unsigned char)2U;
    
#line 4558 
    cmd->transceiver = (unsigned char)((cp->cas_flags & 8U) == 0U);
    
#line 4560 
    cmd->phy_address = (unsigned char)cp->phy_addr;
    
#line 4561 
    cmd->advertising |= 655U;
    
#line 4567 
    cmd->supported |= 655U;
    
#line 4574 
    if (cp->hw_running != 0) {
      
#line 4575 
      cas_mif_poll(cp,0);
      
#line 4576 
      bmcr = cas_phy_read(cp,0);
      
#line 4577 
      cas_read_mii_link_mode(cp,& full_duplex,& speed,& pause);
      
#line 4579 
      cas_mif_poll(cp,1);
    }
    else ;
  }
  else {
    
#line 4583 
    cmd->port = (unsigned char)3U;
    
#line 4584 
    cmd->transceiver = (unsigned char)0U;
    
#line 4585 
    cmd->phy_address = (unsigned char)0U;
    
#line 4586 
    cmd->supported |= 1024U;
    
#line 4587 
    cmd->advertising |= 1024U;
    
#line 4589 
    if (cp->hw_running != 0) {
      unsigned int tmp_0;
      
#line 4591 
      tmp_0 = readl((void const volatile *)(cp->regs + 36864U));
      
#line 4591 
      bmcr = (unsigned short)tmp_0;
      
#line 4592 
      cas_read_pcs_link_mode(cp,& full_duplex,& speed,& pause);
    }
    else ;
  }
  
#line 4596 
  ldv_spin_unlock_irqrestore_176(& cp->lock,flags);
  
#line 4598 
  if (((int)bmcr & 4096) != 0) {
    int tmp_2;
    
#line 4599 
    cmd->advertising |= 64U;
    
#line 4600 
    cmd->autoneg = (unsigned char)1U;
    
#line 4602 
    if (speed != 10) {
      int tmp_1;
      
#line 4601 
      if (speed == 1000) 
#line 4601 
                         tmp_1 = 1000; else 
#line 4601 
                                            tmp_1 = 100;
      
#line 4602 
      tmp_2 = tmp_1;
    }
    else 
#line 4602 
         tmp_2 = 10;
    
#line 4601 
    ;
    
#line 4601 
    ethtool_cmd_speed_set(cmd,(unsigned int)tmp_2);
    
#line 4605 
    cmd->duplex = (unsigned char)(full_duplex != 0);
  }
  else {
    int tmp_4;
    
#line 4607 
    cmd->autoneg = (unsigned char)0U;
    
#line 4609 
    if (((int)bmcr & 64) == 0) {
      int tmp_3;
      
#line 4608 
      if (((int)bmcr & 8192) != 0) 
#line 4608 
                                   tmp_3 = 100; else 
#line 4608 
                                                     tmp_3 = 10;
      
#line 4609 
      tmp_4 = tmp_3;
    }
    else 
#line 4609 
         tmp_4 = 1000;
    
#line 4608 
    ;
    
#line 4608 
    ethtool_cmd_speed_set(cmd,(unsigned int)tmp_4);
    
#line 4612 
    cmd->duplex = (unsigned char)((unsigned int)((unsigned char)((int)bmcr >> 8)) & 1U);
  }
  
#line 4616 
  if (linkstate != (unsigned int)link_up) 
    
#line 4627 
    if ((cp->link_cntl & 4096) != 0) {
      
#line 4628 
      ethtool_cmd_speed_set(cmd,0U);
      
#line 4629 
      cmd->duplex = (unsigned char)255U;
    }
    else {
      
#line 4631 
      ethtool_cmd_speed_set(cmd,10U);
      
#line 4632 
      if ((cp->link_cntl & 8192) != 0) 
#line 4633 
                                       ethtool_cmd_speed_set(cmd,100U);
      else 
        
#line 4634 
        if ((cp->link_cntl & 64) != 0) 
#line 4635 
                                       ethtool_cmd_speed_set(cmd,1000U); else ;
      
#line 4637 
      cmd->duplex = (unsigned char)((unsigned int)((unsigned char)(cp->link_cntl >> 8)) & 1U);
    }
  else ;
  
#line 4641 
  __retres = 0;
  
#line 4641 
  return __retres;
}


#line 4644  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)
{
  int __retres;
  unsigned long flags;
  
#line 4646 
  struct cas *cp = netdev_priv((struct net_device const *)dev);
  
#line 4648 
  u32 speed = ethtool_cmd_speed((struct ethtool_cmd const *)cmd);
  
#line 4651 
  if ((unsigned int)cmd->autoneg > 1U) {
    
#line 4653 
    __retres = -22;
    
#line 4653 
    goto return_label;
  }
  else ;
  
#line 4655 
  if ((unsigned int)cmd->autoneg == 0U && (((speed != 1000U && speed != 100U) && speed != 10U) || (unsigned int)cmd->duplex > 1U)) {
    
#line 4661 
    __retres = -22;
    
#line 4661 
    goto return_label;
  }
  else ;
  
#line 4664 
  ldv___ldv_spin_lock_177(& cp->lock);
  
#line 4665 
  cas_begin_auto_negotiation(cp,cmd);
  
#line 4666 
  ldv_spin_unlock_irqrestore_178(& cp->lock,flags);
  
#line 4667 
  __retres = 0;
  return_label: 
#line 4667 
                return __retres;
}


#line 4670  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_nway_reset(struct net_device *dev)
{
  int __retres;
  unsigned long flags;
  
#line 4672 
  struct cas *cp = netdev_priv((struct net_device const *)dev);
  
#line 4675 
  if ((cp->link_cntl & 4096) == 0) {
    
#line 4676 
    __retres = -22;
    
#line 4676 
    goto return_label;
  }
  else ;
  
#line 4679 
  ldv___ldv_spin_lock_179(& cp->lock);
  
#line 4680 
  cas_begin_auto_negotiation(cp,(struct ethtool_cmd *)0);
  
#line 4681 
  ldv_spin_unlock_irqrestore_180(& cp->lock,flags);
  
#line 4683 
  __retres = 0;
  return_label: 
#line 4683 
                return __retres;
}


#line 4686  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static u32 cas_get_link(struct net_device *dev)
{
  u32 __retres;
  
#line 4688 
  struct cas *cp = netdev_priv((struct net_device const *)dev);
  
#line 4689 
  __retres = (unsigned int)(cp->lstate == (unsigned int)link_up);
  
#line 4689 
  return __retres;
}


#line 4692  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static u32 cas_get_msglevel(struct net_device *dev)
{
  u32 __retres;
  
#line 4694 
  struct cas *cp = netdev_priv((struct net_device const *)dev);
  
#line 4695 
  __retres = cp->msg_enable;
  
#line 4695 
  return __retres;
}


#line 4698  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_set_msglevel(struct net_device *dev, u32 value)
{
  
#line 4700 
  struct cas *cp = netdev_priv((struct net_device const *)dev);
  
#line 4701 
  cp->msg_enable = value;
  
#line 4702 
  return;
}


#line 4704  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_get_regs_len(struct net_device *dev)
{
  int tmp_0;
  
#line 4706 
  struct cas *cp = netdev_priv((struct net_device const *)dev);
  
#line 4707 
  if ((unsigned int)cp->casreg_len <= 71U) 
#line 4707 
                                           tmp_0 = cp->casreg_len; else 
                                                                    
#line 4707 
                                                                    tmp_0 = 72;
  
#line 4707 
  return tmp_0;
}


#line 4710  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_get_regs(struct net_device *dev, struct ethtool_regs *regs, void *p)
{
  
#line 4713 
  struct cas *cp = netdev_priv((struct net_device const *)dev);
  
#line 4714 
  regs->version = 0U;
  
#line 4716 
  cas_read_regs(cp,(u8 *)p,(int)(regs->len / 4U));
  
#line 4717 
  return;
}


#line 4719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_get_sset_count(struct net_device *dev, int sset)
{
  int __retres;
  
#line 4721 
  switch (sset) {
    case 1: 
#line 4722 
    ;
    
#line 4723 
    __retres = 16;
    
#line 4723 
    goto return_label;
    default: 
#line 4724 
    ;
    
#line 4725 
    __retres = -95;
    
#line 4725 
    goto return_label;
  }
  return_label: 
#line 4721 
                return __retres;
}


#line 4729  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_get_strings(struct net_device *dev, u32 stringset, u8 *data)
{
  
#line 4731 
  memcpy((void *)data,(void const *)(& ethtool_cassini_statnames),512UL);
  
#line 4732 
  return;
}


#line 4735  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_get_ethtool_stats(struct net_device *dev, struct ethtool_stats *estats, u64 *data)
{
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  int tmp_5;
  int tmp_6;
  int tmp_7;
  int tmp_8;
  int tmp_9;
  int tmp_10;
  int tmp_11;
  int tmp_12;
  int tmp_13;
  int tmp_14;
  int tmp_15;
  int tmp_16;
  
#line 4738 
  struct cas *cp = netdev_priv((struct net_device const *)dev);
  
#line 4739 
  struct net_device_stats *stats = cas_get_stats(cp->dev);
  
#line 4740 
  int i = 0;
  
#line 4741 
  tmp_1 = i;
  
#line 4741 
  i += 1;
  
#line 4741 
  *(data + tmp_1) = (unsigned long long)stats->collisions;
  
#line 4742 
  tmp_2 = i;
  
#line 4742 
  i += 1;
  
#line 4742 
  *(data + tmp_2) = (unsigned long long)stats->rx_bytes;
  
#line 4743 
  tmp_3 = i;
  
#line 4743 
  i += 1;
  
#line 4743 
  *(data + tmp_3) = (unsigned long long)stats->rx_crc_errors;
  
#line 4744 
  tmp_4 = i;
  
#line 4744 
  i += 1;
  
#line 4744 
  *(data + tmp_4) = (unsigned long long)stats->rx_dropped;
  
#line 4745 
  tmp_5 = i;
  
#line 4745 
  i += 1;
  
#line 4745 
  *(data + tmp_5) = (unsigned long long)stats->rx_errors;
  
#line 4746 
  tmp_6 = i;
  
#line 4746 
  i += 1;
  
#line 4746 
  *(data + tmp_6) = (unsigned long long)stats->rx_fifo_errors;
  
#line 4747 
  tmp_7 = i;
  
#line 4747 
  i += 1;
  
#line 4747 
  *(data + tmp_7) = (unsigned long long)stats->rx_frame_errors;
  
#line 4748 
  tmp_8 = i;
  
#line 4748 
  i += 1;
  
#line 4748 
  *(data + tmp_8) = (unsigned long long)stats->rx_length_errors;
  
#line 4749 
  tmp_9 = i;
  
#line 4749 
  i += 1;
  
#line 4749 
  *(data + tmp_9) = (unsigned long long)stats->rx_over_errors;
  
#line 4750 
  tmp_10 = i;
  
#line 4750 
  i += 1;
  
#line 4750 
  *(data + tmp_10) = (unsigned long long)stats->rx_packets;
  
#line 4751 
  tmp_11 = i;
  
#line 4751 
  i += 1;
  
#line 4751 
  *(data + tmp_11) = (unsigned long long)stats->tx_aborted_errors;
  
#line 4752 
  tmp_12 = i;
  
#line 4752 
  i += 1;
  
#line 4752 
  *(data + tmp_12) = (unsigned long long)stats->tx_bytes;
  
#line 4753 
  tmp_13 = i;
  
#line 4753 
  i += 1;
  
#line 4753 
  *(data + tmp_13) = (unsigned long long)stats->tx_dropped;
  
#line 4754 
  tmp_14 = i;
  
#line 4754 
  i += 1;
  
#line 4754 
  *(data + tmp_14) = (unsigned long long)stats->tx_errors;
  
#line 4755 
  tmp_15 = i;
  
#line 4755 
  i += 1;
  
#line 4755 
  *(data + tmp_15) = (unsigned long long)stats->tx_fifo_errors;
  
#line 4756 
  tmp_16 = i;
  
#line 4756 
  i += 1;
  
#line 4756 
  *(data + tmp_16) = (unsigned long long)stats->tx_packets;
  
#line 4757 
  if ((long)(i != 16) != 0L) {
    
#line 4759 
    ldv_inline_asm();
    
#line 4757 
    ;
  }
  else ;
  
#line 4760 
  return;
}


#line 4760  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static struct ethtool_ops const cas_ethtool_ops = {.get_settings = & cas_get_settings, .set_settings = & cas_set_settings, .get_drvinfo = & cas_get_drvinfo, .get_regs_len = & cas_get_regs_len, .get_regs = & cas_get_regs, .get_wol = (void (*)(struct net_device *, struct ethtool_wolinfo *))0, .set_wol = (int (*)(struct net_device *, struct ethtool_wolinfo *))0, .get_msglevel = & cas_get_msglevel, .set_msglevel = & cas_set_msglevel, .nway_reset = & cas_nway_reset, .get_link = & cas_get_link, .get_eeprom_len = (int (*)(struct net_device *))0, .get_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .set_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .set_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .get_ringparam = (void (*)(struct net_device *, struct ethtool_ringparam *))0, .set_ringparam = (int (*)(struct net_device *, struct ethtool_ringparam *))0, .get_pauseparam = (void (*)(struct net_device *, struct ethtool_pauseparam *))0, .set_pauseparam = (int (*)(struct net_device *, struct ethtool_pauseparam *))0, .self_test = (void (*)(struct net_device *, struct ethtool_test *, u64 *))0, .get_strings = & cas_get_strings, .set_phys_id = (int (*)(struct net_device *, enum ethtool_phys_id_state ))0, .get_ethtool_stats = & cas_get_ethtool_stats, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = & cas_get_sset_count, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = (int (*)(struct net_device *, struct ethtool_ts_info *))0, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 4775  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)
{
  unsigned long flags;
  
#line 4777 
  struct cas *cp = netdev_priv((struct net_device const *)dev);
  
#line 4778 
  struct mii_ioctl_data *data = if_mii(ifr);
  
#line 4780 
  int rc = -95;
  
#line 4785 
  ldv_mutex_lock_181(& cp->pm_mutex);
  
#line 4786 
  switch (cmd) {
    case 35143: 
#line 4787 
    ;
    
#line 4788 
    data->phy_id = (unsigned short)cp->phy_addr;
    case 35144: 
#line 4791 
    ;
    
#line 4792 
    ldv___ldv_spin_lock_182(& cp->lock);
    
#line 4793 
    cas_mif_poll(cp,0);
    
#line 4794 
    data->val_out = cas_phy_read(cp,(int)data->reg_num & 31);
    
#line 4795 
    cas_mif_poll(cp,1);
    
#line 4796 
    ldv_spin_unlock_irqrestore_183(& cp->lock,flags);
    
#line 4797 
    rc = 0;
    
#line 4798 
    goto ldv_53161;
    case 35145: 
#line 4800 
    ;
    
#line 4801 
    ldv___ldv_spin_lock_184(& cp->lock);
    
#line 4802 
    cas_mif_poll(cp,0);
    
#line 4803 
    rc = cas_phy_write(cp,(int)data->reg_num & 31,(unsigned short)((int)data->val_in));
    
#line 4804 
    cas_mif_poll(cp,1);
    
#line 4805 
    ldv_spin_unlock_irqrestore_185(& cp->lock,flags);
    
#line 4806 
    goto ldv_53161;
    default: 
#line 4807 
    ;
    
#line 4808 
    goto ldv_53161;
  }
  ldv_53161: 
#line 4811 
  ;
  
#line 4811 
  ldv_mutex_unlock_186(& cp->pm_mutex);
  
#line 4812 
  return rc;
}


#line 4819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_program_bridge(struct pci_dev *cas_pdev)
{
  u32 val;
  
#line 4821 
  struct pci_dev *pdev = (cas_pdev->bus)->self;
  
#line 4824 
  if (pdev == (struct pci_dev *)0) 
#line 4825 
                                   goto return_label; else ;
  
#line 4827 
  if ((unsigned int)pdev->vendor != 32902U || (unsigned int)pdev->device != 21372U) 
    
#line 4828 
    goto return_label; else ;
  
#line 4835 
  pci_read_config_dword((struct pci_dev const *)pdev,64,& val);
  
#line 4836 
  val &= 4294705151U;
  
#line 4837 
  pci_write_config_dword((struct pci_dev const *)pdev,64,val);
  
#line 4861 
  pci_write_config_word((struct pci_dev const *)pdev,80,(unsigned short)6143);
  
#line 4883 
  pci_write_config_word((struct pci_dev const *)pdev,82,(unsigned short)65535);
  
#line 4891 
  pci_write_config_byte((struct pci_dev const *)pdev,12,(unsigned char)8);
  
#line 4896 
  pci_write_config_byte((struct pci_dev const *)pdev,13,(unsigned char)255);
  return_label: 
#line 4897 
                return;
}


#line 4899  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static struct net_device_ops const cas_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & cas_open, .ndo_stop = & cas_close, .ndo_start_xmit = & cas_start_xmit, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & cas_set_multicast, .ndo_set_mac_address = & eth_mac_addr, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & cas_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & cas_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & cas_tx_timeout, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = & cas_get_stats, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = & cas_netpoll, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = (int (*)(struct net_device *, netdev_features_t ))0, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 4915  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_init_one(struct pci_dev *pdev, struct pci_device_id const *ent)
{
  int __retres;
  unsigned long casreg_len;
  struct net_device *dev;
  struct cas *cp;
  int i;
  int err;
  int pci_using_dac;
  u16 pci_cmd;
  int tmp;
  int tmp_1;
  int tmp_3;
  resource_size_t tmp_4;
  int tmp_6;
  int tmp_7;
  int tmp_9;
  unsigned int tmp_10;
  char *tmp_11;
  char *tmp_12;
  char *tmp_13;
  char *tmp_14;
  
#line 4917 
  int cas_version_printed = 0;
  
#line 4923 
  u8 orig_cacheline_size = (unsigned char)0U;
  
#line 4923 
  u8 cas_cacheline_size = (unsigned char)0U;
  
#line 4925 
  tmp = cas_version_printed;
  
#line 4925 
  cas_version_printed += 1;
  
#line 4925 
  ;
  
#line 4925 
  if (tmp == 0) 
#line 4926 
                printk("\001",(char *)(& version)); else ;
  
#line 4928 
  err = pci_enable_device(pdev);
  
#line 4929 
  if (err != 0) {
    
#line 4930 
    dev_err((struct device const *)(& pdev->dev),"Cannot enable PCI device, aborting\n");
    
#line 4931 
    __retres = err;
    
#line 4931 
    goto return_label;
  }
  else ;
  
#line 4934 
  if ((pdev->resource[0].flags & 512UL) == 0UL) {
    
#line 4935 
    dev_err((struct device const *)(& pdev->dev),"Cannot find proper PCI device ");
    
#line 4937 
    err = -19;
    
#line 4938 
    goto err_out_disable_pdev;
  }
  else ;
  
#line 4941 
  dev = ldv_alloc_etherdev_mqs_187(50064,1U,1U);
  
#line 4942 
  if (dev == (struct net_device *)0) {
    
#line 4943 
    err = -12;
    
#line 4944 
    goto err_out_disable_pdev;
  }
  else ;
  
#line 4946 
  dev->dev.parent = & pdev->dev;
  
#line 4948 
  err = pci_request_regions(pdev,(char const *)(& dev->name));
  
#line 4949 
  if (err != 0) {
    
#line 4950 
    dev_err((struct device const *)(& pdev->dev),"Cannot obtain PCI resources, aborting\n");
    
#line 4951 
    goto err_out_free_netdev;
  }
  else ;
  
#line 4953 
  pci_set_master(pdev);
  
#line 4959 
  pci_read_config_word((struct pci_dev const *)pdev,4,& pci_cmd);
  
#line 4960 
  pci_cmd = (unsigned short)((unsigned int)pci_cmd & 65279U);
  
#line 4961 
  pci_cmd = (unsigned short)((unsigned int)pci_cmd | 64U);
  
#line 4962 
  pci_write_config_word((struct pci_dev const *)pdev,4,(unsigned short)((int)pci_cmd));
  
#line 4963 
  tmp_1 = pci_try_set_mwi(pdev);
  
#line 4963 
  if (tmp_1 != 0) {
    char const *tmp_0;
    
#line 4964 
    tmp_0 = pci_name((struct pci_dev const *)pdev);
    
#line 4964 
    printk("\001",tmp_0);
  }
  else ;
  
#line 4966 
  cas_program_bridge(pdev);
  
#line 4975 
  pci_read_config_byte((struct pci_dev const *)pdev,12,& orig_cacheline_size);
  
#line 4977 
  if ((unsigned int)orig_cacheline_size <= 31U) {
    int tmp_2;
    
#line 4978 
    cas_cacheline_size = (unsigned char)32U;
    
#line 4981 
    tmp_2 = pci_write_config_byte((struct pci_dev const *)pdev,12,(unsigned char)((int)cas_cacheline_size));
    
#line 4981 
    if (tmp_2 != 0) {
      
#line 4984 
      dev_err((struct device const *)(& pdev->dev),"Could not set PCI cache ");
      
#line 4986 
      goto err_write_cacheline;
    }
    else ;
  }
  else ;
  
#line 4993 
  tmp_3 = pci_set_dma_mask(pdev,18446744073709551615ULL);
  
#line 4993 
  if (tmp_3 == 0) {
    
#line 4994 
    pci_using_dac = 1;
    
#line 4995 
    err = pci_set_consistent_dma_mask(pdev,18446744073709551615ULL);
    
#line 4997 
    if (err < 0) {
      
#line 4998 
      dev_err((struct device const *)(& pdev->dev),"Unable to obtain 64-bit DMA ");
      
#line 5000 
      goto err_out_free_res;
    }
    else ;
  }
  else {
    
#line 5004 
    err = pci_set_dma_mask(pdev,4294967295ULL);
    
#line 5005 
    if (err != 0) {
      
#line 5006 
      dev_err((struct device const *)(& pdev->dev),"No usable DMA configuration, ");
      
#line 5008 
      goto err_out_free_res;
    }
    else ;
    
#line 5010 
    pci_using_dac = 0;
  }
  
#line 5013 
  if (pdev->resource[0].start != 0ULL || pdev->resource[0].end != pdev->resource[0].start) 
    
#line 5013 
    tmp_4 = (pdev->resource[0].end - pdev->resource[0].start) + 1ULL; else 
                                                                    
#line 5013 
                                                                    tmp_4 = 0ULL;
  
#line 5013 
  casreg_len = (unsigned long)tmp_4;
  
#line 5015 
  cp = (struct cas *)netdev_priv((struct net_device const *)dev);
  
#line 5016 
  cp->pdev = pdev;
  
#line 5019 
  if ((unsigned int)cas_cacheline_size != 0U) 
#line 5019 
                                              cp->orig_cacheline_size = orig_cacheline_size; else 
                                                                    
#line 5019 
                                                                    cp->orig_cacheline_size = (unsigned char)0U;
  
#line 5021 
  cp->dev = dev;
  
#line 5022 
  if (cassini_debug >= 0) 
#line 5022 
                          tmp_6 = cassini_debug; else 
#line 5022 
                                                      tmp_6 = 255;
  
#line 5022 
  cp->msg_enable = (unsigned int)tmp_6;
  
#line 5029 
  cp->link_transition = 0;
  
#line 5030 
  cp->link_transition_jiffies_valid = 0;
  
#line 5032 
  spinlock_check(& cp->lock);
  {
    struct lock_class_key __key;
    
#line 5032 
    __raw_spin_lock_init(& cp->lock.__anonCompField_spinlock_18.rlock,"&(&cp->lock)->rlock",& __key);
  }
  
#line 5033 
  spinlock_check(& cp->rx_inuse_lock);
  {
    struct lock_class_key __key_0;
    
#line 5033 
    __raw_spin_lock_init(& cp->rx_inuse_lock.__anonCompField_spinlock_18.rlock,"&(&cp->rx_inuse_lock)->rlock",& __key_0);
  }
  
#line 5034 
  spinlock_check(& cp->rx_spare_lock);
  {
    struct lock_class_key __key_1;
    
#line 5034 
    __raw_spin_lock_init(& cp->rx_spare_lock.__anonCompField_spinlock_18.rlock,"&(&cp->rx_spare_lock)->rlock",& __key_1);
  }
  
#line 5035 
  i = 0;
  
#line 5035 
  goto ldv_53194;
  ldv_53193: 
#line 5036 
  ;
  
#line 5036 
  spinlock_check(& cp->stat_lock[i]);
  {
    struct lock_class_key __key_2;
    
#line 5036 
    __raw_spin_lock_init(& cp->stat_lock[i].__anonCompField_spinlock_18.rlock,"&(&cp->stat_lock[i])->rlock",& __key_2);
  }
  
#line 5037 
  spinlock_check(& cp->tx_lock[i]);
  {
    struct lock_class_key __key_3;
    
#line 5037 
    __raw_spin_lock_init(& cp->tx_lock[i].__anonCompField_spinlock_18.rlock,"&(&cp->tx_lock[i])->rlock",& __key_3);
  }
  
#line 5035 
  i += 1;
  ldv_53194: 
#line 5036 
  ;
  
#line 5035 
  if (i <= 3) 
#line 5037 
              goto ldv_53193; else 
#line 5040 
                                   goto ldv_53195;
  ldv_53195: 
#line 5041 
  ;
  
#line 5039 
  spinlock_check(& cp->stat_lock[4]);
  {
    struct lock_class_key __key_4;
    
#line 5039 
    __raw_spin_lock_init(& cp->stat_lock[4].__anonCompField_spinlock_18.rlock,"&(&cp->stat_lock[(1 << 2)])->rlock",& __key_4);
  }
  {
    struct lock_class_key __key_5;
    
#line 5040 
    __mutex_init(& cp->pm_mutex,"&cp->pm_mutex",& __key_5);
  }
  {
    struct lock_class_key __key_6;
    
#line 5042 
    init_timer_key(& cp->link_timer,0U,"(&cp->link_timer)",& __key_6);
  }
  
#line 5043 
  cp->link_timer.function = & cas_link_timer;
  
#line 5044 
  cp->link_timer.data = (unsigned long)cp;
  
#line 5050 
  atomic_set(& cp->reset_task_pending,0);
  
#line 5051 
  atomic_set(& cp->reset_task_pending_all,0);
  
#line 5052 
  atomic_set(& cp->reset_task_pending_spare,0);
  
#line 5053 
  atomic_set(& cp->reset_task_pending_mtu,0);
  {
    struct lock_class_key __key_7;
    
#line 5055 
    __init_work(& cp->reset_task,0);
    
#line 5055 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 5055 
    cp->reset_task.data = __constr_expr_37;
    
#line 5055 
    lockdep_init_map(& cp->reset_task.lockdep_map,"(&cp->reset_task)",& __key_7,0);
    
#line 5055 
    INIT_LIST_HEAD(& cp->reset_task.entry);
    
#line 5055 
    cp->reset_task.func = & cas_reset_task;
  }
  
#line 5058 
  if ((unsigned int)link_mode <= 5U) 
#line 5059 
                                     cp->link_cntl = (int)link_modes[link_mode]; else 
                                                                    
#line 5061 
                                                                    cp->link_cntl = 4096;
  
#line 5062 
  cp->lstate = link_down;
  
#line 5063 
  cp->link_transition = 5;
  
#line 5064 
  netif_carrier_off(cp->dev);
  
#line 5065 
  cp->timer_ticks = 0;
  
#line 5068 
  cp->regs = pci_iomap(pdev,0,casreg_len);
  
#line 5069 
  if (cp->regs == (void *)0) {
    
#line 5070 
    dev_err((struct device const *)(& pdev->dev),"Cannot map device registers, aborting\n");
    
#line 5071 
    goto err_out_free_res;
  }
  else ;
  
#line 5073 
  cp->casreg_len = (int)casreg_len;
  
#line 5075 
  pci_save_state(pdev);
  
#line 5076 
  cas_check_pci_invariants(cp);
  
#line 5077 
  cas_hard_reset(cp);
  
#line 5078 
  cas_reset(cp,0);
  
#line 5079 
  tmp_7 = cas_check_invariants(cp);
  
#line 5079 
  if (tmp_7 != 0) 
#line 5080 
                  goto err_out_iounmap; else ;
  
#line 5081 
  if ((cp->cas_flags & 8U) != 0U) 
#line 5082 
                                  cas_saturn_firmware_init(cp); else ;
  
#line 5084 
  cp->init_block = (struct cas_init_block *)pci_alloc_consistent(pdev,114696UL,& cp->block_dvma);
  
#line 5087 
  if (cp->init_block == (struct cas_init_block *)0) {
    
#line 5088 
    dev_err((struct device const *)(& pdev->dev),"Cannot allocate init block, aborting\n");
    
#line 5089 
    goto err_out_iounmap;
  }
  else ;
  
#line 5092 
  i = 0;
  
#line 5092 
  goto ldv_53203;
  ldv_53202: 
#line 5093 
  ;
  
#line 5093 
  cp->init_txds[i] = (struct cas_tx_desc *)(& (cp->init_block)->txds[i]);
  
#line 5092 
  i += 1;
  ldv_53203: 
#line 5093 
  ;
  
#line 5092 
  if (i <= 3) 
#line 5094 
              goto ldv_53202; else 
#line 5097 
                                   goto ldv_53204;
  ldv_53204: 
#line 5098 
  ;
  
#line 5095 
  i = 0;
  
#line 5095 
  goto ldv_53206;
  ldv_53205: 
#line 5096 
  ;
  
#line 5096 
  cp->init_rxds[i] = (struct cas_rx_desc *)(& (cp->init_block)->rxds[i]);
  
#line 5095 
  i += 1;
  ldv_53206: 
#line 5096 
  ;
  
#line 5095 
  if (i <= 1) 
#line 5097 
              goto ldv_53205; else 
#line 5100 
                                   goto ldv_53207;
  ldv_53207: 
#line 5101 
  ;
  
#line 5098 
  i = 0;
  
#line 5098 
  goto ldv_53209;
  ldv_53208: 
#line 5099 
  ;
  
#line 5099 
  cp->init_rxcs[i] = (struct cas_rx_comp *)(& (cp->init_block)->rxcs[i]);
  
#line 5098 
  i += 1;
  ldv_53209: 
#line 5099 
  ;
  
#line 5098 
  if (i <= 0) 
#line 5100 
              goto ldv_53208; else 
#line 5103 
                                   goto ldv_53210;
  ldv_53210: 
#line 5104 
  ;
  
#line 5101 
  i = 0;
  
#line 5101 
  goto ldv_53212;
  ldv_53211: 
#line 5102 
  ;
  
#line 5102 
  skb_queue_head_init(& cp->rx_flows[i]);
  
#line 5101 
  i += 1;
  ldv_53212: 
#line 5102 
  ;
  
#line 5101 
  if (i <= 63) 
#line 5103 
               goto ldv_53211; else 
#line 5106 
                                    goto ldv_53213;
  ldv_53213: 
#line 5107 
  ;
  
#line 5104 
  dev->netdev_ops = & cas_netdev_ops;
  
#line 5105 
  dev->ethtool_ops = & cas_ethtool_ops;
  
#line 5106 
  dev->watchdog_timeo = 250;
  
#line 5111 
  dev->irq = (int)pdev->irq;
  
#line 5112 
  dev->dma = (unsigned char)0U;
  
#line 5115 
  if ((cp->cas_flags & 512U) == 0U) 
#line 5116 
                                    dev->features |= 9ULL; else ;
  
#line 5118 
  if (pci_using_dac != 0) 
#line 5119 
                          dev->features |= 32ULL; else ;
  
#line 5121 
  tmp_9 = ldv_register_netdev_188(dev);
  
#line 5121 
  if (tmp_9 != 0) {
    
#line 5122 
    dev_err((struct device const *)(& pdev->dev),"Cannot register net device, aborting\n");
    
#line 5123 
    goto err_out_free_consistent;
  }
  else ;
  
#line 5126 
  tmp_10 = readl((void const volatile *)(cp->regs + 4104U));
  
#line 5126 
  i = (int)tmp_10;
  
#line 5127 
  ;
  
#line 5127 
  ;
  
#line 5130 
  if (cp->phy_type == 1) 
#line 5130 
                         tmp_11 = (char *)"Fi"; else 
#line 5130 
                                                     tmp_11 = (char *)"Cu";
  
#line 5129 
  if ((i & 8) != 0) 
#line 5129 
                    tmp_12 = (char *)"66"; else 
#line 5129 
                                                tmp_12 = (char *)"33";
  
#line 5128 
  if ((i & 16) != 0) 
#line 5128 
                     tmp_13 = (char *)"32"; else 
#line 5128 
                                                 tmp_13 = (char *)"64";
  
#line 5127 
  if ((cp->cas_flags & 2U) != 0U) 
#line 5127 
                                  tmp_14 = (char *)"+"; else 
#line 5127 
                                                             tmp_14 = (char *)"";
  
#line 5127 
  ;
  
#line 5127 
  netdev_info((struct net_device const *)dev,"Sun Cassini%s (%sbit/%sMHz PCI/%s) Ethernet[%d] %pM\n",tmp_14,tmp_13,tmp_12,tmp_11,pdev->irq,dev->dev_addr);
  
#line 5134 
  pci_set_drvdata(pdev,(void *)dev);
  
#line 5135 
  cp->hw_running = 1;
  
#line 5136 
  cas_entropy_gather(cp);
  
#line 5137 
  cas_phy_init(cp);
  
#line 5138 
  cas_begin_auto_negotiation(cp,(struct ethtool_cmd *)0);
  
#line 5139 
  __retres = 0;
  
#line 5139 
  goto return_label;
  err_out_free_consistent: 
#line 5141 
  ;
  
#line 5142 
  pci_free_consistent(pdev,114696UL,(void *)cp->init_block,cp->block_dvma);
  err_out_iounmap: 
#line 5145 
  ;
  
#line 5146 
  ldv_mutex_lock_189(& cp->pm_mutex);
  
#line 5147 
  if (cp->hw_running != 0) 
#line 5148 
                           cas_shutdown(cp); else ;
  
#line 5149 
  ldv_mutex_unlock_190(& cp->pm_mutex);
  
#line 5151 
  pci_iounmap(pdev,cp->regs);
  err_out_free_res: 
#line 5154 
  ;
  
#line 5155 
  pci_release_regions(pdev);
  err_write_cacheline: 
#line 5157 
  ;
  
#line 5161 
  pci_write_config_byte((struct pci_dev const *)pdev,12,(unsigned char)((int)orig_cacheline_size));
  err_out_free_netdev: 
#line 5163 
  ;
  
#line 5164 
  ldv_free_netdev_191(dev);
  err_out_disable_pdev: 
#line 5166 
  ;
  
#line 5167 
  pci_disable_device(pdev);
  
#line 5168 
  __retres = -19;
  return_label: 
#line 5168 
                return __retres;
}


#line 5171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_remove_one(struct pci_dev *pdev)
{
  struct cas *cp;
  
#line 5173 
  struct net_device *dev = pci_get_drvdata(pdev);
  
#line 5175 
  if (dev == (struct net_device *)0) 
#line 5176 
                                     goto return_label; else ;
  
#line 5178 
  cp = (struct cas *)netdev_priv((struct net_device const *)dev);
  
#line 5179 
  ldv_unregister_netdev_192(dev);
  
#line 5181 
  vfree((void const *)cp->fw_data);
  
#line 5183 
  ldv_mutex_lock_193(& cp->pm_mutex);
  
#line 5184 
  cancel_work_sync(& cp->reset_task);
  
#line 5185 
  if (cp->hw_running != 0) 
#line 5186 
                           cas_shutdown(cp); else ;
  
#line 5187 
  ldv_mutex_unlock_194(& cp->pm_mutex);
  
#line 5190 
  if ((unsigned int)cp->orig_cacheline_size != 0U) 
#line 5194 
                                                   pci_write_config_byte((struct pci_dev const *)pdev,12,(unsigned char)((int)cp->orig_cacheline_size)); else ;
  
#line 5198 
  pci_free_consistent(pdev,114696UL,(void *)cp->init_block,cp->block_dvma);
  
#line 5200 
  pci_iounmap(pdev,cp->regs);
  
#line 5201 
  ldv_free_netdev_195(dev);
  
#line 5202 
  pci_release_regions(pdev);
  
#line 5203 
  pci_disable_device(pdev);
  return_label: 
#line 5204 
                return;
}


#line 5207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_suspend(struct pci_dev *pdev, pm_message_t state)
{
  int __retres;
  unsigned long flags;
  
#line 5209 
  struct net_device *dev = pci_get_drvdata(pdev);
  
#line 5210 
  struct cas *cp = netdev_priv((struct net_device const *)dev);
  
#line 5213 
  ldv_mutex_lock_196(& cp->pm_mutex);
  
#line 5216 
  if (cp->opened != 0) {
    
#line 5217 
    netif_device_detach(dev);
    {
      
#line 5219 
      struct cas *xxxcp = cp;
      
#line 5219 
      ldv___ldv_spin_lock_197(& xxxcp->lock);
      
#line 5219 
      cas_lock_tx(xxxcp);
    }
    
#line 5226 
    cas_reset(cp,0);
    
#line 5227 
    cas_clean_rings(cp);
    {
      
#line 5228 
      struct cas *xxxcp_0 = cp;
      
#line 5228 
      cas_unlock_tx(xxxcp_0);
      
#line 5228 
      ldv_spin_unlock_irqrestore_198(& xxxcp_0->lock,flags);
    }
  }
  else ;
  
#line 5231 
  if (cp->hw_running != 0) 
#line 5232 
                           cas_shutdown(cp); else ;
  
#line 5233 
  ldv_mutex_unlock_199(& cp->pm_mutex);
  
#line 5235 
  __retres = 0;
  
#line 5235 
  return __retres;
}


#line 5238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_resume(struct pci_dev *pdev)
{
  int __retres;
  
#line 5240 
  struct net_device *dev = pci_get_drvdata(pdev);
  
#line 5241 
  struct cas *cp = netdev_priv((struct net_device const *)dev);
  
#line 5243 
  netdev_info((struct net_device const *)dev,"resuming\n");
  
#line 5245 
  ldv_mutex_lock_200(& cp->pm_mutex);
  
#line 5246 
  cas_hard_reset(cp);
  
#line 5247 
  if (cp->opened != 0) {
    unsigned long flags;
    {
      
#line 5249 
      struct cas *xxxcp = cp;
      
#line 5249 
      ldv___ldv_spin_lock_201(& xxxcp->lock);
      
#line 5249 
      cas_lock_tx(xxxcp);
    }
    
#line 5250 
    cas_reset(cp,0);
    
#line 5251 
    cp->hw_running = 1;
    
#line 5252 
    cas_clean_rings(cp);
    
#line 5253 
    cas_init_hw(cp,1);
    {
      
#line 5254 
      struct cas *xxxcp_0 = cp;
      
#line 5254 
      cas_unlock_tx(xxxcp_0);
      
#line 5254 
      ldv_spin_unlock_irqrestore_202(& xxxcp_0->lock,flags);
    }
    
#line 5256 
    netif_device_attach(dev);
  }
  else ;
  
#line 5258 
  ldv_mutex_unlock_203(& cp->pm_mutex);
  
#line 5259 
  __retres = 0;
  
#line 5259 
  return __retres;
}


#line 5263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static struct pci_driver cas_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "cassini", .id_table = (struct pci_device_id const *)(& cas_pci_tbl), .probe = & cas_init_one, .remove = & cas_remove_one, .suspend = & cas_suspend, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = & cas_resume, .shutdown = (void (*)(struct pci_dev *))0, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = (struct pci_error_handlers const *)0, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = (struct dev_pm_ops const *)0, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 5274  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static int cas_init(void)
{
  int tmp;
  
#line 5276 
  if (linkdown_timeout > 0) 
#line 5277 
                            link_transition_timeout = linkdown_timeout * 250; else 
                                                                    
#line 5279 
                                                                    link_transition_timeout = 0;
  
#line 5281 
  tmp = ldv___pci_register_driver_204(& cas_driver,& __this_module,"cassini");
  
#line 5281 
  return tmp;
}


#line 5284  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/sun/cassini.c"
static void cas_cleanup(void)
{
  
#line 5286 
  ldv_pci_unregister_driver_205(& cas_driver);
  
#line 5287 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
int (*ldv_emg_alias_eth_mac_addr_21)(struct net_device *, void *) = & eth_mac_addr;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
int (*ldv_emg_alias_eth_validate_addr_9)(struct net_device *) = & eth_validate_addr;

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
struct pci_driver *ldv_emg_alias_cas_driver_2 = & cas_driver;

#line 61 
int ldv_emg_del_timer_sync(struct timer_list *arg0);


#line 62 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 63 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 64 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 65 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 66 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 67 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 68 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 69 
_Bool ldv_emg_flush_work(struct work_struct *arg0);


#line 70 
_Bool ldv_emg_schedule_work(struct work_struct *arg0);


#line 71 
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1);


#line 72 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
void ldv_emg_wrapper_cas_get_regs_11(struct net_device *arg0, struct ethtool_regs *arg1, void *arg2)
{
  
#line 77 
  cas_get_regs(arg0,arg1,arg2);
  
#line 78 
  return;
}


#line 81  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
void ldv_emg_cas_cleanup(void)
{
  
#line 82 
  cas_cleanup();
  
#line 83 
  return;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
void ldv_emg_wrapper_cas_set_multicast_22(struct net_device *arg0)
{
  
#line 86 
  cas_set_multicast(arg0);
  
#line 87 
  return;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
int ldv_emg_wrapper_cas_get_regs_len_18(struct net_device *arg0)
{
  int tmp;
  
#line 91 
  tmp = cas_get_regs_len(arg0);
  
#line 91 
  return tmp;
}


#line 95  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
int ldv_emg_wrapper_cas_ioctl_7(struct net_device *arg0, struct ifreq *arg1, int arg2)
{
  int tmp;
  
#line 96 
  tmp = cas_ioctl(arg0,arg1,arg2);
  
#line 96 
  return tmp;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
void ldv_emg_wrapper_cas_netpoll_12(struct net_device *arg0)
{
  
#line 101 
  cas_netpoll(arg0);
  
#line 102 
  return;
}


#line 105  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
int ldv_emg_wrapper_cas_get_settings_2(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 106 
  tmp = cas_get_settings(arg0,arg1);
  
#line 106 
  return tmp;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
int ldv_emg_cas_init(void)
{
  int tmp;
  
#line 111 
  tmp = cas_init();
  
#line 111 
  return tmp;
}


#line 114  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
unsigned int ldv_emg_wrapper_cas_get_link_4(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 115 
  tmp = cas_get_link(arg0);
  
#line 115 
  return tmp;
}


#line 119  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
void ldv_emg_wrapper_cas_tx_timeout_3(struct net_device *arg0)
{
  
#line 120 
  cas_tx_timeout(arg0);
  
#line 121 
  return;
}


#line 124  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
int ldv_emg_wrapper_cas_close_2(struct net_device *arg0)
{
  int tmp;
  
#line 125 
  tmp = cas_close(arg0);
  
#line 125 
  return tmp;
}


#line 129  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
enum netdev_tx ldv_emg_wrapper_cas_start_xmit_20(struct sk_buff *arg0, struct net_device *arg1)
{
  enum netdev_tx tmp;
  
#line 130 
  tmp = cas_start_xmit(arg0,arg1);
  
#line 130 
  return tmp;
}


#line 134  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
int ldv_emg_wrapper_cas_nway_reset_16(struct net_device *arg0)
{
  int tmp;
  
#line 135 
  tmp = cas_nway_reset(arg0);
  
#line 135 
  return tmp;
}


#line 139  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
int ldv_emg_wrapper_cas_suspend_3(struct pci_dev *arg0, struct pm_message arg1)
{
  int tmp;
  
#line 140 
  tmp = cas_suspend(arg0,arg1);
  
#line 140 
  return tmp;
}


#line 144  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
int ldv_emg_wrapper_cas_resume_5(struct pci_dev *arg0)
{
  int tmp;
  
#line 145 
  tmp = cas_resume(arg0);
  
#line 145 
  return tmp;
}


#line 149  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
int ldv_emg_wrapper_cas_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 150 
  tmp = cas_open(arg0);
  
#line 150 
  return tmp;
}


#line 154  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
int ldv_emg_wrapper_cas_init_one_2(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 155 
  tmp = cas_init_one(arg0,(struct pci_device_id const *)arg1);
  
#line 155 
  return tmp;
}


#line 159  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
struct net_device_stats *ldv_emg_wrapper_cas_get_stats_15(struct net_device *arg0)
{
  struct net_device_stats *tmp;
  
#line 160 
  tmp = cas_get_stats(arg0);
  
#line 160 
  return tmp;
}


#line 164  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
void ldv_emg_wrapper_cas_get_ethtool_stats_8(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  
#line 165 
  cas_get_ethtool_stats(arg0,arg1,arg2);
  
#line 166 
  return;
}


#line 169  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
int ldv_emg_wrapper_cas_change_mtu_6(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 170 
  tmp = cas_change_mtu(arg0,arg1);
  
#line 170 
  return tmp;
}


#line 174  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
enum irqreturn ldv_emg_wrapper_cas_interrupt_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 175 
  tmp = cas_interrupt(arg0,arg1);
  
#line 175 
  return tmp;
}


#line 179  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
void ldv_emg_wrapper_cas_get_strings_5(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  
#line 180 
  cas_get_strings(arg0,arg1,arg2);
  
#line 181 
  return;
}


#line 184  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
unsigned int ldv_emg_wrapper_cas_get_msglevel_19(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 185 
  tmp = cas_get_msglevel(arg0);
  
#line 185 
  return tmp;
}


#line 189  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
void ldv_emg_wrapper_cas_set_msglevel_17(struct net_device *arg0, unsigned int arg1)
{
  
#line 190 
  cas_set_msglevel(arg0,arg1);
  
#line 191 
  return;
}


#line 194  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
int ldv_emg_wrapper_cas_set_settings_10(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 195 
  tmp = cas_set_settings(arg0,arg1);
  
#line 195 
  return tmp;
}


#line 199  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
void ldv_emg_wrapper_cas_remove_one_4(struct pci_dev *arg0)
{
  
#line 200 
  cas_remove_one(arg0);
  
#line 201 
  return;
}


#line 204  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
int ldv_emg_wrapper_cas_get_sset_count_13(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 205 
  tmp = cas_get_sset_count(arg0,arg1);
  
#line 205 
  return tmp;
}


#line 209  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
void ldv_emg_wrapper_cas_get_drvinfo_14(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 210 
  cas_get_drvinfo(arg0,arg1);
  
#line 211 
  return;
}


#line 254  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void atomic_sub(int i, atomic_t *v)
{
  
#line 257 
  ldv_atomic_sub(i,v);
  
#line 258 
  return;
}


#line 268  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void atomic_inc(atomic_t *v)
{
  
#line 271 
  ldv_atomic_inc(v);
  
#line 272 
  return;
}


#line 275  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void atomic_dec(atomic_t *v)
{
  
#line 278 
  ldv_atomic_dec(v);
  
#line 279 
  return;
}


#line 583  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 586 
  tmp = ldv_kmalloc(size,flags);
  
#line 586 
  return tmp;
}


#line 895  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv___ldv_spin_lock_73(spinlock_t *ldv_func_arg1)
{
  
#line 899 
  ldv_spin_model_lock((char *)"NOT_ARG_SIGN");
  
#line 901 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 902 
  return;
}


#line 915  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_75(spinlock_t *lock)
{
  
#line 919 
  ldv_spin_model_unlock((char *)"NOT_ARG_SIGN");
  
#line 921 
  spin_unlock(lock);
  
#line 922 
  return;
}


#line 935  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_77(spinlock_t *lock)
{
  
#line 939 
  ldv_spin_model_lock((char *)"rx_inuse_lock_of_cas");
  
#line 941 
  spin_lock(lock);
  
#line 942 
  return;
}


#line 945  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_78(spinlock_t *lock)
{
  
#line 949 
  ldv_spin_model_unlock((char *)"rx_inuse_lock_of_cas");
  
#line 951 
  spin_unlock(lock);
  
#line 952 
  return;
}


#line 955  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_79(spinlock_t *lock)
{
  
#line 959 
  ldv_spin_model_lock((char *)"rx_spare_lock_of_cas");
  
#line 961 
  spin_lock(lock);
  
#line 962 
  return;
}


#line 965  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_80(spinlock_t *lock)
{
  
#line 969 
  ldv_spin_model_unlock((char *)"rx_spare_lock_of_cas");
  
#line 971 
  spin_unlock(lock);
  
#line 972 
  return;
}


#line 975  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_81(spinlock_t *lock)
{
  
#line 979 
  ldv_spin_model_lock((char *)"rx_spare_lock_of_cas");
  
#line 981 
  spin_lock(lock);
  
#line 982 
  return;
}


#line 985  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_82(spinlock_t *lock)
{
  
#line 989 
  ldv_spin_model_unlock((char *)"rx_spare_lock_of_cas");
  
#line 991 
  spin_unlock(lock);
  
#line 992 
  return;
}


#line 995  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_83(spinlock_t *lock)
{
  
#line 999 
  ldv_spin_model_lock((char *)"rx_inuse_lock_of_cas");
  
#line 1001 
  spin_lock(lock);
  
#line 1002 
  return;
}


#line 1005  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_84(spinlock_t *lock)
{
  
#line 1009 
  ldv_spin_model_unlock((char *)"rx_inuse_lock_of_cas");
  
#line 1011 
  spin_unlock(lock);
  
#line 1012 
  return;
}


#line 1015  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_85(spinlock_t *lock)
{
  
#line 1019 
  ldv_spin_model_lock((char *)"rx_inuse_lock_of_cas");
  
#line 1021 
  spin_lock(lock);
  
#line 1022 
  return;
}


#line 1025  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_86(spinlock_t *lock)
{
  
#line 1029 
  ldv_spin_model_unlock((char *)"rx_inuse_lock_of_cas");
  
#line 1031 
  spin_unlock(lock);
  
#line 1032 
  return;
}


#line 1035  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_87(spinlock_t *lock)
{
  
#line 1039 
  ldv_spin_model_lock((char *)"rx_spare_lock_of_cas");
  
#line 1041 
  spin_lock(lock);
  
#line 1042 
  return;
}


#line 1045  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_88(spinlock_t *lock)
{
  
#line 1049 
  ldv_spin_model_unlock((char *)"rx_spare_lock_of_cas");
  
#line 1051 
  spin_unlock(lock);
  
#line 1052 
  return;
}


#line 1055  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_89(spinlock_t *lock)
{
  
#line 1059 
  ldv_spin_model_unlock((char *)"rx_spare_lock_of_cas");
  
#line 1061 
  spin_unlock(lock);
  
#line 1062 
  return;
}


#line 1065  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_90(spinlock_t *lock)
{
  
#line 1069 
  ldv_spin_model_lock((char *)"rx_inuse_lock_of_cas");
  
#line 1071 
  spin_lock(lock);
  
#line 1072 
  return;
}


#line 1075  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_91(spinlock_t *lock)
{
  
#line 1079 
  ldv_spin_model_unlock((char *)"rx_inuse_lock_of_cas");
  
#line 1081 
  spin_unlock(lock);
  
#line 1082 
  return;
}


#line 1085  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_92(spinlock_t *lock)
{
  
#line 1089 
  ldv_spin_model_lock((char *)"rx_spare_lock_of_cas");
  
#line 1091 
  spin_lock(lock);
  
#line 1092 
  return;
}


#line 1095  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_93(spinlock_t *lock)
{
  
#line 1099 
  ldv_spin_model_unlock((char *)"rx_spare_lock_of_cas");
  
#line 1101 
  spin_unlock(lock);
  
#line 1102 
  return;
}


#line 1105  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_94(spinlock_t *lock)
{
  
#line 1109 
  ldv_spin_model_lock((char *)"rx_spare_lock_of_cas");
  
#line 1111 
  spin_lock(lock);
  
#line 1112 
  return;
}


#line 1115  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_95(spinlock_t *lock)
{
  
#line 1119 
  ldv_spin_model_unlock((char *)"rx_spare_lock_of_cas");
  
#line 1121 
  spin_unlock(lock);
  
#line 1122 
  return;
}


#line 1125  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_96(spinlock_t *lock)
{
  
#line 1129 
  ldv_spin_model_lock((char *)"rx_spare_lock_of_cas");
  
#line 1131 
  spin_lock(lock);
  
#line 1132 
  return;
}


#line 1135  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_97(spinlock_t *lock)
{
  
#line 1139 
  ldv_spin_model_unlock((char *)"rx_spare_lock_of_cas");
  
#line 1141 
  spin_unlock(lock);
  
#line 1142 
  return;
}


#line 1145  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_98(spinlock_t *lock)
{
  
#line 1149 
  ldv_spin_model_lock((char *)"rx_spare_lock_of_cas");
  
#line 1151 
  spin_lock(lock);
  
#line 1152 
  return;
}


#line 1155  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_99(spinlock_t *lock)
{
  
#line 1159 
  ldv_spin_model_unlock((char *)"rx_spare_lock_of_cas");
  
#line 1161 
  spin_unlock(lock);
  
#line 1162 
  return;
}


#line 1165  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_100(spinlock_t *lock)
{
  
#line 1169 
  ldv_spin_model_unlock((char *)"rx_spare_lock_of_cas");
  
#line 1171 
  spin_unlock(lock);
  
#line 1172 
  return;
}


#line 1175  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static bool ldv_schedule_work_101(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1179 
  tmp = ldv_emg_schedule_work(work);
  
#line 1179 
  __retres = tmp != 0;
  
#line 1179 
  return __retres;
}


#line 1183  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static bool ldv_schedule_work_102(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1187 
  tmp = ldv_emg_schedule_work(work);
  
#line 1187 
  __retres = tmp != 0;
  
#line 1187 
  return __retres;
}


#line 1191  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static int ldv_mod_timer_103(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1195 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1195 
  return tmp;
}


#line 1199  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static int ldv_mod_timer_104(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1203 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1203 
  return tmp;
}


#line 1207  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_105(spinlock_t *lock)
{
  
#line 1211 
  ldv_spin_model_lock((char *)"NOT_ARG_SIGN");
  
#line 1213 
  spin_lock(lock);
  
#line 1214 
  return;
}


#line 1217  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_106(spinlock_t *lock)
{
  
#line 1221 
  ldv_spin_model_unlock((char *)"NOT_ARG_SIGN");
  
#line 1223 
  spin_unlock(lock);
  
#line 1224 
  return;
}


#line 1227  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_107(spinlock_t *lock)
{
  
#line 1231 
  ldv_spin_model_lock((char *)"rx_inuse_lock_of_cas");
  
#line 1233 
  spin_lock(lock);
  
#line 1234 
  return;
}


#line 1237  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_108(spinlock_t *lock)
{
  
#line 1241 
  ldv_spin_model_unlock((char *)"rx_inuse_lock_of_cas");
  
#line 1243 
  spin_unlock(lock);
  
#line 1244 
  return;
}


#line 1247  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_109(spinlock_t *lock)
{
  
#line 1251 
  ldv_spin_model_lock((char *)"NOT_ARG_SIGN");
  
#line 1253 
  spin_lock(lock);
  
#line 1254 
  return;
}


#line 1257  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_110(spinlock_t *lock)
{
  
#line 1261 
  ldv_spin_model_unlock((char *)"NOT_ARG_SIGN");
  
#line 1263 
  spin_unlock(lock);
  
#line 1264 
  return;
}


#line 1267  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_111(spinlock_t *lock)
{
  
#line 1271 
  ldv_spin_model_lock((char *)"NOT_ARG_SIGN");
  
#line 1273 
  spin_lock(lock);
  
#line 1274 
  return;
}


#line 1277  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_112(spinlock_t *lock)
{
  
#line 1281 
  ldv_spin_model_unlock((char *)"NOT_ARG_SIGN");
  
#line 1283 
  spin_unlock(lock);
  
#line 1284 
  return;
}


#line 1287  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_113(spinlock_t *lock)
{
  
#line 1291 
  ldv_spin_model_lock((char *)"NOT_ARG_SIGN");
  
#line 1293 
  spin_lock(lock);
  
#line 1294 
  return;
}


#line 1297  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_114(spinlock_t *lock)
{
  
#line 1301 
  ldv_spin_model_unlock((char *)"NOT_ARG_SIGN");
  
#line 1303 
  spin_unlock(lock);
  
#line 1304 
  return;
}


#line 1307  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static bool ldv_schedule_work_115(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1311 
  tmp = ldv_emg_schedule_work(work);
  
#line 1311 
  __retres = tmp != 0;
  
#line 1311 
  return __retres;
}


#line 1315  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_116(spinlock_t *lock)
{
  
#line 1319 
  ldv_spin_model_lock((char *)"NOT_ARG_SIGN");
  
#line 1321 
  spin_lock(lock);
  
#line 1322 
  return;
}


#line 1325  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_117(spinlock_t *lock)
{
  
#line 1329 
  ldv_spin_model_lock((char *)"NOT_ARG_SIGN");
  
#line 1331 
  spin_lock(lock);
  
#line 1332 
  return;
}


#line 1335  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_118(spinlock_t *lock)
{
  
#line 1339 
  ldv_spin_model_unlock((char *)"NOT_ARG_SIGN");
  
#line 1341 
  spin_unlock(lock);
  
#line 1342 
  return;
}


#line 1345  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_119(spinlock_t *lock)
{
  
#line 1349 
  ldv_spin_model_unlock((char *)"NOT_ARG_SIGN");
  
#line 1351 
  spin_unlock(lock);
  
#line 1352 
  return;
}


#line 1355  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static int ldv_mod_timer_120(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1359 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1359 
  return tmp;
}


#line 1363  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_121(spinlock_t *lock)
{
  
#line 1367 
  ldv_spin_model_lock((char *)"rx_inuse_lock_of_cas");
  
#line 1369 
  spin_lock(lock);
  
#line 1370 
  return;
}


#line 1373  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_122(spinlock_t *lock)
{
  
#line 1377 
  ldv_spin_model_unlock((char *)"rx_inuse_lock_of_cas");
  
#line 1379 
  spin_unlock(lock);
  
#line 1380 
  return;
}


#line 1383  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_123(spinlock_t *lock)
{
  
#line 1387 
  ldv_spin_model_lock((char *)"NOT_ARG_SIGN");
  
#line 1389 
  spin_lock(lock);
  
#line 1390 
  return;
}


#line 1393  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_124(spinlock_t *lock)
{
  
#line 1397 
  ldv_spin_model_unlock((char *)"NOT_ARG_SIGN");
  
#line 1399 
  spin_unlock(lock);
  
#line 1400 
  return;
}


#line 1403  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_125(spinlock_t *lock)
{
  
#line 1407 
  ldv_spin_model_lock((char *)"NOT_ARG_SIGN");
  
#line 1409 
  spin_lock(lock);
  
#line 1410 
  return;
}


#line 1413  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_126(spinlock_t *lock)
{
  
#line 1417 
  ldv_spin_model_unlock((char *)"NOT_ARG_SIGN");
  
#line 1419 
  spin_unlock(lock);
  
#line 1420 
  return;
}


#line 1423  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_127(spinlock_t *lock)
{
  
#line 1427 
  ldv_spin_model_lock((char *)"NOT_ARG_SIGN");
  
#line 1429 
  spin_lock(lock);
  
#line 1430 
  return;
}


#line 1433  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_128(spinlock_t *lock)
{
  
#line 1437 
  ldv_spin_model_unlock((char *)"NOT_ARG_SIGN");
  
#line 1439 
  spin_unlock(lock);
  
#line 1440 
  return;
}


#line 1443  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_129(spinlock_t *lock)
{
  
#line 1447 
  ldv_spin_model_lock((char *)"NOT_ARG_SIGN");
  
#line 1449 
  spin_lock(lock);
  
#line 1450 
  return;
}


#line 1453  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_130(spinlock_t *lock)
{
  
#line 1457 
  ldv_spin_model_unlock((char *)"NOT_ARG_SIGN");
  
#line 1459 
  spin_unlock(lock);
  
#line 1460 
  return;
}


#line 1463  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv___ldv_spin_lock_131(spinlock_t *ldv_func_arg1)
{
  
#line 1467 
  ldv_spin_model_lock((char *)"lock_of_cas");
  
#line 1469 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1470 
  return;
}


#line 1473  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_irqrestore_132(spinlock_t *lock, unsigned long flags)
{
  
#line 1477 
  ldv_spin_model_unlock((char *)"lock_of_cas");
  
#line 1479 
  spin_unlock_irqrestore(lock,flags);
  
#line 1480 
  return;
}


#line 1483  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static bool ldv_schedule_work_133(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1487 
  tmp = ldv_emg_schedule_work(work);
  
#line 1487 
  __retres = tmp != 0;
  
#line 1487 
  return __retres;
}


#line 1491  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv___ldv_spin_lock_134(spinlock_t *ldv_func_arg1)
{
  
#line 1495 
  ldv_spin_model_lock((char *)"NOT_ARG_SIGN");
  
#line 1497 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1498 
  return;
}


#line 1501  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_irqrestore_135(spinlock_t *lock, unsigned long flags)
{
  
#line 1505 
  ldv_spin_model_unlock((char *)"NOT_ARG_SIGN");
  
#line 1507 
  spin_unlock_irqrestore(lock,flags);
  
#line 1508 
  return;
}


#line 1511  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_irqrestore_136(spinlock_t *lock, unsigned long flags)
{
  
#line 1515 
  ldv_spin_model_unlock((char *)"NOT_ARG_SIGN");
  
#line 1517 
  spin_unlock_irqrestore(lock,flags);
  
#line 1518 
  return;
}


#line 1521  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_137(spinlock_t *lock)
{
  
#line 1525 
  ldv_spin_model_lock((char *)"NOT_ARG_SIGN");
  
#line 1527 
  spin_lock(lock);
  
#line 1528 
  return;
}


#line 1531  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_138(spinlock_t *lock)
{
  
#line 1535 
  ldv_spin_model_unlock((char *)"NOT_ARG_SIGN");
  
#line 1537 
  spin_unlock(lock);
  
#line 1538 
  return;
}


#line 1541  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_139(spinlock_t *lock)
{
  
#line 1545 
  ldv_spin_model_lock((char *)"NOT_ARG_SIGN");
  
#line 1547 
  spin_lock(lock);
  
#line 1548 
  return;
}


#line 1551  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_140(spinlock_t *lock)
{
  
#line 1555 
  ldv_spin_model_unlock((char *)"NOT_ARG_SIGN");
  
#line 1557 
  spin_unlock(lock);
  
#line 1558 
  return;
}


#line 1561  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static int ldv_del_timer_sync_141(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 1565 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 1565 
  return tmp;
}


#line 1569  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv___ldv_spin_lock_142(spinlock_t *ldv_func_arg1)
{
  
#line 1573 
  ldv_spin_model_lock((char *)"lock_of_cas");
  
#line 1575 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1576 
  return;
}


#line 1579  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_irqrestore_143(spinlock_t *lock, unsigned long flags)
{
  
#line 1583 
  ldv_spin_model_unlock((char *)"lock_of_cas");
  
#line 1585 
  spin_unlock_irqrestore(lock,flags);
  
#line 1586 
  return;
}


#line 1589  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static bool ldv_schedule_work_144(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1593 
  tmp = ldv_emg_schedule_work(work);
  
#line 1593 
  __retres = tmp != 0;
  
#line 1593 
  return __retres;
}


#line 1597  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static bool ldv_flush_work_145(struct work_struct *ldv_func_arg1)
{
  bool __retres;
  bool tmp;
  
#line 1601 
  tmp = ldv_emg_flush_work(ldv_func_arg1);
  
#line 1601 
  __retres = tmp != 0;
  
#line 1601 
  return __retres;
}


#line 1605  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv___ldv_spin_lock_146(spinlock_t *ldv_func_arg1)
{
  
#line 1609 
  ldv_spin_model_lock((char *)"lock_of_cas");
  
#line 1611 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1612 
  return;
}


#line 1615  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_irqrestore_147(spinlock_t *lock, unsigned long flags)
{
  
#line 1619 
  ldv_spin_model_unlock((char *)"lock_of_cas");
  
#line 1621 
  spin_unlock_irqrestore(lock,flags);
  
#line 1622 
  return;
}


#line 1625  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv___ldv_spin_lock_148(spinlock_t *ldv_func_arg1)
{
  
#line 1629 
  ldv_spin_model_lock((char *)"lock_of_cas");
  
#line 1631 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1632 
  return;
}


#line 1635  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static bool ldv_schedule_work_149(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1639 
  tmp = ldv_emg_schedule_work(work);
  
#line 1639 
  __retres = tmp != 0;
  
#line 1639 
  return __retres;
}


#line 1643  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static int ldv_mod_timer_150(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1647 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1647 
  return tmp;
}


#line 1651  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_irqrestore_151(spinlock_t *lock, unsigned long flags)
{
  
#line 1655 
  ldv_spin_model_unlock((char *)"lock_of_cas");
  
#line 1657 
  spin_unlock_irqrestore(lock,flags);
  
#line 1658 
  return;
}


#line 1661  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_mutex_lock_152(struct mutex *ldv_func_arg1)
{
  
#line 1665 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"pm_mutex_of_cas");
  
#line 1666 
  return;
}


#line 1669  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv___ldv_spin_lock_153(spinlock_t *ldv_func_arg1)
{
  
#line 1673 
  ldv_spin_model_lock((char *)"lock_of_cas");
  
#line 1675 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1676 
  return;
}


#line 1679  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_irqrestore_154(spinlock_t *lock, unsigned long flags)
{
  
#line 1683 
  ldv_spin_model_unlock((char *)"lock_of_cas");
  
#line 1685 
  spin_unlock_irqrestore(lock,flags);
  
#line 1686 
  return;
}


#line 1689  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static int ldv_request_irq_155(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1693 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1693 
  return tmp;
}


#line 1697  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv___ldv_spin_lock_156(spinlock_t *ldv_func_arg1)
{
  
#line 1701 
  ldv_spin_model_lock((char *)"lock_of_cas");
  
#line 1703 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1704 
  return;
}


#line 1707  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_irqrestore_157(spinlock_t *lock, unsigned long flags)
{
  
#line 1711 
  ldv_spin_model_unlock((char *)"lock_of_cas");
  
#line 1713 
  spin_unlock_irqrestore(lock,flags);
  
#line 1714 
  return;
}


#line 1717  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_mutex_unlock_158(struct mutex *ldv_func_arg1)
{
  
#line 1721 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"pm_mutex_of_cas");
  
#line 1722 
  return;
}


#line 1725  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_mutex_unlock_159(struct mutex *ldv_func_arg1)
{
  
#line 1729 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"pm_mutex_of_cas");
  
#line 1730 
  return;
}


#line 1733  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_mutex_lock_160(struct mutex *ldv_func_arg1)
{
  
#line 1737 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"pm_mutex_of_cas");
  
#line 1738 
  return;
}


#line 1741  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv___ldv_spin_lock_161(spinlock_t *ldv_func_arg1)
{
  
#line 1745 
  ldv_spin_model_lock((char *)"lock_of_cas");
  
#line 1747 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1748 
  return;
}


#line 1751  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_irqrestore_162(spinlock_t *lock, unsigned long flags)
{
  
#line 1755 
  ldv_spin_model_unlock((char *)"lock_of_cas");
  
#line 1757 
  spin_unlock_irqrestore(lock,flags);
  
#line 1758 
  return;
}


#line 1761  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_free_irq_163(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1765 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1766 
  return;
}


#line 1769  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_mutex_unlock_164(struct mutex *ldv_func_arg1)
{
  
#line 1773 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"pm_mutex_of_cas");
  
#line 1774 
  return;
}


#line 1777  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv___ldv_spin_lock_165(spinlock_t *ldv_func_arg1)
{
  
#line 1781 
  ldv_spin_model_lock((char *)"lock_of_cas");
  
#line 1783 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1784 
  return;
}


#line 1787  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_irqrestore_166(spinlock_t *lock, unsigned long flags)
{
  
#line 1791 
  ldv_spin_model_unlock((char *)"lock_of_cas");
  
#line 1793 
  spin_unlock_irqrestore(lock,flags);
  
#line 1794 
  return;
}


#line 1797  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv___ldv_spin_lock_167(spinlock_t *ldv_func_arg1)
{
  
#line 1801 
  ldv_spin_model_lock((char *)"NOT_ARG_SIGN");
  
#line 1803 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1804 
  return;
}


#line 1807  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_168(spinlock_t *lock)
{
  
#line 1811 
  ldv_spin_model_lock((char *)"NOT_ARG_SIGN");
  
#line 1813 
  spin_lock(lock);
  
#line 1814 
  return;
}


#line 1817  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_169(spinlock_t *lock)
{
  
#line 1821 
  ldv_spin_model_unlock((char *)"NOT_ARG_SIGN");
  
#line 1823 
  spin_unlock(lock);
  
#line 1824 
  return;
}


#line 1827  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_lock_170(spinlock_t *lock)
{
  
#line 1831 
  ldv_spin_model_lock((char *)"NOT_ARG_SIGN");
  
#line 1833 
  spin_lock(lock);
  
#line 1834 
  return;
}


#line 1837  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_171(spinlock_t *lock)
{
  
#line 1841 
  ldv_spin_model_unlock((char *)"NOT_ARG_SIGN");
  
#line 1843 
  spin_unlock(lock);
  
#line 1844 
  return;
}


#line 1847  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_irqrestore_172(spinlock_t *lock, unsigned long flags)
{
  
#line 1851 
  ldv_spin_model_unlock((char *)"NOT_ARG_SIGN");
  
#line 1853 
  spin_unlock_irqrestore(lock,flags);
  
#line 1854 
  return;
}


#line 1857  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv___ldv_spin_lock_173(spinlock_t *ldv_func_arg1)
{
  
#line 1861 
  ldv_spin_model_lock((char *)"lock_of_cas");
  
#line 1863 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1864 
  return;
}


#line 1867  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_irqrestore_174(spinlock_t *lock, unsigned long flags)
{
  
#line 1871 
  ldv_spin_model_unlock((char *)"lock_of_cas");
  
#line 1873 
  spin_unlock_irqrestore(lock,flags);
  
#line 1874 
  return;
}


#line 1877  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv___ldv_spin_lock_175(spinlock_t *ldv_func_arg1)
{
  
#line 1881 
  ldv_spin_model_lock((char *)"lock_of_cas");
  
#line 1883 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1884 
  return;
}


#line 1887  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_irqrestore_176(spinlock_t *lock, unsigned long flags)
{
  
#line 1891 
  ldv_spin_model_unlock((char *)"lock_of_cas");
  
#line 1893 
  spin_unlock_irqrestore(lock,flags);
  
#line 1894 
  return;
}


#line 1897  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv___ldv_spin_lock_177(spinlock_t *ldv_func_arg1)
{
  
#line 1901 
  ldv_spin_model_lock((char *)"lock_of_cas");
  
#line 1903 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1904 
  return;
}


#line 1907  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_irqrestore_178(spinlock_t *lock, unsigned long flags)
{
  
#line 1911 
  ldv_spin_model_unlock((char *)"lock_of_cas");
  
#line 1913 
  spin_unlock_irqrestore(lock,flags);
  
#line 1914 
  return;
}


#line 1917  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv___ldv_spin_lock_179(spinlock_t *ldv_func_arg1)
{
  
#line 1921 
  ldv_spin_model_lock((char *)"lock_of_cas");
  
#line 1923 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1924 
  return;
}


#line 1927  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_irqrestore_180(spinlock_t *lock, unsigned long flags)
{
  
#line 1931 
  ldv_spin_model_unlock((char *)"lock_of_cas");
  
#line 1933 
  spin_unlock_irqrestore(lock,flags);
  
#line 1934 
  return;
}


#line 1937  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_mutex_lock_181(struct mutex *ldv_func_arg1)
{
  
#line 1941 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"pm_mutex_of_cas");
  
#line 1942 
  return;
}


#line 1945  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv___ldv_spin_lock_182(spinlock_t *ldv_func_arg1)
{
  
#line 1949 
  ldv_spin_model_lock((char *)"lock_of_cas");
  
#line 1951 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1952 
  return;
}


#line 1955  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_irqrestore_183(spinlock_t *lock, unsigned long flags)
{
  
#line 1959 
  ldv_spin_model_unlock((char *)"lock_of_cas");
  
#line 1961 
  spin_unlock_irqrestore(lock,flags);
  
#line 1962 
  return;
}


#line 1965  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv___ldv_spin_lock_184(spinlock_t *ldv_func_arg1)
{
  
#line 1969 
  ldv_spin_model_lock((char *)"lock_of_cas");
  
#line 1971 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1972 
  return;
}


#line 1975  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_irqrestore_185(spinlock_t *lock, unsigned long flags)
{
  
#line 1979 
  ldv_spin_model_unlock((char *)"lock_of_cas");
  
#line 1981 
  spin_unlock_irqrestore(lock,flags);
  
#line 1982 
  return;
}


#line 1985  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_mutex_unlock_186(struct mutex *ldv_func_arg1)
{
  
#line 1989 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"pm_mutex_of_cas");
  
#line 1990 
  return;
}


#line 1993  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_187(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 1997 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1997 
  return tmp;
}


#line 2001  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static int ldv_register_netdev_188(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 2005 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 2005 
  return tmp;
}


#line 2009  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_mutex_lock_189(struct mutex *ldv_func_arg1)
{
  
#line 2013 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"pm_mutex_of_cas");
  
#line 2014 
  return;
}


#line 2017  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_mutex_unlock_190(struct mutex *ldv_func_arg1)
{
  
#line 2021 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"pm_mutex_of_cas");
  
#line 2022 
  return;
}


#line 2025  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_free_netdev_191(struct net_device *ldv_func_arg1)
{
  
#line 2029 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 2030 
  return;
}


#line 2033  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_unregister_netdev_192(struct net_device *ldv_func_arg1)
{
  
#line 2037 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 2038 
  return;
}


#line 2041  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_mutex_lock_193(struct mutex *ldv_func_arg1)
{
  
#line 2045 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"pm_mutex_of_cas");
  
#line 2046 
  return;
}


#line 2049  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_mutex_unlock_194(struct mutex *ldv_func_arg1)
{
  
#line 2053 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"pm_mutex_of_cas");
  
#line 2054 
  return;
}


#line 2057  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_free_netdev_195(struct net_device *ldv_func_arg1)
{
  
#line 2061 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 2062 
  return;
}


#line 2065  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_mutex_lock_196(struct mutex *ldv_func_arg1)
{
  
#line 2069 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"pm_mutex_of_cas");
  
#line 2070 
  return;
}


#line 2073  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv___ldv_spin_lock_197(spinlock_t *ldv_func_arg1)
{
  
#line 2077 
  ldv_spin_model_lock((char *)"lock_of_cas");
  
#line 2079 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 2080 
  return;
}


#line 2083  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_irqrestore_198(spinlock_t *lock, unsigned long flags)
{
  
#line 2087 
  ldv_spin_model_unlock((char *)"lock_of_cas");
  
#line 2089 
  spin_unlock_irqrestore(lock,flags);
  
#line 2090 
  return;
}


#line 2093  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_mutex_unlock_199(struct mutex *ldv_func_arg1)
{
  
#line 2097 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"pm_mutex_of_cas");
  
#line 2098 
  return;
}


#line 2101  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_mutex_lock_200(struct mutex *ldv_func_arg1)
{
  
#line 2105 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"pm_mutex_of_cas");
  
#line 2106 
  return;
}


#line 2109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv___ldv_spin_lock_201(spinlock_t *ldv_func_arg1)
{
  
#line 2113 
  ldv_spin_model_lock((char *)"lock_of_cas");
  
#line 2115 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 2116 
  return;
}


#line 2119  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_spin_unlock_irqrestore_202(spinlock_t *lock, unsigned long flags)
{
  
#line 2123 
  ldv_spin_model_unlock((char *)"lock_of_cas");
  
#line 2125 
  spin_unlock_irqrestore(lock,flags);
  
#line 2126 
  return;
}


#line 2129  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_mutex_unlock_203(struct mutex *ldv_func_arg1)
{
  
#line 2133 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"pm_mutex_of_cas");
  
#line 2134 
  return;
}


#line 2137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static int ldv___pci_register_driver_204(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 2141 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 2141 
  return tmp;
}


#line 2145  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/weaver/.tmp_cassini.c.aux"
static void ldv_pci_unregister_driver_205(struct pci_driver *ldv_func_arg1)
{
  
#line 2149 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 2150 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 28 
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 78  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_5_1(struct net_device *arg0);


#line 80 
void ldv_dispatch_register_9_4(struct net_device *arg0);


#line 82 
int main(void);


#line 83 
void *ldv_timer_scenario_17(void *arg0);


#line 85 
void ldv_dispatch_instance_register_3_3(struct timer_list *arg0);


#line 89 
void ldv_dispatch_irq_register_13_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 90 
void ldv_dispatch_deregister_8_1(struct pci_driver *arg0);


#line 91 
void *ldv_pci_scenario_16(void *arg0);


#line 92 
void ldv_dispatch_register_10_3(struct pci_driver *arg0);


#line 93 
void ldv_dispatch_irq_deregister_6_1(int arg0);


#line 94 
void *ldv_initialization_1(void *arg0);


#line 97 
void ldv_dispatch_instance_deregister_12_1(struct timer_list *arg0);


#line 99 
void *ldv_random_allocationless_scenario_15(void *arg0);


#line 102 
void *ldv_interrupt_scenario_14(void *arg0);


#line 106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_17;

#line 107  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_15;

#line 108  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_16;

#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_14;

#line 113  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_5_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_15 *cf_arg_15;
  int tmp;
  
#line 116 
  tmp = ldv_undef_int();
  
#line 116 
  switch (tmp) {
    case 0: 
#line 117 
    ;
    
#line 118 
    ret = pthread_join(ldv_thread_15,(void **)0);
    
#line 119 
    __VERIFIER_assume(ret == 0);
    
#line 120 
    goto ldv_44715;
    default: 
#line 122 
    ;
    
#line 122 
    __VERIFIER_assume(0);
  }
  ldv_44715: 
#line 123 
  ;
  
#line 124 
  return;
}


#line 128  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_del_timer_sync(struct timer_list *arg0)
{
  int __retres;
  struct timer_list *ldv_12_timer_list;
  
#line 134 
  ldv_12_timer_list = arg0;
  
#line 138 
  ldv_dispatch_instance_deregister_12_1(ldv_12_timer_list);
  
#line 139 
  ;
  
#line 139 
  __retres = 0;
  
#line 139 
  return __retres;
}


#line 147  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_9_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_15 *cf_arg_15;
  int tmp;
  
#line 150 
  tmp = ldv_undef_int();
  
#line 150 
  switch (tmp) {
    case 0: 
#line 151 
    ;
    
#line 152 
    cf_arg_15 = (struct ldv_struct_random_allocationless_scenario_15 *)ldv_xmalloc(16UL);
    
#line 153 
    cf_arg_15->arg0 = arg0;
    
#line 154 
    ret = pthread_create(& ldv_thread_15,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_15,(void *)cf_arg_15);
    
#line 155 
    __VERIFIER_assume(ret == 0);
    
#line 156 
    goto ldv_44727;
    default: 
#line 158 
    ;
    
#line 158 
    __VERIFIER_assume(0);
  }
  ldv_44727: 
#line 159 
  ;
  
#line 160 
  return;
}


#line 164  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 167 
  struct pci_driver *ldv_10_pci_driver = ldv_emg_alias_cas_driver_2;
  
#line 171 
  tmp_0 = ldv_undef_int();
  
#line 171 
  if (tmp_0 != 0) {
    
#line 173 
    ldv_10_pci_driver = arg0;
    
#line 177 
    ldv_dispatch_register_10_3(ldv_10_pci_driver);
    
#line 181 
    __retres = 0;
    
#line 181 
    goto return_label;
  }
  else {
    int tmp;
    
#line 188 
    tmp = ldv_undef_int_negative();
    
#line 188 
    __retres = tmp;
    
#line 188 
    goto return_label;
  }
  return_label: 
#line 171 
                return __retres;
}


#line 198  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 201 
  ldv_initialize();
  
#line 204 
  ldv_initialization_1((void *)0);
  
#line 206 
  __retres = 0;
  
#line 206 
  return __retres;
}


#line 211  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_timer_scenario_17(void *arg0)
{
  void *__retres;
  struct timer_list *ldv_17_container;
  
#line 216 
  struct ldv_struct_timer_scenario_17 *data = (struct ldv_struct_timer_scenario_17 *)arg0;
  
#line 221 
  if (data != (struct ldv_struct_timer_scenario_17 *)0) {
    
#line 222 
    ldv_17_container = data->arg0;
    
#line 223 
    ldv_free((void *)data);
  }
  else ;
  
#line 228 
  if (ldv_17_container->function != (void (*)(unsigned long ))0) {
    
#line 230 
    ldv_switch_to_interrupt_context();
    
#line 232 
    (*(ldv_17_container->function))(ldv_17_container->data);
    
#line 234 
    ldv_switch_to_process_context();
  }
  else ;
  
#line 243 
  __retres = (void *)0;
  
#line 243 
  goto return_label;
  
#line 245 
  __retres = (void *)0;
  return_label: 
#line 245 
                return __retres;
}


#line 250  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_4_netdev;
  int tmp_0;
  
#line 257 
  tmp_0 = ldv_undef_int();
  
#line 257 
  if (tmp_0 != 0) {
    
#line 259 
    ldv_4_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 263 
    __retres = ldv_4_netdev;
    
#line 263 
    goto return_label;
  }
  else {
    
#line 270 
    __retres = (struct net_device *)0;
    
#line 270 
    goto return_label;
  }
  return_label: 
#line 257 
                return __retres;
}


#line 280  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_register_3_3(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_17 *cf_arg_17;
  int tmp;
  
#line 283 
  tmp = ldv_undef_int();
  
#line 283 
  switch (tmp) {
    case 0: 
#line 284 
    ;
    
#line 285 
    cf_arg_17 = (struct ldv_struct_timer_scenario_17 *)ldv_xmalloc(16UL);
    
#line 286 
    cf_arg_17->arg0 = arg0;
    
#line 287 
    ret = pthread_create(& ldv_thread_17,(pthread_attr_t const *)0,& ldv_timer_scenario_17,(void *)cf_arg_17);
    
#line 288 
    __VERIFIER_assume(ret == 0);
    
#line 289 
    goto ldv_44755;
    default: 
#line 291 
    ;
    
#line 291 
    __VERIFIER_assume(0);
  }
  ldv_44755: 
#line 292 
  ;
  
#line 293 
  return;
}


#line 297  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_13_line;
  void *ldv_13_data;
  enum irqreturn (*ldv_13_thread)(int , void *);
  int tmp_0;
  
#line 302 
  enum irqreturn (*ldv_13_callback)(int , void *) = & ldv_emg_wrapper_cas_interrupt_2;
  
#line 307 
  tmp_0 = ldv_undef_int();
  
#line 307 
  if (tmp_0 != 0) {
    
#line 309 
    ldv_13_line = (int)arg0;
    
#line 310 
    ldv_13_callback = arg1;
    
#line 311 
    ldv_13_thread = (enum irqreturn (*)(int , void *))0;
    
#line 312 
    ldv_13_data = arg4;
    
#line 316 
    ldv_dispatch_irq_register_13_3(ldv_13_line,ldv_13_callback,ldv_13_thread,ldv_13_data);
    
#line 320 
    __retres = 0;
    
#line 320 
    goto return_label;
  }
  else {
    int tmp;
    
#line 327 
    tmp = ldv_undef_int_negative();
    
#line 327 
    __retres = tmp;
    
#line 327 
    goto return_label;
  }
  return_label: 
#line 307 
                return __retres;
}


#line 337  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_schedule_work(struct work_struct *arg0)
{
  _Bool __retres;
  struct work_struct *ldv_11_work_struct;
  int tmp;
  
#line 344 
  tmp = ldv_undef_int();
  
#line 344 
  if (tmp != 0) {
    
#line 346 
    ldv_11_work_struct = arg0;
    
#line 350 
    if (ldv_11_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 352 
      (*(ldv_11_work_struct->func))(ldv_11_work_struct); else ;
    
#line 357 
    __retres = (_Bool)1;
    
#line 357 
    goto return_label;
  }
  else {
    
#line 364 
    __retres = (_Bool)0;
    
#line 364 
    goto return_label;
  }
  return_label: 
#line 344 
                return __retres;
}


#line 374  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 381 
  ldv_1_ret = ldv_emg_cas_init();
  
#line 382 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 385 
  tmp = ldv_undef_int();
  
#line 385 
  if (tmp != 0) {
    
#line 387 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 391 
    __retres = (void *)0;
    
#line 391 
    goto return_label;
  }
  else {
    
#line 395 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 400 
    ldv_emg_cas_cleanup();
    
#line 404 
    __retres = (void *)0;
    
#line 404 
    goto return_label;
  }
  
#line 407 
  __retres = (void *)0;
  return_label: 
#line 407 
                return __retres;
}


#line 412  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_13_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_14 *cf_arg_14;
  int tmp;
  
#line 415 
  tmp = ldv_undef_int();
  
#line 415 
  switch (tmp) {
    case 0: 
#line 416 
    ;
    
#line 417 
    cf_arg_14 = (struct ldv_struct_interrupt_scenario_14 *)ldv_xmalloc(32UL);
    
#line 418 
    cf_arg_14->arg0 = arg0;
    
#line 419 
    cf_arg_14->arg1 = arg1;
    
#line 420 
    cf_arg_14->arg2 = arg2;
    
#line 421 
    cf_arg_14->arg3 = arg3;
    
#line 422 
    ret = pthread_create(& ldv_thread_14,(pthread_attr_t const *)0,& ldv_interrupt_scenario_14,(void *)cf_arg_14);
    
#line 423 
    __VERIFIER_assume(ret == 0);
    
#line 424 
    goto ldv_44795;
    default: 
#line 426 
    ;
    
#line 426 
    __VERIFIER_assume(0);
  }
  ldv_44795: 
#line 427 
  ;
  
#line 428 
  return;
}


#line 432  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_8_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_16 *cf_arg_16;
  int tmp;
  
#line 435 
  tmp = ldv_undef_int();
  
#line 435 
  switch (tmp) {
    case 0: 
#line 436 
    ;
    
#line 437 
    ret = pthread_join(ldv_thread_16,(void **)0);
    
#line 438 
    __VERIFIER_assume(ret == 0);
    
#line 439 
    goto ldv_44803;
    default: 
#line 441 
    ;
    
#line 441 
    __VERIFIER_assume(0);
  }
  ldv_44803: 
#line 442 
  ;
  
#line 443 
  return;
}


#line 447  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 450 
  struct pci_driver *ldv_8_pci_driver = ldv_emg_alias_cas_driver_2;
  
#line 453 
  ldv_8_pci_driver = arg0;
  
#line 457 
  ldv_dispatch_deregister_8_1(ldv_8_pci_driver);
  
#line 461 
  goto return_label;
  return_label: 
#line 463 
                return;
}


#line 468  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_16(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_16_resource_1;
  struct pci_device_id *ldv_16_ldv_param_1_2;
  struct pm_message ldv_16_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 473 
  struct pci_driver *ldv_16_container = ldv_emg_alias_cas_driver_2;
  
#line 474 
  int ldv_16_ret = ldv_undef_int();
  
#line 477 
  struct ldv_struct_pci_scenario_16 *data = (struct ldv_struct_pci_scenario_16 *)arg0;
  
#line 481 
  ldv_16_ret = ldv_undef_int();
  
#line 484 
  if (data != (struct ldv_struct_pci_scenario_16 *)0) {
    
#line 485 
    ldv_16_container = data->arg0;
    
#line 486 
    ldv_free((void *)data);
  }
  else ;
  
#line 497 
  goto ldv_main_16;
  
#line 499 
  __retres = (void *)0;
  
#line 499 
  goto return_label;
  ldv_main_16: 
#line 502 
  ;
  
#line 505 
  tmp_2 = ldv_undef_int();
  
#line 505 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 507 
    ldv_16_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 512 
    ldv_pre_probe();
    
#line 514 
    ldv_16_ret = ldv_emg_wrapper_cas_init_one_2(ldv_16_resource_1,ldv_16_ldv_param_1_2);
    
#line 516 
    ldv_16_ret = ldv_post_probe(ldv_16_ret);
    
#line 520 
    ldv_free((void *)ldv_16_ldv_param_1_2);
    
#line 523 
    tmp_1 = ldv_undef_int();
    
#line 523 
    if (tmp_1 != 0) {
      
#line 525 
      __VERIFIER_assume(ldv_16_ret == 0);
      
#line 532 
      goto ldv_call_16;
    }
    else {
      
#line 536 
      __VERIFIER_assume(ldv_16_ret != 0);
      
#line 543 
      goto ldv_main_16;
    }
  }
  else {
    
#line 555 
    __retres = (void *)0;
    
#line 555 
    goto return_label;
  }
  
#line 558 
  __retres = (void *)0;
  
#line 558 
  goto return_label;
  ldv_call_16: 
#line 561 
  ;
  
#line 564 
  tmp_3 = ldv_undef_int();
  
#line 564 
  switch (tmp_3) {
    case 1: 
#line 565 
    ;
    
#line 574 
    goto ldv_call_16;
    case 2: 
#line 577 
    ;
    
#line 580 
    ldv_16_ret = ldv_emg_wrapper_cas_suspend_3(ldv_16_resource_1,ldv_16_resource_0);
    
#line 582 
    ldv_16_ret = ldv_filter_err_code(ldv_16_ret);
    
#line 586 
    if (ldv_16_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 588 
      ldv_16_ret = (*(ldv_16_container->suspend_late))(ldv_16_resource_1,ldv_16_resource_0);
      
#line 590 
      ldv_16_ret = ldv_filter_err_code(ldv_16_ret);
    }
    else 
#line 592 
         ldv_16_ret = ldv_undef_int();
    
#line 597 
    if (ldv_16_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 599 
      (*(ldv_16_container->resume_early))(ldv_16_resource_1); else ;
    
#line 605 
    ldv_emg_wrapper_cas_resume_5(ldv_16_resource_1);
    
#line 612 
    goto ldv_call_16;
    case 3: 
#line 615 
    ;
    
#line 617 
    if (ldv_16_container->shutdown != (void (*)(struct pci_dev *))0) 
      
#line 619 
      (*(ldv_16_container->shutdown))(ldv_16_resource_1); else ;
    
#line 625 
    ldv_emg_wrapper_cas_remove_one_4(ldv_16_resource_1);
    
#line 632 
    goto ldv_main_16;
    default: 
#line 635 
    ;
    
#line 635 
    __VERIFIER_assume(0);
  }
  
#line 638 
  __retres = (void *)0;
  return_label: 
#line 638 
                return __retres;
}


#line 643  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_6_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_6 *cf_arg_14;
  int tmp;
  
#line 646 
  tmp = ldv_undef_int();
  
#line 646 
  switch (tmp) {
    case 0: 
#line 647 
    ;
    
#line 648 
    ret = pthread_join(ldv_thread_14,(void **)0);
    
#line 649 
    __VERIFIER_assume(ret == 0);
    
#line 650 
    goto ldv_44830;
    default: 
#line 652 
    ;
    
#line 652 
    __VERIFIER_assume(0);
  }
  ldv_44830: 
#line 653 
  ;
  
#line 654 
  return;
}


#line 658  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_10_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_16 *cf_arg_16;
  int tmp;
  
#line 661 
  tmp = ldv_undef_int();
  
#line 661 
  switch (tmp) {
    case 0: 
#line 662 
    ;
    
#line 663 
    cf_arg_16 = (struct ldv_struct_pci_scenario_16 *)ldv_xmalloc(16UL);
    
#line 664 
    cf_arg_16->arg0 = arg0;
    
#line 665 
    ret = pthread_create(& ldv_thread_16,(pthread_attr_t const *)0,& ldv_pci_scenario_16,(void *)cf_arg_16);
    
#line 666 
    __VERIFIER_assume(ret == 0);
    
#line 667 
    goto ldv_44838;
    default: 
#line 669 
    ;
    
#line 669 
    __VERIFIER_assume(0);
  }
  ldv_44838: 
#line 670 
  ;
  
#line 671 
  return;
}


#line 675  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_5_netdev;
  
#line 681 
  ldv_5_netdev = arg0;
  
#line 686 
  ldv_emg_wrapper_cas_close_2(ldv_5_netdev);
  
#line 690 
  ldv_dispatch_deregister_5_1(ldv_5_netdev);
  
#line 694 
  goto return_label;
  return_label: 
#line 696 
                return;
}


#line 701  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_6_line;
  
#line 707 
  ldv_6_line = (int)arg0;
  
#line 711 
  ldv_dispatch_irq_deregister_6_1(ldv_6_line);
  
#line 715 
  goto return_label;
  return_label: 
#line 717 
                return;
}


#line 722  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_deregister_12_1(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_17 *cf_arg_17;
  int tmp;
  
#line 725 
  tmp = ldv_undef_int();
  
#line 725 
  switch (tmp) {
    case 0: 
#line 726 
    ;
    
#line 727 
    ret = pthread_join(ldv_thread_17,(void **)0);
    
#line 728 
    __VERIFIER_assume(ret == 0);
    
#line 729 
    goto ldv_44855;
    default: 
#line 731 
    ;
    
#line 731 
    __VERIFIER_assume(0);
  }
  ldv_44855: 
#line 732 
  ;
  
#line 733 
  return;
}


#line 737  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1)
{
  int __retres;
  struct timer_list *ldv_3_timer_list;
  int tmp_0;
  
#line 744 
  tmp_0 = ldv_undef_int();
  
#line 744 
  if (tmp_0 != 0) {
    
#line 746 
    ldv_3_timer_list = arg0;
    
#line 750 
    ldv_dispatch_instance_register_3_3(ldv_3_timer_list);
    
#line 754 
    __retres = 0;
    
#line 754 
    goto return_label;
  }
  else {
    int tmp;
    
#line 761 
    tmp = ldv_undef_int_negative();
    
#line 761 
    __retres = tmp;
    
#line 761 
    goto return_label;
  }
  return_label: 
#line 744 
                return __retres;
}


#line 771  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_15(void *arg0)
{
  void *__retres;
  struct ethtool_regs *ldv_15_ldv_param_1_12;
  struct sk_buff *ldv_15_ldv_param_0_17;
  int ldv_15_ldv_param_1_3;
  void *ldv_15_ldv_param_1_10;
  unsigned int ldv_15_ldv_param_1_15;
  struct ifreq *ldv_15_ldv_param_1_6;
  struct ethtool_stats *ldv_15_ldv_param_1_8;
  struct ethtool_cmd *ldv_15_ldv_param_1_2;
  unsigned int ldv_15_ldv_param_1_4;
  int ldv_15_ldv_param_1_5;
  struct ethtool_cmd *ldv_15_ldv_param_1_11;
  int ldv_15_ldv_param_2_7;
  void *ldv_15_ldv_param_2_13;
  struct net_device *ldv_15_container;
  unsigned long long *ldv_15_ldv_param_2_9;
  unsigned char *ldv_15_ldv_param_2_16;
  struct ethtool_drvinfo *ldv_15_ldv_param_1_14;
  int tmp_9;
  
#line 792 
  struct ldv_struct_random_allocationless_scenario_15 *data = (struct ldv_struct_random_allocationless_scenario_15 *)arg0;
  
#line 797 
  if (data != (struct ldv_struct_random_allocationless_scenario_15 *)0) {
    
#line 798 
    ldv_15_container = data->arg0;
    
#line 799 
    ldv_free((void *)data);
  }
  else ;
  
#line 807 
  goto ldv_call_15;
  
#line 809 
  __retres = (void *)0;
  
#line 809 
  goto return_label;
  ldv_call_15: 
#line 812 
  ;
  
#line 815 
  tmp_9 = ldv_undef_int();
  
#line 815 
  if (tmp_9 != 0) {
    int tmp_0;
    
#line 817 
    ldv_15_ldv_param_1_2 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
    
#line 820 
    tmp_0 = ldv_undef_int();
    
#line 820 
    switch (tmp_0) {
      case 1: 
#line 821 
      ;
      
#line 824 
      ldv_emg_wrapper_cas_get_settings_2(ldv_15_container,ldv_15_ldv_param_1_2);
      
#line 827 
      goto ldv_44885;
      case 2: 
#line 829 
      ;
      
#line 832 
      ldv_emg_wrapper_cas_set_multicast_22(ldv_15_container);
      
#line 835 
      goto ldv_44885;
      case 3: 
#line 837 
      ;
      
#line 840 
      ldv_emg_wrapper_cas_netpoll_12(ldv_15_container);
      
#line 843 
      goto ldv_44885;
      case 4: 
#line 845 
      ;
      
#line 847 
      ldv_15_ldv_param_0_17 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 852 
      ldv_emg_wrapper_cas_start_xmit_20(ldv_15_ldv_param_0_17,ldv_15_container);
      
#line 856 
      ldv_free((void *)ldv_15_ldv_param_0_17);
      
#line 859 
      goto ldv_44885;
      case 5: 
#line 861 
      ;
      
#line 864 
      ldv_emg_wrapper_cas_get_msglevel_19(ldv_15_container);
      
#line 867 
      goto ldv_44885;
      case 6: 
#line 869 
      ;
      
#line 872 
      ldv_emg_wrapper_cas_get_regs_len_18(ldv_15_container);
      
#line 875 
      goto ldv_44885;
      case 7: 
#line 877 
      ;
      
#line 879 
      ldv_15_ldv_param_2_16 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 884 
      ldv_emg_wrapper_cas_get_strings_5(ldv_15_container,ldv_15_ldv_param_1_15,ldv_15_ldv_param_2_16);
      
#line 888 
      ldv_free((void *)ldv_15_ldv_param_2_16);
      
#line 891 
      goto ldv_44885;
      case 8: 
#line 893 
      ;
      
#line 896 
      ldv_emg_wrapper_cas_nway_reset_16(ldv_15_container);
      
#line 899 
      goto ldv_44885;
      case 9: 
#line 901 
      ;
      
#line 904 
      ldv_emg_wrapper_cas_get_stats_15(ldv_15_container);
      
#line 907 
      goto ldv_44885;
      case 10: 
#line 909 
      ;
      
#line 911 
      ldv_15_ldv_param_1_14 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 916 
      ldv_emg_wrapper_cas_get_drvinfo_14(ldv_15_container,ldv_15_ldv_param_1_14);
      
#line 920 
      ldv_free((void *)ldv_15_ldv_param_1_14);
      
#line 923 
      goto ldv_44885;
      case 11: 
#line 925 
      ;
      
#line 928 
      ldv_emg_wrapper_cas_tx_timeout_3(ldv_15_container);
      
#line 931 
      goto ldv_44885;
      case 12: 
#line 933 
      ;
      
#line 935 
      ldv_15_ldv_param_1_12 = (struct ethtool_regs *)ldv_xmalloc_unknown_size(0UL);
      
#line 936 
      ldv_15_ldv_param_2_13 = ldv_xmalloc_unknown_size(0UL);
      
#line 941 
      ldv_emg_wrapper_cas_get_regs_11(ldv_15_container,ldv_15_ldv_param_1_12,ldv_15_ldv_param_2_13);
      
#line 945 
      ldv_free((void *)ldv_15_ldv_param_1_12);
      
#line 946 
      ldv_free(ldv_15_ldv_param_2_13);
      
#line 949 
      goto ldv_44885;
      case 13: 
#line 951 
      ;
      
#line 953 
      ldv_15_ldv_param_1_11 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 958 
      ldv_emg_wrapper_cas_set_settings_10(ldv_15_container,ldv_15_ldv_param_1_11);
      
#line 962 
      ldv_free((void *)ldv_15_ldv_param_1_11);
      
#line 965 
      goto ldv_44885;
      case 14: 
#line 967 
      ;
      
#line 970 
      (*ldv_emg_alias_eth_validate_addr_9)(ldv_15_container);
      
#line 973 
      goto ldv_44885;
      case 15: 
#line 975 
      ;
      
#line 977 
      ldv_15_ldv_param_1_10 = ldv_xmalloc_unknown_size(0UL);
      
#line 982 
      (*ldv_emg_alias_eth_mac_addr_21)(ldv_15_container,ldv_15_ldv_param_1_10);
      
#line 986 
      ldv_free(ldv_15_ldv_param_1_10);
      
#line 989 
      goto ldv_44885;
      case 16: 
#line 991 
      ;
      
#line 993 
      ldv_15_ldv_param_1_8 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 994 
      ldv_15_ldv_param_2_9 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 999 
      ldv_emg_wrapper_cas_get_ethtool_stats_8(ldv_15_container,ldv_15_ldv_param_1_8,ldv_15_ldv_param_2_9);
      
#line 1003 
      ldv_free((void *)ldv_15_ldv_param_1_8);
      
#line 1004 
      ldv_free((void *)ldv_15_ldv_param_2_9);
      
#line 1007 
      goto ldv_44885;
      case 17: 
#line 1009 
      ;
      
#line 1011 
      ldv_15_ldv_param_1_6 = (struct ifreq *)ldv_xmalloc_unknown_size(0UL);
      
#line 1016 
      ldv_emg_wrapper_cas_ioctl_7(ldv_15_container,ldv_15_ldv_param_1_6,ldv_15_ldv_param_2_7);
      
#line 1020 
      ldv_free((void *)ldv_15_ldv_param_1_6);
      
#line 1023 
      goto ldv_44885;
      case 18: 
#line 1025 
      ;
      
#line 1031 
      ldv_emg_wrapper_cas_change_mtu_6(ldv_15_container,ldv_15_ldv_param_1_5);
      
#line 1037 
      goto ldv_44885;
      case 19: 
#line 1039 
      ;
      
#line 1045 
      ldv_emg_wrapper_cas_set_msglevel_17(ldv_15_container,ldv_15_ldv_param_1_4);
      
#line 1051 
      goto ldv_44885;
      case 20: 
#line 1053 
      ;
      
#line 1056 
      ldv_emg_wrapper_cas_get_link_4(ldv_15_container);
      
#line 1059 
      goto ldv_44885;
      case 21: 
#line 1061 
      ;
      
#line 1067 
      ldv_emg_wrapper_cas_get_sset_count_13(ldv_15_container,ldv_15_ldv_param_1_3);
      
#line 1073 
      goto ldv_44885;
      default: 
#line 1075 
      ;
      
#line 1075 
      __VERIFIER_assume(0);
    }
    ldv_44885: 
#line 1078 
    ;
    
#line 1078 
    ldv_free((void *)ldv_15_ldv_param_1_2);
    
#line 1085 
    goto ldv_call_15;
  }
  else {
    
#line 1093 
    __retres = (void *)0;
    
#line 1093 
    goto return_label;
  }
  
#line 1096 
  __retres = (void *)0;
  return_label: 
#line 1096 
                return __retres;
}


#line 1101  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_flush_work(struct work_struct *arg0)
{
  _Bool __retres;
  struct work_struct *ldv_7_work_struct;
  int tmp;
  
#line 1108 
  tmp = ldv_undef_int();
  
#line 1108 
  if (tmp != 0) {
    
#line 1110 
    ldv_7_work_struct = arg0;
    
#line 1114 
    if (ldv_7_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 1116 
      (*(ldv_7_work_struct->func))(ldv_7_work_struct); else ;
    
#line 1121 
    __retres = (_Bool)1;
    
#line 1121 
    goto return_label;
  }
  else {
    
#line 1128 
    __retres = (_Bool)0;
    
#line 1128 
    goto return_label;
  }
  return_label: 
#line 1108 
                return __retres;
}


#line 1138  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 1144 
  ldv_2_netdev = arg0;
  
#line 1145 
  ldv_free((void *)ldv_2_netdev);
  
#line 1149 
  goto return_label;
  return_label: 
#line 1151 
                return;
}


#line 1156  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_14(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_14_ret_val;
  int ldv_14_line;
  void *ldv_14_data;
  enum irqreturn (*ldv_14_thread)(int , void *);
  int tmp;
  
#line 1162 
  enum irqreturn (*ldv_14_callback)(int , void *) = & ldv_emg_wrapper_cas_interrupt_2;
  
#line 1165 
  struct ldv_struct_interrupt_scenario_14 *data = (struct ldv_struct_interrupt_scenario_14 *)arg0;
  
#line 1170 
  if (data != (struct ldv_struct_interrupt_scenario_14 *)0) {
    
#line 1171 
    ldv_14_line = data->arg0;
    
#line 1172 
    ldv_14_callback = data->arg1;
    
#line 1173 
    ldv_14_thread = data->arg2;
    
#line 1174 
    ldv_14_data = data->arg3;
    
#line 1175 
    ldv_free((void *)data);
  }
  else ;
  
#line 1181 
  ldv_switch_to_interrupt_context();
  
#line 1183 
  ldv_14_ret_val = ldv_emg_wrapper_cas_interrupt_2(ldv_14_line,ldv_14_data);
  
#line 1185 
  ldv_switch_to_process_context();
  
#line 1188 
  tmp = ldv_undef_int();
  
#line 1188 
  if (tmp != 0) {
    
#line 1190 
    __VERIFIER_assume(ldv_14_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 1194 
    if (ldv_14_thread != (enum irqreturn (*)(int , void *))0) 
#line 1196 
                                                              (*ldv_14_thread)(ldv_14_line,ldv_14_data); else ;
  }
  else 
#line 1203 
       __VERIFIER_assume(ldv_14_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 1212 
  __retres = (void *)0;
  
#line 1212 
  goto return_label;
  
#line 1214 
  __retres = (void *)0;
  return_label: 
#line 1214 
                return __retres;
}


#line 1219  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/sun/cassini.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_9_netdev;
  int tmp_3;
  
#line 1223 
  int ldv_9_ret = ldv_undef_int();
  
#line 1226 
  ldv_9_ret = ldv_undef_int();
  
#line 1229 
  tmp_3 = ldv_undef_int();
  
#line 1229 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 1231 
    ldv_9_netdev = arg0;
    
#line 1236 
    ldv_9_ret = ldv_emg_wrapper_cas_open_2(ldv_9_netdev);
    
#line 1239 
    tmp_1 = ldv_undef_int();
    
#line 1239 
    if (tmp_1 != 0) {
      
#line 1241 
      __VERIFIER_assume(ldv_9_ret == 0);
      
#line 1245 
      ldv_dispatch_register_9_4(ldv_9_netdev);
      
#line 1249 
      __retres = 0;
      
#line 1249 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 1256 
      __VERIFIER_assume(ldv_9_ret != 0);
      
#line 1257 
      ldv_failed_register_netdev();
      
#line 1258 
      tmp_0 = ldv_undef_int_negative();
      
#line 1258 
      __retres = tmp_0;
      
#line 1258 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 1266 
    ldv_failed_register_netdev();
    
#line 1267 
    tmp_2 = ldv_undef_int_negative();
    
#line 1267 
    __retres = tmp_2;
    
#line 1267 
    goto return_label;
  }
  return_label: 
#line 1229 
                return __retres;
}


